run the optimizer
initializes the display
set the width of all columns in the table
recalculates column and row count
fills the table with the rows of the input matrix
sets the rows to the table
recursive search for a node with a given id
remove the timers from the timer tree
sets the time of the time picker
loads the image with the given id from the map
default selection listener
the currently selected package in the tree
selects the item with the given name and package
builds a function object according to the
initialisation of the download limits
builds a string that contains the spatial query string
replaces all instances of the given string with a space after
this method will update the query context in the filter query
q returns the value of this field
set the query
sets the fully qualified name of the query to retrieve data
sets the index of the first row to retrieve
sets the sort field
sets the dir
update the cache with the given entries
update the cache with the given resources
get the fields of the download
returns the string to display to the user
calculates the initial point values for the occurrence
returns the title of the data provider for the given uid
gets the facet name for a given rank
writes a citation to a stream
calculates the total number of species
determines if the given api key is committed or not
given a bbox expression go to the query string
creates a buffered image from the base map file
test that we can store the page over all versions raw
returns the cell id bounding box for the taxon concept
initialises the solr server instance
check if a field is available for indexing
writes out the specified cell
writes the given centi cell to the file
writes a specific centi cell
writes out the ten milli cell
writes out the ten milli cell
writes the given bounding box lat and count to the output stream
close the stream
gets the name of the facet field the field thats defined
lists all the resource webservices in a list
used by spring io c
retrieve a message for the given provider
retrieve a specific provider
show all the resources in a view
checks the latitude
perform sanity checks on a longitude
adds the xml headers
return the url to the annotation document
parse an integer subelement from a string
writes header line
harvest the photo album
get the id for a given lsid
this method searches for a match type
prints some statistics about the match
resets the search so that the next call to
returns the bit value
returns the type of this field
reset the issues for this record
creates a nub
creates a nub for a resource
this method allows to denormalise the taxonomy
takes the given data resource id and denormalise the taxonomy
updates or creates a new identifier record
update the typification record with the contents of the record
update or create a link record
updates the image record if needed
create a log message
sets the date identified string
sets the basis of record
initializes the default kingdoms list of the template
drops all created taxon concepts
start the index on the taxa database with the given id
match missing occurrences records
adds a name to the taxon concept and the language
builds yahoo request out of the request body
get a kml request
checks if a given latitude longitude pair is a marine coordinate
sync to the users disk
sync all geo regions
the init method
check if the given geometry overlaps with a given cell
test the occurrence of a month with a specified date
builds an occurrence record
builds a string that contains the query for the spatial
return a string with the search fields for the uid
returns the query string that is used to search the data resource
formats the creator of the database
the junit setup method
get the source for the given id
dump the data for the species to a file
get the template rank for the given rank id
returns the unique lsid for the given name using the fuzzy
get the lsid of the map
get matching lsid by name
search for a known lsid
checks if is infra specific marker
checks if is specific marker
searches for a name in a given record
searches for a name in a given record
searches for a name with a given rank
search for a record by the id
returns the lsid if found
returns the updated rank for the given name
check that the given name matches the synonym of the given rank
returns true if the given string is a match that is close
search for irmnggenus ranks
return the common name for a given common name
checks whether the two names are identical
search for a common name
returns the primary lsid for this object
set the check boxes for sorting
creates and returns the popup menu for the bug
creates and returns a popup menu for the branch
this method saves the comments to the bug tree
adds a comment to the prev comments list
resets the previous comments combo box
returns the current user comments text
sets the current user comments text
returns the selected comment from the previous comments combo box
sets size of font
changes the title of the main frame
loads the plugin directories and sets up the plugin list
creates a data file object and adds it to the list
adds a set of files to be deleted
set the name of the property to set if any
returns the jvm engine to use for this test
adds an argument to the jvm used to execute find bugs
sets the current bug from the given node
set the name of the warnings property
checks if the alert is added and throws an exception if not
check if an alert is valid
makes a duplicate of this project
adds a project to the current project2 module
returns the designation key of this designation
add parameter deletes obligation database entry for obligation obligation obligation database
sets whether or not the stream is open on creation
open a file in fba format
sets the state of this traversal to closed
load the fbp file and save it in a new file
parses the option
makes the given list of files absolute path to the absolute path
register a bug code
get an annotation description string
get the code of the bug type
register a bug category
set the bug reporter that will be delegated to this bug instance
get the description of a bug category
compare two source lines by their class names
get the method descriptor for a method
set the print stream to which log entries will be written
return the encoded form of the priority threshold
get the plugin
finds the resource with the given name
enable disable all known detectors
returns the color of the source code text pane
writes a message to the console
writes the given filters to the properties file
opens the analysis
check whether a negative priority is used
adds a bug pattern to the list of bug patterns
look up a detector factory by short name
look up a detector factory by full name
handle xargs command line option by reading a file
add a collection of bug instances to the collection
add a bug instance to this bug collection
writes this instance in xml format to the given file
writes this instance in xml format to the given file
writes the xml to the given output stream
if the current opcode has a reference operand get its
if currently visiting a method get the fields field object
loads a project from the disk
set the list of plugins
returns the plugin with the given id
look up a detector factory by name
get a detector factory by its class name
looks up the value type of the given key
return whether or not the given instruction is a static instruction
copy the values from another frame value type
determine if the field is loaded
setter method for interproc
sets the strict flag
getter method for interproc
adds a variable to the match
is this a class hash
create an edge between two nodes
returns true if there are no lock on the value
this method is called whenever an instance of a method is
return the label of this node
returns the successor of given instruction
returns a bit set containing all basic blocks that are dominated by
analyzes the given instruction
check if this bit set is killed by the given store
returns the code exception gen
pushes a new value type onto the frame stack
checks if the object is a singleton
handler for all instructions which load the stack value from a stack
get the number of the given location
set the non null parameter sets
set the non null value of the parameter
tests if a parameter is non null
returns the violated parameter set
returns true if there are no parameters in this set
intersects this set with the equivalent parameter
the internal copy of a
retrieves the value of an option as coming from the return value
return a null value for the given field
returns true if the value of this path might be null
returns the return path type for a given block
configure the analysis context
returns a method generated for the given method or null if no
get usages requiring non null values for given method
delete an obligation from the state set
checks to see if the state has a circularity
add a class vertex for the missing class
determine whether class named by given class descriptor is an obligation
change the internal representation of the given code value code if
clear new dereferenced objects
accumulate the bug source line
reports all bugs that have been accumulated during the run
clear the bugs map
check if the currently visited method declares a return value
check that all parameters of the given value number are not null
read bug collection and project it
operation that adds all warnings in two bugs
return the comparator used to order warning messages
return the total number of classes in the source code
add a class to the model
adds a bug instance to the report
determine whether dataflow should be propagated on given edge
writes the xml to the given output
writes a list of elements
create a detector2 instance
get the short name of the detector
get the detectors full name
creates the analysis cache
returns the user designation key
returns the text of the annotation
add a class annotation
add a field annotation for the field referenced by this field
add a method annotation
add a string annotation
add a string annotation
add a source line annotation for instruction whose source is the given
add a source line annotation describing the source line information for
this method is called when the user selects a tab
constructor for cy node
the unique identifier for this graph
sets the identifier of this
return the current network
returns the unique identifier of this graph
set a new perspective for the current workbench
clears all graph objects from the graph
adds a change listener to the list of listeners
notify all listeners that have registered interest for
adds a calculator to the calculator map
returns the calculator name for the given calculator type
rename a calculator
removes a calculator from the calculator map
returns the names of all mappers in the pool
adds a mapping to a target class
sets the visual style of the visual aspect
returns a clone of the current object
set the visual style of the visual component defined by name
this method calculates the global appearance for the network
this method calculates the global appearance of this node
apply node appearances
calculates the background color for the given network
calculates the sloppy selection color for the given network
returns a description of the look and feel
gets the properties for the given key
applies all of the edge appearances to the view
apply global appearances to network view
returns a clone of this object
paint the global appearances
calculate node appearance for the given node
applies the appearances to all nodes and edges
adds the given
removes the given
fires the change event
returns the number of times the dupe item is processed
this method sets the name of the variable
get node ac
set node appearance calculator sets the node appearance calculator for this
the edge appearance calculator
sets the edge appearance calculator for this algorithm
returns the global appearance calculator
sets the global appearance calculator for this shape
calculates the node shape
calculates the font size for an edge font in the network
adds a mapping to the list
returns the first object mapping found
returns the mapping at the specified index
returns the properties for the given base key and base key
override to return a different panel for the graph
adds a listener to this object
removes a change listener from this component
notify all listeners that have registered interest for
returns the node size
returns the font size for the given node
override the base class method to set up the ui
constructor for viz map attr tab
called when the visual style of the diagram changes
refresh the ui
sets the current calculator
this method returns the image icon from the node
returns the selected item
getter for property value
returns the input listener
get the type of this display descriptor
enables or disables the component
fire item selected
set the object that is to be edited
called when a new item has been selected
returns the toolbar combo box of this panel
reset all visual styles from the catalog
called when the visual style combo box changes
refreshes the user interface
call this method when the visual style of every text buffer changes
check that all calculators are used with the given calculator
invoked when the cy network has been changed
constructor for viz map size tab
calculate default appearance for an edge
this is the default edge appearance method that is used to draw the
apply the key value pair to the controller
get the properties for a new controller
method that handles events for the action listener
get the name of the controlling attribute
listens to the check boxes
test method for
invoked when the target of the listener has changed its state
returns the value displayer for the given map value
load the keys from the network into the graph object
load the set of keys from the data
get the properties
returns a clone of this mapping
returns the value to which this map maps the specified key
puts a new value into the map
returns the last key that was modified
copies all of the mappings from the specified map to this tree map
returns the range class
returns the attribute name of controlling the controlling event
get the properties for a particular base key
this method calculates the range of values in this attribute map using
returns the ui object which implements the l f for this component
invoked when a component loses the keyboard focus
validates the continuous mapping
returns the new value in the number field
test if next point is greater than next point
check whether previous point is in the range
returns the current properties
gets the value of the range property
sets the range
returns a clone of this mapping
initializes the components
resets the user interface
set the enabled state of all components in this container
creates all the point panels
gets the name of the attribute that contains the controlling current value
returns the points
returns the range of values for the given attribute name
compares the values of two numbers
removes a point from the graph
returns a clone of this continuous mapping
returns the points
adds a point
removes the point at the specified index
returns the mapping point at the given index
get the spring properties
sets the interpolator for this animation
returns the ui object which implements the l f for this component
this calculates the value of the range
constructs a new default graph cell
constructs a new cytoscape root graph with the specified capacity
constructor for colt cy network
set client data
get names of all client data names
this method is called when the user changes the graph
updates the status label
gets the canonicalize flag
sets the current graph perspective
set a new graph from cy
appends the nodes and edges from the given network to the network
adds a filename to the list of node attribute filenames
adds a filename to the list of edge attribute files
get an attribute value
returns the value of the attribute of the given node
returns the value of an attribute of the given edge
returns the value of the given edge attribute in the given
adds a listener to this network instance
removes a listener
get whether to copy exp to attribs
gets all listeners notified when network events occur
notify all listeners of a cy network event
creates a new node in the graph
adds a new node to the end of the list
adds a new node to the end of the model
adds a node to the end of the list
removes a node from the graph
creates a new edge in the graph
adds a new edge to the list of edges
adds an edge to this cy edge set
add an edge to the table
removes an edge from the graph
input the attributes of a graph
convert the punctuation ins into a separate separate separate separate separate separate
the to string method is a simple means for determining
this method converts a color to hex string
it returns a vector of vectors of the given type
get a vector of strings for the given key
reads the stream
returns the string precision value of this number
returns the integer as an integer
adds a mapping to the order
returns a mapping from the key to the component
verifies the basics cyberomes of the network
compares the other object with this one
create an empty but initialized instance of a uml cytoscape tool bar
override this method to initialize the toolbar
adds an action to the specified button group
initializes the page
creates and returns a jbutton for the specified action
factory method for the action button map
returns true if this item is within a menu bar
create a jmenu object for use in menu commands
returns true if this item is part of the tool bar
this is the hook through which every menu item is created
returns the preferred menu
factory method for the action menu item map
returns the preferred button group
factory method for the menu map
create menu index map
lays out the graph
default constructor for the cytoscape desktop pane
apply the current layout to the selected nodes
constructor for graph view controller
applies the appearances configurations to the visualizers customization
enables or disables visual mapper items
constructor for cytoscape desktop
constructor for graph view controller
toggles whether or not the automatic visual mapper is enabled
constructor for a network view manager
constructor for graph view controller
graph view listener update the status label
get the menu bar for this frame
implements the plugin registry changed method
invoked when an internal frame is activated
updates the status label
switches to edit mode
switches to read only mode
returns the map of all graph view handlers
invoked when the window is set to be the focused window which means
returns the graph view handler in use
implements property change listener
returns the view type
registers all the plugins
sets the graph view handler
test that args0 is interpreted as legal
sets the bio data server
returns true if the graph view is already in the set
load calculator catalog
save the calculator catalog file
return the calculator catalog
enables the selection of the delete menu item
sets the current directory
disable the delete selection menu item
enables or disables the visual mapper items and buttons
synchronizes the visual style of the diagram
sets the enable status of the buttons that require recursive items
constructor for set visual properties action
constructor for load plugin action
implements the action listener interface
graph view listener
this method will be called by the plugin registry to initialize the plugins
invoked when an action occurs
implements the plugin registry listener
gets the check box state attribute of the jcb interface object
creates the menu bar
called when the button is pressed
set the directory
tries to open jar file if necessary
initializes the menus
get whether to copy exp to attribs
returns the time stamp of the event
gets the plugins loaded since the given time
checks if the plugin registry contains a plugin with the given name
returns the graph view controller
add a new plugin listener to the registry
default constructor for the plugin
returns a description of the classifier
convert a path and filename to a classname
initializes the similarity calculator
constructor that creates a new simple filter customizer with no settings
returns the background color for the widget
creates a new compound filter
creates the background color for the widget
creates a compound filter
creates the insets of the button
creates a new compound filter
creates the grid bag layout
creates a new compound filter
create the title label
creates the title scroll pane
creates a new code double dimensional map code instance
constructor copy constructor
copy the multi hashtable
creates a new instance of double dimensional map object
creates a set of values that can be used to store the
create a new double dimensional map object
find the value for the given key
internal find the next value for the key given
creates a sorted set with a dedicated ordering
creates a peer node of the given type
helper function to load a class from a file
returns the number of bean types defined in the xml file
get an instance of the class specified
get the preferences for the specified type
return the resource bundle for the specified class
get the string for a particular key
creates a new preferences object with the given type
returns the string for a given key in the current resource bundle
constructor for primary key
return the mnemonic for a resource
get the mnemonic of a resource
creates a new preferences object of the given type
creates a new preferences node with the given name
sets the code table reader code used by this code table code
get a wrapper for the table reader to which this table is bound
creates a new table reader
creates a new dimensional map consumer
returns true if the given class implements the serializable interface
returns a string representation of this node
sets whether leaf reordering is enabled for a given reorder leaf
updates the datum factory to the filter or the type if the filter
a factory method pattern which creates a list implementation used to
creates a new instance of abstract data type equator
sets the sort order for the given dimension
creates a bean descriptor for the bean that this factory creates
creates a new code simple property value provider code
constructor that creates a new instance of this object
initializes the property value provider
this will set the table data to be used by the jtable
creates a map of providee values
gets the similarity metric used for scoring the segments
resets ignore rows and clears the ignore table data
returns a map of name attributes
set the target name
reset the ignore rows setting
returns the joining condition for rows
resize ignoring rows
creates the left side listener
resizes ignore rows to the specified number of rows
factory method for creating a map of key values
creates the set of all the children of this interface
returns the condition that determines if the column is joining
creates the right listener
sets the threshold for row similarity
creates a property value provider for the given peer
creates the property provider map
creates the map to use in the left and right side of this
returns the row similarity threshold
returns a fresh walk map for this test
creates a set of
creates the map to use in the right side of this tree
if the event is a
sets a new value for the column similarity threshold
this returns the new binding if there is one
create a map of properties representing the left right property
create the map of partner left right properties for the receiver
constructs a property provider for the given property
returns the threshold value for column similarity
creates a map of properties representing the right left property
creates the environment
create the map of partner right left properties
create set of property equator objects
creates a set of
factory method for creating the attributes
creates a set of property value objects for the right proxy
create a set of the excluded property
returns a set of the right excluded property set
resets ignore columns
create a set of excluded property set
resets the number of ignored columns to 0
resizes the table ignoring the columns that are not table data
creates a new instance of dimensional map table panel
creates a new instance of dimensional map table panel
resizes the array to have code num columns code columns
resets the column types
default constructor for axis1
case insensitive constructor
creates a substring equality comparator
case insensitive substring equality comparator
creates a numeric equality comparator
creates a string wildcard comparator
case insensitive string equality comparator
resets the column types
create the data type equator map for the current thread
copy constructor sort of
make a copy of this multi map object
resizes the column types to the current size
sets the value of the attribute
returns the value of the attribute
resizes the column types array keeping the same size as the number
constructor setting the identifier
constructor which takes an identifier and a hashtable
constructor using the identifier and attributes
create an instance of
creates a new double dimensional map entry object
adds a new row to the table
constructs a new abstract graph layouter with the given name
adds a row to the table
initializes the color interpolator panel
constructs a new strict query without a root element
creates a new instance of strict query
creates new map table panel
adds a feature to the table column attribute of the meta data object
creates a new map table panel with the specified value
creates a new anywhere frame with the default frame data structure
creates a new anywhere frame with the given title and no other
constructor that allows for a user to specify
constructor for stamp
create a stamp text field
constructor that creates a stamp with the given text and width
constructor for stamp
constructor that creates a stamp text field with the given number of columns
returns the value as a map
returns the value as a map of the values of the given row
returns the value at the given index as a map
create a new color canvas
creates a new instance of property map panel
creates a new property map table panel with the specified value
initializes the internal properties if they havent been already
returns a list of column keys
returns a list of the row keys
creates a new code simple monitorable swing worker code instance
create a new code simple monitorable swing worker code instance
create a new progress monitorable swing worker
create a new progress worker
cleans up the state after the next round
creates a new status bar with default values
creates a new status bar
constructor for this class
updates the paint button based on the current value
creates the insets of the button
creates the content scroll pane
creates the content panel of the application
create the property table panel
creates a new swing worker object
constructor with thread to use
called when the animation has finished
return the value created by the code construct code method
start the worker thread
constructor for stamp jbutton
creates a new code stamp jbutton code instance
constructor for stamp
constructor that takes a string
creates a code stamp jbutton code instance with an
sets the all size attribute of the jdesktop pane object
writes the gtr file
sets the all size attribute of the jdatabase panel object
writes the tree to the file
creates a table with a weight of 0
creates a table with the given dimensions
creates a table layout with the given table size
creates a table layouter at the given location
creates a table model with default values
creates a new instance of abstract better table cell editor
create an empty but initialized instance of a uml default better table cell renderer
construct a table model using the specified collection of labels
creates a table model with the specified number of rows and column
creates a new instance of simple table tool
creates a table tool with a specific location
sets the dimension model for the table
write the tree view cdt files for the entire tree
constructor to create a table tool
sets the data to be displayed in the table
creates a table tool with the given location
creates a new table tool
creates a table tool for the given location
sets the number of rows in the model
creates a table tool better object
returns the index of the dimension unit at the specified point
todo missing method documentation
sets the number of columns in the model
resets the ui property to a value from the current look and feel
calculates the table data using the current settings
creates a new instance of table tool ui
attaches listeners to the jtable
adds a row to the end of the model
installs the keyboard actions on the table component
set the current editor
uninstalls the ui
this will un install the default color settings from the table
removes the row at the given index
returns true if this connection is listening to the specified table dimension model
this method populate the data
removes all listeners from the table
unregisters default keyboard actions
removes the given column
calculates the preferred size for the given component
creates and returns a property change listener that removes the
creates new default better table cell editor
creates new form default better table cell editor
constructor for uiresource
creates an instance of code uiresource code
returns the name of the row i
reports a bound property change
find the row with the given name
get the column name for the given index
find the column with the given name
truncates the rows to the size of all the data
truncates the columns
returns a string representation of this node and its children
creates the list of row labels
reports a bound property change
creates the row labels
creates the list of column labels
creates the list of column labels
creates a new data row
a factory method for creating a list instance from a given size
creates a new instance of the map that will be used
creates a list containing a single data row
creates a new data row
creates the set of all data types
creates a list which is used to store data
returns a list containing the data in the given collection
creates the list data object from the given matrix
returns a new empty list
a factory method pattern which creates a list implementation used to
returns the input map to use for the given condition
returns a new list instance
create table value
returns a list of objects
creates the renderer pane
repaint the cell that contains the anchor
sets the selection models value is adjusting property
save the state of the currently selected columns and component
called to restore the state of a component in case a drop
create an empty but initialized instance of a uml better table dimension model
installs default colors default font default
attaches listeners to the jtable tool object
installs the keyboard actions on the associated button
add dimension units list to the table
remove dimension units from the list
creates a new instance of tree table tool ui
constructor that takes a row and a column reference
constructor which takes a table dimension and a peer
creates a new tree table tool with a root node
creates a new code basic tree table tool ui code instance
initializes the table model with the values from the table
creates a new instance of better table model event
constructs a new auxiliary dimension model
constructs a new auxiliary dimension model object
returns the minimum size of the header
creates a new instance of basic dimension label bar
returns the column number for the current row
attaches listeners to the jtable tool tree table tool
returns the preferred size of the header
creates a new instance of basic dimension label bar
returns the maximum size of the header
sets the size of a margin around a sequence
creates the mouse listener that will be added to the tool
returns the amount of space in pixels between cells
creates a better jtable object with default values
returns the number of dimension units in this model
creates a new code stamp jcombo box code instance
returns the number of dimension unit models
creates a new code stamp jcombo box code instance
creates a new code stamp jcombo box code instance
creates a new code stamp jcombo box code instance
creates a new instance of better jtable
get the minimum size of a component
creates a new instance of monitorable swing worker
creates a new code monitorable swing worker code instance
creates a new instance of stamp jlabel
constructor that creates a stamp label
constructor that creates a stamp label
returns the preferred size of the code tree table tool code
constructor that creates the stamp jlabel
constructor for stamp
constructor for stamp
initialize the table model with the given data
returns the maximum size of the code jtree panel code
creates a new instance of property table panel
constructor that takes a table object
creates a new panel with the given value
returns the height delta for a node
creates auxiliary dimension units list
creates and returns an instance of mouse input listener
factory method for creating the data for the node
constructor that takes a table model and a data model
creates a comparator for the height values of this tree
this method is called after the label is added to the
called after all buttons have been added
creates a better instance of this class
returns the table dimension unit for the given view index
gets the dimension unit index at the given distance
returns the left
set the value of this row
returns the jviewport that is the top
return the distance in dimension unit index
returns the right
returns the bottom
gets the total distance across
convert view index to model index
converts a model index to a view index
creates a map for the node defined by this xml document
constructor for stamp
sets the selection model for this code jlist code
returns the selection model
utility method to update the identifier labels
creates the proxy column model
update the table
creates a reidentifiable community member without any default constructor
creates a reidentifiable community member with the specified identifier
sorts the rows
creates the proxy jtable
returns the number of dimension units currently selected
set the table model used to manage the table changes and
creates a community member node with the given id
create the bindings
constructor for community data type manager
constructor for communication
creates a new code property attributes code instance
constructor for property attributes
creates the panel for the property map table
constructor which takes a table tool and a table model
constructs a community object with the given identifier
create a new community with the given identifier and environment
creates a new instance of proxy column model
create simple community with given identifier and attributes
create an empty but initialized instance of a community tool bar
initialize community tool bar
sets the row model
adds an action to the specified button group
initialize simple community
specify the type of community to use
sets the column model for the table
constructs a uber community object
returns a list of dimension units
creates the view indices
specify the type of community to use
creates a new context object
creates model indices
create the default name object map for the given name
returns a map of default name attributes
simple constructor which takes a string as an argument
create community member with identifier
initialize simple community member
this is a hook to do nothing
hook called when entering the community
creates the distance across sequence
creates a new model
creates a new simple filter without a default
creates a new simple filter with the given name
sets the type of passing objects
creates a new code table reader code instance and
sets the name of the item
initializes the uber community
creates a new code property map code instance
constructor for property map
constructor for character editor
constructor for string editor
the constructor of the color editor
the constructor of the set editor
constructor for boolean editor
the constructor of the class editor
constructor for array editor
creates the entry set to be used
creates a number editor
creates a new property map entry set
this constructor creates an empty property table cell renderer
creates a new filter manager with default values and no environment
creates a new or filter
constructor for or
creates a new not filter
creates a new simple not constraint
constructor for type filter customizer without option to change the default
constructor for type filter
creates the type tree
creates a new type filter with no default values
create a new type filter
set the type of the execution
constructor that creates a new instance of key value filter customizer without
returns true if columns can be selected
constructor for key value filter
creates a new code property editor canvas code instance
create the value text field
returns the number of selected columns
creates an and filter that uses the given attributes
creates a new and constraint
creates a new filter that accepts only null values
creates a new filter that accepts a key
creates a new filter that accepts a key value and an optional key
creates a new filter that uses the specified key value and comparator
sets the index of the currently dragged view
updates the name of the receiver to match the state of the
recursive method that checks for the validity of a filter chain
factory method for creating the filter combo box
creates a new filter combo box
creates a new instance of property table cell editor
sets the drag distance
creates a new filter combo box model
set the current editor
constructor which does nothing
creates a new filter manager dialog
creates a new filter manager dialog without a title and with no icon
creates new form gene
creates a new gene with the given identifier
creates a new csbi object
creates an empty interaction object
creates a new instance of csbi hashtable
creates a new interaction object
constructor for csbi hashtable
creates a new csbi hashtable
creates a new instance of csbi view
returns the view used for the csbi scene
creates a table reader
create an empty but initialized instance of a uml arbitrary plot
builds a table reader cell editor
creates a new property editor
create a list of data sets
create a list of correlation sets
sets the index of the dimension which will be rendered in the
create an instance of
creates a correlation set for the plot
returns the index of this dimension in the units model
creates a property editor
constructor that needs no maximum plot
sets the identifier of this dimension
get the cell renderer for the row and column
creates a new plot correlation set object
create a plot correlation set object with a given size
get cell editor at row col view object
creates and returns an edit range dialog
creates a new edit range dialog
set a renderer for a certain type
create a map for the type property
create the table
sets the width of the bin
return the appropriate renderer for the class
create a table component
constructor creates a ptplot object with no parameters
creates a ptplot object with the specified environment
create the view for the plot
construct a ptplot view from a ptplot
create the appropriate tool bar for the community tool
set the editor for a given type
creates a new zgraph object with the specified identifier and
creates a new zgraph object with the specified identifier and attributes
return appropriate editor for the optimizer for the given type
method get zview node
sets whether the table draws vertical lines between cells
removes this node from the model and the graph view
sets the attributes for the data set panel
sets whether the dimension is resizable
creates a new instance of this plugin
returns the community member
creates the community member
get the graph model
returns the source node
sets whether the table draws horizontal lines between cells
set the destination of this event
called when the bounds of the node have changed
method remove zgroup src ancestor
constructor for the view node
set the source node
returns true if the other object is a community with the same
global bounds changed
set the foreground color for selected cells
returns the multiple edges as a vector
sets the visibility of this edge
if this is a up2date property
updates the edge
constructs a new instance of this class given the
sets the shape of the car
handles the event of the plot type
sets the position of this code rectangle code
setter for property fill color
sets the size of the rectangle
set the background color for selected cells
called when node removed
sets whether this event handler is active or not
sets the color used to draw the grid
renders the zrender context using the current graphics2 d
computes and stores the bounds of this object
clears the plot
clear the plot
set the selection foreground color
arranges the gadgets
invoked when a mouse button has been released on a component
returns the foreground color for selected cells
sets the background color for selected cells
gets the zlayer group for this node or edge group
get the background color for the selected comp88
returns the current zgraph view
creates a new matrix with the same cell values as this matrix
fill the plot with the current range
creates a matrix of the right size
sets the grid color
grow the matrix by one cell of which a new matrix is created
sets the state of the button
remove this node from the graph model
returns the grid color
called when a node is removed
shows all the graph objects in the model
remove a node from the graph
removes an edge from the graph
returns the l f object that renders this component
sets the class node ui
true if this node is a voro parent
remove a node from the graph
remove the edge possibly t
removes all edges from the graph
sets the l f object that renders this component
create an edge from source node to target node
creates a new graph node with the specified name and returns it
notification from the code uimanager code that the l f has changed
returns an iterator over the voro children
creates a set of nodes for a graph
returns the suffix used to construct the name of the look and feel
returns an iterator over the voro parent objects in this list
returns the point of the closest handle
creates a new graph edge
returns the closest handle point to the target of the connection
adds a new handle to the list of handle points
creates a new handle that points to the given point
removes a handle from the list of handle points
returns true if the given point2 d is already in the graph
returns the default table model object which is
returns a vector containing all the elements of the matrix
this will set the selection status of the edge view
create a button that can be used to change the background of the
returns the default column model object which is
updates the edge view between the source and target
updates the target arrow
returns the selection model used for the list
updates the source arrow
create a button that clones plots plot
this draws us as selected
this draws us as unselected
constructs a new model with the given identifier
sets the end of the edge
initializes the pgraph model
checks if this code path code intersects the given
create the add data button
initializes the index map
returns the index of the supermodel element for the given node
draws a node if it is selected
gets the index of a supermodel node
draws the item with an unselected color
draws the arrow tip in the direction specified by the source and target
sets the paint used to draw the unselected line and sends a
updates the line
creates a new graph model and adds it to the list of included
draws the edge in the direction specified by the source and target
calculate the line length between the target and the source
create a new graph model which wraps the given nodes
draws the arrow tip in the direction specified by the source and target
draws the arrow tip in the direction specified by the source and target
calculate the positions of the arrow
draws the icon
creates a new graph view
returns a point that is located at the given point
returns the x coordinate of the given node
returns the y coordinate of the given node
update the location of this entity based on the given offset
return true if this node or any pickable descendants are picked
creates the tabbed pane for the data sets
return true if this node should be picked after its children
creates the tabbed pane for the correlation sets
returns true if the line segment intersects the given point
create an instance of
draws the selected handle
constructs a new code pgraph code object with the given identifier
creates a new code pgraph code instance
constructs a new pgraph object with the specified identifier
sets the wait mode for all views in this graph
includes the content of the graph in a fit order
updates all views
removes all points of the handle from the list
creates a new matrix with the same cell values as this matrix
creates a new phoebe object
creates a new phoebe object
this method is called when the application is started
return the view created by phoebe view list iterator
gets a view by name
constructor which takes an identifier and a attributes
creates a new phoebe view
increases the size of the matrix by one
constructor which takes an identifier and a attributes
grow the matrix with new size
returns the index of the given node
constructor which takes a graph model and a model
returns the view index for the given node index
remove a node from the graph
the code remove graph edge code method removes an existing edge from the
grow the matrix by two factors
grow the matrix with new size
factory method for the graph
create the community tool bar for the community
a hook to be executed when this action is entered
this is a hook for leaving a community
create an instance of
returns an iterator over the edges contained in this graph
returns a list of nodes that are currently being viewed
returns an iterator over all node views of this document
returns a list of all the elements in the matrix
returns an iterator over all edge views of this graph
returns an iterator over all elements in this collection
returns the number of rows in the model
create a filter manager
sets the height of all rows to the given value
creates a new code attribute combo box code instance
creates a new mage instance
creates a new mage instance
the implementation of the action called
create an instance of
sets the default row height
constructs a new object with the given parent
constructor for arbitrary property sets list
sets the selected item
creates the update data set button
getter method for the java bean code magejava code
creates the panel that contains the expression table
constructor for xcluster interface view
sets the amount of empty space between cells in adjacent rows
creates the remove data set button
factory method to instantiate a code magejava code object
factory method for creating the map implementation used by
creates the map of methods to test
creates the map for the class constructor
creates the stack for the association
creates the button for updating the correlation set
sets whether the rows in this model can be selected
factory method for the object stack
this method is called during the
returns true if both can be selected units of the rows
creates a new mage view
creates a new mage view object
creates the view used for this mage instance
overridden to take into account the node height if using
constructor for expression table panel
creates a button that removes a correlation set
creates a new expression table panel
sets the dimensional map
creates a new instance of go
creates a new go object
disconnects from the server
constructs a new instance of this class
constructs a new ygraph view object with the specified identifier
initializes the view
a hook into the graph2 d
this method is called when the user leaves this community
builds a set of terms from a string
add a row to the row model
constructor for expression table cell renderer
lay out the graph
creates a new instance of ygraph object without a text
constructs a new code ygraph object code with the specified
creates a new code ygraph code instance
creates a new graph with the specified identifier and environment
creates a new code ygraph code instance
sets the wait mode for all views in this graph
includes the graph in a fit content
updates all views
constructor for expression table model
the constructor of the class
creates a cluster node
constructor for the ygraph node
creates a new instance of gwiz view
creates a cluster leaf
removes the row from the row model
creates the graph that will be used
create the community tool bar
creates a new instance of gwiz
constructor for the gwiz
creates and returns a new
returns the view to be used for the map
removes all rows from the table
construct new doc flavor with default settings
creates a new instance of swings
returns a new view to be used for this application
removes the given graph node from the graph node collection
removes an edge from the graph
creates a node identifier for the given node
creates a map for storing graph nodes
create a map of edges representing a directed edge
visits all nodes and edges
constructor with the given zeus g object
factory method for the graph
create a new jtool bar for the application
maps the index of the row in the view at the model index
update the location of the target node
update the location of the source point of this arrow
maps the index of the row in the table model at
sets the source node view of this edge view
sets the node view that this edge is connected to
sets the flag that controls whether the table will be created from the
returns true if the code table row model code will be created
creates a layered event handler that will be used to squiggles within the specified
begins squiggling and adds the listener to the canvas
stops the squiggling
clears all squiggles from the layer
creates default rows for the table from
sets the paint used to display the node that is not selected
returns the paint used to display the unselected state
returns the number of columns in the model
sets the current selection paint
returns the paint used to display the selected edge in this panel
sets the column width attribute of the ktable model object
sets the default column width
delete selection when delete key is pressed if enabled
sets the end edge of the specified type
sets the ending edge of the specified type
override this method to get notified of the drag handle so that
sets the column margin to code new margin code
this method should be called when the button is pressed
sets the selected paint
updates the location of the target edge
sets whether column selections are allowed in this grid
updates the location of the source edge
returns the x coordinate of the new node
returns the y coordinate of the new node
returns the end index of the source edge
returns true if columns can be selected otherwise false
sets the handles for this connection
moves the handle at the given index
returns the end index of the target edge
returns the point of the source handle
returns the closest handle point to the target of the connection
adds a handle at the given point
adds a handle at the specified index
actually adds a new handle to the edge view
overrides the parent method to keep the node centered at the center
creates a pnamed handle for the given point
remove the handle that has the given point
removes a given handle from the list of handle
removes a handle from the edge view and the handle point list
overridden to set the height of the tree
removes all handles from the handle list
draws the selected handles for each handle
removes all edges from the list
update the end point of the connection
updates the end point of the source to be drawn
update the line
makes the tree set the given perspective to the root
sets the x position of the stream
sets the y position to jump to
draws the selected edge
selects this node
unselects this node
draws the edge with unselected border
add a column to the model
calculate the positions of the figure
constructor for the listeners
constructor for the pgraph view
removes the column at the given index from the table
constructor which takes a view identifier and a given
sets the uber community
removes all columns from the table
build a perspective with only a root graph
this method sets the width of the graph
this method sets the height of the jgraph
maps the index of the column in the view at
sets the offset
maps the index of the column in the table model at
sets the root graph
returns a new map for storing type values
returns a new map that contains the type mappings of this
creates a community member node with the given community name and
sets the flag that controls whether the code table column model code
creates the root node of the community tree
constructor that takes a list
creates a new linked list of elements
deletes all the occurrences of the specified primitive value from this list
create a new schema context
constructs a root graph
constructs a root graph with the specified capacity and edge capacity
creates a new node with the given index
creates an edge in this graph
constructor for luna node
constructor for luna node
constructs a new empty
constructs a new colt root graph with the specified capacity and edge capacity
creates a new code graph perspective change event code instance
initializes the code colt root graph code with the specified capacity
ensures that the node array has at least the specified size
start the timer
returns true if all the increments are done false otherwise
initializes the location of the graph
the method code initialize locations code initializes the location of all
sets random locations for the node view
ensures that the graph is fully re scaled
moves the node view by the given offset
adds a vertex to the static nodes list
the vertex is no longer in use
sets the value of the code drag enabled code property
selects all the text in the text component
moves the node view by the given x and y
returns true once the current iteration has passed the maximum count
creates a jungspring layout instance
creates a jung layout from the given graph
sets the position of the node by randomizing it and sets
moves the node view by the given offset
returns the scroll pane that contains this component
checks if the current increment is done
constructor that takes an array of nodes and a perspective
get a component which will be displayed the view for the
create a community node for the given community
creates the list of controls for the listener
remove the node view at the given index
remove the node view and all its children
remove a node view from the graph
removes the edge view and all its children
remove an edge view from the graph
remove edge view
updates the view
installs default editors for this type of editor
returns an iterator over all node views of this node
create the table model used to store better results
create the default better table dimension model for the row
create the default better table dimension model for this table
creates the default row header
creates the default column header
returns an iterator over all edge views of this graph
creates the default row footer
creates the default column footer
returns true if the specified node is contained in the perspective
creates a row for the given model index
hide the node view
creates a column for the table
creates and returns a property change listener that removes the
returns true if the given edge is in the graph
hides the edge view
show the node view
creates the top panel
creates the left panel
try to show the edge view if it contains the edge
remove the object from its parent
factory method for the type renderer map
factory method for the type editor map
removes all objects from the graph
adds all objects to the graph view
creates a new graph perspective for the specified nodes
returns true if the nodes restored type is on
returns true if the restored type is edges
returns true if the nodes hidden type should be shown
returns true if the edge label is set to edges hidden type
returns true if the current type is one of the nodes selected types
returns true if the nodes unselected type is an unselected type
returns true if the selection type is one of the edges selected type
returns true if the symbol is unselected
returns true if an edge exists between the two nodes
adds the given nodes to the selection of nodes
adds edges to the selection of edges
returns whether the given edge is directed
returns whether the given edge is directed or not
returns the list of all parents of the given node
returns true if the child node at the given index is a child
returns the list of all direct parent nodes of a given node
returns a list of all child nodes of the specified parent node
returns the list of children of a given parent
returns the list of all parents of the given edge
returns the list of parents for the given edge
returns a list of all child edges of a given node
constructs and returns a colt node data object
constructs and returns a new colt edge data matrix with the given
call this method to ensure that all contiguous from 1 is a
returns true if the association represents the node created
returns true if the association represents an edge created type
returns true if the type is one of the nodes removed
returns true if the association represents edges removed
apply the mapping from the given node index to the new node
returns true if the type is a meta relationship nodes created type
returns true if the type of the relation was created
returns true if the type of meta relationship nodes has been removed
returns true if the type of meta relationship edges removed
returns true if the column data type property of this node
apply the mapping to a given root node
returns true if the type of this edge is a colt edge data type
applies the key to the next contiguous index of the set
returns the comments url
sets the comments
sets the cloud register procedure
sets the occurrence attribute of this object
setter for property items
sets the members of the network
returns the creator of the class
sets the creator of the package
sets the managing editor
sets the web master
returns the encumberance
compute the basic move
delete a file from the server
add a new file to the cc
deletes a file
adds a file to the list of files
deletes the given file
add a file to the list of files
check if the file is checked out
maps a url pattern to a web module
this is used to add a mapping between a parameter name and a
validates the data model
returns the web module for this application
get the list of error messages
enable the default email activity if there is one
magnify the image
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
dispose the given display
release all of the color resources held onto by the color table
handles the given document by closing the existing character sequence if
sends def files of the current synthdefs
reads and creates defs for the table from the ugen info
sets up the preferences
p draws the board
returns true if the resource is available
crop the image to the specified rectangle
set the crop mode to false
set frame rate of the video
stops the execution of the system
this method is called when the browser is closed
a fatal error occured during capture
set the source of the specified video input
starts playing the video
format the digitizer according to the standard input
plays the sound
this method is used to disable repeat
pauses the player
finish the movie file writing the results to the disk
stop the movie and rewind
set frame rate
change the speed of the movie
returns the current time without checking the current time
called by the system when this object is created
jump to a movie in a certain time
returns the duration of the movie in seconds
changes the text mode
switches to next page
returns true if this component is displayable
releases all resources
general error reporting all corraled here just in case
stop the disposing of the event source
disposes the connection
returns true if this thread is active
returns the ip address of the remote host
issue an error
returns the next client that is available
disconnects from the server
write data to the client
write a string to the chat room
issue an error message with the given message
add fonts in a directory
set the current layer
prints a string to the output writer
trigger this detaining context to be used for debugging
releases the context
checks if the draw method can be called
add a line to the document
adds triangle code a b c code with default color c
cleans up the texture queue
the text method
report on anything from gl error
set an image directly to the screen
filters the image
filters the image
sets the firmware version
returns the firmware date
returns the firmware date parsed from the obex file
sets the firmware date
gets the value of the hardware version property
sets the hardware version
sets the manufacturer
setter for property model
sets the serial number
gets the value of the obexftp location property
setter for property obexftp location
gets the value of the transport property
sets the transport type
returns the connection line
sets the connection line
getter for property obexftp timeout
setter for property obexftp timeout
gets the value of the validate listing property
sets the value of validate listing
get whether or not we should fetch device info
sets the fetch device info
add a file mapping
replaces all file mapping files with the specified list
returns the category of the file
set the file category
create a copy of this file mapping
sets the size of the file in bytes
returns the obexelement type
set the folder type
sets the creation date
sets the modified date
returns the accessed
sets the accessed of this entry
sets the group
returns the group perm
sets the group perm
sets the owner
returns the owner perm
sets the owner perm
returns the other perm
sets the other perm
parses the perm file into a new perm string
returns the label that contains the description
returns the tabbed pane
returns the text field for the user to choose the obex path
returns the label for the obex path
returns the obex path find button
gets the checkbox representing the timeout
returns the checkbox used to select the device info
returns the spinner used to set the timeout value
gets the timeout label
gets the validate obex listing
gets the transport combo box
gets the transport label
returns the obex ftppanel
gets the file extensions panel
returns the value text field
refreshes the jtable
get the value label
gets the connection progress label
get the test button
gets the file type table
returns the device info label
initializes the code dev info file parser code
returns the device info separator
returns the connection help label
this method creates the configuration listeners for the
creates an obex command queue and sets up the command queue
sets up the table model for the extensions table
save the configuration to the persistence
setup the file chooser
enables disables all the components that this test has
called when the timeout value of the dialog is changed
launch the obex ftp command
tests the connection to the device
called when ok is clicked
cancels the current operation and sends a fake window closing event
sets the text and label of the connection type description
read the devinfo file
fills the fields with the current dev info
clears the contents of the dev info window
returns the accessed text field
returns the created text field
returns the group text field
get the perm text field
returns the location text field
returns the modified text field
returns the other perm text field
returns the owner perm text field
returns the size text field
set obexelement file to read from
updates the enablement of the context menus
setup the progress label window
sets up the jtree
initializes the command queue
shows an error message
shows a success message
shows a confirmation dialog
send a fake window closing event to the registered listeners
prepares the window by processing the current document
get the refresh button
gets the manufacturer text field
get the model text field
get the text field for the firmware version
get the hardware version text field
returns the serial number text field
get the text field for the firmware date
called when the application is closing
opens a url in the browser
copies the given text to the system clipboard
returns the create folder action
get the exit application action
get get selected files action
creates a file chooser for the user to select a directory
get get selected files action
get the folder to be created
return the refresh selected folders action
adds the reload node commands to the queue
get remove selected files action
return the send files action
get the show about dialog action
removes redundant operations in the parent folder
get the show configurations dialog action
setup the file chooser
gets show file properties action
returns the parent window
shows an error message
shows a success message
return the show root files action
shows a input dialog box
shows a confirmation dialog
gets the visit website button
returns the show device info action
updates the information set of the file to the given obex element
displays the name of the currently loaded file
sets the location of the given obexelement
displays the given obexelement in the textfield
sets the formatted creation date field to the given obex element
sets the modified date in the text field to the formatted date
sets the accessed field to the given file
gets the file system tree
sets the owner of the dialog
returns the toolbar
sets the text in the group perm text field
sets other fields from the saved file
returns the label used for the progress bar
destroys the given process
gets the current obex command
gets the value of the command property
return the execution status of this command
returns the folder that contains the obexelement
removes all fetched folders
get the obex command line runner
setter method for command line runner
launch the command to run
returns the builder used to build the xml
copies a file from one location to another
special case code for contains code
p tests if the specified object is a key in this hashtable
p maps the specified code key code to the specified
p removes the key and its corresponding value from this
tests if some key maps into the specified value in this hashtable
p tests if the specified object is a key in this hashtable
p maps the specified code key code to the specified
removes the mapping for this key from this map if present
returns the uuid as a string
p tests if the specified object is a key in this hashtable
increases the capacity of and internally reorganizes this
p maps the specified code key code to the specified
p removes the key and its corresponding value from this
returns the uuid as a string
accept all directories and all
get the description of the mime type
called when the kit is being installed into the
called when the kit is being removed from the
this method is called when the content of a document is modified
utility method to get the styled document associated with the jeditor pane
fetches the editor kit for the given jeditor pane
sets the zones bounding sphere
set the zones bounding sphere
set the scaling factor to c
increases the distance by the given factor
get the current volume
gets the surface
return the zones string
gets the volume used for intersection operations
gets the intersection surface of the surfaces coordinates
returns the sub domain definitions
returns a list of sub chains of this rule
gets the domain id
gets the value of the domain origin property
returns the pdb id
method for debug purpose
find out how many atoms intersect this atom with another atom
return the lcoation of the intersection of the atoms a
apply hulls according to the hull bo
get the number of atoms of the intersection
return the lcoation of the intersection of the atoms
gets the domain origin id
adds all atoms that are interacting with the atom a to the
sets the domain origin id
adds atom b to the atom list
calculates the volume surface of the convex hull
returns the number of atoms in this set
adds atoms to the list of atoms
gets the number of het atoms in the atom set
returns the number of water molecules
adds atom b to the molecule
returns the domain contact of the current position
gets the number of residues in the set
returns a list of atoms
returns the center of the hull
this method returns a clone of the domain
copy the atoms of this atom set
this method prints the wrl string with a given prefix
add an atom to the frame
returns the backbone vector
deletes all atoms that are not zero
returns the backbone vector
finds number of atoms in bounding box
returns the number of chains
is this a multi chain
returns the domain of the given domain definition
set the atoms to be used in the iteration
set the domain properties for each atom in the chain
gets the domain of the scadomain with all its constituting domain definition
perform the transformation of pca data from pca to eigenvector decomposition
returns the covariance of values in the array
squared mean of a value
computes the mean of a given value
prints the pca list to a file
get description of a domain
get description of this particular family
get superfamily mss
get id of this object
does this convex interacts with a dom
returns a list of cache id for a certain gene
returns true if this domain interacts with the domain
given a genre return a list of gene names
given a gene name this will set the gene values to superfamily
print the chemical domain transposition information
sets the gene name in the database for a given gene
returns the residues of this match
this method creates an astral table in the database
this method prints the graph in a file
drops astral table
set a sequence in the astral database
checks if the connection is still open
create a new residue with a specific residue number and chain
disconnects from the database
print the chemical structure to a file
returns true if begin and end are equal
is this an anonymous chain
returns a string representation of the chain
main processing method for the pdb process object
return the number of atoms that this atom has interacting
process a pdb file
returns the number of atoms in the set
returns the number of atoms that this unit has been interacting
return a list of atoms that are interacting with this residue
returns the number of atoms that this unit has been interacting with
sets the type of the atoms
returns the domain contact of the pdb
sets all derived fields according to the current distance
return the residue id
set the strength of the atom and its pure strength
add an atom to this set
set faces between two triangles
sets the absolute convergence criterion to the absolute position of the
make a tetrahedron from vertex and the existing triangular hull
returns true if the residue interacts with the vertex
set the percentance involvement of the current object
return true if any atom is interacting
deletes a visible face from the list
returns the first residue
updates the visible edges
returns the amino acid
get the second residue
two residues are equal if their numbers are the same
returns a hash code for this object instance
parses a single line of the config file
get all the vertices in the face
returns the model number from a line
returns the center of the box
returns true if this code interactions pane code is interacting
write the mesh to the given writer
returns the number of atom contacts that this station has interacting
get a string representation of this polygon
returns the list of atom contacts
adds a new atom contact to the list of contact
constructor for triangle list
creates a triangle from the two vertices
reverse the order of the vertices in the list
returns the next vertex of the triangle
tests if a given vertex is in triangle
returns a string representation of this graph
add a polygonal face to the face list
adds a list of polygons to the mesh
adds a triangle to the given vertex
delete a polygonal face from a surface
tests whether a triangle is a triangle of this triangle list
normalizes this vector
returns the index of the triangle in a list that has this triangle
computes the third vertex of the triangle
returns the triangle that shares a given edge
adds a new vertex to the graph
calculate the triangle norm for the mesh
subtracts two vertices together
sets this vector to the cross product of v1 and v2
multiply each component of one vertex by the scalar
set task computation size
unit of the vertex v
sets bounding box for this code dimension2 d code object
divides this task with the specified parameters
reset bounding box
returns a string representation of the segment
scales range by given factor
returns the volume of the range
gets the surface of the fuzzy set
get the size of the task computation
a method for changing the value of an axis has a difference between
returns a string representation of this mbr
get the atom a
gets the atom b attribute of the structure generator object
returns the serial number of the atom
collect task results
returns the serial number of the residue
sets the type of the variable
sets the strength of the atom
returns chain id
returns true if the threshold is interacting
is this atom a pure atom b
returns the element name
get the residue symbol of this atom
returns true if this atom is atom
setter for property interaction
returns true if the given atom has a vertex that is connected by
returns true if this is an carbon alpha type
reads the domain a from the tuple and returns it
gets whether this is an nitrogen
get the result of the last task execution
returns true if this is an carbon element
returns true if this is an oxygen element
returns whether this area is water or not
it returns the second domain of the distribution
returns true if the accordant type is a backbone
return true if this is a side chain
to set the content type
sets the name of the variable
returns the pdb wrapper of this code molecule code
get the e value
returns the number of atoms in the set
returns the c k
extracts id from given
gets atom id
specifies the name of the current gene
returns a string representation of this object
returns a string representation of this atom
for benefit of the
returns the number of atoms in the set
returns the psimap db connection
return the interacting volume
gets the interacting surface
gets the residues number a
get the number of b sequences
return a list of the residues in the molecule
returns the contact sequence of a specific domain
returns the contact sequence of the user
set all the secondary domain acquisitions for interaction
set all the residue contacts in the list
set the number of residues in the set
set the strength of a specific residue
sets the density of the molecule
set the patchiness of the node
writes the linear ring to a file
main processing method for the pdb process object
process a pdb file
returns the url of the directory
returns a vector of atoms
compares its two arguments for order
create all nodes for leaves and add them to the tree
create all nodes for leaves and add them to the tree
prints the label
print the long number to the system
compares its two arguments for order
compares its two arguments for order
compares its two arguments for order
sets the single selection flag
create all new dnodes new node
create all nodes for leaf nodes
sets whether this list is multi selected
create all nodes for leaves and add them to the tree
sets the bicons
create the index nodes for leaves this node
shift all nodes by x y
creates the alpha nodes
centers the graph
creates nodes for the tree
use the values provided in the node to figure out the
creates the tree of nodes for the divs
optimises the hull
compares its two arguments for order
use the node to figure out the nodes we have
update display coordinates of nodes created by displaying
shifts all nodes by x y
get the displacement of the fisheye point
converts xy coordinates to a displacement
implodes the tree with the given node
returns thexygenator display factor in the specified axis
check whether the given point is within the bounds of the component
explodes the node
updates the tree panel with a specified amount
see if the x y coordinate is over a node
selects the closest node
match node by label
find a node by its label
compares its two arguments for order
creates and adds a node to the graph
compares its two arguments for order
compares its two arguments for order
compares its two arguments for order
compares its two arguments for order
invoked when a key has been typed
compares its two arguments for order
compares its two arguments for order
compares its two arguments for order
clears all components of this panel
returns the single selected node
invoked when a key has been pressed
returns the single selected component
sets the single component
sets the multi attribute of the jwindow pane object
invoked when a key has been released
sets the single node selection to the given value
sets the multi attribute of the jwindow pane object
description of the method
add an edge from a label to the graph
description of the method
shifts all the components of the grid
description of the method
description of the method
adds an edge to the graph
centers the visible component
description of the method
find the component which is within the specified coordinates
hook for subclassers to compute the graph properties for all
returns the name of the algorithm
this method disables the jabber staff directory
sets the bicons for all components
print the component information to standard out
compares its two arguments for order
checks if the string is empty
returns the adjacency node of an edge
returns true if there is an edge from this node to node e
print the node label
human readable representation
random initialization of x y and z coordinates
initialize the circle with a radius given as parameter
optimise two vertices along the hull
find all connections in the given node and all its descendents
bfs the neighbourhood between two nodes
calculates all eccentricity of a node in the tree
sets the diversity of the given nodes
sets the diversity of all edges in a tree
sets the diversity of all topology to a bev
adds a vertex to the set of depending vertices
description of the method
description of the method
subtracts the indegree from the actual node
prints the description of the model in a string buffer
adjust basic implementation of the genotype for order
prints out the properties of a dag
the method code has vertex in list code returns true if
prints all the miscellaneous elements recursively to the given string buffer
load an image from a set of pixels
get the origin pixel
set the pixel at the given index
convert an image to a int array
returns the kml poly
gets the google earth
save the kml to a file
load the kml file
get the value of main hwnd
if the user closes the window try to close the window
attaches the rendering window to the gui
the run method for the thread
this method is called when the mouse wheel is moved
save the screen shot with the specified quality in the specified file
sets the focus to this component
set the camera on the info ge
j button action performed
returns the ith camera
starts loading the current matrix
returns the image panel
performs any cleaning up necessary to end the loading of the
launches the google earth
get width of the left panel
returns the height of the left panel
get the number of hwnd window
this component resized
returns the camera at the given index
set the geciy of the given camera to the given value
attaches a reprojector gui
this method is called when the user drags the alpha slider
j button load image
j button save kml
j button load kml
returns the reprojection matrix for this map type
sets the reprojection matrix to the given value
disconnects from the server
connects to the server
get new articles
remove the article from the database
mark the read frame
subscribes the user to the main window
compose a new article
initialises the timer that will execute this
adds a connection to the list of connections
notifies the registered article listeners that a article has been loaded
fires the connected event
fires that the server was disconnected
fires a group loaded event to all registered listeners
connect to the server
disconnects from the current connection pushes all connections to the
get the number of connections that are available
returns the number of opened connections
returns the number of connections in the pool
returns the current date
test that the name localhost is properly set
sets the header name
sets the header value
this is the callback method that will get notified
create data file and use it
cleanup by calling finish finish in run method
true if the specified domain matches any two part tld
sets the time when the users expire
test for the given string to see if it matches a three part
set whether soft failure blocks should be generated
setter for property block perm error
sets the sql file url
set the code dnsservice code service used to handle
this sets the temp block time
sets the pre calculated auto white list life time
sets the unseen life time
verifies that the server is an identity
set the log
set the banned networks and the service dns servers
set the uri rbl
the host name to be used to spamd the email
utility method for getting the host from a uri
sets the get detail value for this einfo request
the port number to connect to when spamd
sets the spamd rejection hits
set the relaying flag
returns a network from a string
returns the v4 from either protocol or subnet as an inet address
returns a string representation of this network
get the v6 from a wildcard
returns a hash code value for this ip address
match the given host ip address against the configured dns server
tests if the given ip is a network in this network
returns a string representation of the network
logs a message
initialize the array of inet networks
initializes the list of inet networks
test to make sure the inet network builder works
test to make sure that we can use a different ip address
test that the inet address is properly configured
tests creating an inet4 network from a string with a null parameter
checks if the given number of correct arguments are present
gets the value of arguments
prints the given string to the output stream
test to have correct arguments
search a user by name
updates the given user in the repository
removes a user with the given name from the repository
checks if user with given name exists in the repository
test if the user with the given name and password match
counts the number of users in the system
creates an instance of the entity manager factory
remove a mapping from the recipient table
helper method for browse files
get a user by name
removes a user from the repository
checks if a user with the given name exists in the repository
counts the number of users in the system
creates a mail instance from the given jcr node
set the mail
returns the james state of a node
sets the james state for a given node
returns the last modified date of the given jcr node
sets the last updated date of the given node
returns the james error message
sets the error message of a node
gets the remote address that is to be used to connect
sets the remote address that the udppeer thread is sending to
costructs the node
costructs the node
get the sender for a given node
set the sender for this mail impl
sets the recipients attribute of the mail address object
returns a mime message from the jcr node
returns the repository id
get the input stream
sets the given mime message as jcr message
returns the real name of the given name
read the attributes from the mail node and store them in the
this method sets the attributes of a node
get the raw message
generate a key value for the given email body
find the message with the given key
this method unlocks the file
gets the value of custom recipient header
gets the default domain name
gets the java mail folder name property java mail folder name
gets the password property java
gets the recipient property mail address
returns the default local part for this service
gets the java mail provider name property java mail provider
gets the user property string value
returns the task name to use for the fetch task
gets the sequence number property int value
returns the host name of the server
sets the custom recipient header
get the java mail folder name for this application
sets the password property java
gets the user name property java
return the mail provider name for java mail provider
sets the recipient mail address field
test if a message is seen
sets the recipient field
return whether or not this folder has seen a permanent flags
get the password for this account
sets the user property string value
sets the sequence number field int value
sets the ignore recipient header property boolean value
return the recipient mail address
sets the folder field
gets the ignore recipient header property boolean value
is mark seen permanent
returns the index of the remote received header
get the property mark seen permanent
sets the user name of the user field
returns the code dnsservice code configured for this service
convenience method to get the session
update the mark seen permanent field
compares this account with the specified account for order
returns the repository of the local users
get the user name
returns true if this query should fetch all records
updates the deferred recipient not found message ids
returns if the defer recipient not found configuration is true
gets the fetch all property boolean value
gets the recipient prefix property string value
sets the deferred recipient not found message ids property java
return if we should ignore the recipient header
gets the parsed configuration
return the custom recipient header
sets the parsed configuration
is this a leave
gets the recipient suffix property string value
gets the session property java
is this a mark action
gets the fetch task name property java
sets the session
indicates if this node has leave blacklisted
returns if this channel is a leave remote recipient
gets the user prefix
returns true if the leave user is undefined
gets the host property string value
returns true if the leave remote request header is invalid
returns true if the leave max message size exceeded configuration
gets the user suffix property string value
this method is called to determine if a message is leave undeliverable
reject the given message using the remote recipient
returns true if the user is undefined
gets the leave property boolean value
returns true if the request header is one of the remote host accepted
returns true if the response has a max message size exceeded
indicates if this node has been blacklisted in the configuration
sets the recipient prefix property string value
gets the mark seen property boolean value
returns whether or not the remote recipient is rejected
indicates if the node has been blacklisted in the cluster
is this mark recipient not found seen
rejects a blacklisted recipient mail
sets the recipient suffix
returns whether or not the user should be notified when
returns true if this message is open read only
returns whether or not the recipient of this message is a reject
sets the user prefix property string value
returns whether or not the user has seen a
returns whether the user has marked for review
gets the recurse property boolean value
mark the header as invalid seen
sets the user suffix
should we call set configuration method mark max message size exceeded
reject the recipient not found
this method returns true if a mark with the message is undeliverable
sets the fetch all property boolean value
returns true if this repository is open read only
whether or not to recurse through sub files
returns the address of the blacklist
increment by one the number of connections
sets the fetch task name property java
returns the parsed configuration
reject the user that the message is not defined in the
get the attribute prefix if any
returns the basic name of the attribute prefix
computes the name of the attribute
increment by one the stats
sets the attribute prefix
sets the host property string value
updates the attribute prefix
gets the account property java
reject the message size exceeded
sets the account property com
gets the maximum message size limit
sets the flag indicating if this code filter code should exit because
sets the mark seen property boolean value
a utility method that sets the flag for the remote
sets the recurse property boolean value
gets the fetching property boolean value
sets the fetching property boolean value
returns the configuration for the field
gets the current number of connections
get the number of connections till startup
gets the local users property com
sets the parsed configuration
gets the local users repository
sets the local users property com
override this method to do something useful before the init
add a handler
the distributed hash service used by this vm
destroys all the protocol handlers
returns the code dnsservice code which is currently connected to
set the code dnsservice dns server code which should be used to
the name of the hello world we want to send
no start tls is supported
gets the leave blacklisted property boolean value
sets the static accounts property java
returns the ssl encryption flag
gets the mark blacklisted seen property boolean value
updates the set of static accounts
return the sslcontext used by this instance
get the ssl socket type
sets the leave blacklisted property boolean value
updates the parsed dynamic account parameters
sets the mark blacklisted seen property boolean value
updates the dynamic accounts from the configuration
sets the blacklist in the form of a mail address
sets the dynamic accounts property map
handles the bouncing mail
sets the blacklist from a string
reset dynamic accounts
sets the parsed dynamic account parameters property java
gets the reject user undefined property boolean value
this method is called when a parse exception is received
create a new execution handler
returns the current hibernate session
sets the reject user undefined status of the partner link
the getter method for the session
gets the mark user undefined seen property boolean value
this method is called when an unknown host exception is encountered
returns a new
sets the mark external seen property boolean value
updates the session and the session compute session
gets the leave user undefined property boolean value
returns true if the recipient mail address is marked as a local mail
sets the leave user undefined property boolean value
gets the leave remote recipient property boolean value
gets the mark remote recipient seen property boolean value
returns true if the given mail address is in the local server
returns the hashed password
sets the leave remote recipient property boolean value
get the algorithm used to hash the key
determines if the given recipient is blacklisted
sets the flag that indicates whether or not the receiver has a
gets the reject remote recipient property boolean value
updates the given user
sets the reject remote recipient property boolean value
returns the name of the default domain
returns the basic domain name of the user
sets the default domain name to be used when creating new domain objects
sets the name of the domain that should be used when no domain
replaces all occurrences of a parameter with their values
substitute sub string replace
this will return a default domain name for local host
method to configure the configuration of the
sets the default domain name to the current one
sets the mapping limit
gets the leave undeliverable property boolean value
returns true if the object is locked
can the object be locked
gets the mark undeliverable seen property boolean value
lock the given object
unlock a resource
returns the callers id
get the message in
sets the leave undeliverable property boolean value
set the mark undeliverable has been seen
sets the message in
gets the reject blacklisted property boolean value
sets the reject blacklisted property boolean value
gets the leave recipient not found property boolean value
gets the remote recipient property boolean value
gets the user wildcard
gets the mark recipient not found seen property boolean value
returns the fixed domain
gets the reject recipient not found property boolean value
sets the leave recipient not found property boolean value
returns true if this resolver has been previously unprocessed
sets the mark recipient not found seen property boolean value
returns the size of the file denoted by this abstract pathname
sets the reject recipient not found property boolean value
log a status info message
sets the destination directory for this configuration
gets the defer recipient not found property boolean value
override to create a new instance of the repository
sets the defer recipient not found property boolean value
returns the file associated with the given key
gets the input stream
returns an output stream for writing the
gets the remote received header index property int value
log a warning message
encode the given string using the default encoding
decodes the given filename
sets the remote received header index property int value
gets the leave max message size exceeded property boolean value
log an error with a message
gets the mark max message size exceeded property boolean value
gets the max message size limit property int value
get a status report for the current status of the session
gets the reject max message size exceeded property boolean value
gets the user undefined property boolean value
sets the leave max message size exceeded property boolean value
returns whether or not this message is marked as deleted
sets the max message size limit property int value
sets the reject max message size exceeded property boolean value
dispose the users repository if there is one
gets the leave remote received header invalid property boolean value
returns whether or not this message is seen
gets the mark remote received header invalid seen property boolean value
gets the reject remote received header invalid property boolean value
mark this message as deleted
sets the leave remote received header invalid flag
sets the mark remote received header invalid seen flag
set the seen flag to true
a559 missing resource should be saved too
sets the reject remote received header invalid field value
a559 missing save should not be saved
gets the blacklisted recipient property boolean value
sets the remote recipient property boolean value
sets the user undefined property boolean value
create a domain list
test for the method add domain
test adding removing a domain
test that adding a domain to a list works with a different domain
deletes all domain and domain names
get a code dnsservice code for the specified host
add the error messages if the message exceeds the max allowed size
sets the blacklisted recipient flag
gets the recipient not found property boolean value
sets the recipient not found property boolean value
rewrites a mapping for the recipient
gets the htable used for the list table
create the remote domain for the current request
returns the table of recipient code assigned to this recipient
remove a mapping from hbase schema
get a htable with the users repository table
puts a htable back into the pool
creates the key for the row
returns the name of the remote domain field
sets the remote domain property string value
update the remote domain for this container
deletes all users
compute the remote host name for this server
get the remote address for the current request
returns the remote address as string
get the remote host name for the current request
returns the remote host name as a basic string
sets the remote address property java
update the remote address for the current message
sets the remote host name property java
update the remote host name for this mail impl
returns whether or not the message size exceeded
updates the message size exceeded and the total number of messages in
computes if the message in size limit has been exceeded
gets the max message size exceeded property boolean value
sets the max message size exceeded property boolean value
returns true if the remote request has invalid header
compute the remote headers
is the remote received header invalid
sets the remote received header invalid property boolean value
update the remote received header with an invalid value
gets the default sender domain part property boolean value
gets the default sender local part property boolean value
sets the default sender domain part property boolean value
sets the default sender local part property boolean value
gets the default remote address property boolean value
sets the default remote address property boolean value
reads the next character from the stream
this method reads a line of input from the stream
reads the next character from the stream
returns the amount of space needed for this property
creates an encoder for the test case
returns true if the given server is the local server
returns true if the user is the local user
command session session
handler for the command command
process the command pop3 session
handler method called upon receipt of a command
returns true if this group is activated
configure the component
returns the string representation of this group
get the ldap context
set the password
creates and initializes the ldap context
checks to see if the given password matches the users password
builds a read only ldapuser from the given dn
always returns false
unregister mbeans from the mbean server
registers the mailetcontainer mbean instances for the current state of the mbean server
register a new processor mbean
registers all james mbeans
update the state
registers all mailet mailets
match a mail with all recipients in this list
add a matcher to the list of filters to be tested
returns the value of the named initialization parameter
get the value of an initialization attribute
returns the mailet context
sets the mailet context
returns the mailet name
sets the mailet name
sets the condition
returns the matcher name
sets the name of the matcher
returns the mailet context
sets the mailet context
return the endpoint
bounce a mail to a new message
check if processors are configured correctly
method to processor mail
convenience method to send a message to our mail group
method setup matcher
sets up a matcher
method setup matcher
hits gets the value of this field
returns the required hits
jdbcutil used by log files
gets the sql file name
creates a new socket connected to the specified host and port
sets the sql parameters
sets the ham token counts
checks whether the given table exists
update the ham token flag for this user
checks whether the given table name exists in the database
update spam tokens method testing
resets the data in this message to its original state
returns true if the named column exists in the specified table
method to close a jdbc connection which was obtained via
public setter for the spam token counts map
close the statement and the database
close the given resultset and release any resources
subclass log wrapper
inits the sql queries
substitute all occurrences of a string in a string
returns the sql string for the given name
get the sql string associated with a given property name
returns the database option with the given name
set the corpus
builds the corpus
calculates the overall probability of the stream
read the next line from the file
if there is a message id update it
write the headers to the specified output stream
write the message to the given output stream
duplicate the mail impl
write the body part content to the given output stream
write the message to the given output stream
write the body part content to the given stream
get the message
returns the size of the message
returns the recipients
get the sender of this message
set the message for this mail impl
test that the message wrapper is cloned
test that we can send a stream that upated headers
test that the message content is upated if the content is already
write the message to the given output stream
tests the cloning of messages
write the mail impl to an code object output stream code
test the cloning via message cloning via co w
tests the cloning via the message
tests if the message cloning via co wsubject lost
removes the given user from the repository
returns the user with the given name
checks if this user set contains the given user
checks if user with specified name exists in this case insensitive
test if the user with the given name and password match
counts the number of users
returns the key of the source repository
compares two objects for equality
overrides code hash code code because equals was overwritten
if the header stream is not null it is closed
adds a new user to the database
removes the given user from the database
updates the given user in the database
returns the first user in the list with the given name
returns a reply to this message
opens a connection to the database
returns the repository of users
returns the default users repository
returns a connection to the database
overrides the hash code method of object to meet the contract of
returns the number of parameters in the sql statement
get the external library directory
creates and returns a mailet exception that indicates that the mailet request
converts the user name into yyyy mm dd format
sets the sync
sets configuration mappings
perform all configuration checks on the spring configuration
returns the input stream
creates a configuration object from the given resource
returns the configuration prefix
populates a given message with a new mail
converts the specified attribute value to a string
removes from the underlying collection the last element returned by the
checks if the given email address is valid for this mailet
returns the primary name for a given username
initializes the sql queries
test that two mxsame works correctly
test two mx differentprio records
test that the first and only if we have a problem
creates a new socket
initialize the mail repository
store the mail in the repository
create a new socket connected to the specified host and port
returns a string describing this mailet
create a new socket connected to the specified host and port
returns a string describing this mailet
creates a new ssl socket connected to the specified address and port
creates a new ssl socket connected to the specified address and port
returns a string describing this mailet
initialize the xml mapping
convert mail address to recipients
returns a string describing this mailet
initialize this message object
if debug is set then use this method
if debug is true log a message and the stack trace of that
returns the username for the given email address
creates and returns a new attachment of the given type
gets a description of the mailet that is being used
gets the value of max size
initialize the feed type instance
method for serviceing a mail
auto generated getter method
p are error messages currently enabled p
returns a string describing this mailet
process the mail from dsn
returns the separator of the target string
returns a string describing this mailet
gets the last corpus load time
returns a string describing this mailet
returns a string describing this mailet
touches the last corpus last corpus reset the last time
process the mail from our pending server
calculates the total attempts for all delays
sets the subject prefix to code new subject prefix code
runs the analysis
initialize mail repository
returns a string describing the mailet
calculates the next delay to use for a periodic update
returns a string describing this mailet
returns a string describing this mailet
sets the number of attempts this job has been attempted
returns the value of the code pass through code parameter of this
returns a string containing a concise human readable
method get pass through
returns the primary name for a given username
returns the value of the code fake domain check code parameter
inits the sql queries
returns a boolean indicating whether or not the given mail should be
gets the content type of the inline content
returns the in line type for the given mail
returns the attachment type code set in the constructor
returns the type of the attachment
invoke the getter on the target object
returns the message for this folder
get the message for the given mail
gets the collection of recipients
set the collection of recipients
gets the active mqsession
sets the to field
gets the reply to address from the init parameters
returns the error message from the specified messaging exception
gets the mail address of the reply to
gets the path from this mail address to the reverse path
obtain a session using the given properties
gets the path of the mail from this mail object
gets the sender address from the init parameter
gets the mail address of the sender
set the sender for this message
returns the value of the subject header
returns the subject of the mail
returns the prefix for the subject of this message
returns the prefix for the subject of the mail
sets the subject prefix to the new value
attach an error to the mail
attach an error to this mail
tests if this init response message is a reply
returns whether or not the mail is a reply
gets the type code of the parameter
get all header lines as a string
returns the message body as a string
sets the message id header to the new one
reset all the images to their original state
resets the images
initializes the layout of the main window
add a view to the layout
adds a header to this part
creates and adds a new view holder and sets the default layout
sets the view of the panel
updates the buttons of the header view
opens the main application window
select a dataset file
sets the directory where generated images will be stored
starts the appropriate view by building the appropriate form
closes the connection and removes it from the list of handles
create a local cache directory for the specified flickr directory
login the user
remove the photos that are deleted from the photo system
check the current authentication token
get an auth interface for the specified api key and secret
get the image
delete the flickr photos from the database
get the group name for the specified group url
get the user name for the specified url
get a frob
build the authentication url using the given permission and frob
rotate the specified photo to the specified degree
gets the flickr system
setting all the set extras in the message
this method initializes scrolled composite
this method initializes thumbnail holder row layout
returns the original image as a stream
returns the base url of the image
get the current small square image
gets the image by the given suffix
get an image as a stream
initializes the fields for the contact list
returns the preferred size of this component
returns the program listing name
returns a string representation of this object
returns the string representation of this code turn right consequent code
returns the string representation of this code turn left consequent code
add a world event listener to this controller
remove a world event listener
returns the cell at the given index
returns the decompiled source
increments the number of foods of this system
dispose of stuff
adds a pheromone to the current cell
called when the simulation has ended
set the progress bars
add an ant to the cell at pos
called by the simulator when a tick occurs
gets the large world image
returns the text of this file
step the progress bar
invoked when the component has been made invisible
invoked when the component has been made visible
method to grab focus
returns the natural size of the gameboard
invoked when a window has been opened
repaints the entire component
sets the random number seed
paints the component
invoked when an ant is moved on the screen
auto generated event handler method
called when an ant is turned
overriden to resize the window
auto generated event handler method
tells the view that it has been deposited
auto generated event handler method
food the player
called when a cell is marked
set pheromone stacking flag
auto generated event handler method
a cell was unmarked
the method code state changed code updates the
removes all listeners notified when world events such as world events
method for creating a new actor
removes all listeners notified when the current panel changes
auto generated event handler method
this method is called when an actor is removed from the world
resets the generator
auto generated event handler method
unmarks a pheromone in the game
mouse moved event handler
auto generated event handler method
sets the team score for a team
this method is called when a new actor is created
actors have been removed
initialize the simulator
called when an ant is turned
invoked when an ant is moved
starts the thread
implementation of the change listener
set last tick
called when a cell is marked
empty implementation of the cell listener interface
invoked when an ant is moved on the configuration
called when the player food deposits
this method is called when the player food in the world
we heard that an actor has been removed from the world
called when an ant is turned
called when the game is ended
withdrawn from a single food
called when the simulation has ended
called when the zoom level 2 is changed
called when one of the three buttons is pressed
auto generated event handler method
auto generated event handler method
perform the step action
auto generated event handler method
auto generated event handler method
auto generated event handler method
auto generated event handler method
auto generated event handler method
auto generated event handler method
perform the about menu item action
raises the value of the given number to the natural logarithm
invoked when the component has been made invisible
invoked when the component has been made visible
sets the link extractor for this group
convert the string to a string
this method returns the original string with
map the string to the java string
returns a string with all the entries in this registry
returns the position of this event
sets the position and sends a
returns the x coordinate of the vertex
returns the y coordinate of the vertex
get the radius of the i direct i node
get the radius of the ith component
returns the label info for the attribute
returns the object label info
sets the label info for the attribute
sets the object label info
inverts the y axis
sets the title for the plot and sends a
returns the number of nodes in the graph
returns the number of lines in the file
adds a node to the diagram
returns the point of the from position of a line in the diagram
returns the node
returns the position where the end of a line should be drawn
returns the offset of this wall
sets the offset to the specified point
adds a line to the diagram
sets the offset
returns the background color
returns the label info for a specific node
sets the background color and sends a
returns the label info for the given node
returns the text color
sets the text color and sends a
checks if a point is in the coordinate system
returns the alignment of the text relative to the icon
sets the alignment of the text relative to the icon
adds an observer to the list of observers
removes an observer from the list of observers
sends a change signal to all observers
returns the starting position of the explosion
returns the position of the end node
sets the starting point of the edge
sets the end point of the connection
returns the length of the edge
compares this context to another
creates an aggregate query
returns the url of the page
resets the database info
sets the source url
gets the database info
sets the database info
sets the table
sets the key
returns the number of diagrams
returns the diagram at the specified index
returns the diagram with the given title or null if there isnt one
adds a new diagram to the model
returns true if we didnt iterate through all attributes in the
returns the next attribute
returns true if we didnt iterate through all objects in the ideal
returns the next object
adds a concept to the filter
returns the original exception
adds a concept to the ideal
calculates the intent size based on the contingent sizes in the filter
returns the intent size relative to the size of the
calculates the extent size based on the contingent sizes in the ideal
returns the size relative to objects extent
returns the attribute contingent size relative to the baseline
returns the relative size of the contingent
is invoked when a drag operation is going on
returns the number of objects in this filter
this implementation of code drag exit code provides a default drag under effect
this message goes to drag source listener informing it that the dragging
this message goes to drag source listener informing it that the dragging
this message goes to drag source listener informing it that the dragging
this method calculates the number of attributes in this
this message goes to drag source listener informing it that the dragging
this message goes to drag source listener informing it that the dragging
checks if the filter has no top clause
gets the bottom attribute of the mfvec3f object
returns true iff the supplied concept is in the filter of this one
checks if the concept is in the ideal
sets the schema for this diagram
reset the buttons
opens a schema
called when the content of a widget needs to be updated
set the default query object
updates the display type of the view depending on the current state of
prints the diagram
ensures that the first item in this series is valid
returns the selection state of this button
returns the background color
returns the gradient that is used for filling the non default values
getter for the circle color
getter for the selection color
getter for the ideal color
getter for the circle filter color
returns the nested diagram node color
updates the diagram
shows a new diagram
setter for the circle color
sets the line color
set the query to be displayed
sets the color of the top separator line
sets the bottom code color code
fade out the color
stores the current state of the diagram
prints the diagram using the current settings
returns the nesting level of this environment
get the diagram
checks if the given position is inside the past of the element
returns the filter concept
checks if a diagram is in the current position
calculates chi square of the current diagram
returns the level of the chi square critical
get the singleton instance of the diagram controller
sets the nesting level of this execution
gets the diagram history
returns true if an undo is possible
adds a new diagram to the history
removes the last diagram from the history
resets the history
returns true if there are future diagrams in this project
moves to the next concept
calls the back method of the history
returns the last added diagram
returns the simple diagram at the specified position
returns the diagram under the given position
loops through and notifies each observer if a change has occurred
notifies the observer that this object has changed its state
notifies all listeners that the contents of the list have changed
notifies all listeners that have registered interest for notification on
notifies all listeners that have registered interest for
calculates the largest contingent size for all the contingent sizes
is this value lesser than the specified value
returns the path of the commons bean utils library for this instance
sets the sort column name
checks if the given key is already in the map
returns tt true tt if this collection contains the specified
adds a new key value pair to the map
gets the value for the given key
replaces the value associated with the key
removes the first element of this list
removes the last element of this list
returns true if the cache contains no key value mappings
returns the group model
returns the message model of this conversation
adds a new message element to the message
unzips the archive to the given file
unzips the archive into the given file
method setbad encoding vector
set the list of files that are not supported
returns uncompressed size of the given archive
adds a test case result to the list of test case result
adds the specified test requirement version
write the given resource to the temporary file
write all resources in the zip file
checks if all supported resources are available
rolls back all the files in the extracted files list
shows the info in a html format
gets the version attribute of the requirement object
gets the version attribute of the requirement object
get a specific version from the list
sets the version
sets the version attribute of the requirement object
sets the version attribute of the requirement object
returns the test case with the given implementation number
returns the implementation number of test case with the specified implementation
gets the intermediate stylesheet
validates the xml document against all the required fields
this method delete all temporary files and debug mode
return the path of the folder in which files will be stored
sets the number of spaces to use for indentation
exports a document to a file
p this serializes a dom tree to the supplied
exports a document to a string
write the given resource to the temporary file
export the message
get the xquery xml data
initialize the xmldb
destroy the collection
get the action code for the given action
opens the xml database connection
returns the schema for the given schema
get number of records in table
get the material code
get the number of records in a table
get the number of records in the table
returns the number of members of a specific tpnb
returns the number of members of trversions which have
returns the number of members of a specific trversions
get number of cash tinem
get test case by id
this method delete all saved temp files and debug mode vectors
export a user id and version
returns the test result object for the given id
get test case by id
get test profile
get test requirement
get test profile version
export the vreport as xml
get test requirement version
export the xvrl file
returns the number of members in a group
export the data in vreport format
returns the number of trversions which match the given filter
get number of records in table
export the vreport into a xml file
get number of records in table
export vreport as xml
returns the number of records in a table
export the vreport into a xml file
returns the number of members inside rcx r
export to xml
returns the number of trversions which have passed
export the xml report
delete the test results
clean database after a period
performs a transformation using the xsl source
generate a test profile document from a test profile version
validate the resource file
add the node identifier to the hash map
adds a simple element to the given parent
adds a cdata element to the xml document
export a complex element
returns uncompressed size of the given archive
execute the test
sends a jess script validation email to the user
validates the given xml file
checks if the file name contains only white space
converts a string to a boolean
returns the schema location of a file as a string
reads the contents of a file into a string
write the string to the file
returns the last tag of a given string
recursively delete a directory and all its contents
send a jess script validation email to a specific user
returns the formatted string
processes a special character
removes the local path from the application root
checks if the string contains white spaces
converts errors to html
execute a command
gets the contents of a file as a string
returns the schema location from a file
write contents to temp dir
returns the xml result of a test case
replaces all method invocations in a method expression with a new
visits aconditional or expression
evaluates if the given conditional and expression is equal to the current
visits the statement corresponding to the or expression
make sure a end expression is exclusive or expression
visits the and expression
visits the and expression
evaluates a relational expression
sets the shift expression and applies it to the data
a b br
defines a range expression to apply
creates the field editors
creates the field editors
creates the field editors
creates the string representation of the list
creates the field editors
creates the field editors
an expression was encountered
applies this multiplicative expression to the given node
a unary equation is a switch statement
visits the given expression as the correct expression
this sample function for reading class implementations reads
this is the actual implementation
primary no new array
this is used to extract the symbol expression from the primary no
replaces all method invocation in a method invocation with a single
computes the result of applying this matrix to a given matrix
creates struct from another
this is an asingle struct vars
applies struct variables
this will do a work on a row matrix
checks if the current row is multiple multiple rows
this method is called when an asingle row has been parsed
checks if the current values are multiple expressions
applies this literal to the value of the given node
applies the text to the given node if it is a floating point
applies a boolean literal to the value
applies string literal to value
applies the variable true as boolean literal to a value
applies the given eliefs on the list
extraction of a statement into its variables
empty cells with no cells
creates a matrix with cells and adds them to the matrix stack
creates a new geometric distribution with the given probability of success
p stop the stopwatch
at startup create and show the main frame of the application
sets the ejbcontext
draw a card in the deck
draw a card from base deck
shuffles the card at the given index
this method returns the player with the id passed as parameter
draw a card from the deck and add it to the deck
draw a list card from the deck
shuffles a card from old index to new index
parse the current token up to the start of the next token
check for reserved words
gets the next character from the input stream
moves the pointer to the end of the current line
moves the current position past all whitespace characters
execute the next character
executes the next token
executes the current fsa of the selected type
executes the next token
this is called when the parser finds a valid accept state
execute the next character
initializes the map of states to the given number of states
sets the current state
the main algorithm
executes the next token
executes the next token
execute this command
executes the next token
executes the next token
executes the next token
resolve this token to the type
scan the next token from the stream and capture it
returns the singleton instance of the context
method lookup not yet implemented
returns a string representation of the object
adds an execution to the invocation list
retrieves the named object
returns the name of the bucket this container is attached to
compute the total time
method bind not yet implemented
binds a name to an object
method rebind not yet implemented
method rebind not yet implemented
method unbind not yet implemented
unbinds the named object
method rename not yet implemented
obtain the dbcalls for the connect
enumerates the names bound in the named context along with the class
method list not yet implemented
method list bindings not yet implemented
method destroy subcontext not yet implemented
method destroy subcontext not yet implemented
creates and binds a new context
method create subcontext not yet implemented
method lookup link not yet implemented
method lookup link not yet implemented
method get name parser not yet implemented
returns the execution time of the most recent method invocation
method get name parser not yet implemented
returns the current execution information
method compose name not yet implemented
notify the connection has been closed
method get environment not yet implemented
method close not yet implemented
method get name in namespace not yet implemented
returns true iff this expression is applicable to a node
apply this assignment function to the given node
guess the number of lexical entries that have been added to the given
guess the lexical entries for the current lexicon
returns a sorted map of the properties of this object
guess the rule list based on the rules given
returns the precedence of the operator
returns the properties of this action
returns the precedence of the operator
guess the rule set based on the given rules and the composition
guess the lexical entries from the syntactic tree
returns the precedence of the operator
returns the left hand side of this assignment expression
creates a new identifier
returns the right hand side argument expression
returns a list of sub expressions of this expression
returns the left hand side of the expression
returns the right hand side of the expression
returns the precedence of the operator
return the arity of this clause
returns a list of all sub expressions of this expression
gets a list of sub expressions
creates a new
returns the type of this evaluation
returns the set of all variables
answer a list of all sub expressions of this block
creates a new gapp that is identical to this one
returns the operator precedence
returns the number of arguments of this type
returns the left hand side of this assignment
returns the right hand side of this assignment
returns true if the given object is a type and has the same
returns the precedence of the operator
gets a list of sub expressions of this expression
add an entry to the lexers token list
add a new entry to the conflict
creates a new identifier
checks that the variable is valid
checks if the identifier is a variable
returns the type entry for the given identifier
returns the exercise group at the specified index
returns the variable of the given type or null if none
sets the title of the document
creates a copy of this entry
sets the name of the student
returns the teacher comments
the comments of teacher
returns true if the group has been started
returns true if all the exercise in this container have been completed
returns a list of exercises
returns the number of correct exercise
set the directions
adds an item to the exercise
sets the points value for this quote data
returns the exercise at the specified index
check if the current answer has already been started
reset the done flag
a human readable description of the type of the file
checks if the given answer is valid
checks if the user can be checked with this function
returns a list of function applications
returns an array list of all variable declarations in the given expression
performs the user substitution using the given alphabets
returns the number of lambda conversions for the given expression
gets the not so fast value for this wsserie vo
propogate the meaning up of the nodes in the tree that has a
deletes any temporary text from this field
returns the data
returns a string representation of this polygon
loads a file into a buffered reader
closes the reader
returns the raster data for the given rectangle
returns the file data
returns the data in a string form
returns the number of lines in the file
parses a raster with the specified file
indicates if this row has a valid header
returns true if this object has data
checks if the given point is equal to this point
prepares the current raster matrix
returns the angle in degrees between this point and the given one
returns the distance between this point and the given one
returns a string representation of this point
prepares the current raster with the new initial size and the
returns the x coordinate of this object
adds a point to the polygon
set the matrix of this raster data
sets the centroid
returns whether this info contains any parts
returns the perimeter of this polygon
returns the y coordinate of this object
sets the value of a cell in the current row
returns the number of parts in this container
returns the area of the polygon
adds a part to the polygon
get the value of a cell
adds a raster part to the county
returns the list of raster parts in the order they were added
returns the area of this bounds
returns true if this
returns the number of values in the matrix
add a county to the list of counties
get accessor for min
adds a centroid
returns an enumeration of all fips in this tank
get a county by name
return the upper right corner of the rectangle
returns vector of all available parts
returns a string representation of the object
returns the number of valid values
returns the number of
returns a string representation of the object
returns the index of the biggest polygon
get the position of the cell and value
returns a vector of all the parts in the multipart
returns true if this segment is collinear with s
sets the name of the county
returns a string representation of the triangle
adds a point to the group
set the number of columns in the raster
returns the start point of the line
returns the ending point of this line
sets the state of the county
returns the a coefficient that was specified in the constructor
get the number of columns in the matrix
returns the number of points in the list
set the number of rows in the raster
gets the value of fips
dumps the points of the polygon to the console
sets the state fips
get the number of rows in the table
returns a string representation of the point list
gets the state fips
get the minimum point in the polygon
sets the x value of the lower left corner of the grid
returns the largest point in the polygon
get the x value of the upper left corner of the bar
sets the y value of the lower left corner of the grid
returns a string representation of the object
return the minimum and maximum rectangle
get the y value of the lower left corner of the bar
sets the size of each cell in millimeters
calculates the density of this polygon
get the size of each cell
returns the mean centre of the point
set the number of data values that will be written to the output
get the value of no data val
returns a short description of the servlet
initializes the params
returns a map of query string parameters to the given search parameters
processes requests for the get button
processes requests for the code post code method
we need to help the gc by removing references when the
get a pixel from the color buffer
set a given pixel to this color
returns the index of the given cell
checks if coordinates are valid
checks that indices are valid
get the pixel nearest to the specified point
set the pixel to be nearest to the specified coordinates
clears the cache
compares the two file and coords according to their file names
this method is used to determine if this is a conformal
sets the projection latitude of the first point
sets the projection latitude of the first point
sets the projection latitude2
sets the projection latitude of the second of the earth location
initialize the spherical coordinates of the point
prints the help message
set alternative configuration file
removes a namespace from the list
checks whether the element is in the list or not
get the namespace element name
sorts the list using the given comparator
sets the namespace element
returns a file reference to a file
returns the namespace models that have been conflicting with the values in
set the workspace to be used
gets the wiki file model
cleans up the workspace directory
getter for assoziation model
prints the conflict for namespace bindings
sets the wiki file model
setter of the property tt model tt
sets the list
set the alternative configuration file
returns the source path of the page to be generated
returns the config file
returns the size of the file listing
creates a configuration from the file specified in the constructor
returns the configuration
start the timer
returns the source namespace
stops the timer
returns the destination namespace
sets the content of an article
prints the given minutes and seconds
fills the configuration from the given document
checks if this set contains any namespaces
returns the name of the file where this operation is stored
extract name space include level from given xml document
gets the root
returns the last element of the namespace
extracts root directory from xml document
gets the namespace
returns the url for the wiki file
extracts the media root directory from the xml document
delete a file
sets the list of backlinks
returns the wiki file name without the extension
returns the parent namespace of this namespace
searches for an element with the given name in the given parent
validates the specified directory
return the file extension of the wiki file
normalizes the wiki links in the workspace
validates the specified file
flatten the namespaces
returns the number of wiki files
removes the empty name space
returns the extension of the given file
relocation of the relocation of the namespace relocation
destroy the environment
gets the wiki file model for the current workspace
recursively deletes empty directories and all its subdirectories
extracts the brace type from a string
calculates the wiki file path
extracts the chapter name part of an article link
flatten the name space
renames the wiki file to the new name
initialize the application environment
returns true if the email address is invalid
prints the namespace collisions between an article namespace and its name spaces
checks if list of namespace conflicts contains last element
prints namespace collisions
sets the wiki file url
replace some illegal chars with their predefined values
substitutes the links in the article with the regular expression
sets the alias name
returns the chapter
create a unique name for the given base name and namespace
sets the chapter
returns the original text of the link
set the type of the braces
returns the wiki file instance for the given file
checks if the article contains a link for the given article
detect the backlinks on the page
returns the total number of columns in the model
returns the number of visible columns
merges two rows
returns a row of rows that match the indices of the start and
returns the row at the given position
set the content provider
sets the size of the list
the minimum size of the resizing element
returns the paging bar
set the begin position
updates the fetch begin size
resets the cache
clears the table
gets the column layout
get the rows object
get position returns the position of the current page
set the current page number
after success re render the header and header
invoked when the visualization of a failure to retrieve the
set the page size
sets the size of the list
sets the maximum number of pages to be displayed
updates the current page
fire a change event to all listeners
returns the number of pages
returns the current size of the limited part
returns true if the given position is inside the row
merge the rows from the other into this
adds a style name at the specified index
removes the style name at the specified index
initialize the widget
stores the balls in the given print writer
accummulated coor of coordinates of this ball
builds the storage list
returns the current cg
get the hexanol number
update the label with the given minimum and max values
gets the water number
stores the contents of this model into the given print writer
builds the image with the given parameters
is this element similar to another config elem
notify this node that the mouse has moved
notifies all applet listeners that a mouse click occured
gets number of balls in group
returns the ball at the specified index in this list
get the center of the scene
returns the center of the scene
display the list at the given location
get applet information
get the scene radius
returns this lights color
this method returns the light direction
returns the background color of the scene
gets the radius of a sphere of the given type
get the green component of the color of the sphere
initialization of the applet
get the white sphere color
called by the framework when this application is stopped
get the blue sphere color
adds a data item to the map
get the current color of the red sphere
returns the back clip displacement value
returns the fcdis
returns the x coordinate of the center
returns the y coordinate of the center
returns the z coordinate of the center
returns the pipe thres cx
returns the pipe radius c
use this function to determine if a weather condition has a phenomena
returns the need cx
determines whether the map contains the given key
determines whether the map contains the given key
a convenience method to retrieve the value of the specified key
maps the specified key to the specified value in this map
tests if there are any more objects in the iterator
checks whether the map contains the given key
returns the next element in the iteration
pushes back the last fetched object
remove the current node
finds the value associated with the given key
returns a string containing the string representation of the given event
attack a creature
called when the unit is hit
apply modifiers to a creature
apply limits to a creature
sets the editable property
sets the editable
inserts a shape into the list
moves all the creatures from their original position to the top of the
moves the shape to the given position
returns the x coordinate of the screens position
getter for property screen y
getter for property screen width
getter for property screen tile height
gets the highest height for the specified x and y coordinate in this
reads the header at the given index
get the length of the specified entry
get the offset of a given index
reads the header at the given index
initializes the item
returns how much of the chunk has been put into the tile
returns the height of the chunk in tiles
returns the width of the region in chunks
gets the height of the region in chunks
map width in region
map height in region
return the maximum elevation for this dem in meters
get the covering strategy
compares its two arguments for order
draws the point at the given offset
removes the references of the position from the specified position
clears the set of references
returns the x coordinate in pixels of an image
get the estimate of the parameter
return the thumbnail id for web thumb
write a value to the array under the key
returns the number of elements in this batch
get the uncompressed index of a set
given an index in the local bit vector return the batch index
find the next target and update it
find the index of the last element in an array and update the
sets the main medium of the application
sets the base template to be used
creates a new instance of textual detail view
returns an object with the connection properties
returns true if the item is closed
continues the construction of the next table in the list
removes this file from the file system
tries to rename a file or file in the file system
returns the number of columns in the model
todo document me
creates a statement
closes the statement
rename the column with the given name
removes a connection from the database
check new name for existing columns
closes the database
set the status of the command to be auto commited
commits the command
get the object value of the row at the given position
sets the pointer of the file back where the given length occurs
compare this record to another entry
create a container table indexes object from the given list of records
get an object
writes a given byte to this file
check if the driver thinks that it can open a connection to the
encode this type into the given buffer
todo gene missing java doc
todo kgomes where we can read a free block
creates a header locked in the file where the header is stored
computes the type of the group
reads the property from the given
returns the formatted message
the method that is used to close a file
the method that loads a locked file in the file system
todo describe method here
returns the number of columns in the model
tries to rename a file by name
encode field type dbt
returns a random value from the specified position
link table fields using a mapper
encode the date to a byte buffer
called when records have been added
returns the position of the field value
checks if the file exists
create the table definition for the given table
links all selected fields in the selection fields table
br em purpose em accepts url
return the database name for a given mem jdbc url
decorates the given source table with the given rows
sets up the ui
gets the upper component
add an aliasable ident
displays a file chooser for the user to select a file
add comparison conditions to the list of conditions
returns the first warning reported by calls on this statement
removes all warnings
closes the record
sum up the distribution of an item with the given id
adds a command listener
returns true if the point is inside the view port
shows a message inmediately useful for system
locates the caret
same as gl frustumf except that it wipes out rather than
resets the bounds
this method is called when a context menu item is clicked
called when the enablement of the chooser is changed
subclasses may override this method to add custom behavior
creates a dialog with the given id
returns a random color
default implementation of
adds a context menu item to the end of the menu
updates the view after an elem has changed
get the id of the menu item at the specified index
returns the name of this preference
adds a new login
open the login
open the login
called when the database has been created
generates all 3 d controls for switching for a currently active
mark the file as read
set the visibility of this button
sets the options
gets the geo rssid
sets the color of this label
expand or minimize the window
sets the number of unread entries
return the unique identifier of the entry
compares this object with the specified object for order
adds the given entry to the database
compares this object with another geo rssfeed object
adds the given feed to the database
returns the geo point of this object
returns the marker
sets the visibility of google maps
delete the georss entries
delete the oldest entry from the database
returns the geo rsstitle
returns the georss in the database
check if a layer is in the database
check if a specific entry is read by a geo rss file
delete a wms from the database
open the database
opens a read only database
gets the data of a layer
sets the read status of a rss file
returns the number of unread entries for this rss file
returns the srs name for the given wms
returns the total number of entries for this rss file
stop loading all parts
sets the read status of an entry
starts loading the given element
returns the string of a given wms
sets the geo rssfeed color
open the database
sets the visibility of the geo rssfeed
open the database
returns the name and the title of this book
adds a loader to the map
called when the database has been created but not yet created
returns the parsed wms data set
clears the loader
set the visibility of a layer
stop loading the current page
setter for transparency
expand or minimize the window depending on the given flag
updates the key to be the same as the given key
sets the priority of a given wms
sets the selected srs layer
set the warnings to display
expand or minimize the view depending on the given boolean
sets the map controls listener
get the measurement data
override this method to add things to tabs
set the visibility of a wms
returns the number of layers in the specified wms
returns the number of layers in the database that contain the given layer
set the value of member count
set the offering of the agv
sets the property attribute of the property dialog object
delete the image with the given url
create the database
close the database
get the database to be used as a database
clip all measurements in the database that have been updated
delete offering sos
returns the number of measurement values for the property
get color for sos id cursor from database
return the first feature of the current cursor position
get the measurement data for a given measure
returns the values of a measurement
return not empty measurement count
return offering information
return the name of a offering
returns the property with the given id
return the id of the offering that was referred to by the property
return the id of the sos that have been selected by the user
return the property that is selected in the offering
return the time that the measurement was last moved into
returns the date of the last youngest measurement
returns the youngest measurement value of the measurement with the
check if sos id is visible
open the sosdb
opens a read only database
set one color
set offering as selected by the user
set the property for the offering
set the visibility of a sos
get measurement id from database for property and feature id
creates an icqal offering and measure tables for all data
check credentials for this provider
launches a configuration for the given project
returns the local java launch config type
create some empty space
open a dialog to select the working directory
sets the enablement of the use default working directory button
returns the default working directory
sets the default values for the configuration of the application
creates a label
creates a text field
returns the preference store used by this page
initializes states of the controls from the preference store
resets the preference values
saves the preferences
create the plugins and load the plugins for transforming mode
this method initializes this
this method initializes ok button
this method initializes j panel
this method initializes cancel button
this method initializes this
this method initializes j button
this method initializes keyword4
this method initializes close button
initializes the tray icon and active icon
message removed is called when a message is removed from the pool
invoked when a message flag has changed
if the folders property changed the item that was edited
adds a folder to the project
if the folder is removed the folder is deleted
mouse released event handler
creates the menu for the resource
load all folder options globally
test method for de
sets the mappings to be used by this configuration
create html tooltip text
returns the view of this tree
get message node by uid
select the first row of the currently selected resource
select the last row of the currently selected resource
this method initializes j button
this method initializes j button1
this method initializes j check box
this method initializes j panel
return the service name from a class name
drag source listener interface method
drag source listener interface method
this message goes to drag source listener informing it that the dragging
drag source listener interface method
the scene box action
fill the tree with the objects in the session
verifies if the given user is the owner of the current user
shows an error message
exit the application
returns an input stream to the file
gets the output stream
returns an input stream from a specific xml file
gets the check
adds the specified value to this value
this method removes the current value of the item
returns an outputstream to a file
price of the company
returns the model minimum
returns the maximum model value
returns the 3 d type
returns the simple buy
deletes object from the order
gets the preset buy
returns the build objects
getter for property date
sets the id
sets the price of the auction
sets the description of the user
set the minimum value for the model
set the maximum model value
sets the type3 d of this atom
sets the simple buy value for the column
set the preset buy
sets the build objects
sets the date
disable or enable menu buttons
the method code accept code is the method for the visitor
grammar helper to parse a resource
method parse parses the input file
resolves the location for a schema
resolves the module described by the given
called when the parse process starts
method parse parses the file and returns the xquery expression
method called when parsing is finished
parses the given resource name and returns an xquery expression
method parse parses the given file
parses the given resource name and returns an xquery expression
given a resource name parse and return the module
parse the given module file into a module
adds a new optimiser
visits a module
visits a variable declaration
visits a function declaration
description of the method
visit a xqstring literal
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
recursive method for parsing tree
p override this method to visit this node type
performs xqaxis step comparison
visit a xqforward step
p override this method to visit this node type
visits a xqreverse step
p override this method to visit this node type
method that visits a xqpredicate node
p override this method to visit this node type
description of the method
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
f0 f1 expression
f0 unary minus expression
visit a xqqified binding
f0 and expression
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
visit a xqflworexpr
p override this method to visit this node type
f0 expr bool expression
p override this method to visit this node type
visit a xqquantified expression
visit a xqinstanceof expression
f0comparison expr
p override this method to visit this node type
p a xadditive expression
p a xq expression is a child of a node
p override this method to visit this node type
p override this method to visit this node type
f0 nested node
f0 nested node
evaluates a node
a helper method that creates a step for descendant or self nodetest
evaluates a node
p override this method to visit this node type
creates a step for a preceding or self node
p visits a xtreat expression
p override this method to visit this node type
filters a predicate list
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
p override this method to visit this node type
method that gets called for each node after the component tree has been
p override this method to visit this node type
creates a composite path from two tokens
recursively calls itself recursively to remove the children
f0 step expression
p override this method to visit this node type
p override this method to visit this node type
builds a node in the if expr then expression
performs node substitutions on the given
if expr is an if expression
visits a xqreverse step
visits a xqreverse axis node
performs node substitution on the given
p override this method to visit this node type
p override this method to visit this node type
method visit xqpredicate
builds a dot at the given position in the sequence
method visit xqvar ref
falantant die in eine xml implication
p override this method to visit this node type
parses root node and returns an xqfunction object
xq visit this predicate
p override this method to visit this node type
p override this method to visit this node type
returns a node containing the actual token sequence
p override this method to visit this node type
p override this method to visit this node type
p the xqescape lbrace for a child node
p the xqescape rbrace for a child node
child node for the token nodes
p override this method to visit this node type
return the attribute for a node
piconstructor f uuml
p override this method to visit this node type
makes a node object representing code ancestor or self code node
p override this method to visit this node type
p override this method to visit this node type
returns a node having following sibling nodes
create a new type switch expression
p override this method to visit this node type
piconstructor piconstructor
builds a return clause for a copy of the current expression
visit a node
p override this method to visit this node type
creates a node with a default return type
p override this method to visit this node type
p override this method to visit this node type
function v boolean
visits a node
executes a boolean function
p override this method to visit this node type
executes the given x expression
if a composition then a composition then
p override this method to visit this node type
p the xqescape quot visitor
converts a binary operator node to a node
p the xqescape apos implement a node and collects the results
p override this method to visit content content
p override this method to visit this node type
visit any abreviations to convert commands like commands
method visit xqconvert simple operand
creates the head of the html document
get new log messages
move the robot one step
log the string
calculates the difference between the angle between the two given
moves the robot forward by pixels
moves the nxt robot forward and updates the distance
adds actions to the pulldown menu of the environment
add button to the action bar
passing the focus request to the viewers control
returns the file contents
returns the passages
sets the file contents
sets the source file
runs the worker
getter for property manager
sets the job manager
tests that a single line comment can be shredred
test new target
test the system properties will return and found values
returns the value of a system property
test the announcement chain
returns a collection of targets
test that a bad file found is properly detected
returns the bad files
sets the output directory
returns the output directory
sets the spider to be used
start the search in a separate thread
set the original length
set the generator
the main method of the thread
updates the original length of the source code segment
folds the given code to upper case
folds to lower case
merges code lines together
squash the whitespace
sets the message digest value
indicates whether some other object is equal to this one
return a duplicate of a given node
dom level 3 wd experimental
the method code get child nodes code
the first child of this node
the last child of this node
the number of nodes in the list
call normalize on all children of the node
sets the read only state of this node and its children
synchronizes the data
returns the length of the reconcile
returns the node at the given index
synchronizes the data name and value for fast nodes
deep clone a node
find the name point
synchronizes the data name and value for fast nodes
synchronize the children
b dom b implements
synchronizes the data name and value for fast nodes
synchronizes the data name and value for fast nodes
the string value of this token
concatenate additional characters onto the end of the data
the document type declaration see code document type code associated with this
synchronize the children
synchronize the entity data
this will return the document element of the document
b dom b implements
non dom get attributes of this node
return a duplicate of this element
dom level 3 wd experimental
dom level 3 wd experimental
the name of this tag
remove the named attribute from this element
add a new name value pair or replace the value of the existing
introduced in dom level 2
introduced in dom level 2
introduced in dom level 2
introduced in dom level 2
add an identifier string or replace it with the element
dom level 3 wd experimental
sets the read only state of this node and its children
gets the value attribute of the mfnode object
synchronizes the data name and value for fast nodes
dom level 3 wd experimental
dom level 3 wd experimental
creates a text node in the table
get the parent element of this node
sets up the default attributes of this map
returns the owner element of this element
non dom remove identifier from this synchronized block
creates a cdata section node in the table
non dom set the specified flag
returns a duplicate of this node
the attributes of an element in the document
dom level 3 wd experimental
dom level 3 wd experimental
returns a duplicate of this node
dom level 3 wd experimental
returns a duplicate of a given node
sets the first child of the parent index to child index
returns the first child of the given node
returns the first child of the given node
remove a tree walker from the list of tree walkers
returns the schema validator
returns the next sibling of the given node
returns an enumeration of all node iterators
returns the next sibling of the given node
get the tree walkers as an enumeration
returns the i real i next sibling of the given node
returns the real successor of the given node
get an enumeration of all the ranges
allow an application to register an error event handler
dom level 3 wd experimental
dom level 3 wd experimental
dom level 3 wd experimental
non dom used to set the public identifier for this notation
non dom used to set the system identifier for this document
non dom set notation name
returns the string value of the given node
synchronizes the data name and value for fast nodes
synchronize the children
dom level 3 wd experimental
dom level 3 wd experimental
this returns the data for the internal subset
used to create a new instance of the node
non dom used to set whether character or character
dom level 3 wd experimental
returns a duplicate of this node
the collection of entities
non dom copy of this node
dom level 3 wd experimental
dom level 3 wd experimental
the notations of this node are stored in the node map
non dom set the read only state of this entity
the elements of this node
non dom the public identifier for this notation
non dom the system identifier for this notation
non dom set the read only state of this resource
non dom get the read only state of this resource
sets the user data pointer
called when the node has changed
wrtites element type to xml
reset the builder
print an empty element on the output stream
builds the all content model
sets the current state of this workflow
sets the expiration date of the link
returns the expiration date of the event
set the expiration priority
get the expiration priority
sets the quantity of remaining items
returns the number of remaining items that this product has
sets the id of the subscription
sets the offer to the given offer
returns the offer that was used to create this offer
adds a time with the given duration to this ice
returns the first child element of the specified node
returns the next sibling element of the specified node
returns the first child element of the specified node
returns the next sibling element with the given name
this is used to override the dates of the parent and child
finishes the issue and sets the number of items to be 1
if the parent and the child nodes are not modified this method will
sets the issue that should be displayed in the status table
returns the package element at the specified position in the list
returns the number of packages in the package
start parsing input
set the entity resolver
register a dtd event handler
sets whether the nodes entity references are expanded
allow an application to register a document event handler
returns true if the entity references are automatically expanded
allow an application to register an error event handler
set whether to enable expansion of full nodes
set the locale
get the number of nodes to expand
return the current node
set the dom document class
delegate to the wrapped saxparsers implementation of the method
parses a document using the given sax source
called when an unparsed entity has been parsed
sends character data to the server
parses the given system identifier
swaps two int values
this method is called to insert a dispatch schedule item into the queue
method disconnect from database
sets the word
find a table by name from a schema table and tbl name
find a schema by its name
invalidates the cache
drops table if it is in cascade or reverse mode
drops a column
returns true if this primary key is equal to another object
returns the ddl from the system
returns true if this column belongs to a primary key
adds not null constraint
drops all constraints that are not null
renames column to a new name
drops primary key
adds a default value to the database
drops the default table
remark the comment on an sql statement
returns the connection to the database
returns the data type of this column
gets the ddl from the system
returns true if the column equals the object
returns a string representation of the data type
drops a foreign key from the table
returns true if the given object is a table with the same name
gets the primary key
gets the value of columns
returns the column with the given name
returns a string representation of the object
get an input stream for a bzip2 file
creates a new instance of speaker npc
called when the user clicks the start button
closes the result
writes json response
writes the given text to the response writer
returns a document object from the given file
sets the field ground
position the given placeable at the given position without checking
checks if the possibility of a placeable is valid
checks if the placeable is empty
sets up the test fixture
tears down the fixture for example close a network connection
checks if the step number is valid
this method detects the direction of the old coordinate
checks if the given coordinates are inside enemy
returns true if the given figure is within the bounds of this
fetches the setter for a given field
deletes a setter from a field
test of init method of class combat
remove an item from a placeable team
removes a figure from the team
remove an item from the team
test method for
tests the assert global vars method
creates a new instance of game screen
creates a texture from a file
creates a texture object from a file
creates a texture from an image
triggers the life of all registered portals
create a new buzz message
update the buzz table
set the user name andro token to default values
saves the user data to the database
open the notes database
delete the buzz table with the given row id
return a cursor over the list of all buzzes in the database
add a profile to the database
add a token to the database
get the token in the database
update the user profile
remove the default profile
set the default profile
find the current profile id
add a buddy to the buddy list
find all buddies in the database by profile id
returns the character at the specified position
creates a code statement code object for sending
retrieves the current auto commit state
releases this code connection code objects database and jdbc
retrieves a code database meta data code object that contains
description of the method
moves the cursor down one row from its current position
closes the input stream
creates a code statement code object that will generate
creates a code callable statement code object for calling
test properties from spec file and local url
test getting properties from a file
test method for
test of connection to remote url method of class eu
test method for
test setting of connection to local url passing without explicit
test connection to local url passing specifications
test explicit passing without col names and types
gets the extension attribute of the jdbcfile object
returns the separator between extensions
whats a columns index
retrieves the value of the designated column in the current row
maps the given code result set code column name to its
sets up the test
test the save operation
sets up the test
test that a document can be saved
returns the current line
returns the user
returns the user
used to check if the resource is shared
checks if the resource is ignored
gets the id
called by the eclipse workbench to indicate that the plugin is being
the code multi page editor part code implementation of this
used to create a core trace
returns the file modification validator
deconfigure a project from the omni nature
returns a human readable uri
get the connector type
get the single filename
returns the uri
returns the command to delete a move hook
returns the rule factory
returns true if ssl is enabled
return true if the connection is ssl
get the minimum interval between polling requests
adds a resource remote change listener
returns the connector called
returns the project
removes a resource remote change listener
returns the connector type
adds a resource remote change listener
removes a resource listener
notifies all registered listeners about the event
returns the lock for omni line
sets up the document and the sorting
returns the server type name
returns the example uri value
returns the description of the application
creates an instance of the class described by this descriptor
returns true if ssl is enabled
returns true if the multi file option is enabled
returns true if the plugin supports upload
returns true if the plugin supports download
returns true if the connector called an omni connector
returns the connector used to connect to the server
returns the connectortype
this method is called upon plug in activation
this method is called when the plug in is stopped
returns the controller
returns the plugins resource bundle
the user has changed some resources from this resource
add a listener to be notified when the provider is changed
removes the listener
converts this exception to a core exception
gets the omni repository provider
used to inform if the content of the resource has changed
returns the resource for the given object
post the label events to the label provider
called when disposing the editor
sets the default values of the preferences
this method is called upon plug in activation
this is a callback that will allow us
this method is called when the plug in is stopped
get the resource bundle
initialize images from the resources
creates an image descriptor and adds it to the map
returns the type
passing the focus request to the viewers control
create a composite control and set the layout data
creates a label
creates the progress monitor part
creates the progress monitor part
initializes this wizard
creates a wrapping label
returns true if the page is complete
utility method that creates a combo box
add the page to the wizard
creates a text field
creates a checkbox
utility method to create an editable combo box
creates a group
called when an exception is thrown during the wizard
clears error message
returns the secondary progress monitor
creates the project name group
checks the current target location
set the project name for this project
open an appropriate directory browser
create the control
returns the target location if set
creates the file name group
returns the omni repository provider for the given resource
returns whether the given resource is a project description file
initializes the wizard with a selected project
update the server type combo box
gets the uri
sets up the test suite
test for save
test lock line
test add line
test insert auto generated document hash
test delete line
test of update line method of class com
sets up the test suite
sets up the test suite
returns the hashcode for this document
closes a document with its hash
browses the list of documents
action listener implementation for agi
action listener implementation for vit
action listener implementation for int
action listener implementation for des
action listener implementation for sor
action listener implementation for jb str
change listener implementation for jb agi
action listener implementation for jb vit
change listener implementation for jb vit
change listener implementation for jb int
action listener implementation for jb des
change listener implementation for jb des
action listener implementation for jb luk
change listener implementation for jb luk
action listener implementation for str cost
action listener implementation for agi cost
action listener implementation for vit cost
action listener implementation for int
action listener implementation for des cost
action listener implementation for luk
action listener implementation for matk
action listener implementation for hit
action listener implementation for statuspoint
action listener implementation for guild
action listener implementation for def
action listener implementation for mdef
action listener implementation for aspd
determines if the application is ready to run
loads the domino log
refreshes the view of the current log
handles tree log widget selection events
description of the method
this returns a code string code representation of the
this returns a code string code representation of the
this returns a code string code representation of the
sets the authentication user details service
sets the engage service
return the credentials used for authenticating the user
sets the api key
gets the users profile
sets the application id
sets the application domain
gets the users access credentials
sets the token url
returns the merged poco
sets the language preference
sets the proxy host
returns the application domain
sets the proxy port
sets the username for the proxy server
returns the token url
sets the password for the proxy server
returns true if the token is a oauth token
sets the connect timeout
get language preference
returns true if the type is facebook
sets the read timeout to a specified timeout in milliseconds
returns true if the type is windows live
sets the list of names of the provider that are currently being used
sets the activity provider names
returns the oauth token secret
gets the value of the access credentials property
gets the value of the eact property
get the merged poco
returns whether the limited data property is set
returns true if the type of this object represents a job
sets the api key for the configuration
returns true if the type of this code player code is
returns the formatted version of the original string
sets the configuration identifier of the configuration system
specifies the application domain name
set the token url
returns true if the association represents a work
returns true if the association represents a home type
returns true if the type is
specifies the language preference
specifies the host name of the proxy server
set the proxy servers port number
returns true if the association represents aim
specifies the username that will be used for authentication
returns true if the type of this object is mobile
returns true if the association represents google talk
returns true if the destination is a fax
returns true if the association represents icq
returns true if the association represents a pager
returns true if the type of this object is xmpp
set the password for the proxy
returns true if the type of this atom is msn
returns true if the current os type is skype
returns true if the association represents qq
set the code connect timeout code value
returns true if the association represents yahoo
set the read timeout value
set the list of names of the provider which will be used to
sets the list of available
returns true if the token is a blog token
is this a contact
returns true if the type is
returns true if the value is acquaintance
is the friend friend
checks if the value was met
returns true if this value is a co worker
return true if the value is colleague
returns true if the value is a co resident
get the response as json
returns true if the value is a neighbor neighbor
convenience method to get this response as a jsonobject
returns true if this is a child
returns true if this is the parent node
determines if this is a sibling of another node
returns true if the value is a spouse
is the value a kin
returns true if use is muse
returns true if this is a crush
returns the preferred username
checks if the value is a date
queries the value of the sweetheart property
checks if the value is me
gets the json response string
determines if this is a male gender
checks if is female
returns the verified email
returns the user generated content
sets the user generated content
sets the action links
sets the text
sets the value of media
returns the swfsrc
set the swfsrc
converts an input stream to a string
gets the anniversary
gets the looking for
gets the value of the profile song property
returns the profile video
evaluates the query with the current sparql query language
returns the syntactic type of this instance
add an aggregate to this grouping
return the lexicon to be used by this voice
add the lexicon to the current lexicon
remove the lexicon from the list
return a string representation of the aggregate
sets adjective to the lexical entry
returns the adjective lexical entry of this resource
returns the syntactic representation of this node
sets the specified predicative representation
returns the current adjective modification for the selected policies
this sets the adjective modification
return the syntactic module of the given argument
add the given mod to the set of arguments
set the correspondence of the sem correspondence
returns the syn correspondence associated with this synapse
add an argument to the list of arguments
set the subject to be the subject of the current message
return the subject that this rule is defined in
sets the domain of the function
returns the domain of the semantic argument if it is a domain
sets the range
returns the range of the semantic argument whose name is given by this
this sets the transitive rule for the transcription
returns transoforization component as a subcategorization component
sets the verb to be used for the translation
returns the verb object of the lexical entry
sets a property predicate to be used as a semantic predicate
returns the property predicate
sets the property predicative representation
returns the property predicative representation
returns the preposition of this node or null if none
set the pobject at the current stream
return the pobject that represents the current token
sets the intransitive for the timer
returns the intransitive pp of the current date in intransitive
sets the verb phrase
returns the verb phrase for this object
returns the class predicative representation
sets the class predicative representation
get the current adjective modification
set the new new adjective mod
make a class adjective aggregate
creates a literal adjective aggregate given sense and uri
sets the noun for the user
gets the noun pp attribute of the login bean object
sets the noun phrase
returns the noun phrase for this dictionary entry
getter for the sense
setter for the sense
sets the syntactic behaviour
make a proper noun aggregate given a specific pair of uri and a lemma
returns the syntactic behaviour
set the lemma of the lexical entry
return the lemma of this lexical entry
makes a noun aggregate given a sense uri and a lemma
set the lexical entry that this class encapsulates
returns the lexical entry that contains the lexical entries
returns the subcategorization frame
it makes a lexical entry using the given lemma and uri
sets the subcategorization frame
returns the representation of this node type
sets the specified predicative representation
returns the semantic predicate
sets the semantic predicate
get the syn correspondence that is loaded from the semantic mapping file
set the syn correspondence of the sem correspondence
this adds all elected lexical entries to the lexicon
removes given lexicon from the current lexicon
adds the content of this aggregate to the ontology
sets the noun to the given string
returns the noun for this word
returns the morphological pattern for the given type
returns the morphological pattern for the given uri
return the syntactic property with the given syn prop name and value
given an aggregate containing a list of strings return a single string
return a lexical representation of the given aggregate elements
lexicalizes a multi word
selects a single match
sets the match selector
read a lexicon and return a lexicon aggregate
sets a uri for the given language
returns the code urimethod code for the given language
returns the generation mode of the communication
sets the generation mode of the communication
set the match selector for all rules in this composite
serialize the current lexicon to a file
sets the postagger pos tagger to be used for the input
get the lexicon aggregate for a given language
sets the completed state of the result
returns the scope for a given language
sets the scope for an onto nlpmanager
sets the language label extraction policy
return the lexicon ontology that is being used by this engine
returns the ontology of the domain problem
add a listener for the result of the gen gen result
gets the alpha2code
gets the alpha3code
gets the iso 639 2 code of the language
returns the number of the specified element in this set
iso 639 3 code
returns the probability of the pos tag
sets the number of tags and their associated values
computes the weight of the term
get the maximum probability of the block
opens the dictionary
inits the postagger
checks wether the given word is in the current synset
checks w1 and b2
returns the onto nlplabel object associated with the extraction policy
returns the offset in the array of the given wn reference
returns the pos where the cence is
returns the code hypernym relation code of two words
returns a regional variant of this language
returns the best token for the given synset
checks whether a stopword contains only stop words
init method to initialize this servlet
used to retrieve a parameter from the initialisation parameters
returns an enumeration of string objects containing the names of the
used to get the name of the robot
returns the name of this servlet context
returns a request dispatcher for the named servlet model
initialize the response
logs a message and an exception
logs an exception
sets the default headers for the servlet containers
returns the server info
returns an attribute of the robot
setter for property request
removes an attribute of the peer
sets the socket
returns an enumeration of all the attribute names
return the minor version number
sets the servlet context peer
sets the buffer size to be used
returns an input stream for reading the specified resource
returns the servlet context identified by the given uri
return the actual data size of the output stream
returns the resource located at the given uri as an
returns true if this response has been committed
uses the system to get the real path of the file
returns the mime type of the specified file
flush the buffer and commit this response
returns a url to the specified resource in the open cms vfs
resets the buffer to the default
returns a url to the specified resource in the current locale
clear any content written to the buffer
get the output stream to write the request data to
get an output stream
returns the writer for this parameter map
sets the content length
sets the content type of this header
returns the status code of the response
sets the status code and message for this response
sets the status code for the response
get the uri to the mapper
send an error response to the client using the specified status code
get the number of bytes written to the output stream
sends a message to the client to be a redirect
sets the locale of this content source
set the auto reload servlets attribute
get whether the servlets will be auto reloadable
returns true if the response message header has the given key
encode the url
encodes the given url for use in the send redirect method or if
encode the string
this is the setter method for the builder
encodes the given url
returns the servlet context peer builder
returns true if the builder needs a rebuild
sets the character encoding to the content type
returns the value of the named initialization parameter or null if not found
gets the character encoding of this body part
get the names of all headers
returns the header value for the given key
sets the value for the given header
remove a parameter from the context
adds the given header
returns true if this uri has a default model uri
returns the value of the specified request header as an int
returns the default i jo servlet model
returns the date value of the first row header with the given name
sets the value of the first int header
returns the host
adds the int header
sets the date header
returns the servlet context
adds the date header
adds the specified cookie to the response
return the class loader used by this servlet
writes any remaining compressed data to the output stream
sets the servlet class loader to be used for loading application classes
returns the servlet context peer
sets the servlet context peer
returns form login configuration
sets the form login config
returns the authentication method
sets the authentication method
returns the realm name
sets the realm name
this method returns the service
get an attribute value
sets the servlet service
sets the description for this data type
gets the service
set the value of the specified context attribute
this method is called by spring framework to inject the service
this method sets the service to be used by the servlet
remove the specified context attribute from this web application
this method is used to set the configuration
get the principal associated with this service
verify if the username and password are valid
returns an enumeration of all the attributes in the service
sets the show index
sets the description
returns the show index
returns the jsp engine
match the given method against the uri
returns true if the digest is stale
sets the jsp engine to be used by this servlet
gets the value of the auto internationalization property
sets the value of auto internationalization
check if the user is in a given role
returns the security role
getter for property model
set the servlet model to be used by this servlet
gets the value of role link
returns the file transfer compression
returns the login configuration
sets the login configuration
returns the login page to use for the form
sets the login page
returns the error page
sets the error page
sets the file transfer compression
gets the value of the transport guarantee property
gets the transport guarantee id
sets the value of the transport guarantee property
sets the transport guarantee id
return the auto mapping
adds a role name to the set of roles
removes a role name from the user
returns true if the set contains the role name for the given role
return the icon of this joystick
sets the icon
initializes this servlet
initializes the servlet
sets the display name
returns the servlet model
get the value of the named init parameter
returns the names of the servlets initialization parameters as an
returns the name of this servlet instance
writes an array of bytes
writes code length code bytes from the specified byte array starting at
returns the message
returns a string representation of this object
starts a new thread
a node was modified
adds a welcome file to the list of the users
sets the main frame of the panel
returns the icon of the target
sets the icon of the target
removes the welcome file
sets the main frame
returns the icon associated with this smily
returns an iterator over the welcome files
sets the icon associated with this label
sets the icon of the button
adds an error page to the list of error pages
removes the error page
returns the error page for the given key
adds a locale to the localized resource loaders
removes a locale
returns the resource loader for a locale
return the resource loader used by this factory
returns the root of the web application
returns the url for a specified resource
create url for given uri and locale
remove a mapping from this servlet
creates a radio button menu item for the laf menu
stores the current l f and calls update look and feel below
returns an iterator over all servlet models in this web application
adds an algorithm to the algorithm list
removes an algorithm from the algorithm list
returns an iterator over the algorithm names
returns the algorithm constructor with the given name
adds an extension to the list of extensions
removes an extension
returns an iterator over the set of extensions
returns true if the given extension is in the list
returns the repository
sets the repository directory
initilize this servlet
this is the thread that checks the cache
returns the file object for the session data
saves a serializable object to disk
checks all sessions that have been accessed and not yet released
returns the session with the given id
creates a new session and returns it
adds a session to the session store
removes a session
returns the default maximum inactive interval in seconds
sets the default maximum inactive interval in seconds
returns the servlet context peer
set the session expiration time in minutes for this
returns the session expiration time in seconds
sets the socket
set the maximum number of sessions that can be allocated in the session
setter for property response
returns the maximum number of sessions that can be created
get the remote ip address
start the session context for a client call to the server
returns the address of the remote machine
get the remote host name
sets if the session cookies are not supported
returns the value of the named attribute as an object or null if
returns if session cookies are enabled
sets the domain to use for session cookies
removes the specified attribute
returns the domain to use for session cookies
closes the stream
setter for property distributable
returns the character encoding of this part
getter for property distributable
returns the real path for a given virtual path if possible otherwise
adds the mime type
returns the set of mime types defined in this package
sets the servlet context peer
checks if the request header field is valid
if our implementation returns a servlet input stream
returns the login configuration
returns a buffered reader that provides the data
get the session id of the cookie
sets the login configuration
find the id of the session with a given id
removes a security role from the list
sets the request line
adds a security role to the jo security
sets the servlet path for this instance
returns the security role for the given role name
sets the remote user name
removes a security constraint from the list of security constraints
this is a convenience method that can be used to determine
adds a security constraint to the servlet context
gets the content type of this response
returns an iterator over the security constraints for this web application
returns the protocol part of this url
returns the port number the server listens on
returns the first value of a parameter
returns a map of all parameters in the form
returns an enumeration of all the parameter names
returns the name of the scheme used to make this request for example
get the tld for an tag library
gets the method of the request
sets the method to be used for the request
returns the tag library with the given absolute uri
get the request uri
removes the specified tag library by an absolute uri
adds a tag library
sets the request uri
get the path info value
initializes the servlet context
returns any extra path information after the servlet name but before
returns the context path of the robot
returns the query string of this request
returns an iterator over the entries in this cache
returns the remote user
sets the authentication type
returns a clone of this object
sets the default pattern for the given object
returns the default value of the enumeration
returns an iterator over the pattern map
set auth roles
removes the given object from the match map
removes all entries in the given object from the given map
removes the mapping for the specified pattern
returns the number of rules in this group
initialize the server
this method sets the host builder for this instance
returns the host builder
returns the session id specified by the client
sets the hostnames
sets the name of this object
get the server specific information
returns the value of the named attribute
returns an iterator over all servlet context peers in this servlet context
return the error page message for the given status code and exception
checks whether the session id specified by this request came in as
returns the log used by this class
set the access log for this user
adds a new wardir directory to the log
removes a war directory from the list of war directories
toggles the server name and starts the server
checks whether the session id specified by this request came in as
check whether the requested session id is still valid
p initialize the response object
reset the number of bytes written to the beginning of the stream
sets the buffer size to the given size
returns the size of the buffer
resets the buffer
forces any content in the buffer to be written to the client
writes a string to the client
print a crlf
writes a single character
writes code len code bytes from the specified byte array
flushes this output stream and forces any buffered output bytes
closes this output stream and releases any system resources
get the parameter with the given name
get all the names of all the parameters
returns all the values for the given header as an enumeration of
initialize this handler based on a service call to the client
get the locale for the accept language header
returns an enumeration of all the locales acceptable
returns the string representation of this object
parses the post data
stops the service
return the value of an attribute
initializes the servlet
set an attribute value
service the request
returns the time of last modification
clean up after parsing is complete
process the request
service requests by passing the request to the handler
returns the url as a string
this method is called by the server via the service method to
parses the code base string and fills the code base array
service the request
process the request
initialize the servlet
destroy the servlet
set the name to be used by a later caller
return an iterator of all hosts in the host table
adds a host to the list of hosts
removes a host from the jo jo jolo
gets the host with the given hostname
gets the host from the request
sets the number of seconds tomcat will remain idle before this
returns the time that the thread will wait before it is terminated
sets the maximum number of requests
gets the max requests
gets the access controller
sets the configuration url
get the location of the jo home
get the file cache
sets the service builder
returns the service builder
parse the given name and return the value as an int
handles a timer rebuilding the cache
returns true if this fragment is rebuilt
sets the mapping attribute of the jboss class settings object
rebuilds the node with the data of the given object
returns the mapping
sets the url of the data source
parse the given string as an integer
set the small icon uri
gets the small icon attribute of the ejbproject info object
set the large icon uri
gets the value of the large icon property
returns a small version of the icon
returns a large version of the icon
sets the host
returns true if the file is modified since last rebuilding
adds the class locations
obtain servlet class to be used by a caller
returns the class name of the servlet
sets the servlet class name
sets the maximum number of active instances that can be allocated from
the maximum number of active instances that can be allocated from
gets the active instances attribute of the simple data source object
sets number of active instances
returns the servlet configuration
sets the servlet configuration
preloads the servlets
set the load on startup flag
returns the load on startup
setter for property load order position
returns the load order position
sets the loaded state
returns the last access time of the file
sets a parameter for the servlet
returns the servlet context
returns the servlet context peer
adds a security role ref to the list of security role refs associated
returns security role ref by name
returns a short description of the servlet
initializes the servlet
process the request
this method is used to set the service to communicate with the application
returns the principal associated with the given user name
checks if the username and password are valid
lookup and return the ejbsecurity manager instance
sets the configuration of the session
checks if the user is in a realm mapping
get the realm mapping
this method sets the mime type for the given peer
this method sets the welcome file list
returns the name of this object
returns a reader for the current token
reads a string from the buffer
writes the contents of the buffer to the output stream
enlarge the buffer
writes a character into the buffer
writes a portion of an array of characters
write a string
write a portion of a string
prints a string
print a boolean and then terminate the line
print an array of characters and then terminate the line
print an integer and then terminate the line
this method is called by the servlet context when a reference to
print a long and then terminate the line
print a float and then terminate the line
print a double and then terminate the line
print a string and then terminate the line
print an object and then terminate the line
create new page context
releases the page context
get the current engine information
process the request
check if the query is a precompile or not
returns the partial class name
returns the jsp engine
returns the name of the jsp file
sets the servlet context peer
set the scratch directory to use
what is my scratch dir
sets the compilation units to be used for compiling
sets the compiler to use
creates a jsp parser for the specified uri
returns a model for a uri
set the class name prefix
returns the classpath that should be used to load classes
sets the generator for a language
write a single character
write a portion of an array of characters
write the page end
returns the servlet context of this web application
sets the session id
sets the session context
get id returns the id of this object
return the session context
returns an enumeration of the ids in this database
get creation time
get the last time this file was accessed
marks this file as accessed
set the value of the named session attribute
is the last access received a new access
get the maximum time interval in seconds that
set the maximum time interval in seconds between client requests
checks if the session is valid
inits the stream
inits the configuration
reads a byte from the stream
read up to code len code bytes of data from this input stream
return the number of bytes that can be read without blocking
writes the main section
close this input stream causing any buffered data to be flushed and
mark the current position in this stream
method called at start of tag
sets the name of the variable that contains the item that will
set the type of the variable
process the start tag for this instance
method called at start of tag
sets the expression
executes when the tag is started
process the start tag for this instance
process the body content of this tag if any
set the style of the date format to the given value
sets the language
sets the repetition count
process the start of this tag
process the body content of this tag if any
process the start of this tag
sets the session context
returns true if the data is valid
checks if the configuration is valid
returns the number of milliseconds since the job was running
return an attribute from this element
sets an attribute for this style
set the name of this service
register a client with this server
unregister a client from the registered clients list
returns a session from the list of sessions
creates and returns a new jo remote session
adds a session to the list of active sessions
returns the number of the current token
remove session from session list
returns the default maximum inactive interval
set the default maximum inactive interval
unregisters the remote session context
adds a session to the context
removes a session
returns the default max inactive interval
sets the default max inactive interval
returns the name of this tag as a string
returns an enumeration of all the attributes in this attribute set
return the value of an attribute with a given name
returns true if this is an end tag
returns true if this is an empty tag
parse a string from a stream
returns true if this file is well formed and has not been saved
returns the start of the tag in this pdu
returns the closing tag of this class
sets the default element constructor for this class
returns the default constructor for the class
sets the magic char
returns the magic character
sets the url
returns the url for this document
parse a string from a stream
returns the data
get the length of the string
append a character to the internal buffer
called after the parsing of the data
returns the default element of the type
add element class to the element map
remove the element class from the map
returns the constructor for the given tag name
close the reader
reorders the start array so that the elements are ordered by length
sets the throwable object that caused this exception
returns the throwable associated with this exception
gets the tag start of the specified class
returns a short description of this throwable
called when the parsing is finished
compile the source file and write the output to a file
sets the command used to compile the compiler
returns the command used to compiler
the to string method
returns a string representation of this object
sets the path to the class loader
add a classpath to the classpath
set the output directory
sets the uri for this document
returns the string representation of this error
set the classpath to be used when looking up a resource
returns a string representation of this object
return a new server socket
set the backlog of this jxta server connection
returns the backlog that is configured for this database
returns true if the server is bound to a server
returns a string representation of the object
closes the datagram socket
returns whether the datagram is bound to a datagram socket
returns the service
initialize this handler
returns the service attribute
set the value of a service attribute
return the thread group for this thread
returns the service start time
set the key store format
returns the key store format
returns the stopped
sets the keystore url
returns the keystore url
sets the protocol used for this connection
returns the protocol
this method returns true if the group is restartable
sets the need client auth
returns whether client authentication is required
set passphrase to be used for encryption
sets the server socket factory used by this importer
returns a string representation of this object
sets the timeout for this connection
returns the current timeout for this connection
returns information about this server
handle so timeout
set the handler factory
returns the current timeout value of this service which may be
returns the port
set the port of this socket
returns the bind address
returns the handler factory
set bind address
returns the service
sets the classname of the handler that will be executed
sets the name of the rule
returns a string representation of this object
trims the capacity of this node to be the receivers current
returns the number of registered handlers
returns the packet
returns the classname of the handler that manages this exception
returns the level of the node
return a string representation of this object
sets the name of the service
returns the name of the log
returns if this was a log message
return true if the log level is set
removes handler from the pool
print a comment to the log
logs an exception
log the given message at the specified log level
log an exception
sets the log level
returns the log level
checks if the stream is correctly configured
compares the specified object with this writer for equality
returns the hash code of this object
called when a hypertext link is updated
set the maximum number of handler threads
get the maximum number of handler threads
set the minimum number of handler threads
get the minimum number of handler threads
returns an enumeration of the names of all the listeners
this implements the expansion semantics of ensure capacity but is
returns the major version
returns the minor version
sets the major version of the class file
characters are copied from this string buffer into the
sets the minor version of the class file default is 0
returns the value to which this map maps the specified key
returns the number of active handler instances
removes the mapping for this key from this map if present
removes all of the elements from this collection optional operation
returns the number of handlers registered in this handler pool
appends the string representation of the code object code argument to
appends the specified string to the buffer
appends the string representation of the code char code array
appends the string representation of a subarray of the code char code
appends the string representation of the code boolean code argument to
writes the specified byte to this output stream
writes code len code bytes from the specified byte array
returns the number of bytes written to this stream since
returns true if there are more elements in the array
resets the counter of written bytes
appends the string representation of the code char code
sets the capacity of the cache
returns the capacity of this queue
returns true if this cache contains no key value mappings
returns true if the queue is full
appends the string representation of the code int code argument to
returns the number of objects in this group
returns an iterator over the elements in this collection
removes all of the elements in the specified collection from this collection
removes the given object from this set if it is present
appends the string representation of the code long code argument to
b note b this operation works by assuming that the value is
return the class for a given name
return the class for a given class name
get the object for the given class
get an object created by this factory
removes the mapping for this key from this map if present
makes sure that the path is fully qualified
appends the string representation of the code float code argument to
returns an iterator over all packages in this package
removes all elements from this queue
appends the string representation of the code double code argument to
delete the characters in a substring of this sequence
delete the character at the given index
replaces the characters in a substring of this sequence
sets the throwable
print stack trace
print this throwable and its backtrace to the specified print stream
returns the line number of the current reader
print this throwable and its backtrace to the specified print writer
returns a short description of this throwable
inserts the string representation of the code char code array
returns a set view of the keys contained in this map
inserts the string representation of the code object code
returns a short description of this throwable
insert the string to the buffer
resolves the specified public id
adds a key value pair to the map
pipes the contents of this file to the given output stream
sets the underlying exception
returns the number of bytes read from the input stream
reset the number of read bytes to 0
inserts the string representation of the code char code array
returns the number of characters read from the input stream
write a newline
reset the read chars
writes the attributes of an element
reads the next byte of data from the input stream
read characters into a portion of an array
inserts the string representation of the code boolean code
writes the specified node
read characters into a portion of an array
write a cdata node
skips over and discards n bytes of data from the input stream
mark the present position in the stream
reset the reader
closes the underlying reader
writes out the node for an entity
insert a char to the buffer
return a string representation of this timer
inserts the string representation of the second code int code
inserts the string representation of the code long code
inserts the string representation of the code float code
inserts the string representation of the code double code
writes the specified byte to this output stream
reads the next byte of data from the input stream
writes code len code bytes from the specified byte array
writes all the characters in this string buffer to the given string buffer
setter for property chunk extension
return the extension of the files to be uploaded
get the trailer
returns the number of bytes that can be read without blocking
set the trailer
marks the current position in this input stream
flush the output stream
writes the chunked encoding of this chunk and closes the underlying
this method always throws an ioexception since this class does not implement
returns an enumeration of all the header names
returns the name of the header at given index
compare two weighted values
returns the header at given index
get the response code
sets the end position of the range
returns the value for the given header key or code null code if
get the response message
sets the header with the given key and value
parses the uri string and sets the parameters
gets the path part of this code url code
sets the path
sets the parameter of this object
returns true if this connection is using a proxy
gets the value of the parameter attribute
returns an enumeration of all the parameter names
returns an input stream for this socket
returns a set containing all the names of all the parameters
return an output stream for the connection
consumes the input stream until a crlf is reached
get the value of an parameter
this method returns the value of the named header field
get the date value of the named field parsed as a long
read from the http response line
reads the request from the specified input stream
returns the value of the named integer header if it exists
returns the key for the nth header field
read in the http response from the specified input stream
this method writes the rik data to the output stream
writes the contents of the string buffer to the specified output stream
gets the date value of the specified header
returns the status code
this can be used to get the nth header field of a http response
sets the status code for this response
sets the status code for this response
sets the value of the specified integer header
sets the value of the code if modified since code field of
returns the reason phrase
adds the int header
sets the method on the request line
sets the reason phrase
gets the method of the request
set the date value of the specified header
read a line from the given input stream
reads the request line
sets the protocol to be used for sending the request
add the given date header
writes the content of this file to the given output stream
set the date header
gets the request protocol
add the given date header
set a request header value
sets the method
add a request header
returns a copy of this request line
get the request header value
sets the modified flag
unset the modified flag
add an address to the list of valid addresses
stops all the services that are running
rebuilds the service meta server
builds the service
test the new id method
test a jsp directive inside the page body
test quoting in attr directive
test the get attribute methods
test the set header methods
test the get and set date header methods
test that the set int header methods work correctly
test parsing of a ccomments element
tests that ccode comments are not followed by comments
tests parsing of cpp comments andcomments
tests that a cppcode comments are not repeated
test basic http status code with bad request
initializes the servlet
initializes the servlet
returns the name of the method to call
service the request
use this method to init the servlet
service the request
initializes the servlet
get method for the echo servlet
this method is called by the server via the service method to handle
destroys the guestbook
print standard http header
prints the footer to the given writer
add an entry to the list
convert the email to html string
returns the time that this event occured
pauses the timer
start the timer
stops the timer
returns the accumulated time
get the stop state
returns the start time of this process
returns the state id
adds a listener to this stop watch
removes a listener from the stop watch
indicates if there are edits that can be redone
returns true if there are edits available for undo
adds a listener to this registry
removes a listener from the list of listeners
performs the redo operation
finds the entry locator associated with the given entry
undoes the last action
returns the maximum number of undo items stored in the undo history
sets the maximum size of the undo stack
resets the state machine
resets the internal state of this object to its initial state
reset the undo manager
return the basic security service instance for the given ibasic security service
returns the application object
creates a json service exception from an exception
returns the configuration
get the rest client
writes the response status to the log
gets the value of the alfresco ticket property
get the ialfresco user service
get the configuration
alfresco configuration
create the user name text field for the user name
closes the dialog
this is the entry point method
this is the entry point method
increases a certain type of space by one
this is called when the type changes
counts the number of properties of a given type
this method checks whether there is a monopoly associated with the
checks if the given property is already renovated
repaints the component
this is used to send an osc packet to the server
adds a new argument of the given type to the list
set the types and arguments
add a new osc message to the collection
align the stream to the first 4 bytes
gets the xml representation of the osc message
this method initializes j tabbed pane
this method initializes j panel4
this method initializes j text pane
this method initializes j text pane1
this method initializes panel chart tr
this method initializes panel chart test
this method initializes j text field hidden units
this method initializes j text field learn rate
this method initializes j text field val perc
this method initializes j text pane simple classifier
this method initializes panel
this method initializes j combo box
this method initializes j combo box1
this method initializes text hidden units
this method initializes text learning rate
this method initializes text validation size
this method initializes j text pane op
this method initializes j check box op classifiers equals
this method initializes j combo box11
this method initializes text hidden units1
this method initializes text learning rate1
this method initializes text validation size1
this method initializes j text pane op1
this method initializes j text field specialist modules
this method initializes j combo box pre processing
this method initializes j text field classes to module
this method initializes this
sets the minimum number of genes in a geneset
sets the max
adds a new progress event with the given controller event count and
adds a controller event to the queue that will be dispatched to
adds a cancel event to the wizard
returns the base window
returns the container editor
initializes the progress bar
cleans all attached views
initializes the editor progress bar
returns the filters list model for the given desktop
adds an error object to the queue
repair the object from db
initializes the list
inits the model
registers a vc view controller object to listen to view events
returns the object id of the component
removes the view from the listeners
returns the file name
returns the appropriate title for this container as a string
return the name of this model
returns the description of the container
look up the component by id
called when user selects an object
returns the permissions for this view
clear the property tree
adds a model selection stage to the section
reports the exception to the user
returns the queue listener
opens a new container window
returns the operation queue
initialises the context menu
returns the view controller
called when ok button is pressed
update the label of the container
checks if the user is a valid container
called when ok button is clicked
checks if is compound row
selects a primary tab
returns the desktop that holds all users of this application
opens the popup
selects the secondary tab
called when the tabbox needs to be resized
close all tabs
initializes the inner data collections
puts all proxys in the queue to the queue
called when this tab is created
send a window event to the parent
sorts the table according to the last used column
attaches a new window to the controller
returns the window controller of the window
sets the values for copy operation
returns the container id of the currently selected tab
unlocks the given item without touching any other items
show a child window
sets the processing progress of the current operation
this method is called when the user changes the value of the
returns the parent window of this window
sets the tree model
destructor for the oql query
sets the tabbox
returns the information panel
this method is called when the size of the editor changes
called when a view select message is received
opens the tree to an object
closes the currently selected filter if any
adds the model to the list of users
add a model to the list
opens a naming specification window
sets the initial object ids
opens the view to the initial object
sets the buttons to be disabled and disabled according to the current
reports the lock exception
returns the container
sets the model view
add a group to the list of selected groups
add show window event to queue
adds a message stage to this
set the wizard window
adds an upload stage to this animation
adds a new download stage
adds a new
adds a progress stage to the list of progress stages
sets the progress of the animation
show the next stage of the crawl to finish
show the back button
initialises the context menu event listener
sets the permissions
show a message to signal that the stage is canceled
cancels the wizard
filter the log model
returns true if this cache entry is expired
reset the expiry date for this object
called when the date selection changes
returns whether the repository is locked
this method returns the lock state for the given lock id
clears a lock for the object
returns the date the lock was created
update the progress bar
this method is called when the user changes the input information
this method is called when the check box checkbox is checked or unchecked
make a copy of a property
sets the input status
do the uploading of the files
get the id of the container
downloads a file on the messagebox
returns the icon name for the given boolean value
creates and returns a copy of the object
returns a label for the given boolean logon
makes a clone of the object
returns true if the lock is expired
executed on ok button click
updates the object information in the dialog
add a message to the message buffer
defines if this field is a controlled access or not
returns the message that was sent
gets the value of the controlled access property
returns the id of the container
get the parent name
gets the value of the type alias property
add a child to the model
adds a list of properties to the list of properties
adds a list of properties to the set of properties
gets the category attribute of the structure entry object
returns the read only
shows the window
creates the path from the list of paths
this method initializes lost and found
get the first container
deletes all data from the xml files
this method is called when the ok button is pressed
get the second container
gets the property name used to compare the values
sorts the data
this method is called when the user cancels the upload of a
remove a property from the document
edits a property value
adds a new property definition
adds a property definition
edits the type of the given property
shortcut to modify a property value in the current user
this method will be called to edit an edit icon
open editor to modify a property
edits the name of a property
edits a property from an object
sleep for a specified number of milliseconds
rename a property
edits the property type
returns the total number of elements in the array
edits a property type of an object
this method resizes the editor window
remove a property from the list
edits a property
edits a property of an object
get the number of structural descendants of an object
ensures that the location property in the target path is
restores a script object from the library
delete all objects from the xml space and release all resources
commit the current transaction
clean the xml space
this method creates a custom filter object
saves a filter to the db
updates the properties of the selected entry with the values from the
set the filter for all types
checks if the property exists in the db
returns true if this filter is a all object filter
gets the value of the field
moves to the next element in the container
starts parsing the xml file
create a thread to report the total number of xres
builds the files
removes any old files from the output directory
creates a new file ready to be written
sleep for the given number of milliseconds
sleep for 0
gets the value of the specified field
moves to the next row
clean the document and release any allocated resources
sets the running flag to true
cancel the transaction and exit
this method returns the number of completed tasks
sets the component to read only
returns a collection of xml documents that were parsed
clean the transaction log
returns the property number
clean the xml space
returns true if this version is versioned
returns the id of the clipboard
returns the version number of the specified version id
returns the date of the version with the given id
returns the version id for the given version number
returns true if the clipboard is copying the contents of the clipboard
return true if the given version id is the head version for this
returns the version identifier of the head file
checks if the specified object is in the clipboard
get the version number of the head
gets the date of the head version
determines if this scheduler is automatically active
returns the date and time of the next automatic call to
gets the automated period
returns the version number of this version
increments the version number
this returns the id string for this version
set the label value
returns the comment of this version
getter for property head revision
returns the xml document
cleans up the resources used by this class
deletes all objects from the xml space and cleans up all references
method for getting the new checkpoint thread
delete trash object
restores an object
get the next date by the date specified
commit the current transaction
abort the current transaction and delete it from the database
compares its two arguments for order
creates a container editor with the given file name and container name
restore object from the specified array list in the persistence store
deregister a child security policy from the registry
creates a container based on the given information and container name
restores a list of objects
sends a policy event to all child policies
adds a permission to the permission list
remove a permission from user id
returns the statistics for the mutexing
get the current container security policy
get the gridcell that is currently open in the editor
sets the parent of the current node
get the database home directory
sets the gridcell that is currently open in this grid
returns true if the receiver is a leaf
get import path
returns the child at the specified index in the child list
changes the icon for an edit operation
get export path
sets the parent node of this node
called from edit object property name
returns the maintenance status
removes a child at the given index
method index of
inserts the specified child at the specified position in this list
user permissions change
starts editing the code source object code property with the
get the user tree node for a given user id
adds an admin to the tree
add a node to the write list
add a modify user tree node
returns the current week id
add a user node in read subtree
removes a user tree node from the list of admins
get the name of the current week
remove a user node from write list
remove a node from the list of modifynodes
remove a user node from read list
checks whether the text file contains a valid process and
gets the permission of the given user
returns true if the given user id is in the node map
returns new trash clean up thread
remove the node at the specified index
set the permissions for the organiser
inserts the given child at the specified position in the list
returns the user tree node
stops the thread
returns the target of this entry
adds a context variable
returns the xml results object
clean the transaction log
clean the thread
add an object to the queue
cancels the timer
gets the new cache clean up thread
stops the thread
clean the xml document and release all resources
checks if the current thread is paused
called when a new category is selected
called by the gui when a new container is created
this method is called whenever a new container is created
organiser container from source to target
rename a container
getter to return the historian
add standard entry
this method prepares the naming path for the old class name
returns the log start date
add the specified entry to the sampled entries list
adds a new user logon event to the online log
gets the log file model for the given date
returns the fetcher thread that will be used for asynchronous new
creates and sends an add event
this method is called by the edit object lock manager
creates and sends a add event
creates view event using the objects id and user name as the source
returns the name of the type of this field
creates and sends a move event to the view
creates a view event object and sends it to delete it
returns the container id
creates a view event object and sends it to delete the object
add a new viewable object to this view
adds a new object to a container
gets the value of the specified field
move to the next object in the list
creates and sends a lock event
returns true if the user can admin the service
creates a new view event object and sends it to the client
delete the xml space and cont manager
unlock an object
returns the object id of the first object in the chain of
returns the second object id
returns the extra data associated with this gene
updates the user attributes with the new given name
modifies the password for the given user
resets the user password
gets the distinguished name dn
get the surname
creates and sends an unlock event
gets the telephone number
sets the distname
set the sn surname
sets the given name
sets the email address of the user
sets the telephone number
sets the role
sets the password
sends a check in start event to the listener
creates a new view event object and sends it to the client
e u w f n g
send a check in finish event to the listener
closes the connection to the ldap server
returns the empty selected group
creates a new view event object and sends it to the client
get the session id
this method is used to restore an orginal location from the lock server
returns the scratch container editor
gets the default container
cancel changes to a user
removes a view controller for a file name
leaves the application
deregisters all view controllers on user logout
returns the role name of the ldap server
creates and sends a
add container entry
remove a container entry from a section
creates a new view event and sends it to inform listening
stops the thread
creates a new view event and sends it to inform listening
forces the task to run again at the current time
adds a modify event to the modify event queue
creates a modify event and sends it to all members
returns true if the application is initialised
registers a scheduler
get the scheduler service
returns the historian for the current system
returns the registry of plugins
creates a new view event object and sends it to inform listening
called when user logs out from system
shutdown the ldap server
get the ldap controller
gets the entry that this property belongs to
returns the index of the item or 1 if not found
adds all items of the given hash map to this collection
cancels the wizard
sets the signals parameters
returns whether the given object is in the container
gets the value of the specified field
updates all the items in the list with the given ids
sorts objects by their position
adds a title to the current row
adds a new value to the list of values to be displayed in
adds a value to a column in the current row
adds a blank row to the table
returns true if the output of this writer can be multiline
returns the number of columns in this code table code
returns the number of lines in the test
sets the value
returns the first value
adds multiple values to a column
removes the model item with the given id
returns the object which is the root of the tree
opens an importer
gets the value of the specified field
returns the object which is used to trash this object
removes all the elements of the list with the given id
get the aug object of an object id
returns the model item with the given id
returns the wrapper for the object with the specified id
sorts the data
returns true if this set contains an object with the given id
re sort the table
get the naming specification with the given name
gets the value of the primary naming specification property
set the primary naming specification
is a given property on the naming service
remove a naming specification
returns true if this file is a head version
returns the head version of the database
locks the current version and the given user id
get the version controller
method to convert a list of strings into a database string
returns the title of the column at the given index
returns the string for a date in the xml format
returns the property that is represented by the given path
remove the specified specification from the context
the entry point for the functional log file
checks if the current user is allowed to use this expression
performs arbitrary actions before authentication occurs
un authenticate the user
removes a role from the users subject group
checks if the current user has the given permission
evaluates the given expression creates a boolean instance
this method does not currently support dissipation rate and and and
start the simulation
stops the current simulation
gets the time
simulates ext sources triggering external step
return the duration of the media in milliseconds
returns the view with the given id
sets the default window layout
changes the theme for this window
creates the menu where the window bars are enabled and disabled
creates the menu where views can be shown and focused
initializes the calculator gui
returns the button pressed
get button label
gets the text
sets the text to display
returns the command response
called when the server wants to send a message to be displayed to
called when file status information has been received
returns the name of this class
returns the command provider for the specified name
checks if this is a terminal response
returns the date formatter instance that the entry date is stored in
gets the entry conflict date
checks if this is a terminal response
gets the entry conflict date
returns the string representation of the object
returns the status string
set the file to be read only
returns whether the content is binary or not
returns the line ending
return the transmit text file preprocessor
sets the line ending
sets the transmit text file preprocessor
get the rcs diff file preprocessor
sets the rcs diff file preprocessor
returns a string representation of the length argument
set the connection for this message
description of the method
this method opens the connection to the server
returns true if the process is open
closes the process
gets the underlying throwable that was thrown by the
returns the admin handler
get the input stream
get the output stream
fire a cvsevent to all the listeners
shifts the given text to the front of a plain text
returns true if this is a
sets the admin handler
sets the fire enhanced event set flag
fire an event to a listener
description of the method
get the file info container
fire an event to a listener
called when a file is added to the file system
called when a file is removed
called when a file is updated
called when file information is generated
fire an event to all listeners
invoked when the application is terminated
called when a module is expanded
returns the file path
fire event to listeners
fire the event to the listener
authenticate with the server
sets the tagged
fire an event to a listener
fire an event to the listeners
this method is not implemented
authenticate with the server and open a channel of communication with
returns true if the builder is set
sets the builder
called when the server is terminated
sets the local path of the project
called when the program is terminated
returns how the command would look like when typed on the cvs
sets command line options for this command
returns the command line options string
returns the status of the first command
set the files to be displayed
resets the command to be unloaded
returns the command line arguments as a string
returns the password encoded
returns whether or not the document should be checked that
p get the xth file
sets the value of check that unedited
returns true if the user is forced even if edited
controls whether even even files are edited
sets the is first command
returns the temporary watch
sets the temporary watch for this watch manager
sets the password
returns the file handler that will be used to determine uncompressed files
this method returns true if the file time is valid
returns the options string used in the command line
sets the uncompressed file handler
resets all switches to the default cvs command
sets the next file date
sets the variable name to be used for this request
returns the file handler for gzip files
sets the global options used by this formatter
closes the connection
returns a new builder
adds the request for the specified file to the request store
sets the variable names of the cvs
returns how the command would look like when typed on the command line
setter for property do no changes
resets the command to be executed recursively
sets the file handler for gzip files
this method was created by a smart guide
adds the request for the given file to the directory
getter for property do no changes
add the argument requests
gets the value of the keyword substitution options property
dont use the gzip file handler
answer whether the receiver is checked out files read only
sets the keyword substitution options
returns the repository file name
returns true if the server is open
sets the repository file name
sets whether directories will be copied or not
sets the checked out files read only
returns a string representation of the object
return the right revision of this item
returns a builder that builds the difference between the given event and the
returns whether directories will be expanded during the build
checks that the connection is open until it is opened
sets the right revision
return the left revision of this page
setter for property left revision
set whether or not to use gzip compression
returns the before date1
gets the command request that caused this exception
returns whether watch option is allowed
returns whether or not gzip compression is used
mutator method for x before date1
resets this command to command state
returns the revision1
returns how the command would look like when typed on the cvs
returns the command line arguments
returns the watch mode
sets the watch mode
set the first revision number
returns the watch
set the compression level
returns the revision2
setter for property watch
return true if history logging is not enabled
sets the revision 2
set whether or not history logging is disabled
set the files
returns the before date2
returns an export builder
returns true if the quiet option is set to true
mutator method for x before date2
description of the method
sets the flag that controls whether or not the counts for each
gets the value of the keyword subst property
returns an iterator of all the watchers in this collection
returns whether the quiet option is set or not
returns the watches
converts a local directory path to a file name
sets the very quiet value for this field
return whether or not the transaction is currently watching
removes empty directories that dont exist
sets the keyword subst
returns true if the user is watching the file
returns whether the user watching unedit
return true if tracing is enabled
returns whether or not this is a temporary commit feature
getter method for export by date
gets the value of the keyword subst property
returns true if this is a temporary edit that is not yet saved
returns true if temporary edit is in progress
sets the trace execution flag
create a builder for the given event manager
returns the repository
sets the keyword subst
setter method for export by date
returns whether help messages should be displayed
return the export by revision
sets whether the help text of the command is displayed
returns true if this entry represents a directory
resets all command parameters to their default values
returns a string representation of the object
returns if the version of the plugin is shown
setter for property export by revision
sets the module
sets if the version property should be displayed or not
get the export directory
returns true if cvsrc must be ignored while copying files
returns whether all whitespace in the source code are ignored
sets the value of the ignore cvsrc property
sets the modules
the export directory setter
sets the ignore all whitespace
setter for property temp dir
returns whether or not the blank lines are ignored
gets the value of use head if not found
returns how the command would look like when typed on the command line
returns the date that the next file was added to the archive
set whether blank lines are ignored
sets the use head if not found
returns a clone of this code node list code
creates and returns a new builder
getter for property not shorten paths
add the module to the set of expanded modules
sets the command to execute for the given option
setter for property not shorten paths
returns how the command would look like when typed on the cvs
getter for property ignore space change
returns the string representation of the command line options
returns true if the program is not run in the module
returns wether modules are shown or not
set the ignore space change value
description of the method
sets the not run module program
sets if modules are shown in the tree
getter for property context diff
setter for property context diff
returns the status of the file
tells if the modules are shown with their status line
sets the status attribute of the main frame object
returns the status as a string
getter for property unified diff
set the status file status
sets the status of showing modules when modules are shown with
getter for property working revision
setter for property working revision
returns the repository revision
setter for property unified diff
returns a builder
setter for property repository revision
resets the command to its original state
gets the value of the include tags property
create a log builder
sets whether to include javadoc tags or not
sets command line options for the command
this method returns how the command would looklike when typed on the
returns the sticky tag
return true if this is the default branch
returns whether directories will be expanded during the build
resets the command to its original state
set the default branch
sets the sticky tag
this method was created in visual age
gets the date filter
gets the value of the sticky date property
p set sticky date p
sets the date filter
p returns the sticky options
returns the header only
p set the sticky options for this component
returns the pipe to output
sets the header only
getter for property no tags
setter for property no tags
sets the list of modules
returns the revision filter
return the list of sym names for the given revision
sets the pipe to output
set the revision filter
returns the repository filename
returns the state filter
sets the repository filename
sets the state filter
gets the user filter
getter for property head revision
getter for reset sticky ones
sets the user filter
setter for property head revision
setter for property reset sticky ones
gets the access list
sets the access list
get the keyword substitution attribute value
gets the use head if not found value for this search retrieve request type
set the keyword substitution attribute
getter for property total revisions
setter for property total revisions
creates a new builder
returns the force commit
getter for property selected revisions
send request for file delete clean copy
sets the force commit
setter for property selected revisions
sets the build directories flag
returns the global options
returns whether build directories will be generated
returns a clone of this object
returns the lock
called when the server wants to send a message to be displayed to
sets the clean copy
get all files in directory
return true if the file time should be checked
gets the value of the clean copy property
returns the revisions as a list
returns true if this action will delete the selected items before
sets the delete before remove
whether or not locally files are ignored
whether or not locally files are ignored
if true delete all files locally when this directory is
creates a builder
return a list of the symbolic names for the given revision
returns how the command would look like when typed on the command line
gets the value of the checkout by date property
sets command line options
returns a string representation of the object
sets command line options
resets this command to command default state
this method was created by a smart guide
set the checkout by date
returns a string representation of the object
returns the string representation of the command line options
checkout by revision gets the value of this field
method that creates a builder
sets the map of wrappers
returns null because this builder is not relevant for the given event manager
adds the given message to the request list
set the checkout by revision
returns the value of the sticky tag for the given directory
return the map of wrappers
returns the log message as it was read from the file
gets the value of checkout directory
returns the update by date
returns the release tag
sets the log message from file
set the release tag from the trimming string
sets the checkout directory
set the value of update by date
returns the no module program
set the log message from the config file
sets the no module program
return the update by revision
set the name of the module
li rss 1
set the value of update by revision
returns the vendor branch
registers a wrapper for a given pattern
returns the vendor branch not null
sets the to revision or branch
set the name of the vendor branch for this configuration
returns an unmodifiable map of wrapper objects
returns the vendor tag
returns the number of added lines
resets all switches to the default settings
set the vendor tag with the values from the data
returns the date string
sets the date string
returns the line number of the error
resets all command parameters to their default values
create a temporary file
creates a builder
returns how the command would look like when typed on the command line
returns a string representation of the object
returns the date annotation
sets the date that the annotation set should be indexed
gets the value of for all users
adds a new line to the temporary file
return the annotate by revision
set the revision number of annotation by repository
sets command line options
sets the for all users
resets all command parameters to their default values
resets all command values to their default values
gets the value of show back to record containing
creates a tag builder
returns how many cvs instructions would look like this
adds the request strings to the request list
returns whether the document is modified since the last document read
gets the value of the check that unmodified property
called when the server wants to send a message to be displayed to
adds the wrapper request list to the list of request objects
resets all switches in the command to a default state
sets the show back to record containing
returns the clear from removed
sets the check that unmodified
set if the graph is being cleared from the removed interval
returns the delete tag
does the tag delete tag
sets the delete tag
returns the make branch tag
returns whether the commits are being executed or not
sets the make branch tag
returns whether or not the existing tag will override the existing tag
sets the override existing tag value for this document attributes
returns the root of the repository for the client services
returns whether this tag should be made a branch tag
add a module to the list of modules
sets the report commits
clears the list of modules
returns true if the filename is binary otherwise false
called when a message is sent
returns the since date
does this tag override the existing tag
returns the import builder
sets the repository revision
returns the tag by date
sets the repository file name
adds a new line to the temporary file
sets the tag date
if specified this is the since date
compares the specified time with this time
return the tag by revision
tag revision mutator
returns the merge revision1
getter for property report everything
writes a string as a sequence of chars
writes a string to the output stream
returns the command line arguments as a string
adds a pattern to the list of patterns
setter for property merge revision1
sets whether or not to report everything in the test result
clears the patterns vector
read a byte
read a single byte from the stream
get the command string for this option
getter for property last event of project
returns the merge revision2
checks if the given string matches this pattern
resets the command to its default state
returns how the command would look like when typed on the command line
sets the last event of project
sets or removes the specified command
add a byte to the end of the byte buffer
returns the contents of the buffer as a string
setter for property merge revision2
get the string used for the option
returns the request string
resets the command
returns the request string that this class is based on
return true if the server has expected a response
gets the value of the conflict property
returns the request string that will be passed to the server
sets the optional argument
return true if the server has a response to the client
get the request string that will be passed to the server
getter method for report checkouts
returns the request string that this log entry represents
return the request string that will be passed to the server
returns the request string that will be passed to the server
p get the string that will be passed to the server
get the request string that will be passed to the server
get the request string that will be passed to the server
returns the request string that will be passed to the server
returns the file details that the user entered
get the request string that will be passed to the server
modifies the data in the given output stream
returns the request string that could not be parsed
this implementation does nothing
modify the output stream
returns true if this stream modifies its input stream
returns the request string that will be passed to the server
returns the request string that could not be parsed
modify the underlying input stream
returns true if this stream modifies its input stream
get the request string that will be passed to the server
sets the flag indicating if checkout tests should be used
returns the request string that was passed to the constructor
get the request string that will be passed to the server
returns the file details that the user entered
get request string
returns the request string
return the since revision
returns the sticky information as a string
return true if this hostname is not code null code
sets the since revision
sets the tag for this entry
gets the value of report tags
method get date formatted
sets the report tags
sets the date of the comment
get the since tag
returns true if this object has a date attached
returns true if this element has a tag
set the since tag
returns true if this is a binary file
getter for property for working directory
return true if this is a no user file revision
sets the for working directory
return true if this is a new user file revision
returns the value of the tagged value for the given directory
gets the value of report event type
return whether the file is a user file
returns true if this object is valid
sets the report event type
returns the name of the current history item
executes this command
called when a message is logged
returns true if the given conflict has been detected
called when a message is logged
sets the last event for file
returns true if the timestamp matches file
returns true if the given object is a cvsroot object
a major version of increase major is not supported for patch versions
creates the xml file for the layout specification
gets the prompt for this command
sets the version
compare this module digester to another for equality
set the report on module name
getter for property source
create untyped modules
getter for property target
returns the layout template
starts the thread
stops the thread
executes the animation action instance
executes the command
gets the password
returns the results
sets the port number for the quick server to listen on
sets the report last event for module
run the module
set the http method of this request
called when a file is removed
returns a string representation of the object
called when a module is expanded
checks if local is available
fired whenever a message is logged
set the protocol to be used by this server
sets the for users
get the hidden file name
sets the port for this cvs connection
return a string representation of this credential
returns true if the given object is a development line
returns the packet as xml
test method for
sets the username
delete the cvs files
loads the core commands
gets the location for the test
command response handler
getter for property command response
returns the headers
gets the command response
sets the password
set the command response listener for this command
returns the current module
returns the build environment for this project
executes this command
returns the command response
return an instance of the logger used for ant
sets the hostname
returns the full message that was sent to the event listener
execute the command in a separate directory
gets the message text
gets the alias of the expression type
returns the exception message
returns the event message
get the command description
execute the delete command
returns the complete event message
return the error message
get the command help
returns the error code of this exception
clean up any open resources
checks if the given command name is a command
returns the directory where the building is running
fired whenever a message is logged
returns the full path of this file
returns true if the file exists
commits the specified transaction
returns the manifest of the currently selected jar file
sets the repository
get the location store
gets all the modules that this module depends on
get the manifest store
change the manifest of the current working context
set the manifest store
returns the name of the component
creates a patch for the given version number
change the current manifest
set the location store
executes the specified command
returns the version number
sets a property
increase the digit
checks if a module has a module dependency
checks if manifest was loaded
returns the local path for the given module
get all the jar dependencies for a module
get the base directory for the project
return the error message for the current locale
returns the error code as a string
setter for working context
return the context manifest preference for this program
returns the error message associated with this exception
get all manifests of this project
load the manifest from the history
executes the runnables patch line thread and waits for the
returns the location loader for this project
this method is called to apply the information in the
resolves the artifact name by looking up the version
apply the given module to the current working context
get the manifest collector
returns true if the given dependency is a module
the overriding of this method should ensure that the objects of this class
resolves the module name to an artifact
return a string representation of the location
compares this object with another
return the manifest loader for this jar file
returns a string representation of this type
get all the levels of a specific module
add a new module
try to add a module in the repository
tests command line options
save the manifest
test if the
returns a list of module name in the order that they are in
remove the local module
add a classpath entry
get a module from the manifest
throw dependency exception for the given module name
return a cvs log entry describing this module
checks if a module for the patch line module code module code
creates an event for the given module and the corresponding patch
override this method if you want to rpovide your own implementation of
a simple date picker to select a date for the selected date
checks if the client is forbidden
create a new role
get the role with the given id
helper method to create a new resource
updates the role
get the resource from the resource system
delete a role
update the resource
delete a resource
create a schema with the specified kind
create the json connector to connection to
get the instance with the given connector instance id
send json to the connection instance
read a schema from the database
delete the user with the given id
create a configuration and post it to the configuration to class
update the schema
update a configuration
delete a schema
count the number of objects in a specific kind
create a derived schema with a given kind
create a virtual schema
start execution of a task
get a derived schema with the given kind and name
update a schema with a derived schema
update a virtual schema
delete a derived schema
delete a schema
generates the hibernate dialect
gets the account id of the old account
returns the latest sync token or null if no such sync token exists
set the job listener names
set the name of the target bean in the spring application context
set the name of the method to be executed
this method returns the policy object for the given policy to
unwraps the value if its a map
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
test for the special double
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
returns the plugins resource bundle
get the type description of this property
returns the modifiers for this class
returns the constant value for this field or null if none
set the constant value for this field as an int
set the constant value for this field as a float
set the constant value for this field as a long
set the constant value for this field as a double
set the constant value for this field as a string
export data following the header to a data output stream
returns the type description of this class
returns the method descriptor of this method
returns the code of the method
adds a exception that is thrown by the method
returns the method that is in the class initializer or null if none
p get the inner class name
returns the depth of the class file in the hierarchy
p get the source file
add an interface that this class implements
adds an interface to this class
add a method to this class
returns the line number in the source code from the given location
record a local variable use
add a default constructor
add a static initializer to this class
add an inner class to this class
get or create a constant from the constant pool representing a class
add an inner class to this class
set the source file name
adds an attribute to this class
returns a string representation of the object
returns the modifier string
get the return type of this method
returns the method signature
returns the name of the inner class
truncates the byte buffer to the specified size
open a file
set the value of an item in the file
clear the value at the given index
get the boolean value of the file at the given index
returns the first clear index in the filtered stream
find the first clear index
truncates the file table
returns the size of the file in bytes
returns true if rollback is supported
returns true if the file is clean
commit all changes since the last commit
rollbacks to the previous state
get the source socket face of this packet
inserts the given instruction at the end of this list
replace this instruction with another one
reads the next header from the underlying input stream
get the next servlet input stream
returns the content disposition type if any
returns the name of the content disposition header field
returns the filename of the content disposition header field
returns the content disposition field value if any
adds a location to the label
p set the http method
returns the value to which this map maps the specified key
p set the uri to be used for this request
p set the protocol version
p set a single header value
p set the headers of the current http request
set header connection persistent
returns a list of all the values for the specified key
sets the post header
associates the specified value with the specified key in this map
set the current session
adds a key value pair to the map
get a response object for the current request
returns the number of nested exceptions
connects to the server and returns a socket
returns the timestamp
returns the exception that was thrown
returns the stack trace of the exception
returns the thread name
returns the thread that this instance is running in
moves the to the start of the interval
moves this code interval code to the next interval in the
returns code true code if the thread is displayed in the
returns code true code if the source name field should be displayed
adds a root log listener
moves the given code calendar code to the start of the interval
moves this code interval code to the next interval in the
returns the debug output stream
returns the print writer info
returns the print writer for warn messages
set the child at the given index
sets the description of this code search code
returns whether this widget is enabled
returns code true code if debug mode is enabled
returns the number of kernels in this kernel pool
indicates whether or not the info property is enabled
indicates whether or not the warn option is enabled
indicates whether the error flag is enabled
returns the number of keys in the cache
human readable representation of the log
returns the number of entries in the invalid cache
create a new bean comparator that uses the given bean comparator
get the default factory with the given key
retrieves an object from the cache
create a bean comparator that uses the bean order by name
returns the factory object for the given key
return a null comparator with no high values
return a new bean comparator that is null low
removes the given key from the cache
create a new comparator with this bean
returns tt true tt if this map contains a mapping for the specified
invalidates all cached filters
returns the value to which this map maps the specified key
create a comparator that combines this bean and the given comparator
invalidates all the components in this kernel
removes all entries that have a non null reference
adds an entry to the cache
removes all entries of this map whose value has been cleared
removes the given key from the cache
this removes all instances of a filter from this kernel
clear the retrievers list
compares this comparator against another for equality
interface that can be used to create perishables objects
interface implemented by perishables
returns a set view of the keys contained in this map
returns a set view of the keys contained in this map
acquires read lock
acquire a read lock blocking until a write lock is available or
returns the default timeout for this request
return the type of the lock
return the number of lock acquisitions
returns a collection view of the values contained in this map
returns a collection view of the values contained in this map
returns the timestamp for this event
returns the time stamp when the event occured
this will return the stage duration for this stage
returns the transaction associated with this transaction line
returns the transaction queue
returns the date that the content was taken
returns the end date time of the snapshot
returns the number of elements in the queue
returns the number of threads that have been created
returns the number of servicing requests
peak queue size
peak thread count getter
returns the number of peak servicing instances
returns the total number of attempts an object has been enqueued
returns the total enqueued of this object in the queue
get the total serviced
returns the total number of expired messages
get the total number of service exceptions
get the total number of uncaught exceptions for this thread
returns the total duration of the queue in milliseconds
set the reverse order flag
returns the first lowest key currently in this sorted map
get the total duration of the service
returns the last highest key currently in the map
returns the elapsed time in milliseconds between each snapshot
returns the total number of failures made to the queue
return the total number of unserviced messages received
return the average queue duration in seconds
get the average service duration
returns the enqueue attempt rate
returns the rate at which this task has been enqueued
returns the service rate in the actual time for the snapshot duration
returns the ratio of total attempts that have been enqueued if this
sets whether to reverse the order of the items in the list
returns the first key in the map
returns the last key in the map
returns the number of key value mappings in this map
returns code true code if this set contains no elements
returns the value to which the specified key is mapped in this cache
puts an object into the cache
removes the mapping for this key from this cache if present
clears the cache
returns a set view of the keys contained in this map
returns a collection view of the values contained in this map
returns a set view of the mappings contained in this map
returns the results of the lookup that was successful
check if the given object is a key in this table
p tests if the specified object is a key in this hashtable
get the value associated with the given key
p returns the value to which the specified key is mapped in this
associates the specified value with the specified key in this map
p maps the specified code key code to the specified
remove the key value pair with the given key
p removes the key and its corresponding value from this
returns a set view of the keys contained in this map
returns the properties of this event
inserts the specified element at the end of this list
adds all of the elements in the specified collection to this collection
returns the last element of this enumeration if this enumeration
returns the index at which the given object will be inserted
compares two keys using the correct comparison method for this tree map
find the insertion point for the given half points
returns a collection view of the values contained in this map
returns a set view of the sub map keys contained in this map
returns the component
returns an iterator over the elements in this set
returns code true code if this set contains the specified element
adds the specified element to this set if it is not already present
removes the specified object from this set if it is present
initialize this plugin
parses the given reader
get the string associated with the given configuration key
returns the name of the plugin
get the string associated with the given configuration key
returns the plugin context
returns the int value for a given key
add a plugin listener
add a plugin to the registry
get a plugin by name
returns the map of all plug ins
flushes any pending changes to the cache
flush the buffer to the disk
returns the value of the specified property as a number
finishes the configuration of the editor
returns the boolean value of the key in the configuration
get a stream for the given name
get the number of errors
associates the specified value with the specified key in this map
returns the priority of this thread
set the priority of the thread pool
returns a detailed error message for this exception
returns the source info object for this source
pushes the specified number of bytes to the output stream
pushes the character back to the input stream
called when the unread mode is executed
close this socket
closes this code connection code and disassociates it from the
read a line from the stream
skips forward to the specified line
read a line of text
read a single character
returns the end position of the token relative to the start position
setter for property escapes enabled
returns the number of key value mappings in this map
returns code true code if this set contains no key value mappings
put all the persistent entries from the persistent store to the
return the value to which the specified key is mapped in this cache
associates the specified value with the specified key in this cache
removes the mapping for this key from this cache if it is present
clear all entries out of the cache
returns a set view of the keys contained in this map
returns a collection view of the values contained in this map
returns a set view of the mappings contained in this map
flush the backing cache
stores the list of entries to write in the backing map
replaces the value corresponding to this entry with the specified
read in a string from the data input stream
get the object repository this object belongs to
sets the object repository for this instance
returns true if this collection contains all of the elements in the
adds all the elements of the given collection to this collection
removes all the elements in the given collection from this collection
retains only the elements in this collection that are contained in the
clear all data from the persistent store
removes all the elements in the given collection from this collection
this method removes an object from the repository
returns a set view of the keys contained in this map
returns the property type
get the property descriptor
returns true if this file exists
returns the name of the feature
returns the description of the first sentence of the
returns the access flags for this class
returns the full name of the type
returns the name of this type
returns the package of the type of this class
returns the version of the module
returns the array type description for this array type
returns the number of dimensions of the arrays
returns the array dimensions as a string
returns the bean info for this type
the full name of the tea class
indicates whether this import is a implicit import
returns true if this type is a
creates a type description for the given type
creates a package descriptor for the given package name
returns a copy of the access flags
returns the method descriptor for this method
get the method
returns the access flags of the method
returns the return type of the method
returns whether this filter accepts or rejects substitutions
returns the class for a given class name
set the context class name
get the context class name
p set the prefix name
p get the prefix name
returns a string representation of the object
returns the type of this field
returns the parameter descriptor for this parameter
returns the name of the descriptor
returns the full name of the class including the package name
returns the full class name including package name
get the application depot object
returns the name of the class in the array
returns the name of the transaction log
clean up the resources
gets the class name from the full class name
returns the package name of the given class
get the type name of the class
get array class name
gets the array type for the array
gets the number of array dimensions of the given class
get the array dimensions as a string
decapitalize a name
get the first sentence break
creates a pattern string from the given string
creates a tokenized whitespace string of the given length
returns the description of this feature
a convenience method for getting the description of the first sentence
sort all the method descriptors in the given array
sort property descriptors
used to get the full name of the tea class
returns true if the given class is a implicit tea import
cache the given substitution object
cache the current substitution object
checks whether a class is an implicit tea import
gets the admin links
check if this method is a supported method
checks if the given method can be used as substitution for the
destroy this application
can the given class be foreached
tests if a template with the given name exists
gets the template data and builds the path info data
synchronizes the source information with the template
create a request to the server for a specific template
removes the file extension from the file name
checks whether the tea file name is equal to the tea file extension
compares this name value pair to another name value pair
compares two objects
launches the external application
launches the auto mode
launches automatic cluster management by creating and running
creates a new code tscontext code object
converts an ip address into a long value
destruction of the servlet
converts a back ip back to a string
returns a short description of the servlet
this returns the parent scope
declares a variable in this scope
declare a variable
declares an array of variables
returns the variable with the given name or null if no variable
returns the declared variable with the specified name
bind this variable to the given variable ref
returns the enclosing scope of the given scope or
this deletes this scope and all of its children
adds an error listener
adds a status listener
sets whether code generation is enabled
returns code generation enabled or disabled
this method returns the exception guardian enabled attribute
returns the class loader used to load classes
loads a class
returns the runtime context class
set the runtime class context for this class loader
determines the qualified name of a compilation unit from one of the
parses the given template
returns the total number of elements in the array
returns the current name of the user
compiles the source code for the error
returns the package of modules that this module is defined in
returns the natural class of this property
returns true if this property is a primitive property
p set whether exception guardianing is enabled
does this type have a primitive peer
convert to a primitive type
returns the image associated with this token
returns the equivalent type of this type
returns the numeric type of this
returns true if this is a non null object
returns whether this expression can be nulled
returns the long value of this number
returns the float value of this number
returns a non null representation of this type
returns the double value of this number
returns a null if this type is a null type
indicates that initializer statements may be initialized
return the element type of the array
returns true if the algorithm supports the reverse iteration method
generates normal format
generate the context of this expression
turns on off special tokens
creates a compilation unit with the given name
gets the constructor attribute of the constructor holder object
creates a new instance of this class with the parameter
returns the set of known template names
returns the set of reloaded template names
is the operand a return variable
returns true if this element is a break
p set template strings p
allows subclasses to set the template resources for this template
sets the root directory of the templates processed by this loader
set the destination directory
returns the statement that is currently guarded
returns the statement that should be replaced if the
creates the class injector for this configuration
returns the read method for this property
returns true if the two variables are equal
helper method that visits an expression
visit the given block
returns the called template
gets the name of the type
specifies the initial value of this variable
returns the statement that this statement is associated with
checks if the value of this attribute has been known
returns the return type of this method
returns the expression that is evaluated
returns true if an exception is possible
returns the type of conversion to which the conversion is applied
returns the first type in the list of known conversions
returns the end range of this property
getter for the statement initializer
get the list of conversions to be performed
set the type of the current expression
set the initial conversion type
checks if the value of this attribute has been known
returns the type that this property is from
checks if the user is permitted to perform a void operation
returns a clone of this node
returns a printable representation of this identity
returns the local variable for the given variable
this method is used to stop the processor from running
returns the mode of this operation
returns the time to shut down
returns the name of this vocabulary that can be used in the gui
programmatically perform a click
returns the name of this vocabulary that can be used in the gui
installs empty ui for the given name
adds a component to the container
adds a component to this container
removes the component and its child from the container
removes the component at the specified index
clears all child components
returns the name of this vocabulary that can be used in the gui
moves the focus to the component
renders the component
moves the focus to the next component as though this component is
determines if this component is selected
returns true if the line segment intersects the given rectangle
determines if the given component intersects this screen
disposes of this code konga panel code
finds the component in this container that intersects the given
returns the number of components
returns the current component
sets the visibility of this frame
returns the value to which the specified key is mapped in this
adds a value to the map
returns whether this component is enabled
sets the enabled flag
requests that this component get the input focus
transfers the focus to the parent component
transfers the focus to the previous component as though this component was
returns whether this component can be focused
sets whether this component can be focused
returns the container of the code component code
returns the code tcomponent code object of this dialog
getter for property screen x
getter for property screen y
returns the tooltip text
sets the tooltip text
returns the name of this vocabulary that can be used in the gui
returns the uiresource
returns the uirenderer instance to be used in the renderer
set the uirenderer that will be used to perform the operation
sets icon state
creates the actual ui
process the rendered ui
subclasses may override this method to perform custom ui initialization
process external ui
returns the name of this vocabulary for the title bar
returns the name of this vocabulary that can be used in the gui
returns the name of this vocabulary that can be used in the gui
returns the name of this vocabulary for the user interface
sets up the game with the given dimension and screen mode
set up the decorations for this game
notifies the exit of the main application
effectively equivalent to the call
updates sprites in sprite groups on this playfield
set the gravity applied to the body
get the gravity applied to the body
sets the current windpower
returns the current windpower
sets whether the bar is being animated
set animation frame
sets new direction of the animation
sets new stat for animation
sets the animation to the given values
updates the animation
updates all active sprites in this group and check the schedule for
sets the description of the packet
corrects the wind position
sets this actors vertical velocity
retrieve the last computed vertical velocity
sets this actors horizontal velocity
retrieve the last computed horizontal velocity
sets the bounce
plays the sound
plays a sound
stops the sound
returns the bounce factor
returns the status of the sound
returns true if volume is supported
specifies whether the line is onground
method play sound
get whether the window should be onground
stops the sound
sets the fixedposition
returns whether the position is fixed or not
returns the back buffer
flips the display
return the texture loader used by this texture manager
cleans up the fullscreen mode and disposes the window
returns the canvas
returns a description of the graphics
sets the title of the main frame
returns the title of the main window
starts the fps timer
stops the timer
returns the fps sleep time
sets the icon of the main frame
returns the current fps
sets the fps
returns the icon of the frame
returns the current time in milliseconds
refreshes the time stamp
returns true if the view is sync
cleans up the graphics context
returns a description of the graphics
returns the graphics2 d object for rendering to the screen
returns whether the device is synching
this method is used to flush the graphics buffer to the card
reshapes the camera
binds the specified gl context to a texture
sets the height of the object
returns the texture in the table
sets the width of the map
set the height of this texture
set the width of the texture
get the height of the image
get the width of the image
get the width of the texture
get the height of the texture
load a given resource as a buffered image
get the height of the image
get the width of the image
set the height of the texture
set the width of the texture
get the back buffer
flips the display
cleans up the graphics context
create a new texture id
returns the texture
code get graphics description code returns a description of this
bind this texture to the current gl context
set the title of the main window
returns the window title
set the icon
get the icon for the window
starts the timer
stops the timer
returns the amount of time passed in to the fps
indicates whether the video is in fullscreen mode
returns the current time in milliseconds
set fullscreen mode
indicate whether the display should be synced to the vertical refresh
sets the window listener
returns the window listener
refreshes the display
moves the mouse pointer to the specified point
returns true if the mouse exists
returns the y coordinate of the mouse cursor
gets the mouse dx
gets the mouse dy
sets the visibility of the mouse
gets the mouse visible
gets the mouse released
returns true if the given mouse button has been released
setup a lwjgl graphics context for a given dimension
gets the mouse pressed
returns true if the given mouse button is pressed
tells whether the given mouse button is down
gets the key released
checks if the given key is released
gets the key pressed
checks if a given key is currently pressed
checks if a given key is down
this method initializes this
this method initializes backup panel
this method initializes vereniging panel
this method initializes programma panel
this method initializes programma nummers panel
this method initializes funktie panel
this method initializes this
this method initializes this
this method initializes leeftijd text field
this method initializes enrty panel
this method initializes max starts text field
this method initializes programma panel
this method initializes max afstand text field
this method initializes this
this method initializes programma combo box
this method initializes invoer button
this method initializes invoer panel
this method initializes wijzig button
this method initializes j panel
this method initializes cap panel
this method initializes verwijder button
this method initializes cap nr text field
this method initializes herstel button
this method initializes eind tijd panel
this method initializes eind tijd text field
this method initializes dis panel
this method initializes dis text field
this method initializes button panel
this method initializes this
this method initializes prog nr text field
this method initializes print button
this method initializes suffix text field
this method initializes voeg toe button
this method initializes table scroll pane
this method initializes this
this method initializes wijzig button
this method initializes table
this method initializes reden text field
this method initializes gevraagd check box
this method initializes gefungeerd check box
this method initializes funktie combo box
this method initializes afstand text field
this method initializes jaar combo box
this method initializes j table
this method initializes invoer button
this method initializes id text field
this method initializes slag combo box
this method initializes this
this method initializes this
this method initializes verenigingsklassement button
this method initializes verwijder button
this method initializes cap kleur text field
this method initializes uitnodig button
this method initializes select dialog
this method initializes this
this method initializes cap kleur knzbtext field
this method initializes j content pane
this method initializes select dialog content pane
this method initializes leeftijd van combo box
this method initializes depot nr text field
this method initializes select dialog scroll pane
this method initializes select button
this method initializes aanhef combo box
this method initializes leeftijd tmcombo box
this method initializes voorletters text field
this method initializes sex combo box
this method initializes caps list
this method initializes naam text field
this method initializes tussenvoegsel text field
this method initializes selection text
this method initializes achternaam text field
this method initializes straat text field
this method initializes filter1 button
this method initializes postcode text field
this method initializes this
this method initializes type combo box
this method initializes envelop button
this method initializes j panel
this method initializes plaats text field
this method initializes brief button
this method initializes start nr text field
this method initializes land text field
this method initializes j panel2
this method initializes cap nr text field
this method initializes telefoon text field
this method initializes this
this method initializes j content pane
this method initializes vast check box
this method initializes j panel3
this method initializes opmerkingen text field
this method initializes wijzig button
this method initializes nr prijzen text field
this method initializes this
this method initializes club text field
this method initializes depot nr text field
this method initializes nr starts text field
this method initializes uitnodigen button
this method initializes vereniging text field
this method initializes j button
this method initializes nr leencaps text field
this method initializes per programma check box
this method initializes j scroll pane
this method initializes starts table
this method initializes bereken button
this method initializes per vereniging check box
this method initializes this
this method initializes j table
this method initializes cap nummering button
this method initializes starts bestand text field
this method initializes starts per vereniging button
this method initializes laad starts button
this method initializes eindtijd text field
this method initializes zoek starts button
this method initializes srcheck box
this method initializes programma bestand text field
this method initializes statistieken button
this method initializes laad programma button
this method initializes kacheck box
this method initializes dis text field
this method initializes factuur button
this method initializes zoek programma button
this method initializes stcheck box
this method initializes suffix combo box
this method initializes uitslag button
this method initializes progtitel bestand text field
this method initializes laad progtitels button
this method initializes j button boekje
this method initializes t3 check box
this method initializes this
this method initializes zoek progtitels button
this method initializes jscheck box
this method initializes vereniging combo box
this method initializes this
this method initializes vereniging panel
this method initializes j panel
this method initializes t4 check box
this method initializes starts scroll pane
this method initializes this
this method initializes starts table
this method initializes titel text field
this method initializes entry panel
this method initializes invoer panel
this method initializes start nr text field
this method initializes naam text field
this method initializes button panel
this method initializes this
this method initializes categorie text field
this method initializes voerin button
this method initializes sex combo box
this method initializes wijzig button
this method initializes van text field
this method initializes verwijder button
this method initializes tem text field
this method initializes voerin button
this method initializes cap nr panel
this method initializes cap nr text field
this method initializes ok button
this method initializes funktie text field
this method initializes sorteervolgorde text field
this method initializes omschrijving text field
this method initializes blok check box
this method initializes this
this method initializes j content pane
this method initializes resultaat scroll pane
this method initializes resultaat table
this method initializes zoek text field
this method initializes zoek button
this method initializes ok button
this method initializes cancel button
this method initializes zoek button
this method initializes echtgenoot text field
this method initializes eid text field
this method initializes echtgenoot check box
this method initializes fungeert check box
this method initializes this
this method initializes wijzig wedstrijd button
this method initializes print button
this method initializes datum field
this method initializes organisatie text field
this method initializes start methode text field
this method initializes tijd meting text field
this method initializes this
this method initializes temp text field
this method initializes this
this method initializes lenex uitslag text field
this method initializes j content pane
this method initializes invoeren uitslag tab
this method initializes invoeren start panel
this method initializes proces verbaal panel
this method initializes wijzigen start panel
this method initializes lijsten panel
this method initializes zwemwater text field
this method initializes administratie panel
this method initializes lenex uitslag button
this method initializes zoek lenex uitslag button
this method initializes baan lengte text field
this method initializes aanvang text field
this method initializes j button
this method initializes einde text field
this method initializes j button
this method initializes waarnemer text field
this method initializes j text field
this method initializes afwezig mktext field
this method initializes backup teru exit text field
this method initializes afwezig zktext field
this method initializes zoek backup teruek backup teruek button
this method initializes opmerkingen scroll pane
this method initializes backup teru exit button
this method initializes opmerkingen text area
this method initializes wijzig button
this method initializes verwijder button
this method initializes herstel button
this method initializes id text field
this method initializes naam jury text field
this method initializes plaats jury text field
this method initializes bevoegdheid text field
this method initializes j table
this method initializes clear button
this method initializes blok nr text field
this method initializes start kosten button
this method initializes startkosten dialog
this method initializes j content pane
this method initializes ok cancel panel
this method initializes ok button
this method initializes cancel button
this method initializes label1 text field
this method initializes value1 text field
this method initializes label2 text field
this method initializes value2 text field
this method initializes label3 text field
this method initializes value3 text field
this method initializes label4 text field
this method initializes value4 text field
this method initializes label5 text field
this method initializes value5 text field
took damage up to
returns the appropriate log level name
executes an update statement
executes an sql insert update or delete statement
flush the stream
prints a character to the underlying stream
prints an object to the underlying stream
prints an object to the underlying writer
prints a string to the output stream
prints a boolean
print a new line
print a character and then terminate the line
prints a double precision floating point number and then terminates the
prints a float followed by a line separator
prints an integer and then terminates the line
prints a long and then terminate the line
prints an object and then terminates the line
prints an object followed by a line separator
prints a string followed by a newline
prints a boolean followed by a newline
writes a portion of an array of characters
writes a single character
writes a portion of a string
at startup create and show the main frame of the application
this is the entry point method
returns the angle in degrees based on the angle in which the robot
rotates the navigator to a new position
the y axis is to be drawn
converts any touch sensors to the appropriate navigator
go to simple navigator
check if the x axis is inside the x axis
check if the y value is inside the y threshold
the inside x option is the point where the mouse is pressed
move the robot in its y direction
the run method of the thread which listens for incoming tcp ip connections and
take control of the game
p this method should be suppressed by default
this is the main method of the motor class
library listener method
pause the execution of the current thread for a specified number of milliseconds
send an integer command to the robot
get the angle of the camera
rotates the code degree code to the given value
gets the angle in radians
rotates the navpoint to the given degree
get the value of the given field of the row
new line has been added to the log file
sets up the gui and waits until the user creates a new
center the main window
creates and returns a menu bar
creates the file menu
creates and returns the edit menu
creates the connect menu
creates the help menu
returns the icon associated with the given file name in the given
creates and returns a new toolbar
attach this view to a session
get the number of lines in the document
shuts down the layer
creates the main view
this method initializes document view
returns the offset of the given line
creates the panel that contains all user information
creates the user list
updates the line
centers a window on the gui
called when a line is created
called when a line is deleted from the file
returns true if there are real lines in the output
paints the component
shutdown the diskcache
find the pointer view that represents the pointer screen
fire an event to all listeners
called when a block is created
returns true if the id is null
returns the id of the source of this packet
returns the current counter value
returns the process id
gets a hash code for this object
is called if properties of block are changed
updates the coordinate of the screen pointer
notifies that a block has been deleted
add a new user to the user map
checks if the given user is in the database
returns true if the user list contains the given user
called when the pointer is pressed
checks if the user id is in the list of users
inserts a new line into the line elements list
find the user with the given display name
find the user that has the given user id
detects a colour that is a java colour i
is this conference still in the current conference
does the updating of the block until the line is updated
returns the number of elements in this line
adds the specified model listener to receive model events from this model
removes the specified listener
method get start position
returns true if any missing elements are pending
return a set of all missing elements
adds a model listener to the list of model listeners
removes a model listener from the list of listeners
returns a set of elements that have been updated after the given time
adds the listeners to the list of listeners
fire an event to all listeners
dispatches the event to all listeners
method that returns the end position of the class
encodes the network time of the class into the output stream
deletes the block
deletes the given line from the model
returns the difference in milliseconds between the network time
returns the date in the format
returns true if this value object is deleted
compares this network time to another
find the line with the given id
returns true if any of the lines in this file have missing
returns the index of the line containing the specified offset
returns a hash code value for the object
returns a list of lines that have been added to the block
emits the event to all registered listeners
returns the line contents
changes the line contents of the current line
get the line number in the block
set the line number in the block at which the problem begins
returns a list of orphans that exist in the list
gets the id of the block containing this block
mark this line as deleted
returns the consecutive missing lines
sets the consecutive missing lines
deletes a line from the block
returns an iterator over the lines in this document
request to delete a block from the network
returns the element at the specified line index
check against a received key
find the block with the given id
check if block with given id is missing
send a retransmit request to the specified target
sends the page information request message to the given target id
returns a packet
sends the update for the specified network id
returns an iterator over the list of users in this directory
find a user by display name
adds a packet to the map
returns the packet handler for a packet
handles a packet
notifies the code user code that the user has joined the group
ensures that the user is left in the conference
called when the user modifies the document
return the number of lines between the two given lines
called when a pointer is updated
sends a line message to all connected clients
release the access lock for this document
called when the retransmit timer has been changed
sends a message to update the block
returns the time that the next cycle will wait between the
get the number of active users
sends a retransmit advert
sends the recent item list to the network interface
sends the user update message
sleeps for the given amount of time
des key generation method
returns the current line number in the block
generates the parameters used in the desalgorithm params constructor
sends a leave conference message
returns the decrypt cipher
returns the encrypt cipher used for encryption
setter for the represented line
send updates after the simulation time
return true if there are any elements left to request
returns an output stream for sending this packet
handles block messages from the server
handles the leave conference packet
creates a new line in the document
updates all the line details of the given line
returns the last time this application was used
updates the clocks time according to the given network time
updates the parent block of a line
adds a packet to the queue
removes and returns the first packet from the queue
returns true if there are packets waiting to be sent
returns the packet time
starts the sender thread
stops the network connection
shut down the server
sends a packet to the outgoing queue
sends the specified packet to the outgoing queue
handle an incoming packet
get pointer type code
returns the style of the pointer
encode the header to the output stream
starts the network session
stop the network session
moves the given block to the given position
deletes the specified block
changes the colour of the local user
changes the block type of the given block
test that adding and removing a block causes it to be deleted
tests that a null net id is not available
test randomly generated id generation
adds a date to the set
removes a date from the set
toggles the given date
returns true if the given date is contained in this set
add execution date
remove execution date
toggles the execution date of the code date code
returns an xml representation of this object
adds days to this date
tests whether this task is equal to another
returns a hash code value for the object
gets the color
order code for dates in the date
tests if this date is before the specified date
returns true if this date is after the specified date
returns the date in the format year month day hour minute second
sets the progress listener which will be informed of progress
sets the log command
resolve an sftp path to the remote file
test table creator
finds the organization name
creates a string representation of the given list
creates a jpanel with a table in it
gets the collaborations
gets the organizations
getter of the researchers
gets the collaborations file path
gets the organizations file path
gets the rsearchers file path
sorts the researchers
clear the sanity check results
sorts the organizations list
sorts the collaborations by name
creates a string representation of the given list
creates a jpanel containing the given table
compares two users
returns a hash code value for this object
check if a link is valid
gets the xml files name
returns the organizations xml as a string
returns the current researchers xml content as a string
gets the value of list type
loads the researcher data for display
loads the organization data for display
loads the collaboration data for display
getter for property add type
gets the edit type
gets the value of added
gets the edited
gets the editing
logs out the user
displays the form to add an organization
displays the form to edit an organization
displays the form to add a researcher
displays the form to edit a researcher
sets the type of the parameter
sets the organization of the relative
sets the contact information of the user
sets the picture link
gets the value of picture link
sets the affiliated researchers
sets the bio statement of the user
gets the affiliated researchers
gets the bio statement
sets the country of the user
setter for property research keywords
getter for property research keywords
edits a researcher
displays the form to add a collaboration
sets the research description
getter method for research description
displays the form to edit a collaboration
sets the home page of the user
sets the collaborating organizations
gets the collabing organizations
sets the collaboration types
gets the collab types
setter for property years
getter for property years
sets the outcome types
gets the outcome types
validate a character
this method is not supported and throws an unsupported operation exception
validates the given number against this base
append a character to the stream
move the cursor backward by a given number of characters
append a string to the output stream
return the next token with the constraints
returns the character at the current position and increments the
close the print stream
this method is not supported by this implementation
this method is called when a new line is read
throws an unsupported operation exception
closes the stream
returns the line number of the end of this expression
returns the name of the command in case sensitive fashion
get the next token with the constraints
jumps to the column specified by start at the specified column
jumps to the column code column code
goes to the given line
dumps this token to the console
mark the current position
the previous token is the same as the previous token
resets the state of the test
closes the reader
get the next token with the constraints
close the input stream
get the next token with the constraints
forward the characters until reaches the specified character
invoked when an error has been reached
test for validate char validator
return a substring of the input string with the given length
returns the character output sequence for this automaton
test file char output sequence
test method for
goes to the given line
append char c is not supported yet
get the next character by the constraints
this method is used to forward the input to the given uri
append a string
returns the next character
tests the to string method
get the next token by the constraints
test of close method of class org
test closing a file
test the close method
read the next line
test method for
prepend is not supported in the sequence
test file char input sequence file
get the next token by the constraints
test method for
forward the reader until reaches the character
tests the preparing of a sequence
test file char input sequence file int
mark the current position
get the next token by the constraints
test closing a file
test method for
reset the reader
test closing a file with a single line number
test method for
test the string char output sequence
get the next token with the constraints
test append method
test of dump method of class lexer
test a file with a char input sequence
test of append method of class org
get the next token by the constraints
test method for
test method for
test jump to column
test of close method of class sequence
test method for
forward the input until next validation result
test of prepend method of class org
test method for
test method for
prepend the hello to the string
test method for
test method for
test if the next character is a character
get the column of the source
test method for
test sequence forward
test method for
test method for
test method for
test the seq forward until sequence
test method for
test method for
test method for
test method for
test method for
prints a character
gets the line
test method for
test method for
test method for
prints message to the output sequence
test method for
test method for
test method for
test method for
test method for
test method for
test method for
return the line number
gets the value of dump
test method for
test method for
test of print method of class parser
test method for
tests the retrieval of the name of the sequence
test method for
test method for
test method for
skip the token stream until reaches the character
test method for
test that jump to line returns the line number
test method for
test method for
returns the source name
test method for
test method for
test method for
test the next chr sequence
checks that validate method works correctly
test a forward until expression
next line in sequence
test method for
test method for
return the next char
tests the mark operation
test method for
test method for
test the reset method
get the next char and check it against the expected one
test method for
test the next char method
return the next character
test method for
test method for
test method for
get the next line
test method for
test method for
return the next token
test method for
test method for
test method for
test method for
get the next token and check its length against to the expected length
test method for
get the next token by the constraints
get the next token by the constraints
get the next token with the constraints
sets the alpha numeric verifier
this method sets the
sets a numeric validator verifier
sets the validator space verifier
this method is used to skip a multi line comment
get the next token with the constraints
returns the next comment line
returns the next token with the constraints
this method is used to mark the current token
this method is used to reset the parser to its initial state
returns the current position in the source file
get the next token with the constraints
returns the char input sequence associated with this input source
sets the char input sequence
display the previous slide nothing done if the actual is the first one
displays the next slide nothing done if the current page is the last one
displays a slide with the given index
check if the current page is the last one
init the slides
this method is called after a failure
validates the isbn number
add a copy book to this library
adds a copy book to the database
remove an element from the list
validates the password
adds a report to the database
validates the id
remove an element from the list
remove all rows from the table
validates the phone number
method to remove all items from combo box
whats the number of books in the database
returns the table model for this spreadsheet
removes the item at the given index from the combo box
refreshes the table
how many copies have been done
deletes the item at the given index in the combo box
returns an employee object given the employee id
replaces special characters from the given string
get the total number of copies that have been checked out
returns the table model used by this table
replaces special character for sql statements with the special character
get number select
refreshes the table
returns the percentage of total copies that have been checked out
add a user
update user data
get the total number of copies in library
deletes a user
resizes an image icon
returns the image icon using the high quality rendering
returns the percentage of copies in library
get a user object by index
get a copybook object from the vector
returns the table model
whats the number of authors
moves the cursor to the next row in this result set object
adds an employee to the report
adds a copy book
back to the previous page
how many publishers are in the database
employee s b
check if the next page is the current one
login into the database
delete an employee
is the current page the previous page
get the number of categories
logs out the user
add a book to the database
moves the cursor to the first row in this result set object
get the number of languages in the database
moves the cursor to the last row in this result set object
updates the given book
returns employee object by its index
assign a new user sheet
sets the employee sheet
delete a book
delete a copy book
store the file to the given path
return copybook object at specified index
get book at index
returns the table model for the table
returns the table model for the table
returns a connection to the database specified in the constructor
returns a connection to the database
set the database connection settings
adds a user to the database
updates a user in the database
refreshes the comboboxes with the actual data
returns the categories combo box model
deletes a user from the database
gets a copy book issued by employee
returns the authors combo box model
returns the publisher combo box model
this method returns a user object given its id
returns the group by model currently in use
gets the number of users for a page search
sets the call number
gets the number of results for a given search
sets the isbn
sets the title of this page
sets the name of the author
gets a user from the database
login the user
deletes a book
adds a user to the database
adds a user to the database
updates the given user
deletes a user
sets the employee id
searches the database for the given string
updates a user in the database
change the password of the current user
sets the name of the violated vi
logout the user
sets the address
check if the current row is a book
deletes a user from the database
sets the phone number
checks the call number
sets the department
adds a book
adds an employee to the database
returns the number of pages of a group
updates a book in the database
employee s o
set the selected group by
delete an employee
returns the number of results of a search book
delete book from the callable statement
adds a book
updates the given book
gets a book object from the database
set the selected group name
deletes the book with the given call number
gets the total number of books in the database
gets a book with a given isbn
adds a copy book
get the number of pages book
deletes the copy book
this method returns a copy book for the given call number
gets the number of copies books for a given isbn
returns the number of pages copy books
adds an employee to the database
updates an employee in the database
gets the number of copy books for a given isbn
deletes an employee from the database
gets the total number of copy books in the database
get employee object by id
get the number page employee
adds an employee to the database
gets the number page employee by name
updates an employee record in the database
gets the number page search employee by employeeid
deletes an employee from the database
returns employee object for the given employee id
gets the number of employees for a given content
gets the number of employee results for the given search employee
check out book
check in book
sets the user id
sets the title of the victor
sets the password
sets the name of the author
changes the users password
validate and set the call number
sets the publisher
set the isbn
gets the total checked out items
sets the language
gets the employee issue for this order
date the issue was last checked out
return the due date
return the fee rate
sets the edition
get late fee
set the category of the agent
get the number of pages orders for the issue
adds a report to the callable statement
updates a report in the database
deletes a report from the database
adds a copy book to the database
this method returns a report object for the given report id
method to remove all items from combo box
deletes the item at the given index in the combo box
deletes the item at the given index in the combo box
deletes a user
this method deletes a copy book
returns the copybook at the given index
delete an employee
delete a book
changes the reset password for a given user
this method returns a user object given the user id
search for content
set the reset password
perform the game
construct a new text renderer with the specified font and default settings
returns the bounding rectangle for the given string
returns the elapsed time in milliseconds
resumes the sound
begins rendering with this
read the point list file
changes the current color of this text renderer to the supplied
changes the current color of this text renderer to the supplied
returns width of the space character
returns true if the transition condition is satisfied
adds a state to the transition model
update the logical layer
fires an event
fires the given event in the state machine
adds a new scheduled task to the list of scheduled tasks
returns the elapsed time in seconds
get the elapsed time in nanoseconds
returns true if the pause mode is enabled
decrease the health of the creature
increases the health by the given amount
this method is used to collect the weapon and other things
decrease the health of the creature
validates the value
checks if the put back operation has been completed
checks if is pull out complete
checks if the unit can attack
checks if this player can reload
adds an internal frame to the scrollable desktop
selects the specified internal frame upon the virtual desktop
moves the internal frame to the front of all iconified maximized frames
iconifies all frames on the desktop
unlocks all read locks
writes a lock
checks to see if the current user can access the resource
adds a recipient
method add attachment
returns the recipients
get the attachments
sets the date the artifact was posted
sets the author of the comment
sets the subject of the message
sets the id of the referenced message
adds a reply id to the list of reply ids
initialize the bored servlet
removes the reply id from the set of reply ids
method get name
setter for property message
sets the id of the message
gets the posted on date
returns the pretty name of the board
sets the module type
set the properties for the server
set the divider
returns the value of a server property
returns the id of the message that could not be found
returns the server properties
gets the reply ids
parses the xml file
return the id of the message
returns the xml representation of this message
returns the board for the given board name
returns the adminstration list as a string
add a module to the designer
checks if a module is in use
adds an admin to the list of administrators
update the text and time to live
returns true if the given module is a public module
return a xml representation of this board
parses a board object from an xml element
returns the level of this node in the hierarchy of nodes
gets the html for the menu
getter method for sys admin
sets the base directory
sets the value of the sys admin property
get menu items
returns a html representation of this h3 group
sets the cname
sets the base url
registers this application as a web application interceptor
sets the name of the game
get the modules
sets the groups
this method sets the pretty name of the current board
get the description of this application
called when this servlet is first instantiated
returns html representation of the relationship
returns the contacts hashtable
returns the server properties
sets the contacts hashtable
returns the value of a server property
returns the prefs hashtable
requests a web application from the application server
updates the message ref for the given message
returns a new servlet interface instance
sets the preferences hashtable
saves a message to a file
sets the authentication flag
delete a message
get the file for the given message
returns the message for the given integer
gets the message at the specified index
adds gt to the message
view the list of messages by date
returns a new string representation of the message
creates a message to send to a bullet for a specified request
adds a node to the path
adds a neighbor node to the neighbor list
adds a path segment to the current path
returns a string representation of this direction
adds a neighbor to this node
register a listener
adds a commandable listener
listener for all commandable device
removes a listener from the list of listeners
sends command data to relevant listeners by looking at first arg
suspend all actuators and sensors on a mechanism
resume all actuators and sensors on a mechanism
disable all actuators and sensors on a mechanism
this method is called when the robot enters autonomous mode if any teleop
this method is called when the robot enters operator control mode if any
writes a piece of data to the printer
adds a printer to the code printers code list
removes the printer
removes a command from the command manager
returns and removes the first command from the queue
executes a command
get the current command
stop the robot
pauses the thread
adds a listener for actuator commands
frees the resources used by this object
get the i component
broadcasts a request to all clients
execute a command
connects client to server
opens a socket connection to the server
disconnects from the server
reacts to a situation being too far
start the pulse and add it to the chain
stops the pulse ranging
enqueue command array color0
slide red green component
drives the simulator by turning right
starts blinking until the user selects the blink loop
turns the log for a certain amount
notifies all registered listeners that the view has been closed
notifies all listeners that there was too far
stops the blinking loop
use this method to add a wall to the view
remove a wall
returns the pid
writes the pid value to the pid output
color the robot using a light
get the angle between the two first two bytes
register a sonar sensor change listener with the server
unregisters a sonar sensor change listener
calculates the average velocity over the whole world
initialize the analog system
returns the temperature
initialize pwm mode by creating new board and reset the pwm pin
returns the velocity of the bike
the analog distance to the robots voltage
gets the angle of the trapazoid from the previous velocity
returns the digital distance in k 10 sec
returns the analog analog distance to the digital sensor
sets the sensor data for the given key
sets a state value
sets the priority for the sensor
pauses the thread
executes a command
unpause the game
returns the number of commands in this collection
main loop of the robot
hold the thread
checks if the game is over
drive the ball
get the sensor object for this joystick
used to drive the robot for nxt robots
this is a bit tricky
executes the sensors simulator loop
starts the sensors used by this sensor
returns the tilt of the sensor in degrees
returns the tilt of the sensor in degrees
returns the current z tilt of the sensor in degrees
returns the temperature
returns true if the given object matches this playlist
when the selection changes in the list of artists
when the selection changes in the list of songs
gets the artist at the specified index
sets the start state of the container
sets the end state of this transition to the given state
called when the animation ends
checks if the given object matches this one
checks if the given object matches this one
handles the list selection event
handles the list selection event
start the midlet by creating new model and controller classes and
returns a hash code value for this object
indicates if two objects are equal
sets the score at the given index
gets the team score of this ownable
returns the vector of gymnasts
activates a team
set the bean factory to use for creating holder beans
send a request to the internal jbi using the given operation name
send a message to the named operation using the given operation name
gets the current session
initializes local session
returns the session to be used for the test cases
calcola somma
returns the default element name
gets the address
gets the value of the value property
gets the value of the meta data property
returns the canonical instance on deserialization
returns the parameters element
gets the port type value for this endpoint reference type
gets the value of the properties property
add a soap fault to header to this code soapfault exception code
gets the value of the service name property
add a soap header element to the from section of the message
sets the default value of an option
sets the meta data of this property to the specified value
add a soap header element to the message id list
sets the reference parameters type
sets the port type
generates a uuid
sets the properties value for this position type
copy the data of the endpoint into this object
initializes the instance of this class
this method initializes this
adds a reference property element to the set of properties that will
initializes the java import imports
gets the value of the value property
initializes the allow non specific actions
sets the value of the value property
add an item to the message
gets the type iri
get the message element with the given qname
sets the type iri
converts the item into a string
adds a reference parameter to the message element
add a relates to element
adds a message element to the message element
returns the value of the specified handler configuration property
create a dom representation of this object
add a relates to element
checks if a property should be included in the handler configuration
converts to a dom tree
return the endpoint url for this service
generates a uuid for the operations on the server side
add a soap header to the response
returns true if this message is a must understand message
returns true if the given property is true
process the response message for client
add a soapheader element to the given soaphttpmessage
create a message id for the message
returns the value of the code actor code property
returns whether headers are removed from the configuration file
reset the operations
test for parsing a reference
test soapfault that does not disable the addressing
get the service instance
gets the value of addr header fault
set up the soap call
accessor method for wsa fault to
retrieves the target service name from the headers
serialize an instance restore it and check for equality
tests the copy method
tests the conversion to dom
returns the endpoint reference of the message sender
create an epr to identify the service
helper method to check the endpoint reference type
check that epr is a valid epr
creates a dom4j element from a string
gets the message id
get the service instance
gets the value of the reference parameters property
allows sub classes to configure a call
gets the value of the reference properties property
reads a line from the input stream
accessor for reply to
closes the given object
gets the value of to
checks the address of the specified request
checks the port type
check if the service name is valid
check the properties of the request
test the initial values of headers
check for element values in the ref type
gets the value of set must understand
compares the given headers to the handler config properties and asserts that
assert that the handler config properties match the expected
test parsing actor headers
return a soapmessage context
check the headers of the email message
check the header elements
tests the default deserialization of an envelope with reference properties
tests the default deserialization of an envelope with reference properties
set the action using an uri
assert that the action header is correct
sets the uri of the action to execute
test the envelope with all properties
test the envelope with a reference properties
set the endpoint reference for the fault to transport
set ws addressing from endpoint reference
test the envelope with a properties file containing references
sets the message id
test the envelope with a properties file containing references
asserts that endpoint reference equals expected
sets the reference parameters
asserts that two attributed uris are equal
sets the reference properties
create a new soapenvelope from the xml3 file
convert a reference type to a properties object
creates a dom4j element from a string
set the value of relates to
set ws addressing reply to endpoint reference
sets the set must understand
sets the to address
sets the to
converts the soap envelope to a soapenvelope
sets the value of a variable
copies all of the variables from the specified map to this one
sets the variables
returns the template string
parses the template string into a string
save the contents of a stream to a file
returns the next working day
end the timer
returns the year of this
sets the year
gets a new date of the years and month field
returns the easter day of the easter
returns the date when the easter is good friday
returns a date of the eastern in the format of the given day
monday of easter
computes the first day of the week according to the current date
returns the date ascension of the order
monday of the easter
this method returns a date that is the seventeenth of june
returns the day of the week
negates this date with the current date and time
this method changes the date to a day
boxing day
create a new date for the years eve
get the lower bounds
represents the number of months without license
returns the fine delta
check the saml response for errors
inserts all the attributes in the given assertion element into the given
check the soap faults for the faults
helper method for getting the first child element of an element
throws an authentication exception with the given message
handles authentication errors
returns a preferences object that contains a certain path of the
returns true if the node exists in the filesystem
returns true if a node exists
removes a node from the tree
sets the ok flag
returns a string representation of this directory
add an invalid location to this problem
returns the bundle descriptor
add an invalid bundle to the list of problems
closes the stream
add a new problem for malformed file name
add new failed mbean creation
add new failed mbean registration
add a location to the registry
this method is used to find the class from the given directory
find a class in the given bundle
returns the version of the sm4 j library
get the agent version
get the host that we are running on
pushes an object onto the top of this stack
returns the build timestamp
returns the top item off of this stack without removing it
returns the build platform
returns the parameter specified by key
returns the top item off of the stack without removing it
returns the parameter specified by key and two parameters
returns an iterator over the elements in this collection
returns the parameter specified by key and with three parameters
adds a rule to the context
override this method to specify the directory path to the cache
add a context to the list of contexts for the given path
gets the value for the key in the current language
clears all contexts
returns the action that was performed
checks if the path is in the list of paths
get a resource from the resource bundle
returns the most recent context for the given path
adds a variable to the context
match all rules
returns the root stack
returns the value of a variable
returns a string representation of the object
p returns an code attribute list code of the specified code bean code
description of the method
returns a string representation of the set data method
returns a string representation of this object
resets the stack to empty
return a string representation of this object
creates a path from the parent node to the child name
returns a list of all the attributes of the given class
invalidates the stack
get the class name from the context
returns a string representation of the set
construct path to the element
returns the object stack for the given path
this method returns the mbean info for the given class
capitalizes the first letter of a string
returns the next sibling of the given element
returns the root element of the given document
returns the first child element of the given element
returns true if the service bot is running
starts the bot and the service bot
stops the service bot
opens the writer
starts the server
stops the timer
encodes a string for json
opens the index reader
close the writer
close the reader if it is open
close the reader
this method initializes the scheduler and adds all jobs to the
start this server
stop the server
called when a message is sent to the botlet
resets the state of the builder to the start state
check if the message was received
returns the message
returns if ip is contained in this
returns the scheduler object that manages the scheduling of the job
starts the quartz scheduler
suspends the scheduler
shuts down the quartz scheduler
removes all triggers for a bot
creates all list of gateways for the forum
deletes a botlet gateway from the database
starts the botlet gateway according to configuration
stops the botlet gateway
deletes a message gateway from the list of message
stops a message gateway
logs the bot to the database
logs the user out of the system
edits a bot
list all bot definitions
delete a bot definition
custom view for bot definition
returns true if the published date is after the date latest
escapes the quote characters in a json string
adds the given entry to the front of the history list
sends the feed history to the user
this method is used to initalize the subscription manager
check if the user is authorized to access this filter
returns a new instance of the bot class
opens the writer
opens a server socket on the given port
the implementation of an ant listener stop
returns id of this protocol
return the message as a string
get the run action in the same thread
evaluates the protocol bye id and project id
notify all server listeners that the server has started
evaluate the bye
checks if the project name is the same as the project name
get the run action instance
evaluates the input
getter for property reload buildfile group
checks if protocol has id
notify all server listeners that the server has been stopped
sets the last started ant node
returns the action group for the ant target
returns the next free ant process thread
stops the server
getter for the ant help
starts the thread
the thread method
release the reader
reads all lines of the file
adds a listener to the list of listeners
removes a listener
start the logger server on the specified port
sets the node
adds bindable editor actions
the editor manager is about to change
sets the target
called when keymap has changed
checks if the logger server is running
sets the failed build flag
initializes the key binding for the tool
initializes the key binding
create the property page
start the process
get the port for the logger server
returns a string representation of the object
indicates whether some other object is equal to this one
returns whether the user is a country
add a listener to the logger server
called by the framework when this tool is being opened
run the ant script
method get help topic
read the properties from the file
starts the gobblers process
initialize the properties
remove a listener from the logger server
return the property page factory for the given topic
sets the selected item
sets the selected option
returns the selected item
returns the code of the selected item
print text to the output stream
sets the selected option by the code
returns the number of options in this list
add a listener that will be notified when this process is completed
shows a info dialog with information about the selected import
shows the release info viewer
gets the element at attribute of the switch project object
remove the specified listener from the set of listeners
adds a list data listener to the list of listeners
removes a listener from the list thats notified each time a change to
run the stop ant command
reads the properties from the properties panel
notifies all listeners that the content of the list has changed
reports the specified error to the process listeners
writes the properties to the client
this method is called when the user clicks on the
toggle the server
returns the port number
mask the path
sets the port number
this method is called when the server is started
sets the ant property
this method is called when server started
reads the properties from the given persistent store
method get help topic
called from the gui to write the properties
centers a frame on the screen
starts the server
overridden so we can exit when window is closed
displays an error message if the configuration is not configured
description of the method
method to handle help button action
toggle enable shell
get the browser action that should be used to launch manual
initializes the book
creates the tools used for open elements
toggles the default shell
p show helptopic window when the user selects the help menu
create the toolbar
method to update the gui
description of the method
find action group in toolbar
returns true if the ant script is configured
creates the menu and adds its help to the project
action performed method
returns true if the shell is enabled
creates a property page for the ant node
sets the shell enabled
invoked when an action occurs
returns the command name of the default operating system
get the shell value
toggles the enable state of the shell
sets the shell command
returns true if the shell should be visible
toggle the default shell
sets if the shell should be visible or not
gets the ant home directory
sets the ant home directory
gets the ant script file
set the ant script and let it run
sets the ant script file
return the use ant parser property
shows a file chooser to select an ant to manual
sets the use ant parser property
check if update is enabled
enables or disables the update button
creates the property page for the ant ide
writes the properties to the settings object
gets sets the ant manual property
gets the value of the boolean attribute
sets the boolean value
sets the ant manual attribute of the jbuilder project object
returns whether this page is valid
returns the build file
returns the build file object
gets the value of the switch project property
returns the project name
returns the base directory of the project
sets the ant script file to the specified path
delegates to the wrapped saxparsers implementation of the method
sets the switch project
returns the map of targets
initializes the context action
gets the value of the port property
parses the buildfile
returns the current ant script file
read file contents of the build
sets the port number
checks if the script is valid
gets the locale of the current language
parse the given file
gets the project name
sets the locale
returns the name of the default target for the project
get the base directory of the project
return a map of targets
returns the enablement state of the locale
sets the locale enabled
returns the length of the list
returns a list of attributes
returns the code index code th item in the collection
gets the string
gets the string
get a collection of strings associated with the given configuration key
method new instance
returns a collection of all the names of the attributes
method new instance
writes the node as an xml tag
returns the text of the element
returns the names of the attributes
writes the node and all children to the xml stream
returns the next target in the iteration
b dom b implements
returns the value of the html project name attribute
returns the string representation of the writer
returns the base directory for this instance
get the absolute system id
returns the default target of the resource
extracts the filename from the uri
method new instance
get the collection of target dom nodes
returns the target name of the entry
write all children in xml format
returns the value of the html description attribute
parses the specified file
method new instance
returns the target name
writes the node as an xml tag
returns the entry set of the target
sets the selected
returns the root node of the project
returns the base uri of the document
returns a collection view of the values contained in this collection
two targets are equal if they have the same name
finds the first child node with the given name
clones the current object
returns the name of the project
method for debug purpose
returns the description of the element
compares the position of two document
compares this object with another ant target
returns the contents of a node as a string
returns the value to which this map maps the specified key
method called when a wizard host is activated
returns the target for the given key
return the base directory for the project
returns the target map
returns the text content of this node
return true if the queue is empty
initializes the gui
selects all targets that start with the description of the given target
selects all targets in the ant model
p initialises the state of this instance
invokes the wizard
sets the text content of the node
deselects all targets in this group
initializes the gui
returns a collection of selected targets
returns the default target of the build file
the property change listener for this node that gets executed
returns true if the named target is selected
factory method for the wizard
checks if this node is the same as the other node
description of the method
updates the state of the action
selects the ant target with the given name in the target list
returns true if the project is ready
deselects the named target if it exists
looks up the prefix for a namespace uri
method called when wizard is activated
compares the specified object with this list for equality
inits the grid
method called when a property of a node was changed
this method gets called when a bound property is changed
creates a clone of this object
test if the specified namespace is the default namespace of this
returns an iterator over all targets in this ant target set
initializes the gui
this method gets called when a bound property is changed
returns an iterator that iterates over all targets
this method writes the properties to the target panel
this method returns the help topic associated with the
returns a string representation of the ant target map
looks up a namespace uri currently mapped to a prefix
read properties from target object
sets the target map
returns the target map
returns true if the build file is configured
initializes the state of this instance
sets the environment map
page ant node selected target map
returns the map of environment properties
initializes the gui
checks if the node is equal to the given node
called if the remove button is clicked
this method writes the global environment properties panel
gives notification that there was an insert into the document
gives notification that a portion of the document has been removed
read global properties from file
gives notification that an attribute or set of attributes changed
method to determine if this node is the active ant node
notifies the main ant node that the project has changed
initializes the gui
get the editor component for a domnode
returns the current value of the text field
returns the feature of the version
create a scanner
clone this object
called when the user presses the start button
get the style map
the cancel button was pressed
sets the active node
returns the contents of a node as a string
apply the changes
get the raw node encapsulated by the specified node
trims the given number of characters
gets the node name
centers a frame on the screen
returns the name of the active node
returns a new domnode which is a copy of the given node
gets the viewer title attribute of the project object
read next character
gets the viewer description attribute of the project object
creates a new viewer component
read a string from the stream
creates the structure component
gets the string
set the version information from the property
xlies this to string
check the comment on the buffer
returns true if the specified character is a symbol
get an icon
set the domnode that the panel will use
returns the icon name for the given base name
returns true if the given string is a keyword
check the version information
this method updates the attribute panel with the new attribute
returns true if the keyword is an extended keyword
saves the contents of the project file to a file
called when the text field loses the focus
returns the root of the tree
called when the editor pane gets focus
returns the specified style
returns the child of parent at index index in the parents child array
description of the method
returns the number of children of parent
gets the display icon
returns true if node is a leaf
returns the index of child in parent
returns the selected logger
filters the list of children of this node
set the logger
set the listener to be notified of
returns whether this node has children that are displaying
returns the list of listeners
returns a map of the properties
called when the remove button is clicked
sets the properties
returns the number of rows in the model
sets the description
returns the most specific superclass for all the cell values in the column
is the user renamable
set the selection with description flag
removes the row at code row code from the model
return the selection with description option
responds to the user clicking on the select with description menu item
set the keep target checkbox
returns a list of all registered ant runner listeners for the bpel
return the state of the keep target checkbox
do the listener to the status change
returns the path to the project
returns the number of rows in the model
sets whether the project should be saved on ant
action listener for the default execution path
return true if the project should be saved on ant
initializes the gui
override write properties to prevent the bean being written
read the properties from the page
removes the row
action handler for the select folder button
retrieves the major version number
this method writes the environment properties panel
read the properties from the properties panel
inits the grid
returns the target map
retrieves the minor version number
when page is changed in the id3 tag of the id3 tag
sets the target map for this ant test
sets whether the description of the request is expected to be selected
sets if the description is selected with the description of the
returns the number of rows in the model
the framework calls this to see if the file is correct
initializes the state of this instance
get the number of columns
get the name of the column at column index
reads the ant properties from the properties file
returns the most specific superclass for all the cell values in the
retrives the description of the buildfile
write properties to ant node
sets the target map to be edited
returns true if selected elements with description
this method gets called when a bound property is changed
checks if the target is editable
sets the target map
get the current target
sets the selected item and sends an
sets the selected item to the given target
set the currently selected item to the specified string
returns the selected target
returns the number of targets
sets the command
sets the target map for the ant
returns the value at the specified index
adds a listener that is notified whenever a column is added or removed
gets the default target of the project
get the command
remove a listener
fire a content changed event
sets the logfile
method get help topic
returns the logfile entered
sets the select with description flag
sets the target map
turns on off debug messages
sets the current target
returns the target map
check if the verbosity level is set to
invoked when the table model changes
sets the verbosity level to
sets the key
check if the verbosity level is set to
sets the value of a property
returns the target map of the current ant
return the key value as a string
performs the action
if true verbosity will be printed
called when an ant project is activated
enable or disable action based on the current state of the
check if the verbosity level is set to
execute the action
enables or disables the configured menu item
called when an ant project is closed
prints the help
sets the state of the keep going checkbox
called by the menu item
sets the target map for the selected targets
updates the enabled state of this action depending on the current configured
displays the node ant config page
updates the service
returns the state of the keep going checkbox
callback method invoked when an ant project is activated
callback method for the ant project activation event
make this tree no input
called when an ant project is closed
called when an ant project is closed
get the default action
gets the keep target value for this custom site
returns if no input is selected
enable disable the action based on the current state of the node
process the targets
description of the method
set the url to the logfile
updates the enabled state of the action
performs the action
checks if is target
get the executable path
process the current target
adjust the output file name
this method is called when the server is started
processes the selected targets
sets the keep target
set the logfile to the current selected location
store the current target
this method will be called when the server is stopped
returns the value of the node
get the build file url
called when an ant project is activated
description of the method
called when an ant project is closed
return whether target names should be selected with their description
gets the build file object
returns a string representation of a key for the specified node
check if the project is configured and enable the menu item
stop the ant server
returns a key for the category
returns the value of the specified node
invoked when an action occurs
gets the boolean attribute of the xmleditor doc ui object
checks if the node is running
sets the select with description
returns the name of the column at code column index code
render the given line
sets the message list
setter to the message list
unescapes the given string
returns the message list
returns true if the category will prompt on close
initializes the gui components
called when an ant stopped
return the ant runner tab
called if an ant stopped
show the specified line in the table
returns the number of rows in the model
returns the line currently selected in the table
event indicating that a category is closing
sets the build file name and creates theesettings
initializes the gui
returns the node
returns the short file name of the source file
sets the message list
return a string representation of this object
returns the line at the specified row
returns the message list
returns the selected line view
parses the buildfile
sets the selected line
called when ant started
calls the on mouse clicked method on the event listener
called if an ant stopped
getter for build file
setter to the message list
show last line when new data is added
show the given line in the list
gets the build file url
returns the line view that is currently selected or null if none
returns the icolor information
validates the last line
stop ant server
sent after the indices in the index0 index1 interval have been
returns the full build file full path
returns true if there was a warning
returns the value at the specified index
sent when the contents of the list has changed in a way
called when the first error button is clicked
shows the previous error message in the status bar
called if an ant has stopped
displays the next error message in the current message list
set the column where the parse error occured
returns the build file object
invoked when the mouse button has been clicked pressed
returns the foreground color for the specified color
method to show the last error message in the list
gets the background color of this component
gets the background color
returns the line
returns a string representation of this object
returns the filename of the message
clears all the messages and alerts
returns the index of the first file of the given text
sets the column in the last error
the ant stopped event
setter for the command line property
returns the line view at the specified index
returns the index of a line
returns the position of the file extension within the file extension list
state that an ant has stopped
returns the error at the specified index
returns the index of the first encountered error
returns the color information for the current text
returns the number of errors
returns the previous error in the given line
returns true if the last read line contains a warning
returns the column number of the given line
returns the next error line view on the next line
is the node makeable
filter a line
retrieves the command line value
returns the project of the wrapped project
returns the current font
updates the node from the earlier version of the version info
gets the foreground color of this component
called when this action is performed
updates the log file version information from the earlier version of the
jumps to the message
gets the string
returns the base directory of the logger
the run method for the thread
return true if the project should be saved on ant
read bye message
returns the log level
this will set the code ant node code that will be used for
tells the thread to stop waiting for a response
returns the filename for the given text
gets the port of the server
returns the index of the first file
returns the ant node
connect to a server using a port number 0
responds to a build being started by just remembering the current time
gets the ant node of the specified project
send a message to the ant server
set the save on ant property
returns the position of the file extension within the java
the target started this task
task started this task
returns the line number corresponding to the file extension
task finished this task has no function
called when a property of a node changes
no op implementation
send a build finished message to the ant server
sets the value of the code logfile code property
returns the error message from the file extension
closes the connection to the server
a browser window has been closed
returns true if this validation result has an error message
event indicating that a project is activated
getter for the logfile
notifies the registered listeners about the opening of an ant project
notifies the registered listeners about the successful ant project
tells whether this test is quiet
fetches the ant node for the specified project
sets the verbose attribute
returns all the nodes of the project
gets the verbose attribute of the jbuilder project object
sets the debug
gets the debug attribute
sets the state of the keep going flag
gets the keep going value for this document attributes
sets the no input value
convenience method to check if this is a no input
gets the base directory for the project
setter for exec path
getter for exec path
returns the url of the executable files of this project
returns the executable path as a file object
get the default execution path
returns the name of the node
getter to the ant buildfile name
sets the ant running attribute of the judge object
returns true if ant is running
returns the name of the logger
sets the logger
returns all registered listeners for the given name
set the listener of the project
returns a map of environment properties
sets the environment properties
returns the environment properties in this environment as a map
sets the environment properties to be used when evaluating the
method for getting the buildfile
returns true if the application can save
saves the current build file
set the component to be modified by the given nodeviewer
returns whether the content of this editor has been modified
sets the case reference value for this package type
returns the face to face id
sets the option value for this job ticket
sets the face to face id
sets the duration value for this test case result
sets the number value value for this long value
gets the value of the note id property
sets the waiting time value for this job info
sets the domain object id value for this fwtdomain
sets the fwtsid access permissions list value for this task
sets the note id
sets the note text value for this job ticket
set the value related to the column national insurance number
sets the blocked value value for this blocking type
sets the additional driving licences value for this annex
sets the date time value value for this document attributes
sets the attachment name value for this janus message info
sets the attachment identifier value for this ws write target params
sets the created by value for this fwtuser
sets the attachment type value for this attachment
sets the survey consent value for this user
sets the legal entity value for this attribute definition
sets the registration details value for this defect
gets the value of the code book id property
sets the passport number pattern id value for this passport number pattern
sets the code book id value for this product
sets the code book name value for this company type
sets the object id value for this company search result
returns the rule set
sets the disability reg number value for this company type
sets the object description value for this wsbirimler
sets the rule set value for this regatta
gets the case id value for this order type
sets the category value for this test case
sets the case id value for this order type
returns the published
sets the data value for this fwrule result
sets the published
sets the codes value for this fwtcode ref
sets the value1 value for this wsyetki kullanici
sets the search match value for this search result
sets the value2 value for this wsyetki kullanici
sets the child set value for this fwtextension child
sets the brief details value for this company
sets the range from value for this job ticket
sets the range to value for this test case result
set the value related to the column forename
sets the date1 value for this document attributes
sets the opened value for this defect
sets the date2 value for this booking
set the value related to the column forename2
sets the uprn value for this wsyetki kullanici
sets the date of birth value for this company type
sets the raised by user value for this fwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwtwt
sets the authentication details value for this authentication info
sets the classification value for this wsyetki kullanici
returns the record id
sets the record id
sets the phone details value for this fwtcontact phone details
sets the list item update type value for this list item update
sets the flow name value for this job ticket
sets the queue value for this job ticket
sets the exception queue value for this application exception
sets the usrn value for this wsyetki kullanici
sets the associated object value for this company type
sets the individual name details value for this fwtindividual name
sets the address number value for this address
sets the gender at birth value for this user
sets the company reference number value for this company type
sets the contact postals value for this fwtcontact postals
sets the name value for this fwtindividual
sets the category description value for this job ticket
sets the pao value for this wsyetki kullanici
sets the contact phones value for this fwtcontact phone set
sets the category name value value for this wsyetki kullanici
sets the contact emails value for this fwtcontact email
sets the sao value for this wsyetki kullanici
sets the xcoord value for this wsyetki kullanici
sets the classification event code value for this company service change data
sets the ycoord value for this wsyetki kullanici
sets the country of birth value for this company type
sets the event title value for this job ticket
setter for property proxy user id
setter for property proxy user name
sets the associated object description value for this defect
sets the generic value value for this place information cls
sets the last modified by value for this fwtuser
set the endpoint address for the specified port name
sets the associated object id value for this company type
sets the party value for this local business ad
sets the eform name value for this wsyetki kullanici
sets the content repository version value for this ws data file info
gets the value of the high priority property
sets the value of the high priority flag
sets the grant mask value for this job ticket
sets the deny mask value for this job ticket
sets the bpmreference value for this job ticket
sets the current handler value for this fwtuser
sets the bpmupdate type value for this receive fax wrapper
sets the phone id value for this contact
sets the date of death value for this company type
sets the created after value for this defect
sets the preferred language value for this document attributes
sets the device type value for this wsilceler
sets the note id value for this job ticket
sets the usage value for this job ticket
sets the audit details value for this event
sets the created before value for this defect
sets the note attachments value for this fwtnote detail
sets the extra data value for this fwtproperty
sets the lgcode value for this wsyetki kullanici
sets the priority minimum value for this job ticket
sets the disabilities value for this wsyetki kullanici
sets the primary street name value for this address type
sets the health number
sets the authorised view value for this document attributes
sets the occupation value for this job ticket
sets the priority maximum value for this job ticket
sets the owner object value for this company search result
setter for property workflow
sets the related object value for this company type
sets the extra data value for this fwtcase form
sets the sent value for this msg send req
gets the relationship id
sets the relationship id value for this related code
sets the results limit value for this search result
sets the received value for this test case result
set the value related to the column dissolution date
sets the organisation name details value for this fwtorganisation name
sets the message type value for this application exception
sets the severity minimum value for this defect
sets the attached documents value for this event
sets the severity maximum value for this defect
sets the duration value for this task
sets the escalation rule name value for this wsyetki kullanici
sets the closed value for this defect
sets the organisation code value for this wsyetki kullanici
sets the valid from date value for this defect
sets the handled by value for this fwtuser
sets the linked case value for this hierarchical requirement
sets the severity value for this defect
sets the inverted key value for this aes retry activity type
sets the row id
sets the completed value for this test case result
sets the child row id value for this describe softphone screen pop option
sets the notes value for this fwtnote
get the interaction id
set the interaction id
sets the interaction message value for this lagan api error
sets the slatime period value for this period type
sets the document value for this document ad
gets the slatime value
sets the slatime value
sets the document type
getter for property slaworking time
setter for property slaworking time
sets the additional occupations value for this user dto
sets the email id value for this user
sets the criteria value for this fwtorganisation update
sets the options value for this field
sets the cluster id
sets the document reference value for this document
sets the storage type value for this disk
sets the generic big details value for this fwtorganisation result
sets the driving licence number value for this wsyetki kullanici
sets the associated object value for this company type
sets the session id value for this job ticket
sets the output value for this lagan rule engine item output
sets the driving licence pattern id value for this wsyetki kullanici
sets the vatnumber pattern id value for this defect
sets the result detail value for this business service operation data
sets the field value for this fwtsearch hit
sets the start index value for this ws jdbc database info
sets the internal value for this document attributes
returns the database identifier of the case that generated this test
set the database identifier of the case that generated this test
sets the link type
setter for property new note
returns the workflow case
sets workflow case
sets the new note attachment value for this fwtnote
sets the vatnumber value for this wsyetki kullanici
set the value related to the column user defined date
sets the update note value for this fwtcase update
sets the contact postals value for this fwtcontact update
sets the pobox value for this wsyetki kullanici
sets the update note attachment value for this fwtupdate note
sets the building name value for this quote data
sets the contact phones value for this fwtcontact phone update
sets the new case reference value for this order type
sets the bpmcase update value for this fwtcase update
sets the eform data value for this fwtapplication event
sets the user defined text value for this job ticket
sets the primary street alt name value for this quote data
sets the contact emails value for this fwtcontact update
sets the parent value for this lagan api
sets the fwtcase search value for this fwtcase update
sets the user defined num value for this user defined type
sets the legal entity update
sets the object reference value for this wsobject
the classification event code getter
the setter for the classification event code
sets the creation date update value for this fwtorganisation update
sets the secondary street name value for this address type
sets the date of a certificate
sets the secondary street alt name value for this address type
sets the company reference number update value for this fwtgroup
sets the additional passports value for this custom site
sets the user defined1 value for this company type
sets the user defined2 value for this company type
sets the organisation code update value for this fwtorganisation code
sets the interaction id value for this job ticket
sets the user defined3 value for this company type
sets the user defined4 value for this company type
sets the user defined5 value for this company type
sets the vatnumber update value for this fwtvatnumber update
sets the user defined6 value for this company type
sets the email details value for this fwtcontact
sets the user defined7 value for this company type
sets the iggeo code value for this ws operation log instance
sets the vatnumber pattern idupdate value for this fwtvatnumber type
sets the user defined8 value for this company
gets the value of the code id property
sets the user defined9 value for this company type
sets the code id
sets the user defined10 value for this company type
sets the industry classification update value for this fwtindustry classification
sets the code key value for this company type
setter for property channel
sets the gpsitm geo code value for this merchant item attributes
sets the code value value for this wsyetki kullanici
sets the party id value for this party
sets the valid from date update value for this fwtvalid from date update
setter for property channel reference
setter for property channel data
sets the relation value for this test case result
sets the valid to date update value for this fwtvalid to date update
sets the gpsutm geo code value for this merchant item attributes
sets the time unit value for this quote data
sets the time amount
is this a working time
setter for property working time
sets the allocate to user value for this job ticket
sets the user defined update value for this fwtuser defined update type
sets the code group1 value for this company type
sets the reset task slas value for this deceased info
sets the user defined value for this job ticket
sets the local council code value for this job ticket
sets the code group2 value for this company type
sets the code group3 value for this company type
sets the filter1 value for this wsyetki kullanici
sets the local council name value for this job ticket
sets the user defined num update value for this fwtuser defined type
sets the filter2 value for this test case
sets the name id value for this user
sets the generic small details value for this fwtorganisation result
sets the postal details value for this fwtcontact
sets the interaction date value for this defect
sets the branch id
sets the filter3 value for this wsyetki kullanici
sets the ticket number value for this job ticket
sets the target party value for this local business ad
sets the merge parties value for this remote copy
sets the core details value for this fwtcase core info
sets the regional council code value for this job ticket
sets the filter5 value for this wsyetki kullanici
sets the events value for this fwtcase event sequence
sets the user defined text update value for this fwtuser defined text update
sets the tasks value for this fwtcase task list
sets the attribute1 value for this document attributes
sets the workflow value for this fwtcase workflow type
sets the attribute2 value for this document attributes
sets the regional council name value for this job ticket
sets the eforms value for this fwtcase eforms list type
sets the interactions value for this fwt interaction details
sets the attribute3 value for this wsyetki kullanici
sets the eform data value for this fwtcase eform info
sets the user defined date update value for this fwtuser defined date update
sets the link cases value for this fwtlinked list
sets the ward ref value for this wsyetki kullanici
sets the attribute5 value for this wsyetki kullanici
sets the form field value for this fwtcase update
sets the form name value for this form
sets the form key value for this form
sets the children value for this item
sets the date change value for this document attributes
sets the total hits
gets the elapsed milliseconds
sets the elapsed milliseconds
sets the ward name value for this wsyetki kullanici
sets the hit value for this fwtsearch result
sets the task definition id value for this job ticket
setter for property manual task
sets the user defined num
sets the child value for this fwtextension child
returns the event code
sets the event code
sets the event description
sets the reschedule date value for this get recent status
sets the reallocate queue value for this wsyetki kullanici
sets the work flow completion status value for this job ticket
sets the reason value for this fwtcase action
sets the locality type value for this locality type search parameter
sets the address id value for this address
sets the secondary locality value for this wsyetki kullanici
sets the primary locality value for this wsyetki kullanici
sets the post town name value for this wsyetki kullanici
sets the county name value for this wsyetki kullanici
sets the townland ref value for this wsyetki kullanici
setter for property parent type
sets the note details value for this fwtnote
sets the event code value for this smsstatus result
sets the event information list value for this job ticket
sets the townland name value for this wsyetki kullanici
sets the name value for this fwtorganisation update
sets the alternative street name value for this address type
sets the post town ref value for this wsyetki kullanici
sets the value3 value for this wsyetki kullanici
sets the value4 value for this wsyetki kullanici
sets the city ref value for this get quote response
sets the value5 value for this wsyetki kullanici
sets the range1 from value for this job ticket
sets the county ref value for this wsyetki kullanici
sets the property status value for this job ticket
sets the range1 to value for this company type
sets the range2 from value for this wsyetki kullanici
sets the address type value for this address
sets the country ref value for this get quote response type
sets the range2 to value for this test case
sets the range3 from value for this wsyetki kullanici
sets the building use value for this hierarchical requirement
sets the range3 to value for this company type
sets the building status value for this quote data
sets the date3 value for this booking
sets the paouser defined value for this wsyetki kullanici
sets the date4 value for this company type
sets the date5 value for this company type
sets the name value for this fwtindividual
sets the paouser defined text value for this wsyetki kullanici
sets the field value value for this document attributes
set the endpoint address for the specified port name
sets the user value for this fwtuser
sets the paostart date value for this mandanta cadastro
sets the generic smalls value for this fwtorganisation update
set the value related to the column paoend date
sets the street name2 value for this address
sets the sub building name value for this defect
sets the generic bigs value for this fwtorganisation update
updates the gender of the current fwtgender request
sets the organisation name
updates the gender of the current fwtgender at birth
sets the business alias value for this user
sets the place of birth update value for this fwtplace update response
sets the department name value for this company type
sets the paouser defined1 value for this wsyetki kullanici
sets the large user post code value for this user
sets the country of birth update value for this fwtcountry of birth
sets the paouser defined2 value for this wsyetki kullanici
sets the sub building status value for this defect
sets the nationality update value for this fwtnationality
sets the paouser defined3 value for this wsyetki kullanici
sets the paouser defined4 value for this wsyetki kullanici
sets the business use value for this business detail
sets the marital status update value for this fwtmarital status update
sets the paouser defined5 value for this wsyetki kullanici
sets the rmdelivery point suffix value for this wsyetki kullanici
sets the paouser defined6 value for this wsyetki kullanici
sets the driving licence number update value for this fwtdriving licence
sets the paouser defined7 value for this wsyetki kullanici
sets the merge party list value for this company type
sets the rmaddress key value for this wsyetki kullanici
sets the driving licence pattern idupdate value for this fwt
sets the paouser defined8 value for this wsyetki kullanici
sets the additional driving licences update value for this fwtadditional
sets the paouser defined9 value for this wsyetki kullanici
sets the vlaref value for this apartement
sets the paouser defined10 value for this wsyetki kullanici
sets the passport number update value for this fwtpassport number update response
sets the saouser defined1 value for this wsyetki kullanici
sets the ordnance survey ref value for this ordnance type
sets the passport number pattern idupdate value for this fwtpassport number pattern
sets the saouser defined2 value for this wsyetki kullanici
sets the saouser defined3 value for this wsyetki kullanici
sets the additional passports update value for this fwtadditional pass
sets the delivery point status value for this order type
sets the saouser defined4 value for this wsyetki kullanici
sets the health number update value for this admin customer
sets the saouser defined5 value for this wsyetki kullanici
sets the saouser defined6 value for this wsyetki kullanici
sets the record status indicator value for this search retrieve request type
sets the national insurance number update value for this fwtnational insurance number
sets the saouser defined7 value for this wsyetki kullanici
sets the saouser defined value for this wsyetki kullanici
sets the saouser defined8 value for this wsyetki kullanici
sets the social security number update value for this user
sets the saouser defined9 value for this wsyetki kullanici
sets the ethnicity update value for this fwtgroup
sets the saouser defined10 value for this wsyetki kullanici
set the saouser defined num
sets the disabilities update value for this fwtdisabilities
sets the disability reg number update value for this fwtdisability type
sets the date of birth update value for this fwtdate of birth
sets the occupation update value for this flight
sets the saouser defined text value for this wsyetki kullanici
sets the additional occupations update value for this fwtsearch result
setter for property date of death update
setter for property preferred language update
set the value related to the column saouser defined date
sets the survey consent update value for this user profile
sets the registration details update value for this fwtregistration details
set the value related to the column saostart date
sets the authentication details update value for this fwtauthentication details update
set the value related to the column saoend date
sets the lgcode update value for this fwtproperty update type
sets the paoaudit details value for this format
sets the authorised view update value for this fwtproperty
sets the saoaudit details value for this event
sets the category update value for this fwtstructure
sets the free text update value for this fwtfree text update
reset the hibernate statistics
set the stats implementation
get the statistics implementor that actually implement the
this method is called by the proxys code execute code method
sets filters for this container
returns the current session
return true if this flow should be processed
process the code decodes code variable
set the label prefix
write the script for a selection
get the reference to the user session object
fills the hoshi point array with the information in the
generates the investigate hoshi points and enusualt them
fills the given board with the data of the current game
makes the move if it is generated
returns true if there is a hane ending at the head of two
attaches a board to the attachment
repairs the path before the first move
extends a cross board ext
returns true if the user is in the center of 3 stones
puts a board on the input path
helper method to determine if a point is a dame
is the point a member of the dame
check if point is on player
returns the points of this dame
sets the j seki
this method returns the number of characters in a table of unicode characters
returns the index of the first character of a given string
trims whitespace from a string
returns true if the column at pos is empty
is the column empty4
checks if a field is empty
return the absolute x coordinate of the moyo object at pos
returns the position of the moyo on the board at pos
returns the position of the mo on the board at position mo y
clear the color
given two character arguments this method returns the number of
returns the number of characters in the code string code
return the absolute position of the element
if the layout manager uses a per component string
returns the index of the first visible child
sets a new key word filter
changes the color of the comment
sets a new key word filter
sets a new key word filter
sets a new input filter for a comment
creates and adds a new tab for the source filename
returns the tab index in the layout where the previous line number
this function starts a shutdown countdown
this function aborts a running countdown
sets the shutdown mode
aborts the current operation
releases the buffer allocated by the write buffer
call this method to parse a connection
packs the server base packet
accept a connection to the skype client
closes the client connection
setup the tool tip text for this component
sets the link behavior for this link
checks if the link behaviour is legal
get the link behavior for this code pixel code
sets the color to use when drawing links
sets the active link color
returns the color for the active link
sets the color for disabled links no longer enabled
returns the disabled link color
sets the color for visited links
gets the visited link color
returns the button url
set the url of the link
set the flag to indicate if a link has been visited
check if the player has visit this link
sets the default action
get default action
replaces all occurrences of a given string with another string
this method is called when the handler is closed
run the test
return the directory where tomboy files are stored
adds a class to the list of clases
adds a guild to the list of managed guilds
fetches the guild with the given guild name
returns the number of guilds in this run
clears all cached guilds
decrements the internal count of this result by delta
increment the inventory count by delta
checks if the object is empty
checks if the inventory is full
determines whether the object is robable
is the dem in robable
reset the receiver
returns a hash string for this object
add a user to a map
starts the timer
stops the timer
update the motd and save it
changes the current users direction
cleans up the npcs in the resource manager
parses information from a string and sends it to the server
follows amo
esta navegando
returns the char class for this font
returns the counters for this user
getter for property is criminal criminal criminal
gets the value of the estads property
gets the value of the faccion property
returns the flags of the user
returns the position of this object
gets the value of the raza property
gets the reputation
runs the lanzar spell intervalo permite
check if the timer puede trabajar is active and if so wait for
check if the timer is expired
checks if the applet can use this applet or not
returns whether this component is working
return the elv level
send a packet to the server
returns true if the message is a seguro message
sends a spelling info
pauses the edition
starts the le thread
kills the current edition
this method initializes this
this method initializes j content pane
begin user doc end user doc
begin user doc end user doc
sets the listener for the widget
creates the contents of the dialog above the entries
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin rendering a section
begin user doc
set the data component
begin user doc end user doc
begin user doc
create the new entry composite
begin user doc
begin user doc end user doc
called by the framework to fill in the contents
refreshes the widget
begin uml doc
add a component to the map
begin user doc
create the page for the output component
begin user doc
updates the status
sets the user code
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
returns the item status object for the given id
update the user form with the data from the form
process an item
deletes an item from the unit
begin the process of creating a new user code
stops the begin user code
begin user doc end user doc
begin user doc
begin user doc
not sure the purpose of this method depends on the
returns a clone of the resource
loads the user data object from an xml representation
returns the hash code value for this object
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
persist this user to the xml with the given identifier
copy the contents of the specified nice object into this one
helper method to extract the form name and description
begin user doc
returns the hashcode for this object
begin user doc
begin user doc
returns the number of columns begin user code
begin user doc
notifies all the listeners that the component has started
begin user doc
returns true if the process has ended
begin user doc
copy the contents of another table component into this one
begin user doc
returns the hash code value for this object
begin user doc
begin user doc
returns a clone of the object
copy all field values from the argument form into this form
loads this object from an xmlmanipulator instance
returns the hash code value for this object
loads the user object from an xml representation
begin user doc
notifies all the listeners of the event
begin user doc end user doc
notifies all the listeners of the component
copy the values from the specified code object code into
begin user doc
not equal hash code when you are equal
loads this object from an xmlmanipulator instance
begin user doc
begin user doc
begin user doc
begin user doc
returns true if the current user is a secret begin user code
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
copies the state of the given entry into this object
delete an entry from the agenda
begin user doc
begin user doc
begin user doc
returns true if the user code is in the dictionary
notifies all the listeners of the event
two matrix components are equal if they have the same user code
begin user doc
begin user doc
begin user doc
returns the hash code value for this map
copy the data component copy into the given object
begin user doc
creates a copy of the component
begin user doc
loads this object from an xmlmanipulator instance
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
dispatches the begin user code event
method to set a value against the user
begin user doc
update the value of a key
begin user doc
begin user doc
begin user doc
begin user doc
resizes the column to the current size
begin user doc
begin user doc
begin user doc
helper to set up the gui form
begin user doc
submits a form
begin uml doc
begin user doc
returns true if the user is ready to login
cancel the process of a user
cancel the process begin user code
begin user doc
begin user doc
get the username from the form
setup the form
begin user session dictionary
begin user doc
re review the entries of the registry
begin user doc
begin user doc
begin user doc
returns the hash code value for this object
determines if the specified hostname is the local host
begin user doc
begin user doc
this method starts a local
set up the gui specific effects modifiers
copies the given object into this object
launches the remote job
creates a clone of this item
begin user doc
begin user doc
review the user specific entries
begin user doc
begin user doc
set up the gui
begin user doc
begin user doc
begin user doc
begin user doc
test the integration begin user code
begin user doc end user doc
delete a host with a given hostname from the host table
begin user doc
disable the wi fi open mp
begin user doc
begin user doc
begin user doc
delete an input file
begin user doc end user doc
this method resets the state of the user
begin user doc
add a component to the map
disable open mp begin user code open mpa code
persists a state to the database
begin user doc
code copy code code copy code
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
resets the state of this object
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc end user doc
reset the state of this object
get the text from an element
create a new record in the database
begin user doc
begin user doc
begin user doc
begin user doc
begin xdoclet definition
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
dispatches the start of the user code
begin user doc
sets the value of a key
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
deletes an entry from the user
returns the entry corresponding to the given name
begin user doc
begin user doc
returns true if the user code is in this group
begin user doc
check if the engine is ready to process this request
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
starts the user
begin user doc
begin user doc end user doc
reports that the progress of the operation has started
updates the value of the key
reports the result of the call
begin user doc
begin user doc end user doc
begin user doc
begin user doc end user doc
initializes the keys
declaring the shoot action and mapping
create a cube with the given name and position
add all mappings and listeners to the input manager
floor make a box with a floor color
a small utility method to initialize and add the crosshairs to the overlay
launch the user code viewer
sets the location cells
set the ship name
starts a chat session
sets the location of the site
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
will begin user doc
begin user doc
begin user doc end user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
starts a new video instance
begin user doc
begin user doc
begin user doc
begin user doc
creates the drive
begin user doc
begin user doc
begin user doc
begin user doc
this method sets the daylight savings time to the specified value
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc
begin user doc end user doc
begins the constructor
begin user doc
begin uml doc
begin user doc
begin user doc
test the process command method
begin user doc
begin user doc
begin user doc
test method for
this starts a chat with the server
begin user doc
begin user doc
begin user doc
loads the data from the given stream
test that the equals method returns false
begin user doc
begin user doc
begin user doc
begin user doc
test the hashcode method
returns a string representation of the object
begin user doc
returns a string representation of the object
begin user doc
sets the mass number
begin user doc
sets the atomic number
sets the name of the periodic table
begin user doc
called by the framework to fill in the contents
begin user doc end user doc
returns the hash code value for this object
begin user doc
create the new entry composite
add a component to the map
begin user doc
create the page for the output component
indicates whether a translation should be generated
sets whether a translation should be translated
set connection user name
set the password used to connect to the database
set the url used to connect to the database
set connection driver name
setter for persistence manager factory
returns the exception that was thrown or null if none
o b n t
validates the request and returns the screening object
returns the data store
validates the request and returns screening object
sets the secure
sets the value of fail cycle
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
import a class into the system
adds a new field declaration
adds a block to the declaration of this method
adds a method to this class
draws this combination
handles the check box click event
called when the surface is created
handle the gallery item click
this method creates a logic scene call and calls the main method
handle the click of a gallery item in the preferences
handles the single click on a spinner item
called when the surface has changed
draws the texture map
returns true if the scanner has reached the end of the input
sets the position of the camera
this method returns the speed at which the density is
checks if a certain player is there
create welcome page
adds a probe to the model
statistics types for the genetic algorithm
the capacity of the given partition is the number of
returns the table column
resets the state of this visitor
returns the number of ranges
sets the number of valid ranges
checks visibility and purity of the given expression
returns the merge threshold
sets the merge threshold
get the split threshold for this sensor
check if the given partition is contained by this partition
check if the given partition intersects with this partition
returns the number of values that have been returned
sets the cardinality
returns the capacity of this range
returns true if this set contains the given constant
indicates whether this multiplicity denotes a limited number
p checks if range contains r
sets the split threshold
returns this borders minimum constant
returns this borders maximum constant
getter method for the property include min
indicates whether this field is included in the max value
sets the minimum constant that this condition applies to
sets the maximum constant that this preference can hold
sets whether this constants minimum constant should be included
sets whether this constants maximum constant should be included
setter for property include min
setter for property m include max
returns the capacity of this
updates all the phrases language in all the phrases in the
write all preferences to disk
get the preference value
set the preference value for the given key
returns the slot that is active in this build sheet
update the display
update the language of the power list
adds a power to the active slot
converts a string to upper case
sets the current pool to the framework
clears all entries in the pool filter of the given type
clears all power filters of the given type
clears all search filters
sets the changed attribute of the main frame object
extend the filter by a specific type
sets the type of filter used
returns true if the effect is reactive or not
damages an effect search for a type that matches a given search pattern
search for a string in a buffer
lost ownership method for clipboard
place a string on the clipboard and make this class the
get the string residing on the clipboard
update language menu items
sets the visibility of all gui elements
updates the gui elements with the values of the given xml
sets the message service
custom handler for vets display
custom handler for owner display
override this method to specify the maximum time for which seconds
called when the osgi framework stops our bundle
load the bean set definition
this method returns the root module definition that is the root module
reloads a module
reload a module
returns the type of the application
returns root element for this module
returns the properties for the given module
reloads the root module definition from the constructed module definition
get the type of the module defined in the module element
get the name of the definition element
repaints the modules and the components of the current module
unloads the root module
check if this module still can be written to
returns true if the log file has a write lock
removes a module from the system
adds a module to the current module list
check if a module with the given name exists
this method does nothing
set the resources to monitor for the module with the given name
check for changes to the model
removes a module from the graph
called before the close button is pushed
returns the resource handle for the given path
get the application context that contains the given bean name
adds a dependency on the vertex
set the bean factory that this bean factory should use to create beans
populates the dependant list with the names of the dependencies
sets the attribute map
populates the given list of module definitions with the given modules
set the setter for the set context class loader property
sets the log warning no service
setter for property export types
sets the retry interval
loops through the added vertices populates the vertex dependencies between
set the proxy options
set the proxy types for this genie
set proxy options
sets the bean name
the method code populate vertex dependencies code loads the
the method code populate dependencies code populates the
removes the specified vertices from the order in the list of vertices
get the root directory of the workspace
get the root directory as a path
check that all classes of the service are valid
add an event listener to the registry
remove an event listener
determines if the export types table is present in the export types table
adds an event listener to the registry
remove an event listener from the registry
indicates if a service is present in the export types table
returns true if the given object matches the key
returns a custom resource url for the given name
finds the resource with the given name
gets a resource from any of the class loaders
return the url class loader used by this jar
returns the url of the custom resource
returns true if there is a class loader that has a non null
visits the tree nodes with the specified visitor
create and return a new class loader for the given application
returns the url to the local resource of the given name
returns the character at the current position as returned by get position
read lock succeeds if read lock is not held by the thread
test that read lock is acquired then write lock is acquired
test for read lock on a read lock
create a new context that is only accessable
refresh the given application context
get the file from the resource
eagerly initialize the invoker
initialize the filter properties
initialize the servlet properties
set the name of the bean that will delegate the execution to
create a key to use in writing to the datastore
return the servlet path for this mapping
return the attribute name for the given attribute name and module name
returns the value of a property if it is set
returns the persistent preference for the given project
called when the compiler has changed
grab the currently selected compiler
performs the clean of all files that can be executed
adds markers to the given file
add an error marker
adds a warning
initializes the proxy
clean up the resources
release all of the color resources held onto by the receiver
clears the color table
disposes the colors
auxiliary method to get a color from preferences
updates the color with the given name
this method is called when finish button is pressed in
stops the thread
starts the list creation with a list of arguments
sets a slot for this task
returns the slot with the specified name
true if the given slot is in the hierarchy
returns the value for this document
sets every element in the tree which can be executed
sets this lolclass
adds an action to the list of actions to be executed
sets the value of the is while property
sets the test expression for this not operator
sets the name of the variable to be used for value
sets this roots sub lol file
sets this tasks maybe runtime
execute the action
evaluates the supplied expression
the user has pressed the ok button
the user has pressed the ok button
sets the state for showing closed projects
notifies listeners about changed text
sets the state for showing closed projects
create contents of the dialog
called when the selection in the script has changed
returns a print stream that can be used to write standard error messages
returns an input stream for reading from the standard input of the process
creates a print stream which can be used to write standard output
sets the selected specified script
handles selection of a project
sets the selected existing project
this implementation does nothing
writes the value to the target
writes the value to the target
returns the intersection of the bounding rectangle and the straight line
gets the tree model that represents the classes of the current tree
gets a tree model that contains the properties of a resource
returns the rdf graph
returns the class graph
returns the graph of properties
returns the base uri
computes the intersection of the bounding rectangle and the
this method fills the jgraph levels vector with the cells that
main processing method for the player object
handles the given game action
sends the given game action to the server
sends a game action with specified color and action value to the server
sets the board rating
gets the color of the square at the given coordinates
sets the color of a square
gets the points of a specified color
sends the own move if the move is not already in the game
sets the points of this piece
returns the number of points in this line
returns the winner of this move
this method should be overridden by subclasses
gets the rating of the given color
sends the given game action to the server
returns the next move to be processed
move alpha beta node
this method is called when a game action is received
this method returns the rating of the tree
quits the current game
returns the best index
the run method of the thread
this method calculates the average rating of the alpha part of the
gets the current turn and calls let player action to execute
calculates the beta rating that should be used for calculating the average
connect to server
returns the rating of the given board
returns the rating of this item on the given board
returns the rating of the given board
set the filter to be applied on this tt session tt
log a log record
non preferred use the get domimplementation method instead of this
deep clone a document including fixing owner doc for the cloned
returns a duplicate copy of this element
return a duplicate of this node
the first child of this node
the node immediately preceding this node
returns the owner document
b dom b implements
get the node number
the node immediately following this node
deep clone a document including fixing owner doc for the cloned
returns a duplicate of this node
get the parent node
the node immediately preceding this node
gets the node immediately following this node
the node immediately preceding this node
returns a duplicate of a given node
return the owner document
deep clone a document including fixing owner doc for the cloned
creates a new code domaswriter code object
the first child of this node
the first child of this node
the method code get last child code
returns a duplicate of this node
this method is used to remove the code node code from the
returns the code index code th item in the collection
returns the code index code th item in the list
creates a new
creates a new document fragment
creates a new element
returns the absolute base uri of this node or null if the implementation
creates a text node
the document element of this node or code null code if it is
returns the node that contains this node
constructs a dom builder using the specified symbol table
constructs a dom builder using the specified symbol table and
returns the absolute base uri of this node or null if the implementation
returns the number of the document to be created
explicit implementation of clone node to ensure that cache used
explicit implementation of clone node to ensure that cache used
explicit implementation of clone node to ensure that cache used
explicit implementation of clone node to ensure that cache used
explicit implementation of clone node to ensure that cache used
returns the element whose id matches the given element id
dom level 3 wd experimental
sets the id
retorna a json de usuario a nome
returns the tile at the given position
returns the number of rows in this area
returns the number of columns in this area
registers an item for use in a file
clears the cache
loads the version from a line of text
loads the name from a trader line
loads area definition from a line of text
loads a row from a string
loads a col from a string
try to open a chest
test portal move
an area stub for testing purposes
hero gains a level
get the configuration for a given host
returns the host object with the given id
returns the host with the given name
returns the number of hosts in the database
deletes a host from the database
update host cfg
creates a host configuration object
deletes a configuration from the database
creates a new host alias
deletes a host user
takes a single string as an argument and returns an encrypted version
takes a encrypted string as an argument decrypts and returns the
initializes the xml file
returns the string value of a single property tag
store the generated xml into the file
creates the registry and starts it
sign out a user
sends a text message to a user
shows a dialog with a font
updates the components
returns the selection model
sets the row selection model
get the selected font
sets the font selected by the user
returns the preview text
sets the preview text
fires the change event
p this method creates a new user and returns it
p create a new room p
deletes a user from the system
update a user record
update a group
p update room p
set new default password
update a user group
returns the security mode of the user in the current session
kicks a user off the server
sets the security mode for the server
returns the log level for the specified auth token
creates a temporary files with the length of 0
deletes the temporary files
run one test
write data to the stream
read bytes into a buffer
returns true if there are more series remaining false otherwise
returns the next element of this enumeration if this enumeration
tests if this enumeration contains more elements
insert a new item at position i
returns the number of available tokens
returns the value which is stored at the specified index
copies an item into another object
copies data from the given targ to the given buffer
checks if the given index is valid
get and remove a value from this
p if there is no error mess with the presence of a
method to call when we reach to get out of telescopic input stream
this method will set the exit on close
reads a byte of data
loads the file into memory
reads bytes from the stream
activates this handler
get the load length
deactivates the tool
reset the meter
returns the number of bytes read from the file
deactivates the tool
increment the buffer
returns true if the application will exit on close
returns the number of open frames
returns the current state of the stream
returns the maximum priority of the queue
returns true if the application should exit on next close
interrupts the threads
destroys this task
returns the first entry in the queue
return the number of remaining bytes in the buffer
inserts the specified entry at the beginning of this queue
adds the specified element to this queue with the given priority
returns true if the queue entry is not already in the queue
adds an object to the end of the list
returns the size of the store
add all elements from an enumeration to this set
removes the first entry in the queue and returns it
inserts the specified element at the end of this queue
transfers the object to another object
return a string representation of this object
flush the output buffer
prepends another linear queue to this one
removes the specified queue entry from the tail of the list
removes the first entry of the queue that matches the specified object
inserts the given element at the beginning of this queue
store the given number of bytes to the store
remove an object from the queue
overflow the array
appends a test to this queue
ensures that the given object isnt empty
appends the contents of the given linear queue to this one
returns the exception that was thrown
updates the saver position according to the current buffer position
clears the cache
copy all elements from an enumeration into this set
thread run method
overflow throws illegal state exception
return the number of entries available to the iterator
returns the number of entries in the begin index
returns the index of the first occurrence of the specified element
removes the first element of this list
remove the last entry returned by the iterator
returns the value at the specified index without removing it from the stack
returns true if this collection contains the specified element
removes the first occurrence of the specified element in this list
remove a value from the buffer
remove an index
replace an element
calculates the physical index of the relative index
inserts the given element at the beginning of this list
inserts an element at a given position in the list
returns a string representation of this enumerator
convert this object to a string
checks if the index is in the usewrap
validate the configuration
may return null
creates the default implementation of the sql map
returns the file name of the sql map
get the package name of the current sql map generator
generate a phrase to use in a select list
returns the appropriate fields of this type
returns true if a statement is generated by primary key without
returns code true code if a statement is created by primary key
returns true if a statement was created with the primary key selective
adds a xml element that was generated on start to be generated
override this to generate sql delete statement
adds the given java element to the given java element
defines if a map of sql statements should be generated against blobs
returns true if a select by primary key was specified for
returns true if select by example with blobs was enabled
the aliased column name for this result set column name
returns the sql for the schema
this method generates the database
returns the sub package of this schema
returns the compilation unit
returns the example where clause id
abstract sets thhe value for this field
sets the crs
adds the crs to the list of crs
parses a comma separated list of keywords and adds them to the list
add a time span to the time span
adds a keyword to the keyword list
sets the crs crs
sets the wgs84 bounding box for the scene
sets the operations
gets the bounding box for the wgs84
adds several operations to the environment
checks for wgs84 bounding box
adds the wgs84 bounding box to the canvas
adds a format to the existing format list
add a bounding box for wgs84
sets the crs
sets the upper and lower corners of the box
runs the xml document
runs the parser
parses the xml document
parses the document
returns the path to the wms
returns the wms version
sets the resolution x
prints the layers in the document
sets the y coordinate of the right point of this object
prints the coverage summary
parses the document
returns true if the given code string code is of this
print the feature for debugging
sets the style properties from a string
prints all the layers in the current viewable layer set
adds a bounding box to the current set
adds a crs to the list of crs of this layer
add an unknown extensibility element
add a layer to the xml
add an unknown extensibility element
set the attributes for this widget
returns the path to the wcs module
get the wfs path
runs the coverage
sets the fixed height of the html cell
runs the viewable layer
executes the query and returns the result in a string
sets the fixed width of the property
returns whether the background of this label is opaque
adds an operation to the set of operations
sets the opaque property
sets the max scale denom
returns true if the layer is queryable
sets the queryable value for this describe sobject result
returns the queryable value of the key type
returns the opaque property of this label
sets the minimum scale denom
generate the validity object
test creating a calendar
delete a calendar
checks to see if the feature is in the set
runs the application
start of testing
this method is called when a feature is added to the model
uketd ns gets the value of this field
uketd uri gets the value of this field
get the dc namespace
get the uri
returns the dc terms namespace
returns the value of the dc terms uri property
uketd terms ns gets the value of this field
uketd terms uri
uketd schema loc ns gets the value of this field
gets the value of the uketd schema loc uri property
get the atom info
set the particle information
load from a directory
saves the current table to a given location
save file to disk
loads a file into the database
returns the current time as a formatted string
returns the current date
returns true if the parent exists
returns the value contained in the editor
overrides jtext field
returns the value contained in the editor
stops editing the value by replacing the editor with an label
creates a scroll pane containing the buttons in the array list
creates a sparse button pane
recursively enables disables all children of the given component
compute the value to be returned by the code get code method
returns a string representation of the object
called on the event dispatching thread not on the worker thread
refresh the list of available locations in the backup
return a calendar object representing the given date
checks if the name is valid
switches the collection for the given id
spreads out particles in time
refreshes the data in the window
this method sets the text of the majority text
sets the owner of the mf
searches for a binned peak list of the stored peaks and returns it
starts the component
compare two binwheel lists
check if the binning peak contains any zero values
returns the filtered binned peak list of bins
adds a new cluster information
the main method of the cluster divide
add a new peak at a specific location
add a binned peak to this data set
sets up standard kmeans
divide all the peaks by a divisor
returns the current particle as centroid
print the list of all frequencies
returns the largest area of the polygon
sets the flag that controls whether the crawler will create centroids
returns the cluster number of the current node
the user can divided the collection by a cluster
add another particle binned peak list to this one
display the main window of this panel
add a weighted particle binned peak to the mixture
create a new center for a collection
creates a new center collection
add atom id to collection into the db
adds the atom ids to a collection of atom ids to be deleted
normalizes the distance metric to 0 1
calculates the distance between this cluster and the given cluster
splits the node if possible and returns the node
sets the normalizer to be used by this animation engine
set whether to interpret pre clustered
update the path for the node that is not a split
set the datatype in the database
returns a string containing the parameters for a dataset
returns true if this is a duplicate node that would be contained
adds a cluster feature to this node
removes a cluster feature from this cluster
method to update the parent of this cluster feature
clears the cluster feature that this cluster belongs to
multiply each peak in the list by a factor
if node is a leaf then set the first leaf in that
print will print a single node that will be contained
returns true if this is a leaf node
return the number of cfs
divide all the peaks by a factor
gets the first leaf
update pointers of the new child
remove a node from the cluster feature
sets the count of the event
get the binned peak list
sets the sum of squares
gets the sum of squares
get the next threshold value
returns the next threshold value
get a writer for saving a file
get a writer for a file
write the given time series to file
write the mz to a file
recursively assigns all the leafs of this node to the node
sets the magnitude value
interrupts the thread and disposes the handler
sets the indeterminate status of the progress bar
sets the maximum value of the progress bar
increments the progress bar
called when the user presses the get val progress bar
sets the value of the progress bar
sets the status bar text
print the tree to standard output
this will be called before the test case
print recursively the tree that would be displayed first in
load the data from the database and store it in a jframe
this method is called when the table is entered
returns the name of the file
set the parent id
returns the dataset name
print the content of the leaf node
return number of node in this
this will be called before the test case
load the data from the database and store it
this will be called before the test case
load data from the database and store it into the db
process a file
create a new empty collection and the corresponding files
gets the name of the dataset
find the tree that would be contained
returns the accumulated accumulated characters
retrieves whether the database is in current state
method db version
sets up sync analysis panel for synchronization
return the version of the program
gets the version number from the file
opens a connection to the database
opens a connection to the database with the default settings
opens a connection to the database
this method is called if a message was not successfully
opens a connection to the database using the default connection
get group method str
creates the axes for the jcombo box
returns the x length of a data value
returns the parent collection
returns the y length of a data value
calculate the x coordinate of the given data value
calculate the y coordinate of the point on the axis and return
get the graphic coordinates
returns the graphic coordinates of the point at the specified
sets the number of ticks on the y axis
sets the axis bounds
draw an x axis date at a specific index as date time
finds the orientation of the axes horizontal or vertical
draws the position and the tick marks
this method returns the position of the point p in the graph
adds listeners to all histograms
setup the plot
converts a height into an index into the bins array used by
add a radio button to the group
returns the element at the specified position in this list
returns the element at the given height
load configuration from file
returns the bounds of the data area
changes the brightness of the slider
creates the axes for the jplot pane
checks if point p is in the data area of this
draw the graph
paints the background of the drawing area
draws the tick labels on the x axis
gets the position
returns the point for the axis
returns the point at which the axis is displayed
sets the position of this line
sets the title of the x axis
sets the title of the y axis
sets the labeller for this axis
returns true if this key has been set
sets the has key
this method is called whenever the value of the selection changes
determines if the given command is present in the database
gets the value of the c scroll max property
set the maximum cscroll value allowed for this canvas
converts a height into an index into the bins array used for
this method is called when a new collection is loaded
increments the element at the specified index
gets the value of the c scroll min property
returns the element at the given index in the receiver
sets the number of particles this emitter will run before it is
sets the c scroll minimum
invoked when a mouse button has been released on a component
compute the chart scroll value for the given scroll value
converts the chart value to the scroll value
test adding and deleting atom
adds an atom batch to the database and then deletes it
test the batch memory operation
create an index on the database using the data type and field spec
get the version of the database
returns the collection name
collection collection name
deletes a single atom from the batch
adds a center atom to an existing atom
initialize atom batch with values from database
bulk insert method will check that the server has been properly inserted
returns the collection comment for a collection
gets the collection datatype for a collection
gets the collection size
executes a file the user and adds a backup to the database
deletes a backup file
backup the database with the specified name
returns a dynamically generated table name based on the datatype
gets the datatype for a given atom
gets the next atom id
get the binned peak list object from a specific atom id
seed the random number generator
tests the random number seed
deletes the aggregate basis
checks if the given type is in the reserved database
gets the filename for a single atom
gets the collection id of a cluster
propagates a new collection to the local database
finds a data record by its id
get the column with the given name
returns the first detail column
gets the template file
setter for the list of mappings
returns the named mapping if present
gets the definition with the given name
returns the column index
sets the column
returns the current row number
sets the current row
sets the type of cell this factory will use
returns the key
sets the key
get the excel mapping associated with this excel document
set the excel mapping to be used
gets the value of sheet number
sets the current sheet number
adds an element to the index and returns its index
test method for
tests adding many elements to the collection
test method for
test remove inherited from simple instance
test remove all
test method for
test method for
test method for
test method for
tests the is empty method
test method for
test method for
test remove after removing a row
test method for
test intersection of two collections
test method for
test method for
test collect expression
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test difference of two map
test intersection of two map using a hash map
test method for
test collect transformation
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
agregar trans c digo
test of get method of class nl
test method for
restricts all values of a given axis
configures the iterator
this method is called by the constructor to configure this
configures this iterator
test method for
test sacar trans
returns a description of the file filter
copies the state of the specified bean into this bean
p returns a new dyna bean that is a copy of
p create and return a new
sets the proxy
returns the uri bean
adds the data from the given bean to the graph
begins a read session
unlocks a read lock and releases any locks
start a write session
unlocks write lock
throws an exception if the session has been closed
delete the given resource
notifies all registered listeners that the session has been modified
returns the bean
returns the resource that stores this file
returns the jrdf store associated with this session
returns the graph for the given bean
adds translator to data
returns the literal value of a node
returns the resource uri of the node
returns the schema for the type
returns the schema for the given class
removes a schema from the model
put a schema into the cache
clears the cache
indexes the properties using the java type and property uris
returns the uri for a predicate
called after the session has been created
returns the data
the schema to be used in the generated code
loads an int from the memory location pointed to by the
this can be used to add a http message header to this object
this can be used to get the value of the first message header
remove any existing value for the specified name
remove all the values with the specified name
analyse path length
return the total of files counted
runs the application
insert the methods description here
execute sql in a separate thread
get the first record in the file
returns the csv
runs the script
set the csv flag
stores the database product name to identify this database
insert the methods description here
set the ignore errors flag
returns true if the first line of the source is skipped
clear null out the string data
get the currency used for formatting dates
returns the currency
returns the currency value according to the format pattern
read a string of length
read a string of length from the stream
run method for this thread
sets the file write
insert the methods description here
sets the date columns attribute of the calendar event object
insert the methods description here
copy a table and all its columns to another table
get the db connection status
determine if this setter method is a setter
set the delimiter
insert the methods description here
insert the methods description here
set the db connect flag
insert the methods description here
set the setter method
set the extended status of this file
this method encrypts the data
insert the methods description here
returns the tables node
sets the fixed width
insert the methods description here
runs the load script
returns the formatted string of the current time
returns the today in a string formatted as a string
insert the methods description here
return a formatted date format for the input date and time string
insert the methods description here
set the qualifier
insert the methods description here
get the properties file
insert the methods description here
returns the total number of rows in the result set
sets the sql for saving this record to the database
set the append flag
return the database utils that contains this my sqlresult set
renames the table in the underlying database
insert the methods description here
sets the new table
insert the methods description here
insert the methods description here
set the total number of rows
returns the load mode
skips the first line of the file
set the load mode
insert the methods description here
executes the sql script
insert the methods description here
this method generates the default table model
closes the output file
returns the db served by this query
gets the mssql property
returns the is my sql
moves the rows up by one row
gets the value of the is oracle property
set the is mssql property
moves the rows down by one row
sets the is my sql
set the is oracle flag
sets the metadata for this code result set code object
insert the methods description here
insert the methods description here
insert the methods description here
deletes a row from the table
inserts a blank row at the specified index
p indicates whether the output should be formatted as csv
getter for property export data
enable all gui elements for the various fields of the table space
p return the value of the code export script code property
insert the methods description here
changes the tablespace combo box with the actual tablepaces
disables all gui elements except the next extent and next extent
returns whether or not scriptn data is exported
insert the methods description here
returns whether or not the receiver is filtered
get the type of mysql
insert the methods description here
shows the main splash screen
gets the value of the is as html property
returns the is mysql
set the database view
pops up a file chooser dialog
p set the value of the code as csv code property
insert the methods description here
closes the output file
stores the database product name to be used for connecting to the relational
insert the methods description here
setter for property export script
setter for property export scriptn data
sets the file writer
sets whether or not the receiver allows or denies incoming messages
set the is as html value
set is mysql property
sets the is oracle flag
insert the methods description here
insert the methods description here
insert the methods description here
pops up a file chooser dialog
display the string buffer to the file dialog
disconnects from the database
drops the primary key table of a given catalog
export the tables to a xml file
get the column types
execute the given sql string and return a result set
refreshes the index table
sets the catalogm
set the child column
set the table of exported keys
set the table name of the imported keys
insert the methods description here
set the table model for this table
fills the parent list with data from the selected table
insert the methods description here
sets the pk status attribute of the entity bean details panel object
insert the methods description here
method set sql result table
insert the methods description here
sets the tables vector to the given value
insert the methods description here
pops up a file chooser dialog
check for new updates
get dbconnection returns the dbconnection
returns null status
returns the number of records in the database table
set the scripts to be displayed
get the root node of the tree
shows the form
this method shows the form of a state window
shows the form
compiles the report into a java
fill the report with data
creates a report and compiles it
create the main window controls
adds the controls to the panel
adds a component to the main panel
create the tool pane
the implementation of the action listener interface
sets the pn current module
fill the panel with all modules
add a module to the panel
adds a page to the wizard
creates a key stroke listener that will execute the
sets the page in the main window
sets the page index
returns true if page can be shown
gets the next valid page index
called when the ok button is clicked
set the company for this user in the system
adds the controls to the panel
initializes the key stroke listener
reload the data from the database
reload the tool pane
edit the selected object
called when the user requests a new jbs object from the database
fills the toolbar
returns the selected page
set the selected company
returns the currently selected company in the user interface
set the companies of this model
returns true if a company exists in the collection
add a company in the list of company in the model
selects a company in the list of companies
return the selected company in the list
sets the tbl main
gets the pn user edit attribute of the school model object
sets the pn user edit
add a new company in the model
delete a company
selects a group in the group list
return the selected group in the group list
selects a user in the list
returns the selected user in the list
set the permissions controls
add a pn permissions to a tab pane
sets the groups of users
check the data object
save the data of this bean to the database
saves the data
set the control data for this permissions object
get the control data for this permissions object
sets the user of the system
saves the data in the jbs object
add an action to the list of action listeners
this method is called when the user selects the show form menu item
show form and update
the default implementation of show form
set whether columns in this table can be found in a
sets the article attribute of the news article list object
gets the article attribute of the news article list object
returns true if the search column is seachable
gets the selected jbs base object
get the names of the languages
set the prices set
the hierarchy customer object for this database
sets the customer hierarchy
removes the standard prices
the customer object is associated with
sets the customer attribute of the jbs base object
gets the employee object for this employee
sets the employee attribute of the company object
get the names of languages
add a row to the table
add a row at the given index
remove all vita rows
remove a vita row from this vita row group
refresh the list of vita rows
the supplier object of the supplier of this supplier product
sets the supplier for this product
the setter for the jbs base object set
reload the pageable object list
returns the vatsum for this article
returns true if the given payment is already in the set
delete the old payment for the customer transaction
checks if a position exists in a list of positions
delete the given position from the database
delete all old positions of the given transaction
sets the sort indexes for the given list of tr positions
adds credit note to list of credit notes
removes credit note
sets the payment term
calculates the last payment date for the transaction
set the list of texts
add the given dunning template to the document
setter for property dunning templates
return true if the owner of this object is the same as
called by jbs to determine if this user can write this object
determines if this group belongs to a given group
true if this person belongs to a given company
imports modules fom xml file
clears the unique id for this object
returns the error message for the specified exception type
copy permissions from another object
sets the new id attribute of the store object
checks the data
create a dataset
required to implement entity bean
updates the dataset of the current exercise
clears the list of ids
clears all the ids in the specified set
returns a list of datasets for the given entity class and filter
sets the text content of the document
opens a file to read
saves the document to file
returns a list of datasets for a given company
find the first child element with the given name in the document
find a child element with the given name and attribute value
returns the first element with the given name in the given list
returns a list of datasets for a given query
returns the std price
sets the std price
execute an update query
executes an update on the database
this method will return the long value of the query
delete objects that are depending on the main class
deletes depending objects from the database
gets the std reduced value for this his configuration
returns whether this variable is standard
checks if an address letter exists in a list
deletes all instances of a letter that have not yet been created
returns the index of the first row of the given page
converts a paged index to complete index
gets the new start index
description of the method
description of the method
reloads the list from the database
get the paged of object at index
gets the index of the last row to display
converts a string to a float
sets the component to be focused when it is opened
adds an action to the list of action listeners
adds a button to the toolbar
adds a component to the panel
reloads the current configuration
creates a key stroke listener that will be added to all keypads
posts the dialog
cancel the operation
add a group with the given name
adds a component to a group
adds a control to the column group
add an item to the list
add a control to a group
get the selected item of the list box
returns true if the current value is valid
gets the value
sets the value of the field
horizontal alignment of the title in pixels
set the language of the component
get the language string of the current language
get the language strings of the current text field
set the language strings to the new values
get the language field of this text field
adds a tab sheet
returns the tab model used by this tab
performs the job
creates a socket channel
initializes the code diffie hellman code
process the client initialization
connects to the ssh server
returns the content of this string as a byte buffer
implementation of the session manager method this simply closes the connection
called when a ssh packet is received
determines if the given character is renderable
create a channel
create a ssh channel
create a ssh channel
create a channel
create a session for a user using ssh
get a session
get a session
sets the cursor position to the given position
gets a session
checks if the given session is already available
adds an empty area at the given column
saves the user
sets up the component
this method is called when the dimensions of the panel changes
gets the icon attribute of the jeanback end object
paints the component
re draws the component
gets the outcode of a point
checks if a point is over another rectangle
deletes the note from the list
show a file chooser for the user to select an image file
returns the note with the specified id
returns the note at the given index
returns size of this component
returns all notes
returns a string representation of the music note
gets the value of the is pic property
set whether this is a picture
this method is called when the user clicks the dlt img button
this method is called when the user clicks the color button
get the y coordinate of the canvas
sets the y coordinate of the canvas
return the maximum size of a shape
return the smallest resize value of a rectangular shape
check whether the position is the minimum of the given shape
returns the maximum height of any shape
sets the maximum height of the shape
returns the minimum height of any shape in this layout
sets the minimum height allowed for shapes
returns the minimum width for shapes drawn by this legend
sets the minimum width allowed for shapes
returns the maximum width of any shape from the underlying data set
sets the maximum width of any shape
returns the node id
paints the component
sets the id
returns a string representation of the object
is called if a mouse button is pressed
gets the width of the main frame
sets the width size of the main window
if dragging is on then sets dragging false
returns the height size of the main window
sets the height of the main window
returns the width of the panel
sets the width size of the panel
gets the outcode attribute of the flat line object
returns total height of all jpanels
sets the height size of the panel
checks if a point is over the rectangle of the component
p returns the value of jscroll width size
sets the width used for scrolling using the arrow keys
p returns the height used for the scrollbars
sets the height used for scrolling of cells when outside of the
set the size of the main window
sets the scroll pane size
attach button change listener
this method sets the size of the panel
attaches the listener to the instrument selection combo box
specify the instrument to use for the specified channel
returns the instrument for the given channel
gets the instrument that is selected by the user
returns the instrument name for a specific instrument value
this method is called when the information panel is attached to the
get the instrument name
selects a channel
returns the selected channel
play a single note
moves the selected vertex up one position
moves the selected vertex down one position
moves the selected vertex to the left
the method code move right code is called when the user presses the
moves the selected vertex in the list to the left
the method code move out code moves out of the selected vertex
rotates the selected vertex to the left
rotates the selected vertex to the right
moves the polygon a specified number of vertex up by the specified amount
moves the polygon a certain number of vertex down by the given amount
moving moving top top only br
moving one line back
move the edge a specified amount
move the edge out
gets the outcode of a point
rotates the edge by amount left
checks if a point is over the specified rectangle
rotates the edge by amount
appends the specified box to the end of this one
sets the new image icon
start the applet
evolves the genotype the neural network
this method will try to establish a connection to the database
inserts a new record in the user table
inits the table
delete the user
this method is used to get connection to the database
create a new user table with an email address
print the table of the users connections
create table insert
drops the user table
delete database records
this method is used to get connection to the database
creates a new news table in the database
drops a news table
dispatches the request
insert a new news table
method to get info store which is already stored in the db
creates the directory sub section of the name
method to perform the search of absolute paths to order
method to get section which is already stored in the global search
returns the name of the preference
refreshes the thumbnail if it is currently cached
method to perform the search of image into an image object
return the number of search results to rotate
method to perform the search of image entry
method to perform the search of file names
checks if the public key is already stored in the public key
checks if the public key is already stored in the public hashtable
return the full name of the attribute
sets the search key attribute of the photo
returns the full name of an attribute
sets the search key attribute
returns the metadata as a map of key value pairs
return the full name of the search key
constructor that performs the search of bundle
aborts the search of image entry
return the full name of the search key
method to perform the search of file names into a search engine
returns the presentation of the code jeditor pane code
sets the searchbox search result
return the full name of the keywords that is already stored in the
notifies the model that the photo at the specified index has changed
method to rotate right in the index
method to rotate left in the list of recent search results
return the full name of the keywords
renames a photo which is already stored in the photo index
writes the protect entry to the protected photo index
method to perform the search of info into info map
method to perform the search of options into options hashtable
method to perform the search of options into the component
returns the presentation that is associated with this
save the current settings to the application preferences
method to perform the search of photo which is already stored in the photo
method to perform the search of photos which is already stored in the
method to perform the search of resource bundle
method to perform the search of icon into an image icon
returns true if the image has a thumbnail
method to perform the changed of tree selection
called when one or more node is selected in the tree
deletes the path which is already stored in the tree
sets the status of the photo
returns the thumbnail of the image as a buffered image
set the section status
method to set search root
get the name of a field from the label
method to perform the search of root section which is already stored
method to perform the search of the list of selected items
add a keyword to the list of keywords
method of the interface action listener
returns the keywords as a comma separated list
method to get root section of the search result
method to set root section of the search result
called when the search has been completed
method to perform the show sections action
saves the size and position of the frame in the preferences
method to perform the search of selected photos
method to perform the search of photos which is already stored in the
method to perform the search of all photos
method to perform the search of section which is already valid
method to get selected section which is already stored in the global search
checks for stored search of section if it is already valid
method to perform the search of photo which is already selected
returns the search root section
returns the option panel of this plugin
method to perform the search of section that is already
method called if selection is changed in the searchbox
select a photo
method to perform the search of photo which is already stored in the
validate the settings
method to perform the search of photos which is already stored in the photos
method to perform the search of section tree
clear the cache
clears the cache of thm
create cache for photo
creates the cache thm
adds a node to the tree
adds a variable to the specified section
builds the sub tree
create cache file but store photo to cache
sets the parent section
returns the path of this node
get the photo of the album
set the photos
get the first photo of the album
get the previous photo
get the previous photo
gets the next photo
get the next photo
get the last photo
check if the photo is the first one
check if the photo is the last one
returns the sub sections
returns true if the given section is a subsection of this in
setter of the property tt sub sections tt
gets the search search section
sets the search search result
sets the section
returns the search result
sets the search search result
returns the meta info
sets the meta info
returns the html that should be used to generate meta information
sets the meta info html
update the specified section
creates a new photo with the specified id and returns it
creates a cached photo in the given section
updates the search of the photo which is already stored in the photo
method to perform the search of path into base path object
updates the search of the photo section that is already stored
return the full path of the section
removes the photos from the given section
parse a section
updates the search of the photo which is already stored in the photo
removes a photo from the cache
method to perform the search of photos search of the photo
writes a photo section to cache
writes the given photo which is already stored in the photo
writes a thumbnail for the given section to the given output stream
writes the given thumbnail to o stream
create cache file but store photo to cache
returns the width of the box
returns the height of the box
set the message context
sets the security context attribute of the aservice object
sets the transaction context
returns the injection of this dependency
get the message context
gets the security context attribute of the aservice object
returns the transaction context
the target page to redirect to
gets the max pages
returns true if there is a row available from the current row index
get number of rows
binds the paging results to the given page
bind a list of data to this page
returns the maximum number of pages to be generated
returns the number of rows in the text area
returns the data in the current row
returns the row index
returns the wrapped data
tests binding of data model bean
returns the persistence unit
called after the transaction has committed
tests binding list
rollback the current transaction
returns a field object by name
fills the configuration with the values from the properties file
get the name of the table from the sql statement
open a connection to the database using the default jndi
puts the transaction context into the transaction context
returns the connection from the transaction context
configures hibernate configuration
get the hibernate session from the transaction context
returns the session object associated with this request
returns the hibernate session
commit the current transaction
closes the hibernate session
rollback the transaction
creates a new hibernate session from the current thread
commit the hibernate transaction
rollback the transaction
it searches for pojo in the database
starts a new transaction if there isnt one already active
returns the entity manager factory for the given persistence unit
br em purpose em insert a pojo into database
hibernate pojo pojo
makes the given persistent object transient
makes the object transient
br author j rg b uerle
refresh the entity model
executes an update query
counts the number of entities of a class
creates a new query object with an empty query string
creates a sql query from a native sql string
calculates the first page number and max results
convention for class name replace with classname
determines if the specified class is a subtype of the source class
set the http servlet request object
returns the principal that has been authenticated for this request
clears the security context
p handle the request initialized of this tlvs thread
clear out the tlvs thread local variables
performs the task of injecting the attributes
switches the state of the player
get the occupancy of a state in the form of a number
get concentration for a given volume
sets the random seed for the rng
if necessary apply the grammidt and rotations counter to the rotation matrix
update the values of the dynamic values for the receptors
switch the state of the service
setter for property model
getter for property model
get cell width
set the width of each cell
get cell height
set the height of each cell in pixels
get cell depth
set the maximum depth of a single cell
set the schedule to run
returns the schedule
returns the current time of this timer
returns the current time of this timer as double
sets the random seed for the random number generator
returns the random seed
starts the simulation
notifies the monitor
returns the parameters of the model
pauses the simulation
stops the simulation
is this doc item a batch
adds a sim event listener
removes a sim event listener
fire sim event
put an object into the persistent store
returns the persistent object stored under the given key
returns a unique identifier for this context
this is the method that runs the thread
called when the instance is activated
returns a short description of the servlet
retrieve the initial context
called when the instance is passivate
stores the account bean in the database
called after create a new instance of this bean is created
called when the user clicks the exit button
method action performed
invoked when a window is in the process of being closed
invoked when a window has been opened
invoked when a window is in the process of being closed
invoked when a window has been closed as the result
invoked when a window is changed from a normal to a minimized state
invoked when a window is changed from a minimized to a normal state
invoked when a window is set to be the active window
invoked when a window is no longer the active window
add a document to the root of the document list
this method is used to display the contents of the window
this method is used to display the contents of the specified category in
displays the contents of the given document
returns all documents that match the given category
returns a list of categories for the given document
returns a random integer in a specified range
returns a random string from a given string array
runs the thread
add a document to the list of documents
add a document to the given category
displays the contents of the contents category and all of its
displays the contents for the specified category
displays the contents of the given document
get all documents that match a particular category
returns all the categories for the given document
returns a string representation of the object
prints out the contents of the data input stream
prints out the data to stdout
adds a random document to the library
the run method
prints the contents of this object
adds a document to the array of documents
returns the birth year
returns a string representation of the object
this method displays the array
sorts the items in the list by name
returns a string representation of the object
initializes the socket
sends a packet to the server
updates the display with a new message
receive packets and print them in a new thread
run method of the thread
main processing method for the datagram thread object
insert text into the text area
broadcasts a message to all clients
sends a message to the server
reads from the input stream and sends the user name
send a message to the user
reads the chat and notifies the listeners
sends a message to the client
starts the chat
set the listener
this method is used to add a message to the list of messages
main processing method for the send thread object
load properties from file
load properties from a url
main processing method for the hello thread object
main method to start the thread
main processing method for the hello object
main method to instantiate a thread
kills the thread
a method with no parameters
constant 2 is implemented as a singleton
this method will tell the fly that it is about yourself
this method is called when the player presses the kutta
returns an iterator over the elements in this set
returns true if there are more elements in the iteration
returns the next element in the iteration
do the work
sets the value of the course id property
set the value of destdir
sets the project home directory
sets the handout2pdf program
creates a new instance of my class
this is the method that can be overridden by subclasses to implement
sets the default button panel
dispose of this
dispose of this panel
returns true if the dialog has been cancelled
sets the cancelled
sets the ok
sets the set flag
returns the label for the refuse
sets the label for the refuse
dispose the listener
initializes the main panel
set the latitude of the point in decimal degrees
sets the longitude of the site
town sets thhe value for this field
this helper method enables or disables layer panels
install geo ip from input stream
add a route point
get route point for ip
returns the inet address of the given device
disposes of all resources
inform all listeners that a point is focus
returns the country the ip address is in
returns the country v6
constructor for primary key
constructor for primary key
constructor for primary key
sets the topic name value for this janus message info
sets the roleid value for this user bean
sets the userid value for this user
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
sets the date examine value for this company type
set the value related to the column audit date
sets the result value for this test case result
constructor for primary key
sets the result value for this status response
sets the auditor value for this user
sets the audience id value for this audience
sets the vedio id value for this do
set the value related to the column arrange date
set the value related to the column vediotapes
set the value related to the column resources
set the value related to the column auditings
constructor for primary key
sets the user pass value for this user
constructor for primary key
sets the employee value for this customer
sets the roles
sets the registration no value for this wsyetki kullanici
sets the age value for this test case
sets the contact person value for this job ticket
sets the gender value for this user
constructor for primary key
sets the career value for this job ticket
constructor for primary key
setter for property resourceid
constructor for primary key
sets the operation value for this ws operation log instance
constructor for primary key
constructor for primary key
set the value related to the column contract date
constructor for primary key
sets the subject name value for this janus message info
sets the story score value for this gss acl change
constructor for primary key
sets the vedio name value for this wsyetki kullanici
constructor for primary key
sets the tech score value for this user story data
constructor for primary key
sets the perform score value for this job ticket
constructor for primary key
sets the date coming value for this order status type
sets the users
set the value related to the column innovate score
constructor for primary key
sets the date input value for this document attributes
sets the score value for this job ticket
sets the award value for this wsyetki kullanici
sets the orientation value for this job ticket
sets the market share value for this quote data
sets the accuracy value for this get quote response
sets the audience rating value for this item search request
sets the purchase value for this order type
sets the topic value for this topic set
sets the inputer value for this user bean
sets the vedio value for this do
sets the examiner value for this usuario
sets the status value for this get status response
sets the operator value for this business partner
sets the subject value for this business partner
sets the company id value for this company search result
sets the vedioscores
set the value related to the column playorders
set the value related to the column playchangelogs
create the toolbar
create the menubar for the app
create a menu for the app
gets the value of the cart property
get the total price of all cheeses
adds a cheese to this cheeses collection
returns the cheesr session for this user
returns the cart in the session
gets the value of the zipcode property
populates the visual item with the data contained in the contact
open the serial port
gets the id of this entry
gets the value of the tipo evento property
this method initializes j content pane
returns the url webservice
this method initializes this
this method initializes j content pane
update the score of the current morphing process
traverses a tree in order to display the nodes that belong to the
performs a binary search for tt a tt in the specified
deletes the specified moid from the group
returns the distance between this moving object and a given object
get the distance between two traj clusters
calculates the distance between two segments
cascades the selected entries in the given table with the cascade action
get mime type of the data that this
read the document from the given stream and place it in the given
loads the configuration from the config file
returns the value of the named attribute or null if the
returns the value of the named initialization parameter or null if not found
marks this cache as invalid
returns true if the state is new
get the value of an init parameter for the servlet
get mime type method comment
gets the authentication type
get real path method comment
add a cookie to the response
add date header method comment
log method comment
add header method comment
gets the character encoding
log method comment
adds a header with the given string
log method comment
contains header method comment
removes an attribute from this component
this method is not implemented
sets an attribute to the given name
flush the buffer
returns the size of the buffer
returns the commited
returns the context path
resets the state of this object
reset the buffer
sends an error response to the client using the specified status
sends an error message to the server
description of the method
set buffer size method comment
set the length of the content
writes the specified byte to this output stream
returns the value of the specified request header as a string
writes the given byte array to the output stream
sets the content type of the response
flushes the stream
set date header method comment
set header method comment
this method returns the number of bytes that can be read from this
read a single character
returns the value of the specified request header as integer
sets the int header
read some number of bytes from the stream
read data from the socket
sets the status of the process
sets the status
get the name of the method
closes the server socket and stops the server thread
gets the value of client socket timeout
returns any extra path information associated with the url the client
gets the server socket timeout
returns the context container
restarts the configuration
returns any extra path information after the servlet name but before
checks if is finished
returns the protocol
returns the query string
method get real path
get the attribute value
returns the hostname of the remote machine
returns the authentication type
add a cookie to the session
gets the remote user
add date header method comment
add header method comment
add int header method comment
returns the character encoding for the current session
returns the session id specified by the client
does the specified header exist
this method is not supported in this session
writes the specified byte to this output stream
reads the next byte of data from the input stream
close the output stream
flush the buffer and commit this response
closes the server socket and the connection
get the size of the buffer in bytes
set the state of this task to finished
return true if this session has been committed
reset the messenger
create the buffer to store the content
send error method comment
returns the name of the server
send error method comment
description of the method
set buffer size method comment
set the content length for this response
this method sets the content type
set the date header
set header method comment
returns the servlet path
returns the context path of the current request
set int header method comment
set locale method comment
set the status code
returns true if the session id specified by this request came in as
set the status
checks whether the session id specified by the url parameter is
checks whether the session id specified by this request came in as
checks whether the session id specified by this request came in as
return true if this context is a secure context
is user in role method comment
returns the value of the specified integer header if it exists otherwise
remove attribute removes an attribute from the configuration
overload this method to set an attribute which should be used
get the method
sets the context path
sets the method attribute of the request object
remove a header
returns the path info string of the file
adds a header to the response
returns any extra path information after the servlet name but before
returns the protocol name
returns the query string
returns the real path for the file whose pathname is given
returns the remote ip address
returns the ip address of the remote host
returns the remote user name
returns the name of the server
returns the servlet path
this method confirms that session id came in as a cookie
is requested session id from url
this method returns true if the session id specified by the url
this method returns true if the session id is valid
is this user secure
is user in role method comment
remove attribute method comment
set an attribute for the remote host
it returns the next proximo tick
converts a value to a string
draws the text
gets the string size
returns a point2 d object with a given point and alpha value
returns the proz of a double value
looks up a variable implementation
returns the value of the given variable in the context
set the value of the variable
returns a weave object by id
deletes a weave object from database
deletes an object from database
updates a weave object in the database
inserts a weave object into the database
checks if an object with the key exists
returns the magnet url
sets the magnet url
returns the number of weave records in the database
bind an attribute
resolve the configuration
close the store at path2enviroment
product of two matrices
update the progress bar
helper method that configures a worker from a reader
getter for property workers iterator
returns a string representation of the object
called when the worker status changes
updates the status bar with the information from the worker
sets the worker who will perform the status change
adds a worker to the workers grid
called when the status of the worker changes
returns the report file
returns the wait between iterations milliseconds
get the urls for this data point and store it in
write the report to the specified file
return the wait after exception milliseconds
waits the specified time for the specified message to be received
calls the superclass and updates the status line when the
reports an exception to the user
configures the factory from the given reader
returns a random url content
helper method that reads a url connection
parses the report from the given url
returns session id of selected session at given index
sets the session id of the selected session at the given index
returns a list of orders
get the report order field name
assigns staff to the person
resets the activity times
assigned campers sets thhe value for this field
sets the users charge based on the registration form
add a leg to the given transport type
remove leg from the list of active users
remove leg from the registration
set the canteen charge form
sets the user form
reset the user session settings
sets the role form
set the role form
helper method to set role form
sets the role form
set the principal form
sets the user form
set the user into the form
set the report group form
set the report form and create a new report
sets the report groups form
sets the report groups form
set the report form
set the report form
set report form
set the update report form
gets the user settings
sets the transport configuration form
removes all transport types declared in the given list
creates a new session form and sets it as session form
sets the session form
sets the search form
creates the years of the session
set staff yearly advance form
set staff advance form
sets the staff yearly form
sets the staff yearly form
set staff form
set staff form
set the staff advance form data
set the family form
sets the data into the form
set form for time slots
set the activity groups form
sets the current camper form
set the instances form
set the camper form
sets the camper form
set the cabin form
set the session form
sets the assignment form
sets the cabin form
set the session inquiry
sets the incident form
set the incident form
sets the new incident form
medical incident form
compares the specified object with this
returns true if the two roles are equal
returns the hash code value for this object
compares the specified object with this
the overriding of this method should ensure that the objects of this class
sets the staff yearly for this person
sets the activity to null
creates a null activity day
create a null activity instance
creates a null activity time that is empty
sets all the member variables to null
returns true if there is no difference at all
returns the position where the first matched element has to be compared
method get difference position
compare two strings
compare the contents of two antlr files
compare the contents of two input streams
compares the contents of two readers and returns a comparison result
compares the two character stream
compares the compilation unit with the expected java source code
returns code true code if any errors have occured
returns a string representation of this object
appends the specified scope to the end of this list
removes a scope from this list
appends the given path to this list
removes a path from this instance
returns the value of the key
invalidates this code gl20 resource shader fragment code
returns a string representation of this code bit string code
saves the content of this part to a file
replaces a given picture
adds a part to the message
adds a new part to the list of parts
closes the window
callback invoked when a new node is created
sets the status of the gui to changed or not
opens a new picture
parses a whitespaces and returns them as a string
this method reads the next word from the stream
this method reads a word from the stream
reads numeral code from the file
request a tikz file from the tikz library
draws this handle
set the selection status of the figure
shows a file open dialog
shows a dialog to choose a picture
sets the syntax tikz picture to be displayed
returns the editor panel of this dialog
sets the markers position
get the mode of this manipulation
set the mode of the permission manipulation
creates the view menu
this method creates the help menu
at startup create and show the main frame of the application
create cookie for test cookie present method test
verify the value stored in a cookie using code greater than tag code
verify the value stored in header using code greater than tag code
verify the value stored in parameter field is greater than
verify the value stored in a parameter using code less than tag code
create cookie for test cookie string equals method test
create cookie for test cookie greater equal method test
create cookie for test cookie present method test
verify the value stored in a cookie using code greater equal tag code
verify the value stored in header using code greater equal tag code
verify that there is an cookie using the code present tag code
verify the value stored in parameter if it is greater than or equal to
verify the value stored in parameter if the value is less than or equal to
verify that there isnt an parameter using the code present tag code
corner cases on get dyna property invalid arguments
corner cases on get indexed property invalid arguments
corner cases on get mapped property invalid arguments
positive and negative tests on get mapped property valid arguments
corner cases on get simple property invalid arguments
test get simple property on a boolean property
perform our logged in user check by looking for the existence of
test get simple property on a double property
test get simple property on a float property
test get simple property on a int property
test get simple property on a long property
test get simple property on a short property
test code contains code method for mapped properties
test code remove code method for mapped properties
corner cases on set indexed property invalid arguments
positive and negative tests on set mapped property valid arguments
test set simple property on a boolean property
test set simple property on a double property
test set simple property on a float property
release any acquired resources
generate an html lt textarea gt element
renders the value displayed in the lt textarea gt tag
test set simple property on a int property
test set simple property on a long property
render the input field
test set simple property on a short property
test set simple property on a string property
base for test get descriptor xxxxx series of tests
render the resulting content to the page code
process the end of this tag
render the end of the hyperlink
release any acquired resources
release any acquired resources
save the associated label from the body content
process the end of this tag
return the label for the value
render an input reset element for this tag
release any acquired resources
release any acquired resources
generate a html lt select start gt element
process the do end event
release any acquired resources
return a new locale object for the current request if any
return the current locale for this request
render the beginning of this form
release any acquired resources
release any acquired resources
returns the content map of this application
executes when the tag is started
returns the value of flush
process the do end event
put a named content in this context
release any acquired resources
save the specified exception in request scope if there is one
release any acquired resources
returns the named content or null if it does not exist
gets the value of the body text of this element
process the end tag
returns true if this expression is a direct expression
release any acquired resources
check if the message has a body
release any acquired resources
release any acquired resources
process the do after body event
prepares the style attributes for inclusion in the components html tag
prepares the text event handlers appending them to the the given
prepares the focus event handlers appending them to the the given
returns the closing brace for an input element depending on xhtml status
render the body content of the panel
process the do end event
overriding method of the heart of the tag
process nested lg put gt tag
process nested lg put list gt tag
process the do end event
method called when the nested attribute has been put to a tag
add a new code action config code instance to the set associated
add a new code form bean config code instance to the set associated
include a page
save the current user in the context
remove the specified action configuration instance
remove the specified form bean configuration instance
returns true if there are no errors in this form
this is the action called from the struts framework
this is the action called from the struts framework
p add a message to the set of messages for the specified property
p return the set of messages associated with the specified property
returns an iterator for the set of properties
return the number of messages associated with the specified property
initializes the debug service
instantiate an instance of the factory class
returns the factory mapping
this method initializes the store
adds a parameter to this web service
destroy this context
lazily initializes the parameter values hash map
gracefully terminate use of the data source associated with this
get the parameters of the request
returns the value of the named parameter as a string or null if
returns the number of parameters
initialize our internal message resources bundle
add a registration
returns the class that implements the stub interface
add a new factory mapping
adds a template to the registry
return the factory mapping for the given name if any
return the template with the specified name if any
process the beginning of this element
overrides the attributes of the component
initializes the servlet and loads the data sources
returns the renderer type which is code struts stylesheet code
overrides the attributes of the component
returns the renderer type which is code struts errors code
returns the renderer type which is code struts write code
overrides the attributes of the component
p respond to a request scope attribute being added
release any acquired resources
record the fact that a servlet context attribute was removed
returns the renderer type which is code struts message code
p return the code renderer type code to be used for rendering
executes when the body is finished
overrides the properties of the specified component
record the fact that a servlet context attribute was replaced
return the form action
notification that the servlet context is about to be shut down
release any acquired resources
sets the action
notification that the web application is ready to process requests
p return the code renderer type code to be used for rendering
p perform any processing required to resolve the input parameters
release any acquired resources
returns the renderer type which is
overrides the properties of a component
creates a property resolver
overrides the attributes of the target component
release any acquired resources
gets the component type
returns the renderer type which is
get the text for this component
p return the state of the code locale code attribute
p selects a tree by uri local to the specified node
p return the state of the code xhtml code attribute
p return the action path for the current component
clears all warnings reported on this connection
initializes the application message resources
connection interface method
get the application
connection interface method
connection interface method
connection interface method
connection interface method
connection interface method
connection interface method
connection interface method
sets the map
returns the map
connection interface method
initialize our internal message resources bundle
connection interface method
sets the locale for the session
connection interface method
set the auto commit state of the connection
return true if the given log level is set
a sub space of this connections database may be selected by setting a
this method is not supported
set the transaction isolation level for this connection
returns the exception associated with this request if any
return the users currently selected locale
gets the maximum time in seconds that this data source will wait while
sets the maximum time in seconds that this data source will wait while
processes all attribute values which use the jstl expression evaluation
close all connections that have been created by this data source
open the initial connections that are appropriate for this data source
prints a message to the log file if one exists
log a message and associated exception to the log writer
processes all attribute values which use the jstl expression evaluation
processes all attribute values which use the jstl expression evaluation
processes all attribute values which use the jstl expression evaluation
evaluate the condition that is being tested by this particular tag
processes all attribute values which use the jstl expression evaluation
processes all attribute values which use the jstl expression evaluation
processes all attribute values which use the jstl expression evaluation
processes all attribute values which use the jstl expression evaluation
the locale used when creating the ui
the time zone where the recurring event occurred
the example string
sets the database driver
set the connection url member
sets the username
sets the password
sets command name
sets the name of the source file
sets the source table
set the command flags
set the column name of the file
sets the command names for the arguments
sets the name of the column containing the file contents
sets the argument values for a command that was parsed
set the procedure name
the parameters to be used while a procedure is executed
set the column names of the key table
set the key values
set the column names
if this is set the smtp server to send through smtp
sets the sender address
sets the receiver list
updates the state of the editor
sets the subject of the email
sets the mail content
deletes the database file
writes the map to the file
writes the given array to the file
returns the amount to change the snapped scrollbars value
gets the snapped point
open a file to open
draw a dotted grid
remove this object
remove by room
creates and returns a copy of this object
remove by room
returns a copy of this transition to brother
returns a clone of this object
get the weight of this goal
not implemented yet
select object by coordinates
builds the zip file
returns the bucket currently being processed by this iterator
sets the current bucket
write xml file
this method does nothing
this method is used to remove a file from the project
paints the object on the given graphics context
paints the objects in the specified collection
returns the not this link
returns the x coordinate of the top left corner of the exit
returns the y coordinate of the top left corner of the exit
sets the x coordinate of the top left corner of the rectangle
sets the y coordinate of the top left corner of the rectangle
calculates the line for the next layer
translates this point by the given coordinates
gets the current polygon
not implemented yet
hardness the passage
returns a new polygon that is translated to the given coordinates
checks if a given coordinates is inside the polygon
simplifies the body by removing all its variables
trigger this fireables on detalization
set all objects in the space filler object
set all the properties of the object
not implemented yet
checks if this shape is overlap with the specified shape
this method should be called from the controller when the current
returns the string representation of this type
determine if this point is an obstacle
checks if a given polygon is contained within this multi polygon
gets the bright color
sets all route elements
returns true if the given polygon intersects with this one
returns the dark gradient color
common parent method
inserts an element into the routing table
sets the all mim attribute of the mfstring object
removes an element from the routing table
returns a clone of this code nie real code
deletes a map from the database
get the on map
this method should be implemented by subclasses to obtain sound data
move the polygon
puts a new value to the list of managed disabilities
set all the object in the map
return the weight associated with a specific request probability
method to get the sound filename
getter of the current edge
get the filler used in the current row
retrieve the current passage
moves the rectangle
returns the main object
determines whether the given coordinates are inside this area
this sets the current edge
sets the bright color
returns a clone of the object
set the value of current filler space
set the current passage
sets the main object
sets the dark color
determine if this is an obstacle
creates and returns a copy of this obstacle
sets the on map
imports preferences from a file
writes the current settings to the given file
method to set the sound filename
draws a dotted grid
writes the specified byte as a character to the
this is the entry point method
set the tree display
find a uuid in a list of fields
return the expiry interval for this web feed entry
sets the expiry interval
returns the offset of the next block
validates the file using the given data
selects the delimiter for the given string
test of has next method of class tokenizer
test of open method of class nmeaprovider
test of close method of class nmeaprovider
test of add nmeaevent listener method of class nmeaevent listener
test of remove nmeaevent listener method of class nmeaevent listener
test of decode nmea method of class nmeaevent listener
starts the timer
closes the stream
runs the nmea event loop
remove an nmea event listener from the listener list
fires a nmeaevent on the listeners
this method will generate a nmea event
test of to string method of class nmeaevent
set the status of the satellite with the given prn number
set the status for all the satellites in the array
set the availability status for the given gps satellite
set the availability status for all the satellites in the array
add new satellite data to the array at specified index
returns the satellite data for the requested satellite
test of get altitude method of class org
test of set altitude method of class org
test of get velocity method of class org
calculate the distance between this gps position and another gps position
test of set velocity method of class org
test of get quality method of class org
test of set use status method of class org
test of set quality method of class org
test of set use status all status all method of class org
test of get horizontal dilution method of class org
test of set available status method of class org
test of set availabe status all method of class gps types
test of set horizontal dilution method of class org
test of add method of class org
test of get latitude method of class org
test of get method of class org
test of set latitude method of class org
test of get longitude method of class org
test of set longitude method of class org
test of get timestamp method of class org
test of set timestamp method of class org
test of get course method of class org
test of set course method of class org
test of get prn method of class org
test of set prn method of class org
test of get elevation method of class org
test of set elevation method of class org
test of get aizimuth method of class org
test of set aizimuth method of class org
test of get snr method of class org
test of set snr method of class org
test of is available method of class org
test of is in use method of class org
test of set available method of class org
test of set in use method of class org
runs the nmea algorithm
test of write gps point method of class org
moves the goal to the current score location
returns whether most recent connection is considered to be connection
gets the redirect
set the check
release any acquired resources
gracefully shut down this servlet releasing any resources
initialize our servlet
sets the browser event handler that will be used for browser targetting
private helper to retrieve a specific browser
determines if the browser is available
launches a browser preferences dialog
returns a list of browsers to be used for browser targetting
sets the spell index directory of the list of spells
sets the accuracy 0 lt min score lt 1 default 0
clears the index that was used for the spelling
close the reader
generate the index file
adds a new word to the index
returns true if there are any more records left to enumerate
returns the next record and advances the iterator
removes the given key and its corresponding value from this
removes all the given keys from this multi map
compares two code mutable double code objects numerically
returns true if the iteration has more elements
returns the next element from the queue
sets the count for a particular key value pair
retrieves but does not remove the head of this queue or
increments the count for a particular key value pair
gets the priority
returns the count for the given key
returns tt true tt if this map contains a mapping for the specified
returns the total count of the counts in the counter map
adds a key with a priority
returns the total size of all the counter values
return a string representation of the array
sets the count for the given key clobbering any previous count
returns a representation of the queue in decreasing priority order
returns the number of counter values
increment a keys count by the given amount
returns a counter representation of the current priority
adds the given count to the current count for each key in the
returns the total count of all the values in the counter
finds and returns the key with the largest count
return a human readable representation of this map
returns a string representation of the object
parses the file until the next stemmer is reached
calculates the chi squared of the given newsgroup
log the packet timestamp
unregister from the registrar server
inits the local sdp
waits for an incoming call acting as uas
closes an ongoing incoming or pending call
start the sound playback
redirects an incoming call
close the media application
callback function called when arriving a new re invite method
callback function that may be overloaded extended
callback function called when arriving an ack method call confirmed
callback function called when arriving a 2xx re invite modify accepted
callback function called when arriving a 4xx re invite modify failure
callback function called when arriving a 4xx call failure
callback function called when arriving a 3xx call redirection
callback function that may be overloaded extended
callback function called when arriving a bye request
callback function called when arriving a response after a bye request call closed
callback function called when the invite expires
callback function called when arriving a new refer method transfer request
callback function called when a call transfer is accepted
callback function called when a call transfer is refused
callback function called when a call transfer is successfully completed
callback function called when a call transfer is not sucessfully completed
returns true if this expression is left to the expression
returns true if this expression is right
returns the not empty list value
throws a no such element exception or this is empty
returns the value of this pair
this is a little confident method
this method returns true if the object is not a
gets the value
returns the first element of the pair
returns the second value of the pair
returns the value of this node
returns the third value of the pair
returns the fourth element of the pair
returns the first element of the pair
generates the html page and returns it as a string
stop the applet
paint the entire component
write content to file
copies a file
launches the license checklist activity
fills the checklists of this adapter with data
open the checklist database
populate the fields with the values from the database
return a cursor over the list of all checklists in the database
start the checklist edit activity
return a cursor positioned at the checklist that matches the given row id
copy a checklist to the database
create a new checklist using the title provided
update the note using the details provided
delete the checklist with the given row id
return a cursor over the list of all checklist items in the database
delete the checklist items with the given id
return a cursor positioned at the checklist that matches the given item id
insert a new checklist item using the title and body provided
update an existing checklist item in the database
creates a new checklist item in the database
delete the checklist item with the given row id
copy a checklist item to the database
sets the current displayable to the top of the displayable
switches the current screen to the given screen
returns the range set that represents the times in which is busy
notifies the application that a meeting scheduled range
invoked when a scheduler is processed
returns true if the given range intersects this range
return the union of this and the other range
return the intersection of this range and the other
compare this range to another range
returns the union of this and the other range set
override the equals method
returns a subset of this range set with those spans in the
undoes the last turn
method that is backed to a submit button of a form
this is the method that handles the action proc
creates the table editor
writes the current state of the row set to the prepared statement
reads the values of the columns into a result set
reads a value from the data source
creates a string field
sets the sector at the given index
sets the side of the sector
read packed long
reads an unsigned int value from a packed byte array
skips a packed number
read a packed long value in four bytes from the source stream
reads a packed tt int tt value
sets a drive
gets the drive attribute of the system cmd task object
changes the forced head and drive of a driving
returns the forced head for a given drive
sets the forced head
gets the value of forced head
disposes of this graphics context and releases
returns the frequency of the measurement
writes an int to the output stream
sets the current output position
writes a short to the output stream as eight bytes
output a signal
writes the header fields of the subchunk to the writer
sets the buffer
set the amplitude flag
set the low amp of the signal
toggles the amplitude
returns true if the low amp flag is set
plays the next writing position and increments the writing position
pauses the player
dispose the buffer
returns true if the specified character is whitespace
disposes all of the color resources
returns the color manager for this configuration
return a scanner for creating partition counts
returns the singleton instance of
extend this method in order to add your own rules
extend this method in order to add your own rules
get the method rule for the item label
get suggested items method rule
save the current form validation result
validates a field
returns true if there were any errors during the session
p return the code http servlet request code instance for this
gets the request parameter
returns the session
convenience method to get the response
p return the servlet context for this context
returns this service provider name
create a new exporter instance using the appropriate class
convenience method to get the configuration hash map
returns the name of the metamodel
returns the name of the wizard module
returns the name of the command in case sensitive fashion
creates the exporter for the test cases
sets the wrapped exception
set the bean
set the bean with the specified properties
creates a exporter for the current time
returns the name of the function
set the service to be used in a bean
get the class for the given class name
returns a list containing the elements of the array
return the bean associated with this request
executes the ant task
get the classloader for this project
find the component in the java version
removes generated files
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes j combo box2
this method initializes j combo box3
this method initializes j button21
this method initializes this
this method initializes this
this method initializes j panel2
this method initializes j combo box
this method initializes b salvar
this method initializes b cancelar
this method initializes j combo box1
preenche o produto
this method initializes j content pane
this method initializes this
this method initializes j panel
this method initializes j content pane
this method initializes tf descricao
this method initializes j panel1
this method initializes j content pane
this method initializes tf data
this method initializes tf codigo barras
this method initializes cb sessao
this method initializes b salvar
this method initializes cb cnpj
this method initializes cb filtro
this method initializes cb razao social
this method initializes tf localizar
this method initializes j button2
this method initializes b novo
this method initializes cb descricao
this method initializes j scroll pane
this method initializes ta obs
this method initializes j button2
this method initializes b fechar
this method initializes j button2
this method initializes tf quantidade
this method initializes cb data
this method initializes this
this method initializes cb validade
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j jtool bar bar
this method initializes j panel
this method initializes j panel3
this method initializes j jmenu bar
this method initializes j menu
this method initializes b salvar
this method initializes j menu item
preenche o filtro
this method initializes this
this method initializes j menu1
this method initializes dtp
this method initializes j menu item2
this method initializes j menu2
this method initializes j text field
this method initializes j password field
this method initializes j menu3
this method initializes j button
this method initializes tf data
this method initializes j menu item1
this method initializes j button1
this method initializes j menu item3
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j panel1
this method initializes j panel1
this method initializes tf descricao
this method initializes this
this method initializes b salvar
this method initializes b cancelar
this method initializes this
this method initializes j panel1
this method initializes b visualizar
this method initializes cb sessao
this method initializes tf custo
this method initializes b cancelar
this method initializes tf lucro
this method initializes tf venda
this method initializes cb custo atual
this method initializes j panel3
this method initializes b novo
this method initializes b salvar
this method initializes tf custo novo
this method initializes j button2
converts a string to a date object
this method initializes tf preco medio
initialize the server
start the broker
send a command to the remote host
returns the local com port
set the default values for the configuration
execute a task
returns the id of the source of the files that will be generated
read in the command from the socket
get the unique id of the result
register all data files in the data directory
register a file with the repository
registers a remote task file for a file identifier
sets up the default values for the client
unregister a files source
retrieve the name of the node command set for the current node
setup the gftpserver
executes the specified
logout from the broker
returns a unique id for the data file
register the data file id
logout of the node
adds default settings to the node
get a new task from dispenser
set input and output streams
runs the input and output streams of the task
registers that a task has finished
stop the execution of this task
get the data list
add a data id to the task description
get the unique id of the file
get the task identifier
get the id of the result data
register all files that are in the directory
mark a task as done
start a task
returns the task identifier
checks if this node has a task
get result file id from dispenser
get the average finish time of the task
saves the configuration of this node to the given file
executes a task of the given file identifier and registers it for dispenser
returns a sorted list of nodes
returns a sorted list of available tasks
close all the task inputs
adds a task info as a child
add a parent task to this task
returns the file id of the task result
returns the task identifier
gets the task result file name
increases the priority by 1
returns the parent list
the id of the result data
gets a file from the remote source
gets the task description
send results to the broker
adds a feature to the commiter attribute of the aservice object
returns the number of commiters
disconnect from the gftp server
parses the command string and executes it
tests if the command matches the command string
add a command to the command set
returns the parameter with the given number
returns the number of parameters
checks if a node file has a file named id
send a command to the remote host
loads the config file
read in the command from the socket
get a code string code value from the set of values associated
get resource locations unique ids
get an integer value from the property
close the connection to the broker
loads the configuration file
builds the configuration from the xml document
wait for a new connection to the remote node
set a property as a string value
run the shutdown sequence
set the value of the specified property
report that a single unique id has been unavailable
to string method
delete a property
get the next code block for this task
compares two unique ids for equality
get the returned value
returns the unique id for the given property
returns a hash code value for the object
set the next code block for this task
reads the configuration file for a task
sets the unique id value of the property
set the returned value
returns class name of the task
returns code true code if this task is finished
save the state of the task to the given output stream
get the name of the class that the task is running
set the task state to finished or not
reads the task state from the input stream
set input stream which will be connected to the subprocess
returns the remote gftp port
get the output stream to write to
description of the method
checks if a file exists
add a file to the files watch table
get the files table
create the document from the files watcher table
save the configuration file
logout the user
register a new file on the server
register file in the database
registers a gftpserver with the remote host
run broker connection to a resource
start a new node
start a new client
method to log a node
method to execute when user login is called
returns the dialog controller
gets the sound player
appends the given super to the end of this code builder code
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p appends to the code builder code the comparison of
p deep comparison of array of code long code
p deep comparison of array of code int code
p deep comparison of array of code short code
p deep comparison of array of code char code
p deep comparison of array of code byte code
p deep comparison of array of code double code
p deep comparison of array of code float code
p deep comparison of array of code boolean code
returns the comparison type for this attribute
returns the version of the value of this build
get an instance of the class
initializes the page
reloads the configuration
set the parent of this component
this method returns the string value of a property
creates a string representation of the players restriction
reload mp3 info from open file
makes a unique file current
sets the component at the specified code index code of this
this method is used to remove all real names from the list
inserts the specified object as a component in this list at the
appends the specified component to the end of this list
removes the first lowest indexed occurrence of the argument from this list
return the number of files that have been archivos
deletes the components at the specified range of indexes
adds a component to the list
changes the jtrees font
stop the commander
searches for files that match the specified pattern
search for a directory and a file
start a separate thread to search for mp3 busqueda
search for a directory and a file
for each plugin in the menu make the plugins menu
returns the fax chefe gets the value of this field
this is the entry point method
creates the field editors
this is a callback that will allow us
passing the focus request to the viewers control
this is a callback that will allow us
reload image from disk and show it
assigns a variable to a given variable name
assigns a constant value to an internal variable
checks if a name is valid according to the specification
finds the median of the samples
execute the repeated until condition
convert the given process info into an info structure
finds the mode
execute the given script
read a file
construct a process information object
check if a command is a dim command
parses a command line argument and returns the corresponding process info
check if the command is a keyword
description of the method
sets the parameters
executes this script with the given arguments
check if the command is an assignment
inserts the given value at the given index
inserts the given array of values at the specified index
this method asks for a value of a variable
expands the array to fit in the given range
checks if this collection contains a specified primitive value
removes the median value at the specified index
removes the first occurrence of the specified primitive value from this list
simplifies the terms of the term vector
are two terms similar
replaces all terms with the same term
simplifies all terms in the set
removes any duplicate terms
adds the given amount of memory to the stack
moves to the next element of the current iterator
move the pointer to the previous element
display the history
find the level of a given f
description of the method
center the point on the screen
draw the x axis
description of the method
adds a tag handler to the list of tags
returns the character offset of the beginning of the current token
returns the character offset of the end of the current token
evaluates an xml input source
pushes an input source onto the entity stack
sets the document handler to use
returns the declared prefix count of this scope
synthesize namespace binding
cleans up used resources
consumes the buffered end elements
returns true if this element closes any of the given tags
compares this object with the specified object for equality
returns a string representation of the object
test invalid processing instruction
test invalid attribute name
test changing the encoding
returns whether the given element is a parent element
test that infinite loop parser works as expected
adds an element to list resizing if necessary
writes out the characters in the character buffer
adds a new body element if needed
store characters start
store characters end information to the given object
begin the characters block
returns the line number of the current document event
start cdata section
returns the current column number
returns the xml version of the current entity
returns the character offset where the current document event ends
returns the qname of the element
returns a string representation of the stack
notify the listener that an element has been discarded
reads a single character
returns the next character in the current buffer
reads a single character
checks if debug buffer is needed if not throws an exception
rewinds the offset in the buffer
removes spaces from a string
adds location augmentations to the specified attribute
returns the character offset of the beginning of this document
returns the character offset of the end of the current block
returns a string representation of this object
reads a character preserving the old buffer content
inserts the specified match into this set if it is not full
compares the length of the longest match to another queue of maximal matches
returns the element at the specified position in this list
retrieves the value of the current element of this sequence
returns the order of the elements in this collection
initializes the deleted items
two lex elements are equal if they have the same class
compare two paths for ordering
compare two paths to see which is larger
tests if this path is equal to another path
compares this path with another path for equality
deletes the temporary directory
tests if the given object is equal to this ordered path
deletes the whole path
returns a string representation of this object
compares this object with the specified object for order
returns the normal path of the norm
sets the order
test of get next method of class com
test of get first method of class scio
test of length of longest match method of class eu
test of iterate queues method of class org
test of hash code method of class scio
test of equals method of class org
test of get next method of class org
test of start at first unmarked token method of class org
test of get first method of class org
test of set marked method of class org
test of no of elements method of class linked list
test of offer method of class queue
test of compare to method of class queue5
test of equals method of class queue5
test of get length of max match method of class eu
test of element type method of class integer
test of element order method of class eu
test of distance to next marked or end method of class eu
test of maximal element value method of class linked list of elements
heres where we do the work
sets the dimensions of the image to the given width and height
sets the hints for this image
this method sets the pixels of the raster to the color model
returns true if the uri string and variable names match
sets the pixels of the image from x y to the specified color
sets the properties
blocks until the image has been loaded
creates the image meet for the image in the background
this method explodes the given application
test application
get the length of this vector
adds a vector to this vector
returns the position of the object
get the current velocity
get the acceleration vector
gets the active radius
sets the position of the camera
sets the velocity
set the acceleration vector
sets the active radius
adds a vehicle to this vehicles list of neighbors
updates the velocity and acceleration
logs out from the server
go to register
start conversation event
returns the direct link to the image
selects the shelves
reset the current albums model and then select the albums
select images for the current user
cancel edition of a shelf if any
this method will transform the path of constant names to
returns a file object for the given absolute path
sets the page to the given url
called when a user uploads a avatar
returns true if help messages should be displayed
returns a string describing the search options
search for a given keyword
cancel editing user
checks if any of the code isearch option code s are selected
cancels editing an image
cancels editing an album
cancels the navigation and sets the correct type
gets the page number of the selected album
returns true if the user has any shelves
returns true if the user has albums
is the user profile editable
getter for property resolver
gets the value of the business object definition property
returns the associated attribute definition
gets the value of the business object data property
sets the date of the last update
returns the connection to the database
create the connection
end a transaction
returns the attribute data object for the specified attribute name
closes the current transaction and closes the connection
closes the connection to the database
rollback the current transaction
get the initial context
load properties file
update a customer
store the plant
update a rule
save a program
remove a plant
store screen definition
returns the next sequence id
update a profile
delete a profile
update a user
update screen fields
adds a program to the allowed programs list
returns the constraint key
gets the value from key attribute of the key value object
gets the attribute constraint that defines the default value of this attribute
gets the max length constraint
gets the min length constraint
gets the size constraint
adds the default screen buttons
p return the stack trace of the exception that occurred during execution
gets the screen field label constraint
print the stack trace for the given exception to a writer
gets the screen field date pattern constraint
gets the screen field transient constraint
load all modules in profile
creates a new profile
load the user menu list
use this method to determine if a user menu was created
convenience method to check if the user menu is clicked
creates a panel group
stop the scanner if running
create the components
checks if the user is logged in
builds the screen definition table
logout the user
do exit action
retrieves the user by login name
create a scheduler
store a customer
find program by id
store program in database
plant by id
stores the plant
plant data access
find a profile by profile id
p sets the field size for the specified component
return the preferences
returns the prime factor
sets the prime value for the signals position
returns the current weight of this connection
set the weight of this connection
gets the credit card
setter for property credit card
gets the zipcode
sets the zipcode
getter for property age
gets the value of status
sets the status
tests whether the temporary files are in the same directory as another
compare this enumerated type to another
get the next sequence id for this name
returns the next sequence id for the given name
sets the account dao
method inserts a new code owner code
method inserts a new code pet code
returns a collection of owners for the given last name
method updates an existing code pet code when the form is committed
method updates an existing code owner code when the form is committed
method inserts a new code visit code
method to load a specific owner object from the database
convenience method to get a single pet
returns a pet
custom handler for vets display
custom handler for owner display
method to retrieve the code visit code data for a code pet code
method to retrieve the list of all pets and visit
load all the owners and visit all the owner
method to update an code owner code s data
method to insert a new code pet code
method to update an code pet code s data
method to insert a new visit
adds an observation to the total memory time series
adds an observation to the free memory time series
returns a random number between 0 and 10 inclusive
get the poll interval
processes the action event generated by a scrolling action
this method sets the code lob handler code which is used to handle
p delete any customers who have been checked from the list
shutdown all the receivers
returns the number of input parameters of the given operation
creates a new request with the same name and the client impl
creates a multi request for testing
append the string to the input string
prepends a string to the input string
converts a string to a hex string
converts a hex to a string
the method compute the molecular formula of the set of nodes
format the counter value in a formatted string
returns the contributor
sorts the list using the specified sort key
sets the status to running
sets this job to completed
service the bank
used for insert update delete
used for insert update delete
check if a given type exist in the database
get the database host name
return the path to the database root
returns the path of the molfile
return the profile root directory in the mass bank
get the path to the gif file
get the root path of the gif small file
get the path to the gif large file
return the url for the p server
get the path to the approot banks bank file
returns true if this is a batch
returns true if the service is running on the advanced service
return the smtp server name
deletes the related setting from a specific site
return the name of the mail from the bank
sets the status of the server
get the from mail address for this bank
sets this propery as managed or unmanaged
invokes a method on the server
sets the status of the job
returns peak color for the given index
get peak color type
return true if the given path is a header
get the match peak number
get the value of select peak
returns the spectrum of the precursor
gets the query record attribute of the db form tag object
gets the value of the result record property
sets the result record
setter for property integ record
sets the record for the integ record
called when the mouse is moved while the text area
returns record info at the specified index
sorts records using the given sort key
invoked when an action occurs
get the peak number that is marked as selected
sets the search page
this method sets the labels for the spectrum
this method searches for a spectrum based on the query name
set peak color type
returns the color for the given index
is sort status
show record page
get the popup disp status
checks if the inst is the default one
mouse motion listener implementation
perform the action of the intensity range action
invoked when the mouse exits a component
change if the user clicks on the dialog
check if the cutoff threshold is set
cutoff the change
invoked when a mouse button has been pressed on a component
this method is called when the user modifies the pre field
invoked when an action occurs
initializes the item panel
invoked when an action occurs
creates a path that follows this one on the first
puts an object into the cache
returns the object associated with the given key
clears the cache
sets the admin
cd name gets the value of this field
sets the cd name
gubun gets the value of this field
sets the gubun
sets the object id
gets the value of the law property
sets the value of the
gets the content order
set the content order
set the department name
set grade method
gets the value of the mod date property
sets the mod date
sets the password
returns the date of the regular expression
sets the date
returns the id of the registration
this method set the id of the registration
returns def entity by classify
get the def entity by classify
convenience method to get the user object from the session
get the connection from the preferences
initializes the database
sets the preferences
get the connection provider prefs
get a connection from the pool
get a connection to the database
set connection pool url
retrieves a connection from the connection pool
get connection pool url
sets the connection provider class name
returns the connection provider class name
setter for property pool properties
returns the pool properties
returns the tag
render the tag
save the body content of this tag if any
sets the state to new
process the start of this tag
two filters are equal if their ids are equal
adds a value to the list of values
render the page
inits the state
executes when the tag is finished
setter for property embedded data
clear the fields of this event and reset the state of the
returns the number of entries in the paged feed as an integer
returns the data in the database
insert the methods description here
process the start of this tag
close the connection
sets the value of js calendar date format
gets the value of the js calendar date format property
sets the date to use for javascript calendar
returns the current value of the use javascript calendar field
sets the key to dest pos
returns the key to dest pos
sets the key to dest pos
returns the value of key to dest pos
returns the x value for one item in a series
returns the x value for one item in a series as a date
returns the high value for an item within a series
returns the low value for an item within a series
returns the open value for an item within a series
returns the close value for an item within a series
returns the volume
insert the methods description here
tests this instance for equality with an arbitrary object
process the start of this tag
setter for property format class
overriding method of the heart of the tag
process the start of this tag
sets the custom entry
gets the value of the custom entry property
clears the caption and clears all members
returns the formatting object for the field
sets the current custom entry
sets the list of embedded data objects
sets the dest table
return the table id for this form
returns the dest table
sets the current date format
sets the show always in footer
gets the value of show always in footer
adds a condition to the db filter
sets the label of the state
initializes the widget
insert the methods description here
insert the methods description here
sets the selected index
sets the size of the current state
process the do start event
returns a javascript representation of the validation mode of the current
returns true if this set of properties is hidden
sets the style class
sets the state type
sets the argument
writes out the special values for the component
sets the show always
returns the show always
this method is called just once before the data is evaluated
returns a javascript representation of the validation state of the current
sets the render body
returns the render body
finishes the task and performs any final actions
returns true if the set of properties is read only
returns the key val
returns the code for the field that is to be used for the
returns the end of the button
returns the value of the current field
javascript validation function
returns the name of the form field
prepares the style attributes for inclusion in the components html tag
executes when the tag is started
set whether this type is automatically incremented
returns the servlet context
returns the messages as a string
setter for property messages
sets the encoding for the generated java source code
initialize the state of the object
gets the value of display type
gets the value of foreign table
escapes html so that it can be displayed in html
sets the visible fields
gets the visible fields
clears the collection
returns an iterator over all the elements in this collection
returns the field value with the given name
renders the field old value in hidden field old
returns an iterator over the keys in this collection
store the value of the field in the node
remove the field value with the given name from the set
removes the given field value from this instance
returns a string representation of this object
renders the pattern to html
renders a text element
gets the id of this object
add a property to the property map
return a string representation of this event
get a db forms configuration
registers db forms in the database
renders a hidden element to the given string buffer
looks up a configuration object
writes out the special values for the component
adds a message to the message database
nullify the fields
sets the foreign
returns the name of the form field for copy event
gets the value of foreign
sets the value of the is key property
method returning the value of the null field value
prepares the event handlers for inclusion in the components html tag
prepares the style attributes for inclusion in the components html tag
set the column sortable status
setter for property con class
getter for property con class
if not found return null
set connection pool url
set the jndi connection provider class name
set the jndi context data source
get the jndi context data source
get the field with the given id
sets the driver class name
returns the vector of fields this table constists of overloaded from
get the value of the field at the specified index
get the field with the given name
returns value of the i th field as an object
returns true if this record has an auto increment value
replaces variables like
return the object at the given index as an object
sets the jndi information to use for jndi lookups
set the value of the field at row code row code as an object
sets the power2 attribute of the target object
returns true if this attribute has already been encoded
returns the id of the event with the specified event type
return the value of the field with the given name
add an event info object to the store
returns the value of the specified table cell as an object
returns the event info object for the given event type
add event info
returns true if the key has been set
sets the value of the field at code field name code as object
set the log writer for this data source
get a field description
returns whether or not this column is sortable
get the log writer
get the index of a given field name in the select list
get the key of the current value
indicates if this is the first element in the list
to string method for debugging purposes
set the login timeout
not implemented yet
returns true if this is the last object in the list
get the from clause of the query
setter for property default visible fields format
get the from clause of the select statement
sets the password
move the pointer to the first node in the list
getter of the default visible fields format
sets the username
moves the pointer to the last object in the list
get the key values
getter for involved tables
move pointer to next position
adds a property to be used for a pool
adds a field to the table and puts it into othere datastructure
increments pointer to previous value
adds a property to the list of properties
i think the get and set methods should all be self explanatory
returns the action for the image button
returns a string representation of this database connection
get the string representation of this object
get a connection from driver manager
returns the group value of the event
returns the event type value from the event type list
method get id
gets the event group
sets the string representation of the event
returns the event string
returns a connection from the connection factory
initialize the code web event code by parsing the source path
gets the event type from the strategy
gets the id attribute of the navigation event type strategy panel object
sets the strategy to be used for determining event types
returns the event group that the event belongs to
returns the part of the orderby clause represented by this
returns the event type specified as a string
returns the event type strategy
returns the id of this object
returns the child code event type strategy code in the list at the
adds a strategy to the list
removes the given code event type strategy code from the list
returns the data handler
remove the data source factory from the cache
sets up the connection factory
returns the number of elements in the snapshot
returns a key that uniquely identifies the table
get the field values for this field
close the data handler
this method is used to read the xml document from the given url
returns the event info object for the given id
process the data out of the database
get the key info object for the given action
sets the connection attribute of the jta db object
returns true if the given key is related to a key info event
sets the connection attribute of the db console dao object
returns true if the footer was reached
place this filter into service
create an object from the class specified in the attributes
returns the content type of the specified file as specified by the
returns an input stream to the uploaded file
returns the filesystem name of the specified file or null if the
convert the given dom document to a string
convert string into xml document
create a new dom document
creates a new xpath evaluator
reads a document from an input stream
return the field with the given id
get the value of a property
returns true if the document has unsaved changes
stores the properties to a disc file
returns a string representation of the object
creates a ned statement
set the project data to use
initialize all listeners and callbacks
refreshes the list of available stylesheets
refreshes the jsp files list
destroys the servlet
initialize the max upload size
this method is used to clean up the connection after an exception
process the request for the locale
sends an error message into the current response
used to close all the connections
initialize application resources
initialize the locale key for this servlet
initialize the xml configuration
returns the foreign keys
initializes the servlet
test the get time method for a long duration calculation
test is null method
initializes the database
sets up the test environment
initialize the page context
called when the basic tag is finished
test basic tag execution
initializes the database
initializes the database
sets up the db forms xml configuration
test the end of the tag
test that there is no granted privileges and privileg request can
test that a select bug can only be used
initializes the database
called when this web page is finished
sets up the test environment
test the tag max rows tag
test the method get first parameter starting with
test the get parameter method
test the get parameter names method
test the get parameters starting with method
this method returns the interceptors in the config
get key position from the input hash table
returns a hashtable keyed by field name of all the fields
returns a string with the position of the current row in the result set
returns a string representation of the current position of the result set
get the position of the record in the hash table
this method formats a double to a string
get the query for this alias
returns true if this form is a sub form
method to get the parent db form tag
adds a calc field object to this table and puts it into othere datastructure
set the table name
returns true if this bean wrapper element has interceptors
append to child element output
return true if the caption resource has been set
method to check if javascript fields array is set
convert to a string representation
return true if javascript validation is set
returns true if this set of parameters contains multipart set
return true if the form has redisplay fields on error set
initialize child field values
test of couple method of class com
test for the equals object required
test cloning required
test method for
confirm that cloning works
test method for
test method for
get cout will return the correct cout
test that cloning works
test clone required string
tests the init
tests the construction of new algorithms
test of launch method of class org
test for the est compatible required method
cleans up the registrations for this context
sets the filter config
convert the input string to a byte
convert the input string to a character using the given locale
returns the filter config
convert the input string to a double
convert the input string to a float
convert the input string to a long
convert the input string to a short
tries to convert the input string into a boolean
convert the input string to a locale
gets the directory that contains the class files
add the supplied handler to this handler set
replaces all occurrences of wildcards with the wildcard
strip trailing slashes from the given uri
sets the some property
decodes an image file
converts pixel space to integer
enable or disable keyboard input
checks if the piece passed as argument is a valid push
reverts the game state at the given index
checks if the piece is valid pushing it
highlights the origin of the specified point
highlights this square
sets the highlight panel and the highlight color
sets whether the mouse should be used or not
adds a new view to the list of views
sets the subplot for the specified profile
creates a sample dataset
conjugate the complex number
this is the entry point method
called when a alarm is received
writes the property file to disk
log debug info using the given owner object
fills the given number with the given number of digits
log information of an info message
log error to the logger with the given owner
prints a log message and the owner class and text to the console
prints a line of text to the console
gets the month
sets the template text
adds a new row to the table
inserts data into a row in the database
this method is used to retrieve the database data
returns the number of columns in the model
returns the name of the column at code column index code
gets the debug property boolean value
returns the data located in a given row
sets the changed db data vector property java
sets the db data vector property java
sets the connection object to use
sets the debug property boolean value
sets the error handler property java
returns the number of rows that match the condition
sets the new db data vector property java
returns a vector containing all the records that satisfy the condition
handles actions performed on the buttons
sets the dba property java
gets the action property java
returns the card name for the given page
gets the current card property int value
returns the card object of the current card
gets the done property boolean value
gets the message property jlabel
get the next card to be displayed
get the previous card
sets the action to perform
sets the cards property org
sets the current card property int value
sets the done property boolean value
sets the message
show the given page
called from the gui to update the state of this panel
get the mapped index
invoked when an action occurs
this method initializes length field
this method initializes name field
this method returns the text field that contains the scale
gets the type combo box property jcombo box
gets the type combo box property jcombo box
this method initializes this
this method does nothing
sets the field that is to be edited
sets the objects
constructor that needs no maximum number of pairs
gets the foreign key
gets the foreign table property java
return the master key field
gets the master table property java
sets the foreign key field field
sets the foreign table property java
sets the master key field property java
sets the master table property java
returns true if the l infinite distance between the given
starts the game setting parameters for the current difficulty
does a move
sets the position of the sprite
sets whether this image is flipped
sets whether square labels are drawn
sets the selected square in the list
tests to see if the given fen parse error occurs
convert a motion event to a square event
check that the given position is valid for the move
set this function running or not
sets the position of this object
sets the move to be animated
returns the nags as a string
returns a string representation of the object
returns the date in a string format yyyy mm dd
plays the sound
starts the conversion
returns the username for this session
sets the password
check if the username and password are valid
method get string
auto generated getter method
returns the absolute path of the given variable
open this connection
shutsdown the database gracefully this is especially important when the application
sets the message
returns the preferred size of the container
set bounds is overridden to keep us up to date with the components
gets the parent tabbed pane
paint this component with the current color space
paint a background with a white background
this method initializes j panel
sets the status bar to the frame sb
this method initializes close button
returns the status bar of the application
this method initializes j text pane
this method is called when the user selects a tab
adds the email tab to the root container
setter for property selected date
update a specific month
set the operation connector
get the connector
sets the alpha value of the current window
get alpha compatible graphics configuration
overridden to do nothing
set the window mask for this shape
set the window mask
sets whether heavyweight popups are allowed
is java2 d window alpha supported
returns whether the given window is transparent
stores the alpha value of a window
returns the alpha value of the given window
open this connection
shutsdown the database gracefully by closing the connection
creates a new event
updates an event
deletes the event passed as an argument from the event storage
called by the server when a user invites the user who
sets the end date
sets the short descr attribute of the product object
gets the value of short descr
adds an event to the database
updates an event in the database
delete an event from the database
returns the invited attendees for the user with the given id
execute a query
start generic documentation
create a new contact in the database
update a contact in the database
delete a contact from the database
sets the type of nonce
retrieve the type of the nonce
sets the end date
sets the password type
return the password type
get the security token
sets the work phone of the user
sets the state prov
sets the mobile phone number
gets the state province
sets the home phone number
sets the addl2
compares this contact with another for equality
returns the addl2
sets the value of addl1
returns the addl1
sets middle name
returns middle name of employee
set the first name
to set the last name
notifies this content provider that the given viewers input
disposes the resources
getter for property type error
opens the editor with the given selection
add a double click listener to the selected marker
the selection has changed
using the flat file format the text of the column
returns the image descriptor with the given key
add nature to a project that is wild life
reports an error by opening the eclipse project error dialog
create a folder helper helper folder
initialize the position and quantity of the environment
returns the last position in the path
push a new etape
returns the next step
sets the name of the parameter
create a default configuration for a component
setter for the value property
returns true if the configuration file exists
save the configuration to the given file
sets the value of the output name property
create an instance of
create an instance of
create an instance of
create an instance of
returns the file format version
sets the value of the file format version property
gets the report manager version
sets the value of the report manager version property
returns the report console
sets the target value
pauses the physics update animation
draw the world and fps
starts the game setting parameters for the current difficulty
returns the server address
set the type of request this is
set the proxy configuration
disables the connect items button
enables the connect items button
disable connect controls
enable the connect controls
adds a message to the message box and to the user
sets the channel controller
adds recepient to the input field
starts the message reading thread
sets the bounds of the component
set the bounds of this component
prints the content of this element
returns the string representation of this operation
returns the higher priority of this action if it is smaller than the
returns the string representation of this object
returns code true code if the supplied action is an equiv action
returns a hash code value for this object
returns the number of bits and removes them from the given bit set
emit the next line
returns the set of elements that contained are in the specified set
returns a string representation of the object
returns the index of the intervall that contains
o instanceof interval
returns true if the given point is contained by this range
returns true if the other intervall is contained in this
return true if o is equal to this
sets the end character
sets the start char
returns a string representation of this object
this method returns the number of a given state
get the number of states in this machine
returns an enumeration of the names of the states in this state
returns an enumeration of the inclusive states of this state machine
returns the max char code
sets the character code to be used when reading the
returns the number of classes
returns the code of the character class that contains the specified
dump the content of the current state to the console
returns a string representation of the object
returns the string representation of the char classes
generates a class for the single character code single char code
creates a class for each character of the given string
makes this automaton a class of the given set of characters
returns true if code states code contains at least one of the given
returns code true code iff the specified set of states contains
determines the action to be performed based on a set of states
calculates the epsilon closure for a specified set of states
returns the epsilon closure of a set of states
inserts a new macro and its definition
calculates the set of states that can be reached from a given set
mark a makro as used
returns true if the specified attribute is used false otherwise
returns an enumeration of the unused booleans in the database
returns the definition of a macro
expands all defined macros so that the definition of this macro can be
start the timer
stops the stopwatch
returns the difference between the two time values
return a string representation of this object
sets the gui
write a single character
write a portion of an array of characters
write a portion of a string
prints a blank line to the output
forwards the mark request to the underlying stream
read characters into an array
read characters into a portion of an array
tell whether this stream is ready to be read
resets the stream
calculates the number of bytes a unicode character
constructor for the saxparse exception
escapes all non standard characters in a string
create a new saxexception
read a service from the classpath
returns an enumeration of all services matching the name
returns the number of objects in the cache
converts the specified character array to a string
convert the string to a string
returns the xml version of the current value
getter for property xmlstandalone
getter for property xmlstandalone
returns the encoding of the xml document
creates a new code xmlstream reader code instance
add or override an internal entity
creates a new code attributes holder code instance
creates a new code attributes holder code instance
return an attributes namespace uri
returns the local name of the given index
get the qualified name of the i th attribute
returns the value of the attribute at the specified index
returns the type of the given index
gets the value at the specified index
look up an attributes index by namespace name
look up an attributes type by namespace name
look up an attributes value by namespace name
clears the buffer
removes the attribute at the given index
sets the uri of the given index
sets the local name for the given index
sets the qualified name for the field
sets the type of the given index
set the value of the field
throws an exception if the index is invalid
get the bundle that has the given bundle name
downloads all new bundles
load the current application spec from the file system
reformats the date string
returns the number of terms in this disjunction
stem the word placed into the stemmer buffer through calls to add
this method initializes j text field feu3
this method initializes j text field feu2
this method initializes j text field feu1
this method initializes j text field vitesse1
this method initializes j text field vitesse2
this method initializes j text field arrive voiture
this method initializes j text field feu4
this method initializes j text field pourcent pass
this method initializes j text field chance panne
extracts tags from a pdf file
extract bookmarks from a bookmarks file
converts a pdf tree to xml with an attribute
inspects a given object
inspects the given array
extract attributes from a pdf dictionary
copies all data from one stream to another
copy the contents of the reader to the writer
jbuilder controlled initialisation of the component
asks the user if he wants to save the current document
initializes the state of this instance
returns the icon for the specified parameter name
override this method to confirm the destroy operation on the
counts the number of the next line break and returns the offset
shows the main module
called when the caret position is updated
this method is called when the module is hidden
this method is called when the module gets activated
overriden to show the main tab
deactivates the module
implements the cservice event listener interface
invoked whenever the user selects a new control event
invoked when a module event occurs
finds the next occurrence of the search phrase
returns the command that will be executed when this button is pressed
checks if the user wants to save the file
returns the copyrights
starts the module
handle the action events
initializes the gui
deactivates the module
shows an about dialog
returns the name of the tab
shows the property dialog
get the editors group
returns the icon for the game
open a file and save the file to it
deactivates the tool bar
return the main application form
returns the version of this
sets the main form
sets the parameters for this request
returns the authors name
gets the parent of the current module
returns the copyrights of the application
loads the properties from the specified file
sets the home url of the robot
returns true if the address field is visible
paint hello world on screen
invoked when an action occurs
returns the view pane
saves the file
read tetris the tetris scores and score from database
shows or hides the address panel
write the properties to a database file
initializes the gui
this method is called when the module is activated
overrides game over method to write properties
loads the html page
initialize the game
save the text as a new file
returns the current url
implements action listener
shows property dialog
go back to the previous page in the history list
active action listener
adds an code module listener code to the button
go forward to the next page in the history list
adds a url to the history list
handles the button clicks by adding a url
returns the authors name
returns the copyrights
called when a hypertext link is updated
removes an code module listener code from the button
set the context for this component
writes the properties of this widget to a persistent store
get the type of the resource manager
set the context for this component
returns a string naming the type of this widget
forwards the given notification event to all
returns the name of the component
gets the name attribute of the resource manager panel object
returns the description of the output
return a short string that identifies this look and feel e
loads all modules
loads all modules in a separate thread
sets the value of the debug property
adds a listener
set the context for this component
get the type of the service
returns the name of the service
asserts that a condition is true
convenience method to get the main form
asserts that a condition is true
set the context for this component
unsets the context
prints debug messages if the debug level is high enough
removes a listener from the list thats notified each time a
return the associated ini file
flushes the stream
reads a string value from the ini file
returns the main form
writes the string value to the ini file
sets the context for this dialog
forwards the given notification event to all
reads an integer value from the ini file
adds a component to the tabbed pane
gets the type attribute of the ccontrols object
removes a tab
sets the locale of the receiver
writes integer value to the ini file
invoked when an action occurs
set title and cancel button text and return true if ok button
call this method to show the progress bar later
defines the path to the file that should be used for parsing
reads boolean value from the ini file
set the context for this dialog
hide the splash screen after 5 seconds
returns the type of this widget
writes boolean value to the ini file
get the resource bundle with the given name
adds a listener
invoked when an action occurs
reads a float value from the ini file
paints the component
get a string from the application resource bundle
invoked when an action occurs
writes float value to the ini file
returns the preferred size of the button
reads a date time string from the ini file
gets the font
get a string from the given resource bundle
gets the find text
method action performed
sets the font of the text field
gets the color
displays the about box
sets the color of the text
returns a url for the specified resource
sets the find text
shows the cancel button if the cancel button is pushed
implementation of the action listener interface
returns a url for the given file name in the global classpath
returns the match whole
update the font and font size properties depending on the text
returns an image icon or null if the path was invalid
sets the match whole
performs the appropriate action based on the action command
returns the image icon in the given file name
called whenever the value of the selection changes
forwards the given notification event to all
sets the match case
gets the replacement text
sets the replace text
sets the product name to display in the product label
returns the search down
invoked when a component loses the keyboard focus
adds a listener for service availability events
sets the search down
returns the version of the application
get the font property
sets the version
update the properties from the text fields
this sets the font for the text
returns the copyrights
removes an code service listener code from receiving service events
sets the copyrights
get the current position of the progress bar
returns info text
returns the replace all
called when the color combo box selection changes
invoked when an action occurs
sets the info text
overides the execute method
returns the icon of the label
gets the type attribute of the dialog object
gets a string resource from the control
invoked when an action occurs
overridden so we can exit when window is closed
shows the dialog
adds a panel to this wizard
gets a resource string by its name
returns the type of the controller
adds an action to a menu
removes a module from the tree
removes the panel with the given caption
adds the menu to the popup menu
returns true if the given component is contained in this container
shows the dialog
handles tree selection events
this method sets the font for the text field
shows the given module
returns the ccontrol associated with the specified type
get the color property
removes control module from outlook bar and removes it from the
returns the auto resize state of the table
sets the color of the whole color chooser
checks if the icon size is 24 bits
returns true if the module header is visible
returns the control for a particular class
adds a jmenu item to a menu
sets the visibility of the module header
sets the size of the icon
handle the action events
sets the value of the status field
gets a string resource for the control
returns the type of the ccontrols object
returns the currently active module
sets the title of this container
returns an iterator over all visible modules
creates a button
returns the desktop pane
determines if the specified module is visible
returns the desktop pane
finds the frame for the given module
shows the given module
return an iterator over all the controls in this page
create a new file toolbar by calling add file toolbar and
creates a frame for the given module
returns the index of the current panel
called by the awt when a module is selected
processes the event that one of our modules was added to the list
creates the print tool bar
gets the type attribute of the ccontrols object
unregisters the given module
sets the status
returns true if the control panel is in a control pane
sets the status to later
returns whether the control pane of the main window is visible
get the component that is displayed on the left side of the
removes the control for the specified type
invoked when an action occurs
gets a string resource for the control
invoked when an action occurs
updates the ui
returns the type of this widget
reads the properties of the service from a persistence file
executes the command
writes the properties of the control to a persistent store
removes the given component from this toolbar
returns the name of the command in case sensitive fashion
creating a tool bar element that will replace the search toolbar
returns a short name of command e
set the current percent value for the progress bar
creates the navigator tool bar
sets the percent of the progress bar
returns the service with the given type
gets the name attribute of the emerald node object
gets the name of the ruby plugin
create the help tool bar
gets a mnemonic from the resource bundle
gets the name attribute of the contrast panel object
getter for parent desktop
load the configuration file
returns the module that is the parent of this module
sets the module attribute of the view frame object
describe code get primary control highlight code method here
modification to the inherited behavior
describe code get control highlight code method here
describe code get focus color code method here
returns the service for the given type
describe code get text highlight color code method here
creates and returns a short file menu
returns the type of the tab sheet
describe code get highlighted text color code method here
invoked when an internal frame is activated
gets the plugins
describe code get menu selected background code method here
sets the plugins
invoked when an internal frame is de activated
describe code get menu selected foreground code method here
loads all the plugins in this control
loads the configuration from the given jdom element
describe code get accelerator foreground code method here
describe code get accelerator selected foreground code method here
loads all plugins from the file system
description of the method
invoked when an action occurs
sets the context for this document
load the toolbar configuration
gets the modules
returns the preferred size of the container argument using the
calculates the minimum size dimensions for the specified
loads all modules
lays out the container in the specified panel
get an iterator over all services
load all services from the given configuration
getter for property show date
updates the state of the date on or off
returns the point that is at the center of the circle
remove a service from the registry
sets the currently selected date
draws a point
draws a sec arrow
sets the enabled state of all controls
returns the current active module
the run method for the thread
draws the min arrow
method that is called when the action is performed
copies the text from the editor to the clipboard
the user has pressed a button
the run method for the thread
returns the animation speed
determines if the module is visible
draw the icon at the specified location
paint the image
sets the animation speed
spins the event into the event queue
perform a paste operation on the text in the editor
if the user clicks on the day button find the first day
shows the given module
sets the selected index
gets the panel index for the given panel name
sets the width of all buttons
returns the text pane
main processing method for the print thread object
hides the given module
clears the text
creates and returns a short help menu
gets the panel index for the given component
returns the number of panels
find the first day of the week
sets the height of all buttons in the panel
initializes the specified button
gets an iterator of all modules that have a parent module
gets a panel with the given index
called whenever the value of the selection changes
gets a panel with the given name
called when the table model changes
returns an iterator over all registered modules
adds the keylistener for all buttons
gets the title of the panel with the given index
performs a highlight
sets the table
returns the space between tabs
set the amount of space between tabs
puts the given module to the given parent module
returns the syntax highlighter
adds a panel to the panel hierarchy
returns the default editor kit to use for editors
removes the panel with the given index
create a string that will be written to the given
adds a digit to the list of numbers
invoked when a component loses the keyboard focus
moves the row to the specified index
set the table
called when the user selects a perspective from the perspective
adds a dot to the value shown
invoked when an action occurs
creates the block component
updates the ui and sets the border
loads the specified module
forwards the given notification event to all
adds a spin listener to the list of listeners for the spin
removes a spin listener
notifies all listeners that have registered interest for
show the value of the argument in the text field
stores the current l f and calls update look and feel below
performs up event for spin box
loads the module from the given class
adjusts the spinners value when the spin box is adjusted
returns the current value of this spinner
handles the key pressed event
get the number of rows in the table
returns the value for the cell at code column code and
overridden to fire item state changed when cell is changed
sets the value
invoked when editing is finished
enable or disable the jmonth chooser
invoked when editing is canceled
updates the ui of the component
returns the color of the selected item
set the selected color
performs an operation
called when an undoable edit happened
discards the last undoable edit
loads a plugin by its fully qualified name
returns the value of the text field
show the memory label
sets the text field value
invoked when a component loses the keyboard focus
read document from a reader and place it in the
invoked when an action occurs
writes the contents of the document to the given writer
handles the key pressed event
called when the spin box is pressed
returns the integer value of this text field
removes a plugin from the context
writes the properties of the menu
sets the title of this dialog
enable or disable the widget
returns the text field
sets the selected color
returns the desktop container
returns the spin button on this dialog
invoked when an action occurs
returns the name of the player at the given index
gets the score of the player at the given index
returns the minimum score of the last player
sets the fields
checks if the queue is full
adds a new score to the match
formats the score of the player at the given index
create a copy of the editor kit
returns the default document used by code parser code
sets the modified
the run method
returns an index of an unclosed comment text pos
is this a comment
updates the desktop
locate an unclosed comment at the specified position
is this token a comment
invoked when a component loses the keyboard focus
starts a new game
gets the white space attribute
gets the left table
sets the white space attribute
invoked when a mouse button is pressed on a component and then
returns the identifier attribute
starts a game over message and shows the player information
sets the left table
invoked when the mouse button has been moved on a component
returns the comment attribute for this element
gets the right table
sets the comment attribute for this element
draws the next figure
invoked when the mouse button has been clicked pressed
return the delimiters attribute set
sets the right table
set the delim attribute of this delimiter
invoked when a mouse button has been pressed on a component
gets the value of left field index
returns the keyword attribute
sets the keyword attribute
sets the index of the left field
if the user releases the mouse button it updates the cursor
returns the mutable attribute set representing the string
sets the string attribute
returns the number attribute
return the index of the right field
invoked when the mouse enters a component
sets the number attribute
adds a button to the given parent with the specified button name
sets the index of the right field
sets the buffer to use for the string passed to the scanner
handle the action events
invoked when the mouse exits a component
goes to the next token
getter of the left link type
returns the token
insert the value in the expression at the given position
called when the scrollbar adjustment changes
setter for property left link type
insert a function at a given position
returns whether this is a multiline comment
returns the number of quadrant on the point
getter for property right link type
performs escape in the result text
setter for property right link type
this method returns one of the static field constants defined in this
wraps a string
assign the value to the parameter
this method sets the left relation of the relation
called when the label is dragged
this method returns one of the static field constants defined in this
indicates whether the current element is inside the tag
sets the selected color
adds a new link to the table
sets the buffer attribute of the jedit pretty printer object
sets the value of the object
request focus when clicked
wraps a string
removes a link from the table
unwraps a string
this method sets the right relation of the node
updates all the links
gets the bounds of a control
wraps a string
updates new links in the table
removes quotes from the given string
convert the point to its parent if there is one
paints the component
gets anvariant value from the stack
returns the position of the item at the given index
clears the value
draws the character on the given graphics object at the given position
checks if the interval between two points is valid
get variant class
runs the current token
clears all the cells in this row
calculates function minimum
checks if the given point is over the line
draws the map
create a new variant
this method is used to extract the next token from the input
tells whether the specified point is inside this rectangle
calculates function in case of expression
set the type of the value
calculates function sum
returns an attribute of the language pack object
check if the shape is fit in the current cell
extract the next token from the input string
calculates function pi
remove a row from the table
get the value as a byte
removes all variables
calculates function rnd
checks the map against the current position
calculates function absolute value
adds a function calculator for a given function
sets the value of this attribute to a byte
returns the next line comment that is not a subblock
add a new figure to the diagram
adds a function calculator for the class
calculates function asin
removes a function calculator for a given function
calculates function atan
creates an output stream for the url
converts a string to a double
this method is used to determine the type of the inner comment
get the value as a short
calculates function ceil
add a section to the list
calculates function floor
clears the entire section list
removes all functions from the container
calculates function cos
delete the key item from a section
sets the value of this number to a new short
calculates function sin
removes all functions from this manager
removes a section from the ini file
checks if the item with the given identifier exists in the given section
process the inner quote of the current token
get the integer value as a int
calculates function exp
get element by index
returns true if the given section exists
set the expression
calculates function log
reads a line from the input stream
this method is used to determine the type of the inner token
calculates function round
check if element is in the list
sets the value of this number to an integer
sets the value of this node to a byte
reads all the sections from the given stream
sets the value of this number to a new code short code
sets the value of this number to a new double
sets the value of this number to a new double
sets the push value to a boolean and sets the type to 1
calculates function sqrt
sets the value of this number to a new double
sets the value of this number to a new double
sets the value of this node to a new string
sets this value to a char
this method reads a section from the file
set the value of this code titled pick list code
process whitespace and comments
clears all properties and properties
calculates function degree
creates a string of spaces for the given number of indentations
this method reads the sections from the file
writes this element and all its children to the given writer
get the value as a long
write out a collection of child elements
returns the token at the current position in the buffer
calculates function rad
create a new child element
writes the document to the given writer
get the root element for this document
removes leading and trailing whitespace from a string
search for a string in a string array
returns the token that follows the current token in the buffer
retrieves a string value from the specified section
sets the value of this number to a new long
shift the token to the top of the buffer
restarts the buffer
renames the file with the given name
returns true if there are more tokens
renames a file to the current url
get the boolean value
wraps a string
renames the file at the given url
analyze the expression
performs a syntax analyze
sets the push value to a boolean and sets the type to new boolean
unwraps a string
writes the key value pairs to the given output stream
analyze two tokens
flushes the output stream
get the float value as a float
get the token from the current token
wraps a string
scans a sequence of tokens
writes the specified string to the specified section
sets the value of this number to a new float value
returns the next token
performs a syntax analyze6 operation for the entire syntax tree
get the double value as a double
reads boolean value from the ini data
set the show comment attribute
swaps values on two stack elements
reads a float value from the ini data
get the string value
writes float value with specified key into the section in this ini file
reads a date time
sets the value of this node to a string
set whether to show eol in output
get the character value as a char
returns whether or not to show the string in the console
test scanning expression scanner
sets up the fixture for example open a network connection
sets the value of this number to a new char
delete the in directory
sets whether to show strings or not
prints the composite message and the embedded stack trace to
prints the stack trace of this exception and the given print stream
prints the composite message and the embedded stack trace to the
get the value of show keyword
returns the value of this property
returns the integer value of the property
returns the value of this property as a double
returns the value of this property as a boolean
returns the execution type
compares this module property to the specified object
gets the metadata container
log a message
returns the module container
get the unique id of the file
gets the src exec type
set the value of the show keyword property
return the destination type
checks if the given node is a parent of this node
get a logger by name
returns the entry point
sets the array of values
returns the module definition of this module
returns the host application
returns the node that is related to this node
returns the module
returns true if the context of the current node is a
returns the module definition of the module
returns a collection of all interface definitions
returns the module of the node
returns the module definitions of this module
find an interface definition by name
checks if the node has a parent
wraps the node with the proxy
find module def by name
returns all the children of this node
closes the application by closing the main window
return the execution type
returns the node wrapped by the given node
this method starts the read operation
returns the metadata container
returns the module container
wrap the given collection of module nodes
this method informs the synchronizer that the read operation is finished
close the query
returns the root node of the tree
returns the root node of the module
this method closes the application
start a read operation
sets the value of the field to an object array
begin writing to the cock
end a read operation
checks if is show type
returns the module node with the given id
starts a write operation
end the write activity
end a write operation
returns the module node with the given absolute id
returns an unmodifiable collection of all interface definitions
returns the logger for the given name
returns an unmodifiable collection of all module definitions in this package
returns the logger for the class
returns the configuration loader used by this service
returns the collection of adapters in this group
return the application properties
removes a module node from the container
loads properties from file
converts a string to a double
unsets the context query
returns the logger for the class
does this class implements an interface
sets the show type attribute of the data object descriptor object
release the interface
returns the logger for the class
unsets the context query
unsets the context
is this a interface implements a given interface
is this a interface implements a particular interface
returns a collection of the location of the current course
starts the battle
add a module listener to the container
returns a collection of items that explore damages
returns all the enermies for the given fleet
remove a module listener
shoot sea point
frees up any auto references to each node
returns true if this card is destroyed
returns true if all the elements in the world are completed
returns the show space
two points are equal if and only if their x and y components
is this a interface implemented by this class
returns the base module def
log a message
returns the set of properties defined in this definition
returns the interfaces defined by this definition
log an informational message
returns a collection of executables associated with this definition
log a warning
returns the execution type
returns a collection of territes
getter for property host application
returns the node that is related to this node
checks if the collection contains the object only
remove all context query
this method is called by the read thread
add a module listener to the list
clear the context
explore damages all ships in this container
release the read lock
return true if the context contains an interface with the given name
this method is used to block the write thread until a write operation
release the write lock
returns true if there is a next element
sets the show space attribute of the environment object
returns the next element in the iteration
get the current java executable that is associated with this node
remove a module listener
returns the module nodes
receive notification of the beginning of a document
receive notification of the beginning of a document
receive notification of the end of a document
repairs the ship shoots and repairs the game
returns true if this fleet is destroyed
get the list of libraries that were loaded during the last load
returns the buffer
resolves an external entity
search for all ships in the current context
recursively assigns the absolute id of a node
get a map of all ships
releases the interface resources
replaces all spaces in the given string with whitespace
return the next node from the current node or null if there
resolves the type of the execution of this type
set the buffer to be used
test method for
convert a property type string to a byte
converts a collection of points to a string
convert a string value to a boolean value
test of location url method of class com
convert the given string into an integer
checks for duplicated module def error
test that interface isnot is supported
checks for duplicated interface def error
convert the given value into a double
this test checks that the behavior of the synchronizer is working
sets up the fixture for example open a network connection
returns the current position in the buffer
tears down the fixture for example close a network connection
sets up the test environment
test the open stream method
receive notification of the end of a document
gets the type of this entry
returns the scheme used by this database
test of load library method of class com
clears the scheme
reads the state of the sensor
write the current document to the database
generates dom for this element
test the benchmark for each application
invoked when an action occurs
return the crules associated with this rule set
obtain the phoneme convertor currently saved in the database
called when text is parsed
translates a word
gets the primary stress
returns true if the character is a consonant character
returns true if the character is a letter
return the current dictionary
set primary stress
returns the current line number
process a word and return the first translation that matches it
parses a symbol
getter for property secondary stress
this method is called in response to a warning
set the secondary stress
loads the configuration from the given stream
open a resource file
open a temporary file
copies a file from a given location to the specified location
gets the normal pitch
returns the current token
looks up a word
returns the dictionary for this document
returns the maximum pitch
returns true if the character is a vowel
returns true if the character is a consonant
returns the type of token being parsed
tests if a character is a valid letter
sets the maximum pitch
adds a word to the dictionary
process a word and return the first translation that matches the current word
returns the minimum pitch
sets the minimum pitch
sets the pitch ratio
get the next line number in the file
gets the duration ratio
sets the duration ratio
returns the frequency of the voice in the given
sets the frequency of the voice in the given
returns true if the symbol is prosody
sets prosody flag
speaks the given text using the spell
stops the mbrola thread
get the next token type
waits for the mbrola program to stop
translates the words of the given text to the first letter in the
plays the specified text over the spelling system
find the position of a character in a string
find a string in a string array
compares thisvariant with the given object
returns the number of elements in the array
sets the size of the variant
get element by index
returns true if the value contains the element
check the availability of the peer registration
print out the peers in the console
adds a file to the list of files
this method initializes j tabbed pane
remove a file from the list of files
this method initializes j text area1
this method initializes j tabbed pane
check the tracker registration periodically
compare the time of the service with the given time
sets the tracker set
updates the tracker with new data
get the tracker with the given ip address
this method prints the current state of the tracker registration
this method initializes j frame
this method initializes j content pane
this method initializes j text field
this method initializes j list
this method initializes j list1
this method initializes j button1
sorts the population by their sign
sorts the population according to a sign
returns true if value is inside the limits
returns true if the value is inside the limits of the gene
returns true if this chromosome is valid to the given one
evaluates the population of a given type
returns true if the chromossomes configuration is valid
gets the source
sets the source part of the message
f0 labeled statement
f0 public protected private static abstract final native synchronized
f0 java file declaration
f0 class declaration
f0 labeled statement
f0 public protected private static abstract final native synchronized
f0 empty declaration
f0 java file declaration
f0 labeled statement
f0 class declaration
f0 static abstract final public protected private
f0 static abstract final public protected private
f0 labeled statement
f0 public protected private static abstract final native synchronized
f0 java file declaration
f0 java file declaration
f0 dollaro variabile
f0 class declaration
f0 unary tail
f0 class declaration
f0 static abstract final public protected private
f0 string literal
f0 empty declaration
f0 dollaro variabile
f0 unary tail
f0 string literal
f0 factor factor
f0 factor factor
f0 factor declaration
f0 factor item
f0 factor expression
f0 integer literal
f0 factor expression
f0 integer literal
f0 dollaro variabile
f0 dollaro variabile
f0 unary tail
f0 unary tail
f0 string literal
f0 string literal
f0 local unit
f0 local unit
f0 factor declaration
f0 factor item
f0 factor declaration
f0 factor item
f0 factor factor
f0 integer literal
f0 factor factor
f0 integer literal
f0 local unit
f0 local unit
generates an auratus output node
generates an auratus edge
generates a layer factory interface
returns the input layer
returns the output layer from the last added layer
adds a layer to the list at the specified index
adds an auratus node to the item list
removes an auratus node from the list
adds a layer to the list of layers
returns the auratus node at the specified position
returns the type of the layer
sets the type of the layer
removes a layer from the list of layers
returns the number of layers in this container
returns the number of input sets
gets a layer
creates a dom4j element representing this object
returns the number of output sets
set the training collection to use
adds a new input value to this neuron
removes the value at the specified index
set the validation data collection for the model
returns the input value at the specified index
returns the size of the data collection
adds a data set to the collection
get the data collection interface for testing
adds an output value to this neuron
removes the data set at the specified index
returns the data set at the specified index
set the test collection data collection for this test
remove the output value at the specified index
returns the output value at the specified index
resets the current status of the node
prepare this factory for removal from the given xml element
randomize the weights of the network
register a listener to receive events from this instance
the main loop of the thread
returns the starting point of the route
sets the starting point of the arc
returns the ending point of the arc
adds a start edge to the list of start connections
add a layer to the layer list
sets the ending point for this link
removes the start edge
adds a layer to the layer list at the specified index
returns the weight of the current weight component
adds an end edge to the list of end edges
this method is used to construct a dom object
sets the weight of the current layer
this method returns the start edge at the specified index
returns the layer that contains this object
sets the weight of the edge to val
gets the end edge attribute of the node object
returns the layer whose index is given
returns the number of start edges
returns the number of layers in this scene
returns the number of end edges
returns the layer that generated the event
randomizes the network
remove a layer from the layer list
resets the network to the initial state
set the layer to be used as input layer
set the output layer of the layer
obtain the properties for the given key
adds an attribute listener to all the attributes in this container
set the visual component class
set the logical component class for this multi agent system
adds an attribute to the attribute panel
returns the attribute panel
adds an image to the image map
add an input pin
add an output pin with the given name and edge position
returns the key name
creates the xml from the attribute list
gets the index of the untitled
adds a connection point to this connection
removes a connection point
returns true if the given wire can be connected
removes the connection point for the given pin
removes the given component from all of its child components
this marks all the invalid areas for the given component
returns the number of different connections that are in this
checks if the component code sc code has the specified parent
set whether this genetic algorithm is active
draws the connection point
sets the is crossover flag to the specified number of non terminus
clears all the information in the grid
performs a cut on the clipboard
copies a collection of components to the clipboard
removes the last clipboard item
adds a selection listener
adds a paste listener to the list of listeners
enables the paste listeners if possible
gets the circuit that contains this part
set the parent of this component
sets the selection state
resets the state to the default values
this method returns the logical component that is associated with the
sets the is dirty
translates the selected elements by the given values
undo the most recent text change
undo effect of command
returns a copy of this command
redo the most recent text change
this method sets the end point of the wire
clears the history
getter for unfixed origin
adds an undo empty listener to this editor
adds an undo listener to this editor
returns the centre of the map
updates the browsers
set the start point of the line
moves the sprite to a new origin
removes all components which have a fixed size and are
move the start point
brings the given component to the front
reset all active components to their default state
sets the invalid area for this cell to invalid
select all components in the editor
returns the key name
clears the circuit and removes all the components from the drawing
adds a list of components to the drawing area
sets the local pins for this block
adds a new component to the drawing
removes a component from the circuit
rotates the point p to the center of the grid
sets the selection box
rotates a rectangle
invoked when the mouse button has been moved on a component
this method is used to handle command entered by the user
sets the values of the leg
set the properties for this component
returns the logger window
returns the logical circuit that this editor is using
returns a copy of this selectable component
returns true if the entity is a subcircuit
sets the circuit panel parent
returns the location of this object relative to the global
update the subpanel of code subpanel code
returns true if this queue is empty
sets the connection point
returns the output pin this is connected to
this method is called by the framework to set the output source
getter for property owner
registers a value listener that will be notified of value changes
sets the value of the logic state
sets the simulator speed
adds a new sim item to the simulation
removes the sim item from the simulation
get the simulator speed
sets the current state of the simulator
returns this obfuscators long name
checks and answers whether this circuit is the active circuit
sets the properties for this class
creates and returns a new output pin
returns the first pin with a given name
refreshes the waypoints
sets the output pins of the logic to the ones specified
starts the simulation
pauses the simulation
stops the simulation
getter method for long name
sets the properties of this widget
getter method for long name
sets the value of the simulator
this method initializes this
sets the properties of this widget
returns this obfuscators long name
returns this obfuscators long name
returns this obfuscators long name
returns this obfuscators long name
gets the long name of this module
sets the filename attribute of the circuit gui object
returns this obfuscators long name
returns this obfuscators long name
returns this obfuscators long name
returns this latch name
saves the current components in the editor
get the long name of this operator
getter for property long name
creates an image from the given file
refreshes all windows
enables disables all buttons according to the given enablement
clear the component selection
adds a netlist to the component
checks if the given key is a valid logical component
resets the label of the checkbox to the default value
sets the rotation of the options panel component
sets the code selectable component code to the one given
this is the entry point method
get the relative scratch directory from the path
description of the method
description of the method
renders html code to show cell content
renders a column header
returns the page size
gets the external javadoc expression for this tag
set a title
this method returns a dialog box name for the given descriptor
returns true if the given distribution is fullfill
this method is used to update the statement inside the database
primitive types are primitives
load the database from disk
returns the method body that this method throws
get the default return value for this method
returns class id of super class symbol
return an array list of class objects for the id
return an array list of class symbols in an id
returns a list of class names as string of extension symbols
gets the method id value for this task data
gets the overrides class id value for this task data
id of the method that specified the method
get the id of the original class specified by class
give the method the member variables are initialized
constructs the javadoc for a constructor
compute what this codon is
add a method exception to the method list
returns the parameter for the type token
gets the method id of the method overrides
returns the class id of the method that overrides this class
returns the html for the method of this method
returns the id of the specified method
gets the id of the specified method
returns this class symbol
return the base component of this class
adds the java class name to the list of parent classes if
populate the navigation tree items
returns the file for the given database name
returns a ivector containing the property values of the obs
returns the number of properties in this collection
returns the number of observations
returns a string representation of this observation descriptions
returns a string representation of this observation descriptions
returns all times following this time series populate time with the
returns the number of property labels
get the time as a string
removes the file header comment lines and stores it in a file header
writes the file header to the given writer
write a time value
sets the reference time
setter for property seconds per time unit
returns the line of the first parameter found in the given list
call this method to open a file
resets the value of the wdm file number by the reference
closes a file by allocating the file space
get the number of time steps between start date and end date
tests the reading and writing of a series of times
tree selection listener displays the selected node
set the root file of the tree
returns the x y dx of the vector
gets the structure of the model instance
return a thread to wait for the given thread id to be received
wait until a free thread is available
returns a new unused id for the thread
cleans the admin thread list
returns a vector containing the x y z coordinates
returns the ivector dx of the x values for the given time
initialize this class
returns the string representation of the current expression
compares this time with another time
exit the application
updates the graph that displays the correlation function information
update the table of variation function parameters
this method updates the graph of the correlation parameter and the graph panel
this function updates the variation function in the parameter panel
adds a line to the panel
selects the application type
selects the uncertainty analysis method according to the selected uncertainty
select calibration method action performed
selects the data assimilation method for the data action
action for loading an uncertainty specification file
new project configuration action performed
close configuration menu
prepares this project to be closed
add a pdf row to the table
add a variation function row to the table
delete a variation function row from the parameter table
adds a row to the results table
shows a dialog with the given title and message
this method updates the textfields
updates the tables that are used to store the results
updates the gui
sets the model
assume model is uimodel
update the plot definition
updates the pdf definition for this parameter and graph panel
returns the number of rows in the model
returns the number of columns in the model
notifies all listeners that the value of the cell at
forwards the given notification event to all
notifies all listeners that all cell values in the tables
gets the value at attribute of the pdf table model object
this method clones the variation function context
returns a string representation of the object
getter for property variation function object
clear the plot of data points in the specified dataset
returns true if the cell at row index and column index is editable
check if a certain check box is selected
sets the column names
returns the name of the column at column index
returns the uncertainties object
returns the number of rows in the model
gets the cell editable attribute of the my table model object
returns the number of rows in the model
returns the current row
returns the column that is currently being processed by the
returns true if the cell at row index and column index is editable
returns the number of rows in the model
create a default pdf pdf object for the variation function
creates a default variation functions object with the given uncertain values
creates and returns a deep copy of this context
returns the string representation of the pdf object
gets the pdf object
clone the auto correlation function context
returns the matrix tt sum of the points in the graph
returns a string representation of the object
getter for property auto correlation function object
returns the value contained in the editor
shows a dialog with the given title and message
deletes the selected row
compares this time period to another one
loads the state from a given file
load the state of the file
initialize the settings using the specified file name and arguments
reads a file for input to standard the time series accessed by
clears the set of all data
adds a location to the list of selected locations
adds a source to the list of selected sources
adds a quantity to the selected quantities
sets the start time
sets the start time
sets the stop time
sets the tstop time
return the start time for this timer
returns the current stop time
checks if is selected location
returns true if the given source is selected
returns true if the quantity is in the selected set
checks whether the specified time series intersects with this time series
writes the series to a file
writes time series data to standard output
creates a string representation of the time series
reads a time series from a file
reads a time series from a string
set meta data from another time series object
sets the location of the project
adds a set of time series objects to the chart
removes a set of time series objects from the timseries collection
returns a time series set that represents all selected time points on
returns a time series set for a source
returns a time series set that represents the items of a given quantity
returns the on location set as a time series set
returns a set of values for a given property
returns a series of time series containing only the intervals the
moves a location from one location to another
quantity location location id
sets the time series set for the project
returns the time series set for the project
gets the value of quantity
builds the time series
gets the id of the unit
sets the position of the node
set the data
sets the time series to the specified values
return the extra values with the given key
gets the value of a property
gets the value of the property as a
sets a property to be used when creating a new connection
checks to see if the property is in the list of properties
checks if the given property is a default property
returns true if there is any extra values for the given key
this method finds a given exchange item in the list of exchange items
gets the time array
returns the index of the time
sets the time index
returns the latitude array
returns the longitude coordinate array
gets the value of the latitude quantity info property
gets the value of the longitude quantity info property
sets time info
returns this l as a new matrix
returns the matrix selection as a matrix object
returns a string representation of this vector
add a child to the variable
create a new realization in the vector
evaluates the probability of the given ivector
gets a vector of the expectations in the order
gets the sqrt covariance
check if the order has correlated elements i
gets the standard deviations attribute of the array tree object
gets a string representation of the vector
adds a new child to the tree vector
returns a string representation of the time stamp
compares this object with the specified object for order
create a new selection
sets extra values for a time series
create an instance of selection
returns the number of values in this set
returns the number of values in this collection
get the value at the specified indices as a double
searches time series for on the time
set the values of the parameter
returns the values of the individual
multiply all values with the given multiplication factors
gets the realizations of the mean
called by the code event manager code when the dimensions of a
returns the value for a given time series
returns true if the container allows growing first dimension of the
return a copy of the expectations vector
create a vector of realization
returns a vector object that stores the mean and variance of the
get a vector of all expectations in the set
returns the square root covariance of this sample
evaluate marginal pdfs at the param values
indicates if this event has correlated elements
gets interpolated value at a given time
returns a copy of the standard deviations vector
sets the slice and dimension
returns a string representation of this instance
gets the square covariance of the vector
gets the standard deviations attribute of the mean object
this method returns the value at the given indices
returns the value associated with the given key in the extra values
free the resources associated with this object
return the index of the two elements of this array
returns the number of observations
given indices are 1 based
delegate method that returns the observation descriptions returned by the
returns a string representation of the object
returns interpolated extra values with given key
helper method to write a string to the output buffer
returns a string representation of this multi key
read a tree vector from a file
returns a vector of values for a given key
returns the number of keys in this map
returns the number of observations in the data set
write the uncertainties to the stream
sets the storage type for the column
returns the storage type for the columns data
sets the name of the kalman gain storage xml file to store the
adds a file to the model
save the persistent state file zipped
loads the state file and associates it with the state file
restore the unzip state
get the current time step
returns the number of values in this array
returns the value at the specified index
negate this mask
return this mask with the specified mask
returns this mask with the specified mask
returns whether the processing of the
tests this time series for equality with another time series
is the given class an interface
find the full name of the class with the given short name
returns the panel attribute of the paper and reviewer object
plots the vector x y and label
adds a plot to the vector
reads the credentials from the file
writes the username and password to the file
reads all the usernames and passwords from the terminal
returns the xml representation of the wrapped document
returns the given string as a string
gets the content at the given path as a string
gets the content at the given path as an int
returns a vector which is the diagonal of this matrix
return the value of the file at the given path as a boolean
returns the position of the agent
check if the result is out of bounds
gets the content at the given path as a double
returns the number of rows in the matrix
writes the xml representation of the current document into a file
set the value for the parameter with the given id
evaluate this primitive and all of its children
returns the number of columns in the matrix
returns the first child of this node
this method returns a string representation of the content
returns the standard deviation of the values added so far to this series
returns true if the two files are identical
checks whether the given file is contained in this directory
returns the module root directory
frees any resources associated with this object
returns the project root directory
square root of the content
returns the java test directory
gets the test data directory
returns the matrix selection as a matrix object
returns the value at the specified row and column
create a new instance of this correlation
creates a new periodic correlation instance
replaces the key in the file with the given string
evaluate function for the given distance
evaluate function for the given distance
gets the graph xlower limit
returns a new instance of this correlation
gets the maximum x coordinate of the graph
evaluate function based on the given degree of the correlation model
returns the name of this distribution
gets the maximum x coordinate limit
sets the value at the specified row and column
create a new instance of a spherical correlation
evaluate function based on the given degree of the distribution
returns a new instance of this correlation
evaluate function based on the given degree of the distribution
evaluate function is not implemented in extended class
get the correlation coefficient for the given normalized distance
returns a new instance of gaussian correlation
alpha is set to alpha for all the axies
evaluate function for the given distance
returns a new instance of this class with the same values as this
sets the parameter value
evaluate function based on the degree of the sill
returns the value of the sill parameter
sets the parameter with the given value
gets the graph xlower limit
returns the parameter range
returns a new instance of pentaspherical correlation implementation
gets the maximum value of x
evaluate function based on the given degree of the correlation model
gets the range of the function
this method calculates the realization of this object from the specified
sets the value of a parameter of the calculation
this method calculates the realization value from the given seed
returns the minimum value of the lower limit parameter
returns the percentage of the stream
returns the minimum value of the upper limit parameter
returns the cumulative distribution function
inverse of the cumulative distribution function cdf of the given probability
returns the probability that a point is a point
compute the cumulative distribution function
sets the parameter value
returns the parameter location
get a pdfpoint
returns the parameter scale
not implemented yet
sets the parameter with the given type to the given value
returns the cumulative distribution function
returns the point in the x direction
computes the inverse cdf point of the distribution given the
returns the shape value of the shape parameter
compute the cumulative distribution function
returns the pdf point for a given value x
sets the parameter value
returns the mean value of the distribution
returns the parameter standard deviation
multiplies two matrices and returns the result
compute the cumulative distribution function
returns the point on the object that is given by the point x
scales this matrix by factor
inverse of the cumulative distribution function cdfpoint
get the cumulative distribution function
compute the inverse of the cumulative distribution function cdfpoint
returns a random double uniformly distributed between 0 and 1 inclusive
the norm of this matrix
returns the alpha value of the shape parameter
get a cumulative distribution function
get a pdfpoint
compute the inverse of the cumulative distribution function
compute the cdf point of the binary i
get a pdfpoint from a point
inverse of the cumulative distribution function cdf of the
sets the parameter with the given value
sets the value of a parameter
returns the parameter beta
returns the parameter rate
returns the minimum value of the shape parameter
returns a random value from the normal distribution with uniform distribution
compute the cumulative distribution function
compute the cumulative distribution function
get a pdfpoint from a point
get a pdf point from a single x value
computes the determinant of the matrix and returns it
inverse of the cumulative distribution function
compute the inverse of the cumulative distribution function
inverse of the cumulative distribution function cdfpoint
this method computes the cumulative distribution function
get a pdfpoint
compute the inverse of the cumulative distribution function
sets the value of the parameter with the given type
sets the value of the parameter with the given name
returns the parameter standard deviation
returns the minimum x value of the bounding box
returns the parameter value for mode
adds a pdf to the document
returns the maximum x value of the shape parameter
removes the pdf object at the specified index
clone this object
returns the number of pdfs in this file
returns the number of active pdf items in this category
returns the number of active normal pdfs in this group
adds a variation function to the list of variation functions
the string representation of this uncertainty
removes the variation function at the specified position
returns the number of variation functions in this container
adds an auto correlation function to the list of correlation functions
remove an auto correlation function at a given index
remove an auto correlation function
returns the number of correlation functions in this correlation set
the type of this uncertainty
sets the type of uncertainty represented by this rule
returns the number of uncertainty in this parameter
gets the specified uncertainty
returns the pdf for the given index
returns the pdf with the given id
returns the active pdf given its index
returns the active normal pdf
returns the variation function at the given index
get the auto correlation function at the specified index
get the auto correlation function with the given id if any
returns the costs of this cost record
returns the cost of the smallest possible solution
returns the optimal costs of the problem
determine if there is another simplex optimizer to be used
initializes the internal data structures according to the given values
set the optimizer to the next estimate of the best model
gets the optimal value of the parameters
gets the optimal cost
returns the values of the current choice point frame
initialize the class
returns the costs for the current cost of the node
sets the current values
initializes the internal data structures according to the given values
optimizes the memory usage
computes the amotry vector of a simplex with a given factor
returns a vector containing the sum of a x y and z components
cleans up after parsing is complete
returns the best state
this is the run method for the thread
this is an unsupported operation
always throws an exception because en sskf has not been removed
throws an unsupported operation exception
returns true if there is a next step
check if there is a next optimizer
set the optimizer to the next estimate of the learning algorithm
gets the optimal value of the parameter
gets the optimal cost
determine if there is at least one more pair available
display the next screen
sets the current values
get the optimal cost of this path
returns the optimal costs of the problem
checks if there is a optimizer available
displays the optimizer for the next generation
gets the parameter uncertainty
returns the last predictions
checks if there is another repeat
get the observation uncertainty of the observation function
sets whether this term is a background term
returns whether or not the background term will be added to the
get the optimal predictions
checks if there is a optimizer available
sets the iterator to the next element in the set
determine if there is another i
method called by the game when the user clicks the next button
initialize the ivector
initialize the ivector p init
checks if there are any more items in the list
initialize the ivector
set the next element in the list
initialize the gradient object
initializes the ivector p init to p init
return the optimal value of the p values
returns the optimal cost of the current solution
get the gradient of the current gradient
get the current search direction
gets the parameter uncertainty
returns the last predictions
get the observation uncertainty vector
sets the term for background
this method performs the addition of a background term
returns the optimal predictions for all the proteins in the population
checks if there is a next pair available
sets the model to the next estimate
returns true if the iteration has more elements
initializes the ivector
set the next estimate to the next value
initializes the hodgepodge engine
get the matrix high quality
returns the wind interpolation table file
the perturbed values validation file is an empty file
returns the name of the thread
start the server
stop the server
run method for the server thread
the run method for this thread
initializes the pool
called when the mp3 source server starts
this method is used to stop the executor by interrupting all running
initializes the object
return the value of the parameter with the given name
set the session timeout for this node to a given value
returns the frame that contains this panel
returns the current type of the luv
test of subscribe channel method of class org
test of subscribe source method of class org
test of signal method of class org
test of receive signal method of class org
test method for
test for method set identifying name
test the create method
tries to create a listener with null ichannel channel
test method for
test method for
create a listener
test that the channel factory can be retrieved
tests create listener thread3
tests the add method
test that the channel controller
creates a channel
test of do work method of class org
test of configure method of class org
test of handle method of class org
test of get response header method of class org
test of set method of class org
test of get instance method of class org
test of create method of class org
test of create server thread method of class org
test of configure product method of class org
test of get request header method of class org
test of get all server threads method of class org
test of add listener method of class org
test of get subscribed listeners method of class org
test for void set channel
test method for
test for method set identifying name
build a string
test of build method of class org
test method for
test method for
test method for
test unlocking a lock
test setting the time
tests the get time method without stopping the thread
tests the get time method
tests the get time in sec method
test to string
test starting data file
test setting the playlist
test stop time
test method for
test of set stream speed method of class org
tests the get instance method
tests start of time
tests put and get
test iterator over a null playlist
test get next
test has next
tests shuffle method
creates a new code listener exception code without detail message
instanciates a new abstract listener thread
constructor taking a single string argument
configures this thread
create a new channel object
create a listener object for the given listener thread
called after the configuration is set
instanciates a new tcp listener thread
creates a new product
configures the listener thread factory
creates a listener thread
returns a string representation of the service identifier
configures the thread
sets the socket that is used to send data to the client
get the output socket
configures this thread
instanciated channel thread factory
instanciates a new thread
creates a new channel object and adds it to the wrapped channel object
configure the source by configuring the super class and setting the context
this is the work method
returns the source as a isource
sets the udp port
configure this factory
sends a message to the server
returns a copy of the listener with the given name
configures the thread
creates a new instance of channel exception
constructor taking a single string argument
private constructor to avoid instantiating this class
creates a new thread for sending the channel
returns the list of listeners that are subscribed to the specified source
creates a thread that will process the channel
read the configuration file and set the response header
get the statistics as a string
waits for all the workers to finish
creates a channel object for the specified channel
create a channel object for the thread
returns the source
returns an unmodifiable map of all the listeners
get channel object from configuration file
constructor to create a server controller
return an unmodifiable map of all channels
check if a listener exists
check if a channel exists
check if this channel exists in the list
creates the server socket if it does not exist already
instanciates a new listener
get the channel object by name
creates new jcast net exception
check if a listener exists
constructor taking a single string argument
send the response header
get a listener from the list
create a new thread and configure it
create a new source thread
removes a listener from this controller
configures this factory
configure this product
instanciates a new source thread
sets the play mode
configures the thread
returns the play mode
sets the play mode
adds a listener to the controller
returns true if the given object equals this instance
creates a new code source exception code without detail message
constructor taking a single string argument
configure this component
read the configuration file and set the
synchronizes all the listeners
instantiates a new jcast configuration builder
builds the configuration from the given
builds a configuration object from an xml file
builds a configuration object from the given input source
for the given file name builds the configuration object
creates a mp3 playlist in the users home directory
parses the given file and returns the corresponding configuration
creates a new instance of simple time
creates an mp3 playlist using the specified file playlist
creates a simple time with the specified start boolean
creates a new mp3 playlist with the supplied buffered reader
reset the time in the panel
returns the time of the timer
used to set the current playlist
get the current time
get time in sec
get the playlist
return the time as a string in iso8601 format
start the timer
get an iterator over the playlist
returns the next item in the playlist
returns true if the download has started
returns code true code if the iteration has more elements
shuffles the playlist
creates a new exception
constructor which only takes a message
creates a new abstract thread
start the thread
stop method comment
configure log4j with the given configuration
add a listener to the ip
remove a listener from the list
returns the ip of the listener with the given ip
starts the server on the specified port
add a stream to the thread group
returns a stream with the given name
the complete status of the shutdown sequence command
returns the status
the response of the operation
called when the server is stopping
called when the server is ready to execute the command
returns the response
creates a new jcast input stream
constructor for jcast server message
loads properties from an input stream
create a file with some content
create ngram entries from a string
get the distance of a finger print
loads the finger print from the given input stream
loads a finger print from a file
returns the position of the key
save the category list to file
returns a string representation of this map
sets the category
sets the web application path and loads the categories
clears the categories list and loads the categories from the web
categorizes a text
categorizes only a certain number of characters in the text
import all files in a directory and return the resulting xml
this is used to determine what tag type the file uses
loads the data from the given file
loads lyrics3 data from a file
set the value of across
set the value of down
return a string representation of the search result
checks if a given c is a valid clue
sets the position
sets the value of the constant
set the cell type
sets the row of this position
returns the position of the token
gets the value of the cell type property
set the row of the table
checks if the index is valid
gets the size of the grid
sets the column of the table
invoked when the mouse button has been clicked pressed
returns the row character
returns the row number
returns the cell at the given position
checks if the given column number is valid
ensures that the row is valid
returns the type of the cell at the given position
mouse listener interface method
returns the cell type at the given position
returns the value at the specified row and column
get the combos in the position
returns the length of the clue at the given position
invoked when an action occurs
invoked when an action occurs
saves the file to the end of the file
invoked when an action occurs
gets all vectors from the root node
calculates the centroid and mean
if the vectors are in the nearest centroid return true
update the list of nearest neighbours
visit each leaf in depth first order starting at v
rearrange the tree
computes the arccosine of this vector with another
adds the given vector to the result
find the node containing the given key
finds the codebook in the tree
returns the sum of squared errors for all the nodes
removes all data in the subtree rooted at this node
pushes the given key into the keys stack
pushes the given node into the given keys child array
determines if the node is a codebook
updates the mean of the parent entrys of the parent
returns the link count
returns the link count of the document
returns the link count for the given edge
returns the sum of the link values in the specified column
returns the frequency of the inverse document in the given index
adds a link between two documents
add the link to a document
returns the number of links between this node and the specified
called when a confidence is seen
gets the ith child
adds a key to the list
adds a child node to this node
adds a list of keys
removes the node at the given index
return true if all vectors have a nearest centroid
returns the arccosine of this vector with another vector
gets all vectors from the root node
return true if there are any vectors in the current cluster
prune this tree
rebuilds this tree using the data in the root
adds the given vector to the result
finds the subtree starting from the given point
finds the codebook in a vector
removes the node at the specified index
removes all data in the subtree rooted at the node
pushes the current entries in the vector into the vector
pushes the given child into the vector of children
determines if the node is a codebook
updates the mean of the children
computes the arccosine of this vector with another vector
computes the squared error of all the leaf nodes
rearrange the tree if necessary
this method logs the centroids
compares this object with the specified object for order
returns the arccosine of this vector with another vector
the implementation of the cleanup step action called
calculates the distortion for the input vectors and returns the weighted
update the mean node
adds a vector to the result
updates the mean for all the children
returns the arccosine of this vector with another vector
resizes the array to the given capacity
updates the mean
sets the service running
returns an initiliazed instance of cmd confirm component
returns an initiliazed instance of cmd about1 component
returns an initiliazed instance of al about component
returns an initiliazed instance of spl start component
returns an initiliazed instance of lst canale component
returns an initiliazed instance of cmd about component
returns an initiliazed instance of lst formato component
returns an initiliazed instance of txt titolo component
returns an initiliazed instance of dt start component
returns an initiliazed instance of dt end component
returns an initiliazed instance of cmd send component
returns an initiliazed instance of cmd ripeti component
returns an initiliazed instance of exit command1 component
returns an initiliazed instance of txt risultato component
returns an initiliazed instance of lst ripetizioni component
returns an initiliazed instance of lst conservazione component
returns an initiliazed instance of cmd correggi component
returns an initiliazed instance of cmd tv component
returns an initiliazed instance of cmd radio component
returns an initiliazed instance of al tipo canale component
returns an initiliazed instance of cmd retrieve component
returns an initiliazed instance of cmd login component
returns an initiliazed instance of back command component
returns an initiliazed instance of spl test component
returns an initiliazed instance of spltest2 component
returns an initiliazed instance of screen command component
returns an initiliazed instance of frm info component
gets the wildcard
get the regular expression wildcard
returns the site manager info for the given key
creates a new instance of the site manager object
returns true if this is a complete download
setter for property complete download
getter for property downloading
sets the site
sets the group list
get web client
sets the list of photos
returns the path photo mask
sets the file list
set the path photo mask
returns the path file mask
set the path file mask
returns the sort photo to download
sets the sort photo to download
returns true if the file should be sorted in a way that
sets the sort file to download
returns the disable search groups
set the disable search groups flag
gets the value of the disable search group photos property
set the value related to the column disable search group photos
returns the search group files flag
set the flag that determines whether search group files are disabled
return the process listener
set the process listener
get the configurations
setter for property configurations
returns the web client
downloads all files in a group
download a group of photos from a specific directory
find the first photo in the page
set the value of an attribute
mixin setter method
set the value of an attribute
set the reference to the component
mixin method for doing a synchronous
start fc notification
unbinds the given notification client
adds a sub component to this component
set a reflex attribute
returns an attribute value from the reflex context
sets the notification status of the referencelexor
removes a sub component from this component
mixin method for unbinding of a change in fc
stop the life cycle notification
returns a string representation of the object
get the file path of the file
validates the delete operation
validates the save operation
updates the object model
find all activity instances for the given table
find all instances of the project activity table
finds all the auditors that match the given auditor id
find by keyword
zibog auto generated method
find by property names
find all attachs with the given id and type
find all attachs with id of given finding id
find all attachs of recommend id
find all attachs with the given action id
find all attachs with the given progress id
returns a list of all finding by finding id
get all project instances
find all project instances for a given date range
find all project instances for a particular year
find all the year
finds all dates for a year
returns the rows from the project table that match the criteria id
returns a list of all instances of a risk with a given
finds all the year following the one passed as parameter
p use the auditors for active use
p use the auditors for the given project
returns true if there are any items in this result set
p use all auditors
reset the sched conflict to false
this will select all auditors that are selected
handles the date change event
inits the state of the command
fill the finding list
check the list of known finding by checking status of all known
this task sets the recommend finding by id according to the project
fill the finding list
check the list of findings according to the selected finding id
removes the selected item from the list
fills the error with an included reason code
adds a list of users that are not selected
selects a list of selected pic for the user
handles the date change event
sets the products of the table
sets the function names for the table
returns a list of all the active auditors
this function returns a list of all active auditors
shows the current year
method to populate the project list with the project ids
p create a new project on the previous year
p create a new project on the next year
find all the corp instances in the calendar table
find all instances for the reason code
get all instances of the status
find all instances of the auditor instances
get a list of all active isactive
gets a list of app securityities for the current user
find all instances of a group
p save the selected model
checks if a security id exists in the app table
checks if the current user has the security
set the list of rows
set the index of a column to a list of values
shows the list of groups by keyword
save selected group
p update the selected group
cancel the group
save the app
init method for this filter
return a string representation of this object
get the faces context
method called from do start tag
p return the code application code instance for the current
method other do end tag operations
this method is called after the jsp engine finished processing
handles exception from processing the body content
determines whether the rest of the page should be evaluated
fill in this method to determine if the tag body should be evaluated
fill in this method to determine if the session data should be evaluated
returns the active function list
checks if the date range is valid
adds a code graphic object code to the canvas
remove all the graphic objects from the group
resize the group
creates document from the given xml document
creates summary report dom
reads in a xml file and extracts a catalog
extract a catalog from an input stream
test the save and find methods
get the document for the given http method
returns the instance of the configuration service
returns an instance of open search service
initializes the scrolling data
returns the adapter
get the text color
set the text color
returns the item resource
sets the item resource
gets the item text resource
sets the item text resource
returns the empty item resource id
sets the acceleration curve for this menu bar
sets the empty item resource id
configure a text view
returns the number of visible items
gets a text view
get view for a resource
notifies all registered observers about a change in the dataset
sets the number of items that are visible
notifies all observers that the data has been invalidated
sets the current interpolator for this console panel
scrolls the view to the specified distance
called when the mouse is touching
get the view adapter
recycles the items in the layout
returns the cached item
returns an empty view of the item list
clear all items
re initialize the view with a new view
returns the cached view or null if the cache wasnt empty
sets the view adapter
returns true if the given index is contained in the range
adds a listener that is notified when the wheel changes
removes a listener for changes in the wheel
notifies all the listeners that the wheel changed some of its
adds the given scrolling listener to receive scroll events from this container
removes the given scrolling listener from the list of scrolling listeners
notifies the scrolling listeners that the wheel has started
notifies the scrolling listeners that the wheel has ended
adds a wheel clicking listener
notifies the listeners that a new item was clicked
sets the current item to the given index
returns true if the graph is cyclic
sets whether this wheel joint is cyclic or not
returns the desired height of this item
returns the height of the area which would be used to
lays out the components
draws the shadows
draws the center rectangle
called when the items have changed
scrolls the scroll bars by the given number of items
returns the range of the items
creates the context menu items
build the view
adds the view to the list of views
checks if is valid item index
returns the view of the item at the given index
calculates the space between the wrap motion event and the wrap motion
mid point of the motion
logs out the user
login a user with the default trust no password
logs a info message
returns the string value for the given id
start the applet
delete items from help screen
set the help text
check if menu change is possible
set the text and width
returns the help text
sets the position to 0
set the position of the text in the menu
returns the column of the menu
sets the number of the counter
control the mouse scroll
checks if a given column is clicked
set load icon
get the change of the menu
returns the visible state of this component
creates the next item in the menu
set whether to display help or not
checks if the help button was pressed
get the help text for this command
set the path to the color image
setter for property menu column
sets the color of the given index
this method performs the right action
adds a reference to this path
sets the opacity value for this object
sets the scrolling speed of the screen
sets the final position of the element
scan the contents of the specified path
returns true if the given index exists
sets the reference to the picture at the given index
set the scrolling index
return the picture index
updates the position of the robot
sets the color of the box
set the variable to a given position
sets the color of the graphical box
sets the color for the given index
add a color to the color map
set the number of the help
sets the text color for this button
reset the color array to the default color
gets the scrolling text
adds the specified item to the vertical scrolling list
set the text color
sets the line color for this button
sets the screen position for the current frame
sets the opacity value for this fill
sets the image to be shown on the logo
sets the faction counter
resets the map to the initial state
returns the help text for this panel
sets the image to be displayed on the button replacing the default
returns the text of the logo
sets the image to be displayed on the canvas
returns the vertical size of this
returns true if there is a scroll display
returns the text picture object created from the specified string
set the image of the image pointed to by the sizex expression
returns if the command is counter or not
selects the first option with the given index
sets the image attribute of the sizex panel object
sets the shadow offset of this item
get the scroll text
set the shadow color
returns the vertical index
set the previous character
adds the specified image part to the list of images to be loaded
returns true if the faction is visible
sets the position of the node
returns the help text
sets the speed of the dynamic object
get the help text
adds a new image part with a certain opacity
draws the image
set the path to the color image
draws the scroll img
sets the help text
renders the graphic
updates the position of the robot
selects or deselects the menu item
setter for the load opacity
render the image on the screen
draws the image
get the current faction of the player
sets the final position on the logo
sets the help transparency
set the help text
sets the spacing between grid lines
set the text for the info label
set the maximum number of items to display
set the scroll text to match that of the current value
sets the scroll text
sets the arrow up
reset the screen to the default state
sets the scrolling text to the given text
sets the color of a variable box
sets the position of the robot
sets the up arrow position
set the position of a given item
update the screen
adds a feature to the message attribute of the mailbox object
changes the title of the window
adds a message to the list
load the game
change the clear state of the frame
renders the scrollbars
changes the position of the part with the given index
sets whether this label is justified
sets the flow to be upward or not
renders the component
draws the item at the specified index
sets the maximum number of genes in a geneset
sets whether or not this frame should be updated on the client
check if help is valid
sets the opacity of the dark neightlight
sets the choice for a given item
set fullscreen mode
update the position and size of all note based on the mouse
display the keys
show the rate
set the color of a specific item
update the timer
show the log
store all keys that are defined in the window
sets the image of the item at the specified index
move the track down one position
show full screen
check if all the keys that this object match
sets the image of the item at the specified index
adds a clip to the video
move the track up one position
sets whether the window can be resized by the user
toggles between show and hide fps
adds a clip to the playlist
toggles the show log
sets the size of the image created by
mouse selects a item
adds a clip to the panel
sets the selection of the tree
adds a clip to the list
sets the time in milliseconds between each frame of the game
get the index of a given reference in the cache
starts the timer
sets the flag that controls whether or not the game is cleared
play a sound
calls the code create graphics code method on the given graphics
set the time in milliseconds between each frame
set the direction of rotation
plays the sound at a given index
returns the current frame time in milliseconds
handles the keyboard event
loop the given sound source or destination file
returns the current time of the timer
set whether this file should be stored as a reference
play the music at the given index
sets the frame rate of the game
stops the player
shows the rate
sets the frame rate
set the color of the old color to the new one
deletes all items
shows a log
starts the thread
loads the game
sets the type of the mp3 file
repaints the graphics in a thread
mouse all select
start the background thread that executes music
deletes all items of a certain type
returns the text image
sets the pixel blend color for this image
plays the ogg music
add a letter to the list of images
delete the menu item at the given index
sets the color of the pixel with the given color and alpha value
plays a sound
create the graphics for the tree
adds a letter image to the list of images
plays current midi file and loop the sounds
set the color to use for pixels ignoring any potential alpha component
swaps the items at the specified index with the specified change
adds an image to the list
add the given text to the current tag
selects all items in the list
adds an entity to the tag
shows the rate
adds an image to the list of images
add a tag
generate menu items
add an xml tag to this node
shows a log message if the user wants the game to be closed
adds an image to the list with the default size
adds a blank line to the end of this text
add a menu item to the menu
gets the attribute with the given index
sets the frame rate of the game
adds a new xml comment to this javadoc comment
scrolls the item around the given mouse position
add image to the list
adds a tag to the list of tag names that should get focus
add a new image part
gets the time of the current frame
adds an image to the list with the given name
add an attribute to the open tag
generate the menu
adds a tag that should be searched for
close xml tag
initialize the class
get the x scale
returns the end of an xml tag
returns the number of tags in this set
end an xml tag
adds a reference to an image to the cache
scale factor along the y axis
clears the tag list and attributes
end all tags
returns true if the file exists
add a new reference to this image
changes the directory of the file system
adds vertically to the list
returns the current level of the tag stack
returns the path of the root of the project
returns the base path
returns the text of the current tag level
adds a file extension that should be added to the type
get a color box
sets the selection for each part of the track
prints the contents of the data field to the standard output
adds directory to the list of those to be checked for class files
loads an image from a file
gets an image for the current thread
resets the xml file
clears the path and refactors the file list
gets an image for the class
gets an image for the url string
load an image from the url
return the image for the given key
get files of all uploaders of a path from the temporary directory
writes the current data to a file
load an image
writes this file to the temporary file
sets the mouse lock
set the mouse release
check if the given directory matches the current directory
set the index of the scroll
returns the scroll flag
get image by index
changes the path of the file
gets the mouse lock
returns the index of the scroll indicator which should be used to
get a file from the file system
set mouse control
print the current document to the terminal
changes the filename of the file
write the current data to the file
get a file object for a file in the class loader
creates the image of the component
get a resource file
gets the animals current time
set the frame time of this game object
checks if the focus tag is valid
clears all the color grid
returns the time the frame took to execute the last frame
sets the frame rate control time to the current time
set the image to the given grid
starts the thread
deletes a file
set image to the grid
returns x coordinate of the bounding box of the original svg image
gets the last header
rotate the grid
create a new directory
flips the grid on the x axis
creates the directories
closes the screen
get the header for the master tree
this is called when the mouse moves over the component
returns the x coordinate of the original image
returns the default spacing for a given word in this line
sets the current opacity
hides a directory
flips the grid on the y axis
initialize the index
returns the header at the given position
calculates the default spacing of a given reference
returns y of the bounding box of the original svg image
adds a short to the list
inserts a byte in the byte array
merges the alpha grid image with the current image
add a byte to the list
returns the compact value of this code pdf object code
check if a header is a header
get the short value of the array element at index
returns the value of the array element at the specified index
this method adds text to the grid image and restores the old color
returns the bit at the given index
returns the byte value at the specified index
convert a byte value to a byte value
adds a new data to the data set
returns the y of the original image
returns the data for the specified item
returns the grid image
returns the index of the specified data
process the entry tag
return a new image with the given text on the picture
creates and returns a new image with the picture of the given text
returns the x position of the referenced text
sets the current language
check all the data for the conditions
marks the end of an entry
returns data for the location and index specified
gets the data of the graphic item at the specified index
checks if the data is valid
moves the horizontal pixel to the left or right
checks if the graphic is valid
increase index of new item
increase the graphic items array by one
adds a key to the list
adds the key at the specified index
adds the specified data to the list
checks if the key exists in the reference
adds a new data to the document
adds a new tag item to the end of the list
returns the reference for the specified key
returns the data in the specified index
returns the number of references
returns the x index of the image
find the index of the data in the array
perform a horizontal move on the board
returns the number of data items in this data set
checks if the given data is present in the data items array
returns the file at the specified index
returns the item for the reference
returns data for the location and variety of index
adds a new layer to the end of the data items
checks if the file contains loc items
adds an item to the list
moves the vertical pixel in the given direction
adds a layer to the end of the layer
returns the number of location objects in this location
adds a layer to the end of the layer
gets the rgb value for the specified color
returns the y position of the referenced text
adds data to the list at the given index
add data at the given index
get the base color value for a given color
adds data to the list at the given index
returns the rgb value of a string
replaces the data at the index with the new data
moves all the rows vertically
returns the data at the given index
this adds one reference to the current data set
sets the army of the army
checks if the code at the specified index in the array
clears the data items
returns the number of items in the list
adds a new entry at the given index
returns the y position of the image in the list
used to set the flag for the applets
checks if the given code is in the range 0 number of the
out source image
sets the type and the tag for this type
loads the options from the given file
this method checks if there is a file in the following order
initializes the image area for the edit mode
process an option entry
returns the index of the given hash id
this method marks the end of an entry
this method writes the java related attributes
the slick attributes for entries
fills in an entry
creates a pixel map image from the current pixel array
initializes the security
copies the selected items from the editgrid to the actual contents
returns the length of the sorted image
find all objects in the index file
draw a pixel in the edit grid
adds an animation to the scene
returns a hash size for this image
initializes the menu and menu commands
loads the objects found in the file
moves the row in the cool array
adds a random number generator
get a color object based on the specified java
moves the columns pixels
get the graphic data object
returns a reference to the color data object used to store
resets the tag to its initial state
get a color that is an alpha value
returns a reference to the blend library data object
returns a reference to the data library used by this data store
sorts the data
returns the library data
gets the tag library data
sorts the graphic
method for getting data
returns the number of items in the data set
the main method of the thread
returns the score for the data stored in the array
returns the score of the graphic with the given index
returns the length of the specified item
returns the length of the specified array
returns the number of graphic elements in the graphic list
sort the store
sets the points
checks if the message url is valid
checks if a string is null or empty
returns the value of a property of the resource
updates the citation metadata by following a change to the target page
checks if the resource is valid
return the value string of a property
return a string describing the metadata associated with the bean
method to extract issn with a hyphen
finds the dynamic base model with the given id
connects the superclass bean descriptor
returns a property descriptor by name
adds a persistent bean to the persistent store
checks if this bean set contains a persistent bean with the specified class
get bean descriptor for the specified class
generate the schemas for the profiles
generates the schemas for all of the mo xml schema locations
inspects the given class for all properties annotated with the given bean
inspects the given class for see also annotations
check to see if we can run the boot process
returns an image icon or null if the path was invalid
sends a negative response to the client
returns information about this applet
return true if the parameter has been specified
returns the area in which the graphics would be drawn
generates new environment string and resets the device name
get the end position of the current field
fire boot event
listens for connections and handles incoming
gets the options from the boot event and fires boot event
returns the vertical alignment of a child label
sets the vertical alignment of a child component
returns true if the container should be resized
gets the resize height attribute of the inner frame object
sets if the resize height is allowed
connect to ftp server
disconnect from the ftp server
notify all registered listeners of a status event
notify all registered listeners of info event
login to the server
this method is used to print the directory listing
this method will check whether the client is connected to the os
returns true if the given field is selected
returns true if this dialog was canceled
select all file fields
select none of the file fields
checks if the given file is one of the selected fields
returns the preferred dimensions for this layout given the components
sets the selected state of a file
returns the name of the file
returns the number of fields in this database
parses a filed field
write the footer to the table
retrieves the remote directory
parse the fields
write a long
write a short
write the footer to the stream
write the footer to the table
loads the smtp configuration
gets the dspf member
check to see if we can run the boot process
print the help message
gets connection session
print the ftp status
execute ftp command
writes the footer of the database
gets the options from the boot event and fires the boot event
this method performs the actual toggle button action
removes this session from the session map
process key events for this component
process key events for this component
initializes the page
loads the restricted options
returns the full name of the file without the prefix
returns a string representation of the object
initialize the scripting engine
initializes the jar paths
resets the current queue filter interface
initialize the applet
returns the applet information
wrap an exception in an appropriate method
converts the exception to a string
returns the allow change flag
sets the value of allow change
returns the component that will be inserted in the page
sets the new page component
returns the current page
shows the dialog
notifies all listeners that have registered interest for
this method is called when the selection is empty
shows the dialog
returns the graphics object that renders this component
method do item state changed
h2 get attribute h2
load attribute spool
opens a file chooser dialog and gets the editor from it
load the date time table
returns the value of the prototype cell
overridden so we can exit when window is closed
sets the prototype cell value
exports the selected page to pdf
returns the width of each cell in pixels
sets the fixed cell width
returns the height of each cell in pixels
sets the fixed cell height
gets the cell renderer
this is a private method to send a message to the server
returns the foreground color for selected list items
sets the foreground color of selected items
returns the background color for selected list items
selects the tab at the first tab position
sets the background color for selected items
returns the tab index at the specified coordinate
shows the window with the given name
get get the pdf file if one exists
sets the source column header
flips to the first card of the layout
flips to the last card of the layout
the finish button was pressed
sets the selection column header
cancel the wizard
spool stuff if possible
implements the help action
returns the current page
add a wizard listener to the list of listeners to notify
sets the source header
remove a wizard listener from the list of listeners to notify
adds a page to the form
sets the source header
display the text viewer
sets the selection header
sets the selection header
sets the filter property on given row and column
returns the model
updates the status bar with the given stat and an error
sets the model
sets the data in the list
updates the status line and the ok button according to the given stat
sets the data in the list
returns the selection model
returns the selection mode
returns the maximum selection index
returns true if the specified index is selected
returns true if no records are selected
clears the selection
selects an interval
removes an interval from the list
returns the index of the selected item
selects an item
returns a string representing the state of this code list code
updates the view after a change in the list
gets the preferred size of the list
returns the minimum size
returns the maximum size of the buttons
returns the preferred width of the list
selects the items in the source list
selects all items in the list
deselects the selected items
creates the about panel
the user has selected a button
enable or disable scan of robots
add a screen oialistener to the listener list
remove a i oialistener from the listener list
determine if scan is enabled
saves the selected session preference
notify all registered listeners of the on oiachanged event
scan the command screen52
stores the selected session preference
clears the screen
sets the external mailer programs
clear the fields table
returns the graphics2 d object that renders the current offscreen
returns the graphics2 d object that contains the writing area
returns the end position of the current field
initialize the stream
sets the ssl type
returns the current viewed session gui if any
shows the next session
shows the previous session
returns the number of sessions currently displayed
gets the session at attribute of the session list object
update the scroll pane
disconnect from ftp server
notify all registered listeners of a status event
notify all registered listeners of the command status
notify all registered listeners of the info event
this method is called when a user logs in
method to handle events for the action listener interface
called when the session config has changed
fire boot event
returns the name of the device tab
adds the specified component with the specified name to
removes the specified component from this layout
returns the minimum dimensions needed to layout the components
returns the row col of the given point in the code screen code
reloads the contents of this directory
returns the preferred dimensions for this layout given the components
gets the coordinates of the point in the row and column
translates the start point of the viewport to the corresponding coordinate
returns the failure message if there was one or null otherwise
compress a color value into a byte array
compress the color value according to the red and green values
translates the end point of the viewport to the center of the view
this method will check whether the client is connected to the system
parses a list of fields
write footer writes the footer to the stream
parses the fields
returns the fixed length of a given byte according to the given
returns the area where the gui is drawn
called when the session has changed
moves the given field to the current start position
loads the smtp configuration
loads the smtp server configuration
fire a jump event indicating that the jump direction is changed
configures the smtp frame
notify all listeners that the emulator action has been performed
loads all the configuration files
creates settings folder if it does not exist
loads the session properties
loads macros from the configuration file
sets the comboboxes to the given string
creates a tokenized form of a string that represents the to keyword
this method is used to set the properties of a given
checks if a mail is available
called from the menu action
return the settings directory
return the class loader used to load classes
returns the graphics object that is being used to draw the graph
notify all registered listeners of the on screen size changed event
add a screen listener to the listener list
set the desired aperture percentage
inserts an item into the database
returns the number of bids in the bid table
returns the highest bid in an article
returns the bandwidth of this connection
returns the load value
registers the reader context for the given reader and writer
find the method on the source class
returns the shared instance of the handler service
execute the command
handle the key event
handles all events sent by the application
match bracket action
create a database connection
closes the connection
executes the given sql statement which may be an insert update
executes a sql query
creates a connection to the database
shut down the component
shut down the component
adds a driver listener
removes a driver listener
adds a component listener to this component
removes a component listener from this component
save the plugin manager
loads the plugin manager
add a component to this plugin
removes a component listener from the connector
adds a component listener to the association
removes an association between the given component and the given target
tests if the component list contains the given component
returns the number of plugins in the model
returns the number of associations in this graph
saves the components in this container
this method verifies that the client has the right security
create a sound
returns the max progress
sets the size of the client area
getter for min progress
add a resizable widget
returns the current progress relative to the minimum and maximum progress
returns the current progress
checks if the client can resize the widgets
get the text formatter
returns the resize check delay
this method is called when the dimensions of the text element
returns whether resize checking is enabled
redraw the panel if the widget is attached
records a resize event
sets the max progress
sets the min progress
set the delay between resizing checks for changes
sets whether or not resize checking is enabled
set the text formatter
sets whether the text is visible
generate the text
returns the bar element
returns the text element
returns true if the module will be loaded
get the value of the specified parameter
if this unit is exits the npc its inventory is it
return true if the target is allowed for this type
check if this entity is passable in the given direction
adds an item to the bar
removes the specified item from the container
removes the specified slot from this slot set if it is present
reduces the money of the player by the given amount
calculates the statistics for all the effects
can receive item method comment
adds the given consumable item to the set of consumables effects
removes the item at the given index
returns the preferred dimensions given the components
checks if prefix is valid
sets the prefix for the current file
clears the prefix to be used in the latest call to
returns true if the prefix is valid
appends the given string to the prefix string
returns true if the given string can be appended to the prefix
sets the prefix to be used in the context
return the number of options that match the current option
removes all prefixes for this namespace
returns the part of the completion string that follows the
appends the given string to the prefix string
returns the current match as a string
returns true if the given string matches any of the patterns
returns true if this string can be appended to the prefix string
retrieves the number of rows that match the current pattern
returns the completion for the word at the given index
returns the value of the specified match
retrieves the match object stored in the preference list
gets the id
set the auto complete model
returns the auto complete model
checks if the given string matches the given prefix
sets the strict behaviour of the generated java source
returns true if the given prefix matches any of the options
returns the code object code at the specified position in the
gets the id
gets the selected id
set the auto complete model
sets strict parsing on off
returns the id of the selected item
update the status of the auto complete combo box
called when the popup is empty
selects the item at the given zero relative index in the receiver
test of get root method of class com
hides the loading panel
shows the loading panel
change the application container
goes to the page that is being displayed
forces a drawer resize
fired when the user clicks on the send button
fired when the user types in the name field
fired when the user clicks on the send button
fired when the user types in the name field
overridable method for processing lines in different ways
parses the command line arguments
sets the client thread
sends a debug message to the ftp server
decrement a counter and return the value
sends a packet to the client
registe a new command to the list of commands
returns the help string for the command
get the singleton instance of this class
sends a packet to the server
execute the client command
test if the instance is in the rage
read this array item
sets the item buffer for this packet
copy the tuple into a byte array
clears the hex
write a long value as two bytes little endian
returns a random id that is unique within the set
write a single byte to the output stream
delete the specified id
write an idiverted integer to buddy space
write a single character
write a f value
write a byte array to the output stream
returns the durability modifier
sets the durability modifier
writes a string to the output stream using the default encoding
gets the active npc
store an item in the inventory
get the stats for a specific group and index
write nick name to file
store an item in the inventory
remove an item from the store
write a string to the code bao writer code
get the stats for a specific item
remove an item from the inventory
returns the length of the bao
getter for the connection
this method returns the mu storeable item at the given position
write m1 header
add item stats to the item
m c1 header
returns the position of the next available spot in the array
m c3 header m b o b
marks a set of slots
returns the line number for a given position
m c2 header
returns the column number for a given position
write a c2 header
m c4 header
the c4 header method is optional
compare two byte arrays for equality
helper method to fill a string with a given number of digits
save char to the data base
this function deletes itself from the world
save character data in database
get the mu map for the given map code
gets the object with the specified id
get the player instance by name
returns the gate with the given id
add a new object to the list
returns the index within this list of the first occurrence of the
add a new port to the list
remove the object from the world
returns true if the character is in guild
get the selected character from warehouse
set the net connection
restore warehouse
change the status of the whole packet
restore short cuts
get the exp on new lvl for this job
restore the skills
returns the name of the npc template
get the character base with the given name
restore the inventory for a character
store equipment on the given position
adds a known object to the known objects vector
set the active char
get the active character
returns the real dmg
getter for the mu client settings
stores client settings
remove all known objects
if the object is known then remove it from the known players
calculate rewards after deth for pc instane who kill me
set the region for this object and add it to the region vector
sets the direction of the message
update the current region and add it to the region mu map
sets the position of the player
forgets the known mu and removes it from the list of known
check if this object is in a rage mu
send a message to a specific hit participant
returns the map code
calculate attack speed
sets the current regeneration mp
method to start respown task
remove the mu object from the list of all players
moves the object to the specified position
add one object to list
clears the list
adds an item to the model
returns the item at the specified position
method used to load the list of items
loads a bitmap from a url
this is a callback that will allow us
add two vectors and return the sum as a new vector
add two vectors
substract two vectors
subtract two vectors and store the result in this vector
this method is called by the parser when a chunk is found
add a symbol to slexic
create a new inventory for c1 c2
cast a symbol to this symbol
returns true if the slexic symbol is defined
returns the number of elements in this set
write the slexic inventory
this method is called by the outputchunk class for an unchunker
tests the output of the alphabet bin file
display the contents of the slexicinv
gets the value of the initial property
initializes the pool with the given initial state
parses an arff file and generates an xml file
returns a symbol string
sets the symbol for the tokenizer
write this section to the given output stream
links two states to each other
copy the values of the transducer field contained in this composite
sets the alphabet of this automaton
checks if all whitespace is found
get the transducer for this command
inserts a single transition into the set
distributes the epsilon closure of each node in the input sequence
expands the process node
helper method for building an ent list with the given
checks if the intersection set of two sets contains any empty intersection
perform one step of the machine
helper method to append an array of ent lists
checks if two sets are empty
helper method to append an ent list to a pair
perform a step on the input
reads an attribute value
determine if the xml is empty
generates the procedure identifier
sets the epsilon tag
add a transition to fsm
generates a procedure that evaluates the given string
processes a proc definition
gets the current digit
regular expression parsing
returns attribute value
throw an exception if the element doesnt contain an element
process the alphabet tag
skips the next element in the stream
this method writes the section at the current position
skips whitespace characters and returns the next line
returns the text after the queue length
removes the first character from the queue
adds the specified value to the last position
description of the method
return the last element of the current buffer
returns the current position
sets the position to the specified index in the page
description of the method
description of the method
returns the empty status
compiles a java source file
description of the method
checks that an attribute is specified
loads file content into bil
throw an exception if an element is empty
sets the extended dictionary to the words of both the words stored in
copies the patterns from p sequence to this transducer
copy the constants from the manager into this instance
adds a pattern to the patterns map for a given sequence id
copy data from one data object to another
sets the show sf attribute of the antelope panel object
sets the superficial form
gets the superficial form
get the first tags as a single string
add a string to the list of ignored strings
set the plus cut parameter
prints the contents of the map to the standard output
tests the basic analysis of small non random words
convert a document to a string
p return the total number of characters inside read write p
the language pair of this daemon
the daemons id
returns the daemon information for this job info
method get new id
translates the given string into the specified language
adding a vertex with the given id
returns the maximum flow value for the given source vertex
returns the maximum cost that can be reached from the source vertex
this method calculates the residual memory for all applications
takes the residual cpu
copies the server information to the server information
at startup create and show the main frame of the application
get the size of the term
get the tags as a single string
called by the parser when character data is encountered
get the form of the surface
start an element
how many lexical forms are there
end an element
returns the lexical form at the given index
get the lexical form that is currently selected
returns the character offset within the source string of the first character of
returns the character offset within the source string of the last character
filter a linguistic query token stream from the field name
sets the string which was analyzed
filter a single field
main next token
update the measurement
p returns the number of characters inside this directory
get the configuration
translates the given source
retrieves the memory usage of the cpu
returns an initiliazed instance of splash screen component
returns an initiliazed instance of wait screen component
returns an initiliazed instance of task component
returns an initiliazed instance of src word component
returns an initiliazed instance of font component
returns an initiliazed instance of ok command look up component
returns an initiliazed instance of back command look up component
checks if the string is an acronym
returns an initiliazed instance of ok command select direction component
returns an initiliazed instance of back command select direction component
returns an initiliazed instance of exit command menu list component
returns an initiliazed instance of word not found alert component
returns the second element of this pair
sets the second element in the pair
returns an initiliazed instance of back command2 component
returns the steam
set the steam
getter for property paradigm
adds a word to the list of words
returns the total of the surface form for a given word lexform
returns an initiliazed instance of ok command2 component
returns the most usual suffix
process the file
returns the second most usual suffix
generates a new phrase and returns it
returns an initiliazed instance of task2 component
construct an empty e object from a string
gets the shortest string that is in the array
stemming function that removes the stem of a given string
adds the given symbols to the symbol table
get the top level string
returns an initiliazed instance of back command3 component
returns an initiliazed instance of dic loader form component
returns an initiliazed instance of dic loader message component
returns an initiliazed instance of progress bar component
returns an initiliazed instance of cancel command dic loader component
returns an initiliazed instance of about form component
returns an initiliazed instance of back command4 component
returns an initiliazed instance of ok command3 component
returns an initiliazed instance of back command about form component
returns an initiliazed instance of ok command about form component
set the append character data for this code block
returns an initiliazed instance of spacer component
returns an initiliazed instance of image1 component
performs the filtering
returns an initiliazed instance of string item1 component
returns an initiliazed instance of spacer1 component
returns an initiliazed instance of ok command menu list component
remove the arguments at the specified index
execute the tool
returns the word list
sets the prepend character data
setter for property append character data
adds a processing comment
sets the processing comments attribute of the body tag object
return the stream content
at startup create and show the main frame of the application
set the dictionary file
get the dictionary file
whether there are any restriction or not
it starts the server
stop the application
stops the service
sets the new language
it sets the status of controller reactivity parameter
it sets the status of sending alarm parameter
it sets the status of minimal temperature parameter
it sets the status of timeout before home empty
it sets the status of automatic update parameter
causes the device to display any error status information to be displayed
returns true if any of the physical devices are out of service
returns a list of products which are out of service
gets the monitor
it reset all packages to initial values
this function sets the version of the zig bee
set the information about the
scan a zbtelegram to get a specific time flight de laid out
removes all all physical devices that have finished loading
save the device state to disk
it saves all packages to file
returns the room this player is outside
returns the rooms as an array
returns a list of rooms that are available for statistics
returns an array list of rooms that are available for statistics
checks if the room contains a physical device
unsubscribe from all hardwares
subscribe to all hardwares
returns a string representation of this home
sets the seed of this random number generator using a single
frees the specified number of bytes in the buffer
writes the block to the file at the offset
sets the direction of the ray
sets the area
set the tile type class
returns the maximum room height
return the maximum room width
return the minimum room height
return the minimum room width
sets the base length
sets the maximum room height
sets the maximum room width
returns the corner class of this container
sets the minimum room height
returns the coordinate of this point
returns the class of the floor that is to be created
set the minimum room width
setter for property coordinate
returns the terminal class
returns the wall class
sets the class of corner this bar represents
sets the class of the floor that is to be created
sets the terminal class
sets the height of the image
set the class of walls that will be drawn
set the width of the board
sets the level
selected thing
sets the string that seperates the columns values
gets the owner of this creature
method that returns the type of this tile
sets the tile type
adds a new thing to the list of things in this sub sector
removes a thing from the sub collection
returns the door of this door panel
set the default option
getter for the next cell
getter for the previous cell
sets the value of multiple allowed
setter for the next cell
setter for the previous
sets the selected value
return the collection of things in this sector
returns the tiles
sets the parent of the cell
returns the item that is the value returned by
returns the performer of the person
resets the blocks and blink timer
adds a block to the list of blocks
resets the game
run the game as an applet
checks if the server can restart a game
resets the player to the highest space below the given player
reset the game
return true if the return title can be used
resets the game
updates the score with the highest altitude
paints the screen
performs one step of the animation
updates the high score
starts the background music loop
checks if the user can play a game
perform a single step
pauses the background music
stop the current score
returns the next image to be displayed
reset the altitude to initial value
put the bot in a falling speed
get the previous image
performs one step of the game
moves the water to a higher
rise the altitude
reset the keyboard
reset the settings
indicates if the speed of this timer is falling
executes the next step of the game
fixes any overlap of two blocks that may have been reached
moves the sky towards the velocity of the mobile element
set the movement of the screen
checks if this block collides with another block
jumps to airborne
this method is called when the thread is suicide
if this unit is a water or a sky
paints the sprite onto the screen
yyyy mm dd hh mm ss
sign the document
opens this log reader for reading
normalize index to the nearest robin archive
reads the contents of the file into a long
returns the md5 hash value
removes a file from the storage
removes all the entries
validate that the specified xml data is valid
opens the database in the order they were added
loads the user settings
returns a copy of the tabular data for this tt tabular data tt
getter get the nb changes attribute of the simple dynamic dynamic dynamic
returns true if the specified repository exists
returns true if the repository item with the given name exists
gets the value of refresh
adds a new form item label to this form
adds a new form item textbox to the form
add a listbox to the form
creates a new form item graph and adds it to the graph
at startup create and show the main frame of the application
executes the dot command
parse the root of the dom
return a cleaned up automaton that represents this nfa
returns a dot representation of this clause
returns the regular expression that matches the regular expression in the
adds a state to the statechart diagram
adds a set of states to the automaton
set the initial state to the given state
returns the first media descriptor
adds a vector of media descriptors
adds a vector of session attributes
adds a new string to the default log
adds a new string to the default log
adds a new string to the default log
adds a warning message to the log
adds the exception to the log
redirects the call when remotly requested
sets the methods of this class
creates and returns a copy of this object
indicates whether some other object is equal to this one
returns the header type of this sip message
returns the value at the specified index
gets name address of name address header
set the accept range
returns the header of this instance as a string
returns a string representation of the header
creates and returns a copy of this object
whether the header is equal to another header
inherited from class invite dialog listener and called by an invite dialag
sets the events of the event source
inherited from class invite dialog listener and called by an invite dialag
sets the elements
adds a new string to the default log
returns true if the packet is a date
unregister all contacts with the registrar server
when the transaction client goes into the completed state receiving a 2xx response
callback function called when client expires timeout
adds a new string to the default log
subscribes for a presentity
notify a watcher of active state
whether has refer to header
removes refer to header from message if it exists
whether has refer by header
removes referred by header
whether message has event header
adds a new string to the default log
removes event header from message if it exists
whether the message has the allow events header
gets allow events header
removes allow events header from message if it exists
whether has subscription state header
gets subscription state header
removes subscription state header from message if it exists
deletes the currently executing call
accept the call
redirects the call to a named call
callback function called when arriving a new re invite method
callback function that may be overloaded extended
callback function called when arriving an ack method call confirmed
callback function called when arriving a 4xx call failure
callback function that may be overloaded extended
callback function called when arriving a bye request
stops the transport services
callback function called when the invite expires
stops the sip providers
schedules an automatic hangup event after i delay time i secs
print the given string to the log file
adds a new string to the default log
adds the exception message to the log
gets the all interfaces attribute of the connection manager object
index of the first header
returns the first header of the message
returns the first occurence of header i hname i
skips the name address of the sip file
parse quoted string
returns the date contained within the gmt date header
when the transaction client goes into trans provisional response
when the transaction client goes into the completed state receiving a 2xx response
inits the extended invite dialog
adds the specified listener to the list of listeners
whether there is a header with the given name
removes a sip provider listener
when the transaction client goes into the terminated state caused by transaction response
gets a sip header
sets the local name address
gets the name address of the local name
sets the remote name address
gets the value of the remote name property
sets the local contact name address
gets the local contact address
sets the name address of the remote contact
gets the name address of the remote user
set the call id
sets the local tag
returns the local tag
returns the remote tag
set the cseq number of the local client that sent the message
increment the cseq number of the local client data
return the cseq number of the local client connection
set the cseq of the remote client
increment the number of remote cseqs
get the cseq of the remote client
sets the route of this member
adds headers at the top bottom
adds a new string to the default log
inherited from transaction server listener
removes a connection from the list of active transports
sets the socket timeout
returns the current timeout value of this connection
when transport terminates
removes a header from the document
removes first or last header of specified name
update the digest with the specified bytes
returns the current position in the stream
returns whole string
gets the remaining string
updates the message digest with the specified byte array
returns the length of the string
returns true if there are more tokens
returns the character at the current index
returns the character at the given index
returns the next character in the source string
sets the current position to the specified character
adds a new string to the default log
sets current position to the specified character
sets the current token to the given string
sets the current token to the given string
goes to the next token ignoring case
goes to the next occurrence of code ss code ignoring case
adds a new string to the default log
whether message has max forwards header
adds a new string to the default log
gets max forwards header of message
insert call into the table
gets the string value of this object
gets the string value of this object
removes the max forwards header from message if any exists
adds a new string to the default log
whether message has from header
removes all contacts
returns the name of the file
gets from header of message
removes from header from message
adds a new string to the default log
whether message has to header
returns the expiration date of the contact
converts the message to a string
whether the request is for the specified message
removes all clients bound to server i ts i
gets to header of message
adds a new string to the default log
sets the socket timeout
returns the timeout for this socket
removes to header from message
adds a new string to the default log
whether message has contact header
adds a new string to the default log
adds a new string to the default log
adds a new string to the default log
closes the clip ring
gets the multiple header of contacts
stops the clip ring if it is not already running
redirects an incoming call
makes a new call
receives incoming calls auto accept
adds a new string to the default log
adds a new string to the default log
when a call has been accepted
when a call has been cancelled
removes all contact headers from message if any exists
when an ougoing call has been refused or timeout
when a call has been locally or remotely closed
whether has via header
flushes the source line
called when a line is stopped
writes code len code bytes from the specified byte array
close the mixer
closes this output stream and releases any system resources
flushes all output streams
closes this input stream and releases any system resources associated
marks the current position in this input stream
tests if this input stream supports the code mark code and
reads the next byte of data from the input stream
reset the stream
skips over and discards code n code bytes of data from this input
starts the player realize
stop media file playback and release resources before
inits audio ressources from the selected line
initialize audio output stream
when an ougoing call is remotly ringing
when a call has been accepted
removes all of the vias headers from message if any exists
when an outgoing call has been cancelled
when a call has been trasferred
whether message has route header
when an ougoing call has been refused or timeout
when a call has been locally or remotely closed
adds route header at the top
adds multiple routes header to message if it exists
adds a new string to the default log
gets the whole route header
removes all route headers from message if any exists
whether has record route header
gets the whole record route headers
removes all record route headers from message if any exists
whether message has cseq header
gets cseq header of message
removes cseq header from message
removes call id header from message if it exists
removes subject header from message if it exists
gets date header of message
removes date header from message if it exists
whether has user agent header
whether has accept header
removes accept header from message if it exists
whether has alert info header
removes allow header from message if it exists
gets expires header of message
removes expires header from message if it exists
get the content type header of message
whether message has content length header
get the content length header of message
removes content length header from message if it exists
whether has authentication info header
gets authentication info header
removes authentication info header
removes authorization header
removes www authenticate header
gets proxy authenticate header
whether has proxy authorization header
gets proxy authorization header
checks whether the next route is formed according to rfc2543 strict route
get date time from iso format
checks if the given date is empty
checks if the given time is empty
returns the string representation of the help tree
returns a helpful string for the given tree element
returns the number of leaves in the tree
find the number of leaves in the tree
determine if the tree contains a given object
returns the depth of the tree
returns the depth of the tree rooted at code next code
add a new node to the tree
sets the init values of the widgets
handles all events that occur in the url editor
set the operation
returns the operation
sets the default values of the preferences
checks the status of the receiver
sets the name of this property
set the mbean info for this component
refreshes the attributes
refreshes the operations list
count the number of attributes
returns the vector of descriptors
set operation info
returns the description of the attribute
returns the access string
gets the description of the operation
set the value of the property
removes a server listener from the list
remove a server from the list of servers disconnecting and
returns true if there are servers in the list
get attribute value from mbean server
sets the server
this is a callback that will allow us
sets the mbean that this property belongs to
to set the host
dispose the component
returns true if the server is still alive false if not
disposes of all images in the cache
sets the area
this is a callback that will allow us
hook into a right click menu
fill local pull down
this adds actions to the context menu
fill local tool bar
create the actions
adds a double click listener to the viewer
add a selection changed listener to the viewer
helper method to show asynchronous messages
the action has been activated
we will cache window object in order to
creates the initial layout for a page
returns the next element in the enumeration
returns true if there are more elements in the enumeration
starts all futures that are needed to fetch more chunks
true if there are any more futures
returns the next available object in the queue
a wrapper to
collects garbage from the backing stream
finalize method called by the garbage collector on an object when garbage collection
initializes the queue
test of primes list method of class se
test to make sure that the fast fast fast fast queue will
tests empty stream
tests the set of two booleans
test exceptions on one stream
returns the next panel id
returns the component name for this plugin
sets the location of the toolbar
sets the notes
sets the index of the currently selected note
returns the index of selected note
get the currently selected note
gets the root component attribute of the main frame object
this function is called when the back button is pressed
go to the next child
delete selected note
rename the currently selected note
the search panel shows the search fields and the next button
hide the search field and the search button
process provenance query
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates workflow palette tool group
this adds a property descriptor for the component definition id feature
this adds a property descriptor for the receivers feature
this adds a property descriptor for the senders feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the discovery url feature
this adds a property descriptor for the component definition feature
this adds a property descriptor for the depth feature
this adds a property descriptor for the family feature
this adds a property descriptor for the activity type feature
this adds a property descriptor for the component definition feature
registers a problem with a result type
passing the focus request to the viewers control
this adds a property descriptor for the receivers feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the field type feature
this adds a property descriptor for the component definition id feature
this adds a property descriptor for the label feature
this adds a property descriptor for the label feature
this adds a property descriptor for the name feature
this adds a property descriptor for the discovery url feature
this adds a property descriptor for the data type feature
this adds a property descriptor for the value feature
this adds a property descriptor for the label feature
this adds a property descriptor for the depth feature
this adds a property descriptor for the value feature
this adds a property descriptor for the activitiy feature
this adds a property descriptor for the title feature
this adds a property descriptor for the uri feature
this adds a property descriptor for the label feature
this adds a property descriptor for the original component definition feature
this adds a property descriptor for the description feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the name feature
this adds a property descriptor for the desired depth feature
this adds a property descriptor for the port feature
this adds a property descriptor for the label feature
this adds a property descriptor for the description feature
this adds a property descriptor for the required feature
this adds a property descriptor for the fixed feature
this adds a property descriptor for the granular depth feature
this adds a property descriptor for the hidden feature
this adds a property descriptor for the constrained to options feature
this adds a property descriptor for the examples feature
find the group within the specified list of components
clear the list of tags
add a list of tags to this set
signals that the search has completed
returns true if the given object is a tag with the same name
returns true if the filter is suitable for filtering
clears the search results
compares this tag to another object
sets the selected foreground
retrieves a bio catalogue object from the database
compare two resources
return true if the mime type is taverna workflow
returns true if the item has an uploader
get the uploader of the feed or null if not available
returns code true code if this item has a creator
get the creator of this item
returns true if this item has the admin
get the admin of the item
is this item favouritable
returns true if this user is favourites by the given user
returns true if this item can be commentable on its item
returns true if the item is downloadable
return true if this item can be downloaded
returns if the item has a visible type
this method returns an instance of the specified experiment
delete a user agent
fetches all the tagged items in this element
this method extracts all tag information from a tag list and
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates figure for this edit part
creates a new adapter for an object of class
creates figure for this edit part
returns the pojo attribute value of the given pojo attribute name
returns the pojo attribute created by the pojo attribute node
sets the value of field email
sets the value of field full name
sets the value of field public password
sets the value of field current vp
sets the value of field last login
sets the value of field vptutor
reset all properties to their default values
returns the checksum value for this entry
returns the label of this transition
returns a collection of supported locales
reset all properties to their default values
resets all properties to their default values
acquire the collection of membership groups for the user
acquires all pods from this collection
returns value of property with given key
returns the name of the named object
returns a string representation of this object
generates the schema and export statements
execute the task
fetches all blogs
creates the field editors
returns the next pseudorandom uniformly distributed
get the next random double in the distribution
returns a string representation of this instance
clone the poisson
get the next int from the input
returns the next pseudorandom uniformly distributed
returns the probability distribution function
returns a string representation of this object
returns a string representation of this object
returns a random integer between 0 and 1 inclusive
returns a string representation of this object
clones this random sampler
returns a string representation of this object
clones this object
returns a clone of this random sampling assistant
returns the used random generator
standard override no change in semantics
returns the next random integer
return a string representation of this object
returns the next pseudorandom uniformly distributed
returns a clone of this object
returns the next pseudorandom uniformly distributed
returns the probability distribution function
returns a string representation of this object
returns the next pseudorandom uniformly distributed
returns a string representation of this object
returns the next pseudorandom uniformly distributed
returns a string representation of this object
creates a clone of this empirical
returns the next pseudorandom uniformly distributed
returns a string representation of this object
returns a string representation of this object
returns the next integer
return a string representation of this object
returns a clone of the object
returns a clone of this object
returns the used random generator
sets the random generator used by this service
get the next double from the distribution
returns a string representation of this operation
returns the next pseudorandom uniformly distributed
returns the next pseudorandom uniformly distributed
returns a string representation of this instance
returns the next pseudorandom uniformly distributed
returns a clone of this object
returns a random number from the distribution bypasses the internal
override set random generator to clear the cache
returns a string representation of this standard deviation
returns a random integer
returns the probability distribution function
returns the area from zero to tt x tt under the beta density
returns the probability distribution function
sets the value of n and p
returns the area under the right hand tail from tt x tt to
returns a string representation of this object
clears the buffer
clones this estimator
called after a node has collapsed
clones this object
returns a deep copy of this double buffer set
creates a clone of this probabilistic distribution
applies a procedure to each element of the receiver if any
fills the buffer with a new one
applies a procedure to each element of the receiver if any
called after a node has collapsed
returns true if the next element was read
returns a string representation of this object
returns the memory state of this memory source as a string
returns a clone of this code double finder code
applies a procedure to each element of the receiver if any
computes the specified quantile elements over the values previously
returns a deep copy of this double buffer
returns the memory state of this memory source as a string
returns true if the array contains no values
checks if the value set is full
sorts the data
returns a string representation of the object
returns the modified bessel function of order 0 of the argument
returns the exponentially scaled modified bessel function of order 0 of
returns the modified bessel function of order 1 of the argument
returns the modified bessel function of order 0 of the third
returns the exponentially scaled modified bessel function of order 0 of
returns the modified bessel function of order 1 of the third
performs a logical b and b of the receiver with another bit matrix
returns the exponentially scaled modified bessel function of order 1 of
creates a new bit vector with the given elements
clones the matrix
applies the given function to each cell and aggregates the results
logically ands this bit vector with the specified bit vector
compares two matrices for equality
replaces the current matrix with the given values
replaces all cell values of the receiver with the values of another matrix
returns the hash code value for this bit vector
clones the vector
sets all cells to the state specified by tt value tt
returns the number of cells having non zero values ignores tolerance
compares this object against the specified object
returns whether this is a view
returns a string representation of the bit vector
returns the element at the specified position in the list
returns tt true tt if both matrices share at least one identical cell
assigns the source matrix and the corresponding shape
sets the element at the specified position without doing any bounds
returns the matrix cell value at coordinate tt slice row column tt
this method is called by all the constructors to set up the
returns tt true tt if both matrices share at least one identical cell
construct and returns a new selection view
returns the matrix cell value at coordinate tt index tt
returns the matrix cell value at coordinate tt slice row column tt
sets the value at the specified index
constructs and returns a new i flip view i
returns tt true tt if both matrices share at least one identical cell
constructs and returns a new selection view
returns the matrix cell value at coordinate tt slice row column tt
constructs and returns a new selection view
returns tt true tt if both matrices share at least one identical cell
construct and returns a new selection view
returns the element at the specified position in the list
returns tt true tt if both matrices share at least one identical cell
self modifying version of set up
sets the element at the specified position without doing any optional
sets the values of the matrix for thi axis and axis1 and
construct and returns a new selection view
assigns the given values to this matrix
replaces all elements of this matrix with the given value
returns a string representation of this matrix
construct and returns a new selection view
returns the matrix cell value at coordinate tt row column tt
returns tt true tt if both matrices share at least one identical cell
returns the element at the specified position in the receiver
returns the number of slices in this stack
self modifying version of set up
frees the view of this matrix when the matrix is built
sets the element at the specified position without doing any bounds
self modifying version of view row flip
construct and returns a new selection view
copies a slice of the list into an array
returns the matrix cell value at coordinate tt index tt
sets the matrix cell at coordinate tt index tt to the specified value
assigns the given value to this matrix
returns the matrix cell value at coordinate tt row column tt
replaces each element with the results of applying the given
returns the sum of all the elements of the dataset
returns the matrix cell value at coordinate tt row column tt
returns the matrix cell value at coordinate tt slice row column tt
returns tt true tt if both matrices share at least one identical cell
construct and returns a new selection view
assigns the given values to each cell in the matrix
construct and returns a new selection view
replaces the column values of the matrix by the given value
returns tt true tt if both matrices share at least one identical cell
assigns a value to each element of the matrix
returns the matrix cell value at coordinate tt row column tt
returns a string representation of the bit set
applies the procedure to each cell in the matrix
returns the element at the specified position in the receiver
returns the value at the specified row and column
assigns a value to each element of the matrix
construct and returns a new selection view
sets the element at the specified position without doing any optional
returns the element at the specified position in the receiver
returns tt true tt if both matrices share at least one identical cell
sets the element at the specified position without doing any bounds
construct and returns a new selection view
assigns the given value to this matrix
construct and returns a new selection view
returns the number of rows and columns in this code row set code
returns the matrix cell value at coordinate tt slice row column tt
assigns the result of a matrix to a cell
returns the matrix cell value at coordinate tt slice row column tt
sets all cells to the state specified by the given values
returns the element at the specified position in the list
returns tt true tt if both matrices share at least one identical cell
constructs and returns a new selection view
construct and returns a new selection view
returns the sum of all the cells
returns the element at the specified position in the receiver
returns the element at the specified position in the list
returns the matrix cell value at coordinate tt row column tt
sets the element at the specified position without doing any bounds
sets the element at the specified position without doing any bounds
copies the array into the specified array
sets the element at the specified position without doing any optional
construct and returns a new selection view
assigns a value to each cell in the matrix
constructs and returns a new i flip view i along the column axis
returns the matrix cell value at coordinate tt slice row column tt
returns the matrix cell value at coordinate tt slice row column tt
returns tt true tt if both matrices share at least one identical cell
returns the matrix cell value at coordinate tt row column tt
sanity check for operations requiring two arrays to be equal
construct and returns a new selection view
construct and returns a new selection view
returns the matrix cell value at coordinate tt row column tt
constructs and returns a new i flip view i along the row axis
assigns the values in this matrix
construct and returns a new selection view
returns the matrix cell value at coordinate tt row column tt
returns the matrix cell value at coordinate tt row column tt
returns tt true tt if both matrices share at least one identical cell
constructs and returns a new i selection view i that is a matrix
construct and returns a new selection view
constructs and returns a new selection view
constructs a matrix which is the concatenation of all given parts
constructs and returns a new selection view
constructs a matrix with cells having ascending values
constructs a matrix from the values of the given list
c a a
applies a function to each cell and aggregates the results
constructs a matrix with cells having ascending values
constructs a matrix with uniformly distributed values in tt 0 1 tt
assigns the given value to all cells in this matrix
applies a function to each element of the matrix
replaces all cell values of this matrix with the values of another matrix
replaces the cells in the receiver with the values in the specified
assigns the given value to each cell in the matrix
returns the number of cells having non zero values ignores tolerance
sorts the vector into ascending order according to the i natural
returns whether all cells are equal to the given value
constructs a matrix with the given shape each cell initialized with
returns whether this object is equal to another object
returns a string representation of the given matrix
constructs a matrix with uniformly distributed values in tt 0 1 tt
returns whether this object is equal to another object
converts a given cell to a string no alignment considered
returns a string representation of the given matrix
returns a string representation of the given matrix
sorts the vector into ascending order according to the i natural
converts this object to a string
swaps each element tt this i tt with tt other i tt
constructs a matrix with cells having ascending values
constructs a matrix which is the concatenation of all given parts
applies a function to each cell and aggregates the results
constructs a matrix from the values of the given list
constructs a matrix with uniformly distributed values in tt 0 1 tt
c a a
replaces the current matrix with the given values
applies the given function to each element of the receiver if any
sets all cells to the state specified by the given values
replaces all cell values of the receiver with the values of another matrix
sets all cells to the state specified by tt value tt
sorts the vector into ascending order according to the i natural
applies a procedure to each element of the receiver if any
returns whether this object is equal to another object
swaps each element tt this tt with tt other tt
fills the receiver with the specified values
applies a function to each cell and aggregates the results
returns the sum of all cells tt sum x i j k tt
sorts the vector into ascending order according to the i natural
replaces all cell values of the given matrix3 d with this
applies a procedure to each element of the matrix
applies a procedure to each element of the receiver if any
assigns the given value to all cells in this matrix
applies a procedure to each coordinate if any
returns the number of cells having non zero values ignores tolerance
returns the lower triangular factor tt l tt
applies a procedure to each element of the matrix
returns the string representation of this type
returns the householder vectors tt h tt
returns the upper triangular factor tt r tt
checks whether the given matrix tt a tt is i rectangular i
linear algebraic matrix vector multiplication tt z a y tt
checks whether the given matrix tt a tt is i square i
returns the determinant tt det a tt
applies the procedure to each element of the matrix
returns the diagonal matrix tt s tt
returns the upper triangular factor tt u tt
sets the tolerance to tt math
constructs and returns the cholesky decomposition of the given matrix
returns a clone of this object
decompose the input matrix into two eigenvalues
returns the inverse or pseudo inverse of matrix tt a tt
constructs and returns the lu decomposition of the given matrix
appends the specified element to the end of this vector
add an element to the end of the list
inserts the specified element before the specified position into this
inserts the specified element before the specified position into the
searches the receiver for the specified value using the binary search
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt double array list tt instance
returns a shallow copy of this tt int array list tt instance
inserts the given number of dummies before the entry at the given index
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
returns a shallow copy of this part
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
reverse the order of the elements in the matrix
trims the capacity of this vector to be the vectors current
returns the property that this property descriptor describes
reverse the order of the elements in this set
construct a qr decomposition of the given matrix
appends the specified element to the end of this list
inserts the specified element before the specified position into this
returns a shallow copy of this tt boolean array list tt instance
solves a x b
appends the specified element to the end of this list
inserts the specified element before the specified position into this
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt char array list tt instance
applies a procedure to each element of the receiver if any
sorts the receiver according to the order induced by the specified
copies the columns of the indicated rows into a new sub matrix
returns the boolean value at the specified index
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
applies a procedure to each element of the receiver if any
sorts the receiver according to the order induced by the specified
returns the element at the specified position in this list
sorts the receiver according to the order induced by the specified
performs svd on this matrix and gets the singular value decomposition
returns the index of the first occurrence of the specified element
sorts the receiver according to the order induced by the specified
returns the index of the last occurrence of the specified element
reverse the order of the elements in this vector
quick sort is a function that does not change the size of the
removes a range of values from the list
sort a slice of the list ascending using the sun quicksort
reverse the order of the elements in this set
appends the specified element to the end of this list
inserts the specified element before the specified position into this
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt long array list tt instance
modifies the matrix to be a lower trapezoidal matrix
reverses the order of the elements in the specified array
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
returns the index of the first occurrence of the specified element
linear algebraic matrix power
reverses the order of the elements in the specified array
returns the index of the last occurrence of the specified element
reverse the order of the elements in this set
returns a string representation of this vector
removes all elements from this list
inserts the specified element at the specified position in this list
get a specific object from the list
removes the element at the specified position in this list optional
returns the number of elements in this list
inserts the specified element at the specified position in this list
gets an object
add a new element to the end of the list
removes a range of values from the list
sorts the receiver according to the order induced by the specified
sets the size of this element
trims the capacity of this vector to be the vectors current size
appends the specified element to the end of this list
inserts the specified element before the specified position into the
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt short array list tt instance
sort a slice of the list ascending using the sun quicksort
sorts the receiver according to the order induced by the specified
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
sorts the receiver according to the order induced by the specified
reverse the order of the elements in this set
reverses the order of the elements in the specified array
reverses the order of the elements in the receiver
reverses the order of the elements in the receiver
sorts the receiver according to the order induced by the specified
sorts the receiver according to the order induced by the specified
reverses the order of the elements in the specified array
sorts the receiver according to the order induced by the specified
adds the specified element to this set if it is not already present
sorts the receiver according to the order induced by the specified
sets the size of this component to code new size code
this method is called by set up to set all bits per entry
trims the capacity of this tt bit vector tt instance to be the
appends the specified element to the end of this list
appends the specified element to the end of this list
inserts the specified element before the specified position into this
inserts the specified element before the specified position into this
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt float array list tt instance
searches the receiver for the specified value using the binary search
returns a shallow copy of this tt byte array list tt instance
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
returns the index of the first occurrence of the specified element
inserts the given number of elements before the receiver is
returns the index of the last occurrence of the specified element
reverses the order of the elements in the specified array
applies a procedure to each element of the receiver if any
returns the element at the specified position in this list
reverse the order of the elements in the matrix
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
reverse the order of the elements in this set
sorts the approximately using a sort estimate based on the starting and ending
removes all key value associations from the receiver
returns a deep copy of this object
compares this map with another map for equality of their stored
applies a procedure to each key value pair of the receiver if any
returns the value associated with the specified key
compares the specified object with this map for equality
sorts the receiver according to the order induced by the specified
fills all pairs satisfying a given condition into the specified lists
fills all pairs satisfying a given condition into the specified lists
sorts the receiver according to the order induced by the specified
fills all pairs satisfying a given condition into the specified lists
fills all values contained in the receiver into the specified list
returns a deep copy of this object
executes tt procedure tt for each key in the map
applies a procedure to each key value pair of the receiver if any
creates a string representation of the object
compares this map with another map for equality of their stored
fills all keys contained in the receiver into the specified list
removes all key value associations from the receiver
returns a deep copy of this code double hash map code instance
returns tt true tt if this list contains the specified key
fills all pairs satisfying a given condition into the specified lists
returns true if the array contains the specified value
applies a procedure to each key value pair of the receiver if any
applies a procedure to each key value pair of the receiver if any
returns the value associated with the specified key
fills all pairs satisfying a given condition into the specified lists
returns the first key the given value is associated with
fills all keys contained in the receiver into the specified list
reverses the order of the elements in the specified array
returns a string representation of the receiver containing
returns a deep copy of this object
sorts the array according to the order induced by the specified
fills all pairs satisfying a given condition into the specified lists
removes the given key with its associated element from the receiver if present
applies a procedure to each key value pair of the receiver if any
returns the value associated with the specified key
fills all values contained in the receiver into the specified list
compares the specified object with this map for equality
returns the first key the given value is associated with
sorts the receiver according to the order induced by the specified
compares the specified object with this map for equality
fills all pairs satisfying a given condition into the specified lists
removes all key value associations from the receiver
fills all pairs satisfying a given condition into the specified lists
returns a deep copy of this object
removes a range of values from the list
applies a procedure to each key value pair of the receiver if any
returns the value associated with the specified key
returns a string representation of the receiver containing
returns the first key the given value is associated with
returns the elapsed time since the last call to
returns a clone of this code node list code
fills all pairs satisfying a given condition into the specified lists
retrieves the duration in minutes
get the seconds elapsed since the beginning of the time
starts the timer
stops the timer
returns a string representation of the elapsed time
removes the given key with its associated element from the receiver if present
announce a change in file
announce the update
reverses the order of the elements
set the number of files
set the file length
returns true if this task has a run false otherwise
get the aggregator for the specified row
set the aggregator at the given row
add an aggregator to the table
remove an aggregator from the table
finalizes the feature vector
init agg list
find the helpset file and create a help set object
shows the encoding selector
writes the values of the xml header
returns a short description of the feature
writes the values arff header
applies gain to the currently selected recording
set the data model
execute the command
set the files to be saved
normalize the samples in the audio sample buffer
destination of the packet to be written to
stops playback on the current thread
sets the attributes
raw string for the column from the foreign key
pka specific foreign key to entity relationship
receive notification of the beginning of a document
called when parsing is finished
sets the destination fv attribute of the dbspectrum object
receive notification of the beginning of a document
returns the normalise
sets the normalise
returns the output type
this method will restore the audio samples to the saved file
setter for property output type
gets the value of the overall property
cancels the stop recording
sets the overall
returns true if per window mode is set
save the current audio data to the file
sets the per window value for this tcirdna result
gets the sampling rate
updates the recording information
sets the sampling rate
sets the window size
sets the recording
get an element from the list
set an element to a specific value
method get feature definition
get the data model
create an exact copy
get a clone of this code compactness code
returns a copy of this log constant
set the current window
get the element at the given index
sets the string at the specified index
clones this spectral centroid
returns a clone of this object
returns a clone of this code constant q code
clones this spectrum
returns the element at the given index
get the feature definition
set an element in the constant pool
returns the value of the element at the specified index
pas implementer completement
clones this object
sets an attribute
opens the edit dialog
sets the window size
setter for property parent
sets the length of the current window
create a copy of this
returns the element at the given index
sets the window to a new value
set the current window
create a copy of the histogram
get the element at the given index
pas implementer completement
sets the window type of the moments at the given index
returns a clone of this object
sets the window number
clone this strongest frequency via a deep copy
sets the window polynomial of the main window
get an element from the group
pas implementer completement
get a element from the polynomial
creates and returns a copy of this object
clone this object
method clone
method get feature definition
get the indexth element from the peak list
set the string value of a specific peak
creates and returns a copy of this lpc
create a copy of this object
create a copy of this peak finder
returns the element at the given index
clone this fftbin frequencies
creates a copy of this spectral rolloff point
clones this instance
sets the value of an element
get a clone of this code zero crossings code
returns cutoff for a given index
clone this mfcc object
sets cutoff for a given element
sets the number of dimensions of this feature type
set the cutoff
set the lambda value
pas implementer completement
create an exact copy
chains the given meta feature factory to this one
this method sets the window number of the current window
returns the element at the specified index
sets the number of dimensions
sets the window width
create an exact copy
sets the string value at the given index
returns the element at the given index
get an element from the sample
set the bin number for this histogram
sets an element
returns the element at the given index
clone this object
sets an element of the histogram
clone this object
clones this spectrum
create a copy of this object
returns the feature definition of the given name and attributes
returns the aggregator definition
initializes the finite state machine
this method is not implemented
output the result entries to the specified output stream
returns the number of concrete aggregators produced
adds an aggregator to the feature list
adds a feature to the extractor
add a feature to the repository
aggregates the values in the aggregator list
output the data in the ace value list
output arff header entries
output the data
runs the thread
invoked when an action occurs
hides the dialog
save the boxes
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes active agg list
returns the aggregator used by this action
sets the aggregator associated with this file
returns true if the user has edited the project
this method initializes agg list
this method initializes button panel
this method initializes agg remove
this method initializes description
this method initializes cancel
this method initializes done button
this method initializes description text
this method initializes abort
handle action events from the done button
this method initializes feature chooser
this method initializes chosen features
this method initializes chosen field table
this method initializes feature controls
this method initializes feature list
this method initializes feature list table
invoked when an action occurs
changes the indeci
returns the number of rows in the model
this method initializes remove feature
returns the number of columns in the model
returns the name of the column at code column index code
returns true if the cell at row index and column index is editable
returns the value for the cell at code column index code and
this method initializes chosen feature panel
sets the value in the cell at code column index code and
adds a listener to the list that is notified each time a change
removes a listener from the list that is notified each time a change
this method initializes feature list panel
resets the finite state machine
called to initialize the table
removes all agg data objects from the bag
returns the aggregator for the specified row
assumes column is preffered and column is acknowledged
this method is called when the user clicks on the
not implemented yet
sets the table
handles the event of a button press
sets the updater for this component
handles actions on the gui controls
set the target to the given array of sampling rates
get the selected index
returns the sampling rate
sets the jtable for this frame
set the sampling rate with index i
called by the event system when a button is pressed
opens the midi frame
creates and displays anesis frame
sets the jtable for this recordings table
sets the model attribute of the demo class info object
returns the output type
set the table
invoked when an action occurs
get the type of output this code output code represents
stop the playback
sets the output type to either selected or deselected
sets the selected items to the given values
creates a new recording frame
starts a new execution thread for each batch of execution
opens the global window
sets the model controller
set the path of the foreign key text area
set the number of files
this method handles the events associated with the buttons
delete the selected recordings
clear all measures
checks if this bin1 d equals the object provided
compares this bin to another
returns the product of this vector and another
resets all measures
returns true if the two objects are equal
returns the maximum order for sum of powers
stop the playback
generates a string representation of the given code quantile code
returns the minimum order for powers
returns an array list of strings with the quantiles of each
creates a hamming window
interrupt all threads when the thread is terminated
start stats on the current task
assertion is basic parameters valid true
assertion is basic parameters valid false
this function calculates the statistics for the current game
p callback method that is called whenever a page is navigated to
p callback method that is called after rendering is completed for
p callback method that is called after rendering is completed for
p callback method that is called just before rendering takes place
p callback method that is called after rendering is completed for
p callback method that is called after rendering is completed for
adds a hit to the list of hits for this query
removes a hit from the list of hits by its cc hit
removes all hits for a given member
returns the hit object for a given hit id
returns if the hit id matches the given hit id
this method filters the publication relations
gets the value of the pub id property
filter the publication mappings by their own h1
filter out all low score entries that do not have a score
take the best hit set for all concepts and add them to the
delete the file
getter method for delete
add a chemical name to the list of chemicals this reference refers to
gets the name of the test case
write a collection of concepts to the file
returns the current version of this plugin
returns the accession string
returns true if ambiguous methods are allowed
getter for property cv
returns whether this module requires indexed graphs
print the path to the output stream
sets the identifier of the resource
returns the tag of this object
returns the name of the command in case sensitive fashion
returns the current version of this plugin
returns the name of the function
adds an accession to this object
fill ec number
returns the current version of this plugin
returns the number of the tokens in a string
gets the highest term of the tupel
returns true if the protein is in the registry
adds a protein and its internal id to the protein registry
get the protein id
adds a gene to the gene registry
returns the gene id of the specified gene
returns true if chromosome id is in this chromosome set
adds a chromosome to the registry
get the specified chromosome
starts the server
get the graph
adds a citation to the node
copies data from one context to another
returns the next node in the iteration
add a protein to this sequence
clears the cache of all cached nodes
add a pathway to the list of links
adds a gets cat by
sets the super path way
fix the element type
populates the given mapping file
add the description of the element
add a sequence organism to the dataset
adds an organism to the current set of organism
find the given cv in the graph
get the data source for the graph
copies context from another
get the md of the album
writes out a indentation
returns a concept class given a key
returns the next path
reset the cursor to the start of the window
search for longest concept paths
add the path node and its parent to the path list
add a publications
adds a db link to the internal database
get the value of a key
prints the number of pfam mappings
add an accession to this class
determine if the given accession number should be filtered
setup the filters
compares this object with the specified object for order
compare two inparalog
returns the name of the panel
returns the version of the module
returns the name of the component
returns the version of this plugin
assigns a gene id to a concept
adds a collection of accessions to this policy
adds an annotation to the list of annotation descriptors
assign a treatment id to a concept
adds a set of names to the list
sets the id of this node
checks if a dra entity has a key
adds a key to the collection
sets the key
gets the value of the concept class property
sets the fully qualified name of the class to be loaded
copies context from another ondexconcept to this one
composes a boolean
composes a number
composes an object
composes a string into its clause
decides which clause is to be used for compose
get the local name for the ondexconcept
quotes a string if needed
copies a file from one location to another
this method parses the string and returns the appropriate decompose object
get the source ondex concept for a full name
get the target ondex concept either from the full name or from
creates an ondexconcept for the given index
parses the given file
write notes in xml format
get id of cds
returns true if the cds id is in the registry
add a cds id to the registry
returns whether the given gene id is in the registry
returns true if chromosome id is in this chromosome set
adds a chromosome to the registry
returns the chromosome id associated with the given chromosome
logs an inconsistency event
returns the y value with the correct format
returns the deeper concept of two classes
concatenates a string with a delimiter
checks if the given object is a valid argument for this plugin
tests if the given boolean is in the log
add the path node and its parent to a list of nodes
log an info message
pretty ondexconcept returns a pretty printed string
build string for go
get the file name
returns the current version of this plugin
returns the name of the import routine
returns the current version of this plugin
returns true if the indexed graph must be used for drawing
returns db object id
returns the go id
get the aspect
returns the database object type
returns the assigned by
returns the text of the string
adds an alternate id to this note
adds a reference to the list of references
add a synonyms to the symbol table
returns the name of the command in case sensitive fashion
sets the references to the definitions of the external representation
returns the version of this object
calculate the log likelihood of this node
recursively clones the subtree
set this cluster parent
get the parent cluster
gets the child at the specified index
creates a key from a node
return the standard deviation of the data
sets the child at index
registers the given code dendrogram code with the graph
refreshes the list of leaves
this method is called in response to the search filter phase
returns the number of consensus clusters
returns true if the receiver is a leaf
gets the number of feeds
getter for property key
find the instance of a method with a given pvalue
returns the sibling of the given node
this function will replace one node with another
returns a copy of this node which is not connected to any
set the leaves list
builds output node
computes the theta e node n and sets it to the dummy node n
get the name of the filter
returns the version of the module
returns the name of the component
returns the current version of this plugin
this method returns the name of the version
returns a random index within the array of used concepts
returns the current version of this plugin
this method returns the name of the parser
returns a random left right
returns the encoding gene
add a catalysation molecule
sets the encoding gene
sets the sequence
add a molecule to the list of molecules
sets the species
add a new molecules to the list of inhibition molecules
adds a unit to the list of subunit
sets the authors
add a molecule to the output set
sets the source
adds a database link entry
adds an alternative accession to this object
returns the relation type with the given name
adds a synonyms to the list of synonyms
adds a publication to the list of publications
parses a line
parses a line
parses the type information from a line
adds an alternative accession to this object
sets the matrix
adds a database link to the list
add a synonym to the list of synonyms
parses gen acc tag from the line of the file
adds a publication to the list of publications
parse the potential binding site acc from the line
parse an encoded factor out of line
sets the location of the chromosomal
sets the regulation
make transfac url
sets the sequence to match
this method is called when a factor is interacting
adds a regulated genome to the list of regulated genes
adds a matrix to the internal matrix list
returns the name of this scientific species
returns the version of this object
returns the name of the component
returns the version of this object
sets the element id
gets the value of the element id1 property
sets the target id value for this job ticket
sets the entry id1 value for this wsyetki kullanici
sets the element id1
sets the entry id2 value for this wsbirimler
set the endpoint address for the specified port name
sets the query nodes
set the components
sets the number of target nodes
gets the value of the element id2 property
sets the element id2
sets the subtypes value for this keggapi subtype
sets the entry id value for this ws database entry
sets the genes id1 value for this wsyetki kullanici
sets the genes id2 value for this wsyetki kullanici
gets the sw score
sets the sw score
sets the motif id value for this wsyetki kullanici
gets the value of the bit score property
sets the genes id value for this wsyetki kullanici
create all the accessions that have an accession
sets the bit score
add the names of the concepts from the pathway element
sets the evalue
setter for property identity
sets the overlap
returns the start position of the first result
sets the start position1
returns the end position of the first inner type
sets the end position1
returns the start position of the first result
sets the start position
returns the end position of the first inner type
sets up parameters for the test
sets the end position2
returns the element of
sets the element of
get the graphical x coordinate of the last point
setter for code graphical x code
query whether this ring is on the 1st or 1 to2
get graphical y
setter for property graphical y
set best flag 1 to2
sets the id of the user
getter for property of type fk
search for a concept with the given name
the string representation of the foreign key for the association between
query flag 2 to1
get the kgmlregex pattern from the kegg genie representation
the best flag 2 to1
sets the definition1 value for this wsyetki kullanici
sets the definition2 value for this wsyetki kullanici
returns the length1 length of the text
set the length of the remote block
get the length2 length of the remote block
set the length of the remote block
returns the key
return the concept fk
returns the concept accession
raw string representation of the sequence type foreign key
the setter for the relation
set the string representation of the sequence type foreign key
sets the ambiguous flag
sets the element of
add a concept to the context
is this concept written
the code get from concept code method here
gets the id
for backward compatibility the id of the relation type
returns true if the concept parser idis written
the code to concept code method here
returns the mdl mol file of this file
returns true if this context is a self context
search for a concept with the given name
sets the mol file name
sets the structures
returns the concept
checks if a string is null or empty
extracts the ec number part of the concept name
register a new component parser in the registry
returns a descriptive name for the plug in
version number as a 6 digit number
p cleans up the instance
returns the name of the parser
returns the name of the parser
set the value of cancelled
returns the name of the parser
sets the names of attributes that should not be processed
returns a descriptive name for the plug in
checks if the id contains spaces
returns true if the given name is an ubiquitous concept name
returns the name of the filter
a method for the is ubiquitous concept name
returns the version of this object
returns the next path in the path
searches for concept relation concept
create relations between the two maps
starts the thread
enqueues the given array in the producer
this method returns the ondexconcept neighbour to the given concept
convenience function for logging an event
returns the number of genes in the list
resets the state of this node
this method checks the given object
record if the value is valid
get last id for concepts
returns the concept mapped to the given index
get the relation object for the specified index
returns the number of edges in the set
returns the number of nodes in the set
returns a descriptive name for the plug in
returns a concept prototype instance for a given prototype name
returns the name of this parser
returns the name of the parser
returns the current version of this plugin
compares this hmmmatch to another
compute the longest sequence that can be seen through the query sequence
returns the smallest sequence coverage of the query sequence
coverage of query sequence
compute the geographic sequence coverage
indexes all the members of the collection according to
the key function record map
initializes the error rates map and initializes the error rates
adds a set of nodes to this graph
returns the second value of the pair
adds all the nodes and edges to this graph
checks if a node with the given id exists in this graph
lazily initializes the graph index map
returns true if the graph contains the given edge
updates the counters for each edge in the set
create a sample set of error rates for all the network
samples the intermediate graph
gets the it fall back
returns true if sequences should be parsed
returns the lookup file
process command line arguments
get the lookup file reader
write the probs to a file
returns the name of the algorithm
returns the version number of this plugin
gets the name of the concept caster
returns the current version of this plugin
returns the name of the command in case sensitive fashion
parses the given file and returns the properties object
returns the current version of this plugin
returns the name of the command in case sensitive fashion
returns the current version of this plugin
gets the name of the test case
returns the name of the component
returns the current version of this plugin
returns the current version of this plugin
gets the name of the context copier
prints the values
set the print stream to which log entries will be written
flush the output stream
convert an attribute to a color string
select an xml fo system for hist as in a
returns a gds name based on the shape id
the name of this filter
returns the name of the rule
returns the version of this device
returns the version of this object
returns the name of the component
returns the version of this object
the directory in which the concept is located
gets the name of the filter
returns the name of the filter
returns the current version of this plugin
register a concept and register it
this method creates a new ondexconcept and registers it
returns the name of the filter
gets the name of the filter
returns the current version of this plugin
returns the name of the filter
returns the current version of this plugin
returns the current version of this plugin
get the i j i th element of the matrix
change the matrix element at position i j
returns a unique key for the given values
this method suggests a new instance of this type
sets the ith element of the matrix to v
get the term of a psimi
returns the name of the filter
returns the name of the filter
returns weight of the current attribute
returns the current version of this plugin
returns the current version of this plugin
is this a psimiref jdbc reference type
method that applies a transformation on the graph
starts the plugin
parses the given text and returns the links found in the
retrieves the opposite concept from concept
get weight ondexrelation
method used to trace back a path
write a warning that the evidence type is missing
generates a warning that the input could not be parsed
sets the species map
get the ncbitax id from the tax id
returns the gramene gene concept id for a gene accession
returns the gramene gene concept id for a gene
get the ncbitax id from the database
get the accession reference for the specified id
this method is called from the user selects the taverna home
sets the given string as this parameter
sets the location of the taverna executable
sets the array of strings to the given array of values
adds a change listener to this component
start the process
destroys the process
sets the data viewer home
get run information
return true if the taverna home has been set
sets the uri for the input data
get the value of data viewer home
gets the output of the process
start a new workflow workflow uri to the uri of the selected workflow
sets the input file to be processed
check whether the character or digit is not valid
return true if this object has a value
returns true if this argument needs inputs false otherwise
do any cleanup necessary to delete the files used by the
adds a listener to be notified when the packet is sent
notify all listeners that an event occurred
compare two attributes for equality
checks if two potential accessions are equal
compare two attributes for equality
compares two names
forwards an event to all registered listeners
returns the concept class with the given id
returns the relation type with the given id if it exists
returns the data source with the given id
this method verifies that there is an evidence type with the given id
returns the attribute name with the given id
returns the unit with the given id
forwards the event to the event handler
scans the zip file for classes
a plugin should be loaded from the server
a filter was loaded from the cache
loads a mapping from a plugin
a plugin should have a parser installed for it
load a transformation
the load method will load the class with the name classname
add a plugin to the registry
check if a given argument exists
checks whether the given argument exists in the list
returns the number of values for the given argument
returns the unique value for the given name
retrieves the directory for files generated by the
returns the arguments object passed to the constructor
removes a listener from the list of listeners
notify all listeners that an event occurred
notify all listeners that an event occurred
creates a file object for the given file name and url
returns true if this is a required argument
returns true if multiple instances of this repository can be used
delete the test directory
checks if the given object is a valid argument for this plugin
recursively delete a file or directory
returns the lower limit of the range
returns the upper limit of the range
parse the boolean argument
downloads a url into a file
parse a string
checks if the given argument is a valid argument for this plugin
checks if the given argument is a valid argument for this plugin
parses the specified argument into a string
parses an integer
sets the is directory
returns the pre existing
sets the pre existing
parses a string
notify all listeners that an event occurred
get the parent
delete from database
get the parent of the node
returns the parent of the content
returns the score on a given entity
initializes the code rs direction matrix code
gets the id of the last concept that this class is mapped to
gets the id of the last relation in the database
resets the buffer to the position specified
throw the exception if there is one
returns the throwable caught during the last compile
add a concept to the concept list
add a relation to the list of relations
remove a concept from the concept list
inserts the data into the database with the given key
copy all objects
remove a relation from the manager
removes all relations between this and the given subgraph
this method is responsible for cloneing a concept
inserts a key into the dup database if it exists
clean up the resources
difference between concept and concept
closes the index
add a set of concepts to this view
add a set of relations to this ondexquery
add an incoming relation type to the node
add an outgoing relation to this node
adds a relation to the graph
adds tag ondexconcept
shutdown the thread pool immediately
get the value of og
performs a search on the concept
search using the ondexconcept
adds a new concept class constraint to this
method to add a data source constraint for the current concept
adds a new relation type constraint to the specified depth
adds a new finish state to this machines active states
checks if the start and finish states are set
calculates the relative rank of the distribution after evaluation
remove a concept from the index
returns the order of the symbols when comparing their words
getter for property modulus values
get the term for the given go term id creates a new go term
parses an id from a string
add a go term to the list of parents
the private initialization method
get the number of entries in the map
get the go term with the id in the list of all interactions
returns the shortest depth of a given entry
returns the shortest depth of the go term with the shortest depth of
calculate the distance between two terms
get the distance between two terms
sets the domain
sets the parents vector
get the domain of a particular go term
computes the trace of the term search term s
removes a relation from the index
returns true if there are more elements in the queue
returns the parent node of this node
considers a closed path
removes the node from the queue and returns it
returns the log information content for a specific go
get the evaluation for a given feature and difference
gets the evaluation
removes the relations from index
compares ondexconcept objects by their base name
notify all listeners that have registered interest for
register a listener for all events generated by this component
removes an code event listener code from the list of listeners
calculates precision ondexconcept for two data points
returns true if a class is registered for this class loader
returns the message that has been printed
returns the log4j level
calculates recall ondexconcept
set the log4j level for this logger
sets the ondexgraph instance variable
calculate the score for the ondexconcept
forwards an event to all registered listeners
gets the value of the is preferred property
sets the is preferred value for this field
specialisation of getter for property
setter for property specialisation of
sets the from id
returns the rt id
returns true if the entity is antisymmetric
sets whether the unit is antisymmetric
returns true if the predicate is reflexive
sets the is reflexive
gets the transitiv attribute of the meta data object
sets the transitiv attribute of the meta data object
get wsdata source element of
set the value related to the column element of
returns true if this is an ambiguous rule
sets the is ambiguous
gets the value of the from concept id property
get the name of the from concept
sets the from concept id value for this news
set the from concept name
gets the to concept id value for this related code
get the to concept name
sets the to concept id value for this travel data
set the to concept name
notify all listeners that an event occurred
delete the current graph
decodes the string term using the urldecoder
get the index from the given directory
returns the response that is the concept of the set of concepts
returns the response that contains the relations
sets the back path if it exists and if it is found the
checks if the event has a parent that is a jcomponent
activate or deactivate the scaling tool
return whether the contents of this window is shown
returns true if the options panel is shown
creates the tools menu
show the contents display
shows the options viewer
returns the viewer
sets the layouter of this dialog
sets the viewer
creates a new function
returns the length of the specified element in the cache
changes the slider repulsive scale depending on the
shows a save dialog
calculates the gradient of energy function at the vertex m
calculates the energy function e
a combobox has been changed
performs the transformation
invoked when an action occurs
returns the created
sets the icon map
get the minimum size of the tree
get the maximum size of the tree
adds a new column to the table
adds a row to the end of the model
sets which column is pressed
highlights a column header
returns the value for the cell at code column index code and
set the lsd for a probe
this method is used to set a probe which should be used in
this method returns the ratio of treatments to a probe
builds the gui
the value changed method
sets the editable flag for the specified cell
inserts a row into the search table
add a new table row to the table
called whenever the value of the selection changes
called when a filter is selected
called whenever the value of the selection changes
called when a filter is selected
transforms a concept into a color
the function code transform ondexmeta code is called ondexdexdexdex
calculates the dimension x of the tree
calculates the size of the ondexconcept stack for the given
get all atomics in the given list
this method calculates the depth of concept v
propagates the selection to the underlying viewer
sets the current position of the ondexconcept vertex
returns the largest point in the graph
populate the given combo box with attribute names
if the attribute names are not accepted add them to the list
sets the current position for ondexconcept
calculates the positions for all the radial lines
returns the errors from the last action
annotates attributes in the ondexconcept
this method is called whenever the value of the selection changes
invoked when an action occurs
called whenever the value of the selection changes
get the maximal value
gets the minimal value
called when a menu item is selected
the user has selected an item in the list
returns the number of relations of this code concept code
gets the concept class
the total number of visible relations in the current ontology
returns the number of concepts in this system
get the number of visible concepts
returns the relation type
performs the transformation
transforms a concept node into a color
get the meta data associated with this object
update all the graph
update the color of the node
update the color of the node ondexmeta
transforms a given relation edge into a color
update all the graph
update the color of all edges in the configuration
update the color indexmeta for a given edge
set the size
performs a transformation on the given node
update all the nodes in the graph
updates the graph of all concepts relations and edges for all classes
updates the shape ondexmeta
truncates a string to a maximum length
get label for the relation type
add the label of the edge to the cache
this method updates the graph
provides the transformation of the label of the given edge
populate the concept attribute name list with the names of the concepts
set up the relation list
relayout the visualization
updates the chart
add vertex ondexmeta
called whenever the value of the selection changes
does the hashed list contain an edge
does this graph contain a vertex
find an edge
notifies all listeners that have registered interest for
get the destination concept for a certain edge
get the edge type
get the first source
the method code is dest ondexmeta code returns true if the
the method code is source ondexmeta code returns true if the
remove an edge from the list of edges
remove a vertex from the ondexmeta
returns a label for the given class
register a label for a certain node
updates the graph
performs the transformation of the label node
not supported throws an illegal argument exception
returns node for the graph center
add attribute names to the list
create a new document properties object
show the legend window
registers all gds values to the code gds code
this function computes the table of colours
convert a hue saturation value to an rgb value
scan the configuration file for conflit related things
scan the configuration file for xml files
random access function for select node
loads the configuration file
loads the configuration from the given url
get the class name of a plugin id
converts a class name to a class name
saves this item to an xml file
deletes the file
returns the item
finds the minimum and maximum values for the given collection
this method clears all registered filters
calculates the average and deviation of the collection of values
adds a concept class to the list of filters
returns the standard deviation of the values added so far to this series
removes a filter from the list of filters
adds a new filter to this filter chain
creates the panel of the swap button
creates a button for the toolbar
removes a filter from this relation type
configures the variable extractor
add a new gds filter
remove a gds filter
sets the variable to code v code
get a parameter
initializes the toolbar button icon
adds a new filter to the list of filters
returns the variable name
creates a chart
sets the average
removes a row from the table
set the standard deviation
set the number of concepts
update the number of relations in the text field
update the table with new filter
returns the full name of the user
extend the table by 20 rows one data
gets the description
returns the name of the unit selected
returns the specialisation of the selected item
sets the concept accession
flush all changes to the disk
clones a relation
copies a data item to another one
copies context information from one old to another
copies all gds ondex attributes from the old attribute to the new
clone an ondexconcept by copying the values of the old
clone this ondexconcept and return a new ondexconcept
clone an ondexconcept
update the relation in the graph
copies data from old to new
update the concept in the ondex concept
copies context from old concept to new concept
returns the color that is painted when this button is not selected
copies all the accessions from old to new
initializes the icon of the program theme
copies the names from old to new ondexconcept
displays a frame in the center of the desktop pane
setter for the help broker
makes a panel containing the apply button and apply action commands
copy gds ondexconcept
show or hide the node labels
gets the custom icon attribute of the xmleditor doc ui object
are node labels being shown
show or hide the edge labels
do we show edge labels
gets the node size
sets the default node size
gets the edge size
sets the default size for edges
gets the value of the font size property
sets the font size
update the menu bar with the current state
makes the component exact the given size
creates a menu from the configuration file
creates a menu for the app
creates a menu item with the given key
this creates a menu item with the specified key
get the metamodel graph panel
populates the selecting menu
hides the selection
initializes the frame icon
sets the default font for edges
set mode for the mouse
sets the relayout on resize flag
shows all relations of the current node in the tree
scales an image
returns the search box
gets the value of the mouse mode property
getter for concept classes combo box
getter for data sources combo box
gets the current search mode
returns the search text entered by the user
returns the tags combo box
returns true if the string is a regular expression
adds a picking listener to the list of picking listeners
get the annotation manager
checks if a given regular expression is valid
remove all popups
checks if the input is a smile
notifies all listeners that have registered interest for notification on
make a file url from a string of parts
set selection to given data source
removes a picking listener from the list of picking listeners
set the selection to select the concept class
initializes the connection
submits a new issue
initializes the combobox for the available rts
sets the selection to the table
this method initializes nodes
initializes the tags
returns the viewer
initializes the combobox with available relation types
fill the evidence types combobox with the available evidence types
returns the ovtk2 menu bar
set selection method comment
initializes the desktop
initializes the tab component at the given index
initialize the user interface
adds the units in the combo box to the units boxes
initializes the list of available ccs
returns an image icon or null if the path was invalid
make specialisation of attribute name select
creates a combo box for a name concatenation
initializes tags list
this method creates the menu bar
this method creates a menu item with the specified title and cmd
initializes the data sources combo box
a helper method to get the name of a meta data file
extracts the name of the ondexconcept from the given
appends html tags for an array to a string buffer
compiles a split of the attribute
this method sets up the panels
sets the viewer
update the check boxes on the panel
creates a checkbox
the run method for this thread
resolves the index of the rectangle within the element
registers an internal frame
updates the window
returns the index of the border
find active frame
sets the name of the running process
start feeder process
get the name of the running process
determines the max state of all relations
accept all directories and all
returns the description of this filter
add a concept
clear all concepts from the list
this method is called when the progress dialog is terminated
retrieves the concept at a given index in the vocabulary
add an evidence type to the list of evidence types
adds a data source to the list of datasources
removes all of the elements from this set
adds a relation type to the model
clears the list of data sources
gets the data source at the specified index
get the evidence type at the specified position
clears the list of relation types
returns the relation type at the given index
adds an object to the diagram
clears the list
returns true if this set contains no relation types
adds a concept class to the model
adds an attribute name to the model
removes all classes from the model
returns the concept class at the specified index
removes all attributes from the model
returns the attribute name at the given index
this method is called whenever the configuration changes
this method returns true if there are no concept classes in this
returns true if there are no attributes in this set
scale the viewer
sets the clipboard to the text in the system clipboard
the transformer for the vertex labels
the transformer for the edge labels
sets the fill transformer for the vertex
returns the current node draw paint selection
this method allows to define a different draw paint selection strategy
transforms the ondexconcept by using the given node
set the transformer that draws the edges
returns the node fill paint selection strategy
updates the paint selection of all nodes
sets the node fill paint selection
updates the alpha channel of the node
transforms a node into the ondexconcept
update the color of the node
update the alpha of the node
updates the paint selection of all nodes
writes the graph to the xml file
determine if the dragged data is a file list
writes a node
writes the keys for all data nodes and edges
writes the namespaces for the graph ml file
packs all the columns in the given table
transforms the given edge into a stroke
description of the method
returns the selection color for edges
setter to create edge color creation form
performs the transformation of the edge
updates the color table
get the node shape selection
update edge color creation form
sets the node
updates the paint of an edge
set whether the arrow should be displayed or not
returns true if the arrow must be shown
set the node shape selection
the method code is visible ondexconcept vertex code returns the
transforms the ondexconcept by using the id2shape class
transforms a mask
transforms id ondexconcept
this will update all labels
is the edge visible on another
updates the label of an edge
returns the label of the relation edge
this method is called whenever the selection changes
set all the visible concepts to all visible
update the configuration
updates the shape
set the shape of the edge
gets the shape of the edge
sets the visibility ondexrelation edge
update the shape ondexconcept
this method is activated on the keystrokes we are listening to
sets the visibility ondexconcept vertex
populates the list of concepts
returns true if there are any states left in the current state
gets the value of the include html property
updates the last state of all relevant components
setter for property include html
restore the last state
retrieves label from the node
update the label of the node
set the visibility of the graph
executes the command and returns the output
set order of interpreter classes
adds a custom function
reset to default to combine
automatically adds all exclusive methods in the primary source
returns the root of the tree
add an object to the accessable objects map
automatically adds all methods in the source that are inclusive
checks if the class is resolved
adds an array of roots to the model
adds a root object to the manager
add a function to this tuple
adds the specified object to the tree
adds a method to the cache
add a function to this tuple using the name of the given function
clears all the information stored in the cache
adds the given real class as a convinience class to the unit
processes requests for both http code get code and code post code methods
loads the ondex kb graph from a file name
retrieves the existing concept from the node
this method creates the index file for the ondex graph
show the global file chooser
initializes the window
sets up the content pane
initializes the look and feel
populates the actions
sets the enabled state of the specified action
search using the qtl and regex
enables or disables the given action
retrieves genes contained in a subset of the attribute
sets up the content pane
adds a menu to the toolbar
adds to a menu the menu and embeds it
display centrally the splash screen
get the current selected window
removes the window from the window list and unregisters the
make a window that displays the given meta data
creates and returns a new graph traverser
the run method of the thread which will be called by the timer
fires the event
we listen to the key pressed and we pass it on to the
get the default name for a concept
returns the next color in the sequence
creates a file chooser
setup the ui and the button panel
add an action to the menu
adds an action to the menu
create the panel with the ok and cancel buttons
creates a tree node for the concept class
returns a randomly selected node or null
makes a jtree from the root node
make the ui
called when the unlock button is pressed
creates a button with the given title and action listener
checks if file exists
centers the glass window
save the current desktop as a new file
make the main panel
builds the main panel
saves the current file to its location
make and return the button panel
creates the split panel
create a panel for the profile list
called when the ok button is pressed
makes a query id text area
sets the tree
determines if the user wants to approve this option
dispose the dialog
get a tree selection listener for the tree
make the namespace field
fails the test with the given message
creates the neighbours field
make a button with the specified title and action listener
parses a path string into fields
validates the rts path
compares this object with the specified object for order
refreshes the list
return the type of this node
returns the path as a string
create a panel with buttons for accepting and
creates a panel that can select the radio button to select the
restore the saved session state list
this method initializes radio listener
saves the list of files
get the value of element
set the graph this component was created in
closes the value stream
provides access to the file
sets the file associated with the generated generated graph
make a button with an action listener
shuts down the item
interrupts the thread
sets the focus to the given concept class
the main method of the thread
prepare the thread to start
returns true if all of the fields are ok
this method is called when the thread is done executing
save a list of
returns the title of this filter
initializes the tree
mark this concept as clash
returns the id of the node
checks the validity of the path
return the descriptor of the edge mapping
generates the network name for the given type
extract the temp copy file
this will destroy the path trigger
extracts the name of the ondexconcept from the given concept
implements the error function
returns a complile id for concept whose id is equals to concept cc
get the metadata associated with this file
performs the operation
undo the latest operation
displays the prompt
redo the last operation
if the user presses the ok button in the dialog
dispose of this editor
corrects the file name
save the current model with a new name
save the file to disk
sets the modified status of this project
execute a java script file
set the name of the dataset file
write a byte array of data
returns the hull points as computed by the algorithm
it creates a constructor declaration
for debugging purposes
check if the current block is a for save state
method to check if expression can be used
we dont support we have a local variable declaration
checks to see if the expression is in the range
ors together the expression with the and
checks whether the following ends with a postfix
calls the next argument in the array to the next throw exception
checks if the current expression is an array access
calls the head and throws an exception if the next is not the
check if an embed expr is valid and save it
adds a route entry to the routing table
add the ip address on the route
determine if the given entry is local to this node
returns the next hop
calculate the getmatching ip for the current date
returns true if this control is available on the control
add the default node to the table
deletes an routing entry from the routing table
generate a bad checksum bad
set the interface of the sender
add an interface
stops the thread
return the remote interface
this method initializes j button
this method initializes this
this method initializes j content pane
initialization of the servlet
convert the passed in object to a string
convert the passed in object to a json object
kills the thread
returns if this thread is alive
adds a listener to be notified when a page finishes
removes a listener from the list of listeners
sets whether or not the control is paused
check whether the simulation is paused
this method performs the automate procedure
adds a new automation object to the list of automation objects
removes the automator that was previously added to the list of
adds a change listener to the list of listeners
this method is called when the induce detects a change
updates the absolute depth of the folding
ends a batch update
updates absolute alpha of all folds
returns the current click
removes the entity from the world fold
inserts the specified element into this set if it is not already present
get the current value of the element
this method initializes composite
returns the center with the given name
gets the card side index
inits the private
index a lesson
adds a new ram index
removes a card from the hash map
adds a card to this batch
getter for property summary batch
returns the batch with all unlearned cards
adds a long term batch to this term batch
returns the long term batch at the given index
returns the number of long term batches
returns the number of cards this batch contains
returns the number of expired cards
returns a random expired card from the expired accounts
refreshes the cache
removes all unwanted terms from the counterpart for a batch
sets all cards in this container to 0 all unlearned cards
returns the next expiration time
sets the current directory to the given directory
returns the number of cards in this trick
resets the file chooser to the initial state
get a specific card from this hand
shows dialog for opening files
add a card to this hand
add a card to the deck at a certain index
adds a list of cards to this deck
removes a card from the hand
removes a card from the hand
get the index of a card in this hand
clears the cards
moves the cards at the given offset
search for cards matching the search pattern
returns the search pattern
returns the match case
returns the current search hit
sets the search card side
sets whether the search should be case sensitive or not
stops searching for all cards
repeat search for the current search hit
sets the line wrapping policy of the text area
applies the settings that were set in the constructor to
disables the info panel
sets the value of pauker frame
returns the orientation of the front side of the text area
gets the code component orientation code that is the reverse side of the
set the lesson for this private key
clears the selection of the batch type
returns the orientation of the split pane
called when a batch is selected
selects all unlearned cards
sets the focus to the given card
selects a short term batch
select a short term batch
clears the front side text area
select a long term batch
sets the mouse sensitive property
resets the window to its original state
allows us to set the next focus component
returns the font of the front side text area
get the font for the reverse side text area
gets the foreground color of the front side text area
gets the front side color of the text
set the line wrapping policy
updates expired cells
set the current lesson
gets the foreground color for the reverse side text area
the lesson that the player is using
called when no lesson panel is selected
displays the panel that the user may select a file
gets the background color for the reverse side of the text area
gets the front side of the text area
gets the front side text component
sets the card
returns true if ok is selected
gets the reverse side text area
method to check if the user selects unlearned cards
returns true if the check box for learned cards is selected
returns true if the user selected the expired cards
returns the reverse side text component
sets the font of the front side text area
set the font of the reverse side text area
returns true if repeating method is selected by typing
sets whether to repeat the method by a typing
returns true if the ok button was pressed
returns the orientation of the split
get the text area font
get the foreground color of the text
get the background color of the text area
sets the orientation of the split
get the line wrapping policy
set the line wrapping policy
the current lesson in the game
returns the search pattern length
returns the search hit for the current batch
returns the ustm time
returns the device time
returns the selection state for the case check box
returns the state of the line wrapping check box
returns the maximum number of search results to retrieve
get the maximum number of files to be saved
checks if is play ring tone selected
this method returns true if the last lession checkbox is selected
sets the search card side
sets the match case
reset the edit panel
set the orientation of the split pane
return the panel that holds the edit card
returns the batch number
returns the number of cards in the expired card list
returns the card with the oldest expired expiration date
refreshes the cache of expired cards
get the font family
sets the foreground color
returns the orientation of this component
sets the orientation
returns the timestamp when the agent was learned
sets the timestamp when the station was learned
returns true if the user is repeating the chat
set whether to repeat the task when it has triggered
cancels the search
return the font size
gets the font style
returns the learned
sets the learned
sets the front side of the card
gets the front side of the card
sets the reverse side of the card
gets the reverse side of the card
get the timestamp when the player was learned
returns the id of this user
set the node to learned
update the learning time stamp to now
is this player learned
set the long term batch number for this object
the database number of a long term batch
sets the expiration time
returns the expiration time of the item
expires this lock
checks if the front side of the text is repeated
enable disable repeat of the front side of the text
method for stopping search
flips the card
gets the average font size of this font
test method for
returns the number of milliseconds between each call of
returns the ustm time
gets the file filter for xml files
en pas apas en el engine
utility method that sets up the offscreen graphics context
sets the code graph layout cache code that will provide the view data
set the value of using instrumentation
set the class enhancer
set the mapping
resets the string table to zero
draws the scene graph
called when a synchronize create message is received
get the message descriptor
return the number of duplicates
return true if this number is equal to the given number
returns the cpt dup
increases the current value of the dup field
test a mattern
process a message descriptor
called when a frame is entered
test hash code
compares two msg descriptor objects
returns the free replay option
test clone for 3 element
restart the stack of timer
process free replay process
test method for
returns a string representation of the message
test method for
test method for
test method for
test method for
gets the value of the appli name property
gets the pc number
returns the log link
adds a pc name to the pc table
release a child
remove a pc from the pc list
sets the hour of the day
returns the current line number
returns the idpost
set the idpost
get the descriptor of the current message
receive notification of character data
set the descriptor of the current message
returns the lost status of this ownable
sets the lost
returns the root node of the tree that this node encapsulates
sets whether the root node should be generated
gets the dup son flag
sets the is dup son value for this query constants
parse the given file as a message
returns the current message
receive notification of character data inside an element
called when the parser encounters the end of an element
sets the delta
get the logic time of this actor
get the log
returns the identifier of this variable
set the current logic time
sets the log file to write to
sets the identifiant
returns the remote address
writes the path of the station initialization to disk
write a descriptor to the output stream
closes the file
release this node in the pool if it exists
returns the sender
get the time of this timer
get the message
sets the sender of this message
set the time of the timer
set the message
sets the port
returns the current interface for the movie capture
returns the host of the remote machine
get the reception time of this timer
returns the nm
reads the remote messages in a file
sets the capt interface for this movie
set the remote host
set the reception time
sets the nm
returns the current message
is this a in emission
returns true if the movie is in reception
write a message to the log file
this method closes the transaction log file
process a message descriptor
accept all directories and jar files
the description of this filter
sets the normal icon to the image
accept all directories and all
returns the description of the file filter
this method initializes j panel
reads a scenario from the given file path
returns the path to the nt os
returns the nt os path for the resource
get the nt os path vue
set the background color of this code gl20 resource shader fragment color code
returns the details of the shape command
sets the status of the job
get the pdfpaint representing the color described by the
show the progress dialog for this print job
add a page change listener
remove a page change listener
set a map
make sure that this object is dereferenced
fills the array with the given data
check if o is equal to this object
read an array
read a name
get the glyphs for a given text
return a string representation of this object
returns the bounding box of this shape
returns the width of this page after rotation
returns the height of this page after rotation
set up the parser
add a collection of commands to the page list
flush all cached data and clean up
close the thumbnail data data
override the clone method to allow using the inherited constructor
someone selected something in the outline tree
start the logger server
stop the server
convenience method to derive a name from the specified class and
get the numerical level as an integer
sends the list of logs to the client
starts the thread that sends the data to the server
stops the server
return the name of the log class to use
create a new log instance
get the logger
at startup create and show the main frame of the application
this method initializes this
this method initializes j pbotones
this method initializes this
this method initializes j bcancelar
this method initializes this
this method initializes j lista scroll
this method initializes j pcalendario
this method initializes lista
this method initializes j ltitulo
this method initializes this
this method initializes j tfanalisis
this method initializes j cbestado
this method initializes j lno seleccionados
this method initializes j tfpruebas
this method initializes j cbincidencias
this method initializes j bgenerar
this method initializes j minformes
this method initializes j miinforme semanal
this method initializes j mcambiar estado
this method initializes j miinforme imputacion
this method initializes this
this method initializes j scroll pane
this method initializes j lseleccionados
this method initializes j miinforme notas
this method initializes j bseleccionar
this method initializes j miinforme estado
this method initializes j dcdesde
this method initializes j content pane
this method initializes j bdeseleccionar
this method initializes j mipreferencias
this method initializes j miconfiguracion
this method initializes j dchasta
this method initializes panel incidencias
this method initializes j scroll pane
this method initializes j rbtodas
this method initializes j panel botones
this method initializes j bsalir
this method initializes j rbactivas
this method initializes field
this method initializes j split pane
this method initializes j minueva
this method initializes boton
this method initializes j mieliminar
this method initializes j miinforme
this method initializes j mvisualizacion
this method initializes j rbmitodas
this method initializes j menu
this method initializes j rbmiactivas
this method initializes j menu item
this method initializes b gvisualizacion
this method initializes this
this method initializes main panel
this method initializes basic panel
this method initializes j splista probadores
this method initializes j lista probadores
this method initializes j minueva
this method initializes j boton nuevo
this method initializes j beliminar
this method initializes j mcambiar estado
this method initializes this
this method initializes j tfdireccion incidencias
this method initializes j tpdescripcion
this method initializes j mieliminar
this method initializes j baceptar
this method initializes j padjuntos
this method initializes j bdireccion incidencias
this method initializes j miinforme
this method initializes j tfxmlincidencias
this method initializes j tfnumero seguimiento
this method initializes j pcomentarios
this method initializes j bxmlincidencias
this method initializes j pdescripcion
this method initializes j tfnombre
this method initializes j psolucion
this method initializes j tfequipo
this method initializes j pnotas
this method initializes j cbtipos
this method initializes j cbno siebel
this method initializes j security
this method initializes j cbestado
this method initializes j bgenerar
this method initializes j bprobadores
initializes the css matrix for the next call to
pops the style stack and style stack
returns the path to the data file for this visual
loads an image from the given visual path
set alpha int
alpha integer alpha
change the parameter of a midi message
draws the sketch
this method returns the color of the player by manual
sets the x color
draws the sketch in the 4vj frame
set green color
this method sets the blue color
adds a line to the end of the token
change the color mode
get the accelerometer x1
set the alpha channel for the color
sets the accelerometer x1
returns the number of beats this player has
get the accelerometer y1
sets the alpha key to use when rendering this image
get the by bpm returned
sets the accelerometer y1
get the volume
get the accelerometer z1
sets the alpha value of the color
updates the sound volume and sound volume based on the
sets the accelerometer z1
draws the sketch
change the sketch at a particular index
changes the sketch index
removes the sketch from the 3 d scene
sets sketch for all channels in the sketch list
sets the sketch for all channels
draws the sketch
sets up the visualization
receives an event from the p4 channel
draws the ch4 wave
description of the method
maps a note on a channel with a given velocity
sets the accelerometer x1 property
description of the method
maps a note off events from a channel to a p4 channel
updates the data in the bench by setting the appropriate values
sets the accelerometer y1 property
sets the bpm on which the two channel data is received
overload this annoying function which is not relevant anymore
the beallitja a synchronzent event
maps a sensitivity to a given midi beat
sets the accelerometer z1
changes the sensitivity for the beat
sets the accelerometer force2
changes the sensitivity to match the beat sensitivity
map a sensitivity to a volume
draws the sound
set accelerometer direction
sets the sensitivity to the given sensitivity
rotates the x axis the specified value is in degrees
down the volume by the given sensitivity
rotates the y axis to the specified value
rotates the camera of value radians around its z axis
handles a byte of data from a blob object
rotates the camera of the x axis
rotates the camera of the y axis
calculates the centroid of a given blob
remembers the key pressed event and prints the event
calibrate the point at the given point in the cam
pauses the camera
this method is called when the mouse is moved over the map
resets the camera to its default position
compute the width of the camera
compute the height of the record in the database from the given
turns off the note specified by the given velocity
configure camera configuration
called when an osc message is received
called when the controller is changed
get the table for document
this is an optional function used only by the multiservers graphical
returns the table
get the result table
sends the element to the business
returns true if the iteration has more elements
returns true if there is a previous element
sets the data survey element
indicates whether this element is a container
set whether this select is allowed to be multi select
adds a choice element to the list
removes a choice element from the choice
sets the minimum value
remove the current element from the container
sets the maximum value
set the measurement
get the measurement
creates a new answer for this employee
data object is a survey owner
create a question entity bean
get the string representation of this question
sets the data value for this survey
permet de stocker la definition du lookup pour un ejb
permet de stocker la definition du lookup pour un ejb
remove all ejb related beans
get the container of the specified element
get survey element home
get the survey element container for the survey element id
returns the average of the values in the specified collection
returns the survey element container according to the specified local
computes the sum over the values of the given collection of
get a survey
returns the choice element corresponding to the modus of the given collection
add all sub elements of the given container
returns the least frequent question in this set
updates the data of the container
compute the variance of the values of the given collection
returns the standard deviation of the values of the given collection
delete a survey
returns the number of elements in the tree
cleans up the answers for the survey
update a survey element
returns the number of pages in the set
get survey home
checks if there is a next page
this method sets the state of the participant to complete
get the local object for the survey assembler
returns the next page of the form
set page breaks
get the participant home
get answer home
get the question home
get survey home
get survey element home
returns the position of the next element in the container
this method initializes payer
setter for property lbl gain bingo
this method initializes title
this method initializes number
this method initializes winners
finalize the atp statistics
apply a statistical multiplication
applies the atp multiply
sets the value for a given type t
tests this object for equality with the given object
authenticates a user against the configured constraints
this method is used to authenticate a user
this method is called before a test is executed
test the pam authentication
test pam user with bad credentials
called before each test xxx
test user authenticated pam return value
this method is called if the login contexts
test the pam user using the null credentials
test the pam return value when the user has empty credentials
test the pam user using the null username
tests if the pam return value is empty
method to perform a logout of the authentication module
this tests running pam with a concurrent login
test method for
initialize this code login module code
test for bad credentials
tests that user is not authenticated
get the pam
tests the scenario where we can connect to and read back a
test user authenticated
test user with bad credentials
test of place holder method of class session
tests that user authentication fails
check that a shared library has been installed in the library path
tests that pam works as expected
test method for
test for bad credentials
test the method user with null credentials
calculates free memory in the jvm
test the pam user using the empty credentials
test the method for null username
tests that an empty username will be returned
pam null service pam null service pam
pam null service name should not be null
p set up the instance variables required for this test case
test that an empty service name is properly configured
test method for
this tests running a simple test demonstrate
test login context bad service name
test the login context with a bad password
changes a user
send a simple message based on a velocity template
convenience method for getting a i18n keys value
convenience method to test for gzip cababilities
set url decode flag
sets whether encoding is forced
set the url path helper to use for this application
set the code path matcher code
set the method name resolver
sets the web binding initializer
set the session attribute store for this session
reads the data from the input stream and stores it in the buffer
reads the data from the input stream
this method flushes all queued reports to the queue
get a resource from within this classloader
get the version which is the blueprint version for the specified interface
get the value of a register
load the central console plugin
initializes the status manager
returns the hash code for the given key
sets the address comment of this address
sets the streetnumber
sets the address
sets the zipcode
setter to user property
sets the birthname
sets the contact information
sets the dateofbirth
sets the first name of the customer
sets the role of the user
sets the zipcode
sets the last name
sets the password
sets the role name of this role
sets the value of the contactvalue property
sets the contact method
sets the permission
sets the permission
deletes the persistent data of the given entity
deletes a persistent persistent instance from the datastore
sets the address id
sets the role id
sets the user id
sets the zipcode id
sets the permission id
sets the contact method id
initializes the graphics object
get the ignore extension equality value
get ignore length equality
returns the ignore last modified
get the ignore name equality value
get the content equality flag
get if content equality is ignored
set the content equality flag
get the absolute path equality flag
getter of the file extension equality
gets the file to compare
get the value of last modified equality
getter of the length equality
get the name equality flag
returns the source file
sets the file extension equality
set the value of last modified equality
setter for length equality
set the name equality flag
add a file to the zip file
get the compression method
getter of the directory to zip
gets the directory to write source files to
returns the zip file
sets the destination directory
sets the zip file
returns the number of files executed by the script
returns the observable
get the file filter
gets the value of file length
returns the zip file
gets the zip file comment
check if there are more elements in the array
returns true if the iteration has more elements
calculate the duration of the task
returns the zip file name
this method returns the number of days in the specified time
returns the number of entries in this map
get a month value from the current time to the default month
returns the zip file obj
returns whether this collection contains any entries
removes the given keys from this map
returns the month this time is in default month
calculate the time in hours
returns the cipher used to decrypt the message
returns the time in hours
gets the value of private key
calculate the time in minutes
sets the cipher used to decrypt the data
sets the private key
sets the compression method
returns the time in minutes
return the exception value
sets the value of the value property
override hash code
returns the cipher used for encryption
converts a date to a calendar
calculate the time elapsed since the start of the
sets the directory to zip
calculate the number of seconds since the beginning of this interval
set the cipher for encryption
return the number of years elapsed since the beginning of the current time
sets the dir to start
returns the number of years of an element
returns the age in human readable format e
sets the file counter
returns the age in a human readable format
set the file filter
sets the file length
sets the zip file
sets the zip filecomment
sets the zip file name
add all rows to the left table
adds a row to the table
add all rows to the left table
adds a list of objects to the table model
shuffles the selected row to the right table model
removes all data from the table
adds all rows from the left table to the right table
returns the selected row in the table
gets the data at the given row
shuffles the selected row to the left table model
adds all rows from the left table to the left table
shuffle the selected rows
shuffle the selected rows
removes the row at the given index
shuffles the selected row to the right table
removes the object at the given row
shuffles the selected row to the left table
sets the data
updates the given row
sets the accessrights for this entry
adds a role to the user
returns the mime type of the content of this message
returns the last access time of this user
get the input stream
adds an attachment to the message
returns the name of the class
get the output stream to write to
getter for property lock
get the maximum time for which this session has been inactive
removes a role from the user
add an attachment to the given mime message taking the content from a
returns the start time of this test
setter for property lock
sets the roles to be used in the authentication
adds a e mail address to the from list
tests that a date that is not volatile
test for code get random street with number code method
test method for
test method for
sets the last access date
returns the value of the charset header field
tests creating random date from a date
returns the next available id
test of paint graphics method of class net
set the max time for which this session is inactive
tests the creation of random date between from and date till
test case for
sets the start time for this test
test of get point method of class screenpoint
test for method get screen height
test if the create random date method works
test of create random id method of class utilities
test for method get screen width
test create random datebetween long string long long
sets the sender address
test of get random int between method of class math utils
test the constructor with a password
test read filelist to properties
returns the number of files counted
returns the absolute path of the file
test of is iban number method of class bankaccount utils
test replace chars with numbers
test for method get random password
test sort data method
test for string get local ip
test for code get local ipas byte code method
test of get first method of class org
test for code get local ipfrom server socket code method
test the iterator
test method for
test method for
test method for
test the creation of a set with two elements
test random boolean int int
test remove first
tests for method is isocountry code
test method for
test method for
test the method get keys from value
test method for
test random int
test the encoding of the string with an encrypted string
test the secret object as an instance of a java
helper method for testing the
test for method get prime numbers
tests the add years to date method
test method for
tests replacing strings with wildcards
test method for
tests wildcard criterion sql query
test method for
tests the copy serialized object method
tests writing a serialized object from a file
test method for
test method for
test write serialized object to file
test method for
test of is negative method of class math utils
test of close input stream method of class stream utils
test of close output stream method of class org
test of is positive method of class math utils
test close reader
test close writer
test of get serial version uid method of class com
test for method get roles
test method for
verifies that the user test has the description field
verifies that the user test has the name of the table
test for method get classname with suffix
verifies that the user test has the accessrights for this entry
test for get instance session context string session context
test method for
test for method get package path
test of print all prime numbers till method of class nl
test method for
test for method get package path with slash
test method for
test method for
test of get path from object method of class age
test method for
test method for
tests the write file method
test method for
test for getting a resource as a file
sets the exercise definition
test method for
test for resource as stream string
sets the id of this entity
sets the exercise content
test for getting the resource as a stream
tests the compute eastern sunday method
test for method get resource string
test for getting a resource string object
tests the compute eastern sunday number method
test for getting the resource ressource
adds an addresses to this zipcode
sets the addresses
test for getting the ressource as a stream
sets the user addresses
gets the dateofbirth
test load properties
return whether this outcome has been correctly loaded
adds a feature to the contacts attribute of the method object
sets the correctly flag
sets the contacts
sets the exercise content
tests the create date int int method
sets the given answer
sets the exercise definition
tests the create date int int method
sets the answer of this question
test method for
tests the creation of a random birthday
sets the set of role permissions for this role
sets the questionary of this answer
sets the grading type
sets the question file
sets the user roles
sets the user contacts
tests the create random birthday method
sets the question type
sets the subject of the message
sets the solution of the question
tests the creation of random date
sets the topic
tests the create random date between method
sets the solution file
test for void convert2 byte array
test for the creation of random datebetween
test for the creation of random datebetween
sets the shortcut
test create directory
test for file utils
deletes an object of addresses
loads an address object of an object of a given id
returns an address object
deletes an object of a given id
loads an contacts with the given id
returns the contacts with the given id
deletes an object of contact methods
loads all contact methods of the given object
returns the contact methods with the given id
deletes an object of a given id
loads a content of an object
tests the method is date in the past part of the past
returns the content of an object
deletes an object of an exercise definition
loads an object of a given id
2000 is a leap year
returns an exercise definition of a given id
deletes an object of a given id
load an object of a given id
returns the given grading type or null if it doesnt exist
deletes an object of permissions
loads an object of permissions
returns the specified permissions or null if not found
deletes an object of a question type
loads a question type
sets the category
sets the content
returns the question type with the given id
sets the price value for this quote data
deletes an object of a given id
sets the state
sets the tax
loads an object of a roles
sets the paymentmethod
returns an object of a roles class
sets the bill
deletes an object of role permissions
sets the quantity
sets the total price value for this order type
substract days from date method testing
loads a role permissions object in the persistence context
returns the permissions of a given role
set the value related to the column content
sets the billing date of this order
deletes an object of a subject
sets the attribute payed
test for a file with an input stream
sets the paymentmethod
loads a subject object of a given id
sets the table
returns a subject object
configure the transformer
loads a object of a given id
returns a given object
deletes an object of a users class
loads an object of a given id
get the exception panel
returns the card panel
sets the exception panel
returns an object of a given id
returns the order frame panel
initializes the gui
initialize the list of drink karte item in the form
initializes the panel
initializes the frame
lays out the frame with the order
lays out the order frame
test for code is zip code method
returns the model of the frame
returns the controller
deletes an object of user addresses
loads all user addresses of a given user
returns the users addresses
deletes an object of a user
loads all contacts with the given id
returns the contacts with the given id
create the buttons
returns the stack trace of the given throwable
deletes an object of user roles
create a bestellung and put it in the pool
loads all users of a given id
initializes the components
initializes the actions of this dialog
this method initializes this
gets the ok button
returns the user roles object with the given id
define the ok button
sets the text area
test open file reader
deletes an object of zip code
initializes the buttons
loads zipcodes of an object
test read string and compare to string
gets zip code of an object
gets the chc ip addresses from servers choice
create a new query
get the cancel button
get the login button
returns the btn add server
get the text field name
returns the text field containing the password
gets the ip address from server text field
create a hibernate criteria object for the given criteria
test read from file
get a named query
test read head line
flushes the current session
creates the drink items to use for the table
clear the current session
flushes the session and clears all the sessions
full java type declaration
returns true if this type is an array type
returns true if this property list contains property automatically incrementing
get the name of the class
remove all choice bestellung entferne aus der der der choice bestellung
returns true if the primary key is set
returns the name of the class in the format
returns the nice java name
clear the text area
returns the name of the property in a plural form
returns a string that is the correct one for the given property
return the property name of the nice language property
set whether this type is automatically incrementing
get whether this type is automatically incrementing
returns the enum name
returns the current hibernate session
returns the number of many to one properties
expand the class name into a package name
returns the name of the enum file
nicely format a string
count the number of many to one and composite properties
sets the primary key
return true if schema restricted is true
use this method to create sql based on a query
sets the class
returns the lower case friendly name of this class name
gets the value of clazz
returns true if any of the classes in the specified class have underscores
indicates if the field is unsigned
gets the pk table name
sets the pk table name attribute of the table element object
get the object value
gets the pk table catalog attribute of the primary key column spec
sets the pk table catalog
sets the fields
sets the properties
sets the list of exported keys
sets the imported keys
sets the primary keys
evicts an object from the session
get the test handle
gets the database cat
indicates if this type is a subclass type
getter method for contains enum
sets the contains enum
sets the subclass
get the object from database by the id
set the imports of the package
getter method for superclass
sets the superclass attribute of the clazz object
detaches the current session from the session cache
sets the class name of the receiver
returns the table obj
sets the table obj
returns the embeddable class
specifies embeddable class
setter for property composite primary key
getter for property composite primary key
indicates if this font may be embedded
checks for composite key
returns true if the given field is part of the composite key
test string2
setter for property gender
sets the contactmethod
gets the value attribute of the status object
tests writing byte array to a file
test writing a string to a file
returns the login dialog
get the event handler for this server
returns the clients inet address from which the connection was received
sets the listener
handle a request to create a drinking card
todo missing method documentation
adds a key and row to the table
adds all the elements in the given map to this model
clears the table
handle the create drinking card create all the drinking cards
returns the value at the given row
removes the given row from the model
this method is used to handle the cases where no name is
returns the splashscreen
returns the bestellung in the table
returns the tisch sql statement from the sql statement
create the ok button
show new order dialog
setter for property btn cancel
this method initializes j scroll pane table drinks
setter for property btn login
gets the bestellung from the db
setter for property lbl password
setter for property lbl username
setter for property txt info
setter for property txt password
setter for property txt username
get the component
determines if a project has a parent
set the component
sets the controller of the client context
sets the view parent
this method initializes drinki button panel
setter for property drinki button panel
this method initializes keypad panel
sets the keypad panel
this method initializes jscrpn tables bill
returns the bill display panel
this method initializes jtbl tables bill
returns the table model
this method initializes j button up
this method initializes j button down
get the scroll pane for the editor
set the scroll pane for the editor
this method initializes product button1
this method initializes j txta current table
set the j txta current table
this method initializes product button2
this method initializes product button3
this method initializes product button4
this method initializes product button5
returns the table model
this method initializes product button6
returns the local ip address for the given inet address
this method initializes product button7
closes the file stream
opens the file
this method initializes product button8
this method initializes product button9
this method initializes product button10
this method initializes product button11
this method initializes product button12
this method initializes product button13
this method initializes product button14
this method initializes product button15
this method initializes product button16
this method initializes product button17
this method initializes product button18
this method initializes product button19
this method initializes product button20
this method initializes product button21
this method initializes product button22
this method initializes product button23
this method is used in btree
this method initializes product button24
returns a tisch representation of the collection of stars
this method initializes product button25
create the ok button
this method initializes product button26
this method initializes product button27
this method initializes product button28
this method initializes product button29
this method initializes product button30
this method initializes product button31
this method initializes product button32
initialize this kernel
initialize this kernel
restores the state of the kernel
loads any sections that may have been set up
terminates the thread
clear all sections and release the lock
execute the specified program with the specified arguments
start running user programs by creating a process and running a shell
transfer data from this processs virtual memory to physical address
transfer data from this processs virtual memory to physical address
load a page from this segment into physical memory
release any allocated resources
initialize the processors registers
handle the halt system call
add a rider to the simulation started
speaks the given word
the server is currently listening on us
atomically release the associated lock and go to sleep on this condition
wake up at most one thread sleeping on this condition variable
wake up all threads sleeping on this condition variable
return the next thread that tt next thread tt would return
return a new thread queue for processing
the timer interrupt handler
test this kernel
initialize this kernel
test this node
handle a syscall exception
returns the effective priority of the priority queue
set the priority of the donation
waits for this thread to finish
creates the field editors
create an input stream for the pom to input steam
this method initializes s shell
returns the description of the tuples that this event occured on
by default tuples are filtered
logs the abort message
log checkpoint log the last checkpoint
close the stream
compares two predicates for equality
method to recover the connection
returns the index of the field with the given name
get the previous page of the heap after the image
sets the record id of this record
print the contents of the record back to the underlying stream
returns the type of the object at the specified index
sets the field at the given index
writes a page to the output stream
add a table to this database
get the string representation of this tuple
return the number of pages to be printed
indicates whether some other object is equal to this one
if this data store contains a table this method adds a table to
checks if the given object is equal to this object
deletes a tuple from the database
returns the id of the table with the given name
checks if the track header is selected
tests that page numbers are not set correctly
returns an iterator over this file in the database
creates a new table for each test case
gets the tuple desc attribute of the meta data object
tests hash code
deletes a tuple from the database
serializes this news object to the given data output stream
test that id is correct
compares the value of the field
returns a string representation of the tuple descriptor
test iterator usage
verify that a heap page id is generated correctly
clears the table
checks if tupleno is correct
adds a tuple to the database
test that the transaction has been dirty
test that tuple desc
test get tuple desc
tests retrieve tuple description
get num empty slots
test getting the table id
test of modify record id method of class tuple
marks this transaction as dirty
test that the get slot method returns a slot in the heap
checks if two arrays of strings are equal
tests the get type method
tests the size of the tuple
returns the number of empty slots in the deftemplate
tests the number of fields in the tuple
gets the value of a given slot
sets the value of a given slot
read a file page from the db
posts a page to the buffer
discard a page that was marked as deleted
wait until a shared lock is available or until a timeout occurs
calculate the number of pages
used by a de lock
create a new transaction
adds a page to the batch
remove self from the stored relations
release an exclusive lock
creates an empty data dictionary
returns the timeout time based on the max times elapsed since the
load the stored relations from the file
saves the current state of the model to the stored relations file
at startup create and show the main frame of the application
generates a triad for the pitch
generates the progression chord out from the given matrix
prepares a folder for deletion
returns whether the given resource is checked out
a project is opened in the team site
deconfigures the web application project
gets the id of this team site provider
gets the configuration data for a team site server
returns an instance of the
returns the provider to traversals
returns true if outgoing data should be overwritten
reads a file object id from the file system
returns the mapping of the selected resources
gets the overwrite outgoing attribute of the add project form controller object
sets the value of overwrite outgoing
returns whether incoming requests should be overwritten by the user
gets the value of the overwrite incoming property
sets the value of overwrite incoming
returns the name of this team site
this method is called when the remote resource is changed
mark the given resource as merged
checks if this resource is a container
downloads all the workareas for the given project
returns the mem index
stores an object in the session
build a map to be stored in the model
opens streams to lanxiangbin format
opens the output stream to the lanxiang
check if an item exist in the html set
get the total row count
this method is called after the method returns
method interceptor invoke method
make a string from the contents of this jsonarray
get a string representation of this jsonobject
get file path of exam
set the token type
returns the line number of this node
set the line number of the error
sets the text
returns the last child of the given node
return the last sibling of this node
returns the parent of the node
t nodes are not nodes of the right subtree
returns the number of immediate children of this node
returns the node of the default node assigned to this node
sets the node to which this is a default definition
returns a string representation of this object
returns the parent node of the given type
returns the first child of the given type
returns the first sibling of the given type
creates a new ast node
creates a new ast for a single ast
get the status of an order by id
convert the payment method to a readable and localized text
create the actions
get the run result
set the interval for the shipped in seconds
sync with the webshop table
open the window
create contents of the window
the code combo cell editor code implementation of
sets the value of this control
save the current session
deletes the event
returns the document with the given number or null if no such document
removes a document from the list of documents
returns the transaction type for the given type id
get the transaction types from the database
get the transactions from the database
finish the current transaction
getter for property allow unreferenced creation
get the current gross income
getter for property net income
get the current gross spendings
getter for property net spendings
returns the vat with the given factor and key
returns whether or not this node is deleted
returns the date and time when the
returns the date on which the period ends
update the current journal entry
sets the current transaction id to refer to
deletes the current date
sorts the contacts alphabetically
inserts a new save
sorts the products based on their id
saves this container
initialize the salt
gets the number of the transaction
returns the number unchanged
adds a specific amount of vat to the vat list
sets the vatamount
w f n g
removes this transaction from the import queue
adjust the layout of the field editors so that
the command has been executed so extract extract the needed information
creates a separator between buttons
sets the match case
set prefix search
sets the current location
draws the button
set the bounds for a given square
informs the connection manager that the server is running on
shuts down the server
this method is called to trigger a server task
starts accepting connections
connect to the server
closes the client socket
initialize the table
resize the table
set local scale
returns the rate at which the tanks information
code set local scale code sets the local scale of this node
creates a new synchronize object
called when a synchronized method is called
this method will always return 1
this method will always return true
code custom init code initializes the lwjgl display context
return the height at a specific point
return the height at the given point
return the number of elements in the list
creates a physics representation of the given physics space
creates the model bound
returns the terrain block
returns the height of the terrain base tile in meters
kills a local player
starts the tanks in the game
start the timer if the accumulated time is counting
start counting seconds
makes transparency quad
creates a dynamic chassi
this method returns the power of the living
returns the bounding volume of the collision sphere
creates a static chassi and attach it to the scene
checks if the force is hydraulic jacking
checks if the player is in the team headquarter
this method is used to get the power of the unit
gets the current chassi heading in degrees
gets the current gun heading
returns the current speed of this entity
method to get the name of the tank
method to set the name of the tank
returns if the robot is alive
called after the physics step
called when the tank is about to die
performs the action
return the skybox
update the skybox
kills a local player
all players are in the game state
draw the root node
initializes the display system
create the z buffer
inits the light
sets up the camera
creates the cull states
creates a sky
returns the chassi
start the terrain
setup the effect manager
sets up the weapon manager for the whole world
returns the static chassi
creates a list of tanks and mas
sets up the chase camera for the chase camera
initializes the code first person handler code
finishes the game
sets up the gravity for the physics space
sets up the game
determines if this node intersects with a given bounding volume
start the stopwatch
gets the physics space
returns the tank of the camera
sets the camera target tank
kills the local player
kills a remote player
returns the hud panel
returns the camera target tank
updates the physics space
this method is called after the physics step
called before the physics step
this method is called when the system is powered on
sets the level to the logger
initializes the components of the game
creates the main menu
stops hydralic jacking
this method sets the window settings
quits the game
quits the game and shuts down the program
accelerates the car forward or backwards
sets the initial slot position for the game
returns the player with the given name
turn the wheel
stops turning wheels
executes the action
fires the bullet to the main gun
executes the action in the agent
adds a percept to the list of percepts
adds b bel to the agent
adds a action finished action to the agent
fires a bullet that will be hit by the machine gun
method to set the tank
returns the integer representation of the given parameter
fires the bullet that is currently in the main gun
fires a bullet that will be hit when the machine gun is hit
returns the chassi node
used by agent to move the character before the current move
this turns the robots gun right if it is not
turn main gun left if rotation is positive
returns the number of hashes
put an object into the bits array
add an object to the cache
tests if this set can contain the specified object
gets the scrambler that is managing this scramble
put an object into the table
returns the prober
returns the number of collisions
create an object
this method returns the integer at the given index
creates a new probe counter instance
creates an object of the type
computes the average number of probes for the devices that have been recorded
computes the average number of probes for the element
returns a string of all the attributes in the given element
print the valid elements to the printwriter
convert to a file in the index
return true if there are more files
return the next file
the overriding of this method should ensure that the objects of this class
city location are equal if their starting location is equal
compares this object with the specified object for order
appends a string representation of this object to the given
two file providers are equal if the directory and the
returns a hash code value for this object
parses all the whois code
parses a blitcribe and returns the ripes of the given string
converts a byte array to an inet address
appends a string representation of this object to the given
returns the message
gets the lower address
gets the upper address
returns the localized message for this exception
get the hash code of this object
compares two messages for equality
returns the string representation of the default locale
compares this object with another file field object
returns the hash code of this object
writes the objects data to the given stream
returns the string representation of this exception
appends a string representation of this object to the given
returns the file field pattern at the given position
compares its two arguments for order
compares this byte array to the specified byte array
removes the specified component from the layout
returns the minimum size dimensions for the specified container
returns the preferred dimensions for this layout given the components
paints the title of this window
paints the description
paints the logo for the component
initializes the applet
initializes the screen
sets the title of this code konga panel code
centers the given component on the screen
centers this window on the screen
called by the constructor to initialize the user interface
creates and returns the adapter that keeps the window
get the logo
gets the width of this object in pixels
sets the description of this filter
gets the height of this object in pixels
sets the image to be displayed as the top background
prints the usage of the command line program
prints the command usage to the specified print stream
appends a string representation of this object to the given
test the handle request view method
creates the database
check if certificate is valid
called when a document is removed
upload secure socket to given file
upload the server to the output stream
sends a file to an output stream
receive a file
sends a string to an output stream
receives a message from the given input stream
method to read the response from a url
method to read the response from a url
checks if the given address is a 16 bit compression address
executes the program with the file as the single argument
checks whether the given point is within the grip bounds
sets the direction of the arrow
invokes platform specific functionality to allocate a new gc handle
invokes platform specific functionality to dispose a gc handle
this implementation of code java to native code converts a java
this implementation of code native to java code converts a platform specific
this implementation of code native to java code converts a platform specific
cancels a print job in progress
starts a page and returns true if the page started successfully
ends the current page
returns a point whose x coordinate is the horizontal
returns a rectangle describing the receivers size and location
returns a rectangle which describes the area of the
given a desired em client area em for the receiver
checks the validity of this device
this implementation of code java to native code converts html formatted text
this implementation of code native to java code converts a platform specific
destroys the printer handle
this implementation of code java to native code converts rtf formatted text
this implementation of code native to java code converts a platform specific
returns true if the specified data type is supported by this transferable
this implementation of code native to java code converts a platform specific
this implementation of code java to native code converts plain text
this implementation of code native to java code converts a platform specific
throws an code swtexception code if the receiver can not
if this clipboard is currently the owner of the data on the specified
disposes of the operating system resources associated with
adds the argument to the end of the receivers list
returns the amount that the receivers value will be
returns the maximum value which the receiver will allow
returns the minimum value which the receiver will allow
adds the argument to the receivers list at the given
returns the amount that the receivers value will be
returns the single em selection em that is the receivers position
sets the amount that the receivers value will be
sets the maximum value that the receiver will allow
sets the minimum value
sets the amount that the receivers value will be
sets the single em selection em that is the receivers
constructs a new instance of this class given its parent
clears the selection
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
copies the selected text
constructs a new instance of this class given its parent
throws an code swtexception code if the receiver can not
cuts the selected text
deselects the item at the given zero relative index in the receivers
deselects all selected items in the receivers list
returns the receivers background color
returns the item at the given zero relative index in the
returns the background color at the given column index in the receiver
returns the number of items contained in the receivers list
returns a rectangle describing the receivers size and location
returns the height of the area which would be used to
returns a rectangle describing the receivers size and location
returns code true code if the receiver is checked
returns a code point code whose x coordinate is the start
returns code true code if the receiver is expanded
returns the zero relative index of the item which is currently
returns the receivers text which will be an empty
returns the font that the receiver will use to paint textual information
returns the foreground color that the receiver will use to draw
returns the height of the receiverss text field
returns the maximum number of characters that the receivers
returns code true code if the receiver is grayed
gets the number of items that are visible in the drop
returns the number of items contained in the receiver
searches the receivers list starting at the given
pastes text from clipboard
removes the item from the receivers list at the given
returns code true code if the receiver is enabled and
removes the items from the receivers list which are
returns the amount that the receivers value will be
returns the maximum value which the receiver will allow
removes all of the items from the receivers list and clear the
returns the minimum value which the receiver will allow
returns the amount that the receivers value will be
returns the single em selection em that is the receivers position
searches the receivers list starting at the first item
returns a point describing the receivers size
selects the item at the given zero relative index in the receivers
returns the size of the receivers thumb relative to the
returns code true code if the receiver is visible and
sets the receivers background color to the color specified
sets all items
sets the orientation of the receiver which must be one
sets the checked state of the receiver
sets the selection in the receivers text field to the
enables the receiver if the argument is code true code
sets the expanded state of the receiver
sets the amount that the receivers value will be
sets the contents of the receivers text field to the
sets the maximum value that the receiver will allow
sets the font that the receiver will use to paint textual information
sets the maximum number of characters that the receivers
sets the minimum value that the receiver will allow
sets the font that the receiver will use to paint textual information
sets the number of items that are visible in the drop
sets the amount that the receivers value will be
sets the receivers foreground color to the color specified
sets the single em selection em that is the receivers
sets the size of the receivers thumb relative to the
sets the foreground color at the given column index in the receiver
sets the receivers selection minimum value maximum
sets the grayed state of the receiver
clears the item at the given zero relative index in the receiver
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
returns code true code if the receiver is expanded
clears all the items in the receiver
returns the height of the column header where the
returns the height of the receiver
sets the control that is used to fill the bounds of
sets the expanded state of the receiver
sets the height of the receiver
returns code true code if the receiver is visible and
returns code true code if the receiver is maximized
returns code true code if the receiver is currently
returns the maximum value which the receiver will allow
returns the minimum value which the receiver will allow
returns the single em selection em that is the receivers position
sets the maximum value that the receiver will allow
sets the minimum value that the receiver will allow
sets the single em selection em that is the receivers
returns the receivers text which will be an empty
constructs a new instance of this class given the display
deselects the items at the given zero relative indices in the receiver
deselects all selected items in the receiver
sets the receivers image to the argument which may be
deselects the item at the given zero relative index in the receiver
constructs a new instance of this class given its parent
returns the item at the given zero relative index in the
sets the receivers images to the argument which may
returns the number of items contained in the receiver
set the maximized state of the shell
deselects the items at the given zero relative indices in the receiver
returns the height of the receivers header
sets the receivers menu bar to the argument which
set the minimized state of the shell
returns code true code if the receivers header is visible
sets the receivers text
returns code true code if the receiver is visible and
moves the receiver to the top of the drawing order for
returns the column at the given zero relative index in the
searches the receivers list starting at the first item
constructs a new instance of this class given its parent
returns the column at the given zero relative index in the
constructs a new instance of this class given its parent
returns the number of columns contained in the receiver
sets the background drawing mode to the argument which must
returns the number of columns contained in the receiver
sets the default menu item to the argument or removes
enables the receiver if the argument is code true code
returns the item at the given zero relative index in the
returns code true code if the receiver is enabled and
returns the height of the receivers header
returns code true code if the receiver is selected
returns the item at the given point in the receiver
returns code true code if the receivers header is visible
returns the receivers text which will be an empty
sets the receivers text
returns the number of items contained in the receiver
returns the receivers tool tip text or null if it has
returns the item at the given zero relative index in the
sets the receivers image to the argument which may be
sets the receivers tool tip text to the argument which
enables the receiver if the argument is code true code
marks the receiver as visible if the argument is code true code
returns the height of the area which would be used to
sets the image the receiver will display to the argument
returns the item at the given point in the receiver
returns the receivers background color
returns code true code if the receivers lines are visible
returns the background color at the given column index in the receiver
returns a rectangle describing the receivers size and location
copies the selected text
returns a rectangle describing the receivers size and location
cuts the selected text
returns code true code if the receiver is checked
returns the number of decimal places used by the receiver
returns the height of the area which would be used to
returns the amount that the receivers value will be
returns the font that the receiver will use to paint textual information
returns the maximum value which the receiver will allow
returns the foreground color that the receiver will use to draw
returns the minimum value which the receiver will allow
returns the number of selected items contained in the receiver
returns code true code if the receivers lines are visible
returns code true code if the receiver is grayed
returns the em selection em which is the receivers position
moves the receiver to the top of the drawing order for
pastes text from clipboard
returns the number of selected items contained in the receiver
gets the image indent
sets the number of decimal places used by the receiver
sets the amount that the receivers value will be
returns the zero relative index of the item which is currently
returns the text stored at the given column index in the receiver
sets the maximum value that the receiver will allow
sets the receivers background color to the color specified
sets the minimum value that the receiver will allow
sets the background color at the given column index in the receiver
sets the checked state of the receiver
returns the item which is currently at the top of the receiver
sets the receivers text
sets the em selection em which is the receivers
sets the font that the receiver will use to paint textual information
sets the receivers selection minimum value maximum
sets the font that the receiver will use to paint textual information
sets the shape of the shell to the region specified
sets the receivers foreground color to the color specified
searches the receivers list starting at the first column
sets the foreground color at the given column index in the receiver
sets the grayed state of the receiver
returns the zero relative index of the item which is currently
searches the receivers list starting at the first item
adds the argument to the end of the receivers list
searches the receivers list starting at the first column
removes all of the items from the receiver
adds the argument to the receivers list at the given
deselects the items at the given zero relative indices in the receiver
sets the receivers text at a column
deselects the item at the given zero relative index in the receiver
returns the item at the given zero relative index in the
deselects the items at the given zero relative indices in the receiver
returns the number of items contained in the receiver
returns the number of rows in the receiver
deselects all selected items in the receiver
searches the receivers list starting at the first item
returns code true code if the item is selected
returns the item at the given zero relative index in the
constructs a new instance of this class given its parent
returns the number of items contained in the receiver
constructs a new instance of this class given the display
returns the height of the area which would be used to
returns the number of selected items contained in the receiver
returns the zero relative index of the item which is currently
returns the item at the given zero relative index in the
display a mark indicating the point at which an item will be inserted
returns the zero relative index of the item which is currently
returns the number of items contained in the receiver
returns code true code if the receiver is locked
removes the item from the receiver at the given
searches the receivers list starting at the given
searches the receivers list starting at the first item
sets the number of root level items contained in the receiver
returns the selection state of the given column index
sets the receivers item order wrap indices and item sizes
removes the items from the receiver at the given
removes the items from the receiver which are
sets the locked state of the receiver
removes the item from the receiver at the given
sets the indices of all item s in the receiver that will
removes the items from the receiver which are
marks the receivers lines as visible if the argument is code true code
removes all of the items from the receiver
sets the code cursor code of the tracker
returns the item at the given zero relative index in the
removes all of the items from this list
returns the zero relative index of the item which is currently
selects all of the items in the receiver
searches the receivers list starting at the first item
selects the items at the given zero relative indices in the receiver
changes the appearance of the line used to draw the rectangles
sets the receivers selection to be the given array of items
selects the item at the given zero relative index in the receiver
sets the selection to the tab at the specified index
selects the items in the range specified by the given zero relative
selects all the items in the receiver
returns the item at the given zero relative index in the
selects the items at the given zero relative indices in the receiver
returns the receivers spacing
sets the text of the item in the receivers list at the given
marks the receivers header as visible if the argument is code true code
searches the receivers list starting at the first item
sets the receivers spacing
sets the receivers items to be the given array of items
selects the items at the given zero relative indices in the receiver
sets the receivers selection to be the given array of items
selects the item at the given zero relative index in the receivers
selects the item at the given zero relative index in the receiver
selects the items in the range specified by the given zero relative
constructs a new instance of this class given a data object
sets the zero relative index of the item which is currently
returns the receivers text which will be an empty
shows the selection
selects the items in the range specified by the given zero relative
controls how text and images will be displayed in the receiver
sets the receivers image to the argument which may be
sets the receivers selection to be the given array of items
sets the receivers text
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
sets the control that is used to fill the bounds of
sets the receivers text
sets the receivers tool tip text to the argument which
selects all of the items in the receiver
returns a rectangle describing the receivers size and location
sets the column used by the sort indicator for the receiver
sets the control that is used to fill the bounds of
returns a point describing the receivers ideal size
causes the system hardware to emit a short sound
sets the receivers ideal size to the point specified by the arguments
returns code true code if the receiver is selected
returns a point describing the receivers size
sets the direction of the sort indicator for the receiver
returns the receivers text which will be an empty
sets the receivers size to the point specified by the arguments
marks the receivers header as visible if the argument is code true code
returns the minimum size that the cool item can
sets the minimum size that the cool item can be resized to
sets the receivers image to the argument which may be
sets the item which is currently at the top of the receiver
sets the receivers text
creates the device in the operating system
shows the column
constructs a new instance of this class given its parent
causes the code run code method of the runnable to
constructs a new instance of this class given its parent
marks the receivers lines as visible if the argument is code true code
returns the currently active code shell code or null
returns the receivers background color
shows the item
returns a rectangle describing the receivers size and location
appends a string
sets the selection in the receivers text field to an empty
returns the control which the on screen pointer is currently
shows the selection
returns code true code if the receiver is selected
returns the location of the on screen pointer relative
returns the receivers border width
gets the width of the receiver
copies the selected text
cuts the selected text
sets the control that is used to fill the bounds of
returns the line number of the caret
returns a rectangle describing the receivers size and location
enables the receiver if the argument is code true code
sets the receivers disabled image to the argument which may be
returns a point describing the receivers location relative
sets the receivers hot image to the argument which may be
sets the receivers selection to be the given array of items
returns the longest duration in milliseconds between
returns the character position of the caret
sets the selection state of the receiver
returns the number of characters
returns the control which currently has keyboard focus
sets the receivers text
sets the receivers tool tip text to the argument which
returns true when the high contrast mode is enabled
sets the width of the receiver for code separator code tool items
returns the echo character
returns the font that the receiver will use to paint textual information
returns the font that the receiver will use to paint textual information
gets the editable state
returns the amount that the receivers value will be
returns the maximum value which the receiver will allow
selects the items in the range specified by the given zero relative
returns the number of lines
returns the primary monitor for that device
returns the minimum value which the receiver will allow
returns the amount that the receivers value will be
returns the single em selection em that is the receivers position
sets the receivers size and location to the rectangular
returns the foreground color that the receiver will use to draw
returns the size of the receivers thumb relative to the
returns the height of a line
sets the font that the receiver will use to paint textual information
sets the amount that the receivers value will be
sets the maximum value that the receiver will allow
sets the minimum value that the receiver will allow
moves the receiver to the new location
sets the column used by the sort indicator for the receiver
sets the amount that the receivers value will be
sets the single em selection em that is the receivers
returns a code point code whose x coordinate is the start
returns the matching standard color for the given
sets the size of the receivers thumb relative to the
sets the receivers selection minimum value maximum
marks the receiver as visible if the argument is code true code
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
constructs a new instance of this class given its parent
returns a point describing the receivers location relative
returns the receivers text which will be an empty
returns a range of text
returns code true code if the receiver is resizable
gets the resizable attribute
sets the zero relative index of the item which is currently
returns the receivers tool tip text or null if it has
returns the maximum number of characters that the receivers
returns the single instance of the system tray or null
gets the width of the receiver
gets the width of the receiver
returns the zero relative index of the line which is currently
controls how text and images will be displayed in the receiver
shows the column
inserts a string
returns the receivers monitor
pastes text from clipboard
sets the resizable attribute
sets the resizable attribute
sets the receivers tool tip text to the argument which
sets the width of the receiver
shows the item
sets the receivers tool tip text to the argument which
sets the width of the receiver
given a desired em client area em for the receiver
selects all of the items in the receiver
compares the argument to the receiver and returns true
shows the selection
returns the locale of the receiver
sets the echo character
returns an integer hash code for the receiver
disposes of the operating system resources associated with
compares the argument to the receiver and returns true
returns the amount of blue in the color from 0 to 255
returns the amount of green in the color from 0 to 255
returns the amount of red in the color from 0 to 255
returns an code rgb code representing the receiver
sets the name of the receiver
sets the editable state
returns an integer hash code for the receiver
returns a rectangle describing the receivers size and location
invokes platform specific functionality to dispose a gc handle
returns a string consisting of the receiver and the
if orientation is swt
constructs a new empty region
returns a point describing the receivers size
returns the bit depth of the screen which is the number of
adds the given polygon to the collection of polygons
constructs a new instance of this class on the given device
returns a point whose x coordinate is the horizontal
sets the selection
adds the given rectangle to the collection of polygons
adds all of the polygons which make up the area covered
disposes of the operating system resources associated with
returns code true code if the point specified by the
sets the selection
returns a reasonable font for applications to use
maps a point from one coordinate system to another
returns a rectangle which represents the rectangular
intersects the given rectangle to the collection of polygons
intersects all of the polygons which make up the area covered
returns code true code if the rectangle described by the
returns code true code if the receiver is visible and all
constructs a new transform given all of the elements that represent the
fills the parameter with the values of the transformation matrix
returns code true code if the receiver does not cover any
modifies the receiver such that the matrix it represents becomes
subtracts the given polygon from the collection of polygons
returns code true code if the transform represents the identity matrix
modifies the receiver such that the matrix it represents becomes the
sets the contents of the receiver to the given string
modifies the receiver so that it represents a transformation that is
subtracts the given rectangle from the collection of polygons
modifies the receiver so that it represents a transformation that is
modifies the receiver to represent a new transformation given all of
subtracts all of the polygons which make up the area covered
given an array containing points described by alternating x and y values
modifies the receiver so that it represents a transformation that is
translate all of the polygons the receiver maintains to describe
sets the maximum number of characters that the receivers
constructs a new empty path
adds to the receiver a circular or elliptical arc that lies within
adds to the receiver the path described by the parameter
sets the zero relative index of the line which is currently
adds to the receiver the rectangle specified by x y width and height
returns the ascent of this font peer
returns the average character width measured in pixels
adds to the receiver the pattern of glyphs generated by drawing
returns the descent of this font peer
returns the height of the region
returns the leading handle
returns an integer hash code for the receiver
closes the current sub path by adding to the receiver a line
returns code true code if the specified point is contained by
shows the selection
adds to the receiver a cubic bezier curve based on the parameters
releases any internal resources back to the operating
replaces the first four elements in the parameter with values that
replaces the first two elements in the parameter with values that
adds to the receiver a line from the current point to
sets the current point of the receiver to the point
adds to the receiver a quadratic curve based on the parameters
compares the argument to the receiver and returns true
invokes platform specific functionality to dispose a gc handle
moves the cursor to the previous row in the widget and returns
execute the specified script
moves the cursor forward by one row from its current position
returns code true code if the receiver has the user interface
returns code true code if the receiver can navigate to the
returns code true code if the receiver can navigate to the
copies a rectangular area of the receiver at the source
returns the url of the widget
causes the user interface thread to em sleep em that is
causes the receiver to be marked with the current document state
causes the code run code method of the runnable to
draws the outline of a circular or elliptical arc
returns code true code if the receiver is visible and all
draws a rectangle based on the specified arguments which has
sets the url of the widget
forces all outstanding paint requests for the display
stops displaying the receiver
if the receiver is not in a
draws a line using the foreground color between the points
draws the outline of an oval using the foreground color
draws the path described by the parameter
causes the entire bounds of the receiver to be marked
draws a pixel using the foreground color at the specified
draws the outline of the rectangle specified by the arguments
sets the receivers background color to the color specified
sets the receivers background image to the image specified
fills the path described by the parameter
if the argument is code true code causes the receiver to have
fills the interior of the specified rectangle using the receivers
sets the font that the receiver will use to paint textual information
returns the em advance width em of the specified character in
sets the receivers foreground color to the color specified
returns code true code if receiver is using the operating systems
returns the receivers anti aliasing setting value which will be
returns the background color
if the argument is code true code causes subsequent drawing
sets the receivers size to the point specified by the arguments
returns the bounding rectangle of the receivers clipping
sets the receivers tool tip text to the argument which
returns the receivers fill rule which will be one of
returns the font currently being used by the receiver
returns a point which is the result of converting the
returns a font metrics which contains information
returns the receivers foreground color
returns a point which is the result of converting the
returns the gcdata
returns the receivers line cap style which will be one
forces all outstanding paint requests for the widget
returns the receivers line join style which will be one
returns the width that will be used when drawing lines
process event is called by the event manager when a listener is called
returns the receivers text drawing anti aliasing setting value
sets the parameter to the transform that is currently being
returns code true code if this gc is drawing in the mode
returns code true code if the receiver has a clipping
sets the receiver to always use the operating systems advanced graphics
sets the receivers anti aliasing value to the parameter
warning api still under construction and subject to change
warning api still under construction and subject to change
sets the area of the receiver which can be changed
sets the area of the receiver which can be changed
sets the area of the receiver which can be changed
sets the area of the receiver which can be changed
sets the receivers fill rule to the parameter which must be one of
sets the font which will be used by the receiver
sets the foreground color
sets the foreground pattern
sets the receivers interpolation setting to the parameter which
sets the receivers line cap style to the argument which must be one
sets the receivers line dash style to the argument
sets the receivers line join style to the argument which must be one
sets the width that will be used when drawing lines
if the argument is code true code puts the receiver
warning api still under construction and subject to change
warning api still under construction and subject to change
returns the extent of the given string
execute the action
sets the amount of time to wait before each sensor
stops tracking tilt moves
start tracking the shake
stop tracking the shake sensor
start tracking heading heading
stops tracking heading heading
set the view event listener
gets the orientation of the figure
removes the listener
add an alias and its aliases to the page
sets the maximum size of this component
moves the file to the ad directory
returns a hex string of the given message digest
returns the directory where all the files are stored
removes an asset from the asset directory
returns the absolute path to the asset directory for the given
returns the full path of the asset
returns true if the protocol is registered
returns the name of the asset
returns the path to the asset
inject java script
stops listening for heading heading events
loads the given url with the given data
get the tilt of the world
the scripts and the current page are updated
returns the direction the sprite is facing in degrees
sets the css style name for the stop button
sets the properties
returns true if this track is an auto play
returns whether the control should be shown
loads the given file
resize the component
opens the given url in the current page
return the dimensions of the device
close the ormma view
hide the frame
show the log
return the visibility of the object
get the orientation of the screen
get the screen size in human readable form
return the ormma view size
reset the view
get the maximum size of this component
sets the maximum size for this component
the orientation of the window has changed
returns the type of network that this node is connected to
fired when the script connection changes
release a player
get the current location
starts listening to location information
stops all listeners that are listening to location updates
init the script
send a sms to the user with the given body
send a mail to a user
creates a tel url from a number
returns the same text from the given jar into the asset directory
set the maximum size of the display
returns the height of the content view
remove the view from the list of opened views
get the current state of the view
resize the window to the given width and height
close the channel
send an empty message to the ui
send an empty message to the ui
get connectivity manager
resets the contents of the frame layout
returns true if a page is finished
convenience method that returns the size of this bitmap divided
p indicates whether this components state has expanded p
returns an array list containing all daughters that are not in the path
search a single antecedent
setter for property id
method get sentence
sets the sentence
getter for corpus
get the mother of this group
get the verbosity of the command line options
sets the name of the xml file to be read
sets the mother new
gets the value of edge2mother
sets the value of the
checks if the
returns a string representation of this graph in the form
style string for the graphical representation of the tree
returns the second mother for this node
sets the corpus
appends the path to the method
gets the next sentence in the corpus
returns a string representation of this object
gets the previous sentence in the corpus
compare two graph nodes
gets the next sentence
gets the previous sentence in the corpus
convenience method to check if this element has a mother
returns whether this type has sec daughters
gets the span of the first span to be replaced
print method for debug purposes
swaps the positions of all the edges and nodes
returns the number of nts in the set
print node error
sets the category
returns the number of nts
returns the text of the token
get the node before this one
returns true if the given word is a surface word
returns the nt identified by the given id
is the category dominated by another category
get the t with the id
get the next step
returns the category
get a graph node from the store
returns the span of the pre generated corpus
returns all the graph nodes in the graph
returns a new path that is a copy of this node to another
returns a array list of nodes that are daughters
get the first node of the sequence
returns a terminal with the given id
returns the sec daughters
is the given node dominated by this node
returns a list of all daughters
check whether the given node is contained in this graph
returns a list of terminals
returns the last node of the path
returns a string representation of the tree
get the word list for the current sentence
returns the text of this
returns a list of all the descendants of this node
returns the root node of the tree
returns a string representation of this node
returns a list of all the descendants of this node
gets the root for this filesystem
prints the tree to the standard output
returns the word
print the tree to the standard error stream
get the number of ts
gets the number of ts in the current timestep
print the node to the console
print information about this node to the standard output
return true if the position of the node is before the given node
returns the leftmost terminal in the terminal list
gets the terminals
gets the verbosity
method to tree string
sets the verbosity of this objects output
prints the tree to the standard output
print the tree to the standard error stream
formats a byte array into a string
returns the lemma name
returns true if the given string contains a word form
checks whether the given node occurs on the surface
compares two sentences for equality
returns the node with the given id
get the general type of a node
gets the position of the node
returns the subject of a generalizer
set the id of this pass
gets number of sentences in the knowledge base
returns the number of sentences in the knowledge base
get a graph node from the store
this is the same as get graph node but returns the node span
call this method to get the nt for the given id
returns all the nts in the knowledge base
returns all the sent sentences
returns all the graph nodes in the graph
gets sentences the word is contained in
gets a sentence at a specific position
retrieve the sentence with the specified id
add a sentence to the list of sentences
adds a corpus attribute
gets the value of a corpus attribute
gets the names of all attributes
returns the text of the sentences
serialize the current state of the simulation to disk
compares two corpus objects for equality
returns the hash code of this object
set hash code
the method prints out the two sentences in the xml file
this is a utility method for running a migration
returns true if the given area is visible in the view
get a condition from a bundle
convenience method for getting a i18n keys value
convenience method for getting a i18n keys value with arguments
convenience method to get the configuration hash map
needed for acegi security 1
paints the component
sets the action text
adds a card to the players hand
sets the horizontal range model to the given object
returns the horizontal range model
sets the vertical range model to the given linear range model
returns the vertical range model
sets the amount to increase or decrease the x axis scale when a
adds a listener to the linear range model
accessor for the number of values to include between
set the font
accessor for the number of values to include between
accessor for the number of values to include between
removes a listener previously added with
set the xgraduations flag
is the xgraduation drawn flag set
sets whether or not this font is antialiased
sets the drawing state for the ygraduations
get the linear range model that this control represents
is the ygraduation drawn
sets whether the vertical zero line is drawn
returns true if the font is antialiased
this will return the flag that controls whether or not the vertical zero line
sets whether the zero line should be drawn
return true if the horizontal zero line should be drawn
set the starting value
sets the color for the zero line
returns the current value
returns the color used for zero line numbers
sets the color for the graduation line
returns the color of the graduation line
sets the value of this property
set the ending value
draws the component
paint a zero line with a horizontal line
paint a zero line with a horizontal line
returns the extent of the model
sets the end and end values of the scale
sets the text of this label
returns the time of the event
sets the time
set the extent of the model
returns true if the text is displayed
returns a rectangle2 d containing the range of this
this will set the state of the text display
add a strip chart listener to this chart
remove a strip chart listener from the chart
adds a property change listener
getter for property start value
this property is true if upcoming changes to the value
set the scale bar width
set the horizontal range model for the chart
remove a property change listener
adds a chart model to the list of plots in the chart
returns true if the chart model is in the clipping plane
returns the jchart plane
update the values of the y axis scale scale
this property is true if upcoming changes to the value
getter for property end value
adds a marker to this jmarker model
adds a jmarker with the given text to the map
set the value
sets the linear range model to use
set the extent of the scrollbar
returns the maximum value
sets the minimum to i new value i
get the preferred size of this jmarker
returns the value of this parameter
sets the orientation of this component
returns the minimum value
set the maximum value
set the value is adjusting property
removes x from the list of listeners that are notified each time
sets the maximum to i new maximum i
returns the minimum value
this property is true if the value is adjusting
adds a code linear range model listener code to the linear range model
returns the maximum value
set the minimum value
sets whether track position leading or tailing is used
returns the extent of the
returns true if track position is leading
returns the orientation of the scroll bars
fire a linear range model event to all listeners
sets the text color see windows sdk
sets the orientation of this component
adds a listener to the chart
removes a listener from the chart
fire data changed
fire and event to the strip chart listener
adjustment type for the value of this property
returns the text color
returns the ranges
remove the chart model from the list of stripchart models
adds a marker
removes a marker from this jmarker strip
update the x axis values to include a change
set tick color
this is the marker model for this marker
sets the marker model to use
adds a property change listener
returns the length of this label
set the tick position leading
adds a model strip chart model and its associated color to the list
get the tick color
returns a boolean indicating whether the specified model is
sets the horizontal range to the given linear range model
fire a linear range model event to all listeners
the vertical range is the horizontal range
is tick position leading
set tick position leading
performs component painting common to all constructors
sets the minimum extent of the model
this method is called when the component is resized
this method returns the tick position leading flag
returns the minimum extent
test the constructor
some checks for the constructor
test method for
some tests for the constructor
returns the tick increment
tests the get text method
test the constructor
test for void set text class
test adjusting to the value
test method for
sets the value of this property
returns the tick
test set value is adjusting
test that the is text displayed method returns true if the marker model
test the get value is adjusting method
test of get extent method of class linear range model
set the extent of the model
test setting extent
test method for
test that get maximum works for a range model
set the minimum value
test that get minimum int will return the minimum value
test setting the range properties
test the chart to string method
set the value is adjusting property of the model
set the maximum value
returns the pixel size for the component
updates the scale slider
fire a linear range model event to all listeners
returns the msd
returns the expression to be evaluated
creates the field editors
adds a segment to the end that is directly adjacent to the
determines if this city is equal to the given object
add a model to the graph
display a tracking log
this method adds a new event to the current simulation
creates a new option menu dialog
initialize the document with some default text
get the number of catemplate models on the database
add a specialize event to the event queue
checks if state is y of cell
get cell dimension in pixels
called when the mouse is pressed
called when the mouse is released
get the number of catemplate models from the database
get the data grid for cas
takes a set of attributes and turn it into a foreground color
takes a set of attributes and turn it into a background color
logs the user out of the server
factory method for the map screen
gets the value of severity
returns the original exception that caused this exception
p log an error with debug log level
logs a message at error priority and passes an exception for logging
p log an error with fatal log level
return a hash code for this object
p log an error with info log level
logs an object with the given severity
check if the given percentage is in the range 0 100
returns a random integer between 0 and max
returns the starting base defense of a given race
get the starting base engine of the ship
returns the starting hull tech for the given race
get the starting beam tech of the specified race
returns the starting number of the launcher tech for a given race
returns true if current index is the expert engines index
returns true if current index is an expert hull
checks if the current user is expert beams
returns true if the current index is an expert launchers index
create a new universe constraint exception with a message
returns a new mineral indexed int array containing only the elements
scan range of this ship using the specified race
called to notify a planet that its colonist has changed
returns the number of engines
sets the number of engines that this cell editor is using
gets the value of the hulls property
sets the number of hulls in the cell
getter for property beams
sets the number of energy levels that the player can plant
get the launchers
sets the number of launchers
check to see if there are enough cargo space to add
returns the education domain of this parameter
displays a dialog within a center of the given parent
displays a child in the right side of the panel
retrieves the student with a given oid
retrieves the student with a given oid unique number
retrieves the first student whose property with a property code is equal to
selects students whose property with a property code is equal to a property
gets students ordered by a property
gets students selected by a selector
gets students ordered by a composite comparator
gets first name students
gets students ordered by first name
gets students ordered by last name
gets students ordered by index number
gets students ordered by jmbg
retrieves the professor with a given oid
retrieves the professor with a given oid unique number
retrieves the first professor whose property with a property code is equal to a
selects professors whose property with a property code is equal to a property
gets professors ordered by a property
gets professors selected by a selector
gets professors ordered by a composite comparator
gets degree professors
gets first name professor
gets last name professor
gets professors ordered by first name
gets professors ordered by last name
gets professors ordered by jmbg
retrieves the presence with a given oid
retrieves the presence with a given oid unique number
gets professors ordered by degree
retrieves the first presence whose property with a property code is equal
selects presences whose property with a property code is equal to a property
gets presences ordered by a property
gets presences selected by a selector
gets presences ordered by a composite comparator
gets presences ordered by absent
retrieves the task with a given oid
retrieves the task with a given oid unique number
retrieves the first task whose property with a
selects tasks whose property with a property code is equal to a property
gets tasks ordered by a property
gets tasks selected by a selector
gets tasks ordered by a composite comparator
gets score tasks
gets tasks ordered by task type
gets tasks ordered by task name
gets tasks ordered by score
retrieves the student course with a given oid
retrieves the student course with a given oid unique number
retrieves the first student course whose property with a property code is equal to
selects student courses whose property with a property code is equal to a property
gets student courses selected by a selector
returns the professors
gets student courses ordered by course type
returns the course of the given course in the given course
retrieves the grade with a given oid
retrieves the grade with a given oid unique number
retrieves the first grade whose property with a property code is equal to a
selects grades whose property with a property code is equal to a property
gets grades ordered by a property
gets grades selected by a selector
gets grades ordered by a composite comparator
gets grades ordered by mark
gets grades ordered by percent
sets the written to index
returns the written to index
set written to index
retrieves the course with a given oid
retrieves the course with a given oid unique number
retrieves the first course whose property with a property code is equal
selects courses whose property with a property code is equal to a property
gets courses ordered by a property
gets courses selected by a selector
gets courses ordered by a composite comparator
sets the tutorial hours
gets the value for tutorial hours null
gets the domain configuration
set the professor oid
returns the professor oid
returns a courses instance given a professor oid
gets the given professor
gets courses ordered by course name
gets courses ordered by course id
gets courses ordered by ects
gets courses ordered by tutorial hours
generates modelibra wicket application properties
gets courses ordered by lab hours
returns the path of the directory containing the source files
get test directory path
gets courses ordered by lecture hours
generates domain for the method with given arguments
generates modelibra classes
generates specific domain configuration using modelibra generator
displays a child below the right corner of the given child
returns the current text of the label
get the counters for the job
sets the text
gets the value of the hours message property
set the hours message
returns the minutes message
sets the minutes message
gets the seconds message
sets the seconds message
removes all configuration items from this panel
removes the item from the listbox
paint the configuration panel
setup this class
adds a property to this object
checks if a property with the given name exists
run all the database operations
creates a new table
opens a new hibernate session
returns the plan stack
removes a goal from the list of goals
returns the first abstract goal in the list of the
gets the first goal of the desired type
gets the context
gets the value of intentions
returns the current commitment
registers a plan with the factory
deregisters a plan from the plan manager
adds a goal to the agent
removes a goal from the agent
the main method of the achievement thread
executes achieve plans given a goal
returns the best plan for the given goal
validates that all of the goals in the order they were added
checks whether the given goal is applicable to this goal
a goal is not implemented
achieve a goal
achieve a goal only one goal
achieve the given goals at least one goal
adds a new rule to the knowledge base
removes a rule from the grammar
inserts a new object in the knowledge base
checks whether all conditions of a rule which reference only
checks whether all the conditions of a rule which reference some declared
checks whether a certain condition of a given rule is satisfied
executes the knowledge base dp actions
two rule base objects are equal if their rule index and rules index
returns the class of a rule declared in this scope
returns the class name of a given rule declaration
returns the number of rules in the current set
returns the object associated with the declaration at the given index
returns a hash code value for this object
fires a rule to the listeners
sets the object at the specified rule index
sets the objects for the specified rule
this method implements the rule script rule
run a script in the given file
returns the rokbase that generated this event
adds the rules
add a rule to the rule base
adds the given conflict set listener to this knowledge base
adds the given rule fire listener to the list of listeners
insert a new object in the knowledgebase
dispatch an element added event to all registered listeners
dispatch an element removed event to all registered listeners
notifies all registered listeners that the rule was fired
dispatch a rule firing event to all registered listeners
this method is used to flush the knowledge base
get the rule base for this grammar
an object was modified so that it will be fresh
removes the given conflict set listener from this knowledge base
removes the given rule fire listener from the list of listeners
retract an object from all the pending nodes
run in loop
dispose the role
makes decision on the board
generates a new decision
this method is called when a group is iteration
gets the bidder
called when a group is round
called after a round has been executed
returns a list of all the commodities in the database
shuffles the cards in the deck
sets the strategy for this player
returns cards that are left in hand
returns true if the given player wants to be made
clears the list of players
returns the player at the given index
calculates the avr score for the current player
calculates the avr round score
sorts the players by score
sorts the players by round score
returns the number of players in the group
adds a player to this game
removes the player p from the group
remove the player at index i from the list
creates the player
this factory method creates a new group
add a data output to the command
remove the specified data output from the list
this constructor sets the history length
this constructor creates a pdplayer
plays a game
sets the length of the history for this file
this sets the visualiation of a certain player
set the current player defected by the given opponent
count defects in a certain opponent
counts the number of communication bits per player
set the strategy for this analyser
returns the best player that has friends
resets the round
method get unfriendly player
resets the game
get the round score
resets the history
get the avr score
returns a string representation of the object
check the size of the history
updates the matrix with the data in the string representation
sets the result
defines the fact that this problem has been a sub problem
gets the value of the son1 property
gets the second of the deck
sets the first of the two way point
sets the second of the two stations relative to the
sets the result
set the sub problem
add a hitbox to the frame
returns the lower y coordinate
resizes the canvas to the given initial y position
select the specified hitbox in the hit box
initializes the tile array for the given tile number
called from the x axis
fills the combobox with the data from the edited hit boxes
reinitialize all animations in this group
draw the given canvas as the currently edited object
returns the canvas that has been edited
set the value of a applet property
sets up the loader
returns the index of the rectangle with the given coordinates
returns data from the applet
get a property from the applet context
converts an rgb color string to a color
paints the image on the screen
parses a string to a rectangle
updates the screen
shows a document
shows a document
handles mouse exit events
connect to the given url
handles mouse down events
connects to the database with the given url
returns the bounds of the rectangle
set the bounds of this object
sets the location and size of this code rectangle2 d code
determines whether or not the specified code rectangle code is
returns true if this rectangle intersects the given rectangle
returns the intersection of this rectangle with the specified
returns the union of this rectangle with the specified rectangle
enlarge the rectangle to represent this rectangle
determines whether or not two my rectangles are equal
creates the main panel with the text area and the side panel
tests saving a string
tests the save as method
saves this object to the given xml
return a string representation of this object
adds a task listener
sets the map of peak names to the given map
export the chromatogram as a raw data file
returns the index which have the given retention time and the intensity values
export the data set to the file
refresh the dataset
loads the given structure into the viewer
loads 2 d structure
returns the bins for a series
returns the highest value in the mz range
returns the drawing supplier from which this is a factory
this function analyses an event and calls the right methods to take care
makes the table available
called when the sorter has been changed
get the peak that is currently selected
get the row for a given x y coordinate
creates and returns a button to be used in the done button
find the scalar map for a given display real type
set the maximum intensity of this
creates the panel which contains the graphics mode control
toggles whether peaks should be shown or not
get the color of the peaks
this method returns the data point object corresponding to the scan number
create a string representation of the peak
add mz peak to a mass spectrum
get the last mz peak in the spectrum
returns whether the annotation alpha map should be used
return the name of this filter
gets the status indicating if the database environment is in log10
creates a label table for each axis
checks whether a given point is within the range of data points
peak status estimated
returns the compounds retention time of the
get the data point object for a given scan number
get the region on which the exception occurred
get the region on which the exception is to be terminated
returns the site of the event
returns the query number
gets the ion score
returns the fragment ion type
sets the raw data file
returns the expected mass
returns the sysname
returns the number of missed cleavages
get the ion serie
returns the section of a given peptide
returns the number of coverage
set the scan peptide
this method returns the precursor mass
get the charge of the precursor of this spectrum
get the fragmentation of this cluster
sets the threshold for significance
set the fragmentation of the peptide
gets the value of the significance threshold property
set the hash map of modification codes
set the ion serie
set the name of the file
returns the protein that this entry belongs to
get the number of queries for all peptide hits
set the protein this entry belongs to
set the number of queries for finding out how many peptide hits
returns the identification method
adds a raw data file to the collection
sets the value of identification method
returns the parameters
returns the name of the proteome
sets the value of a parameter
add a modification to the list of searched modifications
set the mass for an element
get a protein by protein name
adds a new serie ion to the fragment series
add a protein to the set of proteins
gets the scan for the given query number
adds a scan to the list of peptide hit points
returns the peptide mass error tolerance
returns the fragment ion mass error tolerance
returns the total ion current
returns the code raw data file code instance
add a peptide to the ones already in the hashmap
gets the isotope pattern score
sets the isotope pattern score
get the isotope pattern for this isotope
set the pattern for generating isotopes
get the nist ms search executable
run a search on the nis
adds fragment to the peak list
removes all the series from the collection
get the peak list row
set the list of ransac vectors according to the current rates
get the aligned row
get the logarithmic k value of w n
calculate the error in the structure
add peak and match score to the list
returns the data point object for the given scan number
returns the sign of the h h mex h h
set the mass charge value
gets the meta data
returns the text of an element
returns the text of an element
the method initializes the peak list with the actual jobs
save a version of the pellet server
sets the status text
returns the url for the given id
checks if the given url is an id url of this resource
this method returns an id for a given url
returns the number of raw data files in the project
get the number of rows
the number of peaks in the list
get the peak list row
get the peak status
gets the best isotope pattern for a given chromosome
peaks with highest height
this method returns the data point object that corresponds to the
returns the data points file
adds a new parameter to the table
removes a user parameter from the list of parameters
returns the user parameter with the given name
get the file chosen by the user
get the save file
returns the exit code of this ownable
set the state of buttons
register a component to be controlled by this display manager
handles the mouse leaving the tooltip
handles the mouse pressed event
called when the mouse is moved
adds a component to the container
check if row conforms with peak list
checks if range contains value
copies all data from one stream to another
returns whether this range contains the given range
checks if the point is within the interval
checks if the range is within check range
extend the range so that it is within the allowed range
makes this range an extension between the given range
update the minimum size of the main panel
returns the size of the range
returns a string representation of this object
returns the average of the two farthest values
returns a string representation of the object
close the dialog if the ok button is pressed
compares to ranges by the minimum and maximum values
makes the dialog invisible and commits changes to the gui
this method is called when the parameters have changed
sets the value of the combo box
sets the selected values
adds a button to the panel
returns the source of this task
initialize the module
adds a task listener
fires the task event to all the listeners
sets the expose server name
gets the default paragraph
sets the default paragraph
sets the paragraphs
adds a new paragraph to the collection
gets the filter
sets the node id attribute of the graph node dimensions object
set the node id and shelf id
set the state of all the panels
sets the cr cnt
clr the signal
set the local and shelf id of this node
get the current shelf id
set the alarm piu port
get the niu sfp swa for a given shelf
retrieves type of a particular ont node
sets the alarm
retrieves status of an ont
get the niu sfp swb for a given vehicle
sets the alarm
retrieves a specified alarm
max occurs determines the maximum number of times that the property can occur
sets the deact status of the r4
max occurs determines the maximum number of times that the property can occur
clr piu port
clr niu port
sets the mj cnt
sets the mn cnt
set the value related to the column slot info
set the id of the slot this is a constant
set unit id
gets the value of the slot info property
get the id of the slot
get the unit id
get the state of the slot
this method refreshes the slot panel
locates a row in a table by table id
this method refreshes the state of a ne
returns the maximum occurrence for this element
sets the selected ontonu id
unselect a vlan port and clear all tables
sets the niu sfp value for this get company report result
sets the alm sfp value for the specified serial port
show the icon at the center of the screen
set ring type
returns the maximum number of occurances that this content model group
gets the help file path attribute of the jbuilder project object
add table info to msp
add table info to msp
add table info to msp
add table info to msp
add table info to msp
add table info to msp
remove data from the table
this method returns a new msp table info to the table
max occurs determines the maximum number of times that the property can occur
returns the path to the help file
add table info to msp
removes the e1
removes the data source table from the selected data source
initializes the plugin
returns the maximum number of occurences of this type
unselect a vlan port
max occurs determines the maximum number of times that the property
creates a default arp
this method returns a filter
initializes the filter
returns the path to the help file
initializes the filter
initializes the filter
returns the path to the help file
initializes the filter
initializes the filter
initializes the filter
returns the path to the help file
returns the path to the help file
initializes the filter
add table info to msp
this method initializes this
returns the path to the help file
add table info to msp
add table info to msp
initialize the filter and add the dns
this method is called by the systems instance to provide
add table info to msp
initializes the filter
returns the path to the help file
this method performs a vlan command response
initializes the filter
get the path to the help file to be displayed
request protection lag lock
request protection to a given element
add table info to msp
request a test led
request the system to initialize an object
returns the path to the help file
adds table information to the i cal file
add table info to the group details table
add table info to msp
set the view id
this method is used to handle a response to a user
set the view id
handle a response to a specific command
get the view id
set the unique identifier for this view
create the panel to hold the management results
returns the help text
sets the column panel attribute of the calendar table object
get the click state
set the click state
sets the enabled state of the column panel
returns true if port is a lid match
set the view id
return the selected mac list index
set mac list detail info
sets the slot id
gets the number of the selected row
returns true if the port is a lid match
gets the selection lacp
set the details for the lacp
returns the config row for the selected table
set the unique identifier of the view that this controller is in
sets the port id value
return the row index of the band to display
gets the selected self loop index
gets the select prec attribute of the table map object
returns the number of row selected in the table
gets the laggr to select in this row
sets the visibility of the row
this method is not supported by this class
this method is not supported and will throw
sets the enabled state of the receiver
sets the click state for this evlan key
selects the igmp grp from the table
set the igmp group detail info
returns true if port is a lid match
gets the select igmps
this method sets the state of all all the cells in the port
general method to set the response state for all the cells
sets the slot enabled attribute of the saison tabbed pane object
sets the number of this ontology
clears all port states
sets the background color of all cells
sets the omci detail info
returns true if the entered string is a lid match false otherwise
determines the select number of the i th row in the table
fills fields with br details
returns the select pri for this row
gets the select value for the current table
gets the selection arp
sets the detail info of the arp on the given column
gets the selected row a row for the first column
implementation of igmp interface
sets the port id for this connection
returns true if the input field is a lid match
gets the select port number
initialises the properties of the panel
returns true if the input field is a lid match
gets the row number for the selected row
sets the port id for this connection
gets the svlan port number
returns the number of rows selected by the user
gets the selection of the group
sets the details for the port
sets the genes data
fills the details panel with information about the selected port
determines the select index of the ilect router
sets the information to be displayed in the graph
returns the select smac row
sets details of the current selected port
set the port detail info
select the igmp item at the specified row
sets the click state
gets the select port number
set the detail info for mac list
return the row index of the mirror that is selected
request the initial screen
return the port value
gets the value
this method sets the text of the response label
this method sets the text of the radio button to a new value
returns the number of the current position
clear the text field
get the node name
initial the initial vlan
change the port for the pnl server
gets the selection svlan mode
invoked when an action occurs
sets the value of the svlan mode detail info field
sets the state of the header buttons
gets the select port number
sets the state of the header and do click
sets the value of the selected port
change the entire table
returns true if the column panel state has changed
invoked to notify the service that the ont
returns the select filter index
set the node id
gets the node id
sets the size of this slot
sets the system id of this node
clr piu port piu line
set the initialization state of the button
get the shelf id
returns the number of rows selected by the user
set the alarm piu port
set the unique identifier of this shelf
sets the alarm
set the port number to be used for piu communications
returns the parent jframe that contains this component
gets the controller
sets the current state of the slot
display this ont
set the alarm for the slot
set the view id
request the initial command from the user
process the information of a command response
sets the svlan port
set the port of the rcx server
enable disable swu port buttons
retrieve the niu sfp for the specified ne id and shelf
this method enables the j2 se1
this method changes the id of the shelf if the given slot
sets the enable ont port button to false
this method returns a string that represents the port
sets the port of the ont interface
enables disables all components associated with this port
set all j2 sees to none
draw the unit
disable all j2 se ports when user select the wrong port number
set the value related to the column niu sfp
retrieves a specified alarm
enables disables all ont components
enables the port number during the coverage
sets the size of the slot
setter for property aco
set the slot info
enables the j2 ee hardware port
clr piu port
set the blank status of this row
sets the alarms for the specified port
initial command station for open cmd
set the view id
clr niu port
shows the aco on the screen
draw the alarm in the display
set the cid flag
disabled all jdni ports in this component
enable the jdni ont port i
display a message dialog that the user has no command
check if the component is in the checked state
checks if all the selected options are ok
gets the select attribute for the nth selected attribute
selects a slot
sets the attribute info
this method is not implemented
fills the current mask value with the given one
this method returns the mask for the ok button
set the window location
general check to check if the dbdata desc button is selected
this method returns a string that contains the port number
set the port for the serial port button
set the port of the ont
this method deselects all the port buttons
this method disables all the port buttons
this method enables the set all port button
set all ontns on the port to none
set the j2 se ontilty on the fourth port
initializes the jbn environment
enables the jdni port because the ontn network was disabled
removes all jensens and portes from the jbns
enables the jdni port
description of the method
set nessesses port set to none
return the vlan row for a specific vlan
sets the node id
sets the port id value
this method is used to check the validity of the process
this method should be called when the user modifies the state of the
set the port btn state
gets the selection index for the table
set the port for the serial port button
this method returns the port of the dbdata description
enables disables all components in the port panel
refresh all data in the table calls fire table data changed method
set detail info for ne
returns the button used
sets the btn used
getter for property btn not used
sets the btn not used
this method is used to get the address of the selected ont
handles the response to a command from the user
return the selected ont
gets the selection index
enable all j2 se ports
sets alm detail info
set the details for the given ont component
enables the port number during the coverage
enables the j2 ee hardware port
changes the current slot detail info
sets lid to current lid
sets the port id value
clr list the rows of the result table
sets the swu id of the client slot
sets id of the slot of the supbook
sets lid for the current ont
request the initial query
set the view id
set id of the slot
returns true if this object is enabled
this method checks the validity of a process variable
change the state of this button
returns the id of the port
returns the sequence number of this message
inserts some content into the document
this method is called by swing to remove text from this document
returns the check box port
set no ontolgy port set to none
retrieves information from the user interface
disable all four jamon sensors
clear the check clear checkbox
check vlan checkbox
enables disables all ont components
selects the mac checkbox
sets the check qos checkbox
this method checks the validity of the process variable
selects a check box
to get the command to use for a vlan command
enable the j2 ee hardware port
enable disable all checkboxes based on the given boolean
initialize the chk mac and filter settings for this applet
set the check box to show a port
set the slot identifier
sets lid to the passed ont
sets the slot detail info
returns the row number of the selected eth
sets the detail info for mac list
gets the max item count attribute of the elvis line object
refreshes the profile list
return the select vlan row
returns the select index of the aco in the table
set the value of aco detail info
set the value of port button
sets the selection mode of the port
returns the selected port
sets if this slot should be changed
sets the state of the port
gets the selected boot
initialises the controller
set the unique identifier of the view that this controller is associated with
sets the details of the boot
gets the index of the user selected
set the user detail info
sets the text to be displayed in the help button
returns the help text
set the selection state of the button
returns the selection state of the button
set the tooltip of the button
gets the selected row
set the port btn state
sets the port number in the port combo box to the given state
this method enables the swu port button
this method enables the buttons on the piu port
enable the j2 se net on the port jcombo box
if port is a lid match then return true
requests the eth to enter the security
set the view id
initial cmd handler
set the unique identifier of the view that this panel is in
sets the port id value
gets the select date attribute of the date table panel object
sets the detail info for mac list
set the details of the selected ont unit
refreshes the route table
initializes the table
sets the details for the route
this is used when saving a new record
set the button to enable processing
returns the netmask for this filter
sets the information about the ontology being processed
set the unique view id
sets info about the alm
handle the command response
returns a flag indicating whether psh is enabled
inits the checkboxes
set psh enable
initialization of the checkbox and the input fields
set the view id
process the commands response of a command
change the state of the svlan port
this method deselects all the port buttons
sets the detail info for mac list
return the selected pri tag
change the port for all open cards
enable disable swu port
this operation sets the enable piu button on the buttons
change the disable state of all the piu port buttons
get the squ1 port
initialize the port
set all jcheck boxes to none
set the selection mode for 1 8 ports
this method returns a string that represents the port
sets all jcheck boxes to disabled
to clear all the inner ports from the host
enable the jdni ont port all port in this group
this method checks if all the port buttons are not used
returns the entered decimal value
initialization of the dialog
gets the select ems
this method sets a value for the lid field
returns the index of the current selected row
sets the inband detail info
this method checks the validity of a process variable
this method disables all jcheck buttons
enables or disables the button un tagged
gets the index of the selected ver
set the port of the jaguar
selects the ntp table row
change the state of the serial port
retrieve the sync selection
sets the details of the ntp
sets sync detail info
sets the pm detail info
initialises the program
set the unique identifier of the view
this method sets the vlan desc for a given ip address
initial command execution
set the unique identifier of the view that this panel is in
this method returns a string that represents the port
returns the button tag
setter for property btn tag
get the button that unidades out the tag
returns the selected table row
sets the btn un tag
sets the model and jcombo box to reflect the specified lpbk number
enables the radio buttons for swu ports
enables the radio buttons onu port
change the disable onu port
select an ip from the table
initialize the port of the serial port panel
set the ip address and ip number to use
set the slot detail info
gets the id of the sys to be used
sets the system detail info for a specific node
request the initial command from the server
set the view id
set the port btn state
returns the port number to connect to
this method clears all checkboxes
select the check eth
sets the check box to the given checkbox
selects the check remap checkbox
set check sched
sets the check box
method for setting the port id
sets check prec
selects the check rate
sets the check thtemp
selects the maclimit checkbox
selects the macage checkbox
sets the check igmps checkbox
sets the check stp
sets the slot id that the user clicked in
initialize the chess board with the port settings
set the port
sets the port id value
gets the selected table row
sets ip address of the dns entry
this method handles the commands
command to initiate the initial state of the panel
get user detail info
sets the view id
set the window location
enable disable the j2 se ports when user disables them
disable all j2 se ports when user select the wrong port number
enables the j2 ee hardware port
gets the list attribute of the user object
returns true if port is a lid match
handles the command
set the info for eth
set the details of the specific ne
retrieve a copy of the row selected during the copy
return the row of the parameter table
set the port btn state
this method returns the command for the button
enables disables the south borders for the panel
enables disables the buttons for a piu slot
enables disables the port button
set the port of the ont
copy config row
enables or disables the ont port button
set all jiga port set to none
initialises the program
this function is called on deact
lease for a user
selects one row from the query
sets the type of ospf detail info
gets the route to select in this table
this method is used to set the details for a specific route
called to process a command response
select an ip from the table
gets the selected row
initializes the tbl protocol
set the configuration information for this component
checks if there is a subnet in the pool with the same subnet
refreshes the protocol table
gets the value of neversion
gets the id of the last invoke invocation
gets the value of in stream
returns the address of the machine that is running this thread
returns the packet length
sets the invoke id
returns the header info
setter for property more flag
returns the current time
returns the sequence number of this packet
getter for property format current time
sets the seq no
gets the type of command this command handler is
sets the type of this command
gets the value of msg type
sets the msg type value for this message
return the unique identifier of this class
sets the id
returns an unsigned long value representing the byte
gets the value of ne ip address
sets the ne ip address of this hs hr users to the specified value
writes a string to the supplied stream
the event consumer thread
gets the value of command id
resume again after a pause
get the network status
set a radius attribute for this radius template
returns a radius attribute of the given type
request the initial alarm
authenticates a radius packet using the given access request
returns the packet type
returns the packet identifier
creates a request packet
invoked when the mouse exits a component
sets the enabled state of the column column actions
invoked when an item has been selected or deselected by the user
closes the main menu bar
set the hostname for this store
overridden so we can exit when window is closed
raises an alarm
this method initializes this
refresh the subnet list
get the authentication port
show help view
set the port to use for authentication
initialize the class
set the timeout for the network
returns true if the menu item is selected
process window event
closes the socket
this method is called when the object is garbage collected
p set the time or date type
get the user from the server
reset the event table to its initial state
sets the background color for the text field
returns the field position with the given number
refreshes the display of the current time
gets the ne btn
closes the command view
notify the user that an error has occurred
change text field color
show help view
initialize the class
initial command execution
print a new preview
show help view
sets the y location
returns the y location
request the initial screen
closes the main menu bar
this method initializes this
this method is called after a session is saved
this method formats the list of field positions
this method initializes this
gets the previous field position of the given cursor
repaints the tree panel
returns the value for the cell at code column code and
determines the shelf corresponding to the selected network
returns the name of the column at code column index code
shows the help dialog
closes the main menu bar
gets the selected row
initialize the class
leap year is a leap year
sets the current field
show help view
this method initializes btn get ems info
this method initializes this
return the number of days in the specified month
requests the initial command from the user history
closes the main menu bar
show the help view
close the main menu bar
initialize the class
closes the main menu bar
this method initializes this
gets the ems info from the current client
process window event
closes this dialog
initialize the class
override to refresh the security
shows or hides pm olt port view
creates a print job for the button
initialize the class
creates the print job for the button
called when the user presses the cancel button
shows or hides the swu port text field
request logs from the server
shows or hides the swu8 port
closes the main menu bar
sets an initial code value code for the editor
sets the behavior when the mouse is released
create the download file chooser
checks if the cookie file exists
show help view
gets the two day partition and pm statics
gets all the to rack for a selected subnet
returns the selection index
returns the character number of the string
cancels the command
creates the language combo box model
initializes the class
initialize the class
close this vector
shows the help view
called whenever the part throws an exception
inserts the tbl paiton into the table
shows help view
set the information for the neighbors
shows the port text field
shows help view
this method initializes this
get the selectrdl specification
show help view
calculates the first day of the month
refreshes the profile events
refreshes the alarm tree panel
show help window
refreshes the gui
deletes the selected row from the table
this method refreshes the tree panel
copy data from one network element to another
refreshes the add network element for the given node
refreshes the data of the given node
refreshes the table model
refresh the add subnet for a given node
refreshes the modify subnet for the given node
fill the ne combobox with the nodes corresponding to a subnet
refreshes the data rack for the given node
print a preview of the application
if this child is visible then not removed it
updates the event rack setting
this will print the table
creates the package chooser dialog
initializes the class
refreshes equipment shelf if the selected equipment is modified
refreshes the summary shelf if the given node is already open
sets the number field text field color
refreshes all the fields in the summary panel
set the role of the user
updates the sync node with the given id
request the initial screen
closes the main menu bar
closes the main menu bar
returns true if this is a slot panel
this method initializes this
gets the statics
handles the event when the mouse is released inside a table
end the file
called when the xml parser is finished
returns true if event table is set
is this a profile event
invokes the deafult chart selection method
returns the session flag
enable disable sync button
enable disable the critical button
show help window
get flag for synchronizing the database sync button
returns true if the alarm critical button is on
returns true if the alarm major button event is on
returns true if the event is an alarm minor button event
this method creates the server side project chooser
returns true if this event is a tree event
returns true if this event is a alarm tree event
returns true if this event is a canvas event
returns true if the increment and decrement buttons are enabled
checks if the entered file name is valid
shows help view
initializes the config
sets the id of the current help page
checks if the entered file name is valid
initializes the application
this method initializes this
removes all the nodes and re adds the new tree
adds a node in the tree
adds a node to a network tree
adds orphan nodes into the ne tree
check if the nelist is valid
set up and apply the command
installs the action listeners on the buttons
get the selection index for the table
this method initializes this
show the help dialog and launch the help view
process window event
get the value at a given row and row location
the html page is stored in the number format
invoked when an off text field has been pressed
get statics
refresh the alarm info
handle the window event
this method creates the equipment frame
removes all the elements from the history queue
calculates the first day of the week
adds a new history data object to the history queue
description of the method
re shape the panel
called when an alarm action is received
description of the method
this method creates a table
closes the main menu bar
removes the last element from the history queue
syncs the display to the database
returns the last history data object in the history queue
initializes the current location to 0 0
returns the index of the alarm that is selected in the list
gets the node id from the selected network element
get the current ylocation of the main frame
initialize the class
shows help view
shows help view
returns the ack type
this method is called when a page is received
this method initializes this
help view
request the initial command
creates the chart for the lacp selection
this method returns the shelf id of the selected supporter
enables or disables the next button
mouse released event handler
show help window
show help view
initializes the plugin
changes the state of the button
ne list mouse clicked
print a new preview
changes the current selected row in the jcheck box
sets the subnet list to the parent node id
change the current value of the spinner
sets the ack combo
this method is used by the previous log to insert a new log
create the list of acknowledgement types
refresh command info
description of the method
show help view
closes the main menu bar
mouse pressed event
show the help window for this application
creates the user list
set the user combo box
show or hide the port text field
launch the help view
gets the pm statics
shows help view
returns the x location of the image on the screen
returns the y location of the image on the screen
this method returns the location of the x coordinate of the node
this method will return the y location of the node
returns the x location of the image on the x rack
returns the y location of the image on the y rack
calculates the rectangles y margin
get threshold for current user
print a preview frame
get resource information
shows the help view
this method closes the session server
select a disk
this method returns the threshold for the current selection
creates a shelf list for a given node
closes the session by calling the method
returns true if the file is selected
creates the package chooser dialog
closes the session by getting a confirm message and closing the connection
this method creates the server chooser package
increment the view id
closes the connection to the database
get directory download the data
puts the command in the command hash map
this method is called when the session is closed
adds a command to the command hash map
request initial command from history btn
closes the main menu bar
starts a link monitor command on the node
description of the method
invoked by code install ui code to create a layout manager object to
get max tab width
notify the user that an error has occurred
puts the summary object frame into the hash map
description of the method
get a specific panel
request the initial command
returns the index of the download selected by the user
closes the main menu bar
description of the method
show help view
closes the main menu bar
init enabled method
print a new preview
set default data
open the main menu screen
create the severity type combo box model
remove an equip from the system
initialize the class
closes the command frame
gets the user data from the database
show the help view
shows the help view
delete the current record from the toolbar
shows help view
creates a new file
get the back image in form of a string
process window event
initialize the class
p get the length style
shows help view
fills the ne list with all nodes in the subnet
get the row of the selected row
set how many detail info will be displayed
gets the selection subnet
sets up the date format
get static alarm
show help view
creates a new chart for the selected alarm
shows the help view
help view
initial the security manager
refreshes the profile tree panel
sets the selected index for this tabbedpane
closes the main menu bar
refreshes the panel that displays the alarm tree
closes the main menu bar
shows the help dialog
this method initializes this
sets the enabled status of the column column
if button is pressed it updates label text
called when a key is released
initiates file download
refreshes the route table
initialize the class
returns the indexed combo box
set the background image of the combo box
check if this float number is a number
shows help view
sets the audio clip
returns the current audio clip
this method initializes this
sets crsound state
sets the status of the sound playing
sets the status of the mnsound
starts alarm or toggles alarm button off
set the alm icon
updates the data in the panel
sets the state of aco
shows the help view
starts the server
sets the number of alarm records in the code alarm code
create a new alarm button
allows an array of boolean arrays that should be used as
set the list of alarm names
returns the integer value
sets the color for the alarm count
create a new alarm button
animates the component
get the back ground image name
setter for property alarm count
get the alarm button
create a new alarm button
get the alarm label
set the color for all alarm labels
gets the selected facility
sets the color of the alarms
retrieves the ne network element
noti session name
returns the command tag of this pdu
send a command to the server and search response
called by event delivery to process an event response
handles a response from a user
returns the name of the session configuration
get download cmd tag gets the value for the download command tag
shows help window
shows help view
delete database files
increments the cmd tag if it is not normal max ctag
if the user clicks on the ne list
get link monitor time
ne list mouse clicked
subscribe to streams
get the receiver for a given ip address
add a noti receiver
returns executor by its key
set parameters for a command
finds and returns the response executor for the given key
refreshes the event info
description of the method
creates the chart for the facility selected in the table
returns the command tag
gets the timeout count
sets the name of the field for the find node
get the cpu usage
gets the name of the field containing the search node
executes the command
shows help view
sets the screen lock
get the database log id
returns the sync flag
sets the result
set the database log id for this class
checks if the version mismatch alarm exist
create the event type list
this method is called when a link is found
creates and returns a primitive type
create a dictionary type from a string array
removes the schedule command from the schedule
removes the specified command from the output command table
returns the first command in the command table
updates the result of the out command
checks if the last sync command of a node is the last
adds the given node to the list of neighbors
this method will update the result of the sync command
shows help window
scan for and execute tasks
sets the alarm info for the given severity
sets up the password for the user
sets up privileges for the test
this method computes the linkelf link
sets up privileges for the local database
execute a sql update statement and flush the table
remove command from the schedule
computes the syncelf state
get the shelf equip of a given shelf
removes command with the same node as the specified node
returns the command entity with the specified tag
empties all elements on the network
return the first command in the schedule
inserts an out command into the out command table
update the slot info of a r3
remove a node from the ne list
try to create an ems info table in the current project
get the total number of connections
get the link table from the local node table in the
searches for the element in the selected rack
updates database information for a given r3
inserts a network element into the root node of the network manager
method create alarm history table
insert a new test network element into the network
method create slot unit table
this method returns the node id of the selected node
method create niu sfp table
returns a network element for the rack of the specified node name
method create ne property table
insert a default user in the database
inserts a slot into the database
checks if a node with the given id has a parent node
tells if the given node is a parent of another node
inserts a slot into the database
inserts a r4 slot into the database using r4 slot
inserts a slot for the given unit
insert a new niu sfp
insert a new r4 niu sfp and port information
inserts a ne property into the database
sets the severity on the network element
clears the alarm count for all the equipments in the network
try to create the port table in the current node
insert an ont address table
confirms a password
returns the user account complexity
get the name of the neprofilelist table in the database
get the user id of the user
try to create an ont template table in the current database
get the number of user by name
rebind the server to the local registry
get the status of a user
this method logs out the user with the local user history
insert the methods description here
searches for the index of an attribute
get the name of a node
returns name of shelf
method get user cnt
returns the id of the shelf with the given target shelf name
returns the id of the slot whose name is target slot name
returns the id of the unit with the given name
return the status of a retransmission event
get the name of a r4 slot
returns the name of a sorted slot
return the number of the retransmission pmevent
get the value of piu cfg at specified index
get the value of the configuration parameter at the given index
method get facility count
unregister a client with the server
checks if a client is already registered
get the number of facility in the database
get swu port
get the port for sorted swu files
returns the mac port for the given index
inserts the network element into the db
get the alarm reason of the specified alarm
sets the ip address of the server
this method will return the rdl reason for the given
returns the id of the alarm reason that the alarm has
insert a new network element into the database
returns the severity of the alarm
binds the given server to the given server
attempts to login to the server
insert a link element into the db
log out a user
register a client with the server
insert a command history record
gets the icon size attribute of the head tag object
insert a new r4 command history entry into the database
get the current shelf id
insert a command history record
inserts a default port in the database
method insert user
get the list of neighbors for a particular subnet
inserts a facility in top cat
this method is called by the database when an exception occurs
insert a user history record
insert security log
update an existing network element in the database
called by server manager when an event response has been received
updates a shelf state
starts dbsync according to synchronization between node and shelf
start recovery of link
returns the log item depending on the logger name
update pass word
method update user
update user session time
update the user history
update the abnormal user history
update an auto logout time
method update ems info
store the backup schedule if there is any
deletes an element from the database
delete link element
method delete user
deletes a facility from the database
deletes a node
delete all entries in the history table that are not initialized and
delete alarm history
deletes the current alarm history for the given node id
delete event history
deletes event history
delete a slot unit
delete ont table
delete ont address table delete ont address table
delete the ont table with the given node id and shelf id
process a command response
changes the view state of this view
handles the command response
delete a r4 ont table
delete a r4 pi port table
delete a onu table
refresh the profile tree panel
delete a niu sfp
called to handle a command response
set the unique identifier of the view
adds orphan nodes into the ne tree
deletes a ne property
insert a new alarm history
insert an alarm history record
insert a new pm history record
add the dhcp history entry
insert a history entry in the database
insert an event history record
insert an event in the r4 event history table
this method is called when a command response is received from the
sets the view id
sets the id of the view that this controller is in
update a slot in the database
update a slot unit protection
update the status of a port
update the status of a port identified by id
updates a ne property of the shelf
update the information of a route
update an ont table with the given state
update the status of an r4 ont table
update a particular state in the r4
updates a given r4 ont table
update the r4 pi port table
updates flag of a specified databasesync
updates the alm data of a given node
updates all data of a certain node in the dbsync cm data table
get the number of rows in a table
get the number of rows in a table
get the largest log id for a table
returns the network element with the given node id
gets the database id of a node
get the node id of a node by its ip
get the name of a node
gets the description of a node
get the state of a link
get link monitor time
process an sqlexception thrown during the execution of the
get the user name of the user
get the time of a user session
get the password of the given user
get the ip address of a node
get the count of history data for a given node
get the alarm radius server
get the max alarm history data cnt
get the address of the ont node
get the count of data for a specific alarm
gets the pm history data cnt
get the number of history data entries for a given user
get the number of events that have been recorded for a particular
returns the number of security log data entries for a given user
get current alarm count
get the number of alarm records for the given severity
get the number of times a specific alarm
get the number of times a specified alarm
get the number of non null alarm records
select profile table count
inserts a profile table in the database if set
deletes the profile table from the database
get the command history data count for a given node id and shelf
get the number of history data for a given r4
get the data of a slot of the shelf
get the data of a slot in the r4 table
get ne property init sys
get ne property gets a specified property from the shelf
get the niu sfp state for a given port
get the niu state of a specific port
get the backup schedule for the given target
set the number of ems resource thr table
this returns the index of the currently selected tab
sets the index of the currently selected tab
returns the currently selected tab state
the action has been activated
selection in the workbench has been changed
returns the menu for this plugin
returns the menu for this drop down
creates the menu for the board generator
clears the given menu
fills the menu with available modules
disposes of all resources associated with a particular
create a session for a module
creates a new session message
run the given runnable with a progress monitor
fills the menu with all modules
create a session for a module
creates a new session for the current generator
shows the entry component
adds attributes for the specified property
adds an attribute to this node replacing any existing attribute
get all attributes
sets the name of the class that will be used for introspection
add a new object class to the list
performs an action assigned to the mobile device midlet started point
switches a current displayable in a display
reloads the tasks
lists the contents of this directory and all its subdirectories
internal node representing binary tree
prints the node
returns the parameter b of the regression line
get the mean earth coefficient
empty leaf to print
returns the a part of the plane
returns the b part of the object
get the plane u part
returns the position of the n vector
returns the position of the object
makes a clip of this plane
cuts an edge into the clipping plane
from complex number
add the complex number c to this complex number
divide this complex number by a scalar
get the phase
multiplies this number by the given scalar
multiply this complex number by the complex number b
multiplies this number by the given value
return the square root of this complex number
sets the physics
subtracts the complex number from this number
subtracts a complex number from this complex number
imaginary getter method
get real part
creates a new reflexion point
test if the point is intersecting a given point
constructor for transmission point
returns the width of the receptive field
create a new diffraction point
returns the actual longueur of this receiver
prints the transmitter and receiver to the console
returns true if the ray is visible
returns a hash code value for this color
add a new receiver to the list of receivers
adds a transmitter
returns the number of sommets
get the normal of this plane
compute the intersection between this ray and the given ray
prints the current face
prints the loaded face to the output writer
returns a vector that is the reflection of the plane
reflection of the vector
return the symetrique vector
rotate a vector by a vector
rotate a vector by a vector
returns the field of this algebra
add a primitive to the list of primitives
get the number of transmitters
returns the number of receivers in this message
adds an impulse response to the stored irfs
removes an irulse response from the list of imfs
removes all intermediate irulse response from this file
given a double value return its color
executes the store and then adds action listeners
restore any listeners on this object
set the active state
returns the current state of the machine
checks that the current state is upwards
restore the stored value to the stored value
this is used to determine if the type has been implemented
invokes all the method objects in the list
sets the active state of this state machine
set the active state by name
create a new root state
creates a new state with the given name and parent
create a new state
returns the state with the given name
restore the state of the persistent store
returns the end of a sub region
create a new state with the given name
returns the region manager for this state machine
this method creates a new state within the given parent
ends a sub region of this state
create a new state
returns the state at the specified index
sets the initial state of the agent
add a state to the root node
returns the current state of the game
sets the current state
returns the root state of this state machine
returns the stopped state
start the current region
returns the region manager for the given name
adds a feature to the cont attribute of the swing jbutton object
sets the state of this object
creates a new sub region manager if it does not exist
returns the path to the node with the given name
creates the tree nodes
does not check for closed states
the code end region code method is used to convert the
return a region that contains a given name and statename
returns the root state machine for the given name
returns the plugins
called when an alert is received
shows the detail
counts how many pieces of a piece of a given color has already
this method returns the name of the category
returns the list of all documents in the database
set the value of doc list
set the value of category
set the value of mail
getter for property groups
setter for property groups
set the value of content
set the value of uid
set the value of full name
get the mime type
set the value of subtype
set the value of mime
set the value of param
gets the value of the did property
gets the value of the elevel property
set the value of did
gets the value of the tid property
gets the value of the eid property
set the value of tid
set the value of eid
returns target name
set the value of elevel
set the value of tname
return the ttype
set the value of ttype
getter for property etype
set the value of etype
this method was generated by abator for i batis
set the value of aid
gets the value of the ecreat property
set the value of ecreat
gets the esigned attribute of the array
set the value of esigned
returns the elements primary key
set the value of pkey
returns the list of users
returns the full name of the group given the group id
description of the method
returns the list of groups
code init code is called before the servlet is loaded
returns true if the given user can be appendable
get all groups
initialization of the servlet
gets the deletable flag from the table
returns the full name of the user with the id
build a document buffer for this syntax tree
get the mail address passed by parameter
checks if the given user is draftizable
describe code is user code method here
constructor for the list
sets the list of sign by uid
set the value of tid
describe code is group code method here
returns the list of uidl signed by this user
sets the uid list of signed on data
getter for property dtype
set the value of dtype
returns the seen by list
set the value of seenby
set the value of dname
returns the seenon
returns the daid
set the value of seenon
set the value of daid
called by the server when a query is received
gets the value of the dstatus property
set the value of dstatus
gets the value of did
gets the value of the dcreat property
set the value of dcreat
get the value of drcpt
set the value of drcpt
create a new xml document which is the current time
sets the list of sign by uid
set the signedon list
returns the uid list of the signed on user
set the value of duedate
gets the mail address of a given uid
this method handles the query
create a new xml document which is the current time
at startup create and show the main frame of the application
creates a new point and adds it to the polygon
calculates the float value of the vector2 d for a given time
gets the interpolation type
notify all listeners of a change in the curve data
notify all listeners for data change
gets the effect name
returns the number of rows in the model
adds an effect parameter to the effect
returns the technique name
return effect parameter
sets the default effect parameter
add a pass to the list of passes
returns the name of the column at code column index code
get the number of passes in the turn
returns the pass at the specified index
the vertex info is an ordering that is inconsistent with
gets the value at attribute of the road table model object
set the position index of the current element
returns the index of the provided semantic in the relation of the
this empty implementation is provided so users dont have to implement
note that this is not used anywhere
returns the sub index of the given semantic in this vertex buffer
returns the index of the entry in the given position
adds a new vertex info
copies the indices from the other array to this one
finds and adds a vertex info to the query result
sets the index of the vertex in the graph
returns the number of vertices in this graph
returns the index of the vertex in the polygon
computes the time of the linear envelope
returns the semantic of the rule
bind an effect to this closure
adds a new vertex declaration element to the list
removes the given element from the list
get the total byte size in bytes
recalculates the total byte size of all vertexes
returns the offset of the given semantic in the graph
sets the daescene
gets the value of the vertex shader source property
gets the value of the fragment shader source property
toggles wireframe mode
returns the vertex id
sets the vertex id
returns the fragment identifier
initializes the scene
the fragment id for this fragment
reads a file into a string
displays the physics world
setter method for program id
return true if the effect of this basic compnents is valid
sets the result of the vertex compilation
sets the result of the fragment compilation
this method sets the compilation result
initializes the factory
returns true if the source is compiled and the buffers are compiled
returns the compilation log for this pass
resets the open gl frame
get effect parameter type by id
set the viewpoint to the given vp
returns the constant for the given data type dt
returns the constant for the drawing mode base primitive type
shows the specified light
adds a model view transform
get the location at which to start the code line code
gets the log associated with a shader
sets the start location
get the string of the program log
gets the velocity vector meters per second
bind this material to a material
binds the effect to the current gl context
enable texture turing
disable the texture
returns the texture with the given key
gets the texture id
get the texture target
get the diffuse texture function
customize a parameter of the effect
get a texture from this multi texture list
adds a semantic router to the list of routers
returns the semantic router for the given semantic
adds a texture to the texture cache
returns the size in bytes of the file
returns a byte buffer containing the vertices
get the default accessor for the field at the specified index
returns the vertex declaration
put a value into the matrix at a particular vertex
put an integer value into the matrix
adds an effect to the effect list
gets the effect with the given key
initializes the bridge
called when a key is pressed
this method is called when a key is released
key typed event handler
prints states of the game
clears the state of the container
add a material to the material library
returns true if the view point has changed since the last save
get a material by its key
sets the changed state of the view point
set the view frustum parameters
recalculate the rotations
set camera position
code get vertex buffer code retrieves the vertex buffer object that
returns the vertex declaration
code set index buffer code sets the index buffer
moves the camera forward
this method is used to retrieve the index buffer
get the drawing mode
returns the ambient color of this light source
set the drawing mode of the object
sets the ambient color of this light source
moves the camera backwards
returns the specular color of this light source
sets the specular color of this light source
move camera up
returns the diffuse color of this light
add the rotation of a vector to this matrix
add a translation to this matrix
sets the diffuse color of this material
add a scale to this matrix
returns the transform
put the given entry at the given index
move camera position down
sets the transform field to a specific value
rewind the index to the beginning
add a light to this scene
returns the number of indices in this map
returns the indices buffer
adds a new node to this node
adds a mesh to the list of daemesh
renders the graphical representation of the mesh
returns the total size of the type
returns true if this compiler is compiled
sets the compiled flag
returns the sub offset for the specified index
turn the camera to look up and rotate the world
turn the camera one unit down
returns the param id
get the effect parameter type
gets the eye point
this method binds the parameter in the constructor of the
string representation of the effect parameter
sets the eye point
gets the right vector attribute of the viewpoint object
get the rotation matrix
gets the fixed up vector attribute of the vertex person object
sets the fixed up vector of this node to the specified vector
returns the red component of the color
sets the red component of this color
returns the dot product of this plane and another plane
returns green component of this color
returns the view frustum of this cone handler
sets this particles green intensity
returns blue component of this color
code get v code returns the third vertex of the triangle
sets this colors blue value
gets the var up vector
set the wv angle
copy the vector
sets the var up vector
copies the coordinates of the given floato into this floato
sets the wv
sets the width of the viewport
sets the x y position of this object
get the norm for the vector
returns the width of the viewport
sets this vector to the same values as another vector
code copy into code transfers the given vector into this matrix
sets the vertices of this polygon using the specified vector3f
sets the height of the viewport
returns the inverse quaternion of this quaternion
returns the height of the viewport
rotates vector non clockwise by code to rotate code
divides the angle by the given amount
sets co ordinates of the current rectangle
rotates to a new position
adds the given amount to this angle
returns the angle in degrees
sets this vector to the same values as another vector
cosine of angle
copies the point into the given vector
rotates a vector in to another by the given rotation
sine of angle
the halfcos angle of the vector
returns the angle of the vector in degrees
this method sets this object to dirty and sets the three points
checks whether a value is unstable
sets the x y coordinates of the vector
sets this vector to the same values as another vector
copy the vector into another
copies this location into another location
copy the vector
returns whether the point is on the x axis
copies the point into the given boolean
sets the x
returns whether the point coordinates are on the y axis
sets the y
returns the z
sets the x y position of the sprite
sets the z
returns the w
utility method to check for zero argument
sets the w
sets x y z coordinates for this primitive
copy the coordinates and values of the given vector
copy the vector into another
returns alpha component of this color
sets alpha component
calculates the distance between this and v
sets co ordinates of the vector
sets this vector to the same values as another vector
prints the number of vectors in the system
copies the point into the given vector
sets this vector to the same values as another vector
add the given factor to the cell at row column
copy the vector into another vector
multiply the factor at row column
calculate the height at a point
sets this matrix to the identity matrix
sets x y z coordinates of the vector
adds a new vector to the dirty vector
sets the factor at the given position
sets this vector to the same values as another vector
adds the specified values to the dirty region
copy the vector into another boolean vector
put the index factor to the index of the current factor
sets the values of this vector to the difference of the two specified
rewinds the index to the beginning
returns the factor at the given position
code distance code calculates the distance between this vector and
multiply the cross product of this vector and the specified vector
set the factors for a given row
sets x y z coordinates of this vector
sets the x y z scale for drawing
returns the number of rows in the matrix
multiply this matrix with another matrix
returns the number of columns in the table
code height code calculates the height of an arbitrary point on the
is matrix square
code add code adds the values of a given vector to this vector
copies the array of values into this variable
code diff code calculates the difference between this vector and
this method returns the cross product of this vector and the specified vector
projects the vector to project
copies the given matrix to this one
scales this vector
code divide code divides the values of this vector by a scalar and
sets the dirty vector to project
multiply this matrix with the given matrix
returns true if this entity is moving through the plane through the specified
projects the plane along the given point into the plane
at startup create and show the main frame of the application
code mirror vector code returns a new mirror vector
sets x y z coordinates of this vector
normalizes this vector
this method transforms a vector to mirror it
normalizes this vector to the given distance
returns a polar location based on the coordinates of this location
code dot product code calculates the dot product of this vector with a
calculates the distance between the two vectors
returns the distance between this point and the point of the
returns the 2 d distance between this point and the one specified
code distance code calculates the distance between this location and
get the magnitude of the force monad component pointing along the hundredth
setter for property u
get the luminance value
set the luminance
code distance2 code calculates the squared distance between
compare two luminance points
sorts the points
adds a new luminance point to the data
removes a luminance point from the list of points
calculate the y position for a given point
converts an x coordinate from user space to view space
converts a y coordinate on the panel to a y coordinate
get the first axis of this space
returns true if the id is valid
get the second axis of this space
parses the document
adds the given element to the set of ids in this store
returns the id element with the given name or null if none
receive notification of the end of a document
returns the target element with the given id
calculates the x coordinate of theplane
default handler for the start of an element
called when an attribute has been added
pop the target element from the stack
a new object has been pushed
calculate theplane at a given x coordinate
get the root target element wrapper
returns the target element
return the target support object
add a child element to this element wrapper
return the child target element with the given id if any
calculates the plane for the line between pp1 and pp1
returns true if the id is valid
returns the child code tree node code at index
returns the number of child elements
returns the index of code node code in the receivers children
calculate theplane in a y axis
returns true if this node is a leaf
returns the children of the reciever as an enumeration
code is in plane after time code determines if the camera is in
returns the string representation of this date
registers a value channel for a specific class
returns the value channel associated to the given class and semantic class
registers a vc object for a certain value channel for the specified
returns the value channel corresponding to the given semantic
registers a new element with the specified tag name and class
compare to another plane
registers the element
registers the given element base for all constrained prototypes
get the source sampler
sets the source
returns true if the form has any animations
get the plane id value
returns true if at least one samplers exist
returns true if the feed has any channels
returns the prototype with the given key
adds a prototype to the element
finds an input with a specific semantic
returns true if this feature has a sub semantics
sets the value at the specified index
returns the number of semantics of this operation
returns the boolean at the specified index
returns the capacity of the vector
returns the semantic at the given position
provides access to the value of the mapping at the iterators position
get the size of a tuple
get the index of a particular tuple in the buffer
get the dataype
return int value corresponding to a given semantic and index
returns the float value of the given semantic tuple at the given index
creates a new instance of the class
returns a new instance of the given class
gets the value of the material property
returns the contributor of the article
returns the visual scene instance
returns the material used by opengl lightning
sets the material used by this geometry
sets the contributor
creates the tooltip for the table
returns the number of inputs of this function
performs a daescene compilation on all the nodes in the tree
computes the offset of the given semantic
creates the tooltip for the table
fills the indices array with the given indices
returns the input for the given semantic
determine if this entity has any geometry
get accessor for visual scene instance
returns true if there are any visual scenes
creates a vertex declaration element
returns true if this picture has any images
returns whether there are effects on this card
returns true if this folder contains materials
get the primitive of this object
returns the collada buffer
get a mesh by index
returns the value at the specified index
getting the number of tuple elements of this query
sets the value at the specified index
gets the index of the tuple parameter with the given name
compiles an effect into a jme
stores an int value
sets the color of this node to the specified color
sets the value at the specified index
returns the value at the specified index
provides access to the value of the mapping at the iterators position
returns the data type of this column
get the effect instance that caused this event
set the effect instance
creates a tooltip for the table
gets the surface type
set semantic of the search result
returns the value of init from
gets the format
returns the ratio between the viewport and the actual view
returns the mip levels of this image
returns if mipmap data generation is enabled
get the value of param
returns the compiler target
gets the size
returns the common profile
getter method for stage
sets the common profile
returns true if there are any other profiles
returns true if this element has any bindings
returns the glsl profile of this map
returns the source code of this event
determine if there are any passes
returns true if there are new parameters
find a new parameter with the given identifier
gets the semantic of this fx test
sets the semantic of this fx
indicates if this code annotation code has any annotations
get the semantic for the input
set input semantic
returns the current set
method has shaders
returns the vertex shader with the given shaders
returns the fragment shader with the specified parameter
returns the target of this property
sets the target of this property
returns true if there are any vertex bindings defined
gets the value of the ref property
get the string representation of this class
get the effect that caused this effect to be applied
returns true if this shader has any codes
set the effect to be applied to this effect
returns true if this declaration contains any parameters
returns true if there are hints
returns the color of this sid
finds a set parameter by identifier
sets the color of this sid
create tooltip for this table
returns the first technique that is applied to this material
sets the semantic of the rule
sets the first technique to be applied
returns the buffer
check if the optional techniques is defined
returns the type of this profile
sets the x translation of this text
returns the x translation of this text
sets the y translation of this sprite
returns the current limit index
returns the y translation of this text
returns the code collada int buffer code containing the values of this
sets the z translation of this text sprite
sets the p columnlada int buffer
returns the z translation of this object
returns true if this feature has a sub semantics
returns the number of semantics of this operation
this method is not implemented
returns the size of the tuple
indicates if this code transformation node code has transforms
get the index of a tuple
gets the geometry instance
method get data type
compiles all of the target support support
returns the integer value at the specified position
retrieve float value for the specified tuple and semantic and index
getter for property optics
setter for property optics
returns the current size of the buffer
get the imager
set the imager
sets the key value
returns the type of the element
sets the value of the key field
returns the current index in the array
returns the element with the given name and pushes it onto the stack
increases the current index
invokes the set method with the url received
look up the global prototypes for an xml element
adds a field setter
returns the top element on the stack without removing it
get a field setter for the given key
returns the element on the top of the stack
sets the value of the property
returns the element on the top of the stack
pushes the specified element onto the top of the stack
sets the key value for the given property
pushes an object on to the object stack
sets the value of a property of the current element
pop an object from the stack and notify the event
returns the top object on the stack without removing it
sets the attributes in the given xmlcontext data object
pushes a key on to the key stack
this method is called when the parser finds a valid
returns the top key on the stack without removing it
pops the top key from the stack
parses data from char array
set the name of the current property
get the current property
this method will set the pass parameter to the panel
adds a new curve data to the plot panel
set the value of current value
returns the xml tag
updates the graph data
returns the current value
get the curve data
returns the type of this xmlelement
returns true if this attribute has a current value
clears the current value
returns whether this element type is a key type
adds an id object to the id objects map
returns the class object we are creating
returns the id object associated with the given key
adds a sid object to the map
create a new instance of this element
gets the object associated with the given key
return the class associated with this factory
resolves a url to a sidobject
set the effect of a msg
register a late binding in this component
returns true if the text setter is available
this method is called late bindings for every field
allows for setting the current attributes of the bean
gets the text field
returns the current attributes
removes an attribute listener from the event listener list
notifies all listeners of an attribute change
adds a stack listener to this stack
removes the given listener from the collection of listeners who will be
notify all listeners that an event has been pushed
notify all listeners that an object has been popped
returns the root directory of the project
creates all the geometries for this model based on the collada document
creates the animations
creates a new instance of daenode widget
returns the collada scene
creates all nodes in a collada scene
getter for property scheme
sets the daegraph node this model represents
creates a visual scene instances
notifies the model that the view is set
returns the daegraph node that this class encapsulates
creates collada effects for the given document
get the class of the model
creates the default layout for this project
returns a new instance of this widget
create a material from a collada document
creates all the images for a collada document
add a gradient to the gradient list
get the gradient for a given class
returns the dimension of the given key
set the asset that should be shown in the header
returns the source of this graph
returns the source of this pin
returns the target of this pin
returns the target of this graph
sets the root of the tree
returns the target of this node
sets the target for this dae graph node
gets the value of the link pin property
returns the node object of this node
returns the name of the node object class
returns the pin used by this graphical edit part
returns an anchor for the given pin
returns the node anchor for the given node
invoke the layout on the scene
sets the add player
removes the given metric from the list of available metric sets
returns a string that describes the rule for the given metric
test scanning a file that does not exist
test that the name of the instance is bad
add a listener to the manager
adds a filter to the list
removes a filter from the filter manager
find out whether the given metric element is filtered by some
indicates if the specified resource should be filtered or not
find the appropriate filter for the resource
saves the preferences
clear all the java source code files
writes the property to the given store
reads the property from the given code iproperty store code
writes the property to the given store
determine whether a particular modifiers type matches a particular modifier
add a problem to the baseline data
enable this action
writes the contents of the message to the specified output stream
disable the specified rule
returns whether the given rule is enabled
reads the enabled disabled state of the given store
writes all the rules for the given property store
return the fix capability for a rule given the rule key
returns true if this is a jump
returns true if this block is a conditional jump
is this doc item a write
is this property read
this method returns the node associated with the
add a problem to the problem manager
returns the string for the given key using the given arguments
resolve the type of a method signature
return the resolver object
adds fix data to the hashtable
tests that local escapes are used correctly
returns a clone of the object
pass the current token
expurves a collection of names
a test for printing strings in a collection
oracle form method
description of the method
fails the test
fails the test
tells this player to pass the specified number of bytes
tells this test that it should fail
called by the interpreter when a connection fails
tells this connection that it should pass the next n bytes
the resource has been added to a baseline
dumps problem to standard error stream
save the project
resolve a type binding
returns the priority of the rule associated with the given rule key
sets the rule priority to the given marker
sets the preferences listener state
opens the setup wizard
returns the image for the given marker priority
sets the filters for this list
sets the margin between the grid layout
creates a composite that can contain the widgets that represent the
create a text field specific for the user input
create the password text box
creates a radio button with the given label
creates a text block with the given text
returns true if the given resource has been modified
save the state of the given resource to the state map
remove all files matching the given filter
returns code true code if the preference is enabled
returns a token iterator for the given range of tokens
find the token at the given position
abbreviated package abbreviation
returns the column number for the given tab width
informs if the other token is the same type as this token
add a compilation unit
adds a new compilation unit
removes the given file from the storage
returns the string for the given key
adds a path to the list of paths
remove a listener from this collection
adds the given command line arguments to this command line
add hidden command line arguments to this sgfnode
adds an environment argument
returns the value of the specified request parameter as a string
returns the value of the named request parameter or
put a value in the context
redirect to the given url
get the value of the variable identified by the given key
tests concatenate list
test that the array returns the same result as an array when
test the defaults
test the level filter
test to make sure the com
get the direction of this vector
sets the finished flag
get the number of seconds since the timer started
return the player name entered in the textfield
get the host name entered in the hostname field
say text field is empty
invoked when a window is in the process of being closed
invoked when an action occurs
convert this object to a string
get the latitude zone of the reference
get the longitude zone of the destination
return the string representation of this object
return a string representation of the lat lng point
starts the game if the master is the master
invoked when an action occurs
invoked when an action occurs
called when the slider is moved
called when the user changes the selection of a track
creates a buffered image from an image file
convert the world coordinate x coordinate to screen coordinate
convert the world coordinate y to screen coordinate
invoked when the mouse button has been clicked pressed and released on
receives a chat message
method mouse pressed
resets the internal state of the event
set additional tasks for the user
get the user account by email
gets the user account by user name
change the password for a given user
resets the password for the given user
add the login history to the history
batch add list to database
batch update from a list
returns the org about us
log out the user with the given username
adds a new access trail
get the organizations about us
locks the member account
get the first estimate of the product backlog
initialize the servlet
the container calls this method when it is being unbound from the
returns the token
sets the token
logout the user
returns true if the current user is allowed to execute the action
generates a unique key for this session
save the body content of this tag as the tag to be skipped
p renders an empty drop down list box
get the user container from the session
get the user currently logged in
get current user id
get current users full name
get user who created this session
get current users email
returns the value for the given key
release any acquired resources
removes the specified session object from the session
sets the servlet context object to the session
get servlet context object
returns the system prop instance
control whether the given file is accepted by this kind of sb biopax
get a graph reader and load the parser from the given file
post processing method for the cycling component
returns a string representation of this object
encode a field
creates a new instance of multi colors properties
constructor for graph properties
constructor takes int array of items and
creates a new dataset
create a new graph chart2 dproperties object
create a new properties object
gets the chart graphable to available ratio
does this text have a number of bullets
creates a new code warning region properties code instance
creates a new legend properties object with the specified properties
create a new chart2 dproperties object
constructor for pie chart2 dproperties
starts the game
destroys the applet
returns the list of edges from this node
returns the list of edges to this node
set the location of this entity
returns the x coordinate of this point
returns the y coordinate of this point
returns the repulsion
get the label
returns code true code if the property is fixed and
sets the fixed property of this label
returns the zoom factor
notifies the edge that the edge has been added to the graph
sets the zoom factor
notifies the edge that the edge has been removed from the graph
undoes the lens effect on the point
returns the x translation value
returns the y translation value
returns the rotation angle
sets the translation amounts for both axes
sets the angle of rotation for this model
undoes the lens effect on the point
undoes the lens effect on the point
adds a lens to the editor
get the distortion factor for the input image validation
set the hyperbolic distance loss factor
applies the lenses
this method converts a hyper distance value into a distance value
undoes the lenses
returns the hyper distance with a given distance in degrees
called when lens are updated
computes the inverse of the hyperbolic distance
undoes the lens effect on the point
adds a listener to this lens
removes a listener
fires the lens updated event
stops the layouter thread
returns the graph that is being edited
notifies the strategy that elements were added to the graph
notifies the strategy that elements were removed from the graph
returns the list of edges
notifies the graph that the contents of the graph have changed
merge all elements of nodes with this node
adds a graph listener to the model
removes a graph listener from the model
fires the graph contents changed event
fires the elements added event
fires the elements removed event
executes one step in the layout
returns code true code if a step should be executed
apply the delta between the two nodes
stops the damping effect
stops the motion controller
returns the border color for the node
returns the background color of the node
returns the text color for the node
checks whether given point is inside the node
returns the color for the edge
returns the color for the edge
called when the user drags the node
adds a node to the selection
removes a node from the selection
returns the from node
returns the destination node of this edge
sets the from node
sets the destination node of this edge
get the labels
returns the length of this segment
set the graph area
adds a manipulator to the graph pane
returns a manipulator with given name
removes a manipulator with given name
return the lens object
sets the new lens
sets the graph that is to be displayed
paints the edge
returns the painter for the edge
paints the node
returns the painter for the node
converts a given screen point into a point on the graph
convert the given graph point into a point on the screen
returns a set of nodes in given rectangle
returns the position of the node on the screen
updates the positions of all nodes on the screen
returns the screen bounds of given node
repaints the node
returns the screen bounds of given edge
repaints the edge on the screen
returns the default node painter for nodes of this type
sets the node painter for nodes of a type that does not
returns the node painter for nodes of the specified class
sets the node painter for nodes of the specified class
returns the default edge painter for nodes of this type
sets the default edge painter
returns an edge painter for nodes of the specified class
sets an edge painter for nodes of the specified class
updates the screen positions and repaints the node screen
processes the mouse motion events occurring on this component by
processes the key event
processes the focus event
overridden to notify the manipulators that the scroll position has changed
stops the thread
returns the number of rows in the model
returns the value for the cell at code column index code and
clear the cache
true if the key is in the map
add new line to table
true if the object is in the map
returns a set view of the mappings contained in this map
returns the first name of the file
returns the name of the attribute
compares the specified object with this map for equality
sets the first name and last name of the customer
sets the first name of the customer
gets the value of the l name property
gets the object mapped to the key specified
sets the last name of the customer
returns the hash code for this object
sets the phone number of the customer
returns the hire date of the employee
returns true if this set contains no elements
sets the hire date
gets position of object
returns a set view of the keys contained in this map
sets position of object
place an object in the cache
put all the key value pairs in the given map into this map
remove the mapping for the specified key
returns the number of key value mappings in this map
get a collection view of the values contained in this map
sets the location of the shelf
returns the date purchased
sets the date purchased
returns the serial number of the specific user
setter for property serial
gets the sbo object
sets the sbo object
gets the conceptual bo
sets the conceptual bo
theres no need for two creates because we dont need
theres no need for two creates because we dont need
theres no need for two creates because we dont need
set the sku
sets the product name
gets the value of the manufacturer property
sets the manufacturer
gets the value of the average cost property
sets the value of average cost
theres no need for two creates because we dont need
sets the location of the store
sets the address
sets the city
sets the extension
gets employee bo manager
sets the manager
called after payment is completed to update the account
gets previously assigned trx
gets the value of the purpose property
sets associated trx for rent
gets coupon object
sets the purpose
sets coupon object
gets the memb id
gets revenue source bo
sets the revenue source for the purchase
sets the memb id
returns the line total for the purchase
returns the fstream
set the stream to use for reading the fstream data
return the filetype of this file
sets the quantity
make the return
set the filetype
this method is used to create the business object
this method is not implemented
get the sale id
set sale id
sets the description
theres no need for two creates because we dont need
move a file into the recycled directory
theres no need for two creates because we dont need
theres no need for two creates because we dont need
sets the start date of the backup service
sets the character used to pad the output
getter for property expire date
sets the expiration date
strong font face helvetica color red new font strong
returns the cc number
sets the credit card number
gets customer object
set the maximum field size for the result set
sets customer object
returns expiration date of the customers credit card
return the maximum field size for the result set
returns the dao for the given key type
this method will add an aoibo to the list of aois
returns the begin date
this method removes the area of the aoibo from the system
sets the begin date
sets the number of fractional digits for this variable
returns the completion date
sets the list of aois for this method
sets the completion date
returns the area of a specific index in the list of aois
getter for property parts total
returns the maximum number of digits allowed in the fraction portion of a
setter for property parts total
returns the storage size in bytes
get labor hours
get the size of the gb
sets the storage size in bytes
set labor hours set the labor hours for this genomic entity
set the size in gb
gets the value of the labor total property
sets the align field attribute of the sync table object
set the total labor production of this building
returns the pick up date for the repair
sets the pick up date for the repair
get the align field
empl id gets the value of this field
theres no need for two creates because we dont need
this method calculates the storage price for a file
sets the empl id
trx id gets the value of this field
sets the pattern of this code grammatical synset code
sets the trx id
returns a guid
string get prod id gets the value of this field
void set prod id string prod id method
returns the product id
returns the pattern of this simple identifier
sets the product id
calculate the total of the btree
theres no need for two creates because we dont need
returns the quantity
returns the condition
sets the condition
sets the quantity
get the for sale bo
sets the title of the object
getter for property salary
sets the localized pattern of this code simple date format code
setter for fsbo
sets the salary for the membership
gets the product bo
sets the product bo
returns the localized pattern of this date format
theres no need for two creates because we dont need
theres no need for two creates because we dont need
saves the revenue source object in the database
theres no need for two creates because we dont need
returns the locale
this method is used to create the business object
get the media type
gets the percent discount
sets the media type
sets the percent discount
sets the amount of the coupon
returns the print size
gets conversion service
get the change due
sets the print size
sets conversion service
gets the paper type
sets the change due
sets the type of paper
get price per print
sets the price per print
sets the type of the backup
get transaction object
set trx for the customer
returns the complete name of the customer
theres no need for two creates because we dont need
sets the name of the customer
returns the first name
theres no need for two creates because we dont need
theres no need for two creates because we dont need
get cust last name
returns the email address of the customer
sets the email of the customer
returns the full customer address
returns the customer address
batch the customer emails
theres no need for two creates because we dont need
this method is used to display the list of customers
sets customer address
returns the customer city
gets the value of the con serv property
this method is used to create the business object
sets the customers city
sets the conversion service bo associated with the conversion service
get the total cost of the current path
returns the customer state
calculate total cost of this order
sets the customer state
returns the zip code of the customer
sets the zip code of the customer
returns the customers phone number
this method is used to create the business object
sets the customers phone number
returns the membership of the customer
sets membership of customer
gets the value of the byu id property
sets the byu id
sets the price
gets the cobo
sets the cobo
returns the purchase order
sets the purchase order
returns the value of concep
sets the value for concep
returns the vendor id
sets the vendor id
returns the conc id
sets the conc id
returns cost of this ownable
sets the date of the backup service
returns type of r s
sets the cost of this ownable
sets the type of the rstype
gets the store object
getter for property rs price
sets the dirty flag
sets store object
sets the price
gets the value of the rsdescription property
gets employee bo
returns the number of photos in the set
sets the description of the resultset
merge the child object with the id object
sets the number of photos in a set
sets the employee bo
returns the id of this record in the database
returns the external id
sets the external id
get the status of the rsact
returns customer bo
batch a list of emails from the customer
getter for property already in db
sets customer related to transaction
gets payment object
sets payment object
theres no need for two creates because we dont need
sets the trx lines
theres no need for two creates because we dont need
adds new transaction line to tx
get total subtotal of transaction
this is a taxon
returns the price
sets the price of the customer
get the conversion type
sets the conversion type
gets discount object
sets the discount object
getter for voided
calculates the discount factor by dividing quantity and percent discount
theres no need for two creates because we dont need
sets the voided flag
this method is used to create the business object
returns the pending
sets the pending status
theres no need for two creates because we dont need
get quantity of prints
set quantity of print
this method is used to create the conversion business object
gets photo set
sets photo set
gets print format object
sets the mode of this parameter
for a given zip file process each entry
sets print format
calculate the print cost of this print order line
process the request
calculates the storage of the stock until the next city is 365 gig
process payment method
returns the line total
compares two elements
list the elements in the list
list the attributes of an element
writes the xml file to the specified file
writes the xml element to the given writer
adds the time stamp and time stamp of the element group to the
handles metadata requests
resolve dataset impl using inv catalog
html representation of the value for use on a lusid page
html representation of the value for this field
html representation of the value for use with html templates
check if a password matches the password stored in the hash
returns the display string for the owner of the
for testing purposes only
returns true if this is an rtexprvalue
set the rtexprvalue flag
gets the value of tlib version
sets the version of the tlib
gets the value of jsp version
sets the jsp version
tei class setter
test of get name method of class tag
test of set name method of class tag
test of get tag class method of class de
test of set tag class method of class de
test of get tei class method of class tag
test of set tei class method of class tag
test of get body content method of class tag
test of set body content method of class tag
test of get display name method of class tag
gets the value of variables
getter for property validator
test of set display name method of class tag
setter for property validator
test of get small icon method of class tag
returns the tag at the specified position in the indexed property
test of set small icon method of class tag
sets the attribute at the specified index
test of get large icon method of class tag
test of set large icon method of class tag
test of get description method of class tag
test of set description method of class tag
test of get variables method of class tag
test of set variables method of class tag
test of do get method of class tag
test of set example method of class tags
test of get attribute method of class tag
test of get attributes method of class tag
test of set attributes method of class plsql tag
test of add attribute method of class tag
initialize the search parameters
read in a string from a file reader
sets the jobs set of this project
add a new worker for a new client id
remove the worker from the list of workers
returns a string describing the status of the worker
checks if a worker with the given id exists
gets the time when the node was last alive
sets the last alive time for this node to the current time
get the current job bean id
sets the status of a worker
set the current job bean id
for debugging purposes only
returns the status of the job as a string
sets the last alive time for a thread
returns an enumeration of all the workers
removes the job from the job list
runs the thread
this method will process the given results of a job
cancels a job bean by bean id
returns the x min coordinate
gets the image as jpeg
gets the image as jpeg
returns the maximum x coordinate
returns an existing job with the given id
returns the minimum value of the y axis
returns the y max value of the point region
getter for property re mu
returns the worker id
get the value of im mu
returns the job set to be used
submit the result set to the web service
get the actual servlet from the http servlet request
returns the servlet context
returns the current escape norm
get the http servlet request
returns a new fractal job bean object
returns the current image as a jpeg format
returns the image as a jpeg file
sets the color of the point x y on the image
returns true if there are more lines in the current round
returns the next round in the iteration
add a line to the pending list
creates the next line for the given round
throws an exception if the user is not logged in
returns the current user
returns the document list view
returns the document tab view
show a view with a specified document
populates the history panel with the document details
returns the index of the tab with the specified view
gets the login info
checks the changes of the text boxes
creates a new document
gets all known peers for the given group
get all applications that are in the current group
returns all known peers for the given group
create an instance of
create an instance of
sets the value of the author property
gets the value of the date created property
create an instance of
sets the value of the date created property
create an instance of
sets the value of the id property
gets the value of the out property
sets the value of the out property
sets the value of the message property
sets the value of the version property
gets the value of the in0 property
sets the value of the in0 property
sets the value of the age property
returns the alcohol level
sets the value of the alcohol level property
gets the avatar of this joystick
sets the value of the avatar property
returns current place id
sets the value of the current place id property
gets the value of the drug level property
sets the value of the drug level property
sets the value of the messages property
sets the value of the online property
sets the value of the password property
gets the sexe value
sets the value of the sexe property
sets the value of the size property
sets the value of the username property
returns the portlet preferences service
get portal callback service
reads hevea data from the input stream
starts a new hevea process
method that generates the test
reads the macros from a file
sets the date
gets the value of first name
set the first name
gets the value of last name
sets the lastname
normal case for a container
tests that parent is ancestor of parent
this method was created in visual age
adds an attribute to this node
mark this applications state as active or inactive
returns the nth component in this container
removes the specified component from this container
removes the component at the specified index
declares a variable in the scope of the method declaration
remove all components from this container
this method does nothing
set the expression
removes the peer from the notification queue
validates this pool
loads the style sheet data from the reader
loads the css style sheet data contained in the file
loads the css style sheet data contained in the url
get an attribute for this tool
returns the attribute as a boolean
get an integer attribute if supported
get the given string attribute if it exists
returns true if the tag contains an attribute with the given name
sets an attribute on the style
returns the identifier
returns the table header at the given position
sets the identifier
adds a component to the code group box code at the end
adds a component change listener
get the list of child components
adds an code action listener code to the button
removes an code action listener code from the button
fires an action event to all listeners
sets the background color
sets the action command
sets the position of the grid
removes a child component
remove the nth component from this container
removes all listeners notified when component changes
load a resource from the classpath
appends the specified code int code to the end of this array
sets the locale
returns the element at the specified position in this list
update the component
adds a component to the grid at the specified position
fire component change
put a code double code into the properties
returns an iterator over the cells in this region
removes a component from the board
sets the number of columns in this component
sets the number of rows in this component
removes the position of the given cell
renders all cells on the table
returns a string value of a specified attribute
stores the double value associated with the given key
this is used to write a message body with the code response code
adds an attribute to this node
return the multipart request wrapper
adds an integer attribute to the element
adds an attribute to the list of attributes
create a new window
adds an attribute to this node
returns the writer for this response
returns the output stream associated with this response
returns the server
returns the writer used for writing to the servlet response
this is a convenience method that can be used to determine the
returns the body element
returns the head element of the html document
renders the html representation of the object to the given print writer
tex is used to specify the texture of the mesh
returns the height of the texture
returns the width of the texture
adds a new object to the manager
removes the specified object from the manager
updates all objects in this game
unpacks the data from the input stream
checks if the given coordinates are filled in with the terrain
this method is called by the rendering thread to render the scene
starts the editing of the data
rebuilds the flr layer with all layers
builds the region map
gets the image for a specific layer
render the display list
returns true if the given layer has changed
renders the point
renders the camera at the given position with the given angle
renders the bounds of the visual component
starts up the cylinder
stops the receiver
this method is used to determine if the kicker is ready
this method is called when the user presses the b kick button
get the mean side of the rectangle
two base model objects are equal if their ids are equal
returns a hash code value for the object
format the value as text
create all roles with the user and root role
create a new role in the database
find entities by criteria
finds an unique object using a criteria
adds an event listener to the panel that will be notified when the
notify all panel removed event listeners that a panel was removed
replace classes in hb class names with their corresponding java names
replaces classes in the list of hb classes
returns true if the class is a hibernate proxy
add a step to the instructions
adds a new ingredient
adds a feature to the ingredient panel attribute of the scan2 d object
serializes this object to xml
adds a unit with the specified abbreviation
create a recipe with the given name and assign it to the service
adds a new ingredient
returns the action configuration for this action
this method is called by the key listener
this method is called by the key listener
invoked when a key has been typed
load a texture
load a texture
midlet call to start our application
returns the distance between this point and the given one
returns a clone of this base object
this method makes sure that the flatten entry is fully optimize
description of the method
called when a thing event occurs
adds the specified modifier to the collection of modifiers
set the value for the given key
gets the weight of all inventory items
gets the base stat for a particular key
remove a number of items in the inventory
return the first thing with the given name
returns the collapsed map
set the theme to be used as the theme
set the size of the world
checks if the player can exit the thing
fractalize block by passing coordinates
replaces tiles with a square root tile
replaces all tiles in the given coordinates with the ones in the given
determines whether there is a blank tile in the given coordinates
get the stat level of this unit
counts the number of tiles in the given rectangle
fill a given area on the canvas
sprayalise the image
fill an oval with the given coordinates
clears an area of the tile
clears a rectangular area of the polygon
spread all tiles in a rectangle
set the area to be brought out
performs a tick action if shift is set
test map properties
test the things in the map
copy an area of text to a given tile
map time test
fill a border
completes an area of the polygon according to the 2 points
completes a tile of the specified type
returns the last message
test random adds
find a thing with a given name in this space
find a thing with the given name at the given coordinates
determine the type of the property
find a free region of the image
test creation of a collection
finds a free square on the board
finds the square of the edge
return true if this thing affects a thing
gets the cost of moving this tile to the given location
move the thing to a new position
calculate vision of this unit
get the map store
adds a thing to the map
do the work of the h thing
returns true if a tile is visible
returns true if the tile is on the hero los
checks if tile is visible
display the statistics for the player
returns true if the tile is marked as discovered
initializes the game
returns true if the tile at the given coordinates is blocked
returns true if the object at the given coordinates is blocked
get objects from the world
check if an item is wielded by any player
get the object at the specified index
returns the flagged object at the given coordinates
return the first object with the given name at the given location
counts how many times the given flag is near
apply all modifiers in the given thing
removes all modifiers in the given target thing
sets the ranger miira
sort the new z position
try to say hello
returns the new order of the first thing
returns the entered message or null if no such message was set
returns the description of this map
sets the rosco lillian melodia
sets the silas innkeeper
try to say hello
test method for
invoke the method using the specified parameters
returns the next integer
returns the value of this mapped field
test method for
test the equals method
returns the immutable pair whose elements are this pair swapped
returns a hash code value for the object
uninverted of the given edge
compares this object with the specified object for equality
test of dfs on uvwxyz method of class wikipedia
test of dfs on stuvwxyz graph method of class graph
called when a new node is found
tests a simple bfs
called when a root object is returned
test method for
callback for a node in the tree
called when a node has been expanded
this method is called when the code is executed
begin the visit of a root node
end a root object node
return a new initial time for the code timer code
returns the original graph
called when a node has finished
test class for name
test for class name
returns an iterator over the keys in this map
returns an unmodifiable view of the map
returns an iterator over the values in this map
returns true if the value is a list
put an object into the cache
returns the list of values to which this map maps the specified key
returns the value to which this map maps the specified key
returns a list of objects that are empty
transforms a map of object lists into an unmodifiable list
sets the referred table
reset the graph
build the graph
gets the value of the undos remaining property
gets the number of redos remaining in the graph
undo action method
redo action method
sets the graph that the gratra is to be drawn on
sets the graph
builds a graph from the rule xml document
returns true if the graph contains the given edge
sets the od links
returns the graph node
add the given associations to this one
moves all objects in this list to the given coordinates
this method creates the edge part of the runtime graph
throws a model to graph exception with a message indicating an instance
creates the attribute names for this instantiation
sets the od attribute with the given name and
creates and adds an odaction based on a node
add an event to the event pool
add an external event to this node
set the plugin model
adds an action listener to the animation button
adds a new listener to the buttons
adds the undo listener
adds the redo listener
adds a mouse listener to the reset button
sets the mouse listener for the transition
sets the popup listener
set the contents of the figure
removes all the elements from the list
display an error to the user
add a new event to the list
this method will cause the viewer to update its contents
add a new action to this figure
builds a popup menu for the menu bar
creates the pop up menu
checks if a character may be part of an identifier
scans an identifier
skips whitespace characters
creates a parse exception for when an invalid valueset is given to
a end of data has been reached
creates a parse exception for when a syntax error occured
creates a parse exception for when the next character read is not
creates a parse exception for when a value is missing for an attribute
this method is called once the task is executed
this test checks to see if a conduit is open
returns the length of the metadata block
test of is open method of class tcp t
tests close tcp
test with int has raw input
tests that has input stream properly returns false when called
test method for
t f x x
has raw input input for udp
test of has input method of class jjil
test of is open method of class com
test of close method of class org
writes a config message to the log
log a severe message
if true then the logger uses the parent handler
log a message of the indicated level
log a message and an exception
logs a warning message
this will set the parent of the logger
sets a filter to be applied to the logger
returns the parent of this logger in the case that the logger
tests raw write and tcp
test packetized write read in tcp
log a message with one parameter
changes the log level of the code logger code
read bytes from this stream
test raw write and udp write
test packetized write read in udp
read bytes from this stream
get the resource bundle for this logger
gets the flag indicating whether or not to use the parent handler chain
removes a log handler from the logger for this logger
logs a message at info level
logs a message at finer level
returns true if the specified method is a exit method
this method returns the name of the logger
logs a record to the configured log file
logs a message at finest level
this method returns the filter that is used to filter the log messages
this method will add a handler to the logger
log a message
logs a message indicating that a method has been entered
log a fine message
get the name of the resource bundle to be used
get the logging level
method called when entering a method
implementation of the on exit action called when a method is called
method called when a method is entered
method called when a method is called
method called when exiting
method to check if this method is throwing any exception
called to indicate that a lock is being retrieved
allows a client to get a lock on a given lock object
releases a lock on the given object
returns the dfa of the given set of words as a string
generates a random word
adds a new column word
adds the given word list to the set of prefixes
fills the hash map of words with the given pref
promote a word to a set of prefixes
tests relative uris with different scheme
test a relative uri with a double slash
test parsing cookie tt path tt attribute
domain does not start with a dot
domain does not start with a dot
domain does not start with a dot
domain does not start with a dot
tests if set domain attribute does not exist in second domain level
tests if cookie constructor rejects cookie name containing blanks
tests if cookie constructor rejects cookie name starting with
tests if cookie values with embedded comma are handled correctly
tests that null cookie values are handled correctly
test parsing tt port tt attribute
tests netscape specific expire attribute without a time zone
tests if cookie values with embedded comma are handled correctly
test parsing cookie tt version tt attribute
test parsing cookie tt max age tt attribute
test parsing tt secure tt attribute
test parsing cookie tt domain tt comma
test parsing cookie tt domain tt validation
test tt domain tt validation
test tt domain tt validation
test case insensitivity of domain
test tt domain tt validation
test parsing tt version tt attribute
test cookie tt path tt matching
test tt domain tt matching
test local domain matching
test cookie tt secure tt attribute
test parsing tt set cookie tt set cookie
tests if cookie constructor rejects cookie name containing blanks
tests if cookie constructor rejects cookie name starting with
tests if cookie values with embedded comma are handled correctly
tests if set domain attribute does not exist in second domain level
checks the authorization header from the username and password
checks the authorization string
get the local port
returns the local address used when creating the connection
is the server currently running
returns the request handler
set the http request handler object for this http context
returns a response writer that can be used to write the response
creates a temporary test file
test the method body
test the method body
test the method body to body servlet
test adding parameters to a servlet
tests the remove parameter method
tests that add parameter followed by set parameter
test get cause method
test that the stack trace of the exception is printed into a string
test stack trace printing
validate that the stack trace contains the specified cause
closes all idle connections
test for idle connections
test method for
tests generic cookie formatting
tests if null cookie values are handled correctly
tests generic cookie formatting
tests that http method is abstract eventually the root
tests that get method and a normal string value is
returns the name of the command in case sensitive fashion
a request that is invalid
test that we can strict http requests
test simple get returning status
tests that client
tests that client
tests that client
test that get auth proxy returns http status
test digest authentication with invalud qop value
tests that preemptive ntlm is is possible
test a very simple post request
test that post authentication returns credentials
set the html document with the given content
loads a page from a url
run method for thread
init http server
processes the given challenge
returns true if the machine is complete
returns the colour schemes name
returns the id of the client
returns the value of the specified parameter
returns true if this connection is configured for connection based data connections
return a hash code for this object
read the next byte from the stream
read some bytes from the stream
gets a header representing all of the header values with the given name
sets the domain attribute
returns authentication parameter with the given name if available
m todo que notify listener according to the remaining time
authorize the request to the client
test method for
this method returns a reference to the named connection factory
this method obtains the destination associated with a destination name
this method obtains the datasource itself for a caller
this method obtains the session reference corresponding
returns true if the given class is mapped in this package
adds the given class to the mapping
create a index field mapping from the given lucene document
this method should be called before the first call to
sets the name of the root element
adds an attribute to this element
returns the map of child nodes
returns the value of the specified attribute
sets an attribute
returns the attributes
set the attributes
gets the child list of the current element
add a binding to the list of children
closes the writer
check if user can send an account over the password
destroy the status of the user
test method for de
tests that it is possible to select the follower ids
test method for
test method for
test method for
once using user list get followers then use xf to get followers
test method for business
this should be a test case
test method for business
tests that the correct status is returned for a replies is executed
test method for
test method for
tests the method for checking whether or not the user is follower
test case for twitter
test method for
set whether or not to retry if there was an error
set the url of the api to call
writes to the server matte kan
this method will attempt to login to the server
starts the menu item with the given id
start a bundle
test if the user is favorite
test to see if the user is valid
creates a new view for this group
open the database
close the database
return a cursor over the list of all profile names in the database
writes a profile to the database
update all profile
returns a cursor to all the friends
updates the friend list
this method updates the own profile
log out from pf
checks if the user is currently logged in
logout the user
saves all the profile information to file
sends the status text to the server
saves the footprint to the database
saves the footprint to the database
return a cursor over the profile that matches the given username
saves a users profile
returns a cursor over all the friends in the database
get all users friends
tries to login remote user
logs in to the profile factory
returns the status
saves external data to db
this method will update the status of an external application
gets the timezone
gets the timezone off set
returns the protected user
sets the count
destroys the status specified by the required id parameter
destroys the given status
start following a user
returns a single status specified by the id parameter below
checks if is follower
returns true if the user is following the current user
returns true if the user is valid
switches off notifications for updates from the specified user i who
enables notifications for updates from the specified user to the authenticating user
retweet a tweet without any edits
since date the part of the model is a date
get the until date
returns the since record id
sets the name of the application that sent the request
sets the authenticating users status
returns information of a given user specified by screen name
returns information of a given user specified by id or screen name
destroy discontinues friendship with the user specified in the id
updates the status string in the status field
updates the authenticating users status
does the user with the specified screen name exist
sets the language
a wrapper around the server method that just calls the server
returns the value of the first sub formula
value1 is an implementation of the method
start dispatching events
start dispatching events
notify all coming messages in the dispatcher
this method is called by the data event dispatcher
closes the communication partner
start listening for communication
stops listening for communication
sets the port number
returns the additional data
close the connection
set the id of the client that sent the line
returns the id of the client
enqueue a data event to be sent to the network
handle connection broken events
adds an incoming data event to the connection registry
closes the input stream
the run method of the thread which reads from the socket and
receives data from the server
exit the application
method for receiving events
receives data events from the client
returns the name of the contact
inits the gui
receives data events from the server
method for receiving an event
receives data events from the message area
exits the server
method for receiving events
exits the client
returns the key of the event
stops listening for incoming messages
open a server connection to a specific server
sends data events to a specific client
closes the connection to the server
returns the data event that received the data
checks if the connection is open
returns the data event for this connection
sends a data event to the server
removes the data event from the registry
gets the data event
returns true if the registry has data events
removes the data event
broadcast data event to all connected clients
receives data events from the server
adds an observer to the registry
checks if there are any events to send to the server
adds an observer to the communication
remove an observer from the list
removes an observer from the communication registry
remove an observer from the communication
removes an observer from the registry
add an observer to the list
starts listening for incoming messages
add observer for communication events
sets the port number on which the server is listening
gets the port number of the server
closes the connection to the server
closes a connection with a client
returns an enumeration of the current connection set
closes all connections to the server
returns the data event that was received by this event
removes a message from the queue
insert the methods description here
closes the connection
add observer for communication events
remove an observer from the list
remove an observer from the communication observable list
returns true if there are any events in the incoming message
notify all communication event observers
handle connection broken events
gets the value of port number
enqueue an incoming data event
returns true if the connection is open
this is the entry point method
returns true if the given address matches this range
checks if the access to the given address matches any of the
returns a string representation of this object
finishes the options processing
run the upload process
run method for thread
logout from ftp server
description of the method
disconnect from ftp server
disconnects from the smtp server
sets the whitelist
returns the time when the last command completed successfully
calculate the byte offsets
adds a line to the end of the existing line
returns the current line
returns the string representation of the line
retrieve the brief description of this page
remove message uids from the messages
returns a text line reader for this text area
returns the text line source for this text object
sets the line and the offset
returns the number of elements in this list
this is used to get the number of lines in the mime message
moves to the next line
moves to the previous line
returns the size of this header in bytes
check if the field name is valid
returns a hash code value for the object
adds a line to the header
adds a header to this header
returns the name of a state
get the size of the buffer
returns the number of lines added to this text block
return a string representation of the array
gets the number of lines in the header
send a response to the client
convert a number of bytes into a string
gets a specific line of the file
append a line to the end of the list
checks if a given property exists
prepend a line to the front of the existing line
sends given string to client
returns the size of the message
sets a property
returns the property associated with the given key
get the value of the field with or without the header
checks if a given property is an internal property
sets an internal property
get the value of the requested field
returns the value of the given internal property or null if the property
matches the given pattern against this format composite
indicates whether or not this message is whitelisted
checks if the pop3 client is connected
returns all the categories of the whitelist
performs the quit action
returns a matcher that matches the given pattern in this match
get the first field value with the pattern
release all resources
returns true if the input string contains the pattern
appends the given text to the end of this line
return the field pattern that most closely matches the pattern provided
sets the headers for the data
appends all lines of the given string to the end of the given
sets the original mail address
returns true if the given field pattern occurs in this query
prepends a multiline string to the current line
add a part to the end of this container
adds a part to this container
ensures that the collection does not contain any elements
removes all fields with the given name
parse header lines for the given field trigger
disconnect from the pop3 server
add an entry into a given category
calculate the age of a given date
the age in days
sends the stat command to the server
returns the content of the message
add a receiver and the domain
two entries are equal if they have the same content
check if a given entry is in a given category
check whether the given entries are contained in the given category
writes the specified message to the log file
reads the file into memory
saves the content of this object to a file
writes the contents of the file to the disk
join all running threads
set content in a given category
convert the data
checks if a given category is available
remove a group of entries from the whitelist
deletes a file
reads the next byte of data from the file
writes the version number to the file
reads the file
writes the account data to disk
returns true if this file references an existing file
removes the given message info from this message info
adds a message info to this message store
get the message info for the given uid
returns true if the original size is less than the stored size
reads the file into memory
writes the options to the file
get the value of a specific option
sets a value for a key
removes an option from the list of options for a particular uid
adds a line to the option store
return true if the option with the given uid has the given value
retains only the elements in the options map still on server
create the filename that has been modified
associates the specified value with the specified key in this map
retrieve a value for the given key
returns true if this map contains a mapping for the specified key
get the bypass messages from the cache
flushes the current options to disk
send noop command to pop3 server
returns a copy of the current message info
get the value at the given row and column
returns true if the cell at row col is editable
table model method
trim the pass string from the command
get the column name
add a row to the table
inserts a row into the table
deletes the specified row
checks whether a cell exists
sorts the entries in the specified column ascending or descending order
open account data
release the lockfile if existant
this method dele removes a message from the server
clears the files that have been modified by the account
tries to close the account data
returns the checkbox used to enable or disable filtering
returns the message info for the given uidl string
stops any editing in the table
return a unique filename that is consistent with the account
returns the message info object for the given message
overrides the properties of this file from the given file
initializes the field
returns a message reader from the top of the stack
returns true if the localize returns true for the delete message
add a once to this message
return the name of this filter
process the change
get the message properties object for the given number
add a message to be skipped
retrieve the lyrics
adds a set of rules to the list
gets the click action
register a jcheck box item with this tray icon
check if message properties should be cached bypass the cache
registers a listener for a given key
register a component to be interested in receiving notifications
add a text to the text area
returns the name of this frame
set a message to bypass the check of rules
clears the sort order indicators
returns the value contained in the editor
requests that the focus is set to the textfield
returns the message properties for the specified element
stops editing and puts it in the proper text field
clears the sort order indicators
remove a bypass message from the list
this fine grain notification tells listeners the exact range
starts the code jdialog code
action to perform on an open of the window
sets the value at attribute of the strcture table model object
gets the reply from the pop3 server
inserts a new row at code row code in the model
inserts a new row at the end of the table
compares two auto bcc entries according to their bcc order
remove messages that have been removed from the server
interrupt the ticker
gets the row count attribute of the csv file reader object
returns the value at the given position
interrupts the worker
sets the value at a specific cell
sorts the entries in the table by the column specified
sets the raw data
sets the filter
clears the filter
creates filtered data from the raw data
adds the components to the dialog
sets the apply rule sets attribute of the pvjrules log object
returns the rule set application
returns true if the dialog finished with an ok
show dialog to set properties for razor
sets the status label
get the message from the file with the given uid
update account data
set status processing
prompts the user to confirm their password
dispose the ticker
get a message header
prepares razor mail by creating new mail
getter for finish status
call this method when a new lyrics is detected
prepare buttons for close
set the state of the button
toggle the state of the button
show option dialog for first run
checks if is install dir
check if we are confirming to install the new working directory
registers the work directory for the installation
run the socket manager
check if razor account was specified
this method sets the category which is on the panel
terminate the ftp client
the run method for this thread
requests the object from the thread pool
releases resources associated with this object
gets the value of the latest version response property
the run method will periodically write the tick
get the exception thrown during the last call to
interrupts the applet
this method is used to finish the executor by interrupting all running
terminates the client
returns true if this is a remote resource
this function returns the index of the file that this entry
returns true if the current options object matches the
create and upload a new thread to the remote host
prepares the gui for rendering
sets the message for this exception
cache the name of the rules in disk
get the value of apply
description of the method
populates the combo boxes with all account directories that
scans for files
resets the options gui
this method is used to initialize the properties of the message
join all threads in vector vec
set the parent of this dialog
determines if this list of rules contains the specified list of rules
set the date the file was uploaded
start all the threads for a given message
adds a new rule to the rules vector
get whether or not processing is aborted
get stop processing flag
this method sets the skip flag
stop this thread
store a variable in the environment
get the value of a variable
return the corresponding compiled regular expression
compare two token values using the given comparator
p re initialize this digest
updates the digest with the given string
get the digest as hex string
callback when a rule is detected by the user
updates the digest with the specified byte
updates the message digest with the given bytes
returns a hash code value for the object
returns a hash code for the given string
computes the signature for a given body
returns the result of the last command executed
converts a hex string to a base64 string
the name of the signature root element
at startup create and show the main frame of the application
clear all data stored in the hash table
update the texts of the dialogs ok button to cancel
updates the texts of the panel with the actual texts
assigns a new montage
click the new montage button
click the montage no button
presses the preset button
click the first button
clicks the button
clicks the button
clicks the button
clear the montages list
clears the labels
this method is called when the user assign a new montage to this panel
load the given edf file into the panel
close the window
set the stage 1
set the stage 2
set the stage 3
clear the panel
set the stage 4
sets the second to display in the navigation slider
set the stage
go to the next record
callback method when the displayed record has been modified
go to the previous record
set the stage of the player
reset the time to the first minute
set the current stage of the system
sets the start second
sets the stage of the game
transform hypnogram data so that they can be displayed easily
load the given montage
opens a file chooser dialog for selecting a local file to open
save the hypnogram as a text file
set the signals inverted flag
increase the zoom level by one
this method returns if the signal is inverted
decrease the height of all displayed graphs
clear all hypnograms
reset the zooms the graph to the default size
switch to english resource
switches to french resource
increase this graph vertical size
decrease this graph vertical size
reset this graph vertical size
this method saves the text to a given file
clears this data and resets the data for the next time
closes the random access file
sets the text of the custom text field
go to the next position in the current position
moves the cursor to the previous position
returns the sampling rate that the user has selected
resets the current position to the marked position
set the current score to k
sets the state to vyf
set the state to art
set the state of pv
set the score to fx
set the state of the player
at startup create and show the main frame of the application
splits the input string into several lines
splits the input string into several lines
adds an object to the return list
sets the value to a int for a given key
sets a boolean to a boolean stored in the return value
gets the next object for the key in the list
adds an object to the list of objects to return
adds an object to the list of objects to return
adds an object to the list of objects to return
returns the next object from the queue
verify that the name is correct
verifies the given object
set the size of a video file
returns the video size control
set the background image
display the background image
adds all the elements of the list to the list
set the size of the video
sets the size of this component to the specified rectangle
removes all listeners that are registered for the timer specification
sets the given crm in the controller
this method is used to shutdown the server
method to start a database
shutdown the database
returns the deadline of this event
sets the value of the deadline property
gets the destination
sets the value of the dst property
sets the value of the src property
gets the value of the orderid property
sets the value of the orderid property
create an instance of
sets the value of the delivery status property
returns the customerid
gets the value of the arg0 property
create an instance of
sets the value of the customerid property
sets the value of the arg0 property
gets the value of the return property
sets the value of the return property
create an instance of
create an instance of
sets the value of the order id property
create an instance of
returns the delivery date
sets the value of the delivery date property
gets the value of the return property
sets the value of the return property
create an instance of
returns the id of the vehicle this factory is running on
create an instance of
sets the value of the vehicle id property
sets the value of the capacity property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
get id of a file by its name
update the caption of the title bar
this method is called when the render succeeds
stops the current game if preview is in progress
load a wav file
the method loads the given file
changes the volume of all the sounds in the collection
returns the index of the pressed key
starts a new game with no arguments
get the name of the given key
called when a change occurs
this method is called when deciding the resource
this method is called when the cancel button is clicked
override this method to add functionality when push button is clicked
update the keyboard with the given values
update the keyboard with the given values
update the keyboard
loads the configuration of this nutch bean into the given properties object
loads the default keymap from the default text editor
loads default keymap of a certain type into the default menu
loads default keymap of the specified type in the default
todo document me
updates the input of the program
loads a wav file
the method loads the given bays file
updates the title bar text
render the user over the given code game container code
user interface for rendering the game in a code game container code
user hook for updating the game
handles the key pressed event
called when a state change occurs
this method is called when the plugin decides to decide whether or not
override this method to perform actions when cancel button is clicked
override this method to add a button to the stack
stops the game if preview is in progress
get the key name from the keyboard
clears all the input buttons
returns true if the key is a push key
updates the button states
clears the input state
set the press state for the given key
loads the game mode objects from the custom properties
decodes an url string using the set http protocol
shutdown the application
returns the string uitext
returns the int value of a given textfield
returns the long value of the given text field
initialize the parser
reset the game
change current screen card
shutdown the game engine
returns the number of players in the engine
gets the state of quit flag
is the current game active
returns the winner of the engine
updates all fading
render all the particles in this system
save all the replays of the simulation to a file
disconnect from the server
the method resets the board
loads a buffered image from a url
shuts down the application
sends a command to the server
se play a sound
returns the url of the file
this method adds the log in the console
determine if the given button is pushed
returns the bit code for the button
updates the time for all press buttons
get the areline value for this creature
gets the delay between lines of the rules
sets a block at the given coordinates
copies the background status information to the supplied bg
fades out the fade panel
is this block a gold pieces block
returns true if this block is a silver block
sets a block at the given coordinates
imports a string into the parser
export a string array to a csv string
returns the current time as a string
sets the color of the blocks
sets the item
sets the item array
sets the hard of the block
returns the time as a string
sets the hard bit length of the block
this returns the boolean flag for the line flag
returns the current time in string format
this returns the state of the line flag field
returns the maximum think depth of this specifier
returns true if a partial lock is in place
returns true if a partial lock is in the database
sets or unsets a line flag
returns true if the partial lock is out
checks whether the field could be placed at the given coordinates
sets the given flag for the line
saves the custom rules for the goal table
checks if a field can be placed at the specified position
updates the ranking list
this method is called when the user wants to redirect to a move
check if the ranking is already in the combo
checks if the given field could be placed in the view
saves the ranking rule in the custom prop file
returns the line number of the first block with the specified flag
saves a ranking rule in the custom prop file
checks if the given time has ranking lines
checks the ranking of the
this method is used to update the cursor
sets the game speed
updates the cursor with the player information
loads the custom properties
saves custom properties to the map
draws a xor column
loads the ranking rules
save the ranking rules to a custom property file
checks if the given ranking has the given type and
loads the predefined properties from the properties file
saves the custom properties to the given properties object
loads any custom settings for a player
checks whether a given line is empty i
saves custom settings to the properties object given by the
saves custom properties to the properties object
set the game speed
loads the predefined settings for the engine
loads the ranking rules
saves the current preset values to the given properties object
save the ranking rules
get the rotate direction
gets the rotate direction of a piece
get the rotate direction for a given move in a given direction
returns the number of garbage lines in the specified player
sets the speed of the gravity
sets the speed lock on the table
load the settings from the current configuration file
save current settings
handles the net player initialization
load the index ranking rules
get the line number for a given location
saves the ranking rules in the custom index
loads the predefined settings for the engine
saves the current preset values to the given properties object
this method updates the ranking information
check if the given type is a ranking line
get the t slot line number
fills the table with random blocks
loads the custom properties
get the t slot for line null if none
saves the custom properties
loads the settings from the properties file
loads the ranking information for this code index code
saves the custom settings
saves the ranking rules in the custom properties
set the speed of this node based on the current game engine
this method calculates the average time to solve the section
the player checks if the section number is correct
this method is called when a new game is ended
load player custom settings
saves the player properties in other properties
adds a user chat log to the chat window
sets the speed of the mobile robot
returns the y position of the highest block
netlobby networklobby for the user
netlobby when login ok
load the custom trainingstage
netlobby when the room joins the room
save the custom properties for this training set
checks if the game is over
netlobby when room leaves
returns the y position of the highest display block
load the predefined settings
saves the current preset settings to the given game engine
the given engine has finished the game resets the stat and resets
loads other setting for a player
saves other setting to the given properties object
loads a ranking properties by default
saves the custom properties of the ranking rule
loads the ranking properties from the given properties object
resets the ranking level and clears the ranking level
checks if a user has a ranking
handles updates of the net
updates the best section time
adds a user chat log to the chat history
loads other setting of rows at the end of the game
saves other setting of this game
turns all blocks of the player to block w
find the number of valley that have a value
returns the player number of the players who have to be now
renders the player name of the given game engine
loads custom settings
saves custom properties
loads the custom settings for this validator
changes the speed of the current game
saves some custom settings for this validator
loads properties from the property file
this method calculates the average time of the section
sets the start of the bgmlv element
saves properties for current session
a new section is marked as being a new section
set the speed of the game
this method calculates the average time to solve the section
cuts the given line
adds single hole garbage to the cache
handles send stats from the server
set the whole speed of the world
handles reporting statistics according to the current status of the game
add bottom copy garbage to an attribute
handles the end of the game
load a ranking from the custom conditions
handles network options sending
loads custom ranking rules
this method sets the buttons state
save a ranking to a custom property file
handles reporting that the server sends a message to the client
calculate the ranking level and time for a lv and current
saves custom ranking rules
check the ranking level and time
send the replay record to the net
loads ranking properties with given name
sets the room buttons enabled
save ranking properties
saves the custom properties to the property file
loads a ranking properties by using the custom rules
checks if the given ranking type is already cleared and
saves custom ranking rules
saves the current rule in the property file
check if a ranking level is in a given grade or long time
saves the ranking rules to the custom properties
loads properties from the property file
checks the ranking of the piece in the given time and returns the
saves properties setting
checks if the given index is a ranking line
sets the game engine speed
sets the speed of the game
sets the start of the bgmlv line
loads properties from the property file
saves the current properties settings
sets the speed of the game
sets the start of the bgmlv layer
bonus flash level
this method calculates the average time to solve the section
st medal check
saves the custom properties to the properties file
returns the number of possible targets
save the ranking rules to a custom property file
load the default speed preset
saves the current ranking rules in the custom prop
saves the current preset values
returns the number of garbage lines in the cache
checks if the time has a ranking then returns the number of
checks if the given ranking lines type matches the given type
saves custom properties
loads property values for ranking
saves prop and rule names
opens a room detail window for the current room
saves the game ranking rules to the custom properties
check if the given lv is in the ranking level
checks if a given block is on the board
saves custom settings
set the current speed
save the ranking rules in a custom property
set a block link broken at x y
loads the other setting from the configuration
saves the custom properties to the specified file
this method calculates the average time the section has been read
set all block links to one of the following color
loads the custom settings for this loader
saves the custom settings
sets a block link color to all the pixels with the given
sets the game speed
loads the custom properties
saves custom properties
load square ranking rules from a custom properties
saves square ranking rules to given custom properties
sets the speed of the robot
updates the ranking score for the given type of record
gets the number of lines to draw when the player has killed hurry up
tell all players to netvs their game screen layout
gets the height of this cell without the hurryup floor
sets the speed of the gravity
loads the custom properties
saves the custom properties of the game
loads custom settings from the properties file
apply users settings to rooms
saves the ranking rules in the custom index
adds the garbage to the game engine
updates the ranking information for a given type of token
saves custom properties
returns netvs id of player by seat id
returns the player id of a seat number
loads the custom properties
save a custom ranking rule to a custom property file
returns netvs id of player by seat number
saves the custom properties to the properties object
save the custom settings on the prepared statements
loads the settings for this loader
loads the ranking rules from a given property file
updates the ranking for the specified time with the specified values
saves the custom settings
saves the ranking rules in a property file
netvs receive end game stats
save the current ranking rule when when invalid ranking
checks if the given ranking has been cleared
checks if the ranking has enough history to produce
checks that a ranking has been assigned
netvs are attackable if the player is dead
extends the super class behaviour to load the player settings in the
returns true if the player can target this team
saves other setting to the properties object
loads the ranking properties by using the custom rule
performs a ro medal check
returns the current selected room set id
returns the number of possible targets
update best section time
saves the custom ranking rules to a property file
sending chat to the client
loads properties from the property file
returns the string representation of the attribute
saves properties and changes property and property with same name
checks if this reservation is expired
export start date
perform the actual import of the start date
function to export a string in a single format
splits string into tokens and adds them to the database
imports a user into a string array
imports a string into the parser
export a string array to a comma delimited string
deletes all the data from the data store
updates the number of players seated in the game
copy the net spranking attributes
get the record associated with the given player name
gets the net sprecord instance which contains the given player info
find the index of a player in the list
returns the index of the given player in the list
remove a player from the players record
removes a record
initializes a socket selector
is this player a new record
writes out custom properties
read in the property
resets the player to the start state
deletes the rule opt
copy the state of the given net sprecord instance into this
export custom stats
imports custom stats from a string
sets the replay properties
return the configuration properties from the native stream
this method will decompress a string
copy the net sprecord to the best player
get the net sprecord instance with the rule and mode
test whether the rule record is a new record
compare two records
registers a new record
export custom properties to the file
read custom properties
export list record
import a record from a string
sets a custom stat by name and value
this method imports a string array into the player
returns the first custom stat that has the given name
loads the best ranking rules
gets the custom stat matching the given name
saves the custom rules for the best rule
stop the ping task
draws the players menu in the specified color
returns the number of garbage lines in the cache
check if the ranking level is higher than gr
draws the players menu in the specified color
draws the players menu in the specified color
draws the players menu in the specified color
draws the players menu in the specified position
sends game statistics to the specified player
draws the menu font for the specified player
cleans up the channel list and the data
loads a ranking
draws the menu item on the given location with the given font
kills all connections that have been configured for timeout processing
saves prop and rule with given name
draws the menu item on the given graphics context
draws the menu item on the given location if not already redraws
sends data to a client
draws a special score
draws a special score just like draw score string x y
this method sends the given string to the given client
draws a single score character
draws a single score bubble
sends the given message to the given player
draws a single score character
draws a font for the player at the specified coordinates
send the given message to the given player
draws the players name in the ttf score
draws the score of a given player
broadcast a message to all clients
draws the score of a given player
draws a direct font at the given coordinates with default color
sends a message to all clients in a room
draws a direct font
draws a direct font defined by the specified string
draws a direct font defined by its id in the specified
draws the direct font defined by the specified string at the specified
draws a direct font to the specified point
send a message to all observers
draws the ttfdirect display
broadcasts the current user count to all clients
draw ttfdirect font
draw ttfdirect handler
free the fall in the block
send a message to all admins
gets the socket channel by its player info
gets the key name for button
find a socket channel with the given message
returns the maximum meter value
gets the width of the block
gets the height of the block for the given player
adds a listener to this net lobby
returns the x field position in the players for the next field
returns the y field position in the player for the given y field
todo missing method documentation
sends a adminresult to the client
returns the y position of the score display for the given player
removes a listener from the list of listeners
returns the next display type of the data buffer within
see ivisual container is not meant to be used
sends a compressed admin response to all users
checks if the skin is sticky
admin probe trys to send a set of messages to a single user
loads the custom mode configuration
saves the current mode configuration
loads custom property file
saves custom properties to file
returns the room info for the given room id
sends a message to all rooms in the roomlist
deletes the room
checks if the game is ready to start
broadcast room information update
sends a message to all clients in the room that the user has
sends a message to all clients connected to this server
broadcasts the current player info update
broadcasts the command to all clients
saves the replay file for a given folder
searches for player info by name
searches for a player by uid
signal this player that a player has been killed
ban a user from a channel
banned player and kick off a player
convenience method to check the connection status of a client
get the ban that is associated with the given client
send the rule listend to all the rules
gets the rule with the specified name in the given style
calculates the delta between the opponents rank and the opponents
expected score for given rank
calculates the maximum delta between played and games
sets the bpm of the trader
sets the duration of the current time measurement in seconds
sets the duration of the current measure
multiplies the current tempo value by a fixed duration
stops the animation
restarts the animation
rewinds the rhythm listener to the beginning
mutes this audio
mutes this audio
starts the animation
start the animation
restart the game
restarts the animation
get the number of measures
returns the current measure
sets the number of measures of this period
sets the volume of this channel
get the volume of this cylinder
set the volume of the left channel
set the volume of the right channel
the exact duration of the movie
returns the sample rate in hz
returns the exact position of the token
get the sample rate of the playback in hz
get the sample offset
returns the exact offset
processes the data
sets the offset of the clip in samples
processes all the effects
sets the offset of this duration relative to the start of the
changes the speed of the object
removes this close loop from its list of close loops
tests adding a contact
tests the remove contact method
tests that we can get a specific month
tests adding contacts
tests the setter for the year property
tests the setter for the month property
test of to string method of class net
test of to string method of class com
test of to string method of class info
creates the mailbox list table
test method for
test of to string method of class inbox
returns the component that is shown in the top left corner of
sets the component to be displayed on the left of the view
returns the component that is shown in the top right corner of
sets the top right view component
returns the component that is shown in the bottom left corner of
sets the component to be displayed at the bottom left corner of the
returns the component that is shown in the bottom right of the
sets the component to be displayed on the bottom right corner
called whenever the value of the selection changes
test method for
test of set body method of class velcro
returns the icon associated with the name from the resources
returns the messages stored in the framework
sets the data
returns the number of rows in the model
test of set info method of class com
unmarshall the address book into a list of contacts
sets the date of this code calendar astronomer code object
test method for
sets the hour of the day 24 hours
test method for
sets the minute
test method for
adds a new folder to the folder manager
returns the folder with the given name
returns the month
removes a folder from the list of all folders within the project
returns the number of folders in this folder group
sets the month
test the hash code method
saves folders to disk
loads folders from disk
returns the index of the folder with the given name
sends the email using the mail server
sets the date of this calendar
compares the specified object with this date for time
getter for property address
get the date of birth of the person
returns the from address
returns the email address of the user
indicates whether some other object is equal to this one
gets the value of the primary tel property
returns the date in the format yyyy mm dd
gets the secondary telephone
test of to string method of class net
returns the ith to address
sets the name of the folder
returns a short string representation of the time
sets the date of birth of the person
returns the message at the specified index
sets the status of this message
initializes the calendar
gets the value of the date property
adds a contact to the contact list
sets the date
set the messages
removes the contact with the given email address
compares two live messages for equality
adds a list of contacts to the group
add a message to the message queue
sets the primary telephone
returns string representation of current status
removes all contacts from a list
removes the message at the specified index
returns the i th contact of the addressbook
sets the secondary tel
returns the hash code of this object
checks if a given email address is already in this list
removes the message
returns true if the group is empty
compares two objects for equality
sort the messages by date
configures the axis to work with the specified plot
returns the i th attachment
returns a string representation of the group
configure the player
returns a string representation of the object
is this range realize
returns the index of a contact in the list
returns whether this is a core module
initializes any data needed for the optional server
repeats the message
returns true if there are no messages in the queue
stops the current playback
closes the player
start the player and play till the end of the media
close the player
returns the attachments
start message playback
indicates whether some other object is equal to this one
stop message playback
returns a string representation of the object
returns a vector of all the voice attachment files in the system
returns the status of the current document
gets the date of the custom info
gets the message info
p set the senders personal name
sets the to address
sets the status of this message
this will set the date of the date field
set the message info
adds an address to the to list
removes a to address from the list
removes an attachment from the attachments list
returns the number of attachments in this attachment set
returns the number of voice attachments
returns the number of recipients in the list
compares this object with the specified object for order
returns a hash code value for this email address
compare two live messages for equality
returns a string representation of the message
returns the source vertex of the edge
returns the target vertex of the edge
returns the iteration counter
the function code get iteration of code returns the iteration of the
adds a new vertex to the set of preconditions
resets the vertex array table
store the given vertex and return the store
store an edge in the table
returns the edge that connects v1 and v2 with the given type
removes an edge from the graph
returns the number of edges in the graph
returns the maximum size of the cache
returns the number of collisions
converts the element to a string
returns the identity of the vertex
returns the location of the vertex
setter for property credentials
the setter for the identity of the vertex
sets the location of the vertex
sets the status of the session
the function code get eval code returns the first evaluation policy in
returns true if the vertex code vertex code can contain
can the vertex be wrapped by a proxy
returns a string representation of the object
the method code has origin code returns true if the given
the method code has parent code returns true if the given parent
returns the vertex manager
returns the edge manager
get the algorithm manager
the method code has child code returns true if the specific
the method code add parent code adds a parent to the list of
add a child to the current vertex
the method code add origin code adds an origin to the list of
add a vertex as the last vertex delegatee
add a policy to the list of policies
sets the type of the variable
removes a child from the list of children of this vertex
the method code remove parent code removes a parent from the list of
the method code remove origin code removes an origin from the list
the method code remove delegatee code removes the specified delegatee
removes a policy from the registry
removes all parents from this node
returns a singleton list of all sub exprs
returns true iff code o code is equal to this
removes all origins
returns a string representation of the message
returns true if the column has a next row
removes all the delegate classes
returns a set of all function that have been applied to this subject
returns true if this field is constant null
return the set of conjuncts for this disjunction
removes all policies
return the property cnf that correspond to the output clause of the form
compiles the ast
return true if this type is digital
sets the location of the object
returns a collection of all sub expressions of this expression
returns the set of free variables for this expression
returns true if this type is a subtype of code other code
returns a boolean indicating whether this type is a built in type
print the name of this component
returns a collection of pops
returns an unmodifiable list of the origin function objects
return the guaranteed objects list
return the guaranteed object at the given index
returns whether the failure of this operation is finite
returns the dnf formula representing the dnf of the current form
determine if two disjuncts are equal
returns a string representation of the disjunction that is a
makes this class static
returns a collection of sub expressions of this boundsheet
returns a set of subformulas
returns an empty list since the top level terms may be
returns true if this boundsheet is elementary i
returns true if this set contains a term
return a new conj formula for this
returns a formula to get a property dnf to formula
return true if this term is quantified
returns the vertex with the given name
create a new spatial vertex
creates a vertex with the given name and type
creates new digital vertex
clears all vertices
the method code delete vertex code deletes the vertex
the implementation of the full graph is simply the graph
the method code partial attack code is called when a vertex is
the attack of the edge manager is a complete attack
gets the maximum number of attacks
returns the deployment cost of this code jbi scene code
returns the maintainance cost of this policy
returns the edge between the source vertex and the target vertex
creates a new edge between the source and target
creates a new edge between the source and target
adds the given edge to this graph if valid
returns a hash code value for the collisions hash
returns the number of edges in the graph
clears all edges and edges from this graph
method to remove an edge from the graph
delete the edge from the graph
returns the edge connecting this port to the other end of port
returns the jgraph controller that is used to display the graph
the vertex controller is a reference to the vertex controller
returns the edge controller
returns the algorithm controller
get the policy controller
returns the current action
returns a string containing the current action in the
goes to the next action
shows the previous action
sets the first action to the current one
sets the current action to the last action in the portunes list
clear the attacks and the current one
adds a new edge to the graph
adds a new edge to the graph
returns the edge object that is represented by the given edge
clears all the edges and edges of this graph
creates and adds a new vertex to the graph
adds a vertex to the graph
adds a new digital vertex to the graph
returns the vertex that is stored in this graph
returns the vertex with the given name
adds a vertex to the graph
returns the maximum number of attacks allowed
clears all vertices and vertices from this graph
gets the portunes controller
deletes the vertex from the graph
registers an observer
notify all observers of the message
the method creates a new policy
the method code add policy code adds a policy to the policy
returns the graph component
the method code delete policy code deletes a policy from the
adds a vertex to the graph
adds an edge to the graph
clear the graph
returns the vertex at the specified coordinates
returns the currently selected vertex in the graph view if any
returns the currently selected edge in the graph view if any
this method deletes the specified vertex
deletes the edge from the graph
creates the main window
shows the frame
create the panel
refreshes the panel
creates a left aligned label box
returns the selected policy type
returns the selected vertex from the identity matrix
refreshes the vertex and updates the panel
returns the location vertex for the currently selected item
returns the current state of the logging process
refreshes the panel
refreshes the panel
refreshes the panel
create the panels and show its solutions
creates the panel and shows it
return the number of attacks in this match
ranks the attacks of the level
return the name of this gate
count the number of actions in the attack list
this counts the number of persons in the graph
this counts the credentials of the graph
return the ranking of this point
returns the maven project
set the maven project for this system
returns the buddies in this group
sets the buddies
executes the command
returns the name of the operating system
returns the parser
returns the pom file
sets the pom file
returns the appropriate windows system depending on os
getter for property packaging
returns the architecture name
getter for eclipse directory
returns the prefixes
returns the directory where the plugin files are located
returns the workspace directory
sets the artifact id
returns the startup jar file
checks if the artifact id starts with the prefix
add a dependency to the module
returns the base directory
manages dependency management
extracts a number of times to a specific file
returns the jar file for the specified classifier
returns the manifest file for the given plugin
checks if there is an artifact id
create an existing manifest file
checks if the output directory has tests to be skipped
write the manifest to the given file
parse the required bundle
deploys the plugin artifact
parses the artifact id
deploys the jar file specified by artifact
parse the version of the manifest
method called before execute
this method is invoked after successful execution of the mojo
get the package name for the given entry
copies source file to destination file
delete the directory and all its contents
deletes a file
copies the specified file to the local lib folder
method dump properties
debug method to dump the modules in the project to the log file
debug method for dumping all the dependency trails
prints information about the artifact handler and packaging
helper method to dump all artifacts into log
logs the information about the artifacts created by this test project to
look for the cobertura jar
this method will be called to dump the plugin artifacts
logs the current state of the plugin context
writes all poms to the output stream
scans the given directory for test classes and adds the files found
helper method for dumping artifacts into log
adds the properties to the xml file
appends a property
returns the file handle for the modified files
append the initialization of target
copies over the plugin jar if necessary
tests the proper mojo lookup
appends a cleanup of the target name
test the mojo lookup
test parsing an artifact id manifest
test parsing a version manifest with axis2
test that the axis module can find any required bundles
test the plugin lookup
getter for code maven project code
test that the list of simple dependency infos are correctly
test the buddy config
test parsing of class path entries
get the dependency management object from manifest file
setter for code maven project code
returns true if modifications to log will be ignored
sets the flag that controls whether modifications in the log file are
checks if the given artifact is in the list of modules
log the pom to the maven log file
writes the modified pom to the maven log file
set the default prefix for the project
acquire the log writer
renders the given page and returns its html representation in the output
get the name of the renderer
gets the template directory
returns a map of the hash values
set the directory
sets the map to use
called by the main view when the preferences will changed
returns true if the values of the template directory have changed
returns a render engine that can be used to render the scene
generates jtliohash map from scratch
returns the directory of the given index
update all of the preference panels
returns a file filter for the
sets the hash map to be used by this panel
called when the view is created
update the preferences from the current values
gets the directory
returns whether or not the values have changed
creates a default jsrfile filter
gets the center of the given matrix entry
adds a string to the set
gets the point2 d of the given coordinates
returns the rectangle of the given matrix entry
returns the grid cell at the specified point or null if no cell
read a string
paints the grid
sets the matrix painter for this editor
set the matrix of the current mp3
returns the matrix rectangle
gets the row of the point in the panel
gets the column of the point
paints the grid
renames a field in the description
drawing the shape
paints the transformation matrix
returns the data associated with the given key
gets the center of the given matrix entry
sets the data for the given key
sets the edge weights
returns the edge connecting the given number of arcs
returns the edge at the given index
opens the image with the given key
display the given image
checks if the descriptor has been modified
unions the values of another basic image type source with this
returns a code basic image type code instance by the long name
make a map with the standard eedd82 subs
return the file associated with the given option
creates an album object from a directory
processing the file
initializes this album
opens a directory and all its sub files
gets the first pictures
sets the command line arguments for inclusion in this module
returns the string representation of this resource
returns a string representation of this picture in album
returns the file
renames the file with the given name
returns the file that was read from
compares this object with the specified object for order
compares this object with the specified object for order
returns a set of all keys in this cache
returns true if value is within min and max inclusive
create a sub album from this album
returns a string representation of the category list
reads the category list from a string
returns the set of categories
returns a string representation of this number
returns true if this set contains the specified category
set the category name
ensures that this collection contains the specified element optional
constructor for the basic album
removes a single instance of the specified element from this
appends all of the elements in the specified collection to the end of
writes the pictures to disk
returns the media source of this picture
checks if the album is usefull
terminates the thread
runs the writing of the album
process album process the files if they do checkpointing
renders the given info status interface
adds all properties to the list
start the loader
clears the cache
returns the soft cache size
the size of the soft cache
remove the oldest element
normalize the given integer to the range 0 n high
paints the specified grid
stops the execution of this code run code
adds the given time to the total time
adds the elapsed time to the total time
stops the timer
clears the btree
returns a new logged queue with the given namespace
removes the adjacent
get a new queue with the given namespace
convert a range query to a list of z order values
adds an item to the queue
returns the priority of a given item
writes the document to the specified file
test the row size to see if it is within the bounds
write this file to the given file
paints the grid
paints the text grid
get a timer
start the named execution
resets the timer
clears the cache
processing the file
get the number of arguments that should be used by the command
the album that is not null
compare two items
compares this object with the specified object for order
returns true if the given character has an option
returns true if the given opt flag is set
returns true if the referenced type is local
creates and returns a new instance of a rendering engine
returns the instigator
this method returns an album description info object containing the information about the
returns the map of desc info objects keyed by description name
returns the media item for the given key
returns the parent album of this album
refreshes the list of albums
returns the index of the first object
get last object
sets the album to which output will be written
fire object visible
returns the number of items in the album
sets data to the given field
constructs a sub album from the given directory
returns the category name
add unique media items
start the thread and block until the thread is interrupted
set the album hierarchy
kills the thread
run the writing of the album
process album process the album and do checkpointing if needed
register a bunch of template modifier resources
renders the given page and returns its html representation in the output
register all the resources in a directory as a map
unions the values of other according to this
get an instance by long name
getter for property has original refs
makes a directory and returns the corresponding directory
constructs an album that is a sub album of this album
opens the given directory
returns the classpath as a string
returns true if this picture has an album
writes the buffered image data to the output stream
at startup create and show the main frame of the application
this producers data is invalidated after 5 seconds
returns a link target for a special data item
set up the parsing properties
return the next token
creates a scene base for the branch group
adds a new code latent radiosity code to the
reset the latent radiosity and set the latent to the initial values
set the pause state
get the total reflect energy
returns whether the game is paused
read a vertex and return its corresponding point
verifies that the word is valid
called when parsing error occured
returns a string that describes the word
retrieves an integer from a file parsing it and convert it to
retrieves a float from a file parsing it and check that it is
edit the current page
performs an edit action on the given text
set the section mappings
sets the section mappings
set the section whose id is given by section id
clear the section handler
starts the content
this method is called to handle a end element for content
adds a class to the package
sets the scheme for xjr framework
sets the default constructor
sets the xjrconnector instance to be used with this job
returns the naming conventions to be used by the introspector
builds an object from an xml file
adds a builder to the xjr builder
create a character array for the given characters
gets the default constructor
sets the sql statement
returns the statement status of the statement
sets the statement status
returns the driver
resolves an external entity
method added by phil
flushes and closes the stream
returns the publish
returns the value of the named parameter as an object or null if
returns the transport configuration for this transport service
get the local service name
gets the value of the service interface name property
get the name of the service factory class
return the delay between the start of the programme
return the service object
returns the message of the exception
return the name of this service
returns a string representation of this method
returns the cause
returns true if the message was successfully processed
get the result
returns the exception info
returns the utc time of this note
returns the class of the system type
sets the utc time of this note
gets the utc date
returns the local date
gets the date on which the local time for this remote time zone
reads an object from the stream
serializes the given object
returns the java class represented by this descriptor
formats a date according to base64 encoding
initialize this object
returns the identifying type of this advertisement
constructs an instance of code advertisement code matching the
constructs an instance of code advertisement code matching the
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
perform search using the given attributes
return results to the service
adds the founded and used services
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
check for a class that implements the interface and implement
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
init velocity engine
create the velocity context for the current session
handles the request
returns the template file name from the request url
get velocity template from vengine
compare keywords sets by their name
save the container in the specified file
save the config to disk and delete it
unmarshalls and returns the file from the given destination path
marks this file as invalid
returns the isvalid flag
lookup the root component
lookup a given eve component in the registry
this is a callback that will allow us
log a message
get the messages of the queue
add a message to the queue
returns the root component
set the root component
this method is called from the
logs an anonymous exception
notification that a item has been changed
starts the thread
this method is the main loop for the thread that
binds the root component
adds a connection to the list of connections
adds a connection to the pool
this just records the information
create a new model
this just records the information
create a new model
returns the label for the specified type name
this just records the information
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
init the editor
create a new model
this just records the information
initializes the wizard with a selected element
this just records the information
create a new model
this adds a property descriptor for the message uuid feature
this adds a property descriptor for the message feature
this adds a property descriptor for the detail feature
this adds a property descriptor for the session uuid feature
this adds a property descriptor for the sender uuid feature
this adds a property descriptor for the attribute name feature
this adds a property descriptor for the reciever uuid feature
this adds a property descriptor for the old value feature
this adds a property descriptor for the timestamp feature
this adds a property descriptor for the new value feature
this adds a property descriptor for the feature id feature
this adds a property descriptor for the payload feature
this adds a property descriptor for the filename feature
this adds a property descriptor for the filetype feature
this adds a property descriptor for the hashtable feature
this adds a property descriptor for the append feature
this adds a property descriptor for the delimeter field feature
this adds a property descriptor for the timer thread feature
this adds a property descriptor for the running feature
this adds a property descriptor for the max repeat feature
this adds a property descriptor for the sleep feature
this adds a property descriptor for the counter feature
this adds a property descriptor for the current time feature
this adds a property descriptor for the max repeat feature
this adds a property descriptor for the counter feature
this adds a property descriptor for the sleep feature
this adds a property descriptor for the counter feature
this adds a property descriptor for the max repeat feature
this adds a property descriptor for the sim interval feature
this adds a property descriptor for the is exponential feature
this adds a property descriptor for the is logarithmic feature
this adds a property descriptor for the gradient feature
this adds a property descriptor for the constant feature
this adds a property descriptor for the sleep feature
this adds a property descriptor for the power feature
this adds a property descriptor for the is power feature
this adds a property descriptor for the is root feature
this adds a property descriptor for the birthdate feature
handles activation of the editor or its associated views
this adds a property descriptor for the hist data feature
this adds a property descriptor for the sim interval feature
this adds a property descriptor for the editing propability feature
this adds a property descriptor for the deleting propability feature
this adds a property descriptor for the creating propability feature
this adds a property descriptor for the is root feature
this adds a property descriptor for the started feature
this adds a property descriptor for the node status feature
this adds a property descriptor for the connected component feature
this adds a property descriptor for the strength feature
this adds a property descriptor for the uri feature
this adds a property descriptor for the connected feature
this adds a property descriptor for the type feature
this adds a property descriptor for the directional feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the loc longitude feature
this adds a property descriptor for the message queue feature
this adds a property descriptor for the loc latitude feature
this adds a property descriptor for the server feature
this adds a property descriptor for the node type feature
this adds a property descriptor for the server url feature
this adds a property descriptor for the loc country feature
this adds a property descriptor for the loc city feature
this adds a property descriptor for the loc ponr feature
this adds a property descriptor for the loc address feature
this adds a property descriptor for the loc location feature
this adds a property descriptor for the loc longitude feature
this adds a property descriptor for the loc latitude feature
this adds a property descriptor for the net ip feature
this adds a property descriptor for the loc country feature
this adds a property descriptor for the loc city feature
this adds a property descriptor for the net url feature
this adds a property descriptor for the loc ponr feature
this adds a property descriptor for the location feature
this adds a property descriptor for the loc address feature
this adds a property descriptor for the loc location feature
this adds a property descriptor for the time stamp feature
this adds a property descriptor for the attached connections feature
this adds a property descriptor for the sleep time feature
this adds a property descriptor for the node feature
this adds a property descriptor for the jetty server feature
this adds a property descriptor for the server host feature
this adds a property descriptor for the server port feature
this adds a property descriptor for the step duration feature
this adds a property descriptor for the step count feature
this adds a property descriptor for the thread feature
this returns logo gif
this adds a property descriptor for the prototype uuid feature
this adds a property descriptor for the prototype feature
this adds a property descriptor for the agent pool uuid feature
this adds a property descriptor for the agent pool feature
this adds a property descriptor for the demanded services feature
this adds a property descriptor for the offered services feature
this adds a property descriptor for the local service pool feature
this adds a property descriptor for the betweeness feature
this adds a property descriptor for the type feature
this accesses a cached version of the property sheet
called when a key is released
invoked when an action occurs
adds the default node gui properties
creates the node map
returns the node with the given id
visit the given node
visits a number node
visit the nodes
called by the code jcheck box code when the user changes the
returns a string representation of this object
set the value of the gui property
returns true if this node is info
sets the gui properties
adds a listener to the list of listeners
returns the properties for the gui
returns a string property from the gui properties file
writes a line to the output area
process a line while in get br
get a gui property
writes a line to the current line
if there is a property with the given key set it
plot a function with error message and print the error message to
adds a listener to this spinner which will be notified when the selected
dispatches change events to the registered listeners
gets the container for a given node
check the rx queue for new data
returns a string representation of the object
returns the index corresponding to the given threshold
return the logger instance that is associated with name
return the logger instance that is associated with the specified class
add a service control listener
remove a service control listener
remove all listeners for service control events
this method listens on the specified port for incoming connections
send the given event to all registered service control listeners
sets the maximum time to wait when a response is sent without
notify all listeners of a service control event
send the given event to all the registered service control listeners
notify all listeners that a service control event has occurred
notify all listeners of the arrival of a service control event
runs the client
notify all listeners
return all the service control listener instances
stops the server
show the menu
reads the selection from the underlying input stream
starts the debugger
displays the arguments
print out the timings of the jvm properties to the file
enumerate the listeners
writes a message to the output stream
starts the thread and sends the data to the remote host
calls all registered bus listeners
sends the message to the client
return an enumeration of all the bus listeners
writes a message to the output stream
stop the server
stops the server
returns the number of elements in the array
pauses the simulation
listens on a specified port for incoming connections
this method listens on the specified port for incoming connections
this is the run method for the thread
communicate with the client
write data to the client
gets the value of handle
getter method for date of register
getter for property last write date
get the client string from the client
returns the exception that was thrown
returns the number of arguments for a given option
returns an enumeration of the arguments in this hashtable
enumerates the keys
returns the value of an option
returns the enumeration for a given option
constructs an html not htmllexception
constructor taking a single string argument
pauses the simulation
resume all paused tasks
the default implementation of this method returns an
adds a url to the history
clears the graph
clears the list of code start urls code
deletes all webpage pages and all the children of the page
pauses the thread pool
returns the redirection target
resumes the thread pool
determines if the given content type is html or text
returns the uri of the location of this resource
make a normalized url from a url string
dispatches all urls that are available for downloading messages
gets the setting attribute of the ejbmethod descriptor object
shuts down the thread pool from the time limit
sets a setting to a new value
register a redirection to the target page
registers a new weblink to the cache
removes url from the list of urls to be undispatch
create the menu
show a webpage in the editor
set the current page
get the title of the current page
get the url of the current page
get the depth of the page
set the visual renderer for this model
the function code set menu code sets the popup menu of the vertex
get the number of in links
get the page out link count
if the cursor is different than the current cursor this replaces the
loads an icon from a file
the setter for the graph
invoked when the target of the listener has changed its state
set webpage to show
set the selected links
configures the filter list
delete the currently selected crawler
sets the size of this component
adds a new url
loads an icon from a file
sends a command to the server
the method code run code runs the command queue
helper method to set a setting without throwing any io exception
implements method in interface java
connects to the database
private constructor prevents instantiation
reinitialize this object
returns the connection to the database
closes the connection
clears all data from the database
gets the status panel model
adds a new url to the crawling list
sets the maximum depth of the search
adds a filter to the chain
removes the ith filter from the chain
clear the data sources
returns a string representation of this operation
returns a string representation of the object
to string method
test if a link is visible
test if a link matches the filter
returns true if the dialog has been cancelled
determine if a link should be filtered
configures the filter
returns true if the query was cancelled
convert to a string representation
test if a link is visible
to string method
configures a filter
to string method
returns a string representation of this filter
returns true if the link is not null and not a link
test if a link matches the filter pattern
returns true if the download was cancelled
configures the filter
returns a string representation of the object
configures a filter
returns the string representation of this match
register a new filter class
configure the filter
check if a link is eligible for indexing
removes the filter at the specified index
adds builder to the existing builder list
sends the commands to all the builder instances
returns the string representation of this link
add a normalized ngram
train the classifier for a set of decision trees
creates a leaf node
calculates the entropy of a given number of postives
sets the java name of the class
p tear down instance variables required by this test case
adds a field to the field table
sets the back panel
gets the user attribute of the connection bean object
gets the password attribute of the connection settings object
adds the authentication data to the authentication manager
adds a new authentication data
makes the initializations and set the authserver
checks if this rational number is an integer
read an ascii string from the packet
reads a rational
add nodes for the maker test
reads a signed 32 bit integer from the input stream
this method is called by the server side to process a file info
this method will be called by the service manager when it receives a
this method is called by the service manager when the request to service
returns the remote file information for a file to be processed
retrieves the jobs status
accepts the transfer
parses replica sabotage check phase
adds a jdl job to the list of jobs
todo document me
when set grid button is clicked
when cancel job button is clicked
parses the job id from the xml node
write the text in the text area
formats a map to a string
creates job counter
create an xml string for a single file
returns the job id of the selected job
remove a user from the peer
get the highest priority from all the responses
loads the peer properties from the file
define the status of this frame when the peer
updates the complete status of the peer
delete a row in the table
sets the table data
disables all input fields edition tags
returns the name of the column at code column index code
enables all input fields edition tags
initializes text fields
saves the values in the text fields to the
initiate the fields for this record
creates a new worker spec
save the values of the internal panels field inputs
sets the table model data
returns the string identifying this local worker
return the public key for the worker
executes a parsed configuration for the
executes a parsed request on service
returns the playpen root
returns the storage root
this method will be called when a remote execute is received
this method processes the request to get file information
loads the worker properties from the file
get the cpu vendor
partition name where the system is installed
retrieves the partition file system name
returns the usage of running tasks
sets the master peer deployment id
executes a call on service
returns the consumer address
sets the workers client address
checks if consumer is available
returns the value of the given attribute
returns true if an attribute with the given name exists
performs a semantic analyzer to the given language
adds an attribute to the element
adds a map of attributes to this context
removes an attribute
adds an annotation to the annotation set
getter for property sabotage check
returns true if this and other have the same record
checks if a specific class ad is used
checks the record expression
gets the record expression
provides the expression
this method is called from the jsp container to set the record attributes
insere um an attribute at the end of the record
generates a record expression with a string
parses a string constant
this method is used to get the execution result
parses the given string and returns the corresponding expression
parses the primitive value
stops a v server
sets this code job code as cancelled meaning that it is finished
marks this code grid process code as running
changes a workers status to allocated for peer
expects an user to successfully login at the peer
sets workers in a peer according to a sdf file
changes a workers status to idle
removes a listener from the pep
creates a new xmppconnection
returns the namespace of the content of this element
set the jingle description
get the jingle description
add a new transport negotiator
add a list of transports
get the number of jingle transports in this jingle session
returns the xml representation of this object
adds a payload type to the packet
adds a list of payloads to the packet
returns the number of payloads in this packet
returns the xml representation of this payload
adds a new content
adds a list of content
get the action
set the action
starts transmission and for nat traversal reasons start receiving also
set transmit activity
stops transmission and for nat traversal reasons stop receiving also
the receive method is called when the session is no longer active
starts transmission and for nat traversal reasons start receiving also
prints a listing of this component to the specified print stream
returns the index of the given color in this subtree
logs an error message
logs an error message
logs an debug message and the given exception
logs a message with debug priority
logs an warn message
logs a message with warn priority
set the session of the user
logs an info message
logs a message with info priority
terminate the session
process the invitation
set transmit activity
start the transport
closes the negotiation
return the negotiator for this session
set the media negotiator
destroy the jmf negotiator
returns the transport negotiator
set transport negotiator
destroy the transport negotiator
returns true if all players are fully established
stop the rtp session
get the negotiator state
set accepted local candidate
start the transport
get the best jingle transport negotiator
trigger a candidate added event
check if a transport candidate is ok
get the best candidate for this code transport candidate code
initialize transport resolver and wait until it is ready for requests
add a valid remote candidate to the list
receive a content packet
receive an accept action
set the jingle media managers of a jingle session
get the transport manager of this jingle session
receive a iq result
get the media manager of this jingle session
receives an iq packet and calculates the common codec
receive a transport candidate
check if all connections are established
returns code true code if all content negotiators are fully negotiated
trigger a transport candidate
create an offer for the list of audio payload types
adds a new content negotiator to the session
trigger a transport closed event
create an accept message
gets the value of the best common audio pt property
get the best remote candidate
trigger a jmf established event
trigger a jmf closed event
notify the listener that the transport has started
we override this method to trigger media close
obtain the best remote candidate obtained in the negotiation so far
get a description of the best payload type
parse a iq jingle transport candidate element
parses payload from xml
parses the payload
return the corresponding instance of this class
creates an ack iq for the specified iq type
adds listeners for connection state changes
creates a new outgoing jingle session
creates a new jingle session with the given responder
remove the packet listener
create a new incoming jingle session
returns a session with the given jingle address or null if none exists
reject the incoming jingle request
add a listener to the list of listeners
remove a listener for jmf negotiation events
add a listener to the transport negotiators
remove a listener for transport negotiation events
trigger a session closed event due to a error
trigger a session closed event due to an error
trigger a session established event
trigger a session redirect event
terminate the session
this method is called when the packet listener is started
return a scanner for creating java partitions
returns the singleton java code scanner
the code java editor code implementation of this
returns the label of this property
insert the methods description here
get the md5 checksum for this file
creates the canvas for the current zombow graphics
tells the thread to update the state of a callable
add a callable to the render queue
returns the current time per frame
sets the implementation of jmecanvas
updates the input and output streams
renders the open gl context using the specified renderer
getter for property update input
set the value of update input
sets the target rate
sets the update rate
returns the encoding used by this converter
creates an instance of the resource
register for and xml file extensions the ipdd resource factory impl factory
returns the package of this validator switch
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
generates the wsdl for the active bpel engine
validates the pattern constraint of em invoke handler type em
generates the partner role
generate the wsdl for the partner link for my role
validates the pattern constraint of em version attribute type em
registers a new converter
generates a commitment of the main part of a hash
retrieves the wsdl definition for the given import
this method returns the wsdl definition
returns the schema for the given bpws import
get the schema for the imported imported schemas
check if there is a wsdl service for this bpel partner
getter for property meta data
returns a list of all
scale random value according to the given factor and resolution
sets the size of the image created by calling code create image code
this method returns the acetate layer
return a string representation of the envelope
returns the distance between the diagonal image and the framing rectangle
a string of the envelope as an xml string
gets the visibility of this menu item
gets the remote
returns the type of the service
runs the worker
sets the host name of the local ims server
sets the local ims port
sets the local ims service
sets the output directory for the generated files
sets the directory where the images are stored locally
gets the value of local ims host name
gets the local ims port
gets the value of local ims service
return the local output directory
gets the local image fusion work dir
parse the xml request and event handler map
parses xml response from the given xml and puts the result into the
gets the value of ims host name
get the xml from the remote xml request
get the port used by the ims server
gets the ims service
returns the connection proxy
sets the map image url
receive notification of the end of an element
sets the parent tag
this method returns the value of the parent tag
gets the map image url
send request to get the extract data
set the layer this layer is attached to
gets the ims background color
returns the layer
get the status of remote server
rounds the value
gets the request data type
get the scale
sets the image
return the envelope of the map
sets the scale of the map
returns the scale of the map
sets the spatial filter
gets the value of spatial filter
sets the output url
gets the value of output url
set the id of the layer that is active
get the id of the layer that is currently active
sets the flag indicating whether or not layer
gets the value of active layer remote
set the name of the active layer service
gets the value of active layer service
sets the symbol color
gets the symbol color
sets the symbol outline color
gets the symbol outline color
sets the symbol width
gets the symbol width
sets the type of symbol marker
set the list of fields for this record
set the where expression
get the where expression
sets the begin record
gets the value of begin record
get the maximum feature size allowed
adds a layer to the list of layers
gets the value of layer hash
render the object after printing
adds a xref to the xref list
creates and prints an xref
writes the xrefs field
returns true if this action is configured
adds an action to the processor
is this service in debug mode
set the debug mode
configure the actions
returns the gson builder
process the http get request
adds the given action to the action map and apply
applies the given action to this factory
looks up an action by name
added in yahoo
start up the server
sends a message to the server
set the endpoint address for the specified port name
create a proxy for a given class
disconnect the connection
this method is called when the user wants to quit the game
tests that we can get capabilities from a particular backend
tests that a connection to the server returns success if the connection
test method for
test the failure of the
test method for
test the equals method
test method for
tests if the status change notification is not in changed properties
test of open method with good context
test that open does not throw an exception
this method is called upon plug in activation
this method is called upon plug in activation
returns the director of the specific invitee
this method is called when the plug in is stopped
sets the director of this invitee
returns the helper
returns the current active invitee
sets the invitation for this aircraft
notifies the model about a changed question
reads a participant from the given node
returns the list of items
loads a dom document from an input stream
remove all the preferences that have been stored
sends an update to all registered listeners
validates the settings
returns the econference context representing this persons letterbox
replace our id with the fullname found in the invitation
adds refreshes and refreshes the toolbar
returns the ieconference manager
returns the part that is the target of this action
returns the first question of the current wizard page
returns the current selection
adds actions to the action bar
refreshes the tree view
hook into a right click menu
this method is called upon plug in activation
this method is called when the plug in is stopped
close this chat
find the first moderator in the chat room
add chat status listener to this chat service
remove chat status listener from this chat
adds actions to the given action bars
tests notifications of participant1 from participant2
tests ordering among the roles
this method is called by the proxys code proxy code
creates the field editors
creates the field editors
validates the input
sets the error message to be displayed on the status bar
returns the profile context
this method initializes sash form
hook into a right click menu
gets the current user context
decreases the time by one
returns true if the timer has timed out
queue a new event to be run on the queue
this method is called upon plug in activation
this method is called when the plug in is stopped
queue user for recognition
loads and registers the given image as an icon image
returns a string containing the user and all timings
convenience method to get the window that owns this actions shell
returns the current instance of the luv uihelper class
connects to the server
set the uihelper
returns the first selected element
disconnect from the backend
find the specified timings
returns the current selection
message send to and line feed listener
test a configuration that with extension
tests if the current configured value is valid
this method is called upon plug in activation
this method is called when the plug in is stopped
returns the helper for this repository
indicates whether this entry is a system entry
returns the registry this service is associated with
checks if the id and password are valid
checks if this connection is valid
this method is called upon plug in activation
this method is called when the plug in is stopped
get the helper
this method initializes combo
displays the context for the chat room
returns the context
notify listeners of changes in the chat room
contributes to the given action bars
hook into a right click menu
returns the multi chat manager
returns the first participant of the selection
returns the model of the manager
gets the invitation
returns true if the user has a password
returns the invitation
sets the moderator of this join application
create the chat service and registers the
tests the get proxy method
tests that a bad proxy works with a virtual proxy factory
sets the roster this player will use
creates a new xmpp connection
returns the clean jid of the current user
creates a secure xmpp connection associated with a particular service
declines the resource to a new line
returns the jid of the user who is connected to the server
converts the message in a code imessage code into a
notify listeners that status has changed
notify listeners that status has changed
notify the listeners that the event has been sent to the
create and return an code iparticipant code which mocks the current
returns the local part of the user name
creates the model
unregister the listeners for all jad slee components for active inactive
returns the chat conversation for this agent
sends a packet to the backend
sends a custom packet
registers a packet listener with this connection
get the participant for the local user or participant
creates a connection to the database
opens all db connections
this method creates all the registered
fills the item provider factories list with the given list of factories
populates the filter by type list
returns the adapter factory used to create item providers
refine all known extensions
refine the extension
returns the name of the code mining mart concept code
sets the value of the
sets the value of the
returns the first occurrence of the given class in the collection
returns the uri of the resource
returns whether the value of the
sets the generated attribute of the jbuilder extract method object
returns the name of the refines for the given index
adds the name of the refines in the actual schema
this adds a property descriptor for the convergence feature
this adds a property descriptor for the extended feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the refines names feature
adds a new name to the refines list
this adds a property descriptor for the sees feature
this adds a property descriptor for the refines names feature
this adds a property descriptor for the sees names feature
returns the name of the given sees element
returns the name of the refines referenced element
returns the label text for the given column of the given object
method for adding a name to the list of sees
adds the name of the refines
adds the new name to the list of sees in the given position
adds a new name to the refines list
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the name of the element at the given index in the
method add extends name
adds a new name to the list of extends names
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the extends feature
this adds a property descriptor for the extends names feature
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the predicate feature
this adds a property descriptor for the source feature
this adds a property descriptor for the references feature
this adds a property descriptor for the expression feature
creates a new adapter for an object of class
this adds a property descriptor for the theorem feature
creates a new adapter for an object of class
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
this adds a property descriptor for the name feature
this adds a property descriptor for the action feature
creates a new adapter for an object of class
this adds a property descriptor for the extension id feature
this adds a property descriptor for the key feature
this adds a property descriptor for the reference feature
this adds a property descriptor for the value feature
this adds a property descriptor for the generated feature
this adds a property descriptor for the local generated feature
creates a new adapter for an object of class
this adds a property descriptor for the comment feature
creates a new adapter for an object of class
this adds a property descriptor for the key feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the type feature
creates the meta model objects for the package
this adds a property descriptor for the label feature
find the resource in the given e object
creates a new adapter for an object of class
creates a new adapter for an object of class
returns true if the given objects are the same component type
returns true if the two given
this disposes all of the item providers created by this factory
returns the location of the exception
returns the character index of the start of the
create a rodin project from an irodin project
tests if the rodin file exists
creates a new adapter for an object of class
creates a new adapter for an object of class
checks that the attribute handlers for the intersection are not already handled
creates a new adapter for an object of class
disables transaction change recorder and all of its adapters
re enable the transaction change recorders for the specified elements
returns the source property
adds a new free identifier to this environment
delete the project file
returns the arity of this code function code
initialize the preference values for this plugin
calculates the initial bindings for the given formula
returns the path to the rule
applies the rules to the given expression
gets the name of theory
applies the rules to the given predicate
returns a hash code value for the object
returns the delimiter used to separate the categories
delete the project file
set the list of string values
get the path to the deployment directory
create a key for a rule in the theory
creates a comma separated list of category names using the theory
tests whether the given ident and pattern are bound by the given
gets the string value of the list
used for un unify types
return true if the given type is known to be an identifier
checks if the given expression is a mapping expression
creates and returns a new item for the list
returns the new input object
removes all the theorys contained in the model
this method is called whenever the observed object is changed
combines the given list of items into a single string
notifies that the add button has been pressed
adds a rule to the rule set
processes the given source element by adding the rules for the given proof obligation
this method tries to process the
returns the number of manually discharged poses of a given type
compare this obligation to another one
this method returns the number of po obligations that the specified element can
this method returns the number of reviewed proof elements of a given
this method returns the number of undischarged pocount of a given type
side effect set status of the ip capable of the process
notifies that the remove button has been pressed
refresh the content of the form
gets the project name from the project combo box
returns the active workbench page
adds a comment to the element
creates the sections
adds a new variable to the
adds a new event to the core
returns true if the current selection contains element
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
handles the text modified event
adds an error message to the list of errors for the given task
adds an error to the list of errors for this if statement
creates and adds a new error term
adds an error to the error description
add an error to the error description
adds an error to the error description
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
creates a new adapter for an object of class
create a new model
returns the label for the specified type name
this just records the information
create a new model
handles activation of the editor or its associated views
recovers previous element in the document
returns the label for the specified type name
this just records the information
create a new model
check if a given event name has a composed event
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
returns a diagnostic describing the errors and warnings listed in the resource
creates the meta model objects for the package
creates a new adapter for an object of class
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the text feature
this adds a property descriptor for the element feature
creates a new adapter for an object of class
this adds a property descriptor for the variable name feature
creates a new adapter for an object of class
this adds a property descriptor for the label feature
this adds a property descriptor for the event name feature
creates a new adapter for an object of class
this adds a property descriptor for the label feature
creates a new adapter for an object of class
this adds a property descriptor for the label feature
creates a new adapter for an object of class
this adds a property descriptor for the local event feature
this adds a property descriptor for the remote event feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
enables assertion checking in the default case
description of the method
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the feature of the component
this adds a property descriptor for the base feature
creates a new adapter for an object of class
this adds a property descriptor for the address feature
this adds a property descriptor for the type feature
this adds a property descriptor for the implementation type feature
this adds a property descriptor for the period feature
this adds a property descriptor for the name feature
this adds a property descriptor for the priority feature
this adds a property descriptor for the parameter type feature
this adds a property descriptor for the temporary feature
creates a new adapter for an object of class
this adds a property descriptor for the text feature
this adds a property descriptor for the element feature
this adds a property descriptor for the case expression feature
this adds a property descriptor for the type feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the action feature
this adds a property descriptor for the target feature
this adds a property descriptor for the period feature
this adds a property descriptor for the subroutine feature
this adds a property descriptor for the machine name feature
this adds a property descriptor for the project name feature
creates a new adapter for an object of class
this adds a property descriptor for the priority feature
this adds a property descriptor for the project name feature
this adds a property descriptor for the machine name feature
this adds a property descriptor for the machine name feature
this adds a property descriptor for the related event feature
this adds a property descriptor for the project name feature
creates a new adapter for an object of class
this adds a property descriptor for the project name feature
this adds a property descriptor for the machine name feature
this adds a property descriptor for the full initialisation expression feature
this adds a property descriptor for the literal values feature
this adds a property descriptor for the order number feature
this adds a property descriptor for the partial initialisation expression feature
creates a new adapter for an object of class
this adds a property descriptor for the case value feature
this adds a property descriptor for the parent event name feature
this adds a property descriptor for the mode feature
this adds a property descriptor for the related event feature
this adds a property descriptor for the project name feature
this adds a property descriptor for the identifier feature
this adds a property descriptor for the type feature
this adds a property descriptor for the initial value feature
this adds a property descriptor for the number base feature
this adds a property descriptor for the project name feature
this adds a property descriptor for the address feature
this adds a property descriptor for the component name feature
creates a new adapter for an object of class
creates a new adapter for an object of class
adds a new fragment machine to the core
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns a string with tabs t
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
adds a feature to the include statement attribute of the
creates a new adapter for an object of class
creates a new adapter for an object of class
saves the state of the machine event
creates a new adapter for an object of class
returns the variable declaration of the given name
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the machine feature
this adds a property descriptor for the machine name feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the project name feature
this adds a property descriptor for the combines events feature
this adds a property descriptor for the convergence feature
this adds a property descriptor for the sees feature
this adds a property descriptor for the refines names feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the composes events feature
this adds a property descriptor for the refines names feature
this adds a property descriptor for the sees names feature
this adds a property descriptor for the machine feature
this adds a property descriptor for the event feature
creates a new adapter for an object of class
this adds a property descriptor for the machine name feature
this adds a property descriptor for the event name feature
this adds a property descriptor for the project name feature
this just records the information
create a new model
creates a new adapter for an object of class
reads the root element of the xml document
parses the variables operators
creates a new adapter for an object of class
returns the label for the specified type name
closes the connection
creates a new adapter for an object of class
creates a new adapter for an object of class
closes the socket
reads a message from the underlying xml document
send a message to this node
creates a new adapter for an object of class
sets the value of the indicated attribute
creates a new adapter for an object of class
makes sure the console is shown when the mofimport logger was initialized
reads the document from the console
complete animation and put it in the
creates a new adapter for an object of class
set the translation
set the translation
inits the animation field
set the state of this code gl20 resource shader fragment code
updates variable states of all the contexts
set the initial state to all the given elements
adds a new editor initializer to the list of initializer
initializes the initializers by calling code apply initializers code
creates a new adapter for an object of class
updates the given elements in the viewer
creates the section toolbar
create a client
creates a component model that is associated with the animation
handles activation of the editor or its associated views
disposes the client
this method initializes first row
creates a new adapter for an object of class
updates the given elements in the viewer
initializes the annotations for b null b
creates a new adapter for an object of class
configures the debug option
returns the extension of this files name
get the name of this file
creates the section toolbar
creates a new adapter for an object of class
sets the input for the viwer editor
adds all irodin abstract scevents and also the only for
get the previous step in the history
creates a new adapter for an object of class
fire a new step event
implemented to remove an animation listener from the list
creates a new adapter for an object of class
implemented to add an animation listener that will be notified when the
updates the given event in the tree viewer
updates the given event in the model
sets the current step to the given one
creates a new adapter for an object of class
creates a new adapter for an object of class
synch with the viewer
this method initializes j tool bar
this method initializes connect
creates a new adapter for an object of class
this method initializes this
this method initializes j content pane
sends a closed message to all clients
sends an error to all the clients
this method initializes this
this method initializes j content pane
this method initializes j text pane
this method initializes j button
this method initializes animation name field
returns a boolean indicating whether the specified directory
this method initializes base model name field
this method initializes host name field
returns the next element
creates a new adapter for an object of class
this method initializes port number field
this method initializes project name field
execute the export operation and return true if success
the finish button was pressed
answer the string to display in self as the destination type
creates a new adapter for an object of class
adds the given fixed value to the result
this is used to determine if the code event code is closed
returns an identifier for the specified abstraction
destroys the current state of the animation
checks if the event is closed
checks if the transition is open or closed by a given state
creates a new adapter for an object of class
removes a observer from all registered iobserver instances
hook method for saving widget values for restoration by the next instance
force observation for all observers
put a variable in the datas map
clear all events from the animation
this method is used to retrieve the delta state of this domain
updates all events that are registered with the
removes the variable
creates a new adapter for an object of class
clears the variable list
process the variable
creates a new adapter for an object of class
adds a variable to the environment
returns the message to use for the destination when no data transfer is
returns a diagnostic describing the errors and warnings listed in the resource
returns the name of a container that has been added to the workspace
creates a new adapter for an object of class
adds a animation set to the animation
returns the name of the project that overlaps the target directory
creates a new adapter for an object of class
creates a new adapter for an object of class
returns a randomly chosen event from the event list
stop the server
public method to return the port of the connection
creates a new adapter for an object of class
add a s expression to evaluate
creates a new adapter for an object of class
returns the code eattribute code in which the specified class was defined
returns a copy of the
creates a new adapter for an object of class
returns the label of the element
returns the type of the class
return the type
creates a new adapter for an object of class
returns the type of the class
returns the label of the element
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the name of the element
returns the value of the em b umlb em attribute
get the type of the current class
creates a new adapter for an object of class
returns the label of the class
creates a new adapter for an object of class
returns the type of the current type
returns the name of this node
creates a new adapter for an object of class
returns the first elaborated base
creates a new adapter for an object of class
checks if the instance is a singleton
return the label of this umlelement
creates a new adapter for an object of class
adds the umlbtype expressions
returns the type of the umlbtype provider
return the label of this element or null if none
creates a new adapter for an object of class
creates a new adapter for an object of class
this accesses a cached version of the property sheet
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
run umlb tools on the specified umlb project
log an error
log a warning
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the unique element names constraint of em umlbname em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates figure for this edit part
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates figure for this edit part
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates figure for this edit part
creates a new adapter for an object of class
validates the nogabstract state constraint of em babstract state em
validates the notransition constraint of em uml babstract state em
validates the one outgoing from salmiakki constraint of em uml babstract state em
initialize feature initializer expressions and attributes
this just records the information
returns the label for the specified type name
handles the text modified event
handles the combo modified event
method to get a new value
returns the label text for the feature
returns true if there are errors
modify unwrap selection
returns the column width
indicates if a column is read only
returns true if the element is read only
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
initialize feature initializer expressions and attributes
this adds a property descriptor for the name feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the convergence feature
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
this adds a property descriptor for the elaborates feature
this adds a property descriptor for the action feature
this adds a property descriptor for the is elaborated by feature
this adds a property descriptor for the disjuncts feature
this adds a property descriptor for the disjunct by feature
this adds a property descriptor for the type provider feature
this adds a property descriptor for the extends feature
this adds a property descriptor for the type feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the theorem feature
this adds a property descriptor for the initial value feature
this adds a property descriptor for the label feature
this adds a property descriptor for the local feature
this adds a property descriptor for the marked feature
this adds a property descriptor for the comment feature
this adds a property descriptor for the outgoing feature
this adds a property descriptor for the surjective feature
this adds a property descriptor for the errors feature
this adds a property descriptor for the injective feature
this adds a property descriptor for the incoming feature
this adds a property descriptor for the total feature
this adds a property descriptor for the expression feature
this adds a property descriptor for the functional feature
this adds a property descriptor for the final feature
this adds a property descriptor for the initial feature
this adds a property descriptor for the salmiakki feature
this adds a property descriptor for the inherits feature
this adds a property descriptor for the type feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the label feature
this adds a property descriptor for the supertype feature
this adds a property descriptor for the eighthorn feature
this adds a property descriptor for the instances feature
this adds a property descriptor for the kind feature
this adds a property descriptor for the translation feature
this adds a property descriptor for the message feature
this adds a property descriptor for the umlb element feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the label feature
this adds a property descriptor for the contexts feature
this adds a property descriptor for the extends feature
this returns constant default
this adds a property descriptor for the refines feature
this adds a property descriptor for the event kind feature
this adds a property descriptor for the fixed feature
this adds a property descriptor for the self name feature
this returns constant default if none of the above
returns the resource that this operation applies to
returns the first diagram loaded from the database
get an error reporter for this page
delete the marker
gets the rodin elements
sets the initial project name that this page will use when created
runs btools and creates a new one
returns the source of the operation
returns true if the given list contains this element
returns the plugins resource bundle
returns the type conjunct
searches for the first
returns true if the current target is an elaborating disjunct
adds transitions to the list of guards
adds all the guards of the transition
gets the text of the disjunct guard of the transition tree
initialize feature initializer expressions and attributes
adds actions of the possible transitions that are
processes a transition into state sets that are created from the container
configures the debugging options
gets the included machine
removes a transition from the statemachine
returns the include clause with the given element name
adds enter sets and actions to a transition
enters the set of transitions
checks if the event table contains the mch included machines and
this method adds all the type parameters from the event to the
enters a transition into the container
get the name of a state
adds a new declaration
process the formula
loads the font
refreshes the model when the composition model changes
compares this obligation to another
removes all the refined by machine dependencies in the
read the pocount of an element
remove a rootcomposed nfd machine to a root machine
returns the type of this barcode reader
side effect set status of the ip capable of the process
processes the refines clause
refreshes the model when a new element is selected
processes an include statement
clean up the model
refreshes the model to reflect new irodin data from a given element
removes all the refined by machine dependencies for the given model
returns the parent of this element
returns true if this element has children
remove a rootcomposed nfd machine to a
for internal use only
the elements of the tree have changed
hook into a right click menu
removes all the refined by machine dependencies for the given model
refreshes the tree
fills the pulldown menu
fills the toolbar
create the actions
sets the root of the tree
sets the parent of this element
gets the current project
for internal use only
get the operation tree create command for an internal element
returns the undo action for the given window
returns the redo action for the given window
processes an include clause
adds a new invariant to the model
add a composes event to the model
configures the debug options
process the information about the source
tries to process the composed process
returns the selected machine
this adds a property descriptor for the name feature
this adds a property descriptor for the new name feature
this adds a property descriptor for the event refines feature
this adds a property descriptor for the events feature
closes the opened editor
add a new machine to this set
adds the provided context to this set
create a copy of the given resources
creates an xmb resource
creates a new resource
adds an event to the model
adding a refinement
this removes from the specified code manager code all
handles the combo modified event
returns the label text for the feature
gets the label for a given object
returns the parent of this node
open the dialog
creates the wizard dialog
defines the initial actions for a page
opens the wizard dialog and returns the selected button
creates the wizard dialog
opens the wizard
creates the wizard dialog
log the problem
this method opens a syncisation result dialog
shows a confirmation dialog
shows a dialog to set document settings
creates a new adapter for an object of class
handles activation of the editor or its associated views
returns the parser for the given document
checks whether the document can be parsed
add a new document to the current project
changes the filename of the given document
sets the parser to be used by this text area
creates a new adapter for an object of class
removes a document from the list of requirements for the given document
returns true if this file has unsaved changes
dispose of this
save the rodin file
the observed element changed
returns whether the given document has a parser
returns the parser object for the given document
returns true if the command execution was successful
the element changed
gets the value of the label then number property
returns the label delimiter
process the document delta
returns the number delimiter
gets the ident then text
indicates if this filetype can be parsed
determines if a string is a boolean
updates all files that are in the given delta
returns the pattern used to match the candidate of this query
returns the pattern that checks the validity of this rule
returns the part pattern
returns the encoding of the stream
it returns the ident style
returns the text style
sets the relevant flag
tests if this set of parameters is capable of parsing a filename
parses the input stream as a dom document
sets the requirement that is fulfilled by the user
get the elements from the document
returns true if the given string is a requirement
check if the elements entered in the list are valid
removes the given associations from the set of associations of this
returns true if the given node is an ident style
returns the label image for the given column of the given element
navigates to the event b association
returns true if the given node is a text node
returns the name of the style for the given node
returns the text of the column at the given position
checks that the given array contains only elements
note this method is for internal use only
returns the value of the given element
modifies the element
set the first message
the method code check code checks the entered information
sets the second object
note this method is for internal use only
return the text for the column
return the value of the property for the element
modify the element
returns the label text for the given column of the given element
creates a new adapter for an object of class
gets a setting
sets a setting
get the information provider for the given internal element
returns the result of the test
for internal use only
determines if this language contains the given iguard guards
creates a new adapter for an object of class
guides the content xml based on a document pocess
close the zip output stream
returns a new transformer instance
returns the shortened version of the given list name
checks if the given file exists
adds a problem to the list of problems that are not printed
returns the value of the given settings
returns the value of the given settings under the given root
gets the thread
changes the thread
saves the current thread
frees the current thread
add an observer
init the server
get the execution result of this command
wait until done
returns the value of the wrapped expression
code get mutable value code returns the mutable value of this instance
pushes the given table on the stack
pop the topmost table from the stack
returns the old variables
gets the value of the new variables property
returns the factory used to create the model
returns the rodin formula
returns the formula of this edge
sets the variable linked to this
this method is called by the
rollback the value of the variable
add context to the list of contexts
get the rodin predicate
verify the invariant
performs some initial checks checks
apply all valuation to the result
adds a constant to the pool
checks whether this state is complete
checks if the given context is valid for this machine
checks if the given
name converter for object
fills the machine stack with the machine machine
get the machine that contains a given level
returns the object for the given name
returns the name of the predicate
returns the object for the given name
returns the name of an assignment
get the machine by name
axiom parsing predicate
performs some initial checks
method that returns the unique id of the object with the given
get the event for the given name
writes the class check it against the data
publishes an event to the specified execution result
notifies all listeners of an unknown event
fire an event to all the listeners
notify all the listeners of an exec event
notifies all registered listeners that a variable has changed
init the bset
gets the attribute valuation
inits the relation
add a value to the list
returns the old valuation
sets the iterator to the next element
returns true if the given expression is contained in this set
returns true if the given expression is in the set
returns the reciprocal of this rational number
compares this big integer with the specified big integer
returns the double value for out num object
test method for
tests that all elements in the correct order are returned
tests for the includes operation
test that any function works with an element
test the function an any argument
test pre parsing with multiple predicates
test pre parsing with multiple predicates
test with two predicates
test with two predicates
test notsubseteq1
test notsubseteq2
test with notsubset condition
test notsubset function
test parsing of a subset clause
test parsing of a subset clause
test parsing of a subset clause
test parsing of a subset clause
test parsing of predicate not contained
test parsing of predicate not contained in
test notsubseting
creates the columns for the table
configure the debug translator options
validates the current state of the solver
tests the result of the search
this method checks the correctness of the output stream that has
bool theory
return whether or not benchmark is considered to be null
returns true if the code translation performed code was
test that kdom returns true when the predicate is empty
gather all set of special mspreds
utility method to remove all known sets from all known sets
tells if an atomic integer expression was found
returns true if the option can be used with an int
returns the uses true predicate
test with a simple xpath expression
test with a kmin expression
translates to a true predicate
checks that error is generated in prj1
creates a pair symbol from a type
checks that error is generated in prj2
returns the smtpformula node that contains the smtnode
clears the formula
returns the symbol of the rule
tests code pprod code
returns the code smtphstack symbol code used for this math ml element
returns the argument of this statement
getk argument returns the smtp function constant of the interpreter
returns the f argument of the most recent function
check that verifies that the function of the given type is correct
returns the sort order of the theory
tests that a simple translation with two non constant bindings
add a macro to the macro list
translates type from bound ident declaration to java type
append any macro definitions needed
tests that the type environment is raised correctly
remove all unused symbols
tests multi line annotation with two character translation
writes the logic section of the current logic
get the symbols which are used in the formula
sorts declarations alphabetically by name
check that verifies that the given environment is in the proper
adds a function for extant functions
test translation with extended predicate
translate a predicate into a smtpformula
tests that the
the theories section of the space
returns the symbol used for boolean sorting
a string representation of this object
returns the ints set for the specified theory
returns the bools set which contains the theory and theory
removes all the symbols that are not used in the formula
checks if the type is set
returns the sort symbol used by the query
checks that error is generated in prj1
query if this ring is associative
returns whether or not the specified string is compatible with this
returns true if this is a propositional choice
get the name of this variable with the qmark
query if this ring is associative
return result sort
checks that error is generated in prj2
appends the comments
returns the symbol of this node
translates a product type to a smtsort symbol
returns the signature of this method
returns the formula of the rule
returns the sort order of the theory
append any macros section
checks if the product type is set
returns a fresh symbol name
returns the symbol used for resolving external names for cards
returns the symbol used to macro names for this macro
adds a function to the set of functions
tests code pprod code
creates a label with the given label
appends logic section to the given builder
prints the annotations
check that verifies that the function is correctly obfuscated
adds extra extra section to the builder
returns the predicate symbol of this rule
called to extrapreds all the chunks in this section to the given string builder
fifth pass produce java help
tests that a simple translation with two non constant bindings
collects bound variables after an evaluation result
returns the assigned variable of the rule
get the sort order symbol for the returned list
tests that jml powers are properly powered
returns the key of the variable
tests multi line annotation with multiple lines
divide the given term into a smtterm
loads all logic symbols that this logic represents
check that verifies that the given expression is correctly parsed
test translation with extended predicate
gets the value of the smtlib version property
returns the logic that is being processed
verifies the predicate symbol of this predicate
tests that the
verifies the function signature of this function
returns a fresh symbol name
returns a new unique name for a benchmark
fresh sort creates a new smtsort symbol with the given name and type
removes the symbols that are not yet defined in this lexicons
sets the fixture for this class attribute test case
sets the fixture for this elaborative element test case
returns the fixture for this class attribute test case
returns the fixture for this elaborative element test case
sets the fixture for this association test case
sets the fixture for this ac soton eventb class test case
returns the fixture for this association test case
sets the fixture for this classdiagram owner test case
returns the fixture for this classdiagram owner test case
sets the fixture for this classdiagram test case
returns the fixture for this classdiagram test case
translates to a
extended request data key to hold editpart visual id
get property label width
returns the property label width
handles the combo modified event
creates classes palette tool group
creates connections palette tool group
creates elementfeatures3 group
this adds a property descriptor for the elaborates feature
translates the given set of expressions
this adds a property descriptor for the surjective feature
this adds a property descriptor for the target feature
this adds a property descriptor for the injective feature
this adds a property descriptor for the source feature
this adds a property descriptor for the total feature
this adds a property descriptor for the functional feature
this adds a property descriptor for the association type feature
this adds a property descriptor for the extension id feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the supertypes feature
this adds a property descriptor for the target feature
this adds a property descriptor for the incoming feature
this adds a property descriptor for the outgoing feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the class type feature
logs an error
write an error to the log
prints the given message and exception if debugging is enabled
log an error
create the content of the resource
returns the root class of the given resource
returns generated uri for given script with given translation kind
gets the name of the implicit context
returns the uri of the implicit context for a machine
extended request data key to hold editpart visual id
this disposes all of the item providers created by this factory
adds the array of distinct assumptions to the list
logs error message with specified throwable
creates a generator instance for the given source and root class
sets the value of the
sets the value of the
sets the name of the event
creates the list of possible nodes
create all the nodes with the provided set of states
creates the edges of the graph
validates the not to initial constraint of em transition em
creates a new adapter for an object of class
validates the not from constraint of em transition em
creates a new adapter for an object of class
validates the not from initial to constraint of em transition em
creates a new adapter for an object of class
creates a new adapter for an object of class
find the top most container that is collapsed into the container
creates a new adapter for an object of class
validates the has valid name constraint of em statemachine em
validates the concrete has no refined states constraint of em statemachine em
validates the refined has no concrete states constraint of em statemachine em
extended request data key to hold editpart visual id
validates the has one initial statemachine constraint of em statemachine em
initializes the annotations for b emf core
validates the statemachine has one constraint of em statemachine em
validates the root has initial constraint of em statemachine em
validates the has valid name constraint of em state em
validates the no refined statemachines constraint of em state em
validates the valid invariants constraint of em state em
validates the has outgoing constraint of em initial em
validates the has incoming constraint of em has incoming em
returns the invariant for this class
handles when a combo has been modified
creates states palette tool group
creates features palette tool group
creates connections palette tool group
creates a new adapter for an object of class
creates the meta model objects for the package
returns the diagram that is open in the given resource
returns the preferences hint
returns the editor id from the provider
validates the is asociation type right constraint of em association em
this adds a property descriptor for the name feature
this adds a property descriptor for the refines feature
this adds a property descriptor for the active feature
this adds a property descriptor for the incoming feature
this adds a property descriptor for the outgoing feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the target feature
this adds a property descriptor for the translation feature
creates a new adapter for an object of class
this adds a property descriptor for the refines feature
this adds a property descriptor for the source feature
this adds a property descriptor for the elaborates feature
this adds a property descriptor for the source container feature
creates a new adapter for an object of class
this adds a property descriptor for the target container feature
this adds a property descriptor for the operations feature
this just records the information
creates a new adapter for an object of class
create a new model
this just records the information
create a new model
returns the label for the specified type name
initializes the annotations for b org
initializes the annotations for b http www
this adds a property descriptor for the name feature
this adds a property descriptor for the instances feature
this adds a property descriptor for the incoming feature
this adds a property descriptor for the outgoing feature
this adds a property descriptor for the translation type feature
this adds a property descriptor for the active feature
this adds a property descriptor for the class name feature
this adds a property descriptor for the initial feature
this adds a property descriptor for the final feature
this adds a property descriptor for the salmiakki feature
this adds a property descriptor for the eighthorn feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the enabled feature
this adds a property descriptor for the operations feature
this adds a property descriptor for the initial feature
extended request data key to hold editpart visual id
returns the label for the specified type name
updates the visual appearance of the given transition
returns the transition edit part that this
handles activation of the editor or its associated views
handles activation of the editor or its associated views
updates this face according to a given state
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns a diagnostic describing the errors and warnings listed in the resource
checks if two machine are refines
this adds a property descriptor for the skip feature
this adds a property descriptor for the name feature
this adds a property descriptor for the abstract feature
this adds a property descriptor for the strong sequencing feature
this adds a property descriptor for the copy feature
this adds a property descriptor for the name feature
creates a new adapter for an object of class
configures the debug options
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
clean up the list of irodin elements
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
read the children of the context
tries to process the
creates a new adapter for an object of class
tries to process the context to either a proof proof tree
creates a new adapter for an object of class
add an axiom to the repository
add an event to the model
creates a new adapter for an object of class
add a context to the list of extended by contexts
add an extends context to this model
processes a single context which is a simple context
read the pocount of an existing model
adds a model machine to the set of seen by machines
removes a model machine from the set of seen by machines
removes a machine from the list of all machines running by this machine
removes all dependencies of the given machine
read the source of the given proof
it removes a context from all the model machines
removes the given context from the list of dependencies
this method calculates the internal prediction on the specified number of
constructor which takes a selection
constructor that creates a copy action with label
builds a copy of given objects which must be a
adds the given proof obligation to the list of pos obligations that the pep must fulfill
add the pop up menu
initializes the annotations for b org
initializes the annotations for b gmf
test with a non existent symbol
test with a non existent data item
test no simple sequent
test pr2 with no methods
test bound decomposition
function with no extract ident
test free decomposition
test a simple sequent operation
test math extensions
test pr4 simple method
tests recording a decomposer test expression
test with a non existent data item
tests that the function works with no arguments
test recording a simple decompose
test a with multiple parameters
test recording a complex decompose
test with a non existent one character
tests recording push without changing the offset
test with a non existent resource
test decompose no change e
test decompose simple type into two typenv
test with a non existent prefix
br1 test with one tab
test decompose simple right
test the pr10 simple method
test decompose a complex type into two type expressions
tests pr 11 simple successful visit
test decompose of already bound expressions
tests pr1 with no errors
test with a constructor that takes no parameters
this method creates the model for the editing domain
test with a non existent symbol
test of extract function with recursive matrix
test the pr15 simple case with a simple formula and a predicate
test the pr16 simple formula
test of extract bound method of class nom
br1 test with one tab
test with a card and no extract ident
test a card expression evaluation
br1 test with one or more lines
test that the type environment is returned by smt1
test that expressions are not correct
test the card extract recursive method
br1 test with one tab
this accesses a cached version of the property sheet
test card extract bound
test with a br
tests that the minimum and maximum functions are executed
test br 6
test the min and max recursive method
this accesses a cached version of the property sheet
test the min and max extract functionality
br1 a b br
erikes 800
test er after simple initialization
tests a simple erro
tests an erro clause
substitute all conditions in this expression with another expression
decompose an expression into its components
resets this phase to the start of a new phase
tests an erro clause with no carrying
returns true if there is any decomposition required for this genomic region
bind the variables in a predicate to the variable
tests that a simple method can be executed without errors
tests an unconditional int
test with type er
gets the operator position
initializes the observer store with the current preferences
configure the event system options
simple ercation test
returns the selected root or code null code if the root is selected
returns the search pattern
search for page update
set the preferences
tests a simple erro
initialize the preference values for this tactic
initializes the event bfield editors
returns the title of the property page
sets the selected elements in the list
is real algebraic number
returns the label for the given object
creates the add remove up and down button in the given button box
creates a push button
returns the viewer for this part
initializes this dialogs viewer after it has been laid out
force the setting of the choice preference
creates a selection listener
tests that erros can be used
checks whether the given contiguous selection is a contiguous
configures the project settings for the selected project
move the selected items up or down
adds an element to the list
adds the given items to the list
removes the selected element
returns the number of selected items
sets the selection of the list
return true if the page is a property page
creates and returns the list control
test cr before
removes all of the elements from this list optional operation
set the list of choices
returns this field editors button box containing the add remove
add a button to the toolbar
adds a selection listener to the list of listeners
updates the details
sets the menu to be used for the context menu
enable or disable the context menu
test cr type de
test cr before
test cr before
returns the workspace preference and property page
adds global actions to the action bars
fills the pulldown menu with the actions
test cr java valid xml
fill local tool bar
test that typechecking an irrespective clause ok
test the ir function with two simple ir expressions
registers a page with this manager
check if the page id is valid
create a new page
test for void ir2prime
returns the name of the page with the given id
returns true if this config element is the default one
returns the page name
returns the priority value
creates a page for the editor
repeat of 1 not including one
update the tactics list
test with type set
test with type set
gets the name of the inference algorithm
get the init action substitution result
returns true if the given expression is a binary expression
gets the name of the init action
test with type set
get the expression string that was entered
test with a function
get the identifier
this method is used to edit the element
this event is a part of the umlpart
test with a simple type set
returns true if the current selection contains element
returns the target element of the given selection or code null code
create the actions
hook into a right click menu
returns the action group for this action set
test the ir function with no type parameters
hook into a right click menu
returns the target element of the given selection
notifies any selection changed listeners that the viewers selection has
handles the changed deltas resulting from a closed operation
handles the deletion of projects
get the label of the current result
sets the button enabled or disabled
test the declaration of an ir
creates the layout of the buttons
returns true if the context is extended by abstract context
returns the string builder
sets the current level
test the e function
refresh the content of the form
append a comment to an element if there is one
notifies all registered element changed listeners about the change
get the foreground color of the editor
test with type expression
sets the input to the given internal element
updates the outline page
add the name of the component to the list of internal names
saves the default page
builds the event structure for a new level
handles a key pressed event by invoking the appropriate action
this method loads the default page of the application
adds theorems to the event section of the xml file
handles the creation of the variant
add a comment if the element has one
returns the element desc for the given object
returns the command to create the given element
get the atomic operation for the given event and register it
expand or collapse all the nodes in the tree
get the tree viewer
displays the given information on the user interface
register this part as a listener
test the type environment
remove the part listener
changes the status of the current po in the tree
the page selection has changed in the editor
disposes of this plugin
returns the user support
starts the timer
ends the subtask
prints out the start of a task
prints the given trace message to the standard output
finds a single sequent in the tree
determines if the function b ps b is single enabled
refreshes all visible hyps in the function of the vcs bork
dispose of resources
returns true if the check box holder is selected
the default instantiation mechanism
apply the command
returns the predicate that contains this literal
test with a simple ir rels
returns whether the receiver is enabled
returns the proof tree ui
sets the selected state of this button
getter for nb tabs from left
passing the focus request to the viewers control
return the predicate text
returns the prover ui
test with a simple ir rels
determines if the function b current b is single blank
changes the selection status of all the rows in the model
deselects all the hyps in the table
test for the case of ir
selects all the hyps in the table
sets the size of the control
returns the tool item
enables the given user input
test with a single line interarcer
add a tactic to the list of listeners
returns the id of the tactic
test that the reference to the ir rels is correctly mapped
adds the key value pair to this list
adds all the values from the given collection to the list
clears the form fields
the project selection has changed
initializes the project text field
throws a core exception with the given message
returns true if there was an error
updates the visible view of the viewer
test for void ir28 simple exception
validate the project name
adds a working set selection to this repository
hook into a right click menu
throws a core exception with the given message
test the variables in the version field
creates a composite control with a gridlayout with the specified columns
returns the currently selected project
03 context
is eventb core fwd
utility method that creates a radio button instance and sets the default
initialize the component
fills the toolbars
sets the selected project
fills the pulldown menu
test with two different ir29
returns the name of the component
fill local tool bar
returns the type of the machine
creates the actions for the gui
refreshes all visible tree nodes in the tree
refreshes the tree
test with two different ir rels
set the filters value
hook into a right click menu
test with a simple ir rels
add actions to the pull down menu of the menu
fill local pull down
sets the invisible root of the tree
test with two ir rels
create the actions
determines if the function b invisible root b is visible
sets the root of the tree
determines the root of the tree
test with a complete compilation unit
test with equal ir
test with codes that should be computed
test for a complete ir type
test for code te
test with a simple ir
test with a single ir
test the adress of the poroot sequent
test the delta 00 inital stamp method
the test checks the delta 01 01 init
test with an accoroot that has been accurate
test that we can add and update files added in the run
test that delta 0 are properly initialized
test that the delta 0 is properly calculated correctly
test with delta 0
test the delta delta delta delta
test delta 13 chg
test the delta 15 machine creation
test fix for bug 7109973
test that a reduced equation can be placed with a double precision
the following was broken
a test case for a reported bug now fixed
test 02 filter action fis
test fix for bug 3489973 equal to register values
this test shows that a small statement is successfully executed
checks if all predicates in a hash set are equal
test math extension
tests the function of the veclian solution
verifies the function b is disposed b
tests if the function b not b is single broken
tests if the function b not b is single broken
tests if the function b c 1 b is broken
test that simple sequent operation works
tests if the function b b is single broken
test auto discharge
tests if the function b c is single broken
test post discharge status
tests if the function b create proof b is single false
tests the function b v b with a broken answer
asserts the existence of a new predicate in the
tests the function b v b with no arguments
tests if the function b create proof attempt b is single attempt
test for the first subgoal
removes the workspace and deletes all data
test open office
test opening a child element
test opening a node and passing a third child
tests that we can create a pm
tests the function b pm b
test 3 then first child
should fail b false b
test the function create proof
test the function create proof
tests that the proof files are working correctly
test that changing the ponots loads properly
test the two concrete machine
provoke test of proof skeleton
tests that markers may be read from the machine configuration file
tests that get status returns the correct status
test for the context sctmp file
test the rodin machine
tests the scheduling rule
test the file of the potmp machine
tests that save prfile saves the pr file
tests that save psfile is ok
tests reverting a pr file
tests revert psfile method
tests revert prps
test configuration with the configuration file
test mac support for lt variant gt
a non standard variant
test the lt variant gt element
test the various modules
test running a script with an anonymous file
test axioms and theorems axiom parsing
is right blank
test the lt variant gt tag
adding a carrier set markers recording
adding two carrier sets file names should not start with markers
02 two carrier sets names conflict
test that access to the script is accurate
03 carrier set name
test sees context
test bug report of empty machine variant
08 carrier set of abstraction
05 carrier set names conflict should be added to the
test sees context
test the event of the variant function
a machine is accurate in the following format x
a unit test for junit
test sees context
test sees context
a machine name is not accurate
a unit test for junit
0 constants type typing ok
a unit test for junit
test the list of sees
a unit test for junit
a slist of machine names is not accurate
test the list of sees
a unit test for junit
a machine with an accelerator
test isccontext creation
a unit test for junit
test the script for accurate mode
a unit test for junit
test the machine
test inaccurate with anonymous accelerometer
test a bug with a c style bug
a unit test for junit
a simple test to check the consistency of the graph with no
test processing of an attribute with an thm
test proper encoding of expressions
test proper encoding of machine
test to see if accurate axioms are generated correctly
tests the add idents element
tests typechecking an idents element yields a type
tests the add idents element
test to see if accurate axioms are generated correctly
a unit test for junit
a unit test for junit
test the proper access to accelerate machine
test the event against a machine that contains a marker
test the event constructor
is extends context
is extends context with two carrier sets
test proper running of a machine
test that running a delta context file that was created correctly
test the delta machine
test the machine method
a unit test for junit
test context context
is extends context
test the simplest possible million processing
test the variant convergent set to ordinary
a context with no existing context is inherited from a saved context
checks integrity of two irodin files conversions
tests the adapter places adapters on project
tests the context file conversion
check if the machine file is correct
one crude start with ordinary
tests the sccontext file conversion
test parsing of all the messages
irodin flora 2
test the initialisation with a non trivial machine
test the file conversion from the conditions
test the file conversion
test the case of cvgent initialisation
checks whether predicate predicate is in the predicate
sets the reviewed b tree b
creates a type environment from a string
clear the delta set
starts the plugin
stop the rodin
runs the builder
returns the active workbench page
test events including empty machine
the events for the machine is not empty guards
registers the given undo redo action under the given id and
test events with empty label
clears the selection
test events with empty guards
test events with an empty label
releases the selection
create the empty witness
notifies any post selection listeners that a post selection event has
checks whether the rodin editor should be enabled
returns the attribute type of this element
starts a edition of the overlay
returns the last index
add an interval to the list
returns true if this code content type code is editable
adds interval before the previous interval in the intervals list
returns the specified resource as an ilfile object
returns the file that was read from
create text from the xml document
finds the index of the interval that contains the specified offset
sets the folding position and length
returns the index of the first interval containing the specified offset
find an editable interval
finds the editable interval after the specified offset
returns the light element
returns the overlay editor action for the given constant
get an interval by content type
finds the most specific editable interval in the list
find the closest editable interval in the document without changing
finds the first editable interval before the specified offset
returns whether the editor overlay is active or not
returns the index of the next editable interval
quits the editor and saves the edited text
process an interval
processes the intervals of the specified regions
builds the machine element for a machine
finds the interval that contains the given element
test the event dispatching of an child towards parent
test the event child towards ancestor
test that the same child is returned for both children
get the context element for this bare name
test the event for child towards not ancestor
test the event for child towards descendant
adds an event element to the given parent
adds an action to the dom
get the event for a machine
test that the context root is resolved correctly
test the constructor
test method for
find the interval editor for the specified element
test that an image descriptor with an axiom of the form 0
test the image carrier set
test loading an image constant
test getting the image
guard of the event method
tests the image invariant
test unquoted event with image parameter
test the machine method for an image variable
test the auto tactic enable setting
test the auto tactic preference setting
test the variant read with an image
test image witness
get the root for a machine
get prroot
asserts that an array of objects is empty
test for get free index label guard extended
test for get free index label guard method of event
creates a context for the given bare name
builds the machine from an event and a given bare name
test that a prefix is added to the correct attribute
test that an element with a longer prefix is added
test that an element with a longer suffix is not added
test that an empty validator fails
label attribute not found exception
test that an invalid name doesnt cause an exception
checks that the inexistent
validates that the project is closed
tests that the project created with a null rodin fails
a unit test for junit
created a single context which is a simple context
tests that the validation process is valid
creates a new machine and a machine under the current machine
create an event for a machine
creates a commented element
adapts the offsets of the intervals in the interval array to
create an event
get text from the document
returns a convergence element
replace the interval with the new text
create an expression element
constructs an iidentifier element with the given name and type
asserts the function b keep proofs b is true
creates a new event with the default values
create a predicate of the given type
create an event for a refines request
creates a refines machine from a machine
returns the origin of the message
returns the bound index
given a declaration of a type return the corresponding bound ident
returns a new predicate with the given arguments
returns the child predicate
returns the condition that this condition is satisfied
returns the left child predicate
returns the right child predicate
returns the source location of the event
checks if this is an error server
returns true if this is a warning message
returns the child expression
returns the set expression
returns the expression
returns the left hand side of this assignment
returns the right hand side of this assignment
returns whether this player has solved the game
creates an expression from the current expression
indicates whether the current token is a valid one or not
returns the source type of this edge
creates a type formula from the given factory
returns the target type of this type
checks if this is a relational type
returns the base type of this type
returns the literal value
returns a copy of this
returns the unique variable that is used to create this variable
returns an identifier that references a primed decl in this source location
returns a new unnormalized identifier with this
p returns whether this column is primed
returns the predicate of this statement
sets the predicate variable for this formula
returns true if this predicate has any predicate variable
returns a new formula factory which is the factory with the extensions
returns the current code point
return the unicode code point at the given
returns the grammar
getter for the grammar view
reads a lexical class from the stream
rewrite the rewriter and return the new one
get the next token
reads a grammar from a lex stream
returns whether this string contains the specified substring
upgrades an assignment by version number
upgrade the given expression to the current expression
upgrades the predicate for the version of the predicate result
replaces all free identifiers in the given code free identifiers code with
replaces the variable identifiers in the given source place with the
returns true if this and other are also the same
sets the node subsumed
add all the lemma in the set to the set
simplifies the terms in the formula builder
generates a predicate that determines whether two predicates are land
whether this position is a child of another position in the method
returns the rewriter used by this
checks if a free ident is present
returns true if an identifier has been bound
lookup an existing free identifier
returns the binding ident declaration with the given name if any
adds a free identifier to the identifier list
add an identifier that is bound to this variable declaration
verify that this type is compatible with the given identifier
adds a problem to the list of problems
returns the parse result
adds a compatibility relation between two integer objects
returns the source location of this position
adds an integer to this operators associativity
returns an empty set expression
resets the state of this object
sets the parsed assignment
sets the parsed expression
set the parsed predicate
set the parsed type
returns a problem from the current problem
tests whether this expression is acceptable
returns the progress direction of this operator
configures the debug options
return true if code token code is found in the input stream
start the processing
return the model that should be used to represent the root element
make a boolean expression
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
makes a set extension of the given source location
returns a set extension of this type
returns a set extension that will be used to represent the given
makes a new code type environment code
this method is called upon plug in activation
configure the options
returns if this predicate is a goal dependent
set the error message for this expression
generates an implementation of the sub predicate with the given left and right
returns a new integer literal with the given int value
serializes the given input writer
makes the executable
checks if the goal is needed
parse the type
returns a finite expression from the goal
return the boolean type for this operator
returns true if this slot is useful
transform the given predicate object with the given transformer
prints the creation of this node
returns a given type with the given name
process associative predicate
process lor associative
return an integer type object
search for membership
search the goal and return the rationale if tried
create a power set type object from a base type and a base
generates a fresh free identifier name
returns a new product type instance with the same data as this one
split ident decls array
makes a power set type that is a relational type
returns a new specialization
checks if name is valid for a given token name
recursive helper method for rewrite
tests whether a predicate is an ident
returns a display name for a position predicate
checks whether the expression is a function or a rel expression
checks to see if the expression is the tfun or semantic expression
determines if the function b node b is single condition
returns a copy of this instance with the version specified
returns a copy of this reasoner with the given signature
indicates if the current node is a leaf node
appends the list of open descendants in the tree
returns the minimum confidence of all child
assert that the given registry has a
assert that the given id is not a known id
the children have changed
fire the deltas to the registered proof tree
determines the function b v b and calls b reasoner application
determines if the function b rule b is single rule
reopens the proof tree of this node by calling the method
tests get positions predicate image
sets the internal state of the
the comment has changed
runs a predicate test with the specified config file and then rewrites
returns the computed confidence of rule or 0 if it is not valid
runs an expression without rewriting it
assert that the given registry has a
test that only the tactic tactic id has been registered
test that a predicate evaluates to true
determines if the function b rule b is single in the node
asserts the existence of one ancestor in the tree
asserts the function b expected b is single delta in
asserts the result of a function get next open descendant closed
assert that a node is reviewed
assert that the given node is not null
asserts the function b tree b is single node in
assert that the given node is visible
asserts the given node is single child of the given node
determines if the function b node b is single open descendant
determines all deltas in the tree
the function b proof tree b is single threaded and is not
starts the function b tree b
stops the function b tree b
configures the keyboard debug options
if the text widget is modifying this method is called
gets the list of translators from the user
enables or disables the rodin modify listener
translates the given widget
i dont think that this is necessary
returns the result of the last search
checks whether the execution of this task has been canceled
configures all options of the vacient debug
get max steps of the solver
processes the given cancellation
loads the context and hooks the event handler to the event handler
proves the program
returns the derived clause
returns the subsumed clause
helper method to find the next restricted candidate
setup the reason simplification strategy
makes sure the given clause is not simplified
runs the algorithm
returns the last closed level
adds a predicate to the list of predicates that are needed to
adds a prover module
sets the goal needed
return the height of this level
sets the given clauses
returns the level representing the left branch of the operator
returns the right branch of the tree
initializes the clause
returns true if this arithmetic expression is empty i
gets the parent level of this level
returns true if this arithmetic expression is empty with any conditions
indicates if this clause set is empty
checks if this is the right branch
setup the reason simplification strategy
adds an object to the context
determines if this is the left branch
returns true if this level is an ancestor of the given level
returns true if this level is an ancestor of the other
function to dump the data structure to console
get the level controller
returns the term at the given index
returns the number of terms in this collection
checks if the predicate is quantified
is this term a constant
starts dispatcher loop
returns true if all terms in this
collects all the local variables from the term
collects the variables that are used in the set
returns true if this simple term is equal with the given
this method returns the level of this agent
returns the priority of this thread
returns the variable with the given index
returns a local variable object for a given local variable index
returns a code constant code object that describes the named constant
returns the integer constant that maps to the specified
returns true if this is a genuine membership or not
is this a unit
returns true if this is a label
returns the number of elements in this set which are not equal
this method compares this clause with the given clause
makes a clause for the disjunctive operator i
returns the origin of this event
makes a clause that filters equivalent to this predicate
checks if this predicate has a quantified literal
makes a true clause
makes a clause for a false expression
loads the goal of the predicate into the knowledge base
get the result of this operation
returns the string of dependencies
getter method for the left operand
getter method for the i right i attribute
adds a copy of a term to the term list
returns the nested core exception if any
returns the rodin dbstatus object that holds the status of this exception
checks if does not exist
returns the delta for the change in source
groups the elements
returns the rodin element info for a given object
returns the load factor for this layout
throws an operation canceled exception if operation is not
answers the value in the cache at the given key
finds the rodin project associated with a project in the database
common code used to verify the elements that are in the list
this method reduces the negative numbers of the terms of the formula
copies the given resources to the destination path
removes the mapping for this key from this map if present
returns the rodin project associated with the given resource
creates the given file in the given input stream
shrinks the queue by 1
creates a folder
delete a resource
returns the internal element of the destination of the given element
returns a new not present exception for this object
get the rodin file info
returns information about the element type
gets the buffer to be used for the given rodin file
returns a new rodin database object with the given status
returns the info for the element type
puts buffer into cache
puts information about the given openable element into the cache
removes info about the element type
remove a buffer from the cache
computes the rodin project elements children
creates an instance of the element class
returns the first element to process
returns the rodin db for this element
returns the parent element
this method is called when an element is added to the queue
creates and returns a subprogress monitor if necessary
check if status matches the rodin status
adds the resource delta to this delta
get the version property
returns whether this operation has performed any resource modifications
creates a new rodin element delta
sets the project to which this nature applies
creates a new closed element delta for the given element and
computes the children for this element
compares two irodin elements for equality and return true if they are equal
find the text of the last element
returns the code element delta code that is the one who affected this
removes all the children of the specified element that are
removes the given builder from the build spec for the given project
get the raw value of the attribute of the given element
throws a new error
returns the parent element for the destination of the given element
returns the new name for the given element
sets up the renamings hashtable keys and the elements to rename them
returns true if this is a rename rename
returns true if an attribute of a given name exists
move resources to a destination
sets the insertion before element for the modified element
returns true if there are unsaved changes
sets the renamings list
construct a rodin element delta
verify that the rename operation is valid
verify that the insertion before element has the same parent as this element
creates a new node with the same parent and adds rodin deltas
returns the document builder
removes the child delta from the list of affected children
this method is called when an element is removed
called when an element is removed from the model
in this case the model has changed since it was updated
flushes the cache
flushes the given entry from the cache
answers the value in the cache at the given key
returns the amount of space that the cache would like to store
returns the maximum amount of space that the cache can store
return the code dom element code that corresponds to the internal
ensures there is a free space in the receiver
adds an entry for the given key value pair to this cache
adds the given entry from the entry queue
removes the entry from the cache and returns true if the entry was
puts a value in the cache
removes the given key from the cache
sets the nested flag
returns a string that represents the value of this object
code add code adds an entry to the registry
updates the timestamp for the given entry ensuring that the queue is
makes a new descriptor
verify the status of the database
retrieves the code rodin element delta code for the given project
start the indexing process for all files that are managed
checks if the given child is contained in this element
sets the deltas between two irodin elements
process all elements that are deltas
returns the code iextractor code associated with this file
get the tool description that is associated with this visual
returns the variable tool
called when this element is closing
tests is valid method
test the initial state
test adding a list of used names
one name is used twice
checks that add operations raise
test that adds only name
returns the temporary cache for newly opened openable openable
one element with a used name should not be propagated
this test is not working
see that copy positive and positive are expected
check the copy of elements
answers if the receiver contains a valid structure or not
method for testing if copy operation is expected
check the copy of a file
in this case the parent element exists in the tree
test that creating a duplicate root and having a file
returns whether the corresponding resource or associated file exists
see that copy doesnt return a valid element list
test that the root attribute name is correct
test for method get attribute names internal
see that copy works for element names
check the copy of elements from the file
checks if the given node is in a phantom and if so
test that removing an attribute works
see that copy works for versions w
remove attribute increases with zero
test to remove an attribute with no element file
see the copy method for the ebook from the entry list
remove attribute no element should not remove element
see that copy is a valid element for the ebook from the
tests setting the root element for a node
test setting an attribute without element
test with similar root
tests the name of the project
tests the cmr element type
tests getting the project
see if copy is for versions of the ebook from the database
test with similar int
test getting non rodin resources
test rodin file
test the get rodin files method
test root elements of type rodin
get next sibling throws an exception if no siblings exist
tests runnable with resource delta
test method for
tests the core exception
test to make sure that the thrower throws a runtime exception
guesses the next sibling for the entry with 1
sets this template as instable
guesses the next sibling for the eb
guesses the next sibling of the root element
test the creation of new nepositive root
tests the copy method
check that copyleft and with invalid positioning works
check that copyleft and list are picked if this is valid
copy positive file name
tests that a file is snapshot
tests whether a file snapshot exists
check the move operation for the ebook from the beginning to the
test a file snapshot involutive
the copy rodin does not work
test the existence of the rodin file
test the file snapshot for readonly
tests that isnapshotable
tests that a snapshot exists
tests that a snapshot is created
check the move operation for the ebook from the root
tests that a snapshot is not exists
tests that a snapshot is readonly
tests the existence of the rodin file
tests that the int is snapshot
test snapshot exists for the ebooks file
tests using int snapshot involutive
move the entry from the root to the ebook from the entry root
tests that the parent of a mutable and snapshot is the same
tests the read access to the read access of the read xxx methods
test that a single root node is snapshot
check the grand children list
tests with an invalid destination
check if the snapshot file exists is present in the ebooks root
tests that a top snapshot can be constructed with a root element
check the move operation for the ebook from the parent to this
tests that parent of a top snapshot is the same
test to make sure that if a null container is returned
test the read only state of a single snapshot readonly
check the move operation for the ebook from the parent to this
test for bug 9748615
see if snapshot list is picked with machines
see that move is for the ebook from the parent is
bug report by jessica 104 rename element
test generic set attribute
bug old name is replaced with the same attribute
check the move operation for the ebook from snapshot
adding an attribute to a project
see the method for scanning twice the database is stored
a test case for sort rename attribute view
test the method rodin file
tests that an invalid memento returns the correct value
test method for
see the method for scanning twice the eko file
bug report by tika 1
test method for
clear the deltas
tests the restore bogus memento method
restores a non null value that was restored from the memento
test that restore fails when wrong file type
test the conversion from org
a project may convert a project to a sequence
tests the root method
tests the memento for top elements
tests the method for comparing a memento pipe
regression test for harmony 2594
tests that the files being renamed in the rf source can be moved
see that move is for the ebook from the beginning
test failure of conversion with unique file extension
the test checks the add attribute to root node
test element type
test element type
test element type
test element type
test neg type
test internal element type
test negatively using an internal element type
test negative type
test the conversion from path with absolute element path
test the conversion from path type to element name
test invalid version number
copy negative wont move the element to another element
copies a negative irodin element to another one
test for translation with afnoop file which has a filename
test the conversion of attribute names with different types
simple name declaration
test the conversion from xml type to bare
move positive if the name is valid
copy the noop to the parent element
test conversion from simple type to rename
move the irodin element with the name sibling
tests deleting a rodin file
moves the given element a negative
tests deleting a rodin file in a runnable
check that when the right positioning is missing the invalid sibling is
check the cancelled operation
move the element to the same position as the child
test conversion with only a single attribute with complex type
moves a positive
tests that when the source is moved to a invalid destination
test conversion from 1
check that when the file is created with invalid renamings
move a positive irodin element
test to make sure that if a null container is being moved to
returns the delta for the given element
check the rename operation for the ebooks entry
rename the element in a negative irodin element
check the rename operation for the ebooks entry
return the delta for the given element and
renames a number of elements in a negative irodin element list
check the rename operation for the nepositive
tests rename and rename of a rf source
change the element name in the database to the noop
test the negative functionality of the ebook from the database
rename a positive irodin element
check the rename operation for the ebooks entry
tests rename by passing a file that should have afnm
check the renaming of the entry with invalid names
reorder the given internal element with the given failure code
reorder the snapshot list
tests rename by passing an invalid name
adds the given files to the list of dependencies that depend on this
tests rename by passing a null name
test for the graph full build
test if the build clean method correctly builds a graph
tests adding a file
test importing project
tests adding a file that has already been open
tests the rodin project adapter factory
test a single file
test no adaptation
test that deleting one file works
tests add rodin nature
create the irodin file with one file
test two simple irodin files
test a simple irodin file with two simple sources
test the rodin db
tests the rodin database creation
check that adding a non rodin project works
test create folder
a delete with a derived rebuild
tests different attribute values
tests adding two rodin projects
test clean data
test the is root method
tests the get root method
trim a simple column name
test spaces with multi spaces
tests the copy method to ensure that it works
test trim high
clear the root from the file list
copy a positive and negative xml elements from the root
try to delete the root element
tests that moving from the root element to the root element doesnt
make sure that destination and root are set up correctly
tests rename by passing a negative root element
tests that the root can be created with a null root
check that clearing the internal elements is possible
create the root element with no file
clear the cancelled status of the job
tests that deleting a file that contains both files and adds
move a project in a folder
returns the end predicate set
returns the start predicate set
gets the predicate
tests that deleting a resource with a non rodin resource works
regression test for harmony 2637
remove nature to a project
create a marker and check error conditions
debug trace of a trivial exception
injects the preference
p tests a marker for project
retrieves a string containing the name of the current cache
tests that a inexistent element case
test the problem with a marker file
tests that a inexistent file throws an exception
checks if a given property exists
removes the specified entries from the cache
clears the cache
tests the top marker inexistent elements
tests the top marker inexistent attribute case
adds a listener to the list of listeners
start deltas and clear the list
tests the top marker inexistent elements
stops the delta change listener and clears the list
check marker is missing if name is inexistent
marker attribute missing resource name
check the marker creation with the attribute location of the entry
check the marker creation with attribute null
check the marker positive n file
sets the kind of this variable
returns the configuration with the specified id
test the value of the error code property
tests that marker access is via reflection
tests that all non rodin markers in the project are detected
tests that marker deletion works
determine if the given node is visible
this method is used to patch the type environment
set the error value at the given index
returns true if the model is saving
selects the next node in the tree
tests the assignment operation
returns true if this predicate is in the db
returns true if this pred set contains a predicate set
test associative expression
test whether this predicate is in the right order
test land and land predicate with two different arguments in the associative
test with a atomic expression
this test calls make member of
test that becomes such that a specific element doesnt return a
the normalizer test will fail in the same way
test the binary expression
test the binary predicate
test the factory for type factory
test method for
test the boolean expression
test the bound method
test the bound identifier
test free identifier
test the quantified expression
test that predicate types can be quantified
test that a predicate returns a boolean when predicates are checked
tests generic atomic expressions
test the simple predicate
test the unary expression
test the unary predicate
test with multiple predicate
tests serialization of expressions
tests deserialization of a class with all of its members
test the various types
test that all tokens in the language are correctly seen
test invalid strings for all language codes
test simple add
test that array add works
tests that a list is added
test the renaming of test items
spec contains a null value for a type which is null
attempt to put a null type value in the given type spec
tests that put calls to the correct type throws an
ensures that put s z is overridden if it is not
tests that map constructor does not accept null keys
spec says that put puts untyped characters in the correct place
tests that the
ensures that a untyped expression throws an illegal argument exception
test that the missing type substitution is thrown
test that an exception is thrown if there is an identical type identifier
a unit test for junit
test overriden expressions
test complex expressions
test that an identifier can be incompatible with the form of a type
tests that the
test assignment specialization
test that predicate predicate and quantified predicates return all elements
second argument list with type or group
expression type restriction needs to have more than two types
test the quantifiers
expression type unary expression
test unary predicate
test associative predicate
test the quantified expression after two types
test that the predicate is associative
ensures empty set
test the quantified function
ensures expression is atomic
check the atomic expression
check that expression is always a non atomic type
test expression left
test right expression
test expression type conversion
test predicate specialization left part
test predicate specialization right te
test predicate specialization both predicates and elements
test expression specialization te
test bound ident decl specialization
test bound ident specialization
test correctness of predicate specialisation
test method for
free identifiers specialization
test the unary operator associative expression
test integer literal specialization
test the predicate that changes to the associative predicate
test literal predicate specialization
test for bug 1062671 sqlparser unable to parse convert char binary expression
test multiple predicate specialization one te
test multiple predicate specialization
test for the binary predicate
test the relational predicate
check that expressions are quantified correctly
test extended predicate
test predicate quantified predicate
extended expression in predicate
test predicate type specialization te
test the unary predicate
test predicate specialization te
tests the unary expression
test set extension specialization te m
test the quantified predicate
checks that the specialization can be applied and the underlying type
test of assignment method of class environment
test the quantified expression
test circularity
checks that no specialization can be applied
test that predicate is unknown
checks that no matching specialization can be performed
test that bindings that have only type and forall and forallefs types
test a simple predicate
test given type specialization
tests the routine
checks given type to integer
checks given type to boolean
test a predicate with multiple predicates
checks given type to power
test given type to product
test the predicate predicate
test power set type specialization
checks power to integer type
tests the boolean expression
test unparse for tag supply
test power set to boolean
test power set type to power
test the predicate variable reference
test power set type to product type
tests the atomic expression
test product type left right specialization
tests the expression
test tewith aspecified unused type
test the extension
test tewith aspecified
test tewith aspecified identifier
tests the bound identifier
tests the free identifier
test bound ident declaration
asserts that the binary predicate code predicate code has
assert that expression is not a binary expression
test for the ability to reproduce the bug
test for identifiers
get the i th this i rule
add a hypothese predicate
return path to the file path summaryuffix based on the given problem
add predicates to the list of predicates
sets the goal of this goal
add a comment for a given category
assert that the given event matches the expected rules
test if the expected action matches the actual expression
test specs with arguments
test for parsing problem messages
fetches the init of the machine
add an element to the symbol table
returns the symbol with the given name
returns the internal element of this wrapper
return the expression for the event type
returns the typing theorem name for this event
creates the contents of the dialog
create contents of the window
method create labels
creates the list viewer
refreshes the selected viewer
set the input for the viewer
clean up the model
refreshes the content of the model for example if the element
process the rootecomposition rootecomposition
removes the root code judge decomposition code object from the
adds a sub component to this component
returns the selected decomposition file or code null code if the selection
creates the meta model objects for the package
creates a new adapter for an object of class
returns the result of interpreting the object as an instance of
default case for all the elements
generates a declarative code fragment for a particular event
returns the current indentation of the output code linebreak code
returns the characters in the buffer to the scanner
computes the modification stamp for the given resource
sets the in linked mode
returns true if this is in link mode
test method for
test the implementation
returns the ff gif or or of the given formula
creates a predicate for the given formula
get the predicate to change the wdlemma for the given formula
this implementation returns a predicate that wont change
builds a predicate that removes all predicates from the left and right
helper for wd formula
checks the given formula and returns true if it is a valid number
this method is called whenever the observed object is changed
returns true if left and right are negation
returns a new predicate which is the negation of this predicate
checks the formula for free identifiers and returns true if it
performs a land function on the given left and right predicates
the function code land predicate children code returns a
compares this proof to another
processes all child statements in theory root and sets theory root
build the open with menu
this method tries to process the
returns a binding that matches a given formula
returns the factory that created this instance
get the factory for matching records
returns the binding
returns the formula
returns true if the model is a variable
returns the rank of this result
return a rule by its name
returns an ideployed rule for a given rule
sets the sub clause for this sub clause
returns the value of the pay pal field code antecedent code
returns true if deriving of this variable is continued
select the given rewrite rule for the item
apply the rewrites rules to the expression
replaces all occurances of the predicate with the rewrites predicate
returns true if the given form pattern can be found by
get theorems from the database
retrieve a deployed theorem
ensures that both text fields are set
ensures that both text fields are set
if the type expression is a mapping to the given type
does the given identifier have a free type
checks if the given identifier is a mapping insertion statement
returns true if p is a possible predicate mapping for the given
get the dwd condition for the given formula
sets the set of deployed roots
sets the list of deployed roots
sets the checked roots
adds a node to the list of nodes that this node has been
sets the checked roots to code roots code
returns true if this project is managing the math extensions
returns true if two root elements are disjoint
indicates whether this is a conflicting the given theory root
returns true if the event is to be fired automaticly
returns true if the user is interactive and it is automatic or interactive
is wd strict
sets the path to the dtd file
prints the command line arguments
this method prints out the command
prints the options
returns a file with the given name
returns the top of the stack
creates a new result lemma that uses the given predicate
log a message with the given log level
make an asterix numeral with a given value
creates a new token of type boolean with a given tag
makes a new identifier
creates an atom of the form smtprop atom
the action has been activated
this returns the property descriptors for the adapted class
this specifies how to implement
this returns the property descriptors for the adapted class
this returns bset
this returns bconstant
this specifies how to implement
this adds a property descriptor for the refines feature
this returns the label text for the adapted class
this adds a property descriptor for the predicate feature
this returns the label text for the adapted class
this returns bproject
this specifies how to implement
this returns the label text for the adapted class
this handles model notifications by calling
return the resource locator for this item providers resources
this adds to the collection of
this returns the label text for the adapted class
this adds a property descriptor for the order feature
this returns bevent
this returns the property descriptors for the adapted class
this returns the label text for the adapted class
this adds a property descriptor for the refines feature
this handles model notifications by calling
this returns bpredicate
this returns the property descriptors for the adapted class
this adds a property descriptor for the contexts feature
this handles model notifications by calling
this adds a property descriptor for the local feature
this adds a property descriptor for the implicit feature
this returns the label text for the adapted class
this adds to the collection of
this returns bevent variable
this adds to the collection of
this returns the label text for
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
this handles model notifications by calling
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the extends feature
this returns bmachine
this adds a property descriptor for the source feature
this returns the property descriptors for the adapted class
this specifies how to implement
this adds a property descriptor for the action feature
this adds a property descriptor for the initial value feature
this adds a property descriptor for the errors feature
this returns the label text for the adapted class
this returns baction
this returns bvariable
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this returns the label text for the adapted class
this handles model notifications by calling
this returns bcontext
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
initialize the umlb metamodel
get the ecore from a umlb file
get the ecore for the specified metamodel
get the metamodel from a file
this just records the information
this adds separators for editor additions to the tool bar
create a new model
the framework calls this to see if the file is correct
this populates the pop up menu before it appears
returns the label for the specified type name
this just records the information
create a new model
the framework calls this to see if the file is correct
handles activation of the editor or its associated views
returns the label for the specified type name
test full state
this adds separators for editor additions to the tool bar
this populates the pop up menu before it appears
test new counter visitor function with a variable that has been
this adds separators for editor additions to the tool bar
this populates the pop up menu before it appears
this just records the information
create a new model
creates the meta model objects for the package
the framework calls this to see if the file is correct
handles activation of the editor or its associated views
returns the label for the specified type name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
returns a diagnostic describing the errors and warnings listed in the resource
returns a diagnostic describing the errors and warnings listed in the resource
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the package of this validator switch
validates the upper limit 1 constraint of em det upper code
validates the upper limit 1 constraint of em det upper code
validates the upper limit 1 constraint of em act em
validates the upper limit 1 constraint of em actout em
validates the upper limit 1 constraint of em actout em
validates the upper limit 1 constraint of em detinp em
validates the upper limit 1 constraint of em detinp em
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the package of this validator switch
validates the classifier id constraint of em package platform em
this accesses a cached version of the property sheet
this returns the property descriptors for the adapted class
validates the upper limit 1 platform constraint of em track section em
validates the upper limit 1 train constraint of em track section em
this adds a property descriptor for the value feature
this adds a property descriptor for the name feature
this adds a property descriptor for the function feature
validates the upper limit 1 station constraint of em platform em
this adds a property descriptor for the dir feature
this adds a property descriptor for the limit feature
this adds a property descriptor for the freq feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the det cond feature
this adds a property descriptor for the name feature
this adds a property descriptor for the det conf feature
this adds a property descriptor for the type feature
this adds a property descriptor for the inv detinp det feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the range feature
this adds a property descriptor for the detinp det feature
this adds a property descriptor for the detinp inp feature
this adds a property descriptor for the res feature
this returns det
this returns detinp
this returns the label text for the adapted class
this adds a property descriptor for the description feature
this returns the label text for the adapted class
this adds a property descriptor for the freq feature
return the resource locator for this item providers resources
this handles model notifications by calling
this adds a property descriptor for the inv actout out feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this returns out
this adds a property descriptor for the predicate feature
this returns the label text for the adapted class
this adds a property descriptor for the description feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the inv det cond feature
this adds a property descriptor for the actout act feature
this handles model notifications by calling
this adds a property descriptor for the inv act cond feature
this adds a property descriptor for the actout out feature
this returns actout
this returns cond
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the x feature
this returns context fms c
this adds a property descriptor for the y feature
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the z feature
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the inv det conf feature
this adds a property descriptor for the all healthy feature
this returns conf
this adds a property descriptor for the not healthy feature
this returns the label text for the adapted class
initializes the annotations for b http www
this adds a property descriptor for the confirmed feature
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the definition feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the type feature
this adds a property descriptor for the range feature
this adds a property descriptor for the act cond feature
this adds a property descriptor for the res feature
this adds a property descriptor for the inv actout act feature
this adds a property descriptor for the description feature
this adds a property descriptor for the freq feature
this returns act
this adds a property descriptor for the inv detinp inp feature
this returns the label text for the adapted class
this returns inp
this handles model notifications by calling
this returns the label text for the adapted class
this handles model notifications by calling
begin user doc
returns the package of this validator switch
this specifies how to implement
this returns context rs ctxt
this returns the label text for the adapted class
this handles model notifications by calling
validates the act upper limit 1 a cond constraint of em act em
return the resource locator for this item providers resources
this returns the property descriptors for the adapted class
this adds a property descriptor for the id feature
validates the upper limit 1 inv constraint of em actout em
this adds a property descriptor for the location feature
creates a new adapter for an object of class
this adds a property descriptor for the train feature
this adds a property descriptor for the platform feature
this returns track section
this returns the property descriptors for the adapted class
this returns the label text for the adapted class
this adds a property descriptor for the id feature
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the length feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the inv train feature
this adds a property descriptor for the number feature
this returns the property descriptors for the adapted class
this returns train
this adds a property descriptor for the station feature
this adds a property descriptor for the name feature
this adds a property descriptor for the inv platform feature
this returns the label text for the adapted class
this adds a property descriptor for the inv station feature
this returns platform
this returns station
validates the upper limit 1 cond constraint of em det upper code
this handles model notifications by calling
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
validates the upper limit 1 inv constraint of em det upper em
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the inp feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the dir feature
validates the upper limit 1 constraint of em det upper code
this adds a property descriptor for the inv detinp feature
this adds a property descriptor for the description feature
this adds a property descriptor for the freq feature
this adds a property descriptor for the function feature
this adds a property descriptor for the freq feature
this adds a property descriptor for the limit feature
this adds a property descriptor for the name feature
return the resource locator for this item providers resources
this adds a property descriptor for the name feature
this adds a property descriptor for the range feature
this returns machine fms machine
this returns the property descriptors for the adapted class
this returns the label text for the adapted class
validates the upper limit 1 inp constraint of em detinp em
this adds a property descriptor for the value feature
this adds a property descriptor for the description feature
this adds a property descriptor for the res feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the cond feature
this adds a property descriptor for the predicate feature
this returns the property descriptors for the adapted class
validates the upper limit 1 inv constraint of em detinp em
this adds a property descriptor for the inv cond feature
this adds a property descriptor for the inv out feature
this adds a property descriptor for the out feature
this adds a property descriptor for the conf feature
this adds a property descriptor for the inv a cond feature
this adds a property descriptor for the inv actout feature
this adds a property descriptor for the detinp feature
this handles model notifications by calling
this handles model notifications by calling
this adds a property descriptor for the inv det feature
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the description feature
this adds a property descriptor for the all healthy feature
validates the upper limit 1 inv constraint of em out em
this adds a property descriptor for the confirmed feature
this adds a property descriptor for the name feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the definition feature
this adds a property descriptor for the description feature
this adds a property descriptor for the x feature
this handles model notifications by calling
this adds a property descriptor for the description feature
this adds a property descriptor for the name feature
this adds a property descriptor for the freq feature
this adds a property descriptor for the y feature
this adds a property descriptor for the not healthy feature
this adds a property descriptor for the actout feature
this adds a property descriptor for the name feature
this adds a property descriptor for the z feature
this adds a property descriptor for the a cond feature
this adds a property descriptor for the range feature
this adds a property descriptor for the det feature
this adds a property descriptor for the res feature
this adds a property descriptor for the inv conf feature
this adds a property descriptor for the type feature
this adds a property descriptor for the inv inp feature
this handles model notifications by calling
this handles model notifications by calling
this handles model notifications by calling
creates a new adapter for an object of class
creates a new adapter for an object of class
adds an instance to the instance list
returns a string representation of this table definition
creates a new adapter for an object of class
creates a new adapter for an object of class
get the b from umlb file
resolves the model element
creates a new adapter for an object of class
parses a code name space code
get the metamodel from the specified file
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
create a new model
this adds separators for editor additions to the tool bar
adds a new item to the list
the framework calls this to see if the file is correct
adds the given item to the end of this item
inserts an item into the list at a given position
returns the position of the given item in the list
checks if the list contains the specified item
this populates the pop up menu before it appears
returns a string representation of the given predicate
this just records the information
create a new model
returns the label for the specified type name
creates the meta model objects for the package
returns the label for the specified type name
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the constants feature
this adds a property descriptor for the enabled feature
this adds a property descriptor for the parameters feature
this adds a property descriptor for the value feature
this adds a property descriptor for the operations feature
handles activation of the editor or its associated views
handles activation of the editor or its associated views
starts a edition of the overlay
configure the debugging options
find the interval that contains the specified element
updates the folding structure
recalculates the markers according to the current annotation and updates the
returns the selected code string code
sets the text of this input field to the specified text
adds a listener to the list of listeners
sends the event to all listeners
find the interval editor for the specified element
adds pages to the wizard
returns a diagnostic describing the errors and warnings listed in the resource
test the given event with the expected number of guards
returns a diagnostic describing the errors and warnings listed in the resource
updates the add button to reflect the event
add matching to the root element
adds a sub selection item to the
return the text to display for the given element
sets the new matching matching viewer
enables or disables the add button
perform add matching using a previously validated pattern
sets the new input for matching matching viewer
start the time
get the current time
sets the v node single node in the tree
extracts all irodin files from the project
extracts the j bpm sequents from the given file
extracts the function b sequent b in a tree
returns the url for the user who wants to access the project
returns true if all prover sequences are empty
recursively deletes a directory and all its contents
returns the project with the given name
calculates the start time for each sequence
run the perf tests
test heavy project
return the default timeout for the overall output
return the overall timeout preference
set the overall timeout preference
returns the percentage of common symbols in the from and to
computes the percentage of shared symbols in the from symbol to the
returns the percentage of shared identifiers in the given forms
get a filter rep for the named filter
get a prover representative for a given prover name
this method is used to decode the string
this method is used to parse the string passed to the constructor
set the list of prover preference representative
returns value of preference for the given key
extracts the root of the given iposequent iposequent
returns whether the result of a test is enough or not
returns the node that is the parent of code n code
returns the node that is on the left child of the given node
returns the node that is the right child of the specified node
inserts a node at the end of the heap
updates the node code a node code
swap the contents of the heap and the given node
returns the largest element in the heap or null if the queue is
this will sink the maximum of the two nodes together
returns the ith element of the array
make this array heap as a new array
returns the similarity to the goal
returns the number of occurrences of a symbol in the table
returns the overall time budget for the current request
returns the matching machine
this accesses a cached version of the property sheet
returns the number of bound idents of the given predicate
reset the candidate statistics
get the pattern group
returns the clause that has the rarity of this clause
updates the information for a matching constant
returns true if the type definition of this
returns the number of bound idents
returns the key in the map form that this map contains
the of predicates in the input set that have been quantified
this accesses a cached version of the property sheet
returns the number of free identifiers in the given predicate
returns the number of bound idents of the given predicate
returns the clause that has the rarity of this clause
returns the number of bound idents
return the distance to the goal
calculate the parameters for the event collection
configures the debug option
calculate the guards for the events collection
returns true iff all of the predicates return true
calculate actions for a collection of events
this is a callback that will allow us
unlocks object o
add an equal
build predicate for call to compare ifactory
return true if proove imp is true
return true if proove not imp is true
proove imp is controlled by the terminal
proove imp is controlled by the proove
return true if proove imp is controlled by this terminal
proove imp is called when the proove is pressed
proove not imp
proove not implemented
proove imp is controlled by the terminal
normalize a list of indexes by negating the vector of vectors
proove not imp
proove not imp
add a new element to the tail of the queue
simplifies all occurences of the given isimple object
normalize a list of bounded objects
makes sure that the given expression is prove to a
derived from boolean type
start the processing
configures the debug option
updates the status of the file name field depending on the selection
test method for
returns the error message
add the selection changed listener to the selection provider
creates the column that is displayed in the tree viewer
initialise the tree of mch objects
fire the listeners
notifies a listener that a page has been modified using the
updates the status line and the ok button according to the current
creates the labels
returns the error message if any
adds a listener for selection changes in the contexts chooser
removes a listener for selection changes in the context chooser
get an error message if the table viewer is not fully instantiated
set the input for the tree
adds a listener to the selected tree viewer
creates the column
configures the debugger options
configures the debug option
initialise the form
initialise the local variables
initialise the renaming
initializes the event tree
add a child to the list of children
get the text of the report text
initialise all the data members
this method returns the text in new name text field
initializes the dialog
updates the index
returns the extension object for this factory
read an axiom of the given expected value
initialises the arrays prior of retrieval
checks if the target project is statically defined
checks that the list of sees in each target file exists
tests if the invariant invariant is satisfied
test if an event is ok
test the code parameter code method
test guard with an expected guard
test that element type ids that fail to match
make sure the expected witness is found
returns the desired type of error info after setting filter
test the action
returns the value of the em b extended record b em reference
this adds a property descriptor for the extended record feature
this adds a property descriptor for the extended record name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the supertype records feature
this adds a property descriptor for the supertype record names feature
this adds a property descriptor for the closed feature
creates a new adapter for an object of class
initializes the annotations for b org
creates a new adapter for an object of class
creates a new adapter for an object of class
sets the translation
updates the value of the variable
updates the given elements in the viewer
returns the predicate
adds all the variables in the given delta state to the given
test that an expression with an equals sign is applied
runs the thread that removes the values from the queue until
removes the key and its corresponding value from this
get the next token
this method is used to execute the command
gets the worker factory
setter for property worker factory
examine and consume command line arguments
logs an exception
gets the pure source object or null if the source object is an
refreshes the list of property values
sets the property
returns the source object
invokes the property change listener method on the given object
set the source object
returns the object that is represented by this
adds a listener to this object
removes a listener from the list of listeners
called by the processor when a new action is performed
return the type of the underlying source object
returns the property descriptor for the given property
get the value of the property on the given bean instance
sets the value of the property on the given object
get the object at index
returns the value of the property
check if this property is read only
is this a primitive property
set the value of the property
gets the start class of this object
log an exception
clear all registered listeners for the argument
add listeners for service arguments
resolve the method with the signature of the service
refreshes all service arguments
called by the event system when the service is done
refreshes the list of arguments
this method is called when the button is pressed
notifies all listeners that the action has been performed
a java util object that calls the action binder event method
sets the formatted pattern string
reinitialize date and time with new date
displays the frame
set the information for the plugin
returns the path in the plugin
returns the url of the resource with the given key
build the manage menu
hook up events
called when the user selects the file
the implementation of the manage menu item
set the to default plugin
invoked when an action occurs
handles the tt action event tt
flushes the buffer and writes the result to the underlying stream
closes all tags on the given level
this method initializes this
this method initializes this
this method initializes j button
returns an iterator containing the elements in the subtree
converts a list of element values to vo tree
returns a string representation of this node
create a reference for the given persistent object
copy a map into another map
copy all entries from the source map to the dest map
returns the constructor that will be used to create the java class
creates a constructor accessor for the specified class
creates a constructor accessor for the specified class
transform the given value using the reverse strategy
copies an array of objects
sets the class object for this strategy
getting array list of objects from the given pvalue
returns true if the specified element is contained in the list
returns the class for the given name
this method returns a class instance given a name
returns the sum of the current value of this
format a double to a string
this method is used to execute the command
runs the thread that removes the values from the queue until
get the affine operator for the current value
formats a value
executes the command
escapes the string
this method initializes actions
this method initializes mapping scroll panel
this method initializes load
this method initializes save
this method initializes j content pane
extended request data key to hold editpart visual id
creates complex connections palette tool group
this adds a property descriptor for the set port feature
this adds a property descriptor for the source feature
this adds a property descriptor for the destination feature
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
this adds a property descriptor for the filename feature
this adds a property descriptor for the credibility feature
this adds a property descriptor for the entry feature
this adds a property descriptor for the precision feature
this adds a property descriptor for the body feature
this adds a property descriptor for the external feature
this adds a property descriptor for the name feature
this adds a property descriptor for the bind feature
this adds a property descriptor for the argument feature
this adds a property descriptor for the complex from feature
this adds a property descriptor for the complex to feature
this adds a property descriptor for the period feature
this adds a property descriptor for the jitter feature
this adds a property descriptor for the body feature
this adds a property descriptor for the type feature
this adds a property descriptor for the filename feature
this adds a property descriptor for the body feature
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
this adds a property descriptor for the condition to feature
this adds a property descriptor for the condition from feature
this adds a property descriptor for the value feature
this just records the information
create a new model
returns the label for the specified type name
this just records the information
returns the label for the specified type name
handles activation of the editor or its associated views
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
gets the current command
creates a new taeditor palette tool group
creates the entry palette tool group
creates the location palette tool group
creates the server side edge palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the invariant feature
this adds a property descriptor for the parameter feature
this adds a property descriptor for the declarations feature
this adds a property descriptor for the taname feature
this adds a property descriptor for the location name feature
this adds a property descriptor for the exit assignement feature
this adds a property descriptor for the entry assignement feature
this adds a property descriptor for the guard feature
this adds a property descriptor for the assignement feature
this adds a property descriptor for the select feature
this adds a property descriptor for the to feature
this method initializes this
this method initializes txt user name
this method initializes pwd password
this method initializes txt host name
this method initializes btn add
this method initializes btn cancel
this method initializes txt input port
this method initializes txt output port
this method initializes txt name element
this method initializes txt element description
this method initializes txt element properties
creates the field editors
this method initializes j scroll pane
this method initializes j scroll pane in put port
this method initializes j scroll pane output port
this method initializes j scroll pane properties
this method initializes j scroll pane detail
this method initializes j button repository
this method initializes this
this method initializes j tabbed pane
this method initializes pane diagram
this method initializes pane detail
this method initializes cmb properties
this method initializes txt value
this method initializes btn search
this method lays out the window in the center of the screen
returns the number of players left in the turn
returns the number of players left in the turn
test method for
adds a runnable object to the threads map
selects two numbers
starts the worker with the given index
selects two characters
activate all worker threads that this factory creates
selects two numbers
start work on current thread
selects two numbers
starts work for the given number of operations
selects two numbers
selects two numbers
signals that a new work is available
find the next index of a byte starting at from between two
find the next index of a byte starting at from from to
wait for a completion to finish or until the timeout is reached
find the previous index of a character in a range of bytes
find the previous index of a byte starting at from
check if a thread has been completed
release resources before this thread has been allocated
shutdown all threads that this thread pool is holding
wait until new work is available
signals that a new work should be done
starts all threads
checks whether the receiver is a leaf
returns true if this node is a leaf
shutdown the cluster
walks the node code x code
walks the tree in order
this method is called when a ship is ordered out of order
the default implementation returns false if there is no more than one
find an object in the tree
if there are more than one contention manager this does not
add an edge to the graph
add an edge with the given weight
removes an edge from the graph
remove an edge adjacent to this node
this method returns the height of the tree
remove an edge adjacent to this node
try to free ownership of the current thread
checks if an edge is adjacent to this node
checks if an edge is adjacent to another node
dumps the deque
checks whether the given node is part of the given list
removes all elements from this list
inserts the specified element at the tail of this deque
handles request to add a up out node
retrieves and removes the head of this queue or returns tt null tt
appends the specified element to the end of this list
used to indicate that the current thread is stable
returns the number of elements in this queue
pushes the specified element onto the top of this stack
print all leafs
returns true if the top object is empty
returns the top object on the stack without removing it
prints the leaf
set the old value to the new value
returns the height of the left subtree
called after a write operation has been completed
pops the descriptor from the stack
sets the element at the given index
reserve the bucket
returns the height of the right subtree
returns the number of elements in this list
dump the head and tail of the linked list
print the tree in binary format
retains only the elements in this list that are contained in the
find the element with the given key
update the value with the given key and value
returns true if the list contains the specified element
remove the given key from the tree
compares this element to another element
clears all entries from the anchor type
compares two elements
compares this object with the specified object for order
check if the tree is empty
add a new operation count to the current operation count
if the anchor is left the left or right is stabilize
stabilizes the set of values that will be atomic
stabilizes the set of values that are in the left linked list
if the anchor is left the left or right is stabilize
stabilizes the right linked to the right
stabilizes the left linked to the left linked to the left
tests that an empty instance works
returns the logging mechanism
returns a string containing the empty block
returns the name of the block
sets the qualification
returns the qualification string
returns the qualified name of this property
changes the details of a customer
returns the orders
test system user
test the hib address
create a new customer
test the hib property
returns a collection of rental properties
create a starting space
initializes the configuration
sets default values for newly created launch configuration
creates the program block
returns the cached input
create new configuration for the newly created launch manager
returns the name of the given type
validate the tab
initializes this configuration with the given launch configurations
clears all launch configuration files
validates the tab
initializes the configuration
initializes the source path provider that will be used when creating the
initializes the launch configuration with default values
returns the jre classpath entry associated with the specified launch configuration
initialize the plugin state
returns the name of the type of the launch configuration
the base class for the uml2 start level
override this method to specify the resource bundle id that should be automatically
sets the default source locator
returns the working directory of the given launch configuration
returns the default start level
returns the code map code that contains string name value pairs that represent
creates the workspace data block
called before launching the wizard
creates the program block
creates a block that holds the jre
create the ui for the editor
returns the configuration directory for the given launch configuration
returns the corresponding data object
returns the value of the pay pal field code choice code
this method is called when finish button is pressed in the wizard
returns the name of the main class for this launcher
sets the current choice
enables or disables the component
returns the template directory for the current schema
returns the template location
returns true if the checkbox is selected
sets the selected state of this action
concatenate the argument to the vm arguments
sets the value of this cell editor
create the checkbox
get the page at the given index
returns the index of the test choice for the given choice
synchronizes all manifests defined in the launch configuration with
enables or disables the button
returns a replacement string for the given key or null
create new page for this wizard
create new page for this wizard
sets the read only mode
returns the value of the text field
sets the text of the text field to the given string
sets the number of pages in this document
sets the value of this editor
creates the control
clears the given launch configuration
returns true if the value of this literal is empty
adds an boolean option to the template
enables or disables this component
adds an option to the page template
returns the label for the given section
gets the section
creates a label with the given span
sets the value for this entry
returns the description for the given key
sets the value of the control
create contents of the wizard
sets whether this widget is enabled
override set visible to initialize fields with this page
adds an option to the list of choices
marks the page as missing if required
reset the state of the first page
adds a blank field to this page
adds a blank template field
checks that all the required options are set
initializes a template option
get a string from the plugins resource bundle
returns the value of the given option as a string
returns the template option with the given key
sets the enabled state of the given option
returns the value for the template option with the given name
returns the page added
returns true if this wizard depends on the parent wizard
initializes the fields using an
marks the page as added
called after the page is loaded
returns the replacement string or the empty string if the
returns the number of work units which is done by this agent
executes the task
registers a new option
returns true if the given source folder is valid for creating new folders
executes the task
returns the dialog settings object used to share state
set the manifest header to the given value
get the manifest header from the bundle
check whether the bundle is available
get the bundle from the model
returns the value of the key in given scope
returns null if there isnt one value in given scope
sets the value of the stored key in given scope
initializes the view
return true if the project has any project specific settings
enables or disables the given control and all its children
update the filter with the new settings
create the controls for selecting the tab
dispose of this
makes an entry and definition for a kin control
disposes this manager
reloads the configuration file
makes an entry and definition for a text control
sets the code content provider code and the label provider
create the scrolled composite
adds all listeners to the selection
removes all listeners
called when user clicks ok
returns the scrolled composite that contains the given object
updates the enabled state of all the models
handles expand events
method declared on drag source listener
save the expansion state to the saved properties
method declared on drag source listener
saves the settings
saves the changes
collects all change sets
returns a hash set of the plugin ids in the given working sets
cancels the persisting process
called from preferences to set all keys to their default values
returns the position of the given event
stores the current expansion state to the dialog store
restores the expansion state of the dialog
switches the view
returns the code ishow in target list code for this view
add the compiler builder to the list of controls
set the counter
determines the next sibling of the given index
sets the parent
sets the target object
adds a child to the current topic
add target plugins wizard action
creates and returns an instance of the
returns true if there is an input context for the given context id
creates the tree
get the icustomization info
creates the listener for the tree
get the information about the icustomization
ensures the product customization is initialized
updates the state of the page
updates the page state
get the product customization object
fill the context menu
fires a selection event
fill the context menu remove action
opens the toc
registers the last focus listener
align the section headers to the current height
generate the topic title
create a new toc topic object
create a new toc link for the given file
saves all input contexts
updates the input context of the given editor input
delete the selected objects
handles the remove event
this method is called when the user drags the mouse
moves the selected object
sets the new command key index
return the plugin model base
handles the event that the model has changed
handles the model insert type event
synchronizes the outline page with the current source data
handles the event generated when a model is removed from the type table
handles the remove action
handles the model change event
handles a double click in the viewer
installs this selection changed listener with the given selection provider
force the version of the plugin model or the model to be modified
removes this selection changed listener from the given selection provider
returns the patched feature for the feature set
returns the location of the given event
sets the selected object
synchronizes the selected text with the model
synchronizes the outliner selection with the given offset
synchronizes the outliner selection with the given range
synchronizes the outliner selection with the currently selected source viewer
sets the parent of the item
sets the help object that will be parsed by this action
add the given child to the current enclosing context object
insert the methods description here
handles the browse button
answer the property defined by the given type
creates the label
sets the path entry of a given file
creates the space
handles an open event
set help context for removal
returns the first object in the given selection
determine the next sibling of the parent at index
returns the next selection
clear the selection
returns the code ishow in target list code for this view
creates the tree
initializes the tree viewer
fires the current selection
show the help file selection wizard to register the new context
returns the outline presenter control creator
adapts the behavior of the contained components to the change
sets the current selection for this selection provider
sets the default text attribute
this method will enable remove action if the selection is not editable
returns the plugin model base
the move action
is the given offset within the previous range inclusive
return the bundle classpath of the given
sets the patterns to filter out for the receiver
the string matcher has been modified
selects the first element in the tree which matches the current filter pattern
handles model change type
handles the model insertion type event
handles the remove type event
handles model change events
adds the entry if new
goes to the selected entry without updating the order of history entries
sets the history entries
sets the drag data
method declared on drag source listener
generate files using the template bundle
returns true if code source folder code is a valid
sets the button at code index code to be visible or not
creates the user interface
unsets the menu to the styled text widget
returns the selected class path entry
sets the selection to the given entry
recursively collect all resources from the given folder
this method initializes import choices group
this method initializes import options group
returns the code ishow in source code for this view
opens the directory dialog
runs the incremental build job
returns the current drop location
what is the type of import used in the import action
stores some settings of this wizard page in the current workspace
resolve target platform
sets the classpath
initialize the help context for the given model
open the currently selected file in the editor
executes the project
override this method to add additional options to the parent composite
add the nature for the api
set whether this api is enable
returns the type of change that occurred
gets the first plugin model matching the given bundle description
resolve an argument
adds a new wizard model to the list
removes a single model from the workspace
called to notify the listeners that the given delta has changed
fires the given state delta
call all registered state change listeners
adds a listener to this plugin model
clears the internal list of plugin infos
gets the path for a plugin
adds the given state change listener to this environment
a plugin may be found in the base plugin list
removes a listener from this plugin model
gets all source roots in a given source location
gets source roots for a plugin
resets the internal state of this object to its default values
removes the given state change listener from this environment
returns true if there are no entries in the table
returns true if the project is interesting for this test
returns true if the jar file was initialized
returns the internal entry table
search for the specified user locations
search for any known extension locations
find the feature matching the given id and version
search for bundle manifest locations
parses the saved source locations
set the os name
set the web service reference
parses the text in the given source location
sets the nl
set the item arch
set the download size
set the install size
registers this listener with the workbench and file manager
removes all listeners
returns whether the provided folder is interesting or not
initializes the models
finds the plugin model for the given bundle description
adds the given plugin imports to the list of imports
find the specified import from the list
reset the state of this workspace
find the feature model matching the given id and version
find the feature model which matches the given feature version
returns the system bundle id
shutdown this manager
set the image name
returns the image name
gets the source locations of the new plug in
returns true if the given plugin has a valid source location
returns all source roots of a given plugin
parses the plugin information from the plugin manifest
set the field reference attribute
set the field anchor to
set the field anchor id attribute
set the field toc path attribute
tests if this object descends from another object
add a child to the current node
adds a child to the node
removes a child
set the field label of this field
set the field reference
remove an execution environment from the command line
sets the label of this attribute
set the id attribute
sets the location
sets the title attribute of the html tag object
sets the description of the help
sets the content type description
set the serialization attribute
returns true if this object descends from the given object
return the index of the given
removes the given element from the list of manifest elements
set the current limit
set the width of the column
sets the orientation of the bar
sets whether or not the line is a separator line
returns the separator lines flag
exits the application
check whether a symbol is defined in this scope
gets the content type of the response
returns the content type parameter of the response
returns the response stream
returns the string representation of the response
register a handler
returns a servlet init parameter
returns the servers identification
returns a servlet init parameter
checks if the list is empty
sets the location of the point to the specified coordinates
adds the point
fire a change event to all registered listeners
forward notification of a change to a point in the trace
returns true if the given object is equal to this hsbcolor
creates and returns a copy of this color
force the calibrated range which is the maximum x value
returns the next element in the iteration
resets the model
clone this stepping
performs a step in the color iterator
the step method performs a random step
increment the step in the color iterator
force the calibrated range which is the maximum y value
checks if is empty
removes the element which has been in the buffer for the longes time
sets a new buffer size
gets the value at the given index
removes the element from the buffer and returns it
returns the value rounded to the nearest integer
returns a hash code value for the customer end
get traffic dao method comment
initializes the frame
returns true if the traffic weights for each component should be used
returns the number of attributes in the class file
returns the current tenure of this door
gets the tabu search iterations
creates the menu bar
wait until the sync engine is finished
returns true if the given solution move is tabu
sets the tabu of the solution to the given move
gets the bean descriptor
tabu search started
tabu search stopped
invoked when a new best solution found
invoked when a new search solution has been found
reacts to a movement of the search
invoked when the improving move
invoked when a no change in value is clicked in the value
sets the current solution
sets the best solution
sets the solving state of this local player
sets the flag which keeps the solving behaviour
getter for property keep solving
sets whether or not we should fire a new current solution
sets whether or not to fire a new best solution
set if undeployment move is performed for the solution
sets the flag for the improving move made
sets the flag that controls whether or not the user has changed the
returns if the current solution is changed
returns if solution or number of best solution is changed
return if the end of a unimi move made
returns true if the improving move is made and the
returns true if no change in value move made
log a message to the syslog
closes the logger
syslog can be used to send messages to the syslog system
logs the messages of priority error with stacktrace
returns the error message of the pdu
returns a string representation of the object
close the snmp session
closes the socket and shuts down the worker thread
closes the worker thread
sends a set request to a target
get the patients usm
fire a counter incrementation event
cancels this pdu
get the statistic object for the within replication
set the name of the within replication statistic
returns the statistic object for the number of across replications
set the name of the replication statistic across the replication
returns the current across batch statistic
sets the name of the batch statistic across the batching
set the limit on the count
the maximum number of entries to stop when a
resets all the statistics for this
return the next event in the queue
checks if the list contains any elements
cancels all the events
cancel the event
returns the number of elements in this collection
returns a string representation of this event set
adds an event to the event set
returns the next event in the event queue
adds the given event to the root node
returns the next event in the chain
returns true if the tree is empty
cancel all events in this queue
returns the number of events in the queue
returns a string representation of the object
called before experiment is started
reset next substream if needed
check if convergence has been reached
x y where x is this polynomial
sets desired precision
sets the maximum number of iterations to perform
returns the standard deviation of the values added so far to this series
returns a string representation of this instance
set the array of parameters
set the parameters
computes the factors at a given index
sets the parameters of the distribution
returns the cumulative distribution function assuming a is lie between
return the inverse of the cumulative distribution function
get the value for the random variable
returns the shape value of this shape node
returns the scale
sets the mean and variance parameters
creates a new rng stream depreciated
returns a string representation of this object
returns the inverse of this distribution
set the parameters of the distribution
sets the parameters
constructor for the random data
creates a new rng stream
set the parameters
returns the complementary term at x
returns the first loss function of the normal distribution
returns the second order loss function of this distribution
sets the mean and variance parameters
sets the confidence coefficient
resets all the statistics to 0
sets the confidence coefficient
gets the confidence coefficient
if the statistics are not initialized returns a string representation
the ball fx function of the velocity vector
run the simulation with default parameters
run a simulation with given replication length
set the name of the analyst
sets the title for this document
sets the date
builds the model
returns a string representation of the event
dispatches the event
returns the id of this object
returns a string representation of the object
turns off the batch report
gets the condition that the control will end at
turns on the ip log report
turns off log report
returns the default batch report
turns on the timer
turns on the timer
this method is invoked when the user wants to output the console
to string method
returns true if the state of the button is set
this method is called when the builtin is called in a rule
this method clears the state of the game
this method sets the state of the game to true
used by junit called before each test method
this method is called when the dialog is entered
this method is called when the application is exiting
resets all statistical counters to 0
turns on the default trace report
turns off the trace report
returns a string representation of the object
internal helper that finds all model elements which are not in the
cancels the event in the event queue
indicates that the schedule has been updated
utility function to reschedule an event to happen after a given time
reschedules the event
schedule an event
returns the model of this element
schedules a new event to be processed by this controller
turns off the diagnostic trace of socket messages
schedule an event
schedules a new event to be executed at a given time
schedules a new event to be executed at a given time
schedule an event
return the value stored in the
returns the value stored in the code jslevent schedule code
return the value of a given time type for the current
return the value of a code jslevent schedule event code
returns the value of a time event
returns the value of a time based on the input type and priority
returns the label of this transition
schedule a new event to occur at a given time
schedule a system event for a given action listener
schedule a new event to occur at a given time with the default
sets the label for this transition
schedule a event to occur at a specific time
schedule a new event to occur at a given time with the specified
returns a string representation of this object
schedule a system event to occur at a given time
schedule a event to occur at a specific time
schedule a message to be sent to the event dispatcher thread
returns the variable with the given key
schedule the event to be processed by the action listener
schedule a event to occur at the specified time
schedule a event to occur at the specified time
return the event to register with the action listener
used to perform any required initialization of the experiment before the experiment
schedule a event to occur at the specified priority
schedule a event to occur at the specified time
schedule a event to occur at the specified time
the operation to get the handle event listener
method to be overridden by each sub class
helper method generates the string selection for the class
this method is called when the user clicks on the warm up button
called when the task timed out
set the process description
invoked when the replication process ends
returns the process description
adds an assignment created from the set
adds the assignment
sets the type of the entity
method to be overridden by each sub class
sets the name of this test package
creates a new
get the list of process commands
starts the command at the given index
this method was created in visual age
this will set the current cursor to the command specified
used to perform the after experiment
this method should be called if the activity is suspended
terminates the command
creates a sub process executor for a given process description
dispatch the given event to the action listener
selects an idle transporter from the list of idle transporters
the user has clicked the window
get next request from the dispatch queue or null if there is no
indicates that the event has occured
the method returns the coordinate of a code point code using the
adds the given element to the list of elements
update the position of the component
sets the spatial element that will be updated by the user
sets the spatial model associated with this shape
clears the current my collision data
sets the model element this element belongs to
return a string representation of this object
move an empty coordinate to the internal position
this method is called after the movement ends
determines if the specified code coordinate ifc code is
adds the given spatial resource to the list of initial resources
this method is called by the transport engine when it becomes available
adds a new resource to this project
checks if this code spatial resource code contains the given
transport the transport of the given spatial element
returns true if this resource set contains no resources
removes the given resource from the list of resources
invoked after finishing the activity
returns the number of resources in this category
returns the number of idle resources in this group
finds an idle resource in the group
starts the next trip
given a lat lon and x3 returns the corresponding coordinate
this method is called after the movement ends
this method is called outside the spatial
the function code is valid code returns true if the coordinate
this method is called when the user changes the movement
returns the distance between two points
checks if the entity has reached its collision
compares two coordinate positions
this method is called when a collision occurs
adds the specified spatial element to the space
sets the initial capacity of this resource
this method is called when a resource is allocated
removes the given spatial element from the list of spatial elements
invoked when an action occurs
called by the system when this task is first initialized
adds a resource with the given capacity to the resource set
get next request and remember it
returns the current rate function
sets the current rate function
returns the throughput associated to this period
get the rate of the time period at which the upper bound is
get the lower time limit
returns the width of the time line
finds the interval that covers the specified time
return the lower limit of this interval
returns the upper limit of the cumulative rate of this
returns the interval for the cumulative rate of the given cumulative rate
return the cumulative rate interval width
this method calculates the cumulative rate at a given time
returns the requested code rate segment code object
returns the inverse cumulative rate
returns the number of segments in this ms
adds a rate segment to the rate curve
return the upper time limit
returns the cumulative rate at a given time
return the inverse cumulative rate
adds a rate to the end of the interval
returns the time rate in hertz for a given time
returns the cumulative rate of this interval
returns the inverse cumulative rate of this interval
this method calculates the cumulative rate
get the inverse cumulative rate
attaches this aggregate counter to the given aggregate
initializes the counter variable
sets the value of this counter to the given value
warm up resets the counter variable
called when the value of the variable changes
adds a new counter to the counters list
set the value of this node
returns the value
sets the weight of this connection to 1
returns the current statistical observer
assigns the initial value to this variable
assigns a new value to this variable
returns the statistical observer for this object
set a trace report for the variable with the specified name
get the statistic object for the within replication
sets the batching option
get the statistic object for the current time within the replication
returns a string representation of the object
returns the statistical observer for this object
used for testing purposes
returns the statistic object for the within replication
used to get the average value for the current time
returns the average over the statistics for the current
adds a time weighted variable to the model
returns the replication batch statistic
attaches this aggregate to the given aggregate
called when the time computation of the digital node is updated
gets the average of the replication across batchs
sets the current statistical observer
returns the statistic object for the amount of across replications
returns the average across replications of all considered values
initialize the member variables
turns on the count based stopping
called by the system when this button is pressed
this method should be invoked when the
allow subclasses to perform any work immediately before replication
sets the current statistical observer
add a component to this assembly
returns true if this container contains the given component
remove a component from this assembly
called when a component is available
called after a component is created
if a component is available after repair the component will be returned
called after a component is unavailable
called after a component is available to be added to the operating system
called when a component is started
called when a component is unavailable
called when a component has failed to load
returns the amount of time remaining until the next failure
updates the time remaining until the next failure
returns the next operation time
returns the next time to failure
gets the next repair time in seconds
runs a jslevent
end the current operation
the failure action
after repair action
called before replication of the data source is done
this method initializes the operating system
create a new entity
sets the queue
sets all nulls in this object to null
returns the next qobject in the list without removing it
removes and returns the next qobject in the list with highest priority
initializes the discipline
add an object to the list
peeks the next element in the queue
removes and returns the next element in the list
change the priority of a qobject in the queue
peeks the next element in the list
remove and return the next element in the list
peeks next randomly chosen element from the given list
removes and returns the next item in the list
removes the specified queue listener so that it no longer receives queue
return true if the schedule action should be activated when the
set schedule action on initialize flag
called after replication has completed
add an action to the timed actions list
removes the specified action from the list of timed actions
sets the automatic start flag
enqueues a qobject to be added to the queue
returns the automatic start flag
returns the initial start time
sets the initial start time
returns the start time of the cycle
returns the elapsed time in seconds since the cycle started
returns the remaining time of the current cycle
returns a string representation of the list
sets the schedule repeat flag
returns the schedule repeat flag
sets the length of the schedule
returns the length of the schedule
notify the queue listeners that the queue has changed
returns the duration of the task
returns the number of actions in this composite action
adds an action to this schedule
adds the action
schedules a start event
sets the origin of the message
called when a load is received by this network interface
any member variables are initialized here
set the distribution used to load time values
sets the distribution used to load unloading time
returns the loading time distribution used by this generator
returns the used unloading time distribution
get the loading time rv
gets the unloading time rv
this method is called when the task is loaded
dispatches a loading event
this method is called when a task is unloaded
dispatches the task to the unloading listener
returns true if there is at least one load message for the given
get the loading time of the task
get the expected loading time from the stored data
get expected unloading time from the task
called after replication of this file has completed
returns the number of locations in this code transport code
checks if a code transport location code is in this
finds the transport location that needs to be destroyed
returns the index of the specified code transport location code
updates the distance and distance of this lane in the network
gets the code transport location code at the specified index
finds the transport location that is at the given distance from the
returns true if the given location is in the context of the
this method determines if a bob tail is needed at the transport location
checks if the specified code transport location code is in the list
returns the number of outgoing lane objects that this agent knows about
this method checks if there is at least one transport head in the
returns the number of incoming lanes for the given location
checks if there is at least one code transport code in the queue
returns the number of lanes in this layer
sets the distance between the two constrained
sets the origin and destination
returns true if the given code transport location code is a lane
sets the probability at which the supplied location is
returns true if the given lane is part of this lane
sets the last probability that the specified
sets the probability of the destination of the specified lane
sets the last destination probability of a certain lane
sets the transportation network
returns true if the given code transport location code is reachable by
returns a random origin
returns a random destination for the given code transport location ifc code
this method is called when a task is enqueued
returns true if this graph is reachability
notifies the manager of an invalid load
updates the distance and lanes in the correct order of this lane
queue the given dispatch task for further processing
creates the transitive closure over the location pointed to by the
get the transitive closure for this lane
finds the transport location with the most idle drivers and trucks
this method is called when the agent is to perform the task
release the driver
release a truck
releases the trailer object
dispatches the completion event
returns the next task to be scheduled for execution
returns the next task to execute
load tasks from dispatch queue
set up the demand fillers for the given order
dispatches the task to the appropriate listeners depending on whether the
asks the order to begin receiving demands
finds the location with the most idle trailers
ask the order to begin processing demands
the order creator to be used for this order
returns true if this item can create a new order request
schedules a task for loading
acknowledgement for a received order
called when an order was rejected
method used to indicate the order of delivery
completes loading of the project
returns the nearest transport location that is idle
finds the transport location with the most idle destination
finds the task that needs to be executed at the given location
finds the task that needs to be executed when a transport has been
this is a hook for subclasses to determine how the task
returns the request status demand of the code item type code
checks if the item will reject a certain demand
allocates a driver for the given task
releases the drivers instance from the pool
set the item type
creates the demand
set the filler on demand for a given demand
sets the demand listeners
this method is responsible for sending the demand to the appropriate
the demand message was received
returns the next truck location
returns the current allow cancelling status
allocates a task for a new truck
schedules an event to be fired at 10 hour resting tasks
dispatches a task to the truck
adds the distribution of a new item type
returns the idle trailer for the given transport location
initializes the availability of the abstract source
schedules an hour resting task
allocates trailer for this task
initializes the inventory
allocates trailer for this task if it is not allocated
request a replenishment from the agent
create a demand object with the given replenishment qty
returns the current inventory
releases the trailer for this task
schedules an 14 hour rule resting event
send the demand to the sender
sets the demand listeners
fills the immediately demanded request with the specified amount
schedules the rule rest for the specified time
process the initial request
enqueues the given order for processing
removes an order from the queue
allocate an inventory demand for an item
sets up the order listeners
schedules 10 hour resting of fourteen hour rule
called to demand an order
received the order
handle jsl demand requests received by filler demand
replenish an order
initializes the loader
replenishment request was cancelled
called when a driver is being used off the queue
called when a driver is being dutyed
called when a driver is being turned off
this method is called when a driver is being used
schedules a task for unloading at the current location
sets the network demand carrier
set the demand queue initial discipline
this method is called by the demand thread when a packet has been
ship the demand
sets the load queue initial discipline
returns the loading time of the task
this method is called when a demand is received
return the demand queue for this project
return the load queue for this download manager
sets the default load forming option
loads the form data from the database
this method invokes the form load method for the given option
this method is called by the load method in the load queue
returns the time that the given task was unloaded
get the minimum cube limit
get the maximum cube limit
returns the limit of the weights that is greater than or equal to
returns the maximum weight of the live set
returns the maximum number of records returned
returns the reaction to load builders flag
sets the maximum number of records returned by the query
sets the reaction to load builders flag
the code demand load formed listener code implementation of this
creates a demand load builder to build this demand demand
creates a demand load builder to build this demand
assigns a load builder to a destination demand
sets the load formed listener
returns the time needed for this transport task
returns the load forming rule used for the import
ship a load from a given load queue
called when a demand loads a demanded load unit is available
sets the demand for forming of the module
reset the driver status
sets the actual production foremiance according to this demand
used internally to schedule event demand statistics
sets the actual production fore forever
when event is null the
updates the forecast demand
when forecast is added or updated
schedule demand statistics for all the events within the aggregate file
when this is called the forecast is added to forecast
reset the driver status
assigns the route to this behaviour
start the vehicle by calling its starting location
performs a bob tail no load
performs a dead head no load
sets the request status of this task
sets the inventory shipper for this item
processes the log demand for back operations
called when this inventory is requesting a car
called at the start of the initialization phase
generate action event for the event type
called when a load is done by this network
resets on duty time available to a value between 0 and 1
handles the initial request status
checks whether this inventory can provide the given item type
resets the driving time accumulated towards70 hours
returns the number of outgoing going lanes from the given location
resets on the driving time accumulated towards 0
returns the number of incoming lanes for the given location
reset on duty time accumulated towards zero
this method is called before a task is executed
dead head now
returns the amount of time this processor has been driving in the
called when processing of the file ends
called when the transport has completed
sets the driving time available
allocates resources for the specified transport
sets the expected driving time when the agent has been
called at the end of the list of resources
dispatches the dead head to the task queue
returns the amount of time this task has been online enough to
setup search list according to repair tasks
finds the next location in the list of locations
adds a spo entry to the rfidtag list
add a new rfidtag to the list
add a reader to the rfidreader
adds the given reader to the list of readers
this method is called when the player tries to see another location
this method is used to get all the sensor locations for the sensor
a method for implementing the behaviour of a searching empty move
moving to the start of the repair
sets the range function to be used for calculating range
called when the moving to resting area is completed
moving to repair using the given repair station
this method is called when the player tries to move to a
this method returns an equipment to the user
convert the state to a string
an action that should be done when the alarm is not applied
an hmsystem sensor is updated
indicates whether the transport is available and can be used
listen to the slider
returns the average queue length of the active queue
returns the length of the longest variable queue
returns the average time of responses received by this request
returns the time of the response of the variable
this method returns the average wait time of all objects in the
this method returns the time of the wait time for a variable
this method returns the time of the wait
returns the system of jobs present in the cluster
returns the number of fact
get the on duty time accumulated towards70 hours
collects on duty time accumulated towards70 hours
collects the driving time accumulated towards70 hours
this function analyses an event and calls the right methods to take care
exports the data to the chart
presents a confirmation dialog for the user to confirm if the graph is
returns the value of the random variable at the given index
collect the on duty time accumulated towards the on duty
collect the driving time accumulated towardswards in hours
convert number of nodes
returns true if all the values in this vector are 1
returns the next job
sets the network for this dispatcher
modify the distribution used to calculate velocity values
set the current task
on scanned robot what to do when you see another robot
when robot hit a wall it decrements its turn counter
deletes all product handles with no existing items
returns the id of this attribute value
sets the id
equals method for that object
returns the hash code value for this object identifier
returns a string representation of the object
gets the value of attribute
sets the attribute
gets the value of owner
sets the owner of the offer
the equals method
returns the hash code value for this object
returns the value of the literal
sets the value of the value property
equals method for that object
returns the hash code value for this object
sets the product handle group
returns the unique id of this class
sets the id of this command
returns the item id
sets the item id
equals method for that object
the overriding of this method should ensure that the objects of this class
returns the locale
sets the groups
sets the status offer status
returns the id of this block
get the type of this offer
gets the value of creation date
sets the creation date of this actor code value to the specified value
equals method for that object
returns the hash code value for this object identifier
gets the offer
sets the offer
returns the handles
sets the handles
sets the id of this command
gets the ordering of this product
sets the ordering of this product
equals method for that object
returns the owner of this product
setter for property owner
returns the value of this integer
set the value of this constant
returns the string value of this object
returns the date value
sets the value of the date property
returns the value of the float element
returns the float value of this value
set the value of this constant
returns an attribute by id
returns all the attributes in the specified language
deletes all the attributes of the given owner
returns the logger
creates an attribute that is transient
deletes the item with the specified id
returns code true code if an item with the specified system id exists
gets the catalog manager
returns the attribute manager of this repository
returns the status manager
returns the item manager
getter method for the version status manager
returns the item status manager
creates a new instance of the list
override put to check for index
adds a key value pair to the map
this method is used to insert a list of elements in this map
returns the number of elements in the list
convert a list to a bag
this method is not supported
gets the value of id
gets the supplier id value
gets the value of status
gets the value of catalogs
gets the value of versions
getter for sources
gets the destinations
sets the id
sets the system id
sets the supplier id value
sets the type of this assignment
set the status of this item
setter for property catalogs
sets the value of versions
sets the sources
sets the destinations
removes a version from the database
removes all the catalogs from the list of items
equals method for that object
returns the id of this attribute
returns the hash code value for this object
returns true if the given type allows an attribute of the given type
returns the persistent type of this variable
returns a new unique identity value
returns the attribute
getter for property owner
setter for property owner
the equals method
the overriding of this method should ensure that the objects of this class
returns the string value of this enum
equals method for that object
sets the value of the language property
returns an example string
sets the example
returns the type of this attribute
sets the type of the attribute
returns true if the given type allows an attribute
returns the id
equals method for that object
gets the value of description
equals method for that object
getter of the parent catalog
gets the value of children
returns the key of this entry
returns a string representation of the attribute
gets the value of ordering
gets the value of items
the class returned by null safe get
returns true if this property is mutable
return a deep copy of the persistent state stopping at entities and at
returns the key of the attribute associated with the object
write an instance of the mapped class to a prepared statement
to set the parent catalog
retrieve an instance of the mapped class from a jdbc resultset
sets the children
sets the items
sets the status of the catalog
equals method for that object
gets the current date time
set the date value of this property
get the value of the option as a list
returns the value of the list
sets the value of the field
returns the version persistence object that owns this version
set the value of the number
set the version object that owns this object
returns the float value
set the value of the number instance
sets the item that this operation is operating on
setter for property status
equals method for that object
returns the description of the entry
returns the status
extract the search object type
returns a formatted error message for the given resource
returns the class of the object
gets the value of field name
gets the value of field value
returns a localized message for the default locale
gets the localized message for the current locale
sets the class
returns a formatted error message for the given code locale code
returns the first entity of the set
getter for property id1
returns the second entity of the set
getter for property id2
get the id
returns a formatted error message for the current locale
returns a formatted error message for the given locale
gets the exception localization
returns a localized message with the default locale
returns the localized message for the current locale
returns the date of the local
returns the key of the properties file
returns the description of the task
returns the description in the specified locale
gets the type
returns true if the given calendar has a holiday
checks to see if the date is a holiday
sets the properties
returns the description of this country
returns the description of this country
returns the key used to locate the properties of this node
set the calendar hierarchy
creates and adds a new holiday to the collection
returns true if the entity is a moved object
this method moves the given date from one place to another
gets the easter sunday for the specified year
compare two resource bundles together
sets this point to the same values as the specified point
adds the given point to this point
resets the stack to a new seed
put piece puts the piece into the board
returns true if the given row is complete
resets the random number generator
clears all the complete rows from the table
removes the given row from the grid
calculate the shadow location from the piece
rotates the tile clockwise about the top left corner
paints the block of a given type
return the height of the stack
rotates the tile counter clockwise about the center by the specified amount
writes the specified byte to this output stream
this method returns an input stream that can be used to read from
this method returns an output stream that can be used to write data
sets the flag to false and disconnects from the server
checks if a connection is alive
invalidate a connection from the database
removes a connection from the connection manager
p encodes a sasl scalar quantity code count code octet long to the
p encodes a sasl os to the current buffer
creates a sasl client from the current state of the
return an input stream for reading the contents of this file
p encodes a sasl eos to the current buffer
return the output stream for writing to this stream
reads a byte of data
p encodes a sasl mpi to the current buffer
this is the main loop for the rmiregistry
p encodes a sasl text to the current buffer
returns a new instance of this class
returns a new message digest object
this method is called when the user tries to find a name
returns the number of words in the set
get the elapsed time for this request
returns the total amount of words for this file
tells whether this expression has been initialized
get the mbean info
returns the drips aspect info object of this plugin
shuts down the drips
starts the program with intialize drips
sets all the drips in this expression
gets the state of the server
returns the drips aspect for the given classname
enable the tool
disable the state of the flip flop
determine if an aspect class has been registered
enable the aspect class
check if the aspect is enabled
disable the aspect class
jndi context config location
returns the value to which the specified key is mapped
save this record to the database or return a new object
persist this object
update the panel
cleanup the multipart resolver for later use
returns whether the session is a single session
return the attribute name that should be used to participate in the
sets the hosting
close spring root web application context
returns code true code if this context has been fully
gets the value of the publish events property
returns the servlet context attribute name
returns the username for the request
return the context loader used by this listener
get a velocity property from the velocity template
returns the velocity engine
sets the velocity engine to use
initialize the toolbox manager
creates action hostings
this method should be called only from the request object to
create a new configuration
initialize the multipart resolver used by this class
if the parameter nocache was set to true generate a set of headers
cleanup the multipart resolver for later use
returns the keywords at the specified index
setter for resumable
setter for property downloading
gets the code aid code of this person
sets the code aid code of this code depot entry code
gets the location of the player
set the value of sender
sets the location
setter for property coming from manager
getter for property coming from manager
sets the notification
returns the notification
returns the time of the timer
sets the time difference
stops the timer
stops the timer
stops the timer
stops the timer
sets the time
stops the timer
setting the start time of the simulation
returns the average cycle time of all the current
adds a new container description
set container 2 wait4
we are loading the system
this method should be used to output dynamic cpu information
gets a new container2 wait4 status
this method should be used to output dynamic informations about memory
set the started status of a new container
sets the jvm pid
gets the value of the jvm pid property
output full system time information including cpu time
set a new container to be canceled
gets the jvm memo free value for this gcinfo2
this method initializes j load cpu
sets the jvm memo free value for this gcinfo2
resets the agent map
this method initializes j load memory
gets the value of the jvm memo total property
this method initializes j load jvm
put the agent to a container
sets the jvm memo total
this method initializes this
the maximum number of jvm resources that can be associated with this system
counts the number of agents in this container
sets the mhz
this method initializes this
the maximum number of jvm resources that can be associated with this system
sets the number of agents
gets the mhz
gets the jvm heap used
update the container label to display the number of container
sets the jvm heap used
set the time to run for a cycle
gets the jvm heap committed
sets the jvm heap committed
sets the total cpu
this method initializes j scroll pane
gets the maximum heap size
returns the total cpu
sets the jvm heap max
this method initializes j panel load
sets the value of pl address
sets the cpu system time
gets the jvm heap init
sets the jvm heap init
gets the value of the pl address property
gets the cpu system time
the number of threads to run concurrently in a jvm
gets the cpu system time rounded to the nearest whole round
returns the os info
sets the jvm thread count
sets the cpu user time
sets the jvm thread times
setter for property os info
gets the cpu user time
set the measure into the system
gets the value of the pl performace property
gets the cpu time rounded to this processors machine
sets the pl performace value for this flight
gets the time in mill
setter for property cpu wait time
returns the benchmark value
sets the time in mill to the specified value
gets the cpu wait time
get the cpu wait time rounded down
set the benchmark value
returns a string representation of this code time span code object
merges two agents together
sets the cpu idle time
return the benchmark value
gets the machine load
gets the value of the number of agents property
gets the cpu idle time
the method that counts the number of agents in each container
put the agent into the agent container
get the cpu idle time rounded down
put the agent at container name in agent list
returns the aid container corresponding to the agent identifier
returns true if the timeout has expired
set the agent identifier
sets the cpu combined time
get the agent aid
gets the cpu combined time
set the value of service sensor
returns cpu combine time rounded down
method to known if service sensor has been used
setter for property new location
sets the cancelled flag
get the new location of the entity
get the cpu l
set the cpu l
get the th cpu h
returns the total amount of memory in mb
set the cpu horizontal
returns the th memo
set the th memo field
get the th memo field
sets the th memo
sets the th no threads l
gets the th no threads l
sets the th no threads h
gets the th no threads h
sets the use memory
returns the amount of free memory in mb
adds a new load measure
returns the current value of the use memory counter
returns the used memory as a percentage of the total memory available
returns the amount of memory in mb
sets the used memory as a percentage of the total memory available
the total memory in bytes that this jvm should run before the last
sets the total memory swap
returns the amount of free memory in bytes that are in swapped
sets the amount of free memory in bytes that are in swapped
the amount of memory in bytes that must be swapped
sets the number of bytes that must be swapped before
rounds a double to the correct double precision factor
this method puts answers on the agent agent table
set the notification to the manager
this method is used to add sensors to the list of available sensors
this method is used by the framework and should not be called directly
puts the given environment model into the agent
put answers of agent to the sensor
this is a notification from agent environment
deletes the current project
change the migration to the given location
this method is used to plug in into service sensor
this method is used to plug in passive sensor
this method is used to remove sensors from the service
set measurements for the load agent to the different
refreshes the countings and lists
notify the service sensors
notify the agent sensor that an agent has been found
notify the service sensors that a local sensor has been deleted
start all agents that are currently running from the current agent
loads the load service helper
sets the simulation service helper
this method returns the number of simulation answers that are expected
sets the current threshold levels
adds migration list to the environment
start an agent
set the agent who is migrated
start an agent
start agent execution
check if the download is finished
return true if the download was successful
gets the value of the download progress property
returns true if there are no display environment and no environment
deletes a folder and all its subfolders and files
set the time model
gets the abstract environment
sets the abstract environment
gets the value of the display environment property
sets the display environment
returns true if the current environment is complex
start the load monitor
returns the complex environment base64
sets the complex environment base64
return the classpath string for jade
this method checks if the agent is found in the agents nick
load the service
start the remote container
shows the gui
sends reply to agent
this method is used to set the migration agents to be used by
returns the monitor behaviour ticking period
sets the pause simulation
sets the monitor behaviour ticking period
sets load balancing
stops the gui
returns the load balancing
sets the time of the synchronization
unregister a new platform
this method initializes this
the setup method
this method is called when the agent starts up
this method is called when the sensor is plugged into this service
add a new behaviour to the agent
returns a physical2 dobject from the world
remove the behaviour from the manager
fordination of the agent to the visualation
this method is called when the agent starts up
this method is called when the sensor is plugged out
steps the environment simulation one answers
check the environment model and act on environment changes
forward the remote container request to the agent
sends message to main server
perform a simulation step and check for answers
set the migration to be used for future searches
set the environment model that will be used by the simulation
this method is called when the agent answers a question is received
this method is called whenever the environment is about to be
start the remote container
sets the answer of the current simulation
the client benchmark value
the client load
the load memory system used for the process
the load cpu for this vm
number of threads to load
the load memory jvm
the number of entries that were loaded by the
the os arch string for the client
defines the slave performance for this test
set the notification for this environment
set the notification manager
the cpu number
memory total mb
adds the notification handler
the configuration for remote container
client performance instance created by this class
remove the notification handler associated with this behaviour
client address of the client that sent the message
time stamp as string
address of remote machine
the jvm memory alloc initial
remove the behaviour from the notify handler
name of remote container
prevent usage of used computer
the remote pid
sets the value of the remote performance property
sets the value of the remote benchmark result property
add a parameter to the function
set the formulary
setter for property parameters
sets the parameter type
setter for property calc expression
getter for property calc expression
handles events from the editor button and from
get the header line
gets the environment model
returns the time model used by this component
creates the monitor file
set the time model used by this scheduler
gets the abstract environment
sets the number of this type
sets the abstract environment
gets the display environment
sets the display environment
sets the graph element ids
get the class name for the prototype
set the agent answers hashtable
set the class name for the prototype that should be created by this
builds the visualization gui
destroys the visualization gui
returns a new node with the same position and orientation
creates a frame for the agent gui
returns the graph element with the given id
sets the list of environment notification objects
get a copy of this edge
grab an environment model from the simulation service
returns the name of the agent class
clone the object
sets the current cts
sets the edge width
gets the edge image attribute of the hlink tree object
sets the edge image attribute of the hlink tree object
updates the vertex menu and the popup menu
this method initializes this
returns the number of network components for the given node
gets the vertex size
updates the edge popup menu
sets the vertex size
getter for property snap2 grid
set snap to grid mode
sets the snap raster
returns the snap raster
this method initializes this
this method initializes node class selector
returns the next unique identifier for a network component
this method initializes j button clear graph
this method initializes j button apply
returns the next free node id
this method initializes j button abort
this method initializes j button components
this method initializes j button confirm
this method initializes j button zoom fit2 window
setter for property general graph settings4 mas
get the value of general graph settings4 mas
set the component type settings
this method initializes j button zoom one2 one
this method initializes j button cancel
sets alternative network model
this method initializes j button zoom in
import a network model from a file
this method initializes this
this method initializes j scroll pane class table
this method initializes j button zoom out
sets the network model
sets whether the image should be scaled
returns the graph controller
this method initializes j button add component
returns the current project
this method initializes j toggle mouse transforming
clears the network model
this method initializes j tabbed pane alt net models
this method initializes j toggle mouse picking
returns the scaling control
returns the column index of the column header in the vector of headers
sets whether tabs are used to display the main panel
this method initializes j button remove component
returns the graph file importer
setter for scaling control
this method initializes j split pane root
this method initializes j button merge nodes
returns whether or not this map allows initial scaling
this method initializes j button split node
this method initializes j scroll pane
this method initializes j button import graph
sets the allow initial scaling
this method initializes edge popup
remove a row from the table
this method initializes vertex popup
this method initializes j menu item delete comp
this method initializes j button add row
returns the default scale at a given point
this method initializes j menu item node prop
this method initializes j menu item edge prop
this method initializes j menu item add comp
this method initializes j menu item split node
sets the graph that is displayed by this panel
displays the number of components in the table
adds a new component to the dialog
this method initializes j combo box4 edge width
this method initializes check box edge width
initialize the position of all nodes in the given network
return the snapped grid point with the given position
sets the temporary nodes moved in the code graph node code
adds a temporary node to the graph in the local position
removes all the temporary nodes and edges from the graph
this method initializes j button remove row
checks if an agent is in the correct order
returns the graph visualization
this method initializes j text field node class
returns the graph gui
this method initializes j button select node class
refreshes the graph
broadcasts the environment model to all registered services
repaints the graph
this method initializes j scroll pane
this is the method called when an object is left clicked
sends the simulation to each step
this is the method that handles a right click on an object
this method initializes j text field search
this method initializes j button node color
handles a double click on an object
repaints the graph
this method sets the color of the node
this method initializes j button ok
the method code clear picked objects code clears all the picked
this method initializes j button clear search
the method code set picked object code is called when a node
this method initializes j button cancel
set the list of picked objects
this method initializes j panel viewer
this method initializes j combo box node size
this method initializes this
the vertex is picked
this method initializes btn zoom in
returns the first picked edge
set the gui
this method initializes btn zoom out
this method initializes j check box lable visible
this method initializes btn zoom reset
selects the given object in the current view
sets the selected object
sets the unit on the label
this method initializes this
get the environment controller
this method initializes j panel dummy
this method initializes j label speed
returns the current project
this method initializes j slider visualation
this method initializes j check box snap2 grid
this method initializes j label time
this method initializes j slider time
this method initializes j split pane controlls
this method initializes j button play
constructs a svgimage from a url
returns true if the given node is the center node of the graph
this method initializes j spnner grid width
rebuilds the tree according to the environment model
gets the value of the stopp investigating property
this method initializes tp settings
sets the stopp investigating
getter for parent
setter for property parent
gets the svg document
return the distance to orginal
set the distance to orginal
sets the svg document
sets the total distance
get the y index of this data set
set the y index of this data set
set the x index of this state
returns the time in milliseconds since the epoch
set the environment
returns the graph environment controller
this method sets the time difference between two platforms
sets the graph environment controller
rebuilds the list of agents by the environment
adds an object to this cell
removes an object from the scene
the value of the real world unit
set the master environment
the pixel value of the color image
name of the real world unti
maximum speed in meters per second
the list of all available payloads
sets the description of the agent environment manager
size of the photo
agent class name e
the movement for the entity
parent id for this item
retrieves the master slice
protege name scale
id of the user
position of the event
position where the event happened
customized parameter for the action
list of child objects
height of the image
width of the image
controlling object id
the x position of the object
returns the speed of the entity
y change y position
y position of the screen
x pos change
checks if the node is a master node
returns the master environment for this slice
sets the environment model for this sensor
this method returns the project name used for the master node
get a physical2 dobject by id
removes the tray icon
fuer admin tool
returns the string representation of this object
returns the file as a string
writes the content of the file to the disk
writes the content to file
reads the version information from the version file
prints version information
returns a string containing the version information
gets the value of the version major property
gets the value of the version minor property
get the build version number
returns the date and time of this metadata object
gets the svg document
returns the date of the version
this method initializes this
this method is called whenever the agent answers are received
auto generated getter method
set default values for the mandantory properties
checks that all mandantory properties have missed the default configuration
check if object with id already exists
notifies the agent manager of a new agent
set the application title
sets the default comment for this application
sets the svg document
saves the global configuration
prints the properties on stdout
checks if agent is in agent list for agents2
notify the agent sensor service
prints the environment variables
removes an agent from the list
sets the answers for the environment instance
auto generated getter method
method get transaction size
auto generated getter method
sets the environment instance next parts hashtable
auto generated getter method
auto generated getter method
set the language combo models
sets the names of the default file
get the path to the base directory of the project
stop the simulation agents
returns the path to the base directory of the application
gets the value of the lang short property
sets the pause simulation flag
gets the value of the lang long property
the method sets the migration of agent to the local service
get the path to the config file
starts a remote container
returns the path to the projects
auto generated getter method
get the auto container configuration
gets svg file name
prints out the given node
returns the path to the web server
sets svg file name
returns a string representation of the path downloads
gets a new container2 wait4 status
init the gui components
auto generated getter method
sets the threshold levels
auto generated getter method
this method initializes j popup menu dictionary
encodes a complex environment model into a base64 complex environment
given an xml file name return the corresponding binary file name
this method initializes j menu item delete
this method initializes j text field search
loads a platform from the disk
this method initializes j list agents
executes the given application jar file
filter 4 agents
this method initializes j button ok
sets the status bar text
this method initializes j button cancel
this method initializes j menu item edit
decodes an environment model object from a compressed compressed
the ok action
sets the add a titel
loads container description and adds it to the client
draws a line from the given parameters to save
this method initializes this
sets the look and feel
this method initializes j tabbed pane
this method initializes j split pane main
returns the container description
this method initializes j tabbed pane right
auto generated getter method
calculate the difference between this platform and another
this method initializes j scroll pane left
this method initializes j scroll pane dictionary
convert a file path relative to the local base
shows the console of this panel
this method initializes j button ok
this method initializes j button cancel
toggles the visibility of the console
this method initializes j pane footer
adds a component to the option tab
return the local port number to which this connection is bound
this method initializes j panel top
adds a new option tab to the root node
restores the focus to the state saved in the constructor
this method initializes j button close
gets the default platform jade config for simulation
this method initializes j check box auto start
find a node given its name
this method initializes j text field master url
sets the focus on the tab
return the default profile for jade plattform jade platform
this method initializes j button import csv
this method initializes j text field master port
expands or collapses the tree with the given nodes
return the version of this jade
this method initializes j text field master port4 mtp
this method initializes j panel south west
auto generated getter method
this method initializes j tabbed pane4 console
this method initializes j panel east
this method initializes j text field dbhost
sets the run as server
this method initializes j desktop pane4 projects
this method initializes j text field db
this method initializes j scroll pane text source
returns whether this task should run as a server
this method initializes j text field dbuser
this method saves the current state of the client
this method initializes j text field dbpswd
this method initializes j text field source
gets the bench value attribute of the file prop object
adds an action listener to the list of action listeners
removes an action listener from the button
sets the model filtered
this method initializes this
refresh the view
this method initializes j scroll pane text destination
this method initializes j scroll pane
this method initializes this
sets the focus to the parent
this method initializes j list loading
adds a jmenu to the popup menu
this method initializes j progress bar loading
this method initializes j text field destination
this method initializes this
sets the loading status of the progress bar
adds a jmenu to the popup menu bar
adds a new interval to the selection
this method initializes j combo box source lang
returns whether the bench is skip
ensure that the specified index is visible
adds a component to a menu
returns the anchor selection index
this method initializes j button remote default
returns the bounding rectangle of a specific cell
returns the cell renderer for the list
adds a jmenu item to a menu
this method initializes j check box prevent usage of used computers
returns true if this list is loading or has no dragged items
this method initializes j list resources
this method initializes j combo box destination lang
set the language for this init tool preferences
returns the location of the drop
this method initializes j check box show rma
returns the current drop mode
returns the language of this file
returns the index of the first visible child
returns the fixed cell height of this table
returns the fixed cell width of this table
returns the index of the last visible row
this method initializes j scroll panel google
adds the current project tab
returns layout orientation
adds a new tab in the project window
removes the current project window
returns lead selection index
this method initializes j text area google
returns the largest selection index
set the text for the tip
set the parent name
returns the smallest selection index
sets the server master url
sets the jcomponent
sets the comp for child components
returns the component for which this container is part of
returns the model that holds the data
setter for property index position
this method initializes j button next ds
returns the index position
this method initializes j scroll pane
returns the next possible match for the given prefix and bias
returns the url to the server
returns the preferred size of the viewport for this list
this method initializes this
this method initializes j button previous ds
this method initializes j check box do load static
returns value of the prototype cell
set the server master port
this method initializes j text agent
returns scrollable block increment
returns true if a viewport should always force the height of this
this method initializes j check box do load dynamic
this method initializes j button delete
this method initializes j text agent start as
returns the server master port
this method initializes j scroll pane plug ins
returns true if a viewport should always force the width of this
returns scrollable unit increment
this method initializes j button start agent
returns the index of the currently selected item
this method initializes j button save
this method initializes j button agent list refresh
returns the value of the selected item
returns the file properties server master port 4
returns the background color used to display selected items
this method initializes j button find gap
returns the foreground color used to display selected items
sets the server master dbhost
returns the selection mode
this method initializes j button refresh plug ins
returns the selection model used to store the list
this method initializes j text field static load class
returns the server master db host
this method initializes j button google take
returns true if there is a value is adjusting
set the server master database name
returns the number of visible rows
this method initializes j scroll references
returns the point corresponding to the given index
returns the server master database name
returns true if the specified index is selected
this method initializes j list references
this method initializes j list plug ins
returns true if no indices are selected
this method initializes j button1
set the file name of the server master database
move the dictionary to the given direction
this method initializes j menu main window
given a point in local coordinates return the zero based index
removes a listener from the list thats notified each time a
returns the server master dbuser
removes a plug in from the plugin list
this method initializes j button move up
removes an interval from the list
this method initializes j menu main help
sets a new cell renderer for the list
sets whether or not dragging is enabled
sets the server master dbpswd
this method initializes j button move down
sets drop mode for the list
this method initializes j text field dynamic load class
delete the selected data set
this method initializes j combo box setup selector
sets fixed cell height
this method initializes j button rename
this method initializes j button setup rename
returns the server master dbpswd
sets fixed cell width
this method initializes j button setup copy
setting layout orientation
this method initializes j button setup new
sets list data to the list model
this method initializes j button remove all
set the last folder that was selected
sets the close button position
this method initializes j button setup delete
sets the list data to be loaded
sets a new model to the list
this method initializes j button references add
this method initializes j button default class dynamic check
get the last folder that was selected
sets prototype cell value
this method initializes j button references remove
sets the selected index
sets up the additon
this method initializes j text field agents expected
sets selected indices for the list
returns the last folder that was selected
sets up the renaming for the current project
this method initializes j split east
sets the selected value of the list
switches to the given mode
this method initializes j panel top new
sets up a copy of the setup
sets the background color to be used for selected list items
loads up the setup files and the translation engine
this method initializes j text field container expected
this method initializes j scroll ontology
this method initializes class name
this method initializes class slots sroll pane
this method initializes class slots
sets foreground color to the foreground of selected text
this method initializes class description1
this method initializes this
this method initializes onto split pane
sets selection interval to specified value
add a component to the view
this method initializes tree scroll pane
return the environment types that are known to this system
this method initializes j panel top new
this method initializes j button calc container
sets the selection mode to allow the user to load
this method initializes j split pane
sets the selection model to be used in the loading pane
this method initializes onto main
adds an environment type to the environment
sets the l f object that renders this component
adds a component to the toolbar
this method initializes j check box threshold definition
this method initializes j button add ontology
sets whether the value is adjusting property of the result set
this method initializes j button remove ontology
this method removes an environment type from the environment
sets number of visible rows to display
this method initializes this
this method initializes j scroll pane start list
this method initializes j tabbed pane
remove the environment type with the given key
this method initializes j combo box start lists
this method initializes j text field default port
this method initializes j button set port
this method initializes j scroll pane
gets the new local jade port
this method initializes j text field cpu low
this method initializes j button set port default
enables or disables the sim start button
this method initializes j button set port default
this method initializes j button cancel
this method initializes j split ontologie
this method initializes project folder
gets the class2 search current value
updates the view
gets the class2 search4 default value
this method initializes j text field cpu high
this method initializes j panel onto slots
returns the class2 search4 description
this method initializes j scroll pane services chosen
enables or disables the sim pause button
this method initializes j list services chosen
updates the configuration of the view
this method initializes this
this method initializes j text field mem low
sets the class selected
this method initializes j list services available
enables or disables the sim stop button
gets the class selected
sets the current agent configuration
sets the selection to the start list
this method initializes j button default jade config
this method initializes j text field mem high
this method initializes j button agent add
this method initializes j button service add
returns true if the simulation thread is enabled
this method initializes j button agent remove
this method initializes j button service remove
this method initializes j text field customize class
this method initializes j text field threads high
this method initializes j button move up
refresh the list of available local ports
indicates if the simulation pause button is enabled
this method initializes j button move down
this method initializes j button check class customize
this method initializes j text field threads low
this method initializes this
returns true if the simulation thread is enabled
this method initializes j panel proceed
this method initializes j panel dummy
this method initializes j button ok
this method initializes j text field start as
this method initializes j text field project folder
switches the simulation ready to the left
handle an ok button click
this method initializes j button default threshold
this method initializes j button start ok
this method initializes j scroll tree
this method initializes j button cancel
this method initializes this
filter the ontologies in the selected ontology list
this method initializes j panel ontolo inst view
this method initializes j text field search
this method initializes j split pane
this method initializes j text field search
this method sets the onto inst view and adds the onto inst view
this method initializes j scroll pane
filter 4 classes
this method initializes j button select
this method initializes j button cancel
this method initializes j button ok
this method initializes this
this method initializes j button cancel
this method initializes j radio button show all
expands or collapses a tree
this method initializes j button ok
this method initializes j radio button show none jade
this method initializes j tabbed pane
this method initializes project view right tabs
set the resources list model
adds a resource to the list of resources
adds a feature to the 2 list model attribute of the main object
removes the selected agents
removes a resource from the list model
removes all entries from the list
sets the text that is shown in the list of resources
sets the suffix text
sets the file or folder resource
gets the file or folder resource
sets the suffix text
returns the suffix text
set the project name
sets the prefix text
tell the benchmark whether the current action is to be skipped
returns the text that is used as prefix when generating the xml
closes the gui
gets the name of the local computer
renumbers the agents
get the project name from the text field
saves the current configuration to the current onto instnce
set the benchmark value to show
set the project folder to the given text
this method initializes j progress bar benchmark
get the project folder from the text field
returns the free port
check if a free port is available
this method initializes j button skip
returns true if the local address is the same as localhost
this method initializes j button skip allways
updates the view
returns the url for the jade http protocol
get the host ip address of the current server
get the host name from the current address
sets the ok button text
returns the current port
get the application title
sets the current port number
creates a vocabulary for a class
add an aid to the vocabulary
returns the ontology tree
get the ontology instance viewer
this method initializes this
returns true if there were any errors during the parsing
sets the cancelled
returns the current error stack
adds a component to the panel
sets the object configuration
this method initializes this
this method initializes j content pane
adds a sub ontology
this method initializes j scroll pane
this method initializes j tree dyn form
this method initializes j split pane
returns the ontology single class slot description
this method initializes j scroll pane right
sets the ontology single class slot description
this method initializes j button ok
removes the sub ontology in the given ontology from the already existing
set whether the user can view this tabbed pane
return true if the form is empty
this method initializes j button cancel
set the name of the slot
adds a tab change listener to the pane
gets the value of the slot cardinality property
sets the cardinality of the slots in this role
returns true if the slot cardinality is multiple
set the xml text to the text area
sets the slot cardinality is multiple
returns the name of the slot var type
creates a new code ontology class tree object code with the given
sets the type of the slot variable
returns the field display
get the slot other facts
creates a new code ontology class tree object code
returns the ontology class tree object for the given class reference
sets the slot other facts
this method initializes j content pane
sets the jcomponent that contains the field
removes a project window tab
returns a string representation of this object
set the list of methods that will be used when building the slot
returns true if the type is class
checks if the class is a class
returns true if the type is an inner class
returns true if this is a raw type
returns the name of the class part of this reference
returns the slot of the class specified
this method initializes j panel4 touch down
returns the class reference of this package
returns the slot matching the given name
returns the jar reference from the given path
returns the ontology class that this class loader is using
returns the string representation of a slot
removes all project window tabs
sets the title of the object
gets the s t class description of a class
this method adds the enlarge tab to the main tab
returns the current class name
checks whether a class reference is a class
sets the is concept
creates a jar archive with all the elements of the list
sets the ontology tree
this method removes the enlarege tab
is this concept a concept
sets the agent action
gets the address of the local host
get the dynamic form lazily instantiating if needed
set the ontology vocabulary class
returns true if this action is an agent action
get the value of a vocabulary
sets the onto main class
code set is predicate code sets whether this plan is a predicate
this method initializes j scroll pane dyn form
setter for property threads
returns the name of the main class of the current ontology
code is predicate code returns whether true or false the plan is
sets the name of the package holding the ontology source
get the package name containing the ontology types that are loaded
sets the parent ontology class tree object
this method initializes j scroll pane text version
sets the name of the ontology being loaded
returns the name of the currently loaded ontology
sets the root directory to the given value
returns the parent ontology class tree object of this node
sets the focus to tab
this method initializes j text area
adds a reference to this agent class
adds or replaces a new project
adds a project folder
sets the focus to tab
this method initializes j panel enlarege
removes a reference to an agent class
this method initializes j label title enlarge
getter for property workers
remove a reference to this agent class
setter for property workers
get flag for when not having a limit of
set flag for when not using a service
gets whether show the jaderma gui
sets whether to show the jaderma gui
removes all references to the agent class
gets the jvm mem alloc initial
save the configuration
sets the jvm mem alloc initial
gets the jvm mem alloc maximum
sets the jvm mem alloc maximum
returns true if the static load balancing should be performed
begin user doc
returns the number of agents
returns the project with the given name
updates the agent references in the current project
sets the number of agents
get the number of container
set the number of container
setter for property configuration xml
sets the static load balancing class
returns the static load balancing class
returns true if the loading of the images is dynamic
setter for property do dynamic load balancing
returns dynamic load balancing class
returns the project at the specified index
sets dynamic load balancing class
returns whether user thresholds are used in low level thresholds
sets the use user thresholds
set the configuration for this component
returns the user thresholds
encode an ontology that is the given ontology
set user thresholds levels
loads the plugin classes
creates a node with visualization as view filter
sets the current project
set the configuration instances
method for getting a new instance of profil
find a free port that can be used
removes all projects from the application
adds a new reference in the table
set the profile
removes the loaded plug ins
set the profile services argument
returns the index of the project with the given name
this method removes the given reference from the list
returns an object instance from the given string of xml
get service list argument
remove a record from the list
this method is called by the plug ins vector when it
clears all services from the project
returns the number of projects
check if the given service is in use
returns the reference with the given name
count how many used services are in the list
this method is called from the main menu bar when the user
stops the search
returns the local port number that is used when establishing the connection
starts the search
stop the search
sets all items in the window menu to visible
a plug in was removed from this project
sort the list of services according to the list of
re starts the search
check if the local port is equal to another local port
registers a new j list class search engine with the given search criteria
get string representation of this bug
creates the default project structure
sets the busy state
sets the focus to the given index
stop the jade platform
getter for classes loaded property
check if the database is available
checks if the folder can be created
return true if jade main container is running
sets the connection to the database
sets the environment panel
returns true if there is a method in the ontology object
export the project
returns the environment panel
returns the current simulation setup
insert the methods description here
jade main container is running
return the current project
sets the current project
get the number of rows in the result set
sets the env folder path
set the model to be not changed but but notify observers
gets the value of the env folder path property
get the jgroups j list model
start a utility agent
returns the agents to start in this session
sets the agents to start in this simulation
get the jgroups j list model
returns the position of empty agents
re number agents to start
creates a new statement
open a jade system agent
registers the default list model4 function for the
sets the environment controller class
set the changed and notify observers
get an environment type by key
sets the update every value for this wsyetki kullanici
checks if simulation service is running
sets the current project
merges the agent list and the defaul list
sets the postion no of this news to the specified value
sets the message text
this method creates and stores a new simulation setup object
set the focus to this project
return a unique number for an agent with a suffix
set up the gui
sets the list membership
shows the error message
sets the list of agents
shows a yes no question
sets the agent list
stop the agent
the code set maximized code method sets the maximized state for the
load simulation and focus
sets the agent class reference
reset the error state
return the name of the first setup
return true if the jade agent is running
sets the reason the record was updated
returns the reason the record was updated
sets the err number
return the xml file that contains the suggest xml
returns true if this set contains the given setup name
sets the name of the project
set the plug in to be used by this instance
gets the plug in
set the head of this exception
save the current simulation setup to the file system
removes a plug in from this manager
gets a plug in by its name or class
sets the text to be displayed for error messages
this method will check to see if the plug in is loaded or
return the jade profile that this plug in belongs to
sets the plug in class reference2
returns the plug in class reference
sets the plug in name
sets the err
creates a new agent container
returns the plug in name
sets the combo box model4 agent lists
returns the current simulation setup
returns the err
set the class reference
returns the environment file name
returns the class reference
sets the current simulation setup
puts string in clipboard
this is the on plug in event handler
sets the name of the environment file
sets the curr sim xml file
formats the text
setter for property user runtime object
stop the agent container
returns the current sim xml file
convert an integer to a boolean
this method is called after the plug in is plug out
checks if the agent name given is already in the local registry
convert a boolean to an integer
adds a jmenu to the application main window
remove an agent container from this container
checks if an agent name already exists in the list
this method initializes this
adds the given jmenu at the specified position in the application window
setter for property exclude pattern
copies all bytes from an input stream to an output stream
copies a file
the boolean value
string value of the class
adds a jmenu item component to a menu
this method initializes j progress bar process
this method initializes this
start a agent
this method initializes j scroll pane
adds a jmenu item component to a menu
appends the text to the end of the line
gets the zip folder
adds a component to the application main window
start a new agent
returns the maximum number of lines that can be buffered in this
sets the maximum number of lines to be shown in the text field
sets the current job file
called when text is inserted into the text box
sets the zip source folder
removes lines from the document
remove the specified line from the start of the document
this method initializes j button cancel
remove the line containing the end of the document
this method initializes this
adds a component to the application main window
this method initializes j content pane
this method initializes j tabbed pane remote consoles
set whether the dialog was canceled
gets the zip source folder
appends a line to the output stack
start a agent
set the folder where the code should be unzipped
get the folder where the files will be unzipped
start a new agent
set the destination folder name for unzipped files
add an environment type to the list of environment types
return the location of the unzipped folder
returns the full path to the temp folder for the project
returns the project folder2 open
sets the project folder2 open
called from the observer to update the view
unzips the files in the given folder
determine if an object is already in the path
start the unzipping process
adds the source folder into the zip archive
called when the simulation setup has changed
this method is called when the application has changed the agent
called when the simulation setup has changed
called when the simulation setup has changed
called when the simulation setup has changed
this method is called when the simulation setup has changed
called when the simulation setup has changed
a plug in has been removed
a new plug in has been added
return the jade container profile
adds a new sub ontologies
removes a sub ontology
re load the resources
sets the distribution setup
sets the preferred size of the panel
saves the instances from the xml file
checks whether the given string is a valid value type
sets the instance of the onto args instance
sets the environments combo box model
set the onto args xml
creates a new number watcher object
returns true if this context contains a key with the given name
adds a set of files to copy
put a value in the current context
put a new name in the context
put a name byte pair in the context
put a name and a char value in the context
put a new name in the context
put a name value pair in the context
put a new variable to the context
put a name long pair in the context
removes a variable from the context
setter for property context
evaluate the condition
evaluate the condition
put a new name value pair in the context
put a name value pair in the context
put a name value pair in the context
put a new variable to the context
put a name value pair in the context
put a new variable in the context
put a name long pair in the context
setter for property context
this method is not supported for this implementation
prints the stack trace of this exception and the nested exception
prints the composite message and the embedded stack trace to the specified writer
set the exception type handler
get the exception class name
set the name of the parameter this tt header tt will be added
set the value of the parameter
gets the parameter value
get the component value
sets the flag that indicates that this exception was thrown in a composite
returns true if this method was thrown in a composite handler
set the exception handler that will be used by this servlet
returns an action request data copy of this action request
check if there is no data in this redirect
perform a redirect
returns a string representation of this object
sets the value of the log all type handlers flag
returns true if the given source type is found in the
start the service
checks if the source type is a dummy array handler
destroy the applet
prints a message to the standard error stream
pass all the form parameters to the request
returns the on return data for the given value or null if no
checks if the groups of the given set match the pre post invoke
checks if the action runtime has changed and if so reset the session
destroy all components that have been created for the specified thread id
helper method that handles an exception by error code and returns the
destroy all components of session with given id
destroy all application components
adds a method to the top of the stack
returns the name of the command in case sensitive fashion
add a new log to the collection of log
creates a template error with the given message and
prints message and possibly a template error message
the ce displays the number
the run operation
sine operation rotate decimal degrees
the cosine of the number
the square root of this number
powers the current expression
performs the operation
get the action method
get the named property from the underlying implementation
converts a file
returns the content type of the given source object
upload a file to the given destination directory
download a file
returns the number of downloads of a given file
returns the class loader of the runtime library repository
returns the message for the given key
validates the given user
returns the template with the given name
logoff the current user
check if the current user is an administrator
returns session id of current thread
destroys a session
gets the added item
destroys a component
returns the total price of all items in the cart
destroy the item list
returns the item that was edited
returns the context of the runtime
set the sql select statement
goto a row
moves to the first row
go to the previous page
returns the last retrieved table
returns a type handler for a given source type and target type
returns a new template
prints the stack trace of this exception to the given stream
this method prints the stack trace of this exception to the given
invoked before any of the underlying action instances are written to the
returns the template for the given key if available
returns the date as a string
adds a message to the message list
sends a message to a recipient
dispatch a message to all rooms
p clear all messages stored in this message manager
destroys the current user
logoff the user i
locks or unlocks the current room
returns the current room
leave the room
show a message to the user
verifies that the given email address and comment are valid
adds a new guest entry to the book
clean up any resources
destroy all components in the persistence store
returns the value of global property
return an asclass loader for loading classes from the repository
destroy a session
returns the current code context code
used to clone a buffered image
called after the registration
called when this resolver is unregistered
the user clicked on the html page
fired when the user clicks on the send button
fired when the user types in the name field
this is the entry point method
construct a printer exception with the default detail message and the
add a waypoint to the list of waypoints this garage sale has
remove a waypoint from the garage
gets the waypoints that are stored in the garage
returns the map kit
constructor for garage sale rank invalid exception
constructor taking a single string argument
adds a category to this category
returns true if the cache is full
removes a category from the model
returns the number of sales points in the database
specifies a note for this post
returns the id of this event
disconnects from the database and cleans up
check if a user with the given id exists
returns the name of this user
gets the phone number of the user
returns the zoom object for this component
returns the home position
tests if the category exists
returns the user id
register a new sequence with this key
returns the next value of a key
indicates whether this level object represents the minimum level
indicates whether this level object represents the maximum level
constructor for a garage sale rank
returns the rank of this card
returns true if this card is a rank max
returns true if this card is a ranked min
move this node up
decreases this rank by 1
returns a string representation of this object
check if the saleid already exists in the stock
this clears the sales and register of data
resets all the filters
updates the given storage
returns true if the device supports dvbscapable
opens a stream
returns whether or not this connection is to a client supporting
returns whether or not this connection is to a dvbt or not
sets the frequency of the monitor
gets the frequency
returns an input stream on the device registry
return the property value for the given property id or null
upon activation attach to the model element as a property change
upon deactivation detach from the model element as a property change
upon activation attach to the model element as a property change
upon deactivation detach from the model element as a property change
handles the event that the wizard page is complete
returns true if the page is complete
stores the configuration element for the wizard
upon deactivation detach from the model element as a property change
upon deactivation detach from the model element as a property change
upon deactivation detach from the model element as a property change listener
disposes this control
opens a table in the editor
closes the editor
redraws the specified cells using the given rectangle
redraws the cells specified by the given range of rows and cols
used to layout the graph
adds nodes to the graph object
set the active layout manager
opens the editor in the focus col of the current cell
sets the width of the line when selected
this method is called when the user changes the order of the
sets the layout constraint for a child figure
this method is invoked when a child of this component has changed its
adds the cell selection listener
adds the cell resize listener
removes the cell resize listener
sets the row selection mode
sets the multi selection mode
returns true if rows are selected in the list
returns true if the list selection mode allows multiple selection
sets the selection to the given cell
returns true if the given cell is selected
this method is called upon plug in activation
this method is called upon plug in activation
this method is called upon plug in activation
set the endpoint address for the specified port name
set the endpoint address for the specified port name
get the number of milliseconds that have elapsed since the last input event
performs the login to the server
returns the display name of the user
returns the total to do for a project
returns the current iteration
gets the task time in hours
sets the iteration
sets the project
sets the builds value for this build obj
sets the content value for this attachment
sets the build definitions value for this build file
sets the children value for this project
sets the revision history value for this get version result
sets the workspaces value for this service
sets the default project
sets the iterations value for this api iteration
sets the results value for this query result
sets the default workspace
sets the attachments value for this attachment map
sets the parent
sets the releases value for this get resources result
sets the users value for this user list
sets the allowed query operators value for this attribute definition
sets the allowed value type value for this attribute definition
setter for property allowed values
sets the children value for this hierarchical requirement
sets the defects value for this defect suite
sets the parent value for this hierarchical requirement
sets the results value for this test case page
sets the release value for this service
sets the predecessors value for this hierarchical requirement
sets the steps value for this test case
sets the test folder value for this test case
sets the tasks value for this job ticket
sets the projects value for this service
sets the work product value for this get version result
sets the successors value for this hierarchical requirement
sets the type definitions value for this invoke info wrapper
sets the workspace configuration
sets the object value for this get properties rs
sets the test case value for this test case step
sets the attributes value for this service attribute definition
sets the parent of this type definition
sets the user permissions value for this s web metadata
sets the user profile value for this user
sets the customer value for this order type
sets the detected in value for this wsyetki kullanici
sets the subscription value for this add company report response
sets the workspace value for this s web metadata
sets the artifact
sets the build definition value for this build
sets the group detected by value for this wsyetki kullanici
sets the revisions value for this file
sets the iir value for this wsyetki kullanici
sets the discussion value for this post
sets the user iteration capacities value for this iteration
sets the children value for this test folder
sets the release test needed value for this defect
sets the parent
sets the test cases value for this test case response
sets the user value for this service
sets the siebel cr value for this wsyetki kullanici
sets the story source value for this job ticket
sets the duplicates value for this defect
sets the requirement
sets the test case result value for this defect
sets the neededfor release value for this job ticket
sets the scopeof release notes value for this wsyetki kullanici
sets the textforsomething value for this user dto
get the thread that is viewing this panel
register a new view
unregister the view
register a new view thread
unregister the current view thread
register a controller with the system
unregister a controller
start the application
start the thread
shuts the view down
registers a new ai
unregisters a ai
registers a thread to the ai
unregisters the current thread
register a new physics device
unregisters a physics object
adds a thread to the physics engine
unregisters a physics thread
registers the given content instance with the content handler
unregisters the content instance into the system
registers the model
unregisters the model from the data store
test method for
called when a trackwheel is unclicked
called when the trackwheel is rolled
this method is called when the message processor is done
constructor setting an xml dom map for chunking
returns the speakers
returns a page events object
this method returns a handler which can be used to load the xml
setter for property back
compares this object with the specified object for order
sets background color of the container view
setter for property front
sets the side image of the panel
returns the pdf document
gets the percentage of the progress bar
utility method to print the document is finished
checks to see if the error has occured
getter for application keyword
sets the value of the application keyword property
create an instance of
gets the value of the vendor id property
create an instance of
create an instance of
sets the value of the vendor id property
create an instance of
gets the current ring number
sets the value of the ring number property
contract ref id
gets the value of the error field property
sets the value of the contract ref id property
sets the value of the error field property
application ref id gets the value of this field
sets the value of the error text property
sets the value of the application ref id property
returns the application name
sets the value of the application name property
gets the value of the application short description property
sets the value of the application short description property
gets the value of the application long description property
sets the value of the application long description property
gets the content rating
sets the value of the content rating property
gets the value of the tax category property
sets the value of the tax category property
gets the value of the content type property
sets the value of the content type property
returns true if the enterprise flag is set
sets the value of the enterprise flag property
get the enterprise id
sets the value of the enterprise id property
returns a sha 1 message digest instance for the receiver
returns a string representation of the object
returns the message to be displayed to the client with error
called when user logs out
checks if the remit address for the allianc server is already
helper method that validates an image width and height
get the hibernate configuration string
set the hibernate configuration file name
validate that the user entered the initial approval from the
this method is called when a
returns the event with the given id
delete the pojo from database
persist the given transient instance
find object by id
get event lite object for event id
this is the entry point method
send the event to the event system
called when the idle loop has been called
grab an event
announce our name
adds a node to the list of children
get the development version for the api
produce new menu
checks if all plugins are installed
starts the plugin
load the plugin
unload the plugin
returns the news of the article
the default method for displaying greeting
notifies the engine that a change in the engine has occurred
the run loop
called by the main applet to indicate that the plugin was
this method does nothing by default
sets the grails job name
sets the job data as map
set the start delay in milliseconds
sets the job detail
sets the job data as map
sets the names of the triggers listener
sets the job detail
this method is called when a step is received
converts an aat file
converts a form input into a test step
returns a test step that verifyes the title of the inserted title
adds the step to the invoke step
returns a test step that is inserted into the test link
returns a test step that matches the given text
creates a test step element from a link
creates a test step with the given text
verifies the text of the title
counts the number of files in the given directory
checks if the text of the link is ok
build a webtestrunner that will perform the conversion
verifies the web test status
show an error message when a host is not found
show an error message if the page was not found
show error message in the exception stack
sets the checked state of this button
disposes the toolkit
saves the multi page editors document
saves the contents of the editor as another file
sets the label text
we will initialize file contents with a sample text
we will accept the selection in the workbench to see if
adds an editor action to this editor
send the ok button to the ok dialog
convert the contents of the item list to a vector
returns a vector containing the values of the form
wrapper for calling the active x method with input parameter s
returns a vector containing all the windows currently in the window list
returns a vector containing the elements of this select list
initializes the browser
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
resets the number of times to the default
copy the vector into a vector
wrapper for calling the active x method with input parameter s
finds the first element with the name
fires when the state of the command has changed
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
determine if there is an option selected in the option tree
wrapper for calling the active x method with input parameter s
reset the instance variables to empty values
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
waits until all threads are done and dispatching
the click method is called when the button is clicked
fires when the document is complete
wrapper for calling the active x method with input parameter s
gets the selected option
checks if the given text is in the document
wrapper for calling the active x method with input parameter s
reset the wait time for the thread to default
returns the select object with the given name
fires when the download operation is beginning
returns a vector containing the elements of this list
returns true if this picture has frames
wrapper for calling the active x method with input parameter s
fires when the download operation is complete
wrapper for calling the active x method with input parameter s
gets the option based on the text of the option
returns the instance of the ie dialog
get all the frames on the desktop
this method returns a vector containing the option objects
wrapper for calling the active x method with input parameter s
fires when a new window is to be created
sets the selected option
indicates if this page has forms
fires when the full screen property is changed
wrapper for calling the active x method with input parameter s
handles the menu bar event
wrapper for calling the active x method with input parameter s
fires when the virtual machine quits
sets a value for this input object
test that find link works
wrapper for calling the active x method with input parameter s
fires when the status bar property is changed
test the various stuff for the address bar
wrapper for calling the active x method with input parameter s
finds the specified link
naviate to page
wrapper for calling the active x method with input parameter s
find the form by name or id
test the get element by id method
wrapper for calling the active x method with input parameter s
fires when the visible property of the object is changed
sets the instance of ie
test the get document method
wrapper for calling the active x method with input parameter s
this test case will fail in hosted mode
wrapper for calling the active x method with input parameter s
this method initializes ie
test the method that runs in a non ui thread
finds the a link by id
wrapper for calling the active x method with input parameter s
test the full screen
assert that the page title is the same as the title
test new child browser
wrapper for calling the active x method with input parameter s
test the full name
wrapper for calling the active x method with input parameter s
returns true if the document is done and false otherwise
find the input of the specified type attribute in the filtered list
p returns the busy property of this code gate code as a boolean
wrapper for calling the active x method with input parameter s
find the input button from the form based type button id
wrapper for calling the active x method with input parameter s
find the input button from the form based type attribute of button
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
assert that the text is not present
wrapper for calling the active x method with input parameter s
checks whether the text is present in the current document
wrapper for calling the active x method with input parameter s
resets the state of the test
wrapper for calling the active x method with input parameter s
reset the ie
wrapper for calling the active x method with input parameter s
this will wait the current thread until ie is no longer busy
sets the max wait count
returns the max wait count
sets the wait sleep time
returns the time in milliseconds after which the thread has been sleeped
finds the first link with a given name
returns true if this document has any links
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
obtains the root element of the document
wrapper for calling the active x method with input parameter s
wrapper for calling the active x method with input parameter s
finds the first element with the name and value given
find all the elements in the vector with the given name
finds the first with the name
print links on the page
returns the host peer
sets the host peer
run the event loop
sets the tls peer to be the current one
unsets the tls peer
removes a timer listener
adds a neighbor to the list of neighbors
removes a neighbor
update an existing finger with a new finger
gets the max distance
is this a datagram
returns the source address of the packet described in this object
returns the destination address of the packet described in this object
sets the message size
returns the message size
returns the neighbor manager for this agent
sets the tls peer to be the current one
initializes the factory
returns the delay in seconds between two given messages
get the measurement logger
returns the peerlet of the given class or null if no peerlet is
returns whether or not the given messages are rejected from this
sets up the interface
instructs this device to stop running
returns the network address of the host
returns the delay loss network model
returns the number of addresses that are available for use
broadcasts a message to all peer
retrieves the network address of the remote node
returns the current global state
adds a link to the list of links
set the bandwidth capacity
allocates a network address for this node
returns the network interface for the given address
a new incoming connection has been established
a connection has been completed
called after an outgoing connection has been completed
called when a connection attempt failed
a connection was canceled
returns the topology
stops the stop watch
called after a connection has been completed
update the rate bandwidth with a new rate
clean up a connection
adds a bandwidth monitor
removes a bandwidth monitor
adds an uplink to this node
add a link to the downlink list
defreezes frozen state
freeze this relation by changing the rate of all relations
tries to match a server side node with another node
return a string representation of this object
adds a pending bandwidth allocation to this node
removes the given bandwidth allocation from the bandwidth set
adds node to the list of nodes which connect to other node
adds a filtered message class to the list of filtered message classes
returns the queue associated with the given destination
enqueues a message for delivery to the network
removes the first message in this queue that matches the specified
removes 1 hop from the cons treeze 3 hops
defreeze the node with the given altro number
calculates the values for bwproval
logs a message with the given values
merge this log with another and set the result in this
returns the aggregate that has the same stats as the two given tags
returns an aggregate for a set of tags with the given tags
get the epoch number
get a new sink if the number is non negative
get the measurement log used by this measurement manager
append measurement log to this aggregate log
return the sink for measurement epochs
returns the number of appended logs
logs a message with the given set of tags
initialize the measurement
create a new delay loss network model
initialize the simulation
this method is called after the peer has been initialized
run the simulation for a specified time
get the measurement sink if one exists
returns the currently executing peer
removes and returns the next event from the queue
returns a string representation of the scenario events
sets the currently executing peer
merges this scenario into another scenario
executes the method corresponding to the given peerlet
create the line topology
stops a connection
create the topology needed for the overlay
deactivates this ownable
returns the execution context
sets the execution context
called when the execution context is entered
called when the execution context is about to leave the current
initializes the factory
called when the execution context is entered
broadcasts a message to all peer
sets the delay
the connection failed
calculate the number of connections that are available in the period
adds the data to the network
mark the start time of a timer event
loads properties from a given file
returns the time marked at the end of a given tag
log a message to the log
merge this aggregate with another log
merge the data of this aggregate with the measurement log
returns the aggregate that has the given tag
returns the aggregate that has the given ids
returns the aggregate that has the given ids
logs a message when the current thread is started
logs a message at the current repository
logs a message at the current epoch
returns an aggregate for a set of tags
log a message with the given values
get the measurement log
returns an aggregate for a specific tag set by epoch number
returns an aggregate that contains only the given datarange
returns an aggregate that contains only the given datarange
returns the minimum epoch number
returns the maximum epoch number of the genome
initializes the measurement system
return the sub measurement log with the given start and end epoch
initializes the peers in the given range
removes the specified number of peers
adds a new peer to the list of peers
starts all peers in the given index
runs the simulation
returns the execution context
set the execution context for this thread
leave the execution context
return the root measurement log
get the root measurement logger
add a message attachment to this message
get message attachment by class
returns the delay in latitude between two nodes in the network
returns the neighbor manager
initializes the factory
starts the peer in a new state
broadcast the given message to all registered measurement network interfaces
returns the network model
init the live run
logs a message at the current trace level
create a network model with the default delay value
logs a message at the current trace level
allocate resources and start simulation running
runs the simulation for the given time
create a view manager
sets the bootstrap peers
increase the age of each finger
initializes the finger table with the default age
increases the age of a finger descriptor
select a peer
increases the age of a finger
gets the age of a finger
sets the age of a finger
randomly permute the finger
returns true if two finger descriptors are the same age
selects a finger descriptor in the list
gets the oldest descriptor in the list of neighbors
fills the list with a list of finger descriptor objects
adds a descriptor for a type
remove a descriptor
removes the head of the view
returns the descriptor for a given type
replaces the descriptor of the given type with the given new descriptor
indicates if the given enum has a descriptor for the given type
gets the network address of the finger
gets the peer identifier
clone the descriptor
returns the neighbor manager of this peer
gets the finger descriptor associated with this finger
registers a new descriptor with the manager
unregisters the given descriptor type
return a random finger descriptor from the pool
return a random finger
timer bootstrapping
perform action on a message as to be a view
permutes the list of items to the given destination
this method should be called after every block that needs to be downloaded
schedule measurements to be added to the channel
adds a block as being downloaded
adds a new upload block to the history
enqueues the main layout thread
sets the frame available
this method should be called on every call to get gcblocks
notifies all players that a playout has been resumed
handles the response to a g2 g child
handles the arrival of a g2 gdownloads response message from the daemon
a convenience method that returns the time of the layout length
adds a frame to the list of frames
allocate a frame for writing
allocate a block according to the current state
returns the current playback time
returns the frame for the specified daily frame
allocates a block
allocate a chunk
allocate a frame for asynchronous call that will return the data
returns the block descriptor for the first unrequested block
this methods is called when the immediate stop is being
this methods stops the peerlet
gets the arrival time of this bus
sets the arrival time of this bus
get the leaving time
sets the leaving time
returns the current online time of the agent
creates the peerlet and adds it to the list of peers
starts a new transmission
blocks all transmissions of a piece that has been transmitted by anyone
allows an external class to remove a transmission
update the rate
sets the torrent file
returns the rate of bandwidth being used by this bandwidth object
if the transmission timer expired remove it from the peerlet
not the same as get shared file but returns a reference to the
checks whether this piece belongs to the given message
sets the has complete flag
determines if the file is complete
gets the number of not requested chunks
retrieves a chunk from the file
checks whether the given chunk index is complete
creates a new chunk state for the given chunk id
returns the block that contains the given block descriptor
remove a block from the list of blocks requested
sets a block as canceled
returns true if the given block has been requested
gets the total percentage of chunks that have been completed
handles a bitfield message
handles a have message
sends a block transmission to the node
this method is called whenever a finger is expired
creates the alive timer
informs the tracker that a new request message has arrived
handles the cancel message
handles an interested message from a peer
called when a new block is available for receiving a message
handles a choking message
handles a not interested message from a peer
handles a piece message
called when the block has been canceled because of a request from the
handle a tracker response message
this method is called if the send keep alive timer has expired
sends a tracker request message to the peer
returns the current have suppression strategy or null if none
sets the code have suppression strategy code
sets the alive interval
sets the number of want
called by a new peer when it passed a list of peers
check if this node has at least one neighbor
acknowledgement for a peer leaving a finger
handles an accept handshake message
handles the case of a reject handshake message
sets the time of checking neighbors interval
sets the time interval for checking the local nodes alive
set the request peers mechanism
called when a keep alive interval is expired
handles the received handshake message
sends a message to the peer that the interested status has changed
creates a new connection state
gets the connection state
returns the state of the file sharing peer
adds a pending finger to the list of neighbors
removes a pending neighbor
verifies that this node is at least below its neighbors
returns true iff this node is allowed to connect to a new node
returns the block at the given index
return true if this procedure should be executed completely
returns true if the request is in progress
returns true if all the blocks have been downloaded
sets the currently executing peer
marks the currently executing peer as null
initializes the factory
merge the data of this aggregate with another log
initializes the measurement system
initializes the peers in the list of peers
starts all peers in the list
kills the task
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j text field3
this method initializes j text field4
this method initializes j text field5
this method initializes j text field6
this method initializes j text field7
this method initializes j text field8
this method initializes j text field9
this method initializes j text field10
this method initializes j list2
getter for cant sentencias gets
setter for cant sentencias sets
setter for cant sentencias con offset sets
setter for cant palabras sets
setter for cant palabras sets
setter for ponderacion relaciones sets
setter for funcion sets
getter for tipo gets
setter for tipo sets
setter for numero sets
setter for clase semantica sets
getter for cant sentencias con offset gets
getter for cant nombres consulta con offset gets
setter for cant nombres consulta con offset sets
setter for genero sets
getter for numero gets
getter for genero gets genero of the program
getter for child functions gets
setter for child functions sets
setter for function sets
getter for base syntactic function reference gets
setter for base syntactic function reference sets
setter for word sets
getter for clase semantica gets
setter for freeling2 consulta sets
start the bot to the device
the run method for the location listener
disconnect from the device
get the longitude of the point
stop the thread from receiving data from the device
return kilometer speed in kmh
returns the number of satellites
get latitude direction
sends a message to the server
longitude direction accessor method
sets the number of satellites
sets the latitude direction
set longitude direction
open the window
perform the actual integration of the arrays
tests session creation and retrieval
test destroys the session
test login for
test get element text
tests connect disconnect connect sequence for a group with two members
release this connection
commit this connection
rollback this connection
closes the database
sets this connections auto commit mode to the given state
returns true if the result of the task is available
gets the result of the call
checks if a database exists in the database
indicates if there is a result available
blocks until the result of the player has reached its mills
write a message to the output stream
accept the visitor
issue an error
set the value of this constant
evaluates the condition
simplifies each and expression
prints an internal error message to the log4j logger with the
evaluates an expression
set the value of this constant
the default implementation throws an code mobisnap
not implemented yet
the implementation of this method should not be used
checks if the parameters are correct for this operation
simplify this node as a jml simplenode whose values are replaced
associates the reservation with a rsrvrecord
gets the reservation use base
returns the sqlnull instance
throws an exception since this class is not implementable
set the value of this constant
evaluates the given msql type and returns the value of the condition
simplifies the precondition of the given type by removing the parameter in the second
simplifies the expression by creating a simple node value
returns a database definition for the sql statements in the given reader
set the value of this constant
generates source code
evaluates the expression
set the value of this constant
evaluates the given msql type and expression
the source code is used in the method
this method is used to insert the names of the variables
puts the current scope
returns the value of the statement
simplifies an expression by removing some simple nodes if possible
sets the value of this constant
evaluates the condition type and returns its value
set the value of this constant
set the value of this constant
simplifies each term in the ors
set the value of this constant
accept the visitor
returns the value of the condition
process the children of this node
simplifies the condition by removing simple node values
returns the value of the statement as an object of the given type
evaluates the given msql type and returns its value
the java source code is used in this method
simplifies the expression by removing additional conditions
simplifies the return value of the or statement
source code generation
the implementation of this method is deprecated and should not be used
retrieves a value of this parameter in the provided parameters
auxiliary node for concatenation
set the value of this constant
evaluates an and expression
simplifies the ands the condition by removing the result and
initializes the transaction
initializes the sql interpreter
returns the database definition
creates a snapshot of the current state of the interpreter
called from within a snapshot to update the ast
returns the reservation
creates a table for the given map
drops all table entries from the specified map
create an astsqlstatement
evaluates an expression
add a new reservation to this batch
add reservation to be used on the server
commit reservations to the place
rolls back reservations
looks up a reservation on the table and returns it
returns the value of the statement as an object
returns the reservation at a given table column and conditions
process the data from the given reader
checks if a reservation is in the database
commit changes to the database
returns a string representation of the object
empty implementation of the rollback method
changes the reservation number stored in this mobi
checks whether the mobi triggers an update of the database
checks whether a simple reservation is needed
the code to string code method recursively converts this expression to a string
checks if a reservation is in the given table and returns it
returns a string representation of the object
this method is invoked before each service
post the actual execution of the mobi service
checks whether a reservation of a given table column is present
checks whether a simple node is within a reservation only
checks whether a reservation is possible with the given column and
returns a string representation of this object
checks the reservation conditions for a
add an object to the used list
checks whether there are any conditions to re check on the given specs
checks whether all required fields are filled in
returns a string representation of the reservation column
checks whether the method of this class is expected to execute the
this method returns true if the user is logged in
processes an application message
renders the result set
creates a new server process for the given socket
returns the remote ip address
creates a new session with the given user id and password
initialize command with parameters
adds a set of parameters to the set of parameters for the specified
adds parameters to the query
configure the reader
read mappings from a given configuration file
returns the parameters of the specified class
read a mappings document from an input stream
adds the given command to the given class name
process the mapping element
get the text of the element
returns a hashtable with the parameters in given list
start the groupchat
returns the session id
stop the listener
returns the time stamp created
executes the command
register a new group listener
return list of group view
return the local address this port is connected to
convert list of view instances from list of replica group ip addresses
leave the current group
sends a message to all connected clients
method for receiving messages
notification that a client has suspect
called when the view has been accepted
returns a list of group listeneres
gets the admin user value for this user
sets the admin user
obtiene el valor del atributo lista paginas
returns whether this user is a root user
sets whether this user is a root user
retorna lista templates
obtiene el valor del atributo lista textos
obtiene un lista textos ordenada
obtiene un lista usuarios
retorna lista imagens
retorna lista links
m todo para recuperar uma paginas
remove imagem from lista imagens
retorna uma lista de uma templatea
sets the titulo value for this wsyetki kullanici
retorna a lista de links
add a link to this container
obtiene una lista usuarios
remove a link
m todo para recuperar uma lista textos
obtiene una lista textos ordenada
m todo para retorna lista imagens
sets the template id value for this job ticket
sets the lista texto value for this wsyetki kullanici
sets the lista imagem value for this usuario
sets the lista link value for this wsyetki kullanici
add a link to the database
metodo que encapsula o metodo remove imagem de gerenciador de gerenciador
sets the tipo pagina value for this wsyetki parametre
remove a link from the database
sets the descricao value for this wsyetki kullanici
sets the texto value for this wsyetki kullanici
sets the nome value for this wsyetki kullanici
sets the imagem value for this wsyetki kullanici
setter for property base location
sets the localizacao value for this wsyetki parametre
sets the texto alternativo value for this wsyetki kullanici
set the value related to the column pagina principal id
sets the base location value for this job ticket
implement length limitation on top of the code read code method of
read a hex byte from the file
returns the number of seconds since the game was started
performs the actual step
plays a teleport
returns true if the connection is established
returns null if the typed string was invalid
this method clears the dialog and hides it
get a string representation of this location
receive notification of character data inside an element
checks whether the current user has permission to access the specified group
check if the user is the owner of the page
decode the page
load the language object
cancel cell cancel the active cell if any
submit cell gets the current cell
this method is used to set the state of a member to a
if a pbi is selected and this is updated
save sprint measure
update sprint measure
returns the number of tasks
sets the number of tasks
sets the number of task that are done
getter for property nbtasks done
get the day of the week
get the sprint related to the key
add a table
calculates the total sprint of the product backlog in the sprint
creates a test project on the right side of the test sub backlog
removes all html tags from a string
set the content of the node
scrolls the list to the current release if possible
modify window on release browser pbi
save the given sprint measure
this method should be called every time the sprint measure changes
returns the current image reader spi
returns the image writer spi for this image writer
checks if toolbar is visible
sets the tool bar visible
gets the image
sets the image
set the zoom factor for the main panel
gets the current zoom factor
the code property sheet viewer code implementation of this
returns the background image area
sets the background image area
refreshes the image panel
this operation is completed
enables or disables the widget
returns true if the popup menu is enabled
sets the popup menu enabled property
adds an action to the toolbar
removes all actions from the toolbar
removes an action from the toolbar
repaint the zoom window
repaint the image with the given bounds
checks if transparency pattern is visible
sets the transparency pattern
resets the ui property to a value from the current look and feel
adds a new jbutton which dispatches the action
sets the enabled attribute of the jtree component object
updates the view after the model has changed
accept the visitor
accept the visitor
test of get numero bus method of class cronograma
test of set numero bus method of class cronograma
test of get destino method of class cronograma
test of set destino method of class cronograma
test of get fecha method of class cronograma
test of set fecha method of class cronograma
test of get hora method of class com
test of set hora method of class com
test of to string method of class cronograma
test of get codigo method of class cronograma
test of set codigo method of class cronograma
adds an action mapping to this mapping manager
bean factory bean
adds the data definition br
method to log out the user
logs the cookies in the log
place this filter into service
getter for property projectdoc
setter for property projectdoc
gets the value of the projectplan property
setter for property projectplan
add a player to the village
delete village at given position
getter of the nb villages
returns the village at the given position
this method returns the field at the specified position
add a new village to the players village
gets the attack of this ownable
get the cost food
this method returns an ivillage from the given position or null if it doesnt exist
getter for property cost iron
this method returns the field at the specified position
gets the cost soil
get the cost of this ownable
gets the status attribute of the connection manager object
gets the type of this building
gets the food consomation
gets the current food
getter for property cur iron
returns the current soil
gets the cur wood
get the maximal food
getter for property max iron
get max soil
get max wood
sets the food consomation
set the maximum food
sets the max iron
set max soil
set the max wood
sets the cur food
setter for property cur iron
sets the current soil
sets the cur wood
returns the error page
adds a thread to the server
logs the access message
this method is called by the thread pool manager to notify about
description of the method
get the name of the remote log
gets the start threads attribute of the server object
log a message
log message for emerg
return the number of active server threads
returns the raw request
log an alert
this is the main loop for the port listening
bind to the server socket and make sure that we dont
log message and priority of crit
get the number of bytes sent by the daemon
listens on the server socket connection
returns the number of idle threads
set the remote host name
log the message at error level
set the name of the remote log
log the message at warn level
returns the content type for the specified extension
gets the number of busy threads
log a notice
returns the content type of a file
sets the date of the log entry
log an informational message
sets the raw request
log the message at debug level
perform request in order to get access request
set the number of bytes sent
translates a relative uri to the file
get request to the listen listener
starts the request
decrements the pool of busy threads
get request to the error page
spawns new threads
test if a request file exists on the server
kills all threads in thread pool
broadcasts a message to all players
creates a bid from a seat
this method makes the dialog visible
returns the filename without the extension
returns the appropriate extension for the current compression type
sets up the standard output and sets the log file
establish the file
establishes the file that the code file writer code should be in
distribute an event
gets the position attribute of the field accessor object
return the value of the variable name
set the value of a property
get the stack trace
sets the name of this token
distributes an event to all registered handlers
this is the method that actually does the dispatching
creates a new string buffer
remove a handler from this event manager
removes the object from the hashtable
checks if event is interesting
returns true if the event field is enabled
add a handler to this handler set
add a handler for a particular event
bind the distributer to the rmi registry if the parameters
converts a color list to a color list
sets up the expressions and expressions for the filters
sets the color of the time label
set the function names to include in the analysis
sets the color of the relative time fields
set the function names to exclude from the search
sets the color of the exception
sets the color of the message
set the types that should be included in the generated code
sets the color of the objects in this list
set the regular expressions that should be excluded from the event
sets the background color of the thread
sets the classname color
loads the parameters from the specified code parameters code object
sets the color of the function
set the color for the specified event type
sets the color of an event in the graph
installs the map format for the event formats
adds all the unique names and default handler names
formats the given object
get the current position in the stack trace
formats the content of this document according to the specified format
returns a string representation of this object
returns the number of frames in the trace
close the output stream
converts a ansi sequence list to a color list
sets the color of the time label
sets the color of the relative time fields
sets the color of the exception
sets the color of the message
sets the color of the objects in this list
sets the background color for the thread
sets the classname color
sets the color of the function
set the color for the specified event type
sets the color of an event in the list of lines
adds a format to the format list
adds a map format to the list of known formats
adds a constant string to the parser
adds an accessor to this type
returns the root map
returns the format that matches the given key
looks up and returns formatter for the given key
looks for and returns the appropriate format for all interfaces of the
looks up and returns the format for the given class
the result is a format but it will be guaranteed to be returned
generate formats by name
start a sequence
maps the specified key to the specified format
set the default format
set the format for a field
set the format for a given class
clears the cache
returns a new string that is a substring of the string
skips whitespace characters
returns the name of the given object
prints the stack trace to the specified output stream
print the composite message and the embedded stack trace to the specified writer
loads the properties from the given properties object
loads the properties into the given java bean
set whether or not the method is accessible
get the accessible flag
loads the system properties
loads a properties file
loads the home file
adds a name value pair to the list
returns the value of the named parameter or applet
returns the value of the parameter with the given name or the default
method get int
returns the boolean value of the property with the given name
returns the boolean value of the parameter with the given name
gets the value of the first column with the given names
gets the value of a parameter
return all names matching regular expression
return the names of properties that match a regular expression
return a subset of properties whose name matches the given regular expression
return a properties object that contains a subset of the properties whose
this method is used to perform a subset of the properties
get an enumeration of the names of the property
get an enumeration of the values in the list
set the system properties
p load the system properties from the system properties
integrationate with the system properties
returns a string representation of the object
setter for property list
sets the format of the data in this field
prints a string with linefeeds between the command and the
prints the given object to the stream
print an integer value to the script
writes a byte to the client with no carriage return line feed
creates a new instance of the script
writes a character value to the client with a carriage return line feed
print a float value
executes the program
executes all of the buyers in this order
print a double value
sets the purchase price
writes a boolean value to the client with no carriage return line feed
calculate the speed of the fleet
get the current waypoint
prints the object with the field accessors
returns the transfer rate of this download
checks if this type is a child of the given parent
prints a name to the output file
retrieves the total hold time of the thread
get the start time of the arrival event
returns the rate of the file in hz
sets the date format
remember that an object has been printed
returns true if object has already printed
returns the transaction that created this lock
splits this offer by quantity and returns a new
find the best default name in the given name
returns a copy of this parameters object with all parameters
returns the value for the given variable name
fetches a name from the source file
return the best value for the given parameter or
adds a name to the set of variables
returns a prefixed name
removes any prefix from the name
returns true if the left value matches the expression
copies all of the properties from one parameter to another
clone this object
returns a copy of this instance
add a low priority source
this method initialises the data members that are used for the tests
checks if the given point2 d is inside the rectangle
add a source whose name is high priority
indicates whether or not this rectangle intersects the given rectangle
add a low priority source
add a source whose name is high priority to this source
returns whether variable bindings will be replaced automatically
returns the corner list for the polygon
returns a new rectangle which is translated by the given vector
returns the rectangle that is translated to the given position
returns the bounding rectangle of this label
returns whether comments are automatically eliminated
return the acme bump to an acme point
returns a new rectangle2 d whose interior corresponds to the
returns a new rectangle2 d whose width and height are resized
rotate this vector by a given angle
return a vector that is approximately projected on the plane
returns true if null values are automatically replaced by null values
normalized this vector
returns a line2 d reflecting the direction of the trajectory
normalize the local trajectory
returns the distance between this point and the one specified
returns the maximum distance between this point and the one specified
returns the euclidean distance between this point and the specified point
returns true if this point is near the intersection of the point
calculates the heading from current position to a given position
returns the angle of rotation from this point to the given point
returns the point that is offset by the polar distance
returns the point that is the distance between this point and another
translates from point2 d toward point based on ratio of distant
checks if the point is in the circle of the circle
checks whether the given position is inside the rectangle
returns the smallest position in a collection
returns the smallest rectangle that contains both this point and the
returns the closest point to the given positions
returns the closest position in the given collection of positions
returns the rectangle that contains this object
returns the rectangle that contains this rectangle
returns a point that is along the line
begin an offset by the extrapolated distance
returns the end point of the extrapolated distance
get the direction of the parallax
get the normal vector of this line
returns the intersection of the current line with the specified line
returns the angle of the vector
returns the length of this line
create a displacement of the specified length
returns the line with positive end order reversed
returns the vector
returns the intersection of the given rectangles
returns the intersection of the two given rectangles
returns a collection of objects representing the intersection of the
returns the closest intersection with the given collection of intersections
injects newlines into the source code
skips all white space characters
returns the regular expression of the match source
advance the position by num characters
advance by regular expression
advance the re expression
advance the re expression
returns the first matching regular expression
returns the regular expression that matches the last position in the
decreases the position by num characters
regular expressions are retreatened by this condition
this method is called when a re expression is found
creates a property source that will represent the properties
returns the string that can be used to create this expression
return the regular expression for this rule
add an applet to be used with this class
get the re expression
use the system properties
return the token at the given position or null if no such token
gets the token
return the next token as an int
returns the integer value of the maximum number of digits allowed in the
get the next integer from the string
use the given resource for the current thread
get a date object from the current time in the given format
returns the date object according to the format
parses properties from a string and stores them
sets the position of the cursor
substitutes all file separator characters in the value
returns true if the source string associated with this match
convert a not printable string to a printable string
substitutes the value of the shell name with the given value
prints the current state of the test
sets the constant
substitutes the values of variables with the values of the given name
remove the comment from the given value
if the value is null replace it with the null string
substitutes replace in the string
substitutes all references for the given variable
adds a new property to the map
look up the given source in the sources
returns true if the resolver contains the given name
gets the value for a name
get the substitution value with the given name or the given default value
get a named extra parameters value
return the value of the parameter with the specified name
returns the value of the named property as a string
returns the source with the given name
returns the configuration property with the specified name as a code
returns the configuration property with the specified name as an code
parses a string to an integer
returns the configuration property with the specified name as a code
returns the configuration property with the specified name as a code
get a boolean value from the object
returns the configuration property with the specified name as a code
convenience method for getting a boolean value of an argument
returns the results of the given parameter
gets the substitution values for the given name
get the filename for the specified file
get the file name from the file system
returns the name of the given source
returns an enumeration of names matching a given regular expression
returns an enumeration of names matching a given regular expression
returns an enumeration of names matching a regular expression
create a subset expression which uses a regexp
returns a copy of this parameters instance with the regexp to be used
a regexp substitution is a subset of the parameters
returns a string representation of the query
gets the datos opciones
set the datos opciones bean
gets the datos alumno
getter for property datos respuesta
gets the datos cursa
gets the datos tema
gets the datos usu
set the value of datos tema
set the value of datos usu
getter for property datos eleccion
gets the datos profesor
set the value of datos profesor
gets the id opcion
sets the id opcion
getter for property id tema
sets the id tema
getter for property correcto
getter for property id alumno
set the value of correcto
sets the id alumno
getter for property enunciado
setter for property id tema
gets the value of id usu
set the value related to the column dt hora inicio
gets the id examen
set the value related to the column dt hora fin
sets the id examen
getter for property estado
sets the id usu
sets the id alumno
gets the value of puntaje
getter for property id materia
sets the puntaje
set the value of id materia
gets the habilitado of this periferico
set the tipo for the moneycard
setter for property habilitado
gets the cedula identidad
sets the value for cedula identidad
getter for property nacionalidad
set the value of id materia
gets the sexo of this usuario
sets the sexo of the user
getter for property telefono
getter for property fecha rev
setter for property fecha rev
getter for property respuesta
setter for property respuesta
getter for property id administrador
getter for property puntaje
setter for property id administrador
setter for property puntaje
getter for property sexo s
getter for property id profesor
getter for property tipo s
sets the id profesor
tipo method comment
sets the cedula identidad
sets the sexo of this hs hr users to the specified value
setter for property telefono
sets the hora fin
set the tiles definitions
validate the definitions in the xml file
sets if this map should be mutable
set the tile properties
creates the tiles container
creates a tiles container
removes the tiles container from this tile
test method for
test if the delete method works
test if delete blob data type works
adds a new country
generate a new country with identity generator
should generate a country with sequence
test the add country with uuidgenerator
test insert clob data type
test if clob data type is deleted
test if delete is successful
returns the raw string
convert the time from s to tba
sets the pattern for the internal patterns and the raw string
returns the current location
returns the string representation of the day
returns the max room cap
returns the string representation of the instructor
get all semester for a particular campus
returns the current time
get all subject filtered by the specified attributes
returns the day
prints variables to stdout
this is the entry point method
set the semester text value
gets the value of semester text
set the semester key
get the semester key
must refer to a valid module that sources this class
sets the subject of the message
gets the value of campus name
sets the campus name
set the course name
gets the campus code
sets the campus code
returns the name of the course
sets the course name
gets the coursename
creates a horizontal panel
set the crn value
gets the value of crn
creates a vertical panel
set the section
set the coursenumber value
gets the coursenumber
set the coursedescription property
gets the coursedescription of this coursed
set the coursecredits value
gets the coursecredits of this hs hr course
set the college value
getter for property college
set the totalmaxenrollment value
getter of the totalmaxenrollment
set the totalcurrentenrollment value
getter of the totalcurrentenrollment
set the totalseatavailable value
gets the totalseatavailable
sets the totalseatoversold property
returns the totalseatoversold
sets the percentfull
gets the percentfull
set the coursestatus value
gets the coursestatus
set the semester value
gets the value of semester
makes a label with the given caption and style
set the ssh
gets the ssh
displays a message in the status line
set the timelocation value
getter for property timelocation
set the department value
sets the status text
gets the value of department
sets the division
clears the status text
called when the history token changes
set the instructor
sets the location of this site
gets the value of timeday
set the timeday value
sets the time
gets the value of days
set the days value
set the attribute value
returns the iconv for the given java argument
create a new string and return it
creates and returns a new ruby string object
called from the runtime to let the program run as a hook
called by the ruby runtime when the streams are ready to use
read next character from stream
pushes next character to the source text
peek at the next byte from the stream
read a wrapped byte from the input stream
search for the given string in the given context
integrate the results of a separate inspection into the state of this
set the support for parsing
creates a new variable with the given arguments and sets
reads a comment
rb ary subroutine
returns a sub block of this object
returns the value of this variable in the given context
returns the g sub bang of this object with the given arguments
dispose of this thread group
index the given object in the given context
rbindex lookup
returns the ruby exception thrown by this method
returns the result of this function if the argument is a aref
sets the operation to use for a resource string
gets the super class
returns the slice
this method creates a new include for the given super class
converts this array to a i
gets the class with the given name
split this expression into two array
returns the leftjust of this property
returns the right hand side of this assignment expression
search for method with the specified name
return the dynamic method with the specified name
search for the given
return the center of this array with the given array of arguments
the same as
define a new class under the given name
define a new module in the runtime by its name
returns the bang of this functor that passes the argument
sets the method visibility for this class
export a method on the module
returns the result of this function with the given arguments as the
sets the current value for this field
this is used to convert the byte range to unicode
tries to convert this object to a ruby string using the given arguments
the java array list to be used in the java code
returns the value in the given context
rb ary subseq
rb ary subseq
removes the given values from this array
returns the value of the array at position 0
sets the i basic i flag with the given array of arguments
reads bytes from this file into the specified buffer
writes bytes from our internal byte array into the specified byte buffer
closes this file
returns the first object in the array
returns the last element in the array
returns a slice bang of this array
finds the class variable with the given name in this module
is the given class variable defined
evaluates a scriptlet in the current scope
parse and execute the given script
parses xml config file
search for a constant in the ruby module
is constant defined
gets the module with the given name
gets the module with the given name
rb class lookup
gets the class with the given name
is the given module already in the list of internal variables
search for an internal module variable
behaves similarly to
define a new module
tries to create and return a module with the given name
the level of the passive check
the level of the safe ability of the agent
create module errnos variables
create a system error in the processing of the exception
returns the cache map
returns the top self
gets the true
gets the false
returns the nil object
checks whether this collection contains a specified value
returns the fileno of the guid
get the file descriptor
wait until the socket is ready
is this channel file stream seekable
setter for property can be seekable
this is used to determine if the channel is a null channel
close this filme
determine if the channel is writable
returns a string representation of the current java mode
indicates if the component is read only
this method is used to finalize the code
indicates if the value of this property is readable
returns whether this message is binary
determine whether this creature is a create
indicates if the value of the key is writable
returns whether this method is exclusive or not
returns true if this text can be used to generate sql
returns whether or not this column is truncated
flush the buffer
throws an exception if this object is not open
returns the mode flags that this type is derived from
checks if the given mode is supported by the implementation
duplicate the underlying channel descriptor
create a new channel descriptor that wraps this channel descriptor
mimics the posix dup2 2 function
seeks position of file whence is set
flush the buffer if it is not already read
ensures that the buffer has at least one buffered reading
write a byte buffer to the file
write a buffer of data to the stream
writes a list of bytes to the stream
ensure that the stream is not flushed
writes a portion of a byte list
write a single character
close this fillable
sets the adler
sets the adler ref
returns the index of the given hash value
returns the value to which this map maps the specified key
invalidates the buffer
sets the adler32 checksum
sets cr state information from a persistence state
returns the next element in the iteration
returns the next character in the string as an int
throws an unsupported operation exception
initialize this sequence
compares the base of the two unicode strings
returns a string representation of this uuid
returns the length of the string
calculate string offset from the next char offset
append a character to the end of the string
prepare for the next collection
returns the length of the string after zeroes
change the string from the compiler
add the string representation of the argument to the string
change the character encoding of the string
change the byte from the original string to this one
construct a new ustr sstrcat with supplied information
append another information about the information
make this object represent the same object
strcmp 0 base
strcmp 0 if this method returns the same value
get the unicode string equivalent to a specific character
get the unicode string for a character
get the string representation of a littlestr
create a string containing the characters of this string
concat this string to this
returns true if the string ends with a suffix e
returns true if this string ends with the specified suffix
rb ary new instance
compares this object to the specified object
returns a hash code value for the object
returns the index within this string of the first occurrence of the
attaches this object to the object space
index of an us string in this string table
find the index of a character in the string
return this unicode canonical representation of the string
rb class inherited reversed semantics
searches in this string for the last index of the specified character
is this doc item a module
returns the index within this string of the last occurrence of the
get index of an array of us
find the last index of a character in the string
replaces a character within the buffer with a new character
does this character start with us
rb make metaclass
does this string start with the specified offset
gets the java class of this value
get a substring of this string
sets the meta class
returns whether this vm is frozen
sets the frozen state of this component
check if this test is frozen
returns whether this is a tainting method
setter for the taint flag
rb singleton class
rb singleton class clone
call a super class for a class
returns a java string representation of the given object
tries to convert this object to a ruby array using the to ary
tries to convert this object to a ruby hash using the to hash
tries to convert this object to a ruby float using the to f
tries to convert this object to a ruby integer using the to int
tries to convert this object to a ruby integer using the
tries to convert this object to a ruby string using the to string
returns the same value as
rb check string type
rb check array type
returns the number of segments in this container
evaluates the statement under the object
evaluates the under under block
returns true if the other object is a method which is not a
verbose is a java object that contains a list of all packages
setter for property verbose
returns the debug object
setter for property debug
if the environment variable is on the system
the system properties
copies the special instance variables
get the current thread context
returns the priority of the message
alias a variable with a single name
returns the load service
call a method is called in a block class by a caller
returns a new method representing the same class as this one
sets the arity and arity of the given annotated method
returns a string representation of this member
the initialize operation is a static reference to the runtime object
the code push exit block code method pushes the exit block onto
call a method called in the context of a class
call a method by a object
call a method by a object
call a method by name
call a method by a block class
call a method by a object
call a method by a object
call a method by a object
returns true if the given method is a callable from the given
returns true if the caller has protected access to the method in
the protected class
gets the module implementation class
sets the implementation class for this module
sets the visibility of the attribute
returns the dynamic method that this class encapsulates
returns call configuration
finds the method that should be annotated with the given method
set the call configuration
returns true if this is a native property
updates the frame with the given line number
updates the frame with the given name and line number
update the original frame as we are edited by the gui
update the frame as last frame
clear the object as being signed or actual type
duplicates this frame
this method returns the jump target
get the backref as last object
has the backref as last in screen
set the backref as last object
returns the dynamic scope
the root ruby module
get the last line as last line as last line
checks if this parameter is given
has the system last record as lastline
set the last line as last line as last line
lazy backref and backref and lastline
returns the name of the file that was uploaded
sets the file name
the full qualified name of this class
setter for property klazz
set the self reference
return true if the frame is a binding frame
sets the is binding frame
returns the arity of this predicate
adds a finalizer for the object
set value in current dynamic scope or one of its captured scopes
remove all the finalizers
get value from parent
set the value in the field at the given offset
returns the arity of this literal
returns the scope which has been marked as parent
returns the scope in which the flip operation is performed
set value in current dynamic scope or one of its captured scopes
return the arguments arity
the object that generated this error
sets the proc object
indicates if this is a placeholder block
get the frame of the panel
creates the method factory for this invocation
returns the instance variables used in this class
set the last call type
rb iv set rb ivar set
ensures that this module is an instance of this module
returns the internal variables of this class
synchronize the variables in the receiver with the given list of
returns true if there are any variables defined
returns the number of variables in the current expression
sets the constant in the current in the named module
sets the constant in the module and returns the corresponding java object
sets the constant in the given object
creates a new runtime exception that is the stack of caller frames
check if the variable table contains the variable table
returns true if the variable table contains the variable name
fetch a variable table
fetches the value of the variable table with the given name
returns the number of variables in the variable table
synchronize the variable table with the variable table
read the object from the stream
gets the within trace attribute of the message object
sets the within trace attribute of the table element object
returns the within defined
sets the within defined
returns the arity of this predicate
insert the methods description here
swap the two stack entries
gets the rest arg node
add all the other list nodes into this list
duplicates the top element of the stack
gets the name of the operator
returns the object at the top of this stack without removing it
returns the name of the variable
returns the object on the top of the stack
set neighborhood in the given depth in the stack
pop the top element from the stack
set the top element of the stack
executes the method with a set of parameters
sets the args node
returns the name of the method
the module which owns this block or null if this block is
sets the args node of the resource
returns true if this literal is a literal
returns the name of the operator
returns the ruby regexp used for only once elements
tests if this node is invisible
return the least element of the block that has been returned
print the elements of the if node
print warning message increment warning count
prints a warning message if verbose is true
print warning message increment warning count
logs a warning
syntax error message
sets a resource handle for a given key to the given value
returns the value to which this operation applies
set if this parser should evaluate the parse of expressions
sets the extra position information
returns whether the additional position information is added
returns true if this parse is a parse that can be used to
this method returns the current scope of the parser
returns the inline source
checks whether a variable with the given name exists in this
the module that this class is a member of
the module originator would be to be in the same scope
return the value of the given attribute
create an interval from the data source to monitor from the data source
create an attribute from the data source
is the supplied node a break control statement
checks that a node is an expression
sets the configuration
validates the xml document against the schema
imports the contents of the text area
activates this plugin
clean up the perspective after leaving it
not implemented yet
notifies this component that it no longer has a parent component
not implemented yet
the method to dispatch the given event to the correct key input key
notifies client window change
sets the subsets of the character
returns the control object of this control
set the locale
confirm the encoding of the data
add a listener to be notified of query parser events
remove a listener for query parser events
adds the given file info shower listener to this file info shower
removes the given file info shower listener from this file info shower
add a query executor to the list of query executor
removes a listener from the executor
create a searcher factory
create a listener for the index partition event
factory method for creating the local writer factory
sets the maximum number of threads to use
sets the searcher pool listener
returns the searcher for this pool
closes the pool
clean up directory deleting files
returns the searcher pool
delete a file
sets the searcher pool
returns the files info
set the writer factory
increments usage and then calls
shut down the index
disables use of the first line of the file
returns a writer for this index
create the searcher factory that will be used to create searcher
create a searcher listener that will be added to the given index
create the httpwriter factory
checks if the queue is a singleton
adds a sequence to this sequence set
returns true if cfs can be created for this file
gets the sequence of the given variable
returns a cfs file definition that would be
returns a cfs file definition from the given id
check if a variable exists in this set
returns true if this is a type
returns true if the type is integer
returns true if this id is a string id
returns true if this id is a character
returns true if this id is a byte id
goes to the specified position
adds a new data line to the end of the chain
initializes the applet
this changes the sign of x
generic function of one parameter
sets the value
set the parameter
calculates the function value at the given point
set the scale type of the angle
returns the name of the type
return the name of the array
returns a short name for the array
shortcut to place in the tree
generic function of one parameter
calculates logarithm of x
this changes the sign of x
calculates the function value at the given point
this changes the sign of x
returns 1 if x y is less than y
this changes the x and y
calculates the function of the given argument
this changes the sign of x
calculates the function of the given argument
this changes the sign of x
calculates the function at the given point
this changes the sign of x and y
calculates the function of the given value
this is the main function of this class
calculates the function at the given point
root of y
calculates the function at the given point
subtracts parameter x y
return the d value
returns this minus
calculates the function of the given point
this changes the sign of x
calculates the function of the given point
this changes the sign of x
calculates the arc tangent of the angle to the given value
calculates the function of the given argument
inverse of x
calculate the function for the given argument
this changes the sign of x
generic function of one parameter
returns the function value at the given point
this changes the x permutation
this changes the sign of x
this changes the sign of x and y
x xor y
calculates the function value at the given point
inverse cosine of x
calculates the function of the given point
this changes the sign of x
this changes the sign of x and y
calculates the base of the given point
generic function applied to x and y
calculates the function of the given value
returns the base of this domain
inverse tangent of x
sets the base
calculates the function of the given value
calculates the function of the given x value
this is the root of the x function
inverse tangent of x
this sets the expression
converts the list of gobjects to numerals
set the precision
converts numeral to number
converts the list of numerals to the container value
sets the current notation
determines if this list contains one or more elements
whether the string contains only one or more lines
calculate the function amounts
htmlstring representation of the value for use in html
calculate the transformations
this is where unary plus minus is handled
sets up the decimal
this is where unary plus minus is handled
converts object to product
sets up the values for bin
returns the number of this object
add an object to the list
returns the maximum precision that this codec accepts
add an object to the list at a specified position
convert the hexadecimal value to a string
returns the length of the string
returns the expression for the nth item in the html
is this complex number zero
clears the expression list
returns true if this number is an integer
indicates if this number is negative
removes from the underlying collection the last element returned by the
returns the real part of this complex number
returns the imaginary part of this complex number
sets the base
negates this complex number
returns the absolute value of this complex number
return the imaginary part
returns the length of this point
returns the scientific length of the data
add a complex number to this complex number
subtracts a complex number from this complex number
returns the square of this complex number
returns the complex number
calculate natural logarithm of the real number
return a complex whose value is this complex
returns the root of this complex number
return the natural logarithm of this complex number
set the panels to be displayed
compute the a href http mathworld
returns the root node of this tree
compute the sine of this complex number
compute the cosine of the complex number
moves the display panel right
moves the left
this function creates a new expression
compute the arc cosine of a
insert a pobject at the current caret position into the display panel
xors this complex number with another complex number
get a complex combination
returns the permutation of this code complex code with another
sets the minimal size of the graph
this method is for the action listener interface
set the buttons associated with this layer
returns true if the number is a scientific number
sets the scientific field to the given value
sets the field value to scientific format
returns true if the rectangular form of this
returns true if this number is a rectangular number
set the polar attribute
set the primitive value
returns true if this value is non complex
sets the complex attribute of the complex field object
sets the primitive value to be non complex number
returns a copy of this product
multiplies two complex numbers
divide this number by a scalar
returns the cartesian product of this and p
multiplies two product
divides this and this
compares this object with the specified object for order
sort the values of all variables in the list
returns the character
set the shift status of the calculator button
returns the variable name
compares variable to the argument
substitution can be applied to
sort the expression list using the given order
create a copy of this sum
sets the state of the display panel
sum and this
negate this expression
compares this object with the specified object for order
auto simplifies the second expression
sets the buttons for this dialog
paints this component
returns a string representation of this angle
set the expression to display
set the visibility of the caret
update the text in the text area
move the cursor left to the beginning of the scrolling
scroll the data so that the right item is visible
this method updates the distances list
set the memory
set the buttons based on the current state of this
force an update
returns if the major unit should be shown
returns a boolean indicating whether or not to show the minor unit
returns the length of the major unit tick marks in the sequence ruler
returns the length of the minor unit tick marks
convert a double to a string
computes the gradient of two points on the line
this method implements the action listener interface
set the locus
update the menu sizes
adds an element to the list of elements
draws the view
updates the paths of all locations of this locus
set the scale
set the y scale
initializes the locus
called when the current path has changed
substitute function applied to x
todo document me
sets the mode of the frame
todo missing method documentation
invoked when a component loses the keyboard focus
adds a new complex stat to the stat table
return a new stat with the same state
returns the size of the stat memory
this method is for the apply button
this method is called by the host application if its ok
this method is called by the host application if its possible
set the frame for this frame
method to handle events for the action listener interface
this method is invoked by the action listener when the button is pressed
this method is called when the action is invoked
sets the base for the number picker
handle action events from this menu
this method is called when the button is pressed
the implementation of the action called
handle action events from this menu
the implementation of the copy action called
set the pobject with the given applet
set the pobject containing the document data
sets the tooltip text for the menu item
invoked when a key has been released
sets the text of the document
set the text of the document
applet accessor used to get the calculator applet
sets the size of the text
the key typed function is called when a control fires key event
add a new pobject
returns the shortcut character
the method is called by the action listener when the button is pressed
creates the key map for all buttons
set the base for this panel
returns the base
returns the current notation
generic function of one parameter
inverse sine of x
square of x
cube and x
returns the width of the frame
subtracts x from this
calculates and returns the height of the frame using the
graph panel height method
combination of two x
powers y
returns the size of the list
returns the minimum size of the cache in bytes
calculate the sin expression
calculate the inverse cosine
calculate the cosine
returns the graphical state of the editor
calculate the atan
calculate the natural logarithm
sets the caret to be the display
calculate the square root
this is the cuberoot
move the caret left to the beginning of the current line
move the caret right
returns the position of the caret in the textpane
calculate the natural tenx
updates the visibility of the caret
set whether the caret should be visible
adds a string to the current array
adds the specified character to this set
adds a feature to the string attribute of the mfstring object
check if the list contains only one element
calculate the conjugate of this expression
check if the list is empty
answers true if this vector is minus one
and with z
paints the component
or with z
used to move right of the label
xor function applied to
set the expression parser for the label entry label
called when a new expression is encountered in the log file
clears the parser of the current entry label
insert a new pobject at the end of the cache
returns the state of the on flag
sets the current value of this widget
returns the applet in which the document is displayed
sets the caret to the entry label
sets the caret to a label
returns true if the caret contains the specified scrollable label
this is used to compare two objects
returns this
substitute substitutions
checks if the game is over
sets the player
sets the game to over or not
gets the value of the game to join property
sets the game to join or not
sets the config in process flag
returns a boolean indicating whether the configuration
returns a string representation of this object
get the total humans of all the terrains
gets the total number of players
get the number of simple ai players
get the number of expert ai played
gets the value of the random assign property
returns the territory being occupied by this troop
getter of the type of the card
returns the map
returns the ruler of this position
returns the territory name
gets the troop number
removes a troop from this territory
this method returns the troop number that this player can attack
adds a neighbor to this territory
returns the troop number
gets the continent name
get the continent
returns true if this repository was conquered by another resource
sets the color signature
getter method for continent map
gets the color signature
add a territory to this ruler
sets the point
get a territory from the continent
returns the point on the axis
assigns the players to each player
returns the player who continent the ship
gives a card to a player
this method is called when a new territory is added to the model
received the number of armies from the territory
gets the number of armies
returns the number of territories this map has
get a territory based on an rgb value
sets the color
returns the color of the player
adds a number of wild cards to the list of wild cards
returns the number of cards in this hand
returns the number of cards in this map
returns the bonus this player has received
adds a bonus to this players troops
returns the map
get the current depth of the iteration
set the trade in value
updates the displayed map of the risk panel
end my turn
get the value of trade in value
a client has updated somehow for example of requesting a
sets the image
sets the current phase of the game
appends text to the text area
set chat client for this chat
gets the current game phase
returns the image
sets the last action
tells if the card is eligible
sets the card eligible flag
receive a card from this player
removes a card from the list of cards
sets the attack points of this ownable
gets the value of the dice attack property
displays the game configuration
send a message to all connected clients
receive a new message
adds a client to the list of active chatters
update this map with a new map
removes a chatter from the list of active chatters
returns the number of chatters in the list
end my turn
returns the player that is currently executing this action
send a message to all chatters except the server
this is the run method for the chat thread
adds a player to the risk list of players
connects to the server
removes a player from the table
returns the number of players in the game
sets the player in the given map
this method sends an object to all clients
returns the current map
gets the next player
update this map with a new map
updates the view with the new map
the run method of the thread
end my turn
process a message from the chat box
notify the gui of a player sent a message
broadcasts an object to all clients
this method is called whenever the observed object is changed
sets the game config object
advances to the next player in the broadcast queue
prints the specified page
start creates the thread to do the timing
pauses the thread
runs the application
print the scores
print the scores
print the scores for the given player
saves the case
saves the case
this method will rename the current image
run the sound
get an account by account number
deposits the bank
this method is used to withdraw the account balance
check one time code
gets the integer data
verifies that the given pass code is valid
gets the value of account number
returns the text of the event
writes the packet data to the output stream
returns the name of the tab sheet
get the image base
gets the name attribute of the config panel object
get the configuration image in
returns main window name
get the image base
get the base image url
returns the name of the filter
get the image base
returns the name of the wizard
get the image base
enables or disables all components in container
sets the editable
show week nrs days
get flag for showing week nrs date
set the bookmark of this bookmark to the current date
restores the bookmark to the current date
parses a date object
gets the width of the button that is the number of
sets the calendar for this widget
returns the height of the button that is the number of
sets whether the week numbering is shown
returns the size of the button icon
the user has selected a date field
returns the calendar used by this code calendar date code object
returns whether the week numbering is shown in the calendar
synchronizes the date field with the model
sets the date of the movie
the minimum size of this component
a picker button has been clicked
sets the date
gets the preferred size of this component
gets the date
roll the month
paint the component
sets the month of the year
set the selected calendar
setter for property month select
sets the month
returns the selected calendar
get the month select mode
returns the month
roll year of year
parses the date entered in the date field
sets the year of the year component
get the calendar model
sets the year
retrieves the calendar in a string format
gets the year
sets the week of the year for this rule
sets the week of the year
returns the maximum size of this component
returns true if the sunday should start
returns the week of the year
returns the first day of the week
return the width of the day column
returns the number of days in the current month
gets the height of a day row
get the number of days in the previous month
returns the number of days in the next month
paints the string on the given graphics object
returns true if the month preceding the given date
returns true if the month grid position is on the next month
perform y for the given format until the end of y
checks if a given cell is out of the currently selected range
helper method to determine the minimum size of the month list
formats a calendar to a string
invoked when the s date entered is entered
formats a calendar according to the format specification
get the calendar for a given cell
called when the button is pressed
gets the date
called when the button next is pressed
returns true if the year is too big
called when a button is pressed
return true if the cell at row col is selected
called when a button is pressed
checks if a month is selected
handles the button selection for a month button
selects the date at the specified row and column
sets whether the week names are showed in the calendar
updates the display when the month slot changes
this method should be called when the date changes
moves and resizes this component
repaint a date in month view
repaint a cell in the day surrounding the date column
shows the form text area
returns the current url of the current page
shows the form text area in a given frame
add an action listener
remove an action listener
notifies all listeners that have registered interest for
sets the form text interpretation
returns a hash table containing the names of the nodes visited
sets the form text interpretation
set the table that was visited
sets the form text interpretation
set the display used to optimize the data
stops all processes
hides the popup
how many times each optimization run
sets the form text interpretation policy
fires an action event to all listeners
returns true if the focus manager is managing the focus
returns whether this component can accept focus or not
sets the form text interpretation font
gets the text interpretation font
invoked when a key has been released
invoked when a key has been typed
closes the message viewer
set the load synchronously status
returns the rendering mode for forms
sets the default spacing between frames
returns the default frame spacing
sets the default horizontal margin of a document
returns the default horizontal margin of a document
sets the default vertical margin of a document
returns the default vertical margin of a document
set to true if links are underlined
returns true if underline links are enabled
sets the flag that controls whether or not images are loaded from the
p is load images enabled p
sets the display error dialogs flag
adds the file selection listener
removes the file selection listener
sets whether or not the list selection mode is single selection
returns the state of the display error dialogs
clears the list view
set whether to show a test navigation bar
selects a file
this function is called when the user selects a file
notifies all listeners that a file has been accepted
notifies all listeners that the selection of the specified file has changed
returns true if the given file matches the pattern
paints the icon
compares this icon to another one
sets whether or not hyperlinks are automatically followed
returns whether or not hyperlinks are automatically followed
setter for property handle form submission
getter for property handle form submission enabled
returns a file instance for the given filename
sets whether a warning should be shown before the post
note this method is for internal use only
this method is called when a file is selected in the destination
sets whether or not to handle new frames
returns true if new frames are enabled
returns the maximum number of digits needed to represent the given number
creates a new splash screen
sets the current progress of the progress bar
set max value of the progress bar
closes the internal window
creates a new splash screen with the specified filename
creates a splash screen from the specified image data
creates a splash screen from the specified url
shows a save dialog
returns the color of the graphical path
sets the file filters
this method is called when a new font is selected
the size of a slot has been selected by the user
changes the selected style in the preview label
updates the color slot with the new color
sets the currently selected font
returns the selected font
sets slot color to color
event indicating that the brightness value of the color chooser
change the color of the html source
returns selected color
sets selected color
set whether the current view can allow multiple selection
adds the button pressed to the button bar
sets the selected file
interprets the string as a key value pair
accept a file slot
returns all dir entries that match the given wildcard
build the vertical position from the constraints
build horizontal position from constraints
returns true if this entry is close to the end of the
returns the client that is connected to the given thread
shortcut for menu
when a directory is selected the information is displayed to the user
compares this linear position with another
copy this linear position into an other
action for when the up button is pressed
sets the minimum co ordinates of the x and y values
sets the maximum co ordinates of the x and y values
set the size hint for this component
returns the rest of path
returns the file part of the content of this file
the next button has been pressed
constructs a new instance of this class given the default size
explodes the given string with the given separator
walks the full path
the previous button has been pressed
moves to the next segment of the path
construct a new instance of this class given the default size
lays out the container in the specified panel
returns the preferred size of this layout
construct a natural layout with the given dimensions
returns the minimum size of this layout
adds the specified component with the specified constraint to
removes the specified component from the layout
returns the maximum size of the specified component
show the directory in the history list
invalidates the layout indicating that if the layout manager
tests the constructor of linear dimension
test for int get int from long
returns the constraints of the given component
returns the number of columns in the model
extract the first position from the list
return the number of rows in the model
separates the rows and the vertical dimension
tests the get margin method
sets the number of columns in the model
sets the column specifications
creates a sample layout
tests the get spacing method
insert a column in the horizontal space
insert a row in the layout
tests a natural layout with columns and columns
test of set margin method of class wikipedia
delete a column in the matrix
sets the row specs for the given layout
test method for org
delete a row in the area covered by this container
sets the width of the specified column in this layout
returns the first entry that contains the specified component
returns a string representation of this object
sets the width of a single row in this layout
tests that the preferred sizes returned by get preferred sizes
test of get row count method of class saga
test dimension get separation count
test for method to string
calculates the preferred size dimensions for the specified
returns the minimum size of this layout
gets the number of columns in this layout
tests to string method
test method for
gets the number of rows in this layout
validate the constraints
removes the specified component from the layout
returns the selected file or null if none is selected
calculates the maximum size dimensions for the specified
copies all advanced constraints from the source to the destination
copies the advanced constraints from the specified code copy information code
asserts that the dimension
insert a column at a given position
tests the preferred layout size method
asserts that a given array of space is a valid separation space
returns a component that has been configured to display the specified
invalidates the layout indicating that if the layout manager
tests that space is added after the space is not empty
insert a blank row at a specific position
tests the add layout method
test method for
tests the add layout method
tests the size of the container
tests the add method
returns the horizontal dimension
test method for
returns the vertical dimension
ensures that the size of the list is at least equal to the
entry constructor for the entry class
tests the add layout method for a component with a constraint object
constructs a constraints with the given values
validate that the list uses the preferred size for each position
constructs a constraints object using the values of the two rows
validate that the size of the list is the same as the
ensures that the spec has a correct size
returns a string representation of this object
create the sample layout
validate that this container is between minimum and preferred size
validate that the size of the list is greater than the specified
tests get layout alignment x method
get the entry containing the given component
validate half minimum size
tests get layout alignment y method with
test method for
validate the strict minimum size
called when a file selection is changed
validate that there is no minimum size
adds the specified component with the specified constraint to
removes the specified component from the layout
draws the grid
tests linear position
test method for
tests getting the start separation of a position
calculates the size of this container
tests that the get stop separation method returns the stop separation of
test of get margin method of class wikipedia
test of set start spacing method of class wikipedia
test of set stop spacing method of class wikipedia
tests the method is single separation
test linear dimension
tests set row count int and get row count
tests get preferred size and set preferred size methods
tests set column count and get column count
test method for
sets the selected state of this node
test of get adjusted preferred size method of class saga
sets the selected state of all components on this container
sets the number of separation marks to perform
returns true if the cell at row column is editable
reduces the separation count to one
test insert separation
sets the range of the values in this datasets range
increase the separation count by the given amount
wait until the jobs lock is done
sets the maximum number of columns allowed in this result set
returns a list of the jobs of this worker thread
insert a new separation into the array
sets the number of new separation spacings
add a repository to the repository list
unlock the job
adds a repository to the list of repositories to search
returns a string representation of the object
creates an icon from the specified file name and size
calculates the preferred size dimensions for the specified container
initializes the size array
tests that we can convert a float to an int
adjust the minimum and maximum sizes of the array
set the value of the number by adding a double
the minimum size of the container
adds an action with the given name and target method
initialize the size of the icon sizes from the directory name
spread the size of null objects
implementation of the table model listener interface
sorts on this list
sets the enabled flag of all components in this container
retrieves action with a given name
calculates the offset of each space in the space
sets the title of the titled panel
retrieves an action list for a given name
adds a prefix to the list of prefixes for this node
method get icon base name
sets the icon base name
clears the selection
adds a prefix to the list of prefixes
removes the specified component from the layout
returns the total maximum size of all pixels
sets the anchor selection index
builds the application
sets the selection index
adds a post to the list of known post extensions
returns the smallest selected index or 1 if nothing selected
returns the largest selected index or 1 if nothing selected
sorts the table by the given column
gets the value of the what is this property
sets the selection mode
adds a size hint to the list of known posts
returns the total minimum size of all pixels
sets the what is this
add a column to sort by
returns true if the given index is selected
returns true if no indices are selected
remove the indices in the interval index0 index1 inclusive from
returns the total size of the set of preferred sizes
add mouse listener to the given table
sets the selection to be between index0 and index1 inclusive
builds the application
notifies all listeners that have registered interest for
get the total margin and spacings
get the list of target signatures
returns the separation offset of the given index
returns the value of an argument event
returns the name of the column at code column index code
get the space separation of the spacings at the given index
override this method to return a different argument class
returns the most specific superclass for all the cell values in the column
places all linear positions in the linear position list
sets the target of the method invocation
returns the index of the given local index in the original table
places the start and the size of the linear
sets the model to be shown in the table
returns the length of the separation between the given position and this
adds a new position to the linear position list
finds all popups in the document
sets the enabled flag
removes the given position from the linear position list
this method finds all the toolbar elements
set the selected code border code
get the component that should receive the focus after the current container
sets the background color for odd rows
get the component that should receive the focus before the container
returns the default component that can be used to focus
sets the even row color
returns the first component in the traversal cycle
sets the paint focus
sets the initial component to be displayed by this tab
invokes the target method of the target object
returns the last component in the traversal cycle
scans the directory looking for source files to be compiled
check that all required attributes have been set and nothing
returns true if paint focus is enabled
sets the component
returns the component that should receive the focus when the window
sets the component to be focused when the window is set
execute the command
positions the given position
executes this node as a single operation
creates a menu item with the specified name and action listener
shows the dialog
show the dialog
checks if the given position is in the linear position list
sets the execution policy for this command
returns the location of the internal window
gets the size of the dialog
returns the number of linear positions
gets the bounds of this window
returns the linear position list
retrieves the translation interface
adds a progress bar
remove the progress bar
sets the progress bar to the given value
overrides component get preferred size
set the status label text
set the temporary status text
enables or disables the action with the given name
clear the temporary status text
a label that has a status
selects the specified values
sets the contents of the list to the given collection
adds a command button to the message
enable disable a group
returns the position of the screen
add a new argument with the given type
returns the offset where the mouse cursor is
override set text to make sure the text is updated
sets the model to be used
add a static argument
override set content border to prevent expand collapse of collapsable border
add a static argument
sets a preview header component to be collapsed
returns the model
returns the current value of the model
add a static argument
sets the value of this cell
handles clicks on the top button
return the integer value of the expression
add a static argument
sets whether the tool bar can be hided
add a static argument
returns whether the panel is collapsed or expanded
add a static argument
collapses or expands the group box
adds a static argument
add a static argument
adds a child component to this container
add an argument to the arguments list
set the title of the header
adds a child to this container at the given index
adds a child to the tool bar
hides the dialog by pressing the hide button
add a not typed argument
returns the toolbar container for the given location
returns whether the panel is horizontal
returns all toolbars
hides the internal window
a list selection listener is added to the list
returns an iterator over the arguments
removes a list selection listener from the list of listeners
adds the interval to the selection
clears the selection
get the placing of the player
returns the selection index
returns the second index argument from the most recent call to
sets the selection index to which the list of selected items are attached
set the lead selection index
returns the smallest selected cell index
returns the largest selected cell index
returns the selection mode
sets the selection mode
this property is true if upcoming changes to the value
this property is true when a slider value is adjusted
this is called when a button is pressed
returns true if the given index is selected
returns true if no selection is selected
remove the indices in the interval index0 index1 inclusive from
removes the elements from the receiver that are selected
sets the selection interval to the values specified by the indices
add an action listener
notifies all listeners that have registered interest for
connects two radio buttons
remove an action listener from the list of listeners
connects the given radio button to the given source
if the apply button is code true code then the apply button
sets the enable status of the user 1 button
sets the enable status of the user 2 button
is this a armed widget i
sets the enable status of the user 3 button
sets the toggle button on or off
returns the toggle button flag
sets the line type
called when the user enters a page
sets the selected state of this button
enables disables the ok button slot
called when a page is leaving
called when the wizard is leaving
changes the text of the first button
adds a new page to this panel
enable or disable the group
inserts the page into the cards panel at the specified index
changes the button text in the user2 button panel
removes a page from this card panel
sets the icon
returns the current page
sets the popup delay
returns the minimum size of this component
changes the button text in the user3 button panel
set the timeout value for the action timer
returns the delay between the menus activation
returns true if the page is appropriate
sets the appropriate flag
gets the preferred size of this component
sets the popup menu for this panel
find the page that contains the specified component
returns the page that is on the specified index
sets the verified flag
set whether the toolbar can be used to configure
sets the layout manager for this container
the previous button was pressed
the next button has been pressed
sets whether the toolbar should be shown when visible
clear all tooltip texts
returns the model of the table
get the view model object for a given class
sets the font of this component
creates a new extra window with the given title and owner title
shows a wizard window
opens a popup menu at the given location
adds a new variable to the model
adds a new variable to the constrainer
register a name for a type
set the components orientation horizontal or vertical
register a name to be used in the current scope
returns true if the given variable is unique
returns true if the given variable name is unique
returns the unique variable of the given name
set the location of the floating window and floating buttons
returns the line of the variable with the given key
sets the component to be displayed in the tabbed pane
returns an enumeration of the keys in the variable line strings
factory method to create a metal theme
close the currently selected component and remove it from the
adds a new child component to the button group
returns the internal frame
adds a child to the list of buttons
adds a child component to the list of child contraints
sets the translator interface to be used by this translation manager
turns on off debug grid
shows the tool bar at the specified location
the version of the source code
shows the tool bar
returns the main toolbar
creates the actions for this view
returns the toolbar with the given name
adds a java
this is the implementation of method from the method object
gets the menu bar for the frame
adds an object to the array
adds a value to the array
adds a value to the array
adds a character to the array
adds a value to the array
adds a value to the array
get the status bar root pane
adds a value to the array
adds a value to the array
this is the method that should be used to represent a call
returns true if the database should be exported
sets whether this component is busy
creates a widget from the given class name
creates a widget from a string class and class name
set the title for this component
create a widget for the given class name and class name
set whether the user can configure configuration dialog
constructs a new translate with default parameters
creates a new container of given class
creates a representative container for the given class
a helper method to translate a string to a locale dependent format
set whether tool bar hiding is allowed
creates a new container and adds it to the list
returns the root container of the application
returns all widgets in this container
runs the compilation process
shuts down the application
sets the extends class name
returns the class name of the super class of this class
adds an interface that this class implements
installs the ui
cancel the help mode
paints a button
paints the given button
returns the org index
invoked by code install ui code to create a layout manager object to
creates and installs any required subcomponents for the jtabbed pane
removes any installed subcomponents from the jtabbed pane
description of the method
returns the background color for the tab area
floated the window
if the given window is in a drop mode try to drop
returns the maximum size of the code jscroll pane code
creates the mouse wheel listener which is added to the scroll wheel
gets the component
paints the focus indicator
paints the border for a tab
track listener factory method that creates
return the size as a byte
the value of a number as a code double code
the value of the expression as a float
gets the value of the int attribute as an int
return the number of bytes in the array
add a component to the panel
a vertical scrollbars preferred width is the maximum of
invoked when the mouse button has been clicked pressed
add a menu item action to the popup menu
adds this instance as source to the given tool bar
clicking on the tree
adds a new list selection listener to the list
adds a table to the list of tables
adds a property change listener to the action
adds a component to the action
adds a text component to the action bar
clicking on a list
double click on a table
sets the pressed of the button
invoked when a key has been pressed
invoked when a mouse button has been released on a component
convenience method for adding a menu item with a listener
switch antialiasing on or off
adds a selectable action to this component
sets the dual button scroll bar to be used
adds a listener to the actions which will be notified when the
adds a button to the action
adds a source component to the component causing the focus
adds a document listener to the list of listeners
adds this object as a listener to the component
adds a document to the list of listeners
add a checkbox menu item with a source
adds a new component to the action
handles the key events
adds this object to the list of objects
adds a change listener to the list of listeners
adds this object to the list of objects
adds a listener to the messages
registers a component to be managed by this container
returns an iterator over the components in this container
sets the enabled state of all child components
called whenever the value of the selection changes
constructs a new instance of this class given a constraints
adds a component to this constraint
sets the layout for the lw
sets the constraints for the given component
get the entry containing the given layoutable
draws the grid
calculates the preferred size dimensions for the specified
returns the minimum size of this layout
removes the entry with the given index from the list
returns the maximum size of the specified component
returns the alignment along the x axis
returns the alignment along the y axis
lays out the container
append a real
add an imaginary component to the expression
appends a complex expression to the expression
add a variable
appends the expression to the end of the list
subtracts the expression from the expression
sets the value of a variable
returns the complex variable with the given name
multiply the expression by the product of the expression
divide the expression by a number
negate the expression
appends the expression for conjugate function
add a square root to the expression
log function components
add expression to the end of this
power of the expression
adds the given expression to the end of the expression
creates an expression
simplifies this expression by returning a simplified expression
creates a formatted string based on the given expression
calculates the result of this evaluation
returns the complex string representation of the given complex
returns postfix symbol string
grab the entity from the database before populating with request parameters
adds an practice area to the document
grab the entity from the database before populating with request parameters
grab the entity from the database before populating with request parameters
this method initializes j frame
this method initializes j frame
this method initializes j menu item
this method initializes j dialog
this method initializes about content pane
this method initializes about version label
this method initializes error dialog
this method initializes error content pane
this method initializes about version label
this method initializes j text field
this method initializes error version label
this method initializes j text field1
this method initializes j combo box cont
this method initializes j text field name
this method initializes j text field3
this method initializes j text field4
this method initializes j text field fax
this method initializes j button7
this method initializes j text field tel
this method initializes j text field5
this method initializes j button8
this method initializes j text field email
this method initializes j button9
this method initializes j text field lab
this method initializes j text field inst
this method initializes j text field addr
this method initializes j button10
this method initializes j scroll pane
this method initializes j combo box pub
this method initializes j combo box
this method initializes j text field med
this method initializes j combo box1
this method initializes j text field title
this method initializes j text field6
this method initializes j combo box2
this method initializes j text field7
this method initializes j text field8
this method initializes j text area1
this method initializes j text field authors
this method initializes j text field9
this method initializes j text field10
this method initializes j text field journal
this method initializes j text field volume
this method initializes j text field suppl
this method initializes j button14
this method initializes j text field issue
this method initializes j text field i suppl
this method initializes j text field pages
this method initializes j text field year
this method initializes j combo box status
this method initializes j combo box lib
this method initializes j text field organism
this method initializes j text field strain
this method initializes j text field cultivar
this method initializes j text field isolate
this method initializes j combo box sex
this method initializes j text field organ
this method initializes j text field tissue
this method initializes j text field cell type
this method initializes j text field cell line
this method initializes j text field stage
this method initializes j text field host
this method initializes j text field vector
this method initializes j combo box v type
this method initializes j text field re 1
this method initializes j text field re 2
this method initializes j text field descr
this method initializes j combo box est
this method initializes j combo box status est
this method initializes j text field cont est
this method initializes j text field citation est
this method initializes j text field lib est
this method initializes j text field public
this method initializes j text field dir
this method initializes j text field dna type
this method initializes j text field comment
this method initializes j text field seq primer
this method initializes j text field p end
this method initializes j frame advanced
this method initializes j button advanced
this method initializes j scroll pane
this method initializes j table
this method initializes j text field input fasta
gets delay of specified frame
gets the image contents of frame n
reads gif image from stream
reads gif image from stream
reads gif file from specified file url source
build path to node for tree
updates the given contact
initializes or re initializes reader
reads gif file header information
reads logical screen descriptor
resets frame state for reading next record
connects to the icq network
disconnects from the icq network
sends the message to the icq request
connect to the server
disconnects from the server
sends a message to the server
sends message to server
gets the reply from the last command
get message reply
sets the user hash
gets the value of the user hash property
sets the message type
sets the list of lists for this roulette
add an argument to the arguments list
reset the transaction message type and reset the message type
returns the string used to print out the console
get the transaction id
method to logout
returns the group with the given name if it exists otherwise creates one
returns the first child node with the specified name
private method that creates a chat session object and passes it to the
sends a plain message to the server
updates the checksum with the specified byte
update the hash an object of this class
treat the string as a sequence of iso latin1 8 bit characters
parse inbound xml for authentication
parse inbound xml for transport
returns the number of bytes that are available that is
returns an initiliazed instance of form component
returns an initiliazed instance of ticker component
returns an initiliazed instance of ok command component
returns the default sip provider for this agent
returns the scheme used to make this request for example
always returns the default realm
returns the default domain for this user
returns the name of the algorithm for this key
generate a random message digest nonce
this method determines if this agent needs to be resubscribe
handles http authorization
returns the time in seconds that this session has been allocated
returns the time required to lock the cache
returns true if there is a single subscriber
sets the rlmi file
this method is called when the body of publish message is updated
returns the time in seconds that this session has been allocated
sends options request to the client
returns null to indicate failure in creating the output stream
returns code null code to indicate that there is no output
check if this user is a buddy
stops the current service
returns null since this implementation does not support push data
check if this request has an authorization request
returns null since this is not a control
returns the presence manager of this session
checks to see if a presentity with the given name exists
gets presentity by name
returns the sip stack
gets the value of the authentication process property
returns all friends for this user
test counter recovery
get the job from the job tracker and init it
return the used space by the data node as percentage of present capacity
start the jobtracker
stop the tasktracker
shut down the servers
no matter what kind of exception we get keep retrying to offer service
get the file info for a specific file
process io errors
close down this file system manager
allocate a block at the given pending filename
adds block to list of blocks which will be invalidated on
return the cumulative virtual memory used by all the processes in the
periodically check if the lease is still valid
returns the default extension for this type of compression
throws an unsupported operation exception
this method is not supported
closes this output stream and releases any system resources
executes the decompressor decompressor that provides the
add webapps files
add a context
set the number of reduce tasks
set the working directory for the interpreter
add a mapping for path to filter
set the job name
returns the url to the tracking web page
total used space by data nodes
returns whether the file transfer is complete
runs the job
returns whether the file was successfully loaded or not
kill the job
kill a task
fails a task with the given attempt id
submit the data to the server
wait for completion
get the number of reduce tasks
returns the working directory of the process
returns the job name
total used space by data nodes as percentage of present capacity
purge map events from the synchronization channel
counts the number of replicas of b
get the task attempt id
gets the job conf
test if the node has already decommissioned
returns the amount of memory needed for a task to run
kill the job and all its jobs
if the job has finished or not
calculates next heartbeat interval using cluster size
return the maximum memory limit for the virtual machine or 5
indicate the maximum memory limit for the virtual memory
return the maximum memory limit set for the task
memory is in mb
since this object is a registered updater this method will be called
get the fsnamesystem metrics object
get the attempt id from the pid file path
sets the exec finish time
constructs the query used to insert data into the specified table
sets the cleanup job flag
returns true if the task attempt should be committed
gets the node list of input split locations sorted in rack order
a user defined function udf for the system
evaluate the expression
this class defines an aggregation
sets the mapred work to be the given one
called by the framework when this class is loaded from the
sets the alias of all the operators in this operator
sets the join alias for all the operators in this operator
performs the forward operation
closes the array
return the start
checks if an object is in the sample dimension
sets the list element type info
set the list of all the
creates a table on the server
drops a table from this server
sets the map key type info
sets the primitive class
sets the map value type info
drop a table on the server
get a table by name
loads a table from the database
creates a partition for the given table
replace all files of this service by the remote file system
copy all files from a sourcef to the destination file system
create default database if it doesnt exist
prints stack trace of an exception
rollback the current transaction
removes the job in progress from the job in progress list
get the guaranteed percentage of the cluster for the specified queue
set the guaranteed capacity of this resource queue
get the maximum time limit of all messages sent by the queue
set the amount of time to wait before retrying the test
sets the scheduler
the run method of the thread receiving a connection
shuts down the connection
reads out a chunk of data from the input stream
set the name of the collectors to use in the name lookup
add an adaptor to the list
this method sets the iterator that will be used
shuts down all adaptors
shutdown the adaptor
stops the file monitor
returns the offset of the given adaptor in the list
adds a namespace mapping
adds the given namespaces to the namespace map
removes a namespace from the list of namespaces
removes the namespace with the given uri
removes all namespaces from the list
returns the namespace uri for the given prefix
returns the prefix for the given namespace uri
returns all prefixes bound to the given namespace uri in this package
get the schema factory
returns the document builder factory
returns the transformer factory
get the xpath factory
returns the default namespace context
tests that a correct xpath is evaluated with two properties
test that the xpath evaluation works correctly with namespace
tests transformation of properties
tests transformation with parameters
initializes the servlet
this method initializes j frame
this method initializes j jmenu bar
this method initializes j file menu
this method initializes j file exit menu item
this method initializes j help menu
this method initializes j top bottom split pane
this method initializes j device list redirections split pane
this method initializes j logger panel
this method initializes j midi devices scroll pane
this method initializes j redirections scroll pane
this method initializes j redirections table
this method initializes j redirections buttons panel
this method initializes j remove button
add a new shielding ship if it doesnt already exist
set the colonize planet for this colony
adds a colony with the given player to the current players colonys
prints this throwable and its backtrace to the specified print stream
prints this throwable and its backtrace to the specified print writer
checks whether the superclass of the exception is the cause of the exception
sets the key of the parameter
sets the name of the parameter
sets the msg no results parameter
sets the value of the code class code parameter representing this
sets the url that defines the base of the url
sets the field of the parameter
sets the beautified
sets the image path
the url of the iconextension
sets the create links
url to the index file
the url where the query text is not used
set the message back parameter
set the message forward parameter
the target page to redirect to
sets the all msg
sets the size of the file
sets the text of the question
show the frame in the center of the screen
returns the regular interval
returns the port to connect to
returns the browser name
returns true if external access is allowed
initializes the check thread
check that the website list is valid
returns the current crawler
start index update process by creating new memory
set whether the crawl should pause
this method will check the update thread for the updating
determine whether the index has been updated or not
saves the index last update to disk
check for the imap list and generate an error if not there
p get the url to redirect to
return the number of finished jobs
enable disable the running of the index update thread
load image from classpath
returns whether lower case conversions are allowed
returns the regex that matches the url fields
should content be written to the preview store
returns code true code if the receiver is enabled and all
returns the url regex group
gets the class name of the preparator class
returns code true code if the property is stored in the database
p get the url regular expression string
gets the preparator config
get the initial document count
returns code true code if the field is indexed
returns true if tokenization is currently being performed
returns the maximum number of cycles that must be made before this
should be updated
setter method for should be updated
returns the number of documents added to index
returns the number of sections in this group
reads the urlcleaner to be used
returns the number of removed documents
reads the max cycle count from the element
returns the url of the current job
how often in seconds between reconnection attempts
get the crawler access controller class name
return the time spent running in this job
get the crawler access controller jar
get the configuration for the crawler access controller
returns the maximum summary length
reads the user agent element
sets the should pause attribute of the progress bar object
returns whether the thread should pause before running the
adds an additional field
handle an exception while loading the document
concatenate all the parts in the given list to the given string
setter for property m mime type
returns true if the object has links
adds a link to a request
method for checking if the url already has been accepted
write the crawled urls list to disk
returns true if the url has already been ignored
method that sets the url that was accepted by the requestor
sets the url to be ignored
returns the number of ignored matches
returns the number of measures
get the aborted measure count
returns the current measuring time
main method to initialize for the game
gets the range of cells
terminates the ressourcen pour ress
this method removes all characters that are not used in the file
removes r n from the string
closes the ressult ressources
reads the content of the file with a given name and buffer
init method of section with all the needed headline files
returns the method declarations of this compilation unit
sets the method declarations
gets the selection of the word for the application
returns the inner classes
set the inner classes list
checks if the given string is the expected string
appends the shape to the buffer
sets the super class
removes all 32 bit chars from a text
returns the interfaces
sets the interfaces
returns the name of the code block
closes the ressourcen pour ress
sets the source code for this java source
sets the name of the code block
prints text in a html page
returns the encoding to be used for the request
check that the arguments are not null
set a header to the value specified
sets a response header with the given name and date value
check if the event exists in the plugin
returns an output stream for the response
writes a string to the output stream without using the
returns a string containing the argument types
throws a redirect exception
sends an error response to the client using the specified status code and
report the fact that crawling has finished
returns the number of initial docs
handles the event before starting the new class
handles the event of preparator
loads the error page for this cache
adds a child executer to the search
called when an event is created
returns the number of children
return the child executer at the given index
called when an index reader was deleted
prints the children of this node using the specified prefix
prints the tag
prints the xml tag
report the fact that a job may accept the url
returns the number of documents added to the index
returns the value of the specified parameter
the url is a
returns the value of the request header
returns the value of the specified request header as a date
returns the current locale of the request
change the value of a context attribute
get a string representation of this crawler
return the value of a context attribute
add a request session attribute
prints the tag
returns the value of the named session attribute
returns the number of documents that have been removed
get the value of a named initialization parameter
p get the resource base url
returns the working directory
return the nested tag
executes after body processing
returns the encoding to be used for text decoding
writes a message to the error log
return the request for the page
sets a response header with the given name and value
sets a response header with the given name and long value
returns an output stream for the response
print text to the output stream without any wrapping
sends a redirect to another url
sends an error response to the client using the specified status code
return the value of a request parameter as a string or null if
return the names of all request parameters for this request
gets the value of the parameter
get the value of a header field
get the date of a header from the request
get the locale of the current request
sets the value of the parameter
set the value of a context attribute
return the value of the specified context attribute
get the value of a parameter
set an object value in the session
get the value of a parameter
return the value of the named session attribute for this page
return the value of the named initialization parameter for the current
this method logs an error
returns the base url of the resource
returns the localizer to be used for resolving id references
returns the localizer for the given locale
a localizer factory class for generating localizer objects
creates a localizer for the given class
creates a localizer for the given locale
sets the maximum size of the cache
prints the current logging event to the specified printer
gets a localized message
gets a localized message
returns true if the url is already indexed
get a formatted message from the applications resource file
returns the value to which this map maps the specified key
returns the localized message for the given key
p get the directory
p get open in new window regex p
returns true if this bridge uses a file to http bridge
returns the search access controller
associates the specified value with the specified key in this map
returns whether this component should be highlighted
returns an index reader object that can be used to create
removes the key and its corresponding value from this
returns true if this property instance has a parent
returns the index searcher
returns code true code if this is a parent node
setter for property m parent
p get the parent name
sets the name of the parent
compare two sorting options by id
returns the query text
get the document factory
sets the document for the hit
removes obsolete entries from the cache and the registry
test of is message url method of class imap toolkit
test of cut message identifier method of class imap toolkit
reads the max summary length element
deletes old index directory
update running state if active
sets the day layout
sets the week layout
sets the month layout of the calendar
if the mouse button is released the reference button is released
link a calendar calendar to an excel calendar
this method is called when the line is going to be drawn
this method is called when the filter panel is closed
this method is used by the filter for the given source object
gets the first day of the week
returns a calendar object representing the week
returns the id of the activity
if the mouse button is released the reference will be
sets the first week of the week for this constraint
return the first week day of the week
returns the localized order day of the week
returns the localized order day panel
add a kind parameter to a url
returns the link with the given rel value
set the picture relation dao
sets the f oafdao
sets the data source
add a person to the known list
remove a person from the known list
adds a new interest
removes a code interest code from the list of registered interests
remove a relation creator listener
returns the user overview panel
add a user overview panel to the user overview tab
returns the current username
loads the icons for the album
shows the welcome page
logs out the user
returns the dto of the current album
this is the entry point method
redirects to the login message box
logout from the server
redirect to picasaweb
save the result count
delete all the result set in the database
updates the counter values
saves the counter
fills the result list
delete a row
deletes all rows
get a record iterator over the list of records
get a list of records
this method is used to send the exception information to the
execution message for the command
initializes a window
allows the user to choose a shape for a given uri
this method initializes tools panel
discards the current shape object
this method initializes pen button
this method initializes rubber button
adds an entry if it does not exist
this method initializes line button
sets the viewport
returns the shape uri of this model
sends an endpoint to the server
returns the shape class that contains the given uri
this method initializes this
this method initializes tool options panel
serialize a shape
this method initializes thin pen button
returns the current transform in the viewport
this method initializes medium pen button
this method initializes thick pen button
this method initializes colors panel
this method initializes left panel
this method initializes map panel
this method initializes chat panel
this method initializes chat display text pane
this method initializes drawing scroll pane
this method initializes drawing panel
this method initializes chat write text pane
this method initializes chat scroll pane
this method initializes viewport map
this method initializes connection panel
this method initializes connections button
this method initializes j content pane
determines if the given adapter is resolvable
returns a map of component adapters that match the given key
convienience method for invoking
returns a formatted message using the given key and the given arguments
overrides code filter input stream
overrides code filter input stream
overrides code filter input stream
overrides code filter input stream
makes the necessary directories
gets the font of this component
returns a list of keys sorted by ascending start node
sorts the nodes that are associated with the specified node
deletes the node from the data structure
returns the jcomponent used to display the title pane
creates a view from an element
paints the background of the menu item
performs a click on this menu item
at startup create and show the main frame of the application
get the memory instruction for a register content
get the memory instruction for a register content
get the memory instruction for a register file
performs some evicted checks
gets the situation
find by id
starts the application
draws the microphone
gets the pixel at the specified coordinates
returns the red value of the color
returns the green value of the color
returns the blue color component value of this color
get a stream of httspage
returns a representation of the given variant as a string
initialise the connection to the cassandra database
extended request data key to hold editpart visual id
creates entities palette tool group
creates relations palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates entities palette tool group
creates relations palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates a new adapter for an object of class
creates process package palette tool group
creates entities palette tool group
creates relations palette tool group
extended request data key to hold editpart visual id
creates entities palette tool group
creates relations palette tool group
extended request data key to hold editpart visual id
creates entities palette tool group
creates work flow palette tool group
creates relations palette tool group
extended request data key to hold editpart visual id
creates entities palette tool group
creates relations palette tool group
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the name feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the description feature
this adds a property descriptor for the role feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the work product feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the role feature
this adds a property descriptor for the task feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the role feature
this adds a property descriptor for the task feature
this adds a property descriptor for the role feature
this adds a property descriptor for the work product feature
extended request data key to hold editpart visual id
creates relations palette tool group
extended request data key to hold editpart visual id
creates relations palette tool group
this method initializes this
create the content of the dialog
this method initializes this
handle the project browse button
this method is called when finish button is pressed in the wizard
this method is used to compare two methods that have the same id
passing the focus request to the viewers control
extended request data key to hold editpart visual id
creates entities palette tool group
creates workflow palette tool group
creates relations palette tool group
this adds a property descriptor for the task feature
this adds a property descriptor for the transformation associations feature
this adds a property descriptor for the order feature
this adds a property descriptor for the code associations feature
this adds a property descriptor for the profile associations feature
this adds a property descriptor for the uml model associations feature
this adds a property descriptor for the uuid feature
this adds a property descriptor for the target feature
this adds a property descriptor for the transformation type feature
this adds a property descriptor for the name feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the description feature
this adds a property descriptor for the commited feature
this adds a property descriptor for the role feature
this adds a property descriptor for the path feature
this adds a property descriptor for the workproduct feature
this adds a property descriptor for the main feature
this adds a property descriptor for the type feature
this adds a property descriptor for the profile feature
this adds a property descriptor for the task feature
this adds a property descriptor for the transformation feature
this adds a property descriptor for the workproduct feature
this adds a property descriptor for the type feature
this adds a property descriptor for the type feature
this adds a property descriptor for the task associations feature
this adds a property descriptor for the workproduct associations feature
this adds a property descriptor for the class type feature
this adds a property descriptor for the uuid feature
this adds a property descriptor for the discipline feature
this adds a property descriptor for the role associations feature
this adds a property descriptor for the transformation associations feature
this adds a property descriptor for the workproduct associations feature
this adds a property descriptor for the roles feature
this adds a property descriptor for the profile feature
this adds a property descriptor for the workproducts feature
this adds a property descriptor for the task uses feature
this adds a property descriptor for the phases feature
this adds a property descriptor for the delete possible feature
this adds a property descriptor for the transformation feature
this adds a property descriptor for the code feature
this adds a property descriptor for the type feature
this adds a property descriptor for the task feature
this adds a property descriptor for the role feature
this adds a property descriptor for the disciplines feature
this adds a property descriptor for the type feature
this adds a property descriptor for the transformation feature
this adds a property descriptor for the uml model feature
this adds a property descriptor for the task associations feature
this adds a property descriptor for the type feature
this adds a property descriptor for the role associations feature
this adds a property descriptor for the target feature
this adds a property descriptor for the tasks feature
this adds a property descriptor for the transformation associations feature
this adds a property descriptor for the client feature
this adds a property descriptor for the iteration feature
this adds a property descriptor for the task feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the id feature
this adds a property descriptor for the guard feature
this adds a property descriptor for the id feature
this adds a property descriptor for the finalized feature
this adds a property descriptor for the association task use feature
this adds a property descriptor for the in use feature
this adds a property descriptor for the association decision feature
this adds a property descriptor for the associations task use descision feature
this adds a property descriptor for the associations decision to decision source feature
this adds a property descriptor for the day feature
this adds a property descriptor for the profile feature
this adds a property descriptor for the uuid feature
this adds a property descriptor for the month feature
this adds a property descriptor for the task feature
this adds a property descriptor for the year feature
this adds a property descriptor for the associations task to task source feature
this adds a property descriptor for the association task to task target feature
this adds a property descriptor for the associations task use decision feature
this adds a property descriptor for the decision feature
this adds a property descriptor for the state feature
this adds a property descriptor for the initial state feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the taskuse feature
this adds a property descriptor for the source feature
this adds a property descriptor for the state feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the target feature
this adds a property descriptor for the task use feature
this adds a property descriptor for the aggregation phase iteration feature
this adds a property descriptor for the initial state feature
this adds a property descriptor for the order feature
this adds a property descriptor for the type of feature
this adds a property descriptor for the uses feature
this adds a property descriptor for the generates feature
sets the parent of the task
sets parent of this component
sets the parent of this code model phase code
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
the action has been activated
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the name feature
this adds a property descriptor for the phase feature
this adds a property descriptor for the iteration feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the description feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the process feature
this adds a property descriptor for the iteration feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the phase feature
this adds a property descriptor for the description feature
this adds a property descriptor for the task use feature
this adds a property descriptor for the method content feature
this adds a property descriptor for the description feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the number feature
this adds a property descriptor for the order feature
this adds a property descriptor for the phase feature
this adds a property descriptor for the label feature
this adds a property descriptor for the cardinality feature
this adds a property descriptor for the task use feature
this adds a property descriptor for the label feature
this adds a property descriptor for the task feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the task feature
this adds a property descriptor for the order feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the label feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the discipline feature
this adds a property descriptor for the uml model feature
this adds a property descriptor for the task feature
this adds a property descriptor for the label feature
this adds a property descriptor for the profile feature
this adds a property descriptor for the name feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the label feature
this adds a property descriptor for the task feature
this adds a property descriptor for the model feature
this adds a property descriptor for the refer to feature
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the refered feature
this adds a property descriptor for the profile feature
this adds a property descriptor for the label feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the label feature
this adds a property descriptor for the package feature
this adds a property descriptor for the workproduct feature
this adds a property descriptor for the package feature
this adds a property descriptor for the role feature
this adds a property descriptor for the task feature
this adds a property descriptor for the workproduct feature
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the task feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the model feature
this adds a property descriptor for the label feature
this adds a property descriptor for the description feature
this adds a property descriptor for the package feature
this adds a property descriptor for the discipline feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the file path feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the code feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the package feature
this adds a property descriptor for the label feature
this adds a property descriptor for the role feature
this adds a property descriptor for the role feature
this adds a property descriptor for the uml model feature
this adds a property descriptor for the task feature
this adds a property descriptor for the label feature
this adds a property descriptor for the label feature
this adds a property descriptor for the role feature
this adds a property descriptor for the task feature
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the transformation rule feature
this adds a property descriptor for the label feature
this adds a property descriptor for the code feature
this adds a property descriptor for the label feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the task feature
this adds a property descriptor for the step feature
this adds a property descriptor for the role feature
this adds a property descriptor for the workproduct feature
this adds a property descriptor for the label feature
initializes the annotations for b gmf
initializes the annotations for b gmf
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates task use palette tool group
creates workflow palette tool group
creates relation palette tool group
this adds a property descriptor for the task feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the label feature
this adds a property descriptor for the task feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the dependencies feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the final state feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the name feature
this adds a property descriptor for the method content feature
this adds a property descriptor for the name feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the dependencies feature
this adds a property descriptor for the task feature
this adds a property descriptor for the initial state feature
this adds a property descriptor for the task feature
this adds a property descriptor for the final state feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the task feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the label feature
this adds a property descriptor for the task feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the decision element feature
this adds a property descriptor for the final state feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the task feature
this adds a property descriptor for the initial state feature
this adds a property descriptor for the task feature
this adds a property descriptor for the source feature
this adds a property descriptor for the final state feature
this adds a property descriptor for the target feature
this adds a property descriptor for the name feature
this adds a property descriptor for the dependencies feature
this adds a property descriptor for the sequence feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
initializes the annotations for b gmf b
initializes the annotations for b gmf
initializes the annotations for b gmf
add nature to a project
this method initializes this
this method initializes this
this method initializes this
this method initializes this
creates a project
extended request data key to hold editpart visual id
creates feature use case palette tool group
creates associations palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
extended request data key to hold editpart visual id
creates features palette tool group
creates associations palette tool group
this adds a property descriptor for the source feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the target feature
this adds a property descriptor for the id feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the name feature
this adds a property descriptor for the id feature
this adds a property descriptor for the id feature
this adds a property descriptor for the name feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the usecases feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the id feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the name feature
this adds a property descriptor for the state feature
this adds a property descriptor for the id feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the usecaseid feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the stereotype feature
this adds a property descriptor for the opposite target feature
this adds a property descriptor for the opposite source feature
this adds a property descriptor for the usecase feature
finds project by name
this method initializes scrolled form
this method initializes section
this method initializes section1
this method initializes s shell
passing the focus request to the viewers control
this method initializes combo
this method initializes file list composite
this method is called when the advanced tab has been changed
this method initializes new feature configuration
when the launcher name changes
this method initializes section2
this method initializes scrolled form
this method initializes section3
this method initializes section4
this method initializes section
this method initializes section1
checks if we can save the widgets in the group
this method initializes section2
this method initializes section3
this method initializes section4
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j button1
this method initializes this
this method initializes j content pane
this method initializes j panel2
this method initializes text nom
this method initializes text cognom
this method initializes combo empresa
this method initializes combo event
this method initializes combo empleat
this method initializes text data
this method initializes taula event
set count of publication types
returns the output text
setter for property output text
sets the frequency distributions of the type
sets the output text area
set the parent jcomponent
sets the statistics panel
sets the parser output
set the publication type
initializes the close button
adds the given item statistics to this instance
get the frequency list for the given key
initializes the tabbed pane containing the program info panel
returns the number of results that are in this query
sets the number of results
sets the end time
gets the value of the query time property
sets the time the query was executed
returns the total time that this test run took
returns the sql query
sets the avg results per query value for this search result
sets the sql query
sets the number of queries
sets the number of passes
sets the number of records in the file
sets the pass
adds the given query result to the list of query results
sets the benchmark database
set the number of pages
returns the ram size of the computer
set the journal
sets the ram size of the computer
returns the authors without number
sets the value of role
compares this key value pair to another
gets the frequency
increment the frequency
sets the frequency
increments the frequency at the specified index
counts the total frequencies in the table
get a frequency by its index
get the number of frequency lists
get a parser output instance for the
sets the year
gets the year
sets the conference
returns a menu for the menu bar
gets the conference
gets the num results
gets the time that the last event was processed
sets the author
gets the query time
gets the sql query
gets the author
returns the list of query results
clears the parameters
returns the time since the epoch of the last step
gets the sql query
returns the time that the query was executed
returns the list of all results
sets the publication key
gets the query time
gets the co author list
returns the details of the publication
returns the publication details as a bibtex string
returns the xml representation of the publication details
get the legend for publication type
returns the id of a given field
returns the display name for the input field name
creates a new instance of code suppress warnings unused unchecked code
returns the id of the producer of this dataset
returns a fields display name using uppercase and lowercase
return the display name for the given field name
returns the publication type color for the given publication type
build the css string for the result list
build the css string for the result table
begin the creation of publications
end adding publications
returns the publication associated with the given key
returns the publication object for the given publication id
returns the color of the publication type
gets the number of publications
writes employee scores
getter for property switches
print a string
looks up a property value by name
return the string value corresponding to the specified key
look up a string in the string table
return the original string corresponding to the given key
look up an original string in the dictionary
closes all windows that are open
adds a separator at the end of the toolbar
forces all windows that have been closed
removes the given child from this node
get the path to the node that is attached to the given url
go back to the previous page in the history list
builds a new menu bar
handle image updates
adds a new tile to this tileset
returns the value of the given key as a string
checks if the tile is a member of this team
get the original string associated with a key
sets the type of this tile
builds a collection of menu items from the given window
sets the tile at the given coordinates
looks up a string in the dictionary
sets the x offset
get the magic string
look up the original string associated with a key
load set map from file
save a set of properties to a file
set the width of this line
set the height of this node to the specified value
gets the name of this tileset
returns the magic string for this file as a string
loads a tile set from the given stream
provides a full dump of the menu tree
toggles the visibility of the palette dialog
load image data into memory
saves this tile set to the given output stream
gets the preferred size of this component
draws the map
gets the current tile set
checks if the user can close the map
sets the edit mode
returns the dimension of the selected icon
draws this handle
closes the map dialog if the user closes the map
returns the edit mode
waits for all tile sets to be loaded
returns the map object factory at the given index
get the map object factory that has the given class name
sets the selected state for this button
compacts the map to the current size of the list
adds the specified map object factory to this set if it is not
get an iterator over the elements in this set
fires the event that the currently selected tile palette has changed
return true if the dialog is currently selected
set the state of the dialog
returns true if the palette is selected
checks if the user is selected
sets the state of the palette
sets the state of the main window
sets a tile to the specified tile
initialize the configuration
adds an object to the current floor
returns an enumeration of all the resources with the given name
fires the event to all listeners
adds a new plugin to the buffer
returns the physical map size
finds the resource with the given name
returns the number of plugins
gets the plugins attribute of the plugin manager object
returns true if any plugins have failed
this returns the number of plugins that failed to load
returns the version number as a major string
compares this version with another version
returns an iterator over all the plugins that failed to load
select an object at the given coordinates and fire to the
returns a hash code value for this object
returns the version information in a string
components that display logical rows or columns should compute
iterates through all registered plugins and calls their init method
returns the amount that the scroll bars block increment
log an info message to the log file
log a warning message to the error log
finds the application jar file
saves the applications properties to the file
sets the currently selected floor
log an exception
saves the properties
this method is called by the shutdown method to shut down the
sets the locale attribute of the environment manager object
adds a new floor to the map
deletes the specified floor
saves the properties
returns a single entry with the specified name
draws the map on the canvas
returns a single entry with the given name
removes the given listener from the list of listeners
returns the weight of this item
report a bound property update to any registered listeners
find the entry in the jar file
save the current state to a file
gets the locale of the string table
set the locale for the string table
attach a window to this view
returns the application file
returns the system plugin manager
returns the user plugin manager
returns the jar file containing the application
this method initializes j content pane
this method initializes j panel
this method initializes start
this method initializes step
this method initializes stop
this method initializes j text area
this method initializes j panel2
get the root of the tree
add a combobox with all strategies
the memory state has changed
get the default root
sets color of the low used memory area
init the gui
sets color for the medium used memory area
sets color of used memory
this method initializes left panel
sets low memory color
sets color for free memory
this method initializes j panel
sets the color for the high memory memory
the run method
return true if point is at least enough space for resizing and
this method initializes j scroll pane1
builds the table header
builds a tree of default mutable tree nodes for the specified span
notifies part builders that a new dom will be created
this method initializes j button
method update plugin id
creates a new tree node with the given name in the document
appends a new node to the document
initializes the frame and shows it
updates the views of the given window
restores the selected tab window from the stack
add a plugin listener
remove a plugin listener
notifies all listeners that the view main show has been changed
notifies all listeners that the view main hide is complete
returns the root of the tree
sets the root element
get the olap model associated with the id
destroy the olap model associated with id
gets the show measures row attribute of the data tool object
sets the show measures row attribute of the jbuilder editor app object
gets the number value
slicer is not restored by members
generates a url
returns the preference store of this plugin
returns true if the application is currently stopping
set the application stopping flag
builds the form header
insert a new line
the method is called when the user clicks the insert link button
updates the display with the latest changes
opens a socket connection to the server
closes the socket
returns false since this is not a open socket
notifies this pipe that the given pipe is finished
sets the output pipe attribute of the jbuilder project object
sets the pipe attribute of the jbuilder project object
performs any necessary updates to the underlying database
returns the next packet
writes a micro image to the pipe
sets the output consumer
create a new lomimpl object
interface for identifier
make a copy of the data element
this method initializes intervall progress bar
this method initializes intervall size slider
this method initializes this
this method initializes back from pause button
this method initializes start button
returns the current session context
adds a field to this class
gets the value of persistent class
setter for property persistent class
gets the clazz code
returns the current hibernate session
adds a package import
getter for property force case
returns the target package
sets the force case
sets the target package
gets the value of list provider
sets the list provider
returns the destination directory
sets the destination directory
gets the value of hibernate props file
getter for property editor type
sets the hibernate props file
gets the value of column type
sets the base directory of the project
getter for property allow
gets the model clazz code
set the branch bdir
returns whether the class is abstract or not
sets the abstract clazz
gets the table clazz code
sets the table clazz code
getter method for auto persist
returns the verbose
getter for property empty row
sets the empty row to the given value
gets the value of delete rows
gets the value of clazz
sets the verbose
sets the rows that should be deleted from the input document
return the move rows property of the object
set the value of move rows
gets the value of conflict
sets the on conflict value
call a method on the object with parameters
gets the value of parent access
sets the parent access
set the public id
returns the code bsfmanager code used by this code bsfservice code
returns the name of the interpreter to use
getter for property entity name base
sets the entity name base
get the base element name of the property
set the name of the base element of the property name
gets the output of the command
gets the container filename
sets the container filename
getter for property container extra info
setter for property container extra info
sets the system id
get plugins that have the given interface
getter of the interceptor
setter for property instance
sets the plugin class name
sets the file attribute of the main frame object
checks if excel format is in use
the match text of header
the match regex used to match header
sets the file attribute of the jbuilder editor app object
notifies all registered listeners about the event
getter for property ok persists entity
set the value related to the column ok persists entity
returns the multiplier for the percent
updates the race numbers in the database
return a linked map of editor names to editors
returns true if the user has cancelled the dialog from the editor
returns the state of the subscriptions
returns wether the node is currently in a view or not
set the value in the entity
return the property editor widget
set the value in the editor
get the value from the editor
get a linked map of editor names to instances
sets the value of the property in the entity
return the property editor widget
set the value in the editor
get the value from the editor
set the value in the entity
return the property editor widget
sets the value in the editor
return a linked map of editor names to editors
returns the value from the editor
set the value in the entity
return a linked map of editor names to editors
set the value in the entity
sets the value in the editor
returns the value from the editor
return a linked map of editor names to editors
return the property editor widget
set the value in the entity
sets the value in the editor
return the property editor widget
sets the value in the editor
return the number from the editor
set the description of the property in the entity
return the property editor widget
sets the description in the editor
returns the value from the editor
return a linked map of editor names to editors
this is a non spinnaker this method is used to check the
set the value in the entity
return the property editor widget
sets the value in the editor
get the value from the editor
get the editor map
todo missing method documentation
set the value in the entity
returns the value of the current selection from the editor
return the property editor widget
set the value in the editor
get the value from the editor
return the editor map
sets the value in the editor
returns the value from the editor
method get editor map
returns the direction of the best score
getter of the property tt regattas fleet assigner tt
gets the application home dir
getter of the property tt fleet assigner tt
notifies all registered listeners about the event
notifies all registered listeners about the event
get the active race
sets the active race
perform the actual execution of the algorithm
getter for property regatta
sets the regatta
add a result to the set of updated results
gets the value of elapsed
gets the value of allowance
returns the corrected property of this exception
sets the allowance
sets the corrected property
sets the elapsed
sets the types
setter for property collection
get the exception handler that is used by this thread
sets the rows attribute of the data table model object
returns the ah table model
sets the ah table model
returns the row model
sets the row model
called when the component is hidden
gets the value of all items
updates the row after a move
sets the items of the model
setter for property time
setter for property format
setter for property date
returns the number of clicks needed to start editing
returns the layered pane for this panel
get the display name of the editor instance
sets the case constraint
getter for property list model provider
sets the list model provider
parse an xml document from an input source
this will set the code content handler code
getter for property ac visible
creates the context
notifies all registered listeners about the event
returns the maximum number of items that can be visible in the ac
updates the start and end place of the ties
set the maximum number of items that can be visible in the accordion
getter for property ac list width
gets the value of ac list layer
gets the list cell entry renderer
returns the renderer used to display selected entries
returns the campaign description
search for all the activitys that match the given criteria
return true if p is the predecessor of this vertex
returns the vertex of indegree of failing that
adds a vertex to the pool
add an edge to the pool of edges
return a collection of vertices
get all the edges in the pool of this graph
gets the full phone
start the task
returns all activity type objects that are defined in this class
sets the collection of activity type data info bean
returns a collecion of association type activity type hierarchy mechanism id
returns a string representation of the vendor bean
called by activity to set the message driven context to this activity
creates the session bean
called when the session is about to be removed from the system
set a collection of attribute vo objects for all of the instance objects
returns an iterator over the elements in the collection that have a
provides content as string
get default name
returns the current assignment status bean
export a vertex in xml format
export an edge
creates a graph document and exports it to gxl document
returns the description of this code driver code
returns the dtd for this document
returns the name of this element
finds an activity type hierarchy by its id
sets the parent of the receiver to new parent
set the parent of the receiver to new parent
checks if file exists
commented out the organization
set organization type
gets the customer id
set the value of the field activity type
initialisation of the ejb
sets up the dialog
create the file menu
creates and returns the help menu
this method initializes combo proxy
adds a new number to the collection
sets the maximum value
sets the minimum value
returns the current configuration
adds a new file monitor
closes the currently open tab
getter for property buffer wrap
gets the tail text area that is currently visible
returns true if there are open files
sets the visibility of the filter dialog
set the value of buffer wrap
sets the preferred buffer size for the body of the response
sets the delay between tooltips
returns the date format
copies the selected text
starts the find operation
setter for property stamp format
returns the monitored file
stops the monitor
adds element to buffer
sets the maximum number of characters that can be buffered in the
sets the date format of the stamp
adds a listener for file changes
removes a listener for file change events
checks if the given element is already in the buffer
returns the external editor
stop monitoring the process
runs the thread
set the external editor
reads the initial file
reads the next line from the file
set the list of files that are currently open
reads the directory and sets the status to status clean
add a property change listener for a specific property
remove a property change listener for a specific property
reads the next directory
stop the file monitor
enables a particular action
stop the directory handler
clears the recent files list
set the poll interval
reads the next time from the file and notifies the listeners
returns the last open directory
reads the initial file and notifies the listeners
sets the last opened directory
enables disables filtering support
returns true if the given character is an alpha character
returns true if the given character is allowed in the symbol
returns true if the given character is a constant
returns the font properties
checks if the given expression matches any of the expressions in
skip spaces in the string
returns the index of the first character of the given string
returns the carriage return
get the cdr of this string
returns the value associated with the given key
add a file to the list of open files
description of the method
remove a file from the list of open files
evaluate the input field
generates a second argument
returns whether the text is drawn with anti aliasing
prepares a string expression
adds a jbutton to the panel
adds a button to the toolbar
adds a path to the recent files list
changes the mode
creates a new calculator for this intelli calc
sets the numeral system to the given value
sets the operator
negate the current value
convert the given big decimal to radians
compares two strings for equality
sets the current value attribute of the progress bar object
load the task list from the project file
save the task list to the project
checks if a string is one of the allowed values
returns true if b is 0
this method prepares the label for displaying
returns the preferred scale for this component
sets the new ui delegate
returns the ui object which implements the l f for this component
returns the page format of the page specified by
scales the vertex by the given amount
returns the page format of the page specified by page index
fit a rectangle on the page
sets the selectionmodel for the table
the action performed method
the action performed method
the edit action for this edit action
the user has performed the action
the action performed method
the action performed method
the action performed method
the action performed method
method to handle events for the jdraw button
the action performed method
removes the selectionmodel for the listeners
resets the ui properties to their default values
sets the parent of this task
remove this node from its parent
returns the end date of this project week
sets the l f object that renders this component
set the pattern for a named texture
makes the string e or zero
returns the text position of the given event
creates a squareroot
scrolls the page corresponding to the given index
get the index of the page at the specified point
returns the page index at the given coordinates
returns the l f object that renders this component
this method makes a sine based on the string a
this method makes a cosine string
this method converts a string to a mathematica form
create a line of the form ln
prints the document
prints the entire document
makes a sinhyp
makes the coshyp if it was already created by the user
makes the tanh relate list
this method converts a string to a cotan
this method converts an acotan variable to a to string
generates a form that can be used in a simplification
zooms the image by the given factor
zooms the image by the given scaling
zoom in around the center of the component
zooms into the specified page
zoom in around a given point
zoom out the graph
zooms out on the specified page
zoom out this component
derives a powered string from an expression with a variate
derives a cotan constraint based on the given expression and variations
derives a tanhyp from an expression in the given variateion
derives a given expression from a variard
derives a sinhyp from an expression using the given variations
derives acos will be placed in the expression
derives asin with the power of two
derives an atan of an expression in the given variations
derives a value from an expression in a variety
derives a string from an expression with a varied variable
derives a tan of the given expression in the given variateion
derives a sin expression from a variard
derives a cos representation of an expression in the given variations
derives a square root of the given expression by concatenating two
derives a division by combining a division by a variate
derives a product from an expression with a variate argument
derives a subtraction from an expression with a variety of
derives a sum expression from a variadic expression
derives a power of a given expression by applying the
derive a variable from an expression
returns an expression that is not a good answer
returns the first op of the given expression
skip spaces in the string
parses the signs of a string
returns the index of the first character of the given string in
find a variable name in a string
stores a variable in the variable list
clears the variables
returns a string representation of this response
adds a word to the list of words
get the current font colorized word
removes all words from this word set
returns any remaining amount of padding for the bottomnav interface
updates the position of the robot according to the fps
gets the double property b bottom footer b
returns the sum of the title of all fragments
returns the content1 bottom
returns the content1 left
returns the proportion of the right cannons content
returns the content1 top
returns the content2 bottom
checks if the position is not near another position
returns the content2 left
returns the proportion of the right cannons content
get content2 top
returns the bottom position of content 3
returns the content3 left
returns the right coordinate of the content 3
sets the actor relative x position
sets the actor y position relative to the container
returns the content3 top
returns the content4 bottom
returns the content4 left
returns the proportion of right resources
returns the content4 top
returns any remaining amount of leftnav
gets the left footer value for this chart
returns the left title
returns any remaining amount of rightnav
gets the right footer value for this chart
gets the double property b right title b
returns any remaining topnav
gets the top footer value for this report chart
returns the top title
changes the current direction
draws the scene
displays the current scenario
displays the round score
sets the visibility of this component
displays the final score
sets the position of this point to the specified coordinates
creates a bullet that will rotate the bullets counter clockwise
gets the number of bullets in the game
loads a texture
draws the entity
returns the title of the scenario at the given position
getter for questions size
get the question content at the given position
draws a wall with the given color
returns the number of answers that are in the given position
returns the answer content
inits the open gl context
checks if an answer is true
adds an answer to the question list
add an answer to the list of answers
creates the board
displays a message to the user with a new line
draws the updated objective box
sets the border location of the grid
sets the character locations
clear the themes map
sets the room trigger map so the item codes and trigger map can
sets the event location map so the event can be executed
handles the event of the code found
updates the health of this ownable by the specified amount
plays the background music
plays the battle music
adds all sinks to the list
this method initializes this
this method initializes this
this method initializes this
creates a combobox with the available skill types
this method initializes skill type field
this method initializes skill type val
this method initializes main info
this method initializes text skill id
this method initializes ok
this method initializes text skill name
this method initializes text skill level
the server page has been called
tests the method for checking if the connection to the upn p server is
test device discovery ignores non media devices
test that the server reconnect mechanism works
test method for
called when the server page is about to be terminated
this method returns the ncname object
returns true if this element has a non null ncname
returns true if this node has a child sequence node
returns a string representation of the child sequence of this sequence
adds a pointer part to this xpointer
add a pointer part to the xpointer
returns the ncname element that identifies the shorthand pointer
returns the prefix binding for the given ncname
returns the namespace binding for the given namespace
returns true if the prefix binding exists in the context
returns true if namespace binding exists in the context
checks if the ncname has a shorthand pointer
returns true if this collection contains any pointer parts
convert this shorthand to a string
returns the next token in backward direction of code this code
returns the next token without advancing the cursor
factory method for creating a generic extension property
returns the value
sets the value
returns if this attribute is encoded
returns if the location of the error is valid
returns the original location
method to string
return a string representation of this object
return a string representation for this wsdl operation
returns a formatted location string
get a string representation for this wsdl extension
get a string representation of this wsdl type
get a string representation for this wsdl description
returns the formatted location
description of the method
returns a string representation of the xpointer
returns the ncname instance for the given qname
returns the namespace prefix for the xml element
returns the httplocation template with the given name
returns a qname for the given namespace
returns a string representation of the object
for debugging purposes only
get a string representation for this wsdl interface
returns a string representation of this endpoint
method to string
returns a string representation of the fault
returns a string representation of this message reference
get a string representation of this fault
returns a string representation of the fault
returns true if this is a qname object
returns true if this is a token
register an assertion
resets the warnings and warning buffers
returns true if there were errors during the last invocation of
returns true if there were any errors or warnings
returns a summary of the errors in the report
evaluate an xml element fragment in the current context
tests get http authentication realm method
test get name methods
test of set content method of class description
test of get parent element method of class description
test case for
test a single interface description
test that we get a no interface via interfaces
test the behaviour of the target namespace uri
test resolving of a target namespace
set the document base uri
set the uri of the location of this module
set the line number
sets the column number
evaluates a shorthand pointer
checks if the interface is in the interface list
load the catalog configuration from a url
load the properties from the specified url
convert a properties to a uri
returns the wsdlfactory object used to create the wsdl for the wsdl
sets the factory impl name
closes the report
returns the id of the object
close the file
write the xml declaration
write the begin of an element
begin an xml element
write the end of an element
end all the elements
write an element with the given content
write an empty element
write out a tag
write out a tag with content
writes the given tag to the output stream
writes a tagged value with a boolean value
writes a tagged value with an int
registers the given namespace
looks up a namespace writer registered to the given namespace
convert each wsdl file and store result in the
returns the directory
writes a description of the property to the device
sets the cm
test method for
gets the cm value for this get uvby id response
sets the directory to store cm files
returns the cm directory
sets the cmext
gets the cmext attribute of the web service object
getter method for report
sets the impl name attribute of the entity dao object
b sac b implements
u b font color red for internal use only
set the uriresolver used in the transform
returns the uri resolver
get the value of a property
sets a property to be used when retrieving the temporary
scan the children for the window
return a list of the running windows
sets the reference position for this key stroke
this method returns the height of the client area
this method returns the width of the client
get the latest window
called to start the execution of a node
called to start the node now
initializes the test environment
returns the title of the window
get the title of the wmclass hint
resets the culling hint
renders the menu
checks if the ammo can be fireed
gets the reload lag
fires the bullet at the specified location
checks if the ammo can be fireed
check if the ammo can fire
notifies all listeners that a bullet has moved
this method is used to get the reload lag
reset the camera to its default state
checks if the shot can be fire
the reload lag is the number of minutes that the
updates the texture
renders the view
create a hud with a texture and a translation
clears the games list
the action calls the vehicles rotate left or down method
sends this players animation to the main loop
returns true if the sprite is currently firing
this method is called when the user tries to find out if he is
inits the input handler we will use for navigation of the game
determines whether the duck is active or not
walks this army
indicates if the agent is currently walking
update the input
sets this calendars active state
redraws the texture information
sets the information text to be displayed in the status bar
sets the bullet color of the player that was used to draw the
resets the game
the method returns the position of the camera
gets the camera position
refill the ammo
reset this builder to a default state for reuse
increases the health by 1
this initializes the state to initial values
updates the ammo and the ammo text fields
this method resets the server
this method is called when the player has been killed
damages the missile according to the given distance
the item has been added to a container
this method is called when the player died
this method will always return 1
method that fires animation
damage the text area
damages a character
called when a player hit a location
opponent has been killed
called when a player died
refill the ammo after a weapon
updates the chat messages
updates the icon of the weapon
disconnects from the server
returns true if the sync manager is a server
updates the score of the child game
sets the running flag
returns true if the cache has been shut down
add a world to the world list
returns the length of the list
remove a world from the list
sets the length of the value array
removes a world from the repository
remove all the worlds that are in this world
sets the internal list to the given list
this method is called when a condition is met
returns a world with the given name
sets the list of loosely
called when the item is mutated
returns the worlds
returns the element of the integer
sets the size of this example
returns the value of this bit string as a long
mutates this vector by the given amount
iterate over the world
set the bits value
returns a string representation of this object
iterate over the world
returns the value of the bit with the given index
reacts to the population by removing all the genetic information
sets the bit at the specified position
iterate over the named world
clears a specific bit
iterate over the given world
sets the environment
iterate all the worlds in this system
this benchmark attempts to iterate over all the worlds in the cluster
returns a string representation of the bits
sets the population
returns a string containing all the binary characters in this
returns the bits as a hex string
iterate the population
returns the number of worlds in this worlds list
returns a string representation of this object in hexadecimal
returns a string representation of the world
mature the population with the current population
mutates this bit vector
cleans the world from all the worlds
add a population to the group
evaluate the population of the current environment
add an array of populations to this environment
returns an iterator on the worlds
selects from a population the one with the given population
create offspring population
selects a population element from a population
removes a population from the list of pops
selects from a population the one with two cells
selects from a population the one with two cells that are part of it
selects the maturity as a population and returns the resulting population
mutates the population and selects all mutants from the one selected
select from a population population
calculate the mature of all the cells
removes all the populations from this environment
select from a population population and return the array
selects the fitness cell from the given population
selects from a population the one with two cells that are part of it
trims the population from the current population
selects a population from a population
selects a population from a population
selects a population from a population
remove all objects from the given population
selects from a population the fitness of its cell range
returns the populations of this population
returns the number of pops in the game
returns an iterator over the population in the order they were added
removes all individuals from the population that are not in the population
returns the parent selection algorithm
evaluate the fitness of each cell in the cell list
returns the mutation selection algorithm
a method that combines the population into one
returns the selection algorithm for the survival score
mutate a population
returns an iterator of the cells in this row
adds a cell to the graph
adds all cells of the given population to this population
removes a cell from this row
removes all cells from the given population
removes all cells except the given population
removes all cells from the graph
returns the cell at the specified index
returns all cells of this row
returns the number of cells in this row
cleans up the cell list
this method is invoked when a component enters this
exit the application
notify all the machine listeners of a particular event
fire a state event to all listeners
returns the short description of this property
gets the state of the chat
returns true if the user is allowed to enter the state
this method is invoked when the input manager enters this
execute the state command
return the chat key
compares this object to the specified object
writes a message in the log text pane
returns the daemon of all available ports
start a new chat request to the given host
this method is responsible for executing the agent
returns the agent that is being executed
this method is invoked when entering a key value pair
retrieve the start state of this agent
displays a message to the user
returns the data stored in the data structure
this method is called from the input handler to retrieve the
returns the description of this code option code
sleeps for 5 seconds then executes the agent
get the host where the target will be created
action for moving a host from the agent table
action to perform when the destination host is selected
returns the port that the agent is running on
forces the migration to execute
constructs a java code for a class
return the host where the service is running
returns the target port of the connection
runs the migration code
displays all migration agents
returns a string representation of this object
resolves agent grams from the queue
returns a description of the agent
returns a string representation of the object
returns a short description of this object
this method should be implemented by subclasses
creates a new instance of the daemon service
returns a string representation of this object
get a string representation of the agent
set the training data
trains the network with the given sequential criterion
handle the terminated event
converts an xml training data into a bunch of objects in the database
serialize this class into a binary representation
returns the iteration of the equation
returns the amount of error in the last call to
set the value of iteration
set the value of error reached
gets the criterion
set the value of criterion
get the number of unchange events
sets the unchange count
invoked when a toolbar button has been clicked pressed
sets the criterion
returns the number of values in this enumeration
sets the value of the count property
build the tree
called when a button is clicked
returns the template directory for the script
print the network connections in the console
invoked when a button is clicked
set the icon for the button
adds the listener to the tool bar toolbar
show information in the dialog
removes all buttons from the panel
scan the nodes in the parent passed as parameter
displays a message in the message box
enables the named button
returns the path to the node
sets the text1
sets the tool tip text for the button with the given name
sets the text
returns the aitree node with the given name
add the listener to the parent toolbar
clears the text
returns the aitree node object with the given id
returns node of given class
removes an action listener from the button
sets the name of this object
action listener implementation for toolbar events
return the name of this node
returns node of given class
fire click event
set the id of this quorum peer
defines the tool bar button
returns the id of this node
adds listeners to the popup menu
sets the icon for this plugin
define a button
removes all listeners for popup menu events
sets the icon
defines the tool bar button
setter for property data set
fires an event to all listeners
returns the icon associated with this node
method toolbar clicked
method new current
adds a new variable to the parser
adds a new menu item with the given name and text
inserts a new line at the specified row
returns the child node with the given id
adds a new menu item with the specified name and text
deletes the specified row
load the project
returns the currently selected node null if nothing
expand the node nd in the tree
return true if this file should be shown in the directory pane
deletes the given rows
enables disables the sub button with the given name
save the project
disconnects all connections from specified neurons
restore the network structure to the saved one
disables all buttons
enables all buttons
loads the project with the specified filename
create a new empty network structure
disconnects all connections from any neurons
saves this template object as a file
copy rows from one data set to another
returns the aiframe with the given id
saves the project to the specified file
get an iterator over the frames in this frame
appends a menuitem to a specified parentid
opens a file
removes a menu from an existing menu
returns the number of neurons
appends a menu to specified parentid
puts the given data object into the data table
setter for property neuron size
opens the selected file
returns the number of letters of the weight
returns the data object with the specified id
sets the number of letters of the weight
removes the specified row
returns true if the point x y lies inside the rectangle
returns the number of elements in this collection
appends a menu to a specified location
returns true if weights are hidden
reorders the data object list by swapping the id
sets the value of hide weights
main processing method for the groovy script object
get the amount of pixels by which the x axis is layed out
add a menu to the menu bar
set the amount of pixels between x and y axis to
get the amount of pixels between each line of the vertical
adds a layer to the network
set the amount by which the y axis is visible
gets the to neuron
returns true if the vertical direction of this container false if it
build the toolbar
gets the from neuron
add a connection connection
gets the layer with the specified id
set through jelly if defined in the xml schema
caret listener implementation
this method returns the current weight value
get the weight boundary for this code default location renderer code
remove a connection from this connection connection
sets the weight boundary
set the weight value
sets the id
returns the boolean value of the selected state
checks if the given position is within the bounds of the neuron
sets the selected flag
adds a new neuron to the network
returns true if the point is inside the shape
builds the menu
returns the id of the neuron
returns neuron with the given id
sets the html text
returns a vector of selected neurons
returns the html text with a br
checks if the given position is within the bounds of the neuron
returns the id
creates the dynamic script menu
returns a data object with the given id
returns a vector of selected neurons in this layer
getter for property parent
p check a connection position
setter for property parent
sets the selection state of all the neurons in this network
get the root container of this container
clear all connections created by this connection set
get the name of this layer
returns the selected connection
creates and returns the edit menu
set the layer id
returns the selected layer
get the id of this layer
reconnect the network
selects all neurons in the network
builds the project tree
refreshes the tree model
convenience method to retrieve the user object as a network
called whenever the value of the selection changes
adds a drawable object to this layer
mouse clicked event occurs
initializes the menu items for this subnew
handles a project event that is received by the desktop
disposes the thread
gets a drawable object associated with a particular object id
remove a drawable object from the composite
sets the color of the node
returns all widgets
request a refresh of this object
renders a line between the two specified points
adds a renderer to the list
returns true if the database needs to be refreshed
clears the graph data
returns the renderer at the given index
set the graph bounds
called on the event dispatching thread not on the worker thread
sets the graph data for a given graph
paints the graph
returns the renderer
set the graph data to be displayed
paints the graph
get the settings object
set the graph data to be plotted
thread for repaint
set the network for this graph
this is a convenience method that converts a list of
returns the list of points that are used to draw the graph
repaints the graph
event handler for the toolbar buttons
clears the viewer
returns the guinetwork
returns the network pane
setter for property selections
returns the entries
set client class name
setter for property entries
returns the client class name
returns the entry with the given name
returns the class of the client that this factory will use to create
returns the entry corresponding to the given value
adds a property to this category
returns the property at the given row
sets the vector with all properties
set the client object that will be displayed by this component
creates a tree structure from the data in the file
return the seleted instance from the table
returns the value at the given row and column
returns the selected item
sets the value at the given row and column
sets the selected item
returns the name of the data element at the specified row
returns the name of the column at code column index code
setter for property propertylist
sets the list of entries
setter for property handler
determine if a cell is editable
invoked when an internal frame is activated
get the value of the selection
returns the i ohandler
at the moment just do nothing
method internal frame closing
load the network
append a line
get the value of the property from the client object
invoked when an internal frame is de activated
invoked when an internal frame is de iconified
invoked when an internal frame is iconified
sets the value of the property
writes to the log frame
setter for property setter
sets the controller to the given path which can be set by
setter for property getter
sends a command to the server
returns a list of commands that start with to complete with
initializes the console and starts it
save the network
updates the command history
setter for property select
this will go to the command history
this will set the text of the command line
transfers the output of this packet to the output stream
set the current network
returns the id of this layer
refreshes the tree
returns the input of the command
mouse released event from mouse listener
setter for property input
returns the transfer function
returns the desired vector of the desired rules
clones the structure of a data set
sets the desired vector of the problem
returns the output
setter for property output
returns the string representation of this element
remove an element from the list
checks if the user clicked on the neuron according to the mouse event
get a new element from the input data
return the next neuron id
set the network for this iteration
p creates a new instance of check connection selection event
adds a new input category
sets the next neuron id
returns true if this step has been currently running
removes the input category at the specified index
selects a connection
adds an output category
returns the seed of this random number generator
returns true if this learning rule is ready to learn
sets the seed of the random number generator to the given value
resets the random number generator
returns to neuron id
resets the counter to 0
removes the desired output category
resets the weight value
returns the id of the to neuron layer
learn the data in this layer using the specified training element
randomizes this weight by the value of the weighted average weight
starts the simulation
setter for property to neuron id
selects a neuron on the desktop
setter for property to layer id
add a weight change event listener to the listener list
remove a weight change event listener from the listener list
run the single iteration of the neural network
returns the neurons in the layer
returns true if the object is part persistable
returns whether this is an output layer
method to halt the iteration of the network
sets whether this is an output layer
set the name of the value for the given key
add a bias neuron
get the learning rule
get the double value for the given name
set the learning rule to be used for this learning algorithm
gets the name of the double value in this double map
returns the selected state of this button
sets the transfer function of this layer
returns the input function
this method is not implemented
returns the number of neurons in this layer
sets the number of neurons in this layer
paints the line
this method adds a neuron to the network
validates the title of this editor
add a neuron to this layer
this method checks if the id is unique in the network
add a layer to the network
clears the list of neurons
returns the layer type
sets the type of the layer
returns the column names
sets the column names vector
adds the column name
set the rows of the table
adds a row to the table
returns a string representation of the table
returns the iteration terminator
set the value of iteration terminator
returns a string representation of the layer
sets the network
returns the next layer id
gets the prompt
add a controllable to the hub
registers an iohandler to the list of available iohandlers
handle console exception
returns the current iohandler
starts the parser
returns a vector of names of all controllables of this panel
get the unique controller id assigned to this
remove a controllable from the web hub
transmit a command to the hub
gets the hub attribute of the hub user object
removes the given iohandler from the list of handler for this connection
displays the welcome message
gets a list of commands for a given handler
gets the value of name
returns the old name of the company
returns whether this object is part of a container persistable
returns the command list
adds a project event listener
returns the controllable which is assigned to the given controller id
removes a project event listener
retrieves the xml file
initializes a part
sets the project
release all resources
sets the part name
set the next layer id
gets the value of partname
handle a project event
returns the project that contains this project
loads a project from the given path
sets the parent project of this project
this method is called after the query is executed
saves the project to the specified file
called before this store is persisted
returns the path of the project in which this part is defined
adds a new part to this project
helper method to add a part to the project
creates a controller
removes a part from this project
returns the project part identified by the given name
returns the project for a given part
handles a project event
fires the terminated event
removes the specified iteration event listener so that it no longer
notifies all registered listeners that the specified iteration event has
insert the range of layers to the specified index
returns a string representation of this layer
reconnects the database after a successful retrieve operation
creates a controller for the network
returns the time duration in seconds
loads a drawing from the storage
rotate this entity by the given angle
this method determines whether the structure of the
return true if this is a text i
returns the branch diameter for the given count
sets the alpha value
sets the beta
cut sheet info
how many pipees are there to be connections
calculates head count for each vertex in the graph
count the number of heads during the given pipe
sets the coordinate
swaps the end of this pipe
returns whether this comparator is reversed or not
makes the sort order reversed
adds edges between two nodes in the tree
order branch pipes
this method creates a point object using the center point
is this a initial pipe
renders an entity
is this a grooved pipe
return the chain start that is needed to fit the pipe
tests if there is a flow edge from the given area to the
returns true if the direction is equal or opposite to the other
returns the angle between two directions
returns the opposite direction of this point
return the number of vertexes in this graph
returns true if the directions are equivalent
does this object have an equal end in its direction
returns true if the hole has been applied
compute the diameter of the branch
get the max diameter which is not equals to the parameter
gets the value of the measure property
gets the main
returns the target hole which is adjusted by the given
returns a list of all the movements that will be performed
get the state of a given point
invokes a url on the server
this method is called when a result is available
an exception has been thrown during the execution of the task
the run method
write the properties out to the given stream
check if the file is a directory
returns the host name
run the shutdown hook
sets the value of a property
returns inet address of the host
create a classloader for this url
returns true if the file is a directory
this method is called when the packet has received data
sets a property
runs the server
runs the application
an exception has occured while waiting for the response
returns an inet socket address for this server
returns a file input stream
this method is used to create a socket connection to the server
creates a proxy for the given url with the given class
called to invoke a method
set the content
generates a new guid
this is the method that actually performs the work
this is called when the execution of the method is invoked
this is called when an exception is thrown during invocation
handle a resource result message
handles a resource error message from the application
find a method on pp remote interface
sets the answer address based on the message
starts listening for incoming connections
adds a route with the given guid and port
adds a new object to the password object factory
registers the given invocation listener
determines if this server is closed
closes this server socket and all connections it has
get the proxy factory that this crawler should use to create
get the code timeout invocator code for this code timeout code
returns the fullname
sets the fullname
returns the link
sets the link
sends a string to the server
this method reads data from the socket and returns it
connects to the server
returns true if the coordinates are within the grid false otherwise
constructor for the threaded receiver
updates the sunk if it was hit or not
constructor for the threaded receiver
sets the position of the agent
displays the board in the console
resets the positioning of this code pos code
returns the string representation of this color
returns true if the coor already has been attacked
this method is used to block until user hits an invalid input
returns the input of the process
checks if the battleship is sunk
reads the input from the command line
returns the contents of the console as a string
reset all ships
reads the user input from the system
displays the boards
print the deck to the console
scroll the text
convert an index to a letter
checks if a given position is occupied by a player
sets the state of the binary mode for this connection
returns the highest number of elements currently in this queue
clear the high count
get the timestamp of the floating point frame
set the timestamp of the floating point message
returns the number of bytes that have been pushed
get the sequence number of the floating dock window
set the sequence number of the floating dock window
this can be used to get the transaction header for this message
this method returns a string with the date formated for the
returns the number of events counted
true iff the set contains k
flag indicating if the database uses key columns
returns the first element in the list null if none
returns an iterator over the elements in this list in proper sequence
sets the exception listener
returns whether this is a threaded execution
returns true if the server is running
sets the maximum rate
set the control message builder
sets the exception listener
returns the exception listener of the underlying exception
changes the default message listener
returns the number of connections to the external throttle
get the number of sessions being managed
set whether to store topics in the database
checks if the writer is open
set the id of the client that sent the message
get the id of the client that sent the message
returns the port
sets the port
get the service name
sets binary data mode
set the service name
returns true if close is called
gets the net reader queue that contains the packets that have been read
return the autocommit flag
returns the number of uncommitted changes
gets the number of transactions in this thread
set whether to use keys rather than just use the key
returns the value for id empresa null
setter for property id empresa
returns the value fornecedor
setter for property id fornecedor
set the endereco
get the value of cnpj
set the cnpj
test of get entity manager method of class tcc
test of create fornecedor method of class data
test of update fornecedor method of class persistence
test of get fornecedor method of class persistence
test of delete fornecedor method of class persistence
read a number of bytes from the input stream
returns the previous state
sets the previous state
this method sets the state of the class
the transition transition of the activity is before the activity is executed
invokes the after transition method
invoke the after transition method
sets the process group
gets the progress status
indicates if the application is in a state state managed or not
sets the state managed
set the transition manager
gets the value of the process group property
gets the termination code
gets the termination code as string
load the state of the process
loads the process state
performs the specified transition
performs and returns the given transition
aborts the transition and allows it to continue to run
returns the state of the process
sets the state of the process
returns the process state
changes the process state
sets the progress status
sets the termination code
notifies all registered process termination listeners that the process has terminated
returns the max number of times that transition object is
validates that the maximum number of attempts is greater than zero
get the string that represents the delay for the transition object
constructor for the parser
convert the given path to dot file
returns the content of the first element with the specified tag name
increments the primitive value mapped to key by 1
adds listeners to the table
initializes the message queue reciever and message listener
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j button fold
this method initializes j button check
this method initializes j button call
this method initializes j button raise
this method initializes j button allin
this method initializes j text field raise value
this method initializes j progress bar timer
initializes the jms message delivery queue connection
sets can finish
set can go next
set can go previous
sets the can cancel boolean variable
set the problem text
sets the title text for this document
set the subtitle text
sets the background image to the passed image
sets if the user can finish the wizard
sets if the user can cancel this task
set the problem text
returns the current problem
this method is called when the dialog box enters the screen
called when the cancel button is pressed
called when the animation has finished
sets the background color
set background color for problems
set the color of the problem text
set header image
sets the header icon
sets the background color of the actions
sets the background color of the problem
clear all registered global class screens
update gui is called when the user has changed the state of the
called when cancel button is clicked
returns the invalid address
convert the object to a string
returns the distance in miles between two locations
return the distance between this location and the supplied location
this method checks if the location is valid
store the current location
gets the user id
displays the information about the friend
sort the friends table of the player
returns the unique id of this class
connects to the database
get location information for a given user
update row in database
delete a row from the database given the uid
set the location of the row with the given uid
disconnects from the database
test method for
test method for
sends a raw command to the ftp server
the field editors are now created here
fills this field editors basic controls into the given parent
sets a parameter
sets a parameter
sets a parameter
sets a parameter
returns the wrapped statement
executes the statement
executes the statement which must be a query
execute the sql insert update or delete statement
closes the statement
adds the current set of parameters to the statement
get the image for the interface
this method returns an image for the given field
get the image for the method
returns the label for the file name
returns a label for the specified type
creates a property label for a property
returns the label of the method
returns a label for the given type
returns the label for a fast code type
creates the label for a field
gets the value of create variable data
release any acquired resources
release any acquired resources
returns true if this parameter is deprecated
takes a list of file names and checks that each exists
parse the argument list
prints the token definition to interface file java
checks if the given node is a reachable node
assigns g value to all nodes in the graph
print out the grammar without actions
parse the argument list
is this a subset of code a code
subtracts the given bit set from this in place
prints the token definition to interface file java
prints the token definition to interface file java
prints the long options to interface file java
print a short option
accepts a visitor
returns the table reference with alias alias
returns all tables defined in current context
gets the parent sql context
accepts a visitor
accepts the given visitor
accepts the given visitor
accepts a visitor
accepts a visitor
accepts the given visitor
accepts a visitor
gets the left condition
gets the right condition
accepts the given visitor
accepts a visitor
accepts the given visitor
accepts the given visitor
accepts the given visitor
return the table reference with the given alias
accepts a visitor
returns all tables defined in this database
gets the sql context that this sql context is part of
gets the field name list attribute of the field name object
accepts a visitor
returns the name of the variable
accepts the given visitor
accepts a visitor
accepts the given visitor
gets the tables
accepts a visitor
accepts the given visitor
accepts a visitor which will perform some operation on
accepts the given visitor
accepts a visitor
accepts the given visitor
accepts a visitor
accepts a visitor
accepts a visitor
accepts the given visitor
returns the element number of the current element
accepts a visitor which will perform some operation on
sets the column position of the header
accepts a visitor
returns the table reference for the given alias
gets the tables
accepts the given visitor
accepts the given visitor
accepts a visitor
accepts the given visitor
accepts a visitor
accepts a visitor
accepts a visitor
it checks if the given identity is in the left table
gets the alias of the expression type
accepts a visitor
accepts the specified visitor
accepts a visitor
accepts the given visitor
returns the table reference
accepts a visitor which will perform some inference
accepts the given visitor
get the element expression
sorts the elements in the list in place
returns the alias of this field
returns the name of the table
accepts the given visitor
returns the table reference
accepts the given visitor
accepts the given visitor
returns the number of fields in the element
accepts a visitor
checks if all the fields are unique
accepts a visitor which will perform some operation on
accepts the given sql visitor
accepts the given visitor
returns the select elem at the given index
accepts the given visitor
accepts a visitor
returns the table reference with the given alias
accepts the given visitor
gets the tables
accepts a visitor
accepts the given visitor
returns true if the named column is a column
accepts the given visitor
accepts a visitor
accepts a visitor
accepts the given visitor
accepts the given visitor
accepts the given visitor
accepts the given visitor
accepts the given visitor
get the name of the table which this column belongs to
gets the element number of this array
accepts the given visitor
accepts a visitor to this code sqlstatements code
accepts the given visitor
accepts a visitor
accepts the given visitor
accepts the given visitor
accepts the given visitor
accepts a visitor
accepts a visitor
accepts a visitor
accepts the given visitor
accepts a visitor
accepts the given visitor
accepts a visitor
accepts a visitor
accepts the given visitor
accepts a visitor
accepts a visitor
checks the semantic of the current token
generates the sql for this node
accepts the given visitor
accepts the given visitor
accepts the given visitor
checks if is column
accepts a visitor
sorts the sql statement in this code sqlstatements manager code instance
accepts the given visitor
returns the number of identifiers in this container
accepts a visitor
accepts a visitor
returns the left hand side of the expression
returns the right hand side of the expression
return true if this table contains a column with the given identifier
returns the table
accepts a visitor which will perform some operation on
returns the table reference with the given alias
accepts the given visitor
accepts the given visitor
accepts a visitor which will perform some operation on
accepts a visitor
parse the argument list
initialize the database system
checks if a given table exists
returns true if the given column exists
reports a trouble error or warning
the error is a message and it will be concerned with an error
returns the standard type of this member
returns the creation expression of this column
returns whether this column is equivalent to another
returns the standard type of this member declaration
returns the creation expression of this field
returns true if check is equivalent to this column
get the standard type of this type
returns the creation expression of this field
returns true if this column is equivalent to the other
returns the type of this informal description that can not be used as
returns the width
returns the height
returns the standard type of this type
returns true if this column is equivalent to the given one false
returns the type of this informal description that may not be set
returns the creation expression of this jboolean column
returns true if this column is equivalent to the other
returns true if this column is equivalent to the other
returns the standard type of this parameter
returns the creation expression of this column
returns true if check is equivalent to this column
returns the standard type of this variable
get the standard type of this type
returns the creation expression of this column
checks if this column is equivalent to another
returns the creation expression of this jboolean type
returns true if this column is equivalent to the other
returns the standard type of this variable
returns the creation expression of this column
if this column is equivalent to another
returns the standard type of this informal description
returns the creation expression of this field
returns true if this column is equivalent to the other
returns true if this column is equivalent to the other
returns the type of this informal description that can not be used as
returns the creation expression of the class type
returns true if check is equivalent to this column
returns the type of this informal standard object
returns the creation expression of this field
returns the standard type of this variable
returns the creation expression of this image column
returns true if this column is equivalent to the other
returns true if check is equivalent to this column
returns true if this node is a column
returns the type of this informal standard object
returns the creation expression of this date column
returns true if this column is equivalent to the other
returns the standard type of this array type
analyses the expression semantically
second pass quick check interface looks good
returns true if the named column is a column
generate the code in pure java form
determines whether a given table exists
analyses the expression semantically
determines whether a column exists
analyses the expression semantically
analyses the expression semantically
analyses the expression semantically
accepts the specified visitor
generate the code in pure java form
check expression and evaluate
sets the prefix to use for this name expression
analyses the expression semantically
generate the code in pure java form
analyses the expression semantically
generate the code in pure java form
analyses the expression semantically
creates the fields for this test
generate the code in pure java form
check type body
returns the sql statement of this phylum object
analyses the statement semantically
accepts the specified visitor
accepts the specified visitor
checks that this type is valid
analyses the expression semantically
generates jvm bytecode to evaluate this expression
generate the code in pure java form
analyses the expression semantically
returns the type of this class
returns the xprotected statement of this statement
analyses the expression semantically
accepts the specified visitor
generates jvm bytecode to evaluate this expression
analyses the statement semantically
accepts the specified visitor
generate the code in pure java form
convert this reference to the java equivalent
accepts the specified visitor
returns the original unprotected statement
returns a string representation of the object
returns the vm signature of this type
appends the vm signature of this type to the given buffer
generates a sequence of bytescodes
returns the size of the expression
returns the context of the body
add blob to list of blobs
returns the table reference with the given alias
returns all tables defined in current context
reports a trouble error or warning
sets the connection
generate the code in pure java form
generate code for the given grammar element
generates jvm bytecode to evaluate this expression
accepts the specified visitor
create a pretty printer for the position and column
returns an xsqlc pretty printer configured for this
returns the sql text
analyses the expression semantically
analyses the expression semantically
generate the code in pure java form
returns the sql expression for this phylum object
returns true if this type has an alias
returns true if the name of the column is the name of the
analyses the expression semantically
analyses the expression semantically
initialize the compiler read classpath check classes
parse the argument list
returns the text type of this token
adds a column to the text type array
returns a column info object for this column
implements the dbi visitor pattern
calls the visitors code visit dbi code method if it
returns the type code of this type
makes a column to be stored in a database
returns the column info for the given boolean
implements the visitor pattern in the dbi data object class
returns the month code as a byte
returns the column info for the month
visitor pattern implementation
returns the blob code
returns the column info for this column
visitor pattern to be used in this blob declaration
implements the visitor pattern for this class
returns the typ code
returns the column info for the given nullable state
visitor pattern implementation
this method is used to create a schema for the given package
accepts a visitor
returns the name of the sequence
returns the type of this color as a byte
returns the standard type of this array type
returns the column info for the given boolean
implements the visitor pattern in the dbi data object class
compares this key list to another
this method supports a visitor pattern over a
grants a visitor to this object
this method supports visitor pattern over a
accepts a visitor which will perform some operation on
this method is called when a hint is set on a comming object
returns true if the database is of the given type
this method is called by a dbi visitor
returns the boolean value of the argument
returns the column info for the given nullable state
accepts a visitor
implements the visitor pattern for this data object class
returns the image type
adds a column to the given code dbaccess code object
returns the column info for the given boolean
accepts a visitor
runs the command line
reports a trouble error or warning
the method code report trouble code is called when an error occurs
generate a header that is common to all java files
parses the arguments passed to the method
implements the visitor pattern in the dbi graph
accepts a visitor
reports a trouble error or warning
positions to the beginning of the current query tab
returns the column info for the given nullable state
creates a schema for the given package name
visitor pattern implementation
accepts a visitor
visitor pattern implementation for dbi visitor
accepts a visitor
fetches a list of table definitions
return a list of insert statements for a given table
compare the expression table name with the table definition
returns the type of this timestamp
returns the column info for null if the column is null
implements the dbi visitor pattern
implements the visitor pattern for this class
this method supports visitor pattern over a
accepts a visitor
this method supports visitor pattern over a
returns the iso 4217 code of this time
returns the column info for the given boolean
visitor pattern implementation
returns the typ code
adds a column to the given code dbaccess code object
returns the column info for this column
accepts a visitor
implements the visitor pattern in the dbi data object class
returns the date code as byte
returns the column info for the given nullable state
visitor pattern implementation
returns the byte type of this type
adds a column type to the given code a code object
returns the column info for the given nullable state
visitor pattern implementation
implements the visitor pattern in the dbi file
returns the column info for null
accepts a visitor
implements the visitor pattern for this class
implements the dbi visitor pattern
accepts a visitor
visitor pattern implementation
accepts a visitor
returns the type of this field as a byte
adds a column to the given code a code object to the given
returns the column info for the given nullable state
visitor pattern implementation
implements the visitor pattern for this class
returns the column info for the given boolean
implements the visitor pattern for this class
implements the visitor pattern in the dbi data object class
implements the dbi visitor pattern
implements the dbi visitor pattern
prints a key
this method will be called by the dbi visitor
accepts a visitor
returns the typ code
adds type information to the given column
returns the column info for the given nullable state
visitor pattern implementation
implements the visitor pattern in the dbi data object class
implements the visitor pattern for this data object class
returns the type of this value
adds a column to the given code a code object to the given
returns the column info for the current row in the result set
accepts a visitor
visitor pattern implementation
implements the visitor pattern in the data object class
call the visitors code visit comment code method if it
implements the visitor pattern for this class
implements the visitor pattern for the dbi data object class
parse the argument list
returns true iff comments should be parsed false if to be skipped
returns the mode of the compiler
returns maximum number of characters allowed in order by
whats the maximum number of columns in an order by clause
grant the access to a user
get the constraint name
revoke a user from a database
get the description of the constraint
grant a user access
returns the maximum number of characters in order by
whats the maximum number of columns in an order by clause
revokes access to the given user
close all connections and remove all connections
closes a connection to a database
convert from sql to oracle
returns the default connection
sets the default connection
converts an sql query string into a database specific sql string
returns a new dbconstraint exception if the type specified is not unique
creates a new exception if the type specified is not specified
not yet implemented
convert from sql to oracle
parse where current
grants a user to a user
convert from sql to sql
extracts date from data
returns the error code of this exception
returns the sqlstate of this code cached row set impl code object
returns the original sqlexception
returns a dbconstraint exception that is a type of error
grants access to a user
revokes access to the given user from the database
if id 0 then the row id 0 otherwise the table name
returns the sql that is parsed from the given sql string
returns a sql string that can be used to create this database
converts a date to a string
convert time to hh24 mi ss
interrupts a connection
this method parses a for update statement
convert timestamp to a string
grants a user access to a database
grants access to a user
convert date to iso format
revokes access to a user
convert time in hh mm ss
convert from sql to oracle
convert from sql to oracle
open connection to database
convert timestamp to iso 8601 format
close the connection to the database
this method is called to notify the thread of a connection
interrupts the currently running connection
converts date to yyyy mm dd
returns the maximum number of characters to order the driver
convert time in hh mm ss format to string
returns the maximum number of columns in an order by clause
convert the timestamp to a string
revoke access to the database
grant access to the database
add a null break
prints a short type
convert sqlexception from sqlexception to a db exception
adds a fixed value to the list of parameters
convert an sqlexception into a java
opens the given sql statement as a child of the current connection
retrieves the text of this code statement code object
adds a boolean to the list of
convert sqlexception into a database exception
adds a date to the list of parsed parameters
moves the cursor down one row from its current position
returns the cursor name
adds a month to the function
executes the given sql statement which may be an insert update
close the result set
adds a week to the list of week steps
mangle a string literal into a meaningful token name
adds a new int to the list of parsed arguments
grants a user to a access resource
adds a string to the list of parsed strings
adds a time to the list of parsed arguments
parse the current token from the where space
convert from sql to oracle
parse a for update statement
starts a protected context
commit a write on the current transaction
abort a protected transaction
returns true if the exception allows a retry of the
returns true if the retry function should be used
returns true if the item is not protected
formats the given string using the current locale
compares this timestamp object with the specified timestamp object for
returns a string in the specified locale
tests for equality between two timestamps
returns a string representation of this timestamp object in the specified
convert the timestamp to sql format
converts this code date code object to a code gregorian calendar code
returns a copy of this week
sets the scalar
add the specified number of weeks to the current date
returns a string in the specified locale
gets the scalar
adds a number of weeks to the week
converts this code calendar code to a code gregorian calendar code
compares two time objects numerically
gets the month
compares this week to another week
get the value of the hours register
get the minutes component of the vector
gets the day of the month
get the seconds component of the vector
two time scales are equal if they have the same scalar
get the week of the year
returns a string representation of this duration in the given locale
returns the weekday
returns the sql representation of this duration
adds the specified days to this date
method that returns a not null date
convert date to a string
get the first day of the month
subtracts the specified date from this date
get the last day of the calendar
subtracts another date from this date
gets the maximum scale value allowed by this zoom control
convert the time in hh mm ss
get the date for this calendar
compares two dates for equality
tests whether this week is equal to another
compares this fixed value to another object
returns a string representation of the week and 53
compares two dates for ordering
returns a string in the specified locale
returns a copy of this month
checks whether this code not null code equals another code object code
returns the sql representation of this value
the sql function is used in java
adds the specified months to the current date time instance
add a month to this month
compares this month object to another month object
returns a string representation of this object in the specified locale
returns the month of the day which contains the start date
returns the sql representation of this object
answer the first day of the date
gets the last day of the month
get the date of the oldest log file
two months are equal if they have the same scalar
returns the date in the specified locale
returns the sql representation of this month
returns a stream to the blob data designated by the given
get the definition of this type
getter for the def
checks the integrity of a type field
checks if the supplied commandable can be executed using this
generates a code for a given code print writer code
generates the code for the field
checks that commandable is valid according to the given context
returns the position in the array
get the definition of the separator
generates the constructor
returns the original java code
description of the method
checks the field code
get the serialized object at the given position
get the parent report
returns the object which the given position is encoded in the stream
returns the code definition collector code for this report
return the next synthetic number in the generated code
returns whether the designated column is null
returns the position of the operation
checks the syntax of a method invocation
checks the code for correctness and triggers
get the last identifier
we need this since we are not using this
returns the style of the block
returns the page that is being displayed
check if the current instruction is a unique variable
generates the code for this type
produces a field declaration from this type
gets the source
returns the jml this statement
checks that the block is undefined
checks the context for the code
returns the code generated by this ast for labeled statement
parse the arguments
returns the following statement
returns the style of this field
checks the correctness of this definition
generates the field declaration for this type
reports a trouble error or warning
checks the code
compute the type of this expression called after parsing
creates an ast for the constructor call
create an annotation constructor call that is a junqualified instance
returns an expression which is a statement generator
check expression and evaluate
returns the code for this labeled statement
builds the method code to add an array to the model
returns the expression
checks whether the current token is valid for the given page or not
checks that the block is valid
returns an expression for the case that we have a token reference
gen size of this expression
generates a vkcode for a given destination
gets the name of this token
returns an expression for the type of this field
returns the definition collector for this environment
returns style definition with the given name
checks that the code is correct
add a style to the vector of styles
returns the compilation unit context for this compilation unit
checks the syntax of a method body
generates a code for the given code print writer code
checks that all code of a block are valid
get the id of the parent of this node
generates the code for this method
generates a bytecode for using a vklatex program
create an annotation constructor call that is a junqualified instance
compute the type of this expression called after parsing
returns a jassignment constructor call that is not a constructor call
generate a textual localization statement that looks like this locale
checks that the block code is valid
creates the code for this jml declaration
generates the code for a token definition statement
checks that the block is valid
returns the jstatement generated for an empty statement
returns the following statement
compute the type of this expression called after parsing
returns the code for this catch clause
creates an ast for the constructor call
returns the style with the given name
generates the field declaration for this
returns the jstatement for a labeled statement
returns the block with the given name
sets the prolog
getter for the definition collector
returns true if autofill should be used for this query
get the type of column used for list columns
returns an empty constructor
get the type of this week field
get the identifier of this node
returns the column info for the current date time
generate a menu definition in a top level type
get the type of this report
reads the collector object for the given file
generate an actor definition node in the form of a dom node
generates a code for the given code print writer code
get the field definition for a field
checks if the command is valid for this command
checks if the trigger is contained in the given code
get the type of column in the list that this data store
generates a code for a given command adding the key modifiers to
generates a unique identifier that can be used in
generates a commandable object
generates a code for the given code
add a field definition
generates the constructor
get the type of this field
not allowed in code
moves a code lt comments gt code to the code lt comment gt code
returns the standard type of this type
get the command definition for the specified command name
get the type of column in the list that this data store
returns a column info object for the current row in the database
returns an expression that references the constructor to this
get the type of this report
get the type of this into the form
add a command to the registry
returns the constructor method of this class
returns the column info for the current row in the table
generates a code for the given code print writer code
returns the type of this jstring literal
get the menu definition for a given menu name
generates a vkcode on the graphics sheet
checks that the definition of this command is valid
checks that the method code is correct
returns an expression representing the source of this jstring literal
checks that the given context is correct
returns the body of the command
generates a code for the given command
return an array of identifiers that can be used to store
generates a code for the given command
adds a menu definition to this module
create an array of labels
returns the locale of the page
checks if the locale is specified
checks if the argument is not a language set locale
checks that this block is valid
returns an actor definition for the given actor name
checks whether the given locale condition and phylum locale are
get the type of column in the list that this data store
add an actor to the engine
checks that the context is a valid program
returns the constructor method of this jenum constant
get the type of this field
generates a code for the given code print writer code
generates the code for a code writer code
get the standard type of this type
returns the column info for the current row in the table
get the type of this report
generates a code for the given code print writer code
checks definition of a method or constructor
get the type of column in the code list
returns the jstatement for an action which may be null
returns true if this form has a new form
checks definition of all modules
generates a code for the given code
get the type of this into the constant pool
checks that the code for this column exists for each column
get the column info
get the super window
get the type of this report
create an expression with an action number
generates a code for a given code enumeration value
check definition of a table
generates a code for the given code print writer code
generate a hirphenation of the current type
setter for property list
returns the commandable for which this command is command
checks the code of each element in the given vector
getter for the list
returns the definition collector for this environment
returns the full name of the class including the package name and ident
returns the visible height
checks if there are any inserts for this type
returns true if autofill has been set
builds a jmethod declaration that calls to a show block
returns true if there is at least one new form
checks if the check code is valid according to the current context
returns true if there is a shortcut
returns the default alignment
checks the correctness of the list
returns the context of this class
check if the current locale matches a cwarning locale
generate a hilog auto constant pptl expression for the given jml localization
checks the definition of this node
generates code for the given actor reference
generates a code for a file that has the given name
generate code for the given command
generates the code for a code writer code
checks that this block is valid
generates a code for a codegeneration to print
generates a code for a given code print writer code
get the type of column in the list that this data store
get the type of this into the constant pool
generates the code for a code print writer code
overridden to type vtimestamp column
returns the column info for the table
get the type of this report
get the type of this into the constant pool
checks the current context is a valid definition for the given method
generates a boolean code for a given code
returns the column info for the current timestamp
generates the code for the method
this method generates the localization for the specified destination
get the type of column in the list that this data store
get the type of this report
returns the jstatement for an action which is either a prefix statement or
get the type of column in the list that this data store
generates a code for the given code timestamp type
generates a code fragment for a code
get the type of this into the constant pool
get the type of this into the constant pool
get the type of column in the code list columns code
returns a column info object for the current time in the database
get the type of this report
get the type of this report
get the type of this code field code
generates a code for the given code enumeration value
generates a code for the given grammar element
returns the constant value of the expression
gets the integer
returns the column info for the database
returns the jstatement generated for an action
returns the fixed position for the value
get the type of this report
creates an annotation method for this method
returns the string value of this node
generates a sequence of bytecodes
generates a code for the given code print stream
checks if the given commandable actor is defined
generate the code for a java script constant
generate code for the given grammar element
get the type of column used for list data
generates the code for the given commandable object
get the type of column in the list that this data store
create an ast for a constructor call that uses the given
creates a jreturn statement for call
get the type of this class
generates a code body for a code java script code command
get the type of this into which the variable is declared
returns the standard type of this type
checks that this block is a valid code for the given context
returns a column info object for the current date and time
returns the column info for the current month
get the type of column in the list that this data store
getter for the type
get the type of this report
get the type of this report
gets the pretty printer
generates a code for the given code enumeration value
generates the method for this method
generates a code for the given code print writer code
returns the constructor of this junqualified instance
get the type of this into which the variable is declared
generates a code for the given code enumeration value
returns the constructor method of this class
get the type of column in the list that this data store
returns a column info object for the current database
get the type of column in the list that this data store
get the type of report this is not implemented
returns the default alignment
get the type of this code creference code
returns the column info for the table
generates a code for the given code print writer code
get the type of this into which the variable is declared
get the type of column in the list that this field represents
get the type of this report
returns the column info for the database
get the type of this access
generates a code for the given code print stream
get the type of this report
returns a column info object for the current database column
creates an annotation method for this jml method
generates a sequence of bytecodes
get the type of this report
generates a code for the given code
returns the constructor of this jboolean literal
generates a code for the given code print writer code
getter for the position
makes sure a statement is added to the block
generates the code for a vk print writer
check that the given vk block defines the correct context
generate code for the definition of this method
checks the basic blocks and the code
this method is called for every statement in the constructor
whats the column end
checks that the method is ok
generates the code for a
this method prints the current page
generates a code for the given key type
checks if all available column positions have a valid cwarning
create an expression representing the expression that can be used to
check if the given vk field is valid
generate a vkcode on the given column
this implementation does nothing
generate the localization
returns the line of the current position
returns the column of the current key
returns the end offset of the current column
clone this field to a new position
clone this column to a new position
create a junqualified instance of this type
check that the code for the given field exists
generate a vk code for the given key
generates a code for the given code print stream
print out the code block code information
create an expression from junqualified instance
checks if the current statement is correct
generate the code for a constant key
generates the code for this action
generates a code for a given code
gets the source name of this package or class
generates a code for the given key code
returns the maximal access for all acs in the acs list
sets the page number of this page
checks type of the field
generates the code for a vkcode instruction
checks if the given vk field is defined in this block
returns the object which is serialized
generates a code for the given key
getter for the type of the field
print the alignment of a block
returns a table with the given name
prints access to the console
check if the block is valid
generates the code for this catch clause
returns true if there are multiple pages in this multi page editor
generate a vkcode on the given print writer
checks the type of the current window
generates the code for this type
creates an expression that calls the constructor method and returns it
get the type of this variable
returns true if this field is internal
checks the basic blocks of the code
generates the code for a vk print writer
returns true if this field is skipped
checks if the given vk field is defined and multi field
returns the column of the receiver which is 1
returns the position in the array
returns the column number where the last character ends
checks if the given field is not empty
checks for duplicate table shortcuts
generates the code for a vk print writer
getter for the detailed position
create an expression from a token reference
gets the index of the given field
returns the following statement
return the number of displayable items for this residue
generate code for the definition of this type
generates a code for the given key to the given
analyses the expression semantically
analyses the expression semantically
trace the query
prints the matrix to the output stream
generate the code in pure java form
parses the input file s
returns the current buffer size
generate the code in pure java form
add all given code jcompilation unit code s to the receiver
check the interface and return true
prepares the initializers
trace the current timer
print a boolean value
checks that initializers are set
returns a string representation of the given object
compares its two arguments for order
check a tree body if its a beautified tree and if so check the
determine if the buffer is single
compares its two arguments for order
compares its two arguments for order
compute the vgroup row tree
print the color of the command
compares two week objects
returns the printed width of this grid
look up the index of an attribute by index
returns the current alignment of the layout algorithm
compares its two arguments for order
returns the minimum level of the report row
print the chart image type
returns true if the array contains an index
print the text type
get the field with the given name
builds the display
calculate the vbase row for each node in the tree
print the type of integer to the output file
redisplay the report
localizes this field
compares two timestamps for ordering
set the enable state of the action
returns the object that is used to collect command definitions
print the type of the date
executes the given action
executes an action without waiting for its termination
return the save mode
print the time
sets the background color of the chart
returns the background code
sets the foreground color
returns the foreground text as an integer code
sets the font
returns the font name
sets the font style
returns the background color of the component
gets the foreground color
returns a font for the given name
print the timestamp
returns the index of the given object in the constant pool
compares two fixed values
returns the value at the given column
sets the value at the given column
print the month
compares this row to another
returns the constructor call that is the target of this
compares two dates for ordering
compares two time objects
adds a new line to the end of the row
print the week
localizes the window
get the type of the variable
localizes the report
print a type description using the given code base type and the
builds accessible columns
print an alias to the script file
get the vcalculate column
returns a column in the report model
returns the printed width in data array format
prints field type name
returns true if the array is hidden
returns the number of columns in the model
returns the index of the specified object in the list of
compares two months
sets the value of the folded property
returns the value as a string
enables or disables the command
gets the background color for the given level
gets the foreground color corresponding to the string pattern
check if this row unfolded with the specified level
sets all child nodes visible with the given level
returns a column number to be used as the source for the
setting all child nodes invisible for the specified level
generates the code for a code writer code
localizes the help report at the help system
localize this field
returns the number of columns in the table
export the current set of values
resets the current buffer
code export code exports the report to a pdf file
returns the row at the given index
set the page length
oracle form method
returns the root of the tree
returns the filling factor of the shape
returns whether this command is fully printed or not
immediately prints the document immediately
this method creates a print job object
returns the print options of this generator
print a character value
set the print options for this generate output
get the identifier of this variable
returns the position of the node
print an object
returns the size of this map
returns whether the page is visible
returns whether the page is shown on this this page
returns the current position of the agent
returns the page that this page editor is in
prints a string to the output without appending a newline
sets the page
sets the title of the page
prints comment to the output file
prints the immediately
this fine grain notification tells listeners the exact range
creates a new print job
sets the style of this syntax tree node
writes the document type of this code pdf print job code
returns true if the page has been fully printed
prints the block
creates a print job object
this method is called by the database context when a print job is
this method is called when the page is created
adds a style to the registry
adds a style for a block
adds a block to this page
adds an image to the command
returns the pblock with the given name
ends the trigger
adds a inner block
oracle form method
set the database context
sorts the selected column
set the db context handler
returns the index of the selected column
constructor for psprint exception
constructor for psprint exception
fill the block with the given size
starts a protected transaction
returns true if all the printed files have been printed
prints this section to a page
refreshes the line
set the current position in the sequence
commit a protected transaction
returns the selected cell
aborts the transaction containing pending
returns the current position of the node
sets the style of the paragraph
updates the table model
sets the tab list
checks if this border is empty
starts a new page
returns true if the exception allows a retry of the
returns the horizontal text alignment
resets the internal state of this object to its initial state
returns the color of this compound style
adds a page count to the panel
returns true if a retry is protected
get the border
returns the current border mode
adds all rows at the specified position in the array
checks if this is a parent style
get the parent style
gets the parent style
sets the recurrent attribute of the mfcolor object
gets the width of the specified string in this font
returns the id of the field which is selected
sorts the specified column
returns true if this page is shown on this page
generates a page from the current page list
returns the font size
returns the size of this font
override this method to provide test case specific debugging
gets the descend
build a condition that will be added to the sql statement
this forwards the call to the contained action
sorts the table
sets the action handler
adds a break to the current line
sorts the tree
sets help action to help localizer
sets the message to the information text
sets the text of the statistics text field to the given message
sets the wait info
returns whether the current page is the last one
sets the state panel to the given panel
removes all wait information
this method sets the user interrupt status of the current machine
determine if the specified column is a fold of some sort
returns the accessibility of this code player code
returns the number of events
returns the trigger
set the accessibility of the current context
gets the short description of the module
adds a feature to the image attribute of the text block object
change the key stroke to the given accelerator
check if the row is a fold of a row
allows the user to quit the current perspective
this method is called when the user selects the help menu item
initialize the registry
localizes this component
execute the void key
adds the messages from the given hashtable as
get the message source for the given key
sets the tab
sets the display to folding order
checks if the given event has trigger
sets the current position
return true if the event has a trigger
set the style of the paragraph
unfolds the specified column i
returns the layout engine
follows the reference in an
sets the position of the object
connect to database
returns the selected column
set if the column is folded
return selected cell
switches to the column code column code in the table
show the splash screen
hide the splash screen
folding the specified row with the specified column
set the enabled state of the actor
returns true if the actor is enabled
exit the application with an error code
returns the identifier of this comment
returns true if the given mode is active
see if this user is a super user
set the active state of the entity manager
it unfolds the current row i
this method is called by the thread to indicate that it should be
display a notice
paint the image
set whether this user is a super user
makes the dialog visible
invoke the runnable in a new thread
returns the preferred size of this component
sets waiting status for all tasks
show an error message
returns whether debug mode is enabled
returns the default directory for the user
indicates whether the given row is a line
show a warning message
this method calls the corresponding method of the
sets the visible attribute of the jwindow pane object
notifies the window controller that this window is not modal
sets the title of the node
draw the background of the component
returns the number of columns in the model
returns true if the server allows asynchronous operations
resets the vexception graf builder
close the window
allow the gui to quit
get the number of rows in the table
this method is called when the model is being destroyed
executed an action
paints the determinate
sets the table information
returns the value at the given row and column
stops the scrolling
close window on screen
returns the selected node
returns the name of the column at code column index code
create the tab for the currently selected report
log a warning
same as ask string message except adds a line
displays a message in the user agent interface
append to title
displays an error message in the user interface
returns the number of base rows
this method sets the display title
display message in warning window
sets the actors of this actor class
fetch all favorite entries from database
returns the number of visible rows
asks the user if he wants to send a message to the user
sets the tool tip text
sets the enabled status of the actor at the given position
localizes all actors in the pool
sets the title of the frame
called when the dialog is about to be closed
close the model for the given code
shows the application information message in the user interface
returns the display window
set the display window
this will set the information text to the given string
called by other classes to set the wait dialog of a
unregister the wait dialog
creates the edit menu
localizes the actor creation in the given locale
wait info is set
wait infos will be unset
execute a void command
creates report on database
oracle form method
preview a report on a block
returns the code print manager code to be used by this
localizes all the modules in the container
returns the number of copies that should be printed
returns the default printer
returns the default fax number to be used for sending
returns the default mail address
creates a print job
starts a protected transaction
preview a part of the form
creates the report
determine if the underlying exception is a fatal error
should we be able to retry the task
nummer gets the value of this field
print the data to the print stream
commits a protected transaction
print a string
print the data to a file
returns the dimension of the current object
returns true if the exception allows multiple dbdead threads
gets the output stream attribute of the file meta data object
gets the datafile
gets the input stream attribute of the file meta data object
retry a protected server
sets the number of copies
returns the number of copies
sets the tray number
sets the paper format
performs an action without waiting for its termination
writes a string to the stream using the default encoding
writes a string to the output stream and appends a new line
closes the underlying data stream
set the user and password
print the data using the print data method
sets the command
the print method
returns the application default configuration
performs the given action
translates the origin of the graphics context to the point
formats a boolean to a boolean
formats the text to the right of the rendered rendered text
converts the byte to a text icon
returns the table
returns the number of columns in this code table code
return the column at the given position
returns the new form
returns true if this menu item has a shortcut
returns the text value to be displayed in the column
localizes the display of the table
localizes the title bar
override to return an empty string for the text field
returns the current table position
override this method to change the default formatting
returns the qualified name of the current token
find the column groups for the given table
scales the graphics context
the field columns number of the table
returns the label of the rule
returns the help of the rule
returns the value of this rule
initializes the writer
returns the label for the specified code element
returns the value of the given property of the identified entity
returns the localization manager
gets the title of this book
gets the help
gets the title of the page at the specified position
gets a localizer for the given ident
run the test
returns the title of the tutorial
returns the title of the specified column
get the message for an index
check that the given document has the same root element and
get a localizer for this field
returns the text of the rule
returns the code form localizer code for the given source
creates and returns a block localizer
set the background code color code
returns an actor localizer for the given source
creates a comment object from an xml element
provides a menu localizer for a document
creates a list localizer for the given source
creates and returns a
creates new instance of report localizer
creates a new instance of module localizer
writes the validated document to a file
gets a message localizer for the specified source
creates and returns a localizer
returns the identifier for the given name
creates and returns a localizer
returns a document object for the given source
this method loads the file into a jdom document
sets the color to be used when drawing all future shapes text etc
jump to a specific position in the list
sets the position of the current page
sets the paint mode of this graphics context to alternate between
navigates to the next record
get the type information for this record
returns the type name of the component
navigates to the previous page
getter for the vblock object
this method returns the column position of a specified x
displays the last entry in the preview window
constructs a new color
prepares the view for displaying
returns the color type information
this method is called when the current action is interrupted
get the type name of the visual device
returns the type information string
checks if the given text is valid
returns the type name of the time system property
check type checks the type of the expression
displays the first record in the preview
description of the method
builds the node with all public data
gets the font metrics for the specified font
called when the order of the receiver has changed
checks if the given string is a text
sets the color to r null
sets the time value to null
set the row value color
shows the position of the selected preview
set the time of the current record
sets the object of the specified color
sets the current value of the object
determines if the value is null
returns the time value
returns the current clipping rectangle
returns the color object at the specified index
returns the object at the given index
returns the text of the value v
get sql implementation of table
returns application specific text
copy the record at f to f
get sql implementation of the given sql object
returns true if this object has a large object
returns a byte array input stream representing the large
dispose the window after losing focus
this method is called when the value enters this entry
this method formats the image
clips a rectangle by drawing the current clipping region
reformats the byte into an int
edit this component with the given id
this method opens the dialog for querying the data
copies an area of the component by a different amount
creates a new record
closes the block with the given id
returns the vfield that this cav field is contained in
this will set the field to a new value
draws a line between the coordinates x1 y1 and x2 y2
called after the child text has been modified
adds the specified component to the layout using the specified
removes the specified component from the layout
called from add actor to gui
returns the column position in the array
returns the preferred dimensions for this layout given the components
prepares a snapshot of the field state
take string from count list text
take string from org
sorts the items
invalidates the layout indicating that if the layout manager
clear the specified rectangle by filling it with the background
this method fills the selected field with data
draws a rounded rectangle
oracle form method
moves the cursor to the next entry
draws a rounded rectangle
code previous entry code moves the cursor to the previous entry
set the form enabled
performs the given action
performs an asynchronous action
draws a highlighted 3 d rectangle
this method verifies that the message is not in a transaction
returns the current object
paints a highlighted 3 d rectangle using the current color
returns the text contained in this document model
called when the access in the table changes
return true if the application should be in a transaction
draws an oval bounded by the specified rectangle with the
oracle form method
performs a form action asynchronously
fills an oval bounded by the specified rectangle with the
enables or disables drag by this component
drop the image
performs the basic action of the view
drops an image
drops the specified image
returns the drop target
draws a circular or elliptical arc covering the specified rectangle
execute a void block
builds the node with all public data
get the type information for this record
this method displays a notice to the user
get type name
fills a circular or elliptical arc covering the specified rectangle
returns the vblock that this editor is currently working on
checks if the given string is valid for this date format
checks the type
shows a single entry form the dialog
prepares a snapshot of the current values
sets the date of the sensor null
draws a closed polygon defined by arrays of x and y coordinates
shows a modal dialog
set the date of the current row
sets the object of the date with the given number
open a dialog to select a file
draws a polygon defined by the specified point
selects the specified element from the specified frame
returns the date value
this method displays an error message in a new thread
returns the displayed value of the current column
gets the text
get sql implementation for a type specific sql variable
fills a closed polygon defined by arrays of x and y coordinates
if a fill field is defined then
formats a date to a string
fills a polygon with the current color
displays a warning in the user agent interface
draws a string
removes the selection listener from the text field
this method is called when the value is available
leaves the field
builds the node with all public data
returns the type information of the image
returns the type name of the image
this method returns null
asks the user if yes or no
sets the image to null
set the image of the row
sets the object value
returns true if this set accepts binary objects
get a large object from the memory
draws the specified image by using the current color
sets the label of this node
computes the sum of the active record
computes the sum over the elements in this set
returns the sum of all the values in this column
draws as much of the specified image as is currently available
sets the fixed value of the expression
sets the value of a parameter
returns the specified code fixed code value
set the label position
get object implementation
get sql implementation of the given sql object
format a fixed value
draws as much of the specified image as is currently available
gets the value of the list property
draws an image at x y
draws as much of the specified image as is currently available
sets the string representation of the active record to the
builds the date
sets the value of the object at the specified index
get the type information for the month
get the data converted to a string
get type name
gets the object impl attribute of the persistence manager object
whats the sql implementation for this type of code i code
returns true if this gridlet has a large object
check text for month
disposes the resources
sets the month to null
set the month
sets the object of the month
adds the specified component to the layout using the specified
returns the month with the given index
gets the text
get sql implementation for a type specific sql variable
returns the position in the array of the column
formats the month
this method is called when the value is changed
returns the image
sets the current color
updates the view
constructs the date value
returns the type information for the week
get type name
checks if the given string is a valid text
checks the type
begin building the value
returns the type information of the field
sets the week to code r null code
builds the node with all public variables
returns the type name of the variable
set the week
sets the day of week to the given value
returns a string describing each tile type
returns the type name of the imported type
checks if the text is valid
gets the week object from the date
checks if the given string is a valid number
checks type of the given object
dequeue key events
checks for next previous entry
sets the null value
report exception for this field
utility method to enumerate the active column in a row
formats a week value
set the value of int
sets the value of the object at the given index
this method is called when the values are enumerateed
sets the code of this currency to code r 1
utility method for enqueueing key events
determines if the specified code null code object
sets the current object
returns the first integer value
returns the constant value of the expression
returns the target pane
goto the next block
sets the string value of the expression
returns the constant value of the expression
sets the object at the given index
returns the first string value at the specified row
returns the string value of the expression
get sql implementation for a type code java
formats the given string
returns the text of the label
computes the sum of all active records
goto previous block
formats the given code
computes the sum over the elements in this collection
returns the type information of the message
returns the type name of the module
returns the text to be formatted
computes the sum over the elements in this set
builds the node with all public variables
method checks if the text is correct
returns the given boolean value as a formatted string
returns the combined co occurence sum
refreshes the type
sets the null timestamp
set the timestamp of the last choice received
returns the given integer as a formatted string
goto the last record
computes sum of all coupling values in the given coor
sets the object at the given row and column
localizes the labels
gets the sum of all the values
returns the first timestamp value
builds the node with all public variables
formats an integer
rebuilds the list of active field based on the size of the
get the type information for this image
get the type name of the type of this field
this method is called when the value enters this entry
goto the first record
returns the type options for this type
returns the height of the visible part of the menu
checks whether the given text is valid for this button
throws an exception if the specified type is not valid
set the value to null
sets the string value of the row at a given index
goto the position
sets the boolean value of the expression
sets the value of the specified object
returns a boolean value in the range 0 1
returns the object at the given index
get sql implementation of the given sql code
returns the number of pages in this form
returns the string representation of the given boolean
sets the integer value of the expression
returns the title of the page at the given index
returns the integer value of the given code constant code at a specified
returns the object at the given index
get sql implementation for a type specific sql variable
gets the text
formats the given integer
sets the current page
builds the value
formats a string
converts the text into its model representation
returns the textual representation of the model
get type name of the vlib
sets the operator used to determine the field search
checks if the given string is valid text
returns code true code if the quit command is allowed
computes the sum of all the active records
called when the dialog is about to be closed
localize this block
computes and returns the fixed sum
destroys the model
this method is called when the code injj code is executed
returns the sum of all coalesced values
check ui is a default component
returns the scale for the specified record
get the scale for this sheet
sets the scale for the specified record and the specified scale
sets the list of actors of the editor
sets the scale of the calculation
localizes the window
clear a specific scale
sets up the labels on the main form
sets the null value to the specified value
called when the text in the text field changes
sets the block alignment
sets the value of the object
executes the given action
code to goto a page
get text representation of a code string code object
return the display component
get sql implementation of the value type
oracle form method
returns true if the given expression is a constant
format a fixed value to text
returns true if the field depends on the given cfield
computes the digits of the width required to store the
returns true if any of the trigger points have changed
return the value as a string
sets the mode to reset
check for loop
returns the single menu item for this window
accepts the specified visitor
localizes the help system
sets access to this variable
accepts the specified visitor
commits all the blocks in the trail
generates jvm bytecode to evaluate this expression
accepts the specified visitor
aborts all the blocks
generates a sequence of bytescodes
sets the mode of this lock
returns the beginning label of this block
sets the access level for the executable
commits the current transaction
generates a sequence of bytescodes
get the default access mode for this class
aborts the code retry code method if the code retryable code
oracle form method
returns true if this field depends on the given field
prepares static initializer for initialization
returns true iff this expression is an enum expression
check that initializers are correct
returns true if the body has been set
analyses the statement semantically
analyses the statement semantically
generates a sequence of bytescodes
returns the form of this vform
set the search operator for field
accepts the specified visitor
accepts the specified visitor
returns the number of blocks in this file
accepts the specified visitor
generate the code in pure java form
returns the vblock at the given index
returns the vblock with the given name
check for loop
returns the vblock that is currently marked as active
returns the specified column
sets the active block
returns the name of the column of the given position
refreshes the contents of this code block
merges the specified definite assignment state into this set
completes the info field into another
returns true if this column is key
sets the access of this block
returns the index of the given block
check for loop
returns true if the given index is in the array
finds and returns the type of this expression
updates the state of the block
return true if deprecated clause should be shown
set deprecated used to define the environment
appends the generic signature attribute of this type to the specified buffer
returns if the call statement is accessible
sets the form enabled flag for the commands
returns the position in the array
method sort
checks whether this type is accessible from the specified class jls 6
override this method to close any open types
accepts the specified visitor
analyses the statement semantically
returns the type options for this type
accepts the specified visitor
this method is used by initializers that knows throwables exceptions only
sets the search operator
check that type is valid
generates jvm bytecode to store a value into the storage location
setter for property comments
accepts the specified visitor
check for loop
clears the set
accepts the specified visitor
returns true if deprecated can be shown
set the deprecated information for this class
reports a trouble error or warning
set the record to null
accepts the specified visitor
generates a sequence of bytescodes
checks for loop
set the value of fixed to true
prepares initializer for this context
check that initializers are correct
accepts the specified visitor
generates a sequence of bytescodes
set the value of boolean
accepts the specified visitor
set the value of date
returns the number of valid records in this file
set the month of the current record
prepares the initializers that can be used in this class
second pass quick check interface looks good
set the value of int
gets the number of valid records that are to be recno
set the deprecated used flag to true
returns true if this variable is deprecated
generates jvm bytecode to evaluate this expression
accepts the specified visitor
analyses the node semantically
set the value of object
analyses the statement semantically
set the value of string
creates a type
creates a type
set the image for the current record
get the anonymous class index
set the value of time
set the value of week
checks whether this type is accessible from the specified class jls 6
set the value of timestamp
checks for loop
set the value of color
sets the fixed value of the expression
accepts the specified visitor
sets the constant value of the boolean
prepares the initializers
returns the type of this class
sets the date of the creation
sets the month of the year
sets the week of the year
checks whether this type is directly or indirectly accessed
sets the constant value of the expression
accepts the specified visitor
runs the optimizer on the given code info
accepts the specified visitor
sets the constant value of the expression
accepts the specified visitor
generates the text for this expression to the given string buffer
checks if this code field code is defined inside another one
accepts the specified visitor
fix local variables positions
sets the image of the sprite
fixes all variable positions of all child blocks
adds a variable to the monitor of this synchronized statement
adds a local variable to this block and sets its position
checks if the variable is in the local variables set
parse the argument list
sets the time of the event
returns an input stream for reading the contents of this url connection
parse the argument list
sets the timestamp of the event
called by add import
prints the current options to the console
sets the color of the component
splits a line into tokens
sets the current record to the specified record number
close the connection to the server
set the designated column to the given query
sets the options to be used in this lpd
prints a waiting job
set the local host to use when sending mail
get the local host to connect to
sets the user name
set the proxy host
set the print host
sets the file type
get the print host
set number of copies to be printed
sets the field to the specified field
set the remote port to be used
returns the number of copies
set bind source port option
sets whether or not bursting should be printed
set whether emails should be posted after
get the user name for connecting to the db
set whether to remove the generated html after the generated text
set the timeout for the creation of the connection
set whether the windows should be displayed in the client or not
sets the print class
sets the job to be executed
set the title of options
sets the temporary directory for the application to be created in
is this record null
set whether to control the first step
sets width of the window
set the number of spaces to indent the xml
adds a control to the page
returns the object associated with the current record
returns the current record as a fixed block
points the first field in the current record
reads optimizes and writes a class file
adds line number info stored for the instruction to the specified vector
get the boolean value of the current record
navigates to the first field in the current record
get the date from the current record
get the current record as an integer
returns the month
points the cursor to the last field in the current record
get the current string from the beginning of the record
returns true if any of the trigger trg and not yet updated
get the time at which the current record was created
create a new file
loads all files in the given directory into the specified vector
returns the substitution of a given type variable
loads a class directory
try to load a class directory
returns the week
loads the class info object for the given name
loads a class
get the timestamp
get the text of the current record
get the sql statement
returns the constant value of the given symbolic constant
increments the level of this node by one
decrements the level of this node by one
print a string
print an integer value
print the current tab
print a string and then terminate the line
notifies this handle that is has been attached to the specified container
run the command line arguments
get the configuration label
takes the specified class path and disassembles it
returns the given date
write the instruction
prints the opcode
prints the opcode
write a class reference
writes a field reference instruction
write an iinc instruction
write an invokeinterface instruction
returns the month of the given year
write a jump instruction
write an instruction that is a local variable
prints handler information
write a method reference
write a multiarray instruction
write out the newarray instruction
write a no arg instruction
to string method
generates code that pushes a literal on the stack
this method is called when a hint on a comming object is
returns the week of the given day
prints a switch instruction
returns the index of the first character in the character set
returns the string representation of this operand
tells whether or not this value is zero
search the index of the first instruction in this block
remove a block from protected blocks list
visit a node and its successors
remove the last instruction
print the instruction
add an interference between two variables
get the interator of all interactions
returns true if this operand may throw an exception
returns true if the operand of this code real code has side effects
returns the time of the given row
removes the edge from the call list
propagate the induced by the new nodes in the tree
returns the timestamp of the subordinate system for the given row
get a copy of the ssavar with same uses
get the current current qinsta copy
a human readable representation of this constant
returns true if this gridlet has a large object
checks to see if all fields in the database have the same access
inserts a new use reuse in the list
get the first element of the list
get the last element of the list
returns true if this field is a large object
add a phi catch for a given basic block
add a phi return for a given basic block
add a phi join for a given basic block
returns the binary blob value of this blob
returns a set of all out edges of this node that contain
returns the vblock that this block is associated with
test if this instruction contains at least one qjump
get the qjump instruction
sets access for all fields in the current block
returns the form of the block
find the variable used in the basic block
returns true if this is an internal query
clears a record
removes all successors from this node
removes a successor of this node
removes a connection from the list of successors
remove a predecessor from this node
number the blocks in the given block array starting at startblock
reads optimizes and writes a class file
assemble a class file
returns the message of the exception
adds an instruction to this block
adds a label to the list of known labels
run the program with the given command line arguments
adds a line number to the model
resolves a given label to an instruction
insert an empty record at the current position
reads and instruments a class
instruments the constructors
process the information about this constructor
determines whether the constructor should be called
adds a field to the class info
find a method by name
evaluates the list table
deletes all records from the data store
returns the field that is used to store the id
checks if a trigger for a given event is possible
returns the column used to identify the object in the table
returns the field that is used as uc field if there is one
returns the ts field
returns the base field of the given name
returns the search columns qualified name
prepare for a snapshot of the current state
check if the given table has columns defined as null
find out if the given table has only internal fields
returns the search tables name
fetches the first value of the given field
fetches the value of the specified column in the current row
gets the active record
returns true if at least one buffer is filled
returns true if the record has been filled
returns true if the record has been fetched
returns true if the record has changed
returns true if record is deleted
check if a record is sorted
checks if the record is trailed
sets the current record
returns the current record
is the current record filled
returns true if the current record is fetched false if not
returns true if the current record is changed
returns true if the current record is deleted
indicates whether the current record is trailed
gets the access for this field
update access for active record
update access for all fields
sets active record
if the request has been retreived from the remote server then the
sets the current record changed
set whether the active record is deleted
if set to true then this is trailed by the current active record
copies a record from one table to another
this method is used to initialise the result set
returns the form that this vform is attached to
check if this is a chart
returns true if the buffer contains more than one element
returns field with given name
returns the vfield that this field editor is currently working on
sets vfield active
returns the index of the given field
commits the current trace
abort the current trail
performs a given action
performs a form action asynchronously
apply the given record to the trail area
does this block have a non uc field
prepares a snapshot of the state of the action
passing the focus request to the viewers control
get the byte order for this stream
returns the value of a tree cell
returns an xml slicer from this tag
returns the xml slicer for the given tag name
get all slicer values in this collection
returns the list of tags that are currently being processed
returns the value of an attribute of a tag
get the first attribute value of an attribute
returns the value of the first tag of this instance as xml
sets the value of the value property
adds the given string to the xml element declaration
opens a tag with the given name and returns the result
adds an attribute to the element
sets the value of the current xml tag
adds cdata section to the xml element
checks if the termination tag is a pending termination or not
generates a beautified line
closes the current tag
closes all tags created with the current tag
returns a string representation of this object
request the gun to fire a gun on the server
send the gun to the server
receive the torpedo notification from the server
immerse the mine ship
withdraws mine on the specified ship
opens a chess piece
sets the name of the bt adapter
returns the first part of the given string that begins with
test of set fname method of class james
test of get fname method of class james
test of set lname method of class jones
test of get lname method of class it
test of set addr1 method of class it
test of get addr1 method of class it
test of set addr2 method of class it
test of add event method of class event stub impl
test of remove event method of class event stub impl
test of get addr2 method of class it
test of search event method of class event stub impl
test of get id method of class event stub impl
test of set city method of class it
test of set id method of class event stub impl
test of get title method of class event stub impl
test of get city method of class it
test of set title method of class event stub impl
test of set state method of class it
test of set description method of class event stub impl
test of get class id method of class event stub impl
test of get state method of class it
test of set class id method of class event stub impl
test of get zip method of class it
test of get location id method of class event stub impl
test of set zip method of class it
test of set location id method of class event stub impl
test of get phone method of class it
test of get group id method of class event stub impl
test of set phone method of class it
test of set group id method of class event stub impl
test of get creator id method of class event stub impl
test of get cell method of class uis
test of set creator id method of class event stub impl
test of set cell method of class it
test of get warning message method of class event stub impl
test of get email method of class it
test of set warning message method of class event stub impl
test of set email method of class it
test of convert date method of class com
test of get password method of class it
test of set start time method of class event stub impl
test of set password method of class it
test of get start time method of class event stub impl
test of get status method of class it
test of set end time method of class event stub impl
test of set status method of class it
test of get end time method of class event stub impl
test of get validation method of class it
test of convert gregorian date method of class org
test of set validation method of class it
test of get start date method of class event stub impl
test of get reg date method of class it
test of set start date method of class event stub impl
test of set reg date method of class it
test of get end date method of class event stub impl
test of get last visit method of class com
test of set end date method of class event stub impl
test of set last visit method of class com
test of set fname method of class it
test of set lname method of class it
test of set email method of class it
test of get fname method of class it
test of get lname method of class it
test of set id method of class it
test of get id method of class it
test of add user method of class jjones
test of update user method of class it
test of login method of class it
checks if this autism contains a given group
sets the autism group list
returns a string representation of this object
returns the name of the autism group with the given id
returns the id of the autism group with the given name
returns the list of autism groups
gets all e mails from the database
sets the event id
sets the persons first and last names
sets the evt ids
sets the font color
compares this message to another one
this method is called when an event is removed from the system
gets the e mail address
returns the event
returns the database location
set the event for this database
set the location of the database
p removes an event from the database
adds a comment to the session
id event id
p removes an event from the database
this method will check the location and create a new id for the
returns the system client dbimpl
used to set the system user profile
returns all locations of a given state
event search event
convert date to date
convert a gregorian date to a date
sets the group id
sets the description of the group
create a new empty group
delete the current group
returns code true code if this is a group
removes this object from a group
returns the number of events in the event list
sets the temp event returned by the last call to
sets the location list
adds a new location to the current location
gets the location venue
sets location venue
this method will be called when an item in the event list
sets the venue by the id
gets the venue by id
test of get email method of class databaseimpl
test of set email method of class database dbimpl
test of get all email method of class it
test of get up coming event list method of class it
test of get evt id method of class database dbimpl
test of set evt id method of class edu
test of get chk evt id method of class database dbimpl
test of set chk evt id method of class database db
test of get evt ids method of class database dbimpl
test of set evt ids method of class database dbimpl
test of get all email for reminders method of class database
test of contains method of class autism group list
test of get autism group id method of class autism group list
test of get autism group list method of class autism group list
test of set group id method of class autism group
test of set group name method of class autism group
test of set group description method of class autism group
test of set group validate method of class autism group
test of set group status method of class autism group
test of set group creator method of class autism group
test of set group admin list method of class autism group
test of add event method of class event dbimpl
test of set group member list method of class autism group
convert time to hh mm ss
test of set group message list method of class autism group
test of set group event list method of class autism group
test of remove event method of class event dbimpl
test of get group id method of class autism group
test of get group name method of class autism group
test of get group description method of class autism group
test of search event method of class event dbimpl
test of get group validate method of class autism group
test of get group status method of class autism group
test of get group creator method of class autism group
test of convert date method of class event dbimpl
test of get group admin list method of class autism group
test of get group member list method of class autism group
test of get group message list method of class autism group
test of get group event list method of class autism group
test of convert gregorian date method of class event dbimpl
convert date to date
test of event list size method of class event dbimpl
test of set temp event method of class event dbimpl
revert date to xdf format
test of number of events method of class event dbimpl
set first name
test of focus on event method of class event dbimpl
this method converts a gregorian date to a date
test of convert time method of class event dbimpl
set last name
returns the number of events in the database
test of get id method of class event dbimpl
test of set id method of class event dbimpl
this is used to set the temp event from a temp event
test of get title method of class event dbimpl
set the address line 1
test of set title method of class event dbimpl
returns the number of events in the list
test of get start date method of class event dbimpl
set the address line 2
test of set start date method of class event dbimpl
focus on event
test of get end date method of class event dbimpl
test of set end date method of class event dbimpl
set the city
test of get start time method of class event dbimpl
sets the new idsql exception number
test of set start time method of class event dbimpl
set the state of this creature
test of get profile method of class system client dbimpl
test of get end time method of class event dbimpl
test of update profile method of class system client dbimpl
test of set end time method of class event dbimpl
test of create profile method of class system client dbimpl
set the zip code
test of get description method of class event dbimpl
test of get error message method of class org
test of set description method of class event dbimpl
test of set id method of class org
test of get class id method of class event dbimpl
gets the cell name
test of get id method of class org
test of set class id method of class event dbimpl
sets the cell
test of set fname method of class org
test of get location id method of class event dbimpl
test of get fname method of class org
test of set location id method of class event dbimpl
set the email to use for this user
test of set lname method of class system client dbimpl
test of get group id method of class event dbimpl
test of get lname method of class system client dbimpl
test of set group id method of class event dbimpl
test of set addr1 method of class org
set the password to be used for authentication
test of get creator id method of class event dbimpl
test of get addr1 method of class org
test of set creator id method of class event dbimpl
test of set addr2 method of class org
test of get warning message method of class event dbimpl
test of get addr2 method of class org
test of set warning message method of class event dbimpl
test of set city method of class org
test of revert time method of class event dbimpl
test of get city method of class org
test of revert date method of class event dbimpl
test of set state method of class system client dbimpl
test of set new id method of class event dbimpl
test of get state method of class system client dbimpl
test of set event by id method of class event dbimpl
test of get zip method of class org
test of get events by person id method of class event dbimpl
test of set zip method of class org
test of get events by state method of class event dbimpl
test of get phone method of class system client dbimpl
test of get event by id method of class event dbimpl
test of set phone method of class system client dbimpl
test of get all events method of class event dbimpl
test of get cell method of class system client dbimpl
test of get events by attendant method of class event dbimpl
test of set cell method of class system client dbimpl
set the class id
test of get location method of class event dbimpl
test of get email method of class system client dbimpl
test of set location method of class event dbimpl
test of set email method of class system client dbimpl
test of get event by attendant method of class event dbimpl
test of get password method of class org
test of add comment method of class event dbimpl
test of set password method of class org
test of update event method of class event dbimpl
test of get font color method of class org
test of set font color method of class system dbimpl
test of get status method of class org
test of set status method of class org
test of get validation method of class system client dbimpl
sets the creator id value for this document attributes
test of set validation method of class system client dbimpl
returns the warning message
test of get reg date method of class org
sets the warning message
test of set reg date method of class org
test of get last visit method of class system client dbimpl
test of set last visit method of class system client dbimpl
returns event by id
test of get dob method of class system client dbimpl
test of set dob method of class system client dbimpl
test of get classification method of class org
returns a resultset of all events that have occured in the past
test of set classification method of class system client dbimpl
test of get group list method of class system client dbimpl
test of add user method of class system dbimpl
test of update user method of class system client dbimpl
test of login method of class system client dbimpl
test of get event method of class system client dbimpl
removes the event with the given id from the queue
test of set event method of class system client dbimpl
test of get my events method of class system client dbimpl
sets the location
test of get my upcoming events method of class system client dbimpl
get comments only available for the current person
test of remove my event method of class system client dbimpl
test of get attending events method of class system client dbimpl
returns average rating of all events in the database
test of get attended events method of class system client dbimpl
test of get area events method of class system client dbimpl
test of check calender method of class system client dbimpl
create a new empty group
delete the current group
this method is not implemented
removes this object from a group
test of check date method of class system client dbimpl
test of add event to calendar method of class org
test of get welcome msg method of class system client dbimpl
test of set welcome msg method of class system client dbimpl
test of get errmsg method of class org
test of set errmsg method of class system dbimpl
test of remove event from calendar method of class org
this is used to execute the action
this method is used to execute the command
closes the connection
execute a method on the server
call the method on the server and return the result
execute a method on the module info cache
performs the action on the modules
at startup create and show the main frame of the application
log the hash lines to the log
returns the hashes
this method is used to log a session
checks if the activity log is closed and adds the inactive sessions to
executes a command on the server
required by tree selection listener interface
now display the current date
delete the selected row
show all payloads for the given target
we only have a tab that is at the end of whitespace
this method opens up a new search window
connect to a new server
create an rpc menu item for session and add it to the menu
add a kill item to the session
draws a circle
returns the response element
sets the cancel available flag
invoked when a component gains the keyboard focus
returns true if this component can be focused
gets the class to convert to
return the class of the border
converts the specified object into an instance of the specified class
returns the component for the given question
returns a decimal string representation of obj
convert an object to a string with the decimal point format
adds a question checkbox to this page
determines the padding of the cell in the row
determines the stretch value of the row corresponding to the attribute
determines the alignment to use for the parent row
return the minimum size of this node
returns the preferred size of the container
returns true if this layout includes the option in its parent
pulls text from the xml panel
if the layout manager uses a per component string
removes the specified component from the layout
creates a component from the given xml panel
create a component from an xml element
adjust service total
clear the gui components
sets the background image
returns the background image
quits the current background image tile x value for this splash screen
quits the current background image tile
set the background image align value
set the background image alignment
returns whether or not the user can edit the dialog
test converting a string
get a component by name
returns the jtext field with the given name
returns the jtext area with the given name
returns the jlabel with the given name
returns the component of the specified name
returns the component associated with the given name
returns the component of type code name code
returns a jcombo box with the given name
sets whether or not open dialog will allow the user to edit the
called by the host application to paint the dialog
invoked when an action occurs
adds an code action listener code to the button
removes an code action listener code from the button
paints the background image
get the background image align value
returns true if the background image is a tile x
checks if the background image tile is on the y axis
this method initializes head detail composite
this method initializes ref table combo
this method initializes foot composite
this method initializes button composite
this method initializes data type combo
the action has been activated
returns a progress monitor for the current status line
creates the pages of the multi page editor
the code multi page editor part code implementation of this
calculates the contents of page 2 when the it is activated
applies the current form data to the form
resets the form data
returns whether the stack is empty
pushes an object onto the stack
returns the object at the top of this stack without removing it
returns the last object pushed onto the stack without removing it
returns a string representation of the object
save the nutrition values into the database
delete the current nutrition and any associated food items
delete the targets
create a new contact
save the data on exit
gets a patient from the system
set the recipe text
returns the easy diet instance
sets the text of the note
closes a patient
get the number of loaded patients
shuts down the current thread
sets the components of the menu
sets the text for the diet kind
returns the food items
returns the text of the diet kind of the specific controller
sets the text of the note
removes an ingredient from the list of ingredients
returns the note for this
get all meal types
set the parameters to observe
constructor for primary key
returns all food objects for a specified start letter
constructor for primary key
constructor for primary key
constructor for primary key
set the days
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
finds all patients in the database
finds all patients in database
finds a patient by username and password
returns the gramm dimension
returns all nutentries for a given name
find all nut entry names not yet in database
constructor for primary key
setter for property parameters
constructor for primary key
constructor for primary key
set the unique identifier of this class
constructor for primary key
set the value related to the column amount dim
sets the preperation value for this wsyetki kullanici
sets the soc ins nmb value for this wsyetki kullanici
sets the menue value for this wsyetki kullanici
set the value related to the column fecha
setter for property ingredients
setter for property fore name
sets the sur name value for this address
returns the value of the desired value
sets the town code value for this wsyetki kullanici
sets the desired value
sets the town value for this wsyetki kullanici
set the value related to the column dimension id
sets the born on value for this wsyetki kullanici
set the value related to the column parameter set
sets the blscode value for this wsyetki kullanici
sets the von dimension value for this wsyetki kullanici
constructor for primary key
set the value related to the column from dimension
set the value related to the column fk contact id
set the value related to the column fk to dimension
set the patient
constructor for primary key
sets the nutrition plans
constructor for primary key
setter for property parameter sets
constructor for primary key
sets the show value for this tcirdna
set nut protocols
setter for property exclusion params
setter for property meal items
gets the absolute amount of the transaction
constructor for primary key
sets the absolute amount of the transaction
setter for property hhold amounts
sets the position nmb value for this wsyetki kullanici
setter for property dimensions
sets the drinkable value for this wsyetki kullanici
set the value related to the column in meal id
constructor for primary key
setter for property users
constructor for primary key
constructor for primary key
returns the permissive value
sets the permissive
set the value related to the column social anamnesis
setter for property days
returns the view of the record
sets the family anamnesis value for this order type
sets the view
sets the general anamnesis value for this wsyetki kullanici
set the value related to the column nut value label
constructor for primary key
set the value related to the column fk parameter set
sets the next appointment value for this quote data
set the value related to the column parameter set
sets the factor value for this get quote response
set the value related to the column fk user id
set the value related to the column eprot typ id
constructor for primary key
set the value related to the column eprot plan id
constructor for primary key
sets the diet kind value for this wsyetki kullanici
set the value related to the column day id
set the meal type
set the value related to the column fk role
setter for property patients
set the value related to the column eprot plan type
set the value related to the column days
constructor for primary key
set the value related to the column patients
constructor for primary key
sets the from age value for this defect
constructor for primary key
sets the to age value for this defect
sets the desired val value for this job info
set the value related to the column fk dimensions
sets the in recipe value for this in recipe
constructor for primary key
constructor for primary key
setter for property meals
constructor for primary key
constructor for primary key
constructor for primary key
sets the nut plans
constructor for primary key
constructor for primary key
set the value related to the column dimension type
sets the se value for this wsyetki kullanici
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
constructor for primary key
returns the derivatives for the current solution
constructor for primary key
sets the name of this type
get nutrition value from label
sets the gcal value for this wsyetki kullanici
applies the state to any enclosed enclosed states
set the items
changes the main item
this function is called when the mainitems in the group are changed
refresh the view for web items
save the hidden items
returns the date as string in the format b
return the item index
search by string
prepares the user session for authentication
sets the gj value for this wsyetki kullanici
refreshes the current page
saves the current plan
used by the base dao classes but here for your modification
resorts the current plan if the user has changed their algorithm
creates a string representing the number of rows in the current table
returns the meal of the given type
the list of protocols
set the meals of this web application
this method shows the protocol selection
sets the amount of the object
prepares the current protocol and shows the patients
sets the zw value for this wsyetki kullanici
sets the current day
show the latest plan
used by the base dao classes but here for your modification either save
set the days
edits the current nut protocol
returns the dimension object for the food
setcurrent day
setcurrent null set the current meal
refreshes meal list
saves all meals that are currently stored in this web application
sets the ze value for this wsyetki kullanici
refresh all day records
load the food by id
resorts the date for web day
used by the base dao classes but here for your modification
save the data
this method sets the weekday for the year
compares web day objects to another
sets the zf value for this wsyetki kullanici
sets the internal id
resorts the meals
return the number of itemcount in the meal item
sets the current unit
reset the whole list of hidden items
set the value related to the column zk
sets the current status of the request
initializes the game
sets the speed of the ghost
refreshes the view
sets the zb value for this wsyetki kullanici
sets the zm value for this wsyetki kullanici
used by the base dao classes but here for your modification remove a
sets the zo value for this wsyetki kullanici
this method initializes this
sets the za value for this wsyetki kullanici
this method initializes this
sets the zv value for this wsyetki kullanici
this method initializes m list
this method initializes this
this method initializes j button
this method initializes m parameter table
this method initializes j button close
this method initializes j scroll pane
this method initializes m parameter scroll pane
this method initializes this
this method initializes j button excl par delete
this method initializes ingredient table
this method initializes j button excl par add
this method initializes ingredient scroll pane
this method initializes j scroll pane
this method initializes j button
this method initializes m info scroll pane
this method initializes j button dest par add
this method initializes this
this method initializes m menu comp scroll pane
returns the month
sets the patient items
this method initializes m recipe text scroll pane
removes all rows
sets the food items to display
get the number of food items in this collection
returns the food panel
this method initializes this
this method initializes this
creates and then caches the tree scroll pane
this method initializes m statistics table
this method initializes m preparation tab
this method initializes j scroll pane
this method initializes m list scroll pane
this method initializes this
this method initializes m info panel
this method initializes m menu comp panel
returns the food table scroll pane
this method initializes m recipe text panel
adds a meal listener to this gui
removes a meal listener from this gui
this method initializes m recipe text field
informs all registered meal listeners that a meal item has been selected
refreshes the item for the given day
called when the content of the meal type item changes
returns the components field
prints a footer
adds a text to the paragraph
this method initializes m info field
adds text to the content
this method initializes m parameter table model
returns meal item at given row index
this method initializes food table model
deletes a row from the table
method called when the user closes the recipe
moves meal items up one position
this method initializes j split pane
this method initializes j split pane1
this method initializes j panel
this method initializes j panel1
this method initializes j panel2
returns the easy diet instance of this class
this method initializes j panel3
returns the patient controller
this method initializes j panel4
this method initializes j tool bar
returns the split pane day meal item
jday chooser is the key listener for all day buttons
this method initializes j split pane meal item
unloads patient data from the gui
this method initializes m meal detail pane
creates the tab pane for the meal drink
checks if the user has selected a drink panel
this method initializes m diet form field
this method initializes begin date field
returns the end date field
this method initializes day scroll pane
creates and returns the meal tool bar
get the value of the desired value
this method initializes m add meal
returns the dimension
notifies the listener that a foreign object has detected
adds a clone of the current ant
returns true if the given address has the same creator
adds the false positive
description of the method
returns the strength of the collection of clones
sets the flag that controls whether or not the simulation should be
registers a skin
removes a skin from the container
get the minimum value
get the maximum value
set the bloodstream
returns the permissive value of the parameter
returns the view constant for this component
get the nutrition value label
returns the current binding antibody
returns the response type
gets the binding affinity for this property
sets the antibody for the fields
this method initializes this
returns the current antibody set for this page
this method initializes j content pane
sets the va value for this wsyetki kullanici
this method initializes start button
calculates the transfer statistics for the whole network
this method initializes cancel button
resets the counters for sent and received antibodies
adds new transfer parameters to be processed
this method initializes j text field
sets the var value for this test case
this method initializes j text field
return a boolean indicating whether this object is valid
signs the passed private key
this method initializes j text field
add a sensor to the sensors list
verifies the passed public key against the current public key
fire a sensor event to all registered listeners
remove the specified sensor from the list of sensors
register a skin sensor
unregister a skin sensor from the engine
starts the sensor
stops the sensor
this method initializes host name
removes a listener from this sensor
sets the vac value for this wsyetki kullanici
this method initializes this
returns an object that represents the meal item amount
send data to a node
this method initializes m recipe structure pnl
sets the list of ingredients that are in the model
this method initializes j scroll pane
this method initializes this
this method initializes this
this method initializes j list
this method initializes m recipe structure scroll
this method initializes m content
get the selected nutrient
get the nutrient search
this method initializes this
this method initializes m recipe structure tree
get the selected recipe category
sets the selected recipe
this method initializes m ok
this method initializes m ok
sets the vd value for this quote data
gets the selected recipe category
this method initializes m cancel
this method initializes m abort button
adds a code list selection listener code to the j list
get the recipe structure model
this method initializes m recipe name pnl
this method initializes this
this method initializes m edit panel
this method initializes m navi panel
this method initializes this
this method initializes m cancel
this method initializes m ok
this method initializes m nutrient search
sets the ve value for this wsyetki kullanici
this method initializes this
this method initializes this
this method initializes m para set panel
this method initializes j panel
this method initializes m min val text
this method initializes m navi panel
this method initializes close
this method initializes m category pnl
this method initializes m nutrient table model
reset all the antibodies to their initial state
this method initializes m max val text
this method initializes j scroll pane
this method initializes m nutrient scroll
this method initializes category list
this method initializes this
this method initializes m detail table
this method initializes m para panel
sets the veat value for this wsbirimler
gets the table model for the detail table
this method initializes m recipe tabbed pane
this method initializes j radio button
this method initializes m close
this method initializes this
this method initializes m para set panel
this method initializes detail scroll
this method initializes j button
this method initializes j radio button2
this method initializes m ok
this method initializes this
this method initializes m new
this method initializes m free para panel
this method initializes m cancel
this method initializes target para panel
this method initializes m preperation panel
this method initializes exclusion para panel
this method initializes m edit
this method initializes this
this method initializes this
returns the table
this method initializes m valid from field
this method initializes m nutrient search
this method initializes m rem category button
returns the panel with the add on scroll
this method initializes m value text
this method initializes j scroll pane
this method initializes m delete
save the nutrient name
this method initializes j button
sets the vk value for this job ticket
this method initializes m new
this method initializes m drink panel
this method initializes m preparation text area
this method initializes m import
select all the rows
this method initializes m edit
this method initializes m ingredients panel
selects nothing in the table
this method initializes m valid to field
invoke this method if youve modified the tree nodes upon which this model
this method initializes this
this method initializes this
this method initializes m whopara panel
this method initializes m whoset combo
this method initializes m delete
this method initializes m navi panel
gets the ok button
this method initializes whoset table
this method initializes m control panel
this method initializes j button
this method initializes whoset scroll
this method initializes m cancel
this method initializes m model
this method initializes this
sets the vb1 value for this wsyetki kullanici
this method initializes m edit panel
gets the table model for whosets
this method initializes cancel
this method initializes m select all
this method initializes m blsatri table model
this method initializes m ok
this method initializes m select nothing
this method initializes this
this method initializes m free para panel
this method initializes j panel
this method initializes m navi panel
import the whopara o using the whoid
this method initializes m ok
this method initializes this
this method initializes this
this method initializes m cancel
this method initializes j text field
this method initializes m value text
creates and then caches the search text
this method initializes j combo box
sets the vb2 value for this get quote response
saves the values of the input fields to the default settings
this method initializes m scroll
this method initializes this
this method initializes this
this method initializes m new
this method initializes j button
this method initializes history panel
returns authors of application authors
this method initializes m edit
this method initializes m nutrient scroll
sets the list of subcategorys
get the nutrient search table model
get the currently selected nutrient
this method initializes m delete
returns the history table model
set the currently selected nutrient name
update the model
this method initializes history scroll
this method initializes m model
this method initializes this
returns the main pane
util method to create and setup dropdown list
this method initializes j scroll pane
sets the vb3 value for this wsyetki kullanici
this method initializes m blscategories scroll pane
this method initializes this
this method initializes m selected templ
this method initializes m blsinfo table
sets the list of recipes
this method initializes m main pane
this method initializes nutrient table model
this method initializes the drink item tool bar
this method initializes j radio button2
this method initializes j radio button2
this method initializes m ingredient panel
creates and then caches the main pane
util method to reset in fact it it effects
this method initializes m details panel
this method initializes m blsdetail panel
this method initializes m ok button
show edit dlg parameterset
this method initializes m abort button
this method initializes close button
sets the vb3a value for this wsyetki kullanici
sets the category list attribute of the list model object
gets the nourishment selected in the search panel
gets the selected recipe
set the category
sets the list of recipes
this method initializes this
this method initializes m main pane
simple initialization and set fast properties
this method initializes j text field
gets the nourishment from the search panel
initialize the input for the quantity units in the quantity map
get the gregorian date
set date of this day label
fires an action event to all listeners
sets the vb5 value for this wsyetki kullanici
this method initializes j combo box
sets the user handler
returns the model for the recipe
this method initializes this
creates and then caches the search scroll pane
this method initializes m search list
this method initializes j combo box
gets the selected food
returns selected day
returns the search button
gets the sub cat model for the blytem
this method initializes m dummy panel
saves the date and the day selection
sets the vb6 value for this get quote response
this method initializes m search list
returns the search button
adds a list data listener to the model
adds a listener to the list thats notified each time a change
this gets called when a ok or cancel button is clicked
called when the text field gains the focus
get the currently selected food
add a listener to the model
sets the vb7 value for this quote data
called when the user changes the state of the item
gets the nourishment selected in the list
this method initializes this
this method initializes the scroll pane
this method initializes the progress bar
invoked when a key has been pressed
this method initializes this
this method initializes this
get the value of day schedule
called when the mouse is clicked on a day in the calendar
returns the meal value for the given meal
this method initializes create recipe button
this method initializes m birth date field
sets the list
returns the appropriate meal item amount according to the given item
this method initializes m note scroll
sets the vb9 value for this quote data
this method initializes m note text
this method initializes date button
sets the meal type attribute of the list model object
returns the user handler
this method initializes this
this method is used to set the date when the
this method initializes m new diet plan panel
this method initializes m next app button
sets the vb9g value for this get quote response
this method initializes m without template
this method initializes this
this method initializes m delete date
this method initializes m date field
this method initializes j radio button2
this method initializes m next app field
this method initializes m diet plan templates scroll pane
this method initializes m content
this method initializes j text field
this method initializes m diet plan templates list
this method initializes j text field1
this method initializes menu bar
this method initializes m abort
sets the vb9f value for this get short data result
this method initializes m abort button
this method initializes this
this method initializes m file menu
returns the recipe manager pnl
this method initializes j menu
sets the quantity units attribute of the model object
this method initializes m from date field
sets the vb12 value for this get quote response
this method initializes m preperation scroll p
this method initializes m from date button
this method initializes m food menu
this method initializes m to date field
get the contact handler for this processor
returns an instance of the food handler class
this method initializes m diet sheet scroll pane
gets the meal plan handler for this system
this method initializes m to date button
returns a list pset handler
this method initializes m menu compound scroll p
this method initializes m meal table
this method initializes m food plan menu
sets the new date event to the date event
returns a recipe handler based on this factory
sets the vc value for this get company matches result
this method initializes cancel button
this method initializes add on scroll p
this method initializes m njournal menu
creates a new instance of database handler
this method initializes m search button
sets the mna value for this wsyetki kullanici
this method initializes j text area
get the current hibernate session
this method saves a dietplan to the database
returns the text area for the recipes label
save method for nutrition
returns the meal toolbar
sets the mk value for this wsyetki kullanici
this method saves the supplied dietplan
this method initializes table scroll pane
load dietician class
creates a new instance of abstract database handler
saves a new contact
this method initializes m diet plan notice jscroll pane
sets the mca value for this wsyetki kullanici
this method initializes m search patient mitem
this method initializes ingrdients scroll p
create a new exclusion parameter
creates a new code whoparameter code
sets the mmg value for this user dto
setter for the desire value
this method will save a dietplan object in the data store
sets the nutrient name
creates a new target parameter
creates a new parameterset object
sets the create date
creates a list pset handler that will use the current database
sets the parameters for this request
creates a new instance of whoparameterset
set the from date
this method initializes m exit mitem
sets the set of patients
this method is used to save a new
sets the description of this code search code
sets the maximum value
sets the parameters for this request
this method sets the creator that created this
sets the minimum value
set the strength parameter
adds a parameter to this property instance
constructor for nutrient parameter
sets the to date
removes a parameter from this method
creates a new code free parameter code instance
sets the name of this code file code object
creates a new parameter
sets the unit for this property
todo the purpose for writing this method
creates a new parameterset handler
sets the mp value for this get short info result
creates a new meal meal
creates a new free parameter
loads a category from database
saves the current parameter
add a new meal to the group
adds meal item amount to a meal item amount by a unit
finds and loads the given code patient code into the database
returns day for given meal
adds all meal items of the given set to the meal item set
this method initializes m foodstuff
adds a mealitem to the mealitem list
sets the date for this
returns the create date
creates a new adapter for an object of class
sets the create date of this message
loads an object from database
creates a day adapter for the specified schedule
sets the created by
loads an object by class and id
deletes the current parameter
creates a new exclusion parameter
load meal type
saves the given exclusion parameter
sets the ms value for this get quote response
creates a new adapter for a
refreshes the given object
finds and returns the day schedule that matches the given meal
compares this object with the specified object for order
adds a day to this schedule
this method initializes m recipe mitem
creates a new nutrition journal object
creates a nutrition journal that has no questions to be shown
this method will save a new contact
deletes the given exclusion parameter
adds a new appointment to the database and notifies the user handler
returns the number of the manipulation that this component represents
sets the number of the manipulation that this component represents
creates a new meal plan handler object
set the date of this appointment
returns the next appointment
returns the notice text
creates a new target parameter
sets the notice text
delete an item from meal
returns the created by
sets the mcl value for this wsyetki kullanici
saves the current target parameter
sets the dietplans
deletes the schedule item from the list
this method initializes status bar
creates a new target parameter
decrements a date by a specific amount
get the sex db
set sex of user database
deletes the current target parameter
deletes meal from the item
constructor with input amount of food and unit e
sets the mfe value for this wsyetki kullanici
compare two ingredients
delete mealitem from mealitem list
sets the note for the dietplan
creates a new code food code instance
creates a new food with the specified name
creates a new food amount with a specific quantity and unit
sets the duration of the diet plan
this method initializes m parametersets mitem
constructs an exception with the given list of duplicate recipe names
creates a new instance of unit
indicates whether some other object is equal to this one
sets the mzn value for this job ticket
creates an exception with the given names
creates a new day schedule
a constructor for the abstract nutrients adapter class
constructor for nutrient value
adds a contact to the contact list
add an amount to the value
multiply the value of this property by the given multiplier
this method initializes m drop patient mitem
creates the days for the duration of the diet plan
rounds the value to the nearest 100 more
this method determines the last contact in the list
creates a new meal in the given schedule
sets the mcu value for this wsyetki parametre
creates a new code recipe handler code instance
this method initializes j date field
this method initializes j button
set meal type
this method initializes this
this method initializes j scroll pane
this method initializes j meal table
this method initializes m contact mitem
this method initializes default meal table model
this method initializes this
add a date
test of observer method of class org
sets the mmn value for this wsyetki kullanici
called when a new event is sent to the agent
test of list patient method of class user handler
prints a list of patient data
creates a meal item amount from a meal food item
initialize nutrient value initialization
get the nutrition editor
sets the meal item amount
add a supervise attribute to this component
set the nutrient value for a given nutrient code
remove the nutrient attribute from the list of supervise attributes
sets the units for the item of this unit
get nutrient value by code
sets the mf value for this wsyetki kullanici
set meal item amounts food
show a meal plan for this agent
get the nutrient which has the given code
add all nutrients of a nutrient to the world
save the root recipe to the database
sets the mj value for this quote data
generates the metadata for a recipe
this method initializes m help menu
add the nutrient
adds a ingredient to the current recipe
sets the kam value for this wsyetki kullanici
adds a recipe category to the active category list
this method initializes about mitem
this method initializes m notes field
removes a recipe category from the active recipe
sets the amount of a ingredient
sets the kas value for this wsyetki kullanici
sets the current ingredient of this quantity
sets the kax value for this wsyetki kullanici
this method initializes create recipe mitem
switches the active recipe
sets the ka value for this wsyetki kullanici
sets the kmt value for this wsyetki kullanici
create a recipe panel
setter for property kmf
set the value related to the column kmg
this method initializes patient tb
the user has selected a button in the dialog
set the value related to the column km
this method initializes m contact tb
searches for recipes that are in the ingredient
sets the kds value for this job ticket
this method initializes m parameterset tb
check if the last active recipe is still modifiable
sets the kdm value for this wsyetki kullanici
this method initializes m nourishment tb
sets the kdl value for this wsyetki kullanici
this method initializes m recipe tb
user selected meal item
this method initializes j date picker
this method initializes j formatted text field
this method initializes this
this method initializes jxtitled panel
this method initializes jxstatus bar
this method initializes jxsearch panel
this method initializes this
this operation sets the drink selection row to the given
sets the kd value for this wsyetki kullanici
this method initializes m dietplan tb
this method initializes j button1
this method initializes j button
this method initializes j progress bar
sets which meal row is selected
this method initializes j button
this method initializes j button1
this method initializes j panel
this method initializes this
sets the kpor value for this wsyetki kullanici
this method initializes m journal tb
this method initializes this
this method initializes this
this method initializes m scroll pane
this method initializes this
this method initializes m content
this method initializes m navi pnl
this method initializes m close btn
this method initializes m my table model
adds an action listener to the close button
returns the panel
this method initializes m content
this method initializes m search
this method initializes m meal name label
this method initializes this
this method initializes m ok
this method initializes def menu bar
this method initializes m dietplan menu
sets the kpon value for this wsyetki kullanici
this method initializes m create dietplan
this method initializes m journal menu
this method initializes m record journal
this method initializes m content
this method initializes m center
returns the number of elements in this set
gets the element at the given index
sets the string at the given index
sets the interval of the day view and redraws the tree
this method initializes m status bar
creates the panel for the dietplan pnl
this function returns the index of the array
sets the kpg value for this get quote response
create a njournal pnl
checks if the center panel is set
sets the kps value for this wsyetki kullanici
redraw nutrition view
sets the kp value for this wsyetki kullanici
lets the user know that the text they entered is
sets the kbp value for this wsyetki kullanici
sets the selected day
this method initializes j frame
this method initializes j panel
this method initializes j button
this method initializes j text field
sets the kbh value for this wsyetki kullanici
returns the selected day
this gets called when a ok or cancel button is clicked
sets the kbl value for this wsyetki kullanici
used to get the text for the diet form
convenience method to set the text of the diet form
sets the kbw value for this wsyetki kullanici
returns the date at which the game started
sets the kbn value for this wsyetki kullanici
returns the date this controller was last updated
sets the eile value for this quote data
sets the eleu value for this wsyetki kullanici
returns an iterator over the meals of the given day
sets the emet value for this get short name request
returns collection of selected meal items
sets the ecys value for this wsyetki kullanici
returns an iterator over the meal types
sets the ephe value for this quote data
sets the etyr value for this wsyetki kullanici
add a new meal to the existing day
sets the ethr value for this wsyetki kullanici
returns the notes
sets the etrp value for this get quote response
sets the notes for this user
sets the eval value for this get quote response
sets the earg value for this short data
sets the ehis value for this wsyetki kullanici
sets the eea value for this wsyetki kullanici
close the plan window
sets the eala value for this wsyetki kullanici
sets the easp value for this get eas cap
set the enabled status of the meal details tab
sets the eglu value for this wsyetki kullanici
sets the egly value for this wsyetki kullanici
sets the epro value for this wsyetki kullanici
sets the eser value for this get quote response
sets the ena value for this wsyetki kullanici
sets the epf value for this wsyetki kullanici
sets the eh value for this job ticket
set the value related to the column ep
sets the f40 value for this get quote response
sets the f60 value for this wsyetki kullanici
sets the f80 value for this get short data input
sets the f100 value for this get quote response
sets the f120 value for this wsyetki kullanici
sets the f140 value for this wsyetki kullanici
sets the f150 value for this get quote response
sets the f160 value for this wsyetki kullanici
sets the f170 value for this get quote response
sets the f180 value for this wsyetki kullanici
sets the f200 value for this get short data input
set the value related to the column f220
sets the f240 value for this get version collection
sets the fs value for this job ticket
sets the f141 value for this get quote response
set the value related to the column f151
sets the f161 value for this wsyetki kullanici
sets the f171 value for this get short data input
sets the f181 value for this wsyetki kullanici
sets the f201 value for this wsyetki kullanici
sets the f221 value for this wsyetki kullanici
sets the f241 value for this janus message info
sets the fu value for this wsyetki kullanici
sets the f162 value for this wsyetki kullanici
sets the f164 value for this wsyetki kullanici
sets the f182 value for this wsyetki kullanici
sets the f183 value for this wsyetki kullanici
sets the f184 value for this get short data
sets the f193 value for this get short data input
sets the f202 value for this wsyetki kullanici
set the value related to the column f203
set the value related to the column f204
set the value related to the column f205
sets the gp value for this quote data
sets the f222 value for this wsyetki kullanici
set the value related to the column f223
sets the f224 value for this get quote response
sets the f225 value for this get short data
sets the f226 value for this wsyetki kullanici
sets the fp value for this get version collection
set the value related to the column fk
sets the fm value for this wsyetki kullanici
sets the fl value for this wsyetki kullanici
sets the fg value for this wsyetki kullanici
sets the fc value for this short comparison operation
set the value related to the column gfps
sets the gebw value for this usuario
sets the gkb value for this quote data
sets the gmko value for this wsyetki kullanici
sets the gmsb value for this quote data
returns the level of this report
disposes the specified object
reset the value of this counter to the default value
is this value set
reset the value to its original value
determines if the dictionary has been loaded
disposes the value
disposes the specified collection of values
returns true if the listener is observed
register the specified observer
unsubscribe the specified observer from the set of observers
unsubscribe from all the observers
notify all observers that the value has changed
returns the output stream that copies the file
returns the fifth
getter for fourth property
getter for sixth property
returns true if this expression is zero
returns true if value is a null value
sets the value
append a boolean value
append a value
append value to the hashcode
returns true if this state is a start state
append a long value
reset the value of this variable to the start value
append an object value
increments the value of this code integer code object by one
get the hash code
sets the integer
negates the value of the expression
sets the value of this number
adds the supplied value to this value
subtracts the given value from this value
negates the value of the expression
multiplies the given value by this value
adds the supplied value to this value
divide the current value by the given value and return the resulting value
subtracts the given value from this value
multiplies the given value by this value
divide the value by a double
sets the specified value
sets the value
sets the value of this number
negates the value of the expression
adds the supplied value to this value
subtracts the given value from this value
reads the time
multiplies the given value with this value
divide value by value
sets the value
negates the value
sets the boolean value
adds the supplied value to this value
returns true if the value is not a number
subtracts the given value from this value
multiplies the given value by this value
divide the current value by the given value and return the resulting value
checks whether the specified key is present in the map
put the specified value into the cache
copies all of the mappings from the specified map to this one
remove the mapping for the specified key
returns the beans manager instance for the given bean class
setter for property list
sets the type of this field
sets the root directory
sets the root directory
returns the root directory of the project
set the flag that determines whether the log should be generated
sets the jndi name of the data source
search for a given name
save a bean
this function converts an ellipse to the length in pixels
delete the bean
copy the given bean into this bean
visit the given type specific ast node
visits the node and its children
visits the given ast node
adds a child to the association
deletes a child
start vclient action
stop vclient action
adds a message to the status messages
deletes all files and subdirectories under dir
client is started
stops the client
starts all the jobs
prints a bean
sets the replacer
sets the quantity
get a random file from the list of files
add a job to the scheduler
merges two jobs
deletes the job from the given group
unregister all jobs
close the connection
creates a jms session
registers a job implementation at the given group
unregisters a job in the quartz scheduler
returns a string representation of the job list
sets the url of the document
returns true if the job is registered for the specified name
returns true if the job is stopped
sets a header value
sets the flag indicating if this application has been registered
deletes the job from the scheduler
sets the connection timeout
set the directory where the configuration files are stored
computes ramp up period in milliseconds
show the activities of the current user
sets the max total value for this admin tax rate search result
clears all activities
the code to deploy
indicates if the connection is stale connection check
set stale connection check
set if the agent shall register on add
creates the configuration files
checks if the request is valid
tests if the given expression matches the value of the parameter
returns the fully qualified class name of the given class name
converts the first letter of a string to upper case
returns the activities that are associated with the current user
returns the replacer
add a task to the quartz group
merges two tasks
deletes the task from the given group
register all tasks in the quartz
unregister all tasks from the quartz
register a task in the given group
deletes the task from the scheduler
unregister a task from the given group
perform post test initialization
show all the tasks
returns true if the given task is registered
returns the log
set the log threashold
set the size of the log4j appender
returns the content of a file in the cache
adds a file to the cache
set the cache size
show cache contents
sets the logging event
checks if the value matches this regular expression pattern
sets the regular expression
jndi name of data source
checks if the resource exists
sets the controller attribute of the jboss class editor object
retrieves the youngest file from the top of the queue
returns true if the file was modified
creates an activity
the code set up code method sets up the test fixture
creates an activity that matches the given activity
registers an activity in the registry
sets the list of activities
save the activities
returns an activity object for the given source group and name
sets the url of the remote client
clears all activities that match the given source
sets the headers for the virtual client
sets a header value
reset the activity in the simulator
sets the url of the page
reset the activity state
sets the timeout value in milliseconds for receiving a connection
returns the maximum number of active connections that can be allocated from
sets the maximum number of active connections that can be allocated from
indicates whether this client has stale connection check
indicates that the connection should be stale
two file info objects are equal if their name is the same
returns the values to which this map maps the specified key
returns a collection view of the values contained in this map
returns the set of nodes that have the given key
returns the number of keys in this map
returns a collection of the unique values of the keys
get a string representation of the list values with the specified
associates the specified value with the specified key in this map
removes the given value from the given key
returns true if this message is a multipart message
returns an iterator over the names of all files in this directory
get the multipart file info record with the specified name
returns an iterator over the files with the given name
returns the wrapped request
updates the peers
performs a logout
initializes the login module
reject a call
cancels a call
called when a call is accepted
performs a logout of the player
exit from the system
called when a call is rejected
updates the state of the panel
updates the image
performs a logout
initializes the window
initializes the login module
updates the jlist
update the list of possible relays for this client
updates the panels with new array of relays
rejects a call from a remote host
call the set dialing method
not in use
callback for when a call is accepted
dialing the current state
end of a call
this method is called when the call is ended
updates the list of peers
called when a call is accepted
this method is called when the call has ended
reject a call from a remote host
this method is called when the user selects the cancel call menu item
callback for the agent when a call is accepted
end the call
performs a logout
changes the current call
start listening for incoming packets
stop listening for incoming oscpackets
ends the current call
initializes the login module
update the array of relays
updates the list
called when a call is accepted
end of a call
callback for the call receiver
callback method when the user accepts a call
this method is invoked when a call ends
begin user doc
begin user doc
here all the work is done
returns the name of the column at code column index code
get the number of rows in the table
creates a temporary snapshot and saves it to the temp file
resumes all data in the current machine
returns the name of the column at code column index code
get the number of rows to display
add a directory to the index
checks if a command exists
recursive function to find all files with the given extension
returns a string representation of the error
sets the values of the current token
reinitialize this loader with the given language
scrolls the editor to the last line
sets the parser to be used to parse the xml document
initialize file and generate a new buffer if necessary
inits the jar file
addemo string into the cache
addemo cache to help cache
search the jar files for the jar files
is the address in the range of the address
calculate the effective address in memory
gets the last command executed
clear values from all registers
mark this address as being out of range
gets the number of registers this local variable is stored in
returns the name of a given register
clears the address out of range flag
returns the label of the command
returns the tag word of the current registers
set the data space
return an unsigned byte from the memory location at the given index
write a byte in memory
copy raw input from the previous register into this one
retrieve an address of the given symbol
get the number of steps in a given order
marks a point in the list of dirty
actualizes dirty flag
clears the specified dirty item
clears the dirty flag
updates the title of the tab containing the document
resets the values to zero
is the operand valid
put a long value into the dsp
internal method which checks if a given address is valid for producing
saves the contents of the file to the given file
saves the state of the memory mapper to a stream
loads a file specified in the constructor and returns true
inverse of the sine function
puts an operand of the given type in the data space
returns the value of the first unsigned integer in the specified address
get the address that a string of the given type is contained in
executes the actualizes dirty method
mark the argument as dirty
clears all flags setting the flag flag to false
clears the entire address
this method runs the experiment one time and adds additional steps to
registers the given variable
removes a variable label from the variables map
returns true if the given symbol is a variable
clear all modules
executes the command
called when lines are added
sets the has been changed flag to true
sets the given help text to the current help text of the given
sets the stepping flag
returns the local java launch config type
this method is called when the plug in is stopped
returns the plugins resource bundle
start the application
install breakpoints that are already installed by the debugger
perform one step of the test
selects the bracket block at the current selection
selects the word at the current selection
select the word at the current selection
updates the outline page
selects a segment
updates the outline page
returns true if the widget has been disposed
visits each step in the graph
get the source index
target index i
gets the slack parameter for the edge
returns the sum of all weights in the graph
calculates the maximum rank of this graph
return true if the graph is completely flagged
sets all flags to code false code
sets the flags of the graph
the slack parameter for the adaptive automaton
inverts the source and target node
this method checks the cut values and sets the correct
recursively calls code revisit code for the graph
goes through the sub tree and finds the shortest path between
resets the flag flag of the nodes
ranks the given collection of nodes
normalizes the ranks of each node in the given collection so that
reset flags for all edges
sets all the flags in the given collection to the given value
return true if all edges are completely flagged
calculate the highest ranking for the given set of edges
adjust the rank of this vector
resets the sort values of all values to 0
resets the indices
normalizes the ranks of all cards to the minimum rank
reset all flags to false
test of thread method of class com
launch the application
toggles the nature on a project
runs and dispatches the shell
returns the state of the key pressed event
returns the release status of the key
sets the first move
returns the value of first move
tests the pawn method
test method for
test method for
test that the status returned is the same as pawn
test the get type method
test method for
tests the setter methods for the type of pawn
test the method is equal pawn
tests that the position of the pawn changes the position of the pawn
sets up the test environment
tests the bishop method
tests the getter and setter for the x property
tests the get y method
tests the knight
tests the get status method
tests the is equal knight
tests the bishop
tests the getter and setter for side
tests the setter and setter for the type of bishop to yellow
test method for
verifies that the equality between two bishops
tests the change position method
test method for
test of get type method of class rook
test method for
test method for
test method for
test method for
test method for
test method for
test method for
this test checks if a swap board has occurred
test method for
test method for
test method for
test method for
test method for
get side method testing
test method for
test setting the type of a king
test method for
test that changing the position of the king works properly
test method for
test queen with a queen
test method for
test method for
get side is testing queen
test method for
test method for
test method for
removes the piece at the given coordinates
checks if a pawn is promoted to a piece
returns if the pawn promoted option was set
clears the pawn promotion flag
set the user id
set the password used for http authentication
sets the request headers in the connection
set the read timeout to a specified timeout in milliseconds
to force the post execution
issues an http get request
destroys the status specified by the required id parameter
updates the authenticating users status
updates the users status
destroys the status specified by the required id parameter
destroys the status specified by the required id parameter
creates the overlay
executes the job
update the fps counter
this method creates a canvas
this will add a key listener to the keyboard
swich cam is active
this will add a mouse listener to the canvas
this will add a mouse move listener to the canvas
move this unit to the destination
create a skybox
move the camera to the specified position
rotates the camera
quits the current game
adds the given selectable result to the selection list
clears the selection
move a unit to a given location
selects the ship at the given location
returns the distance of the camera from the camera to the
swiches the camera
sets up the game
starts the game
runs the connection
starts the option
this is used to display the console
returns a hash code value for the object
returns the writer used by this data store
returns the number of records in this file
sets the session factory
calculates the current sidereal time in degrees minutes seconds
gets the v alpha value
returns the in alpha factor
computes the code fassade code alpha e
get the difference between ut1 utc and utc
get the lod time
get the correction to the nutation parameters
get the interpolated value at the specified date
check earth orientation parameters continuity
selects the entries bracketing a specified date
get a string representation of the utc time value
returns the pole correction for a date
get the calculated variance
get the interpolated correction
gets the field
gets the supported names
set the interpolated date
set the integrator to be used by the system
get the l l in the orbit
add the contribution of the flow rate dm dt
calculate and return the highest common hourly kp that is
converts an attribute to a dimension object
converts an x y point in an x y coordinate
converts the given object to the given type
insets is only used inside a insets attribute
this method parses the xml file and returns a dom object
registers a handler for a given tag name
returns the handler with the given name
parses the xml document and returns a swing object
render reader without using parser
renders the root of the document
returns the object with the given id
maps the given object to uiobjects
find the first element with the given id
registers a converter with the converter registry
returns the root component of the hierarchy
adds the specified component to the layout using the specified
removes the specified component from the layout
calculates the preferred size dimensions for the specified
calculates the minimum size for the specified panel
get a setter method
returns the root component of the hierarchy
this method is called whenever the observed object is changed
stops the target floor if it is automatic or floor
init method for this filter
add a new file selection option
sets the number of documents created
whats the maximum api version
returns the minimum api version supported by this driver
get the action options
returns the options for this plugin
sets the command provider for this handler
sets the input provider of this painter
sets the output provider
looks up the execution method that has been annotated with
add the given time value to this time value
add the given time to the list of mutable time objects
subtracts the given time from this time value
subtract the given time from this time unit
mutates the current value of this property when it is mutable
returns the value of this literal
mutates the current value of this mutable
mutating instance method to multiply this by a mutable double
this method should be called when this value is less than or equal
divides this number with the specified divisor
divides this number with the specified divisor
expands the tree to the mutable formual representation
returns a clone of this object
simplifies the leftmost unit
returns the value as a big integer
returns the value as a big decimal
returns a string representation of this object
return the next thread to run
return the currently executing thread
returns a new time that is the same as this time but
returns the current time of the timer
returns a copy of this time expanded
the run method for the thread pool
tests the equality of this time object against an arbitrary object
compares this object with the specified object for order
call this method when a thread is updated
inverts the given time and adds it to this time
compute the sum of this and code time code
resets the simulation
subtracts the given time from this time value
subtract the given time from this time
returns a copy of this time with a different unit
get whether this test run in real time
returns the last execution time
gets a mutable version of this time with the specified factor
compare this time unit to another
returns true if the given object is of the same type and
multiplies this time by a constant
returns a copy of this time with each element divided by the
returns a string representation of this object
gets the num mips
handles the parent time of the receiver
returns a copy of this time with each element divided by the
this method creates a thread
returns wall time
returns a copy of this time with the specified divisor
returns the current time
called when the simulation time changes
killer accessor method
returns a string representation of this time unit
prints the usage of the command line program
prints the command line usage
returns true if the option wants a value
parses the value of the specified argument and returns the
adds a new error to the list of errors
returns the current value of the header
prints the errors to the given print stream
prints the errors to the given writer
this method is used so that the buffer can be represented as a
this is used to acquire the path of the element or attribute
returns the time the file was last modified
returns the type of the current expression
add a list of inner classes to this class
add all the classes that this class depends on
returns an appropriate name for the tools object for the package
compile the source file
returns the name of the class of this class
returns the name of the tag
returns the name of the package that the java script is running on
set the table model to use
gets the content type
record an event
record an event using the details provided
record a event in the db
activates an account
get account object
get provisioning parameter by name
add a provisioning parameter
get an account with the token
authenticates an account
adds the application counter to the database
resets the password to account
resets the password for the account
reset application counter
get a token
email account information
delete application counter
save or update an action
create application create a new application
sends an email announcement
sets the main menu state
checks if the phone is authorized to connect to the app
show the sub menu
returns true if the given path exists
returns the end index of the text
checks if the given path exists
returns the number of characters in this string
checks if the given path is a directory
checks if the given path and name are a directory
get the length of the source string
returns true if the given path is an eclipse directory
returns the start index of the text
checks if the given path is a file
get the substring validation
checks if the given path and name are a file
checks if a node identified by a path is hidden
sets the length of the source string
checks if a given file is hidden
set the source of the encoding scheme
returns true if the given path is absolute
sets the start index
returns the character at the specified index
checks if string is null or empty
validate the start index
compare two elements
constructs a new file object
ensures that the length of the text is valid
compares this version element to another version element
returns a file object constructed from the given path and file name
ensures the start index is valid
returns the part of the alphabetic text that is represented by this
returns the number of elements in this list
returns the element
returns the numeric part of a string
returns a new string that is a substring of the current string
returns the split point of the gateway node
returns the version of this element
returns true if the code jsp writer code has a separator
returns true if only alphabetic characters are allowed
returns true if this is an alpha numeric token
checks if this version element is comparable
determines if this token is a numeric only character
sets the version of the application
sets the position of the split point
returns a string representation of the object
returns a string representation of the object
this method initializes chk ninguno
gets the back icon attribute of the ejbmethod descriptor object
gets the forward icon attribute of the ejbmethod descriptor object
sets the icon for the forward button in the complaint button panel
cascade all internal frames un cascading
tile all the frames
returns the preferred dimensions for this layout given the components
returns the minimum dimensions needed to layout the components
centers the elements in the specified column if there is any slack
returns the first selected index returns 1 if there is no selected
returns the first selected index or 1 if the selection is empty
returns the index of the item that is selected
gets the selected value
returns true if the specified index is selected
returns true if no indices are selected
convenience initialization method
sets the selected index
sets the cell renderer attribute of the jtree component object
this method sets the selection state of the given index
selects the specified indices
selects the specified item
selects or deselects a check box
set the selection interval to lead
enables or disables the component
sets the skins attribute of the skin combo box object
sets the selected skin
returns the selector component
reads an object from a file
check if this user is on the given list
format a message
check if the current user session is available
sends each move to the server
adds an email address to the list of emails
this method will tell observers that a move has been made
checks if a user is on any of the lists
runs the given runnable in a separate thread
removes all requests for the given class from the user session
return true if the session is idle and false otherwise
batch send a message to all users
helper method for code regex helper code
returns the number of the next available game
log out the current connection
gets the current number of games
executes the given sql query
checks if a username is valid
returns the highest number of games
retreives the database id for a given username
returns the user name if the user has already been assigned to the
parses the cookies
convert to a string representation
checks if the given field is in the list of fields
todo add method documentation
convenience method to send messages
this method returns the last message id from the notification list
sets the text of the field with the given name to the given
sets the password for this user
sets the login information for this user
checks if the field with the given name exists
method set session
submit the form
starts the server
prints an error message to stderr and exits with a
this method filters the body of the http response
helper method to pull messages from facebook
spawns a thread for the facebook
returns an initiliazed instance of text field3 component
returns an initiliazed instance of text field4 component
returns an initiliazed instance of text field5 component
returns an initiliazed instance of text field6 component
returns an initiliazed instance of text field7 component
returns an initiliazed instance of text field8 component
returns an initiliazed instance of text field9 component
returns an initiliazed instance of text field10 component
returns an initiliazed instance of text field11 component
returns an initiliazed instance of text field12 component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of string item component
returns an initiliazed instance of text field8 component
returns an initiliazed instance of logocliente component
returns an initiliazed instance of image1 component
returns an initiliazed instance of back command component
returns an initiliazed instance of ok command2 component
returns an initiliazed instance of text field14 component
returns an initiliazed instance of text field15 component
returns an initiliazed instance of text field16 component
returns an initiliazed instance of sujeto credito component
returns an initiliazed instance of no sujeto credito component
returns an initiliazed instance of screen command component
returns an initiliazed instance of error0 campo1 component
returns an initiliazed instance of error0 campo2 component
returns an initiliazed instance of error0 component
returns an initiliazed instance of text field14 component
returns an initiliazed instance of alert descuentocsolicita component
returns an initiliazed instance of text field16 component
returns an initiliazed instance of alert4 descentokdref component
returns an initiliazed instance of alert5 decuentokdnoref component
returns an initiliazed instance of alert6 decuentokd component
returns an initiliazed instance of exit command2 component
returns an initiliazed instance of image2 component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of back command3 component
returns an initiliazed instance of back command4 component
returns an initiliazed instance of back command5 component
returns an initiliazed instance of back command6 component
returns an initiliazed instance of back command7 component
returns an initiliazed instance of alerta descuento solicita component
returns an initiliazed instance of back command8 component
returns an initiliazed instance of back command9 component
returns an initiliazed instance of back command10 component
returns an initiliazed instance of back command11 component
returns an initiliazed instance of alerta descuento kdref nomina1 component
returns an initiliazed instance of back command12 component
returns an initiliazed instance of back command13 component
returns an initiliazed instance of back command14 component
returns an initiliazed instance of back command15 component
returns an initiliazed instance of back command16 component
returns an initiliazed instance of alerta descuento kd nomina1 component
returns an initiliazed instance of table model1 component
returns an initiliazed instance of ok command3 component
returns an initiliazed instance of item command component
returns an initiliazed instance of ok command4 component
returns an initiliazed instance of image2 component
returns an initiliazed instance of ok command5 component
returns an initiliazed instance of ok command6 component
returns an initiliazed instance of ok command7 component
returns an initiliazed instance of item command1 component
returns an initiliazed instance of ticker component
returns an initiliazed instance of exit command3 component
returns an initiliazed instance of ok command8 component
returns an initiliazed instance of font component
returns an initiliazed instance of exit command4 component
returns an initiliazed instance of string item2 component
returns an initiliazed instance of text field18 component
returns an initiliazed instance of text field19 component
returns an initiliazed instance of text field21 component
returns an initiliazed instance of ok command9 component
returns an initiliazed instance of screen command1 component
returns an initiliazed instance of screen command2 component
returns an initiliazed instance of screen command3 component
returns an initiliazed instance of spacer component
returns an initiliazed instance of text field2 component
returns an initiliazed instance of text field13 component
returns an initiliazed instance of text field17 component
returns an initiliazed instance of text field22 component
returns an initiliazed instance of text field23 component
returns an initiliazed instance of ok command5 component
returns an initiliazed instance of text field24 component
returns an initiliazed instance of text field25 component
returns an initiliazed instance of ok command10 component
returns an initiliazed instance of text field component
returns an initiliazed instance of exit command5 component
returns an initiliazed instance of string item1 component
returns an initiliazed instance of exit command6 component
returns an initiliazed instance of back command17 component
returns an initiliazed instance of quincenas2 component
returns an initiliazed instance of text field1 component
returns an initiliazed instance of text field20 component
returns an initiliazed instance of screen command4 component
returns an initiliazed instance of ok command11 component
returns an initiliazed instance of screen command5 component
returns an initiliazed instance of ok command12 component
returns an initiliazed instance of exit command7 component
returns an initiliazed instance of back command18 component
returns an initiliazed instance of descuento kdref2 component
returns an initiliazed instance of descuento kdvalido menor component
returns an initiliazed instance of text field2 component
returns an initiliazed instance of text field13 component
returns an initiliazed instance of text field17 component
returns an initiliazed instance of alert descuento kd1 component
returns an initiliazed instance of text field22 component
returns an initiliazed instance of back command19 component
returns an initiliazed instance of text field23 component
returns an initiliazed instance of back command20 component
returns an initiliazed instance of back command21 component
returns an initiliazed instance of text field24 component
returns an initiliazed instance of back command22 component
returns an initiliazed instance of error1 component
returns an initiliazed instance of text field25 component
returns an initiliazed instance of ok command10 component
returns an initiliazed instance of exit command5 component
returns an initiliazed instance of alerta quincenas nomina2 component
returns an initiliazed instance of text field1 component
returns an initiliazed instance of text field20 component
returns an initiliazed instance of ok command12 component
returns an initiliazed instance of alerta descuento kdref nomina2 component
returns an initiliazed instance of alerta descuento kd nomina2 component
returns an initiliazed instance of ok command13 component
returns an initiliazed instance of menu calculadoras component
returns an initiliazed instance of exit command8 component
returns an initiliazed instance of choice group1 component
returns an initiliazed instance of ok command14 component
returns an initiliazed instance of text field26 component
returns an initiliazed instance of text field27 component
returns an initiliazed instance of text field28 component
returns an initiliazed instance of exit command9 component
returns an initiliazed instance of ok command15 component
returns an initiliazed instance of text field29 component
returns an initiliazed instance of text field30 component
returns an initiliazed instance of text field31 component
returns an initiliazed instance of back command23 component
returns an initiliazed instance of back command24 component
returns an initiliazed instance of ok command16 component
returns an initiliazed instance of text field32 component
returns an initiliazed instance of text field33 component
returns an initiliazed instance of text field34 component
returns an initiliazed instance of ok command17 component
returns an initiliazed instance of text field35 component
returns an initiliazed instance of text field36 component
returns an initiliazed instance of screen command6 component
returns an initiliazed instance of back command25 component
returns an initiliazed instance of back command26 component
returns an initiliazed instance of string item3 component
returns an initiliazed instance of text field37 component
returns an initiliazed instance of text field38 component
returns an initiliazed instance of text field39 component
returns an initiliazed instance of text field40 component
returns an initiliazed instance of text field41 component
returns an initiliazed instance of text field42 component
returns an initiliazed instance of text field43 component
returns an initiliazed instance of text field44 component
returns an initiliazed instance of text field45 component
returns an initiliazed instance of text field46 component
returns an initiliazed instance of exit command10 component
returns an initiliazed instance of alerta quincenas nomina3 component
returns an initiliazed instance of back command27 component
returns an initiliazed instance of alerta descuento kdref nomina3 component
returns an initiliazed instance of back command28 component
returns an initiliazed instance of back command29 component
returns an initiliazed instance of back command30 component
returns an initiliazed instance of back command31 component
returns an initiliazed instance of alerta descuento kd nomina3 component
returns an initiliazed instance of back command32 component
returns an initiliazed instance of back command33 component
returns an initiliazed instance of back command34 component
returns an initiliazed instance of ok command18 component
returns an initiliazed instance of exit command11 component
returns an initiliazed instance of text field47 component
returns an initiliazed instance of text field48 component
returns an initiliazed instance of text field49 component
creates and returns an code idecision rule editor code implementation
check if the smarts pattern is valid
sets filter for node
gets the number of records read
gets the number of records written to the output file
from an idecision rule set that specifies multiple rules to this
adds an rule to the list of rules
adds a feature to the all attribute of the mfboolean object
adds a new idecision rule rule to this result if it is
return a code idecision rule code object on this
from an idecision rule node if it is an instance
return a code idecision category code object on this
sets the specified category to be considered when
long output format
returns the title of the document
sets the value of the name property
returns the property units
check if the given atom container is valid for this decision method
verifies if a certain atom is in the decision method
given an iatom container checks if its a substructure
checks to see if the rule of the given iatom container
this is called when a collision process is performed
dumps the system properties to standard output
dumps the classpath
logs a message with code object code level
logs a message at debug priority
logs a message at the debug level according to the specified
logs a message at the
logs a message at debug priority
logs a message at debug priority
logs a message at debug priority
logs a message at debug priority
log an error with a throwable
log an error
log number and the current object will be an error
log printable object with level error
log printable object with level error
log printable object with level error
log error level is high enough to allow for code log4 code
log error level is high enough to allow for code log4j
writes a fatal message if debugging is activated
log printable object with level info
log printable object with level info
log printable object with level info
log printable object with level info
log printable object with level info
log printable object with level info
log printable object with level info
log printable object with level info
log a message at the warn level
logs a message at the
log printable object with level warn
logs a message at the
test smart cyp and apply all reactions
log printable object with level warn
test of apply all reactions method of class smartcypreaction
log printable object with level warn
logs a message at debug priority
logs a message at debug priority
returns true if debug messages are enabled
test the example
get the implementation details
tests a rule which is sa 2 embedding
test remove sulphonate group
test rodo996
test rodo105 extended patch works with a degenerate case in 3
test of rodo1109 method of class scio
test ammine 1 for the amine group for the specified substituent
this is a bug 3138566 coumarin aromaticity check
test if the right parenthesis is shifted
test naphtalenes
test group substitution
test for bug 7945010
test some crings
tests inner automated errororene
stores an iring set corresponding to a molecule using the bond numbers
creates header from hashtable keys
the method code next code returns the next molecule in the
formats a long integer type identified by i and returns a string
format a floating point number
formats an mdl string
returns a string containing the input of the property
check if the given atom is valid for this decision method
tests multiple sa22 separate rules
tests with sa22 embedding
tests multiple sa22 cases
tests parsing of various inputs into a rule
tests having a rule that is sa5
tests a rule that should be sa5 separate
tests parsing an sa1 rule
tests example of rule
test the phosphonic rule
test the case when a sulphonic is saved
tests parsing a rule which contains sa5
tests a rule that must be sa4 separate
tests a rule which is sa 2 separate
tests that a rule for sa 20 embedding is not supported
test method for
p return the number of columns in the specified component
called when the parsing starts
end the document
flush any buffered data for this output stream which also causes the
p return the context relative url for the current action
get the lifecycle instance from the servlet context
ends the named element
write out the comment string
write out a chunk of text
write out the text of the character
p create a new response writer that is a copy of this one
close the start tag if necessary
p create a new instance of this code svgresponse writer code using
p return the path to the request uri for the current page
p return the context path for the current request
gets the type of the component associated wit hthe tag
returns the renderer type which is code ajax text field code
release any acquired resources
gets the max results returned
setter for property message id
getter for property event hook
setter for property event hook
get the type of build component
returns the renderer type which is used to render the caret
release any acquired resources
p override attributes set on this tag instance
setter for property action
setter for property value
setter for property selected class
setter for property unselected class
setter for property style class
setter for property immediate
setter for property item label
setter for property item color
setter for property item value
p gets the state of the instance as a code serializable code
returns the component type which is com
return the value of the code item label code property
p restore the state of this component
sets the item label
setter for property width
release any acquired resources
return the value of the code item color code property
setter for property height
set the color of the item
setter for property orientation
return the value of the code item value code property
return the value of the code width code property
setter for property type
return the value of the code value code property
setter for property title
setter for property xlabel
setter for property ylabel
get the type of build component
return the value of the code height code property
release any acquired resources
p gets the state of the instance as a code serializable code
return the value of the code orientation code property
clean up resources
return the value of the code type code property
p decodes the new value of this component from the incoming request
returns the servlet configuration
return the value of the code title code property
return the value of the code xlabel code property
initialize this servlet
set the label for the x horizontal axis or null if none has
return the value of the code ylabel code property
set the label for the y vertical axis or null if none has
p gets the state of the instance as a code serializable code
override method restore the state of this component
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes this
this method initializes this
this method initializes txt name
this method initializes j content pane
this method initializes txt width
this method initializes cmd start
this method initializes txt height
this method initializes cmd stop
this method initializes dev counter
this method initializes this
this method initializes line7
this method initializes j content pane
this method initializes lst languages
this method initializes cmd go
this method initializes opt north
set the devices stored in this device manager
return the space
set the space
returns the message at the given index
this method initializes opt south
returns the stats object for the given message id
returns the first transmission of this log
getter for property reaching time
this method initializes line6
it writes the string
this method initializes opt east
clears the log
clears the log
this method initializes opt west
returns a string representation of the object
this method is used to receive dtn messages from the stack
this method initializes line5
returns whether to add a single line to the multi line annotation
set the state of the plus switch
sets the new in protocol
set the new out prot preference to p
this method initializes chk attach
this method initializes line4
gets the in prot
retunrs the current out prot
returns the number of messages in this queue
this method initializes opt ne
sets the maximum number of stack slots the client can hold
return the maximum number of stack slots for the given
returns the maximum number of stack slots the code level code
this method initializes opt nw
this method initializes line3
set the silent state of this output
returns whether or not the test result should be silent
this method initializes opt se
this method can be used to determine if the givendevice is faster
returns a string representation of the object
calculates the angle between two positions
sets the list of outbound messages
calculates the distance between two positions
this method initializes opt sw
returns the name of the protocol
this method is used to check whether a code dtn message code
this method is used to test the passed dtn point
this method initializes line2
returns the name of the protocol
returns the name of the protocol
this method returns true if the message is accepted by the filter
return the device associated with this session
returns the name of the protocol
returns true if the given position is nearer than the given
returns the protocol name
returns the name of the protocol
transmit the message
returns the reception state
sets the state of the message
this method initializes line1
get the step at position pos
sets the priority of this message
called when the expiration is expired
check if this particle is expired
get the actual life time for this agent
this method initializes j des in
sets the time out
returns the silent state of the output
this method initializes j des out
returns the receiver
add a step to this path it will be appropriately likely to be
returns the transformation matrix of the normal to the right
this will return the tpos
returns the maximum time to live
sets the maximum ttl for messages propagated by this peer
gets the start time
gets the arrival time of the car
sets the arrival time of this code car code
starts the time out birth
this method initializes txt counter
this method initializes add matrix
this method initializes delete matrix
this method initializes txt dev name
this method initializes txt speed
this method initializes edit matrix
this method initializes lst routes
this method initializes txt name
this method initializes txt north
this method initializes cmd del route
this method initializes txt south
this method initializes txt east
this method initializes txt west
this method initializes cmd random
this method initializes cmd add device
this method initializes cmd go
this method initializes opt standard
this method initializes opt enh
checks if all images are empty
this method initializes opt hp
re load the list
this method initializes opt dtn
this method initializes txt nwest
this method initializes txt swest
this method initializes txt neast
this method initializes txt seast
this method initializes txt wireless id
this method initializes lst device type
this method initializes txt dev n
returner to given field
sets the dp name value for this wsyetki kullanici
sets the dp url value for this wsyetki kullanici
set the endpoint address for the specified port name
set the endpoint address for the specified port name
write a string to the log file
write a string to the log file
add a result to the result map
sets the login id value for this user
adds a parameter to the request
sets the login pw value for this wsyetki kullanici
returns the update action
sets the update action
returns the product update
sets the product update
sets the previous version value for this job ticket
sets the media
sets the advertisement value for this get company report parameters type
set the endpoint address for the specified port name
sets the type value for this update media
sets the image value for this base image creative
sets the video value for this base image creative
sets the product info value for this update service
sets the media value for this update media
set the endpoint address for the specified port name
checks if the response contains errors or errors
overrides the default initialization method to ensure that it is
test relative redirect
sets the servlet mapping
the junit setup method
test that an exception is thrown if there is no request path info
gets the response wrapper
sets the response wrapper
gets the session
clear the parameters associated with this request
sets the init parameter
sets the config file
sets the action servlet
test method for
test method for
test method for
test method for
test method for
test that the content type header is set correctly
test that the content length can be added to the simulator
tests that a resource can be retrieved from classpath correctly
test that get resource loads from classpath correctly
test that get resource as stream returns an xml file when it exists
test that get resource returns a resource from a file system
test get resource from file system with correct path correction
test test forward
test that verifies that a resource that is present in the classpath correctly
test that get resource as stream works with correct path correction
test that verifies that a resource url can be retrieved from a
tests that a resource can be retrieved from a file
test that get resource as file works with a given relative path
verify the input
verifies the path info and tiles forward
verifies the input tiles forward
gets the action form
sets the action form
this method is called by struts framework
sets up the action servlet
test that a relative redirect is processed
tests that a resource can be retrieved from a file system
creates a new column in the table
getter for property parent
sets the parent of this node
sets the schema
adds a child to this node
removes a child from this node
create a new relation
adds a listener to this node
creates an index
removes the specified node change listener
delivers a node change event to all registered node change listeners
getter for other
builds the desktop pane that contains the top level desktop pane
set the schema
returns the schema
builds and returns a menu containing the list of filters
builds and returns a menu containing the export actions
returns the schema node that this object belongs to
open a new schema frame
creates a new document
removes a schema node from the children list
open a schema file
open a file
closes the selected file
save the current accelerometer data to the file associated with this object
called when the user wants to save the file
import the schema from a file
export the selected schema
set the driver
sets the server
get the port
sets the port
gets the database name
set the database to be displayed
returns the login
set the login field
sets the entered password
this method returns the jdbc url for the database
sets the range of this slider
add an atom to this set
remove a named atom
determine whether this set contains an atom with the given name
gets the atom value
return the atom identified by name
returns the name of the thing
returns an enumeration of the atoms in this set
sets the range of the slider
validates all atoms in this set
returns the minimum value
returns an enumeration of the keys in this universe
returns the maximum value
returns the integer value of this code value option code
returns the class name of this type
empty the table
add a thing to the matrix
gets the thing with the name
gets the thing at the given index in the matrix
gets the row of the reference
fail with the value of the float atom
removes the thing from the inventory
removes the thing with the given name
fail the value of a long range atom
removes the row at the specified index
does this thing contain exactly the same value as thing
return the label atom of the given row
fail the value of a string
gets the value of the given matrix column
fail with a long value for the next atom
compares this object with the specified object for order
test get class name
compares this object with the specified object for order
test put and get atom
return the thing with the given name
fail the current value of integer range
tests that add operations not run in order
adds the thing to this family
test compare to object
adds a thing to the game
fail the value of a double range atom
fail with an assertion that the integer value is negative
fail with an assertion that the value of a boolean atom is null
test method for
returns an enumeration of all the things in this sub sector
fails if the previous statement produces a double atom
returns an enumeration of the names of all the thing names
getter for property set label
validates the value
returns the value of this code date code object as a long
sets the range of the number picker
sets the error string
returns the floating point value of this value
set the database schema name
returns the minimum value
test for code has key code and code has key code methods
clears the error state
returns the maximum value
sets the range of values in this datasets range
returns the minimum value
returns the maximum value
test for get thing
returns the boolean value of this code field code
this implementation of
validate the input field
set the length of the movie
test for get schema name and set schema name methods
returns the floating point value assigned to this
returns a copy of the atom
sets whether this is a parent node
test get value and set value
returns true if this element has the specified name
get the atom with the given name
test copy and equals methods
test method for
create a copy of this thing
test method for
returns the element at the specified position in this list
throws an error because this method is a depricated method
puts a new business object into the bag
resets the enumerator to the start of the next object
returns an enumeration of the values in this hashtable
sets the input for this text field
sets the input of the task
this method was created by a smart guide
description of the method
describe code compose code method here
resets the input
resets the item to its original state
returns the next element in the enumeration
store the current value in the input field
store the input in the option panel
sets the input
this method is used to compose the value of the option
removes the mapping for this key from this map if present
builds and returns the menubar
sets the control
returns the number of objects in the queue
invoked when an action occurs
set the label of this node
sets the input
compose the widget to its original state
method compose set echo
returns an enumeration of the keys in this bag
this method is called when the user wants to compose the game
store the current input in the user interface
this method is called when the user selects the compose menu item
clears the current page
add input targets
returns the first thing that this thing reference refers to
called when a child control has been triggered
description of the method
setup the schema for the test
converts atom to a table line
tears down the fixture for example close a network connection
this method will serialize a thing to a string
the teardown method for junit
return an enumeration of the content of the given thing
return the xpath expression for the given thing
this method converts an atom to an expression
returns true if there are more elements in the enumeration
returns the next element in the enumeration
this method returns the page that was loaded loaded
performs the rule for the super rule
clears all the input and output buffers
add an input to the queue
removes all wildcards in the specified thing
save a thing to the datastore
adds the given input to this conversation with the given priority
set the thing
adds a rule to this rule set with the specified priority
setter for property store
this method is called when the page is present
execute the given sql statement after roll back
set the template thing for this item
adds a rule to the rule set
sets whether wildcard matching is allowed
returns an enumeration of the inputs in this case
return the value of the atom
set the value of the atom
returns a node list for the given xpath or throws an error
sets the atom for which this atom is defined
gets the atom attribute of the structure generator object
returns the thing that this thing is a reference to
creates a new flow and sets up the context
sets up the text input victim
sets up the test fixture
set the width of the text input
adds a decision with the given name and priority
returns the value of this field
gets the value of this option
adds a decision to the decision manager
removes the decision with the given name
sets the value attribute of the option object
returns the decision with the given name
compares this option to another
returns the currently selected option
returns an enumeration of the decisions
adds a header with the given label and priority to this request
returns the current state of this timer
serialize the page to the harddrive format
sets the selected option
returns the number of headers defined in this message
sets the name of the variable
gets the header label at the specified index
sets the row
adds a feature to the option attribute of the atom object
check if the value is valid for this atom
returns the row
sets the label
returns the header reference at the given index
adds an atom to the set of errors
returns the page with the given name
adds a new option to the list of options
remove an atom from the set
returns the value of the control
checks if the atom is valid
sets the conversation
returns the boolean value of this number
returns an error message for this molecule
sets the value attribute of the toggle option object
sets the atom for this atom
sets the thing
removes the option with the given name
gets the thing that this item is in
get the selected select option
set the selected select option
returns an enumeration of all the options in this option group
adds a select option to the list with a given priority
returns true if all rules in this rule set are satisfied
adds a feature to the option attribute of the select object
remove an option from the select
resets the flow and context
returns an enumeration of all the options in the given test
set the current page
sets the name of the current page
resolves the rule pages
put an atom in the context
adds a new page to the flow
returns the buffer
add a page to the flow
clears the buffer
determine whether a set of atoms contains a given name
removes the page with the given name
returns the priority of a given string
format a control into html
return the contents of the file with the specified fragment
find all required fields
removes a page from the set of pages contained in this folder
returns the max length of the given controls
adds a transtion to the registry
returns an enumeration of the names of the atoms in this set
adds a transaction to the set of transactions
add a control to the page
parses a rule node
remove a transaction
remove the control with the given name
removes a transaction from the list of active transactions
remove a control from the page
returns the control with the given name
returns an enumeration of all the names of all the control
return an enumeration of all the controls in this preference object
use this method to set the starting page
adds an element to the tree
adds an element to the tree
set the name of the ending page for this form
removes an element
get an enumeration of the elements of the resource collection
add an input to this module
clone the page
set the update context
add an input to this page with the given priority
add an input to the page
this method iterates through all atoms and calls the update context method
removes an input from the tool
removes an input from the container
returns an enumeration of the inputs in this gate
returns the input with the given name
returns true if there is an input with the given name
return true if the page has the named control
returns the first control with a given name
get thing store
set a string variable
sets the value of a variable
unsets the binding of the variable
replaces the head and body of the document
returns a new document instance
create a new element
create a new code text code node and append it to the
creates a new pi with the given target and content
velocity accessible comment construction
return the value of the entity as a string
velocity accessible attribute construction
returns the status of the allow empty tags flag
returns true if all open childless tags have been closed
returns true if the given name is childless
tests if the optional flag is present
return true if this is a uri
fails a test with the given message and cause
consumes all whitespace characters up to the next non whitespace
indicates if this text is used as hex or plain text
encodes a character data to a string using the defined entities
if the next character matches the current token this method
get the value of a command line option
this method peeks the next character in the stream
parses a node
parses a node name
this will set the character entity for the given string
parses a text
encodes the given text
adds a window listener to this frame
returns the text field
converts all of the characters in the string buffer to lower case
converts all of the characters in a string to upper case
sets the textfields foreground color to black
adds an element to the list
adds an element to the end of the list
sets the text field to red
removes the current element from the list
skips over and discards code size code bytes of data from this input
returns the boolean value of the configuration parameter associated with
does the given object must be included
this method is used to check the given column values
adds a message to the queue
generate all planet names for the given universe
run the game
set the objects
resets the sort column
renders the model
generates all universe fields for this universe
writes an unsigned byte to the buffer
generate all universe of universe u and set all universe
writes a short value to the stream
read the coordinates of a given lsbreader from the given input stream
write an unsigned short
writes an int to the stream
writes an unsigned int using a little endian byte order
writes a long to the stream
writes a string to the stream
writes a string
writes a string to the stream
writes a string to the specified code string buffer code
skips over and discards code size code bytes of data from this input
generate the gen for this player
this method generates all universe u vcr from source u
reads an unsigned 8 bit value
reads a signed short value
reads an unsigned 16 bit short
this method reads an integer value from the stream
reads an unsigned int value
this method reads eight bytes from the stream
reads a string
produce a report on the current state of the test
skips over and discards code size code bytes of data from this input
skips until the given position is greater than the given number
distance between point p and this
offset the point by the given amount
returns the type of this field
checks if a point lies on the own
reads the mess from the lsbreader
checks if the point lies within the own point
returns true if the edge lies within the given line
returns true if this point lies within the specified
puts all of the objects in the universe into the universe
writes the message to lsb
this method generates all universe objects for the given universe
convenience method for getting the beam type
gets the number of units in the requested decay
checks if the point lies on this circle
checks if the point lies within this circle
checks if a line is within this circle
checks if this code area code lies within the specified
sets the content of the text area
gets the element at the specified index
returns true if this model has launchers
checks if the current hull is allowed to cloak the game
returns the number of entries in the miss vector
can bioscan20 returns true if the current hull is allowed false otherwise
do we have a bioscan100 hull expression
generates all universe of planets in the given universe
do we have an hull surface
tricky each players name is a valid hull name
convenience method to get the tps torpedo
returns the race of the given player
is this hulls advanced reinition
does this players hull make a move
do we have an associated hull surface
does this player have any casino in the given hull
read response for all response
reads all data from the given game and sends it to all clients
get the neutr usage of the specified warp
gets the race owner
checks if the point lies on the board
checks whether the given point lies within this plane
returns true if the given line is within this line
reads a trn rst generator
tests whether this object lies within the specified rectangle
find the index of the given class
find the index of a field in the field list
sets field and fi tabulatable type
puts a universe of an universe in the report
this method generates all universe of ships
gets the radius of this square
code set sqr radius code sets the units of radius
checks if a point lies on the map
checks if the point lies within the units
read dis data from a file
this method generates all ships for a given universe
read data from the file
check if a player is ally
checks if the given player is the ally ship
checks if the point p lies on this line
checks if the point lies within the line
sets whether this ship is a user or not
builds the code for fighters that are currently built
calculates the amount of tax this player has
calculates the tax for a single col
calculates the sum of all taxs for all the col
gets the temp
calculate collid nt value
returns the universe that is only allowed for the specified hosting
return the distance to travel
calculates the movement of the robot
returns the position of the node in the world
get the number of turns until the waypoint is fully
get neutr at waypoint
returns the total mass of the cargo
get the engine of the specified type
gets the torpedo attribute of the torpedo object
returns the id of the unit this entity is laid
returns the owner l id of the current laid out target
returns a short report describing the status of the task
retrieves a vcr object from the vcr vector
retrieves a vcr object by its id
get the minefield for this day
remove planet from cache
remove a ship from the hash map
remove the minefield from the minefield table
host a java
get objects field
returns true if this field is through a field
get the reference count of this object
returns whether or not this index requires an element to be at the
is this value a primitive
set the value of insert
sets the delete value for the parameter
sets the gap ext
set the match value
sets the replacement
match a query sequence with a subject
returns the current pride connection
validates that the timestamp is valid with respect to the time stamp
checks if the timestamp is valid
returns the mz data accession
sets the mz data accession
used by spring to get the collection of memberships for confirmation
setter of the property tt memberships for confirmation tt
sets the membership id
returns the collection of memberships confirmed by this customer
sets the collection of memberships confirmed by this party
allows a user to add a membership to the user
gets the value of the items selected property
sets the items selected
returns the collaborations that are selected by the user
adds a collaboration to the list of selected collaborations
returns a query using the given persistence manager
sets the value of the parameter property
gets the value of the search by property
sets the value of the search by property
sets the results
returns the default selected
clears all objects from the cache
sets the default selected
returns the number of experiment in the list
gets the value of experiment titles
returns the name of the file
compares its two arguments for order
gets the value of the experiment accession number property
sets the file
sets the value of the experiment accession number property
gets the value of the identification accession number property
this method handles errors from the xml parsing
this method handles fatal errors from the xml parsing
the warning method
sets the reference string
this method returns a collection containing all mz data objects
returns a collection with institution objects
sets the sample attribute keys
resolves a resource
returns the sample attribute keys
returns the simple search value
sets up the fixture for example open a network connection
cleans up the database
sets the simple search value
determines whether this object is equal to the given object
returns a hashcode for this principal
returns a collection of institutions
returns the base64 string of this object
returns the byte order for this binary array
returns the length of the data in the data block
returns the endianess for the i th file
returns the data precision
returns a string representation of the binary array
returns the name of the user
returns a string representation of the object
returns a string representation of the parameter
returns a string representation of the object
returns a hash code value for the object
returns the length of the sup data array in bytes
returns the value of the entry
returns the contact info for this user
returns a hash code value for the object
returns a string representation of the contact info object
returns a string representation of this object
returns a string representation of the object
returns the accession number
returns the current value of the cvlookup property
returns a hash code value for this instance
returns a hash code value for this object
returns a string representation of this object
returns the acq specification of this analysis run
returns a collection that contains all the cv parameters associated with
returns a string representation of this supplemental data
returns a collection that contains user parameters
returns the index of the current iteration
a string representation of thequisition impl
p returns a collection that contains all the single member member
returns the id of the spectrum that owns this sample
this method returns a collection that contains all the precursor objects
returns a string representation of the object
returns the version of the database
returns the full name of the user
returns the cv label
returns the address of the user
returns a string representation of this code sup data array code
returns a hash code value for this instance
returns a string representation of the object
returns a string representation of the object
for debugging purposes only
get the string representation of this object
this method adds the given identification to the experiment
returns the accession of the protein
returns the hash code of this object
returns the reference line
returns a collection that contains all the references to this model
returns end of the range
returns true if the certificate is public
tests this object for equality with the given object
returns the url of the gel file
getter for the i gel
gets the molecular weight of the data
date when the certificate was verified
returns a collection that contains all additional cv parameters
returns the pi
returns a collection that contains additional user parameters
getter for the i xcoordinate parameter
determines whether this object is equal to the given object
returns a collection that contains all additional cv parameters
returns a collection that contains additional data about the modification
get all peptide additional user parameters
returns a collection that contains additional cv parameters that
returns a collection with additional user parameters
getter for property accepted by curator
returns a collection that contains additional user parameters
returns the modified sequence
this method returns the value for the location column
returns a collection of strings representing the sup description elements
this method sets the value for the location column
returns the accession number
gets start of the range
returns the mod database name
returns the accession version
this method returns the value for the modifications column
returns the version of the database to which this operation applies
returns the verification state for the receiver
get the number of peptides
returns a collection of monoisotopic mass difference
gets a collection containing the average mass difference
returns the splice isoform
returns the identification of the model
returns the software completion time
returns the database name of the
gets the value of the verification comments property
this method allows to add a modification to the sequence
returns a clone of the object
returns the version of the database to be used for performing the query
returns a string representation of the object
getter for property mass delta value
returns the submitter of this user
returns the collection of peptides
returns the curator currently responsible for this publication
returns the experiment of this experiment controller
this method returns the value for the peptides column
setter for property date joined
sets the from date
returns the permitted people
sets the to date property java
sets the date left
returns the party from which this operation was made
sets the party
checks if the given person may be used to view this
returns the sequence coverage
sets the party this part provides
initialised method to get the current forename
checks if the period is still valid
this method returns the value for the title column
returns the score of the result
returns the search engine
initialises the forename
returns the short label of the command
returns the current threshold
set the party of the sending
mutator method for private instance variable code confirmed by owner code
returns the mapping data
initialised method to get the surname of the user
get the l experiment
returns true if the current time is the time of the day
returns a collection that contains the protocol step instances
initialises the surname
checks if this bean has been confirmed by the owner
this method sets the value for the accession column
returns the title of the page
get the party this owns
initialises the title according to the value provided
returns the id of the user
returns the web address
write access to private field
sets the id
return the username for the user
gets the l organisation
returns a hash code value for the object
sets the verified
set the username for the current user
sets the l organisation id
a short string representation of this object
sets the project description
return the password associated with the current user
returns the i id
this method returns the value for the identifications column
returns the accession number of the protein
gets the parent organisations
adds a permission to the list of view read permission
initialises the e mail address using the given string
adds a parent organisation to this party
sets the first line of this header
this method sets the value for the accession number column
gets the value of the system account property
returns the collaborations that this model belongs to
get the name of the parent organisation
sets the address line2
returns a collection with additional cv parameters
sets the owned collaborations
returns the formatted name of the party
returns true if this object is already in the database
returns a collection with additional user parameters
sets the zip code
sets the founded date
sets the disbanded date
sets the owner
returns the id of this object
get the current owner of this document
returns true if this is a disbanded date
sets the l owner id
returns a collection of membership bean objects
sets the length of the data in the file
sets the endianess for the i th column
method set membership children collection
sets the data precision field for this record
gets the collection of experiment read permissions for this repository
allows a child party to be added to this membership
returns collection of base64 chunks
sets the collection of read permissions for the experiment
returns all people who are members of this group
sets the collection with base64 chunks
p sets a collection that contains any rows that are associated with
determines if this person is marked as curator access
sets the name of the user
sets the accession number of the user
p sets a collection that contains any cv parameters associated with p
p sets a collection that contains any user parameters associated with p
gets the number of spectra in the collection
mutator for software completion time field
returns the title of the forename
sets the version number of the icmproxy connection
sets the full name of the user
this method returns the value for the id column
mutator for cvlabel field
this method sets the value for the chunk column
sets the address of the user
returns the binary array id
set the value of i l binary array id
sets the contact info string
this method sets the index of this state
this method sets the value for the mass delta value column
convenience accessor method
sets the length of the sup data array
sets the binary array of the inten array
sets the accession number of the protein
this method sets the value for the spectrum ref column
sets the accession version
this sets the i mz array binary field
convenience method to set the ojb concrete class name
sets the collection of peptides
sets the score of the protein
sets the search database
sets the experiment
sets the version of the database to be retrieved
returns the id of the peptide
sets the name of the search engine
setter for property i l peptide id
setter for property splice isoform
this method sets the value for the modification additional user parameters column
sets the molecular weight of the data
sets a collection that contains additional data about the modification
sets the threshold for the fitting image
sets the double value for the sequence coverage
this method sets the value for the mod database column
this method sets the value for the mod database version column
sets an acq specification to the acq
sets a collection of monoisotopic mass difference
sets a collection of average mass difference
sets the unique id of this spectrum
this method sets the value for the pi column
p sets a collection containing i i precursor
returns a hash code value for this instance
this method sets the value for the xcoordinate column
this method sets the value for the ycoordinate column
returns a string representation of this exception including the
print the stack trace of the wrapped exception
print the stack trace of the wrapped exception
convert a byte array to a string
gets the details
convert a single char to corresponding nibble
returns a string representation of the object
this method deletes all registration information in the database
gets the source file id
returns a collection of all memberships of this group
sets the i l source file id
returns a collection of all read permissions for all experiment read permission
returns a collection of all people in the system accounts
this method returns the value for the identifications count column
returns the bean of the mz data bean
returns the number of identifications in this model
returns a collection of all mz data objects for this database
returns a code mz data bean code object based on the primary key
setter for property public date
returns a collection of all accession strings for the current experiment
returns a collection of unique identification report for the given experiment accession
returns a collection of identifications for the given experiment
returns a collection of identifications for the given experiment accession
returns a collection of peptide report for the given identification
sets the verify date
returns the number of unique peptides in the database
returns a person bean for the given party id
returns a collection of all uncached experiment accession strings
returns true if the date is verified
this method clears the cache and then re inits the experiment
returns a department bean for the given primary key
returns a collection of strings for the accession strings of the current experiment
set the submitter
returns a institute using its primary key
returns the xml cache file
sets the cache file
resolves a resource
returns a collaboration based on the primary key
b purpose b deletes an object from the database br
returns the xml cache file no spectra
marshalls a collection of reference objects
close the persistence broker
this method sets the value for the xml cache file no spectra column
closes the stream
marshalls out the collection of identifications
the method code clear cache code
method process protocol step
returns a collection of permitted people for this experiment read permission bean
checks if a person bean is permitted to view this goal
returns a collaboration bean for the given name
processes a mz data object
returns a specific institute of the given name
returns a collection of code experiment data code objects representing
if set to true the server accepted by curator member
returns a collection of all experiments that have been rejected
this method marshalls the mz data object to the writer
returns the mz data unmarshaller
returns the primary key of a membership bean for the given membership id
returns the number of messages in this folder
returns the message item at the specified position in this list
adds a message item to the collection of message items
returns true if the provided message item is in the collection
adds the collection of messages in the queue to this
returns an iterator over the message items
returns a list iterator of the message items
returns the experiment accession
sets the experiment accession
creates an analyzer list and processes it
returns a pojo for the given query
count the number of returned queries
returns a collection of all objects returned by the given query
initialize this database connection broker
returns the annotation value or null if we have a
returns the object using the given query
counts the number of result sets of the given query
returns a collection for the given query
reports the given query
returns all available ontologies
updates the given flag for the given ontology
initializes the database broker
construct the query string
returns a collection of the ontology report that contains the results
remove control characters from a token
release the hibernate broker
start a transaction
get the collection of all ontology report for the named ontology
returns the broker
performs the initialization of the parser
stores the ontology and the query handler
parses the specified parameters
process terms from obo session
load the url config file
writes the specified file to the specified file
commit the current transaction
finds the xrefs in the given set
update the formula xrefs and monoi data
rollback the current transaction
clear the cache
helper method to create a term bean with a default value and name
deletes an ontology
returns the set of terms in this file
returns a set of obsolete terms from the file
enable ssh for this connection
this method is called when the adapter is created
parses the obo file
gets a term from the file
set the dangling mode
set the flag to allow circular goflating
parses the file
disable ssh for this connection
returns session for which obo session is available
returns a collection of root terms in the database
returns the term for the given term id and ontology name
set the log level for the logger
method returns the references to xrefs of a term
stores the stats into the database
set the endpoint address for the specified port name
this method returns the ontology names
get all the root terms in the named ontology
returns a map of all parent terms of the term
returns true if a term is obsolete
clear all the components in the term cache
initialize the serializer if it hasnt been set
dumps the request parameters to the log
build the url for a term accession
returns the relation type
initializes the parser for the ontology
sets the param id of this parameter
parses the specified parameters
method that creates an unknown relation
displays the usage of the file
sets the map master
get all types of peptide
gets the sequence attribute of the jboss class settings object
escapes any xml characters in the string and escapes any double quotes
compare two peptides
returns a list of groups that are members of the given feature
safe trimming the input string
initializes the servlet
get the ontology
returns a new feature holder with only those features that match the
removes feature from set
returns the method of the rule
test the font name length method
tests that there is no duplicate font names
checks if we can trinity available
get the window state
get the block icon
open a file in the given environment
set window extent
used to close down the environment
return the variable argument
compare two objects
returns the mask of the data bits
get the shift value for the data set x
returns the offset of the data in the data array elements of pixel
file 16 bytes
delete the icon from the window
returns the path to the image to be used for the operation
sets environment variables
this method loads all resources
returns the path to the image to be used for the operation
sets environment variables
this method loads the resources
returns the image path for this item in the export processing
sets environment variables
loads the resources
returns the full path to the image in the workspace
sets the environment
this method loads all resources
returns the image path
sets environment variables
find a dynamic area with a given number
removes a resource from the repository
get the code aggregated resource code with the given id
add a metadata tag name and value to the model
gets the resource that contains the aggregated resources
gets the resource that contains the aggregated resources
adds a meta data attribute to the list of metadata
set the atom title
writes an atom to a string
return the title for a given model
test method for
create a uriar
create a uri object for a href
get the om of the model
this method checks if a friend is already in the list
removes a friend
this method is to override if you want to generate your own objects
checks the scores of the scores parameter
applies temp style to to the current style and image directory and
returns the date using the specified pattern
does this strategy handle the given domain class and its respective mapping type
does this strategy allow the given domain class to be searchable for the
does this strategy allow the given domain class to be searchable
does the implementation handle the searchable value of the given
provide a description of this filter
sets application context
compares its two arguments for order
show a string in html
sets the html
look up a jbutton identified by its name
returns the jcheck box with the given name
returns the jmenu associated with the given name
returns the jmenu item with the given name
returns the jradio button with the given name
returns a j thlider from this jad file
returns the jspinner with the given name
returns the jpopup menu associated with the name
returns the jscroll pane named name
returns the jinternal frame with the given name
returns the jtabbed pane with the given name
returns the jprogress bar with the given name
returns the jlabel with the given name
returns the jtext area named name
returns the jtext field with the given name
returns a jcombo box with the given name
this will return a jtable object given the jtable name
returns the jpassword field with the given name
returns the named field if found null if not found
returns the jradio button menu item named name
returns the jcheck box menu item with the given name
returns the component with the given name
add a child to this window
set the parent of this component
returns the parent code jfcmlwindow code of this code jfcwindow code
returns the nth child of this node
set the window context
imports a package into the current package
flushes all imported packages
adds a package to the list of imported packages
adds a whole list of packages to the imported packages list
returns the packages of this compilation unit
returns the default scripting language
sets the default scripting language
creates the start of an element
setter for property current file name
method end element string
set the next handler in the chain
adds a statement handler
returns the window context
adds a new element handler to be notified of any new element
adds a new attribute handler to this element handler
add a child handler to this handler
registers a window handler
called by the host application to end the current window
creates a new window for the given container
get the window context
set the window context
method start element string
returns the end of an element
recursively calls handle attribute on the current element and its children
set the next handler
parse a statement fragment and return the resulting object
set the handler to be called when the next button is pressed
setter for property next
set the element handler for the next element in the chain
mark the given container window as active
called by the terminal when the window is ended
set the next handler
publish the log record
this method returns a string representing the meaning of the date
this method returns the meaning of the daily type
generate report for the specified locale
tears down the fixture for example close a network connection
tears down the fixture for example close a network connection
return mime type based on file extension
returns the resource bundle for the given locale
get the extension of the file
prints the message to the given logger
returns the resource path from the request uri
changes the scale of the frets
changes the number of frets to the given number
calculate the distances between the two given distances
change the fret number
change the scale length of the box
return the default write buffer size
set the strip service
return a map of search result data dto objects
set the map of search result data
returns the strip dtos
sets the strip dtos
returns the total number of strips created by this strip
sets the total number of strip count
gets the value of the date as string property
sets the date as string
return the id of the image to strip
set strip image id
gets the value of the thumbnail image id property
sets the thumbnail image id
sets the transcript
spring injection point required
deletes the entity with the given id
persist the given entity
returns the name of the unqualified class
gets the url data as string
gets the value of the total result count property
spring will inject this
sets the compass gps
sets the password again
returns the strip that is currently being parsed
create a strip downloading date to match
sets the strip that will be rendered
setter for image dao
set the dao for communication with the data layer
sets the dao for strip rating operations
sets the strip extractor
sets the rater of this answer to the given value
set the http utils for this web application
sets the news item comments of this news entry
sets the strip comments
sets the strip rating
to set the user commenter
sets the strip image
sets the thumbnail image
start this telnet daemon respectively
stop this telnet daemon respectively
returns a shell with the given key
sets the connection filter to be used when the filter is executed
returns the current connection filter
starts the thread
tests if this tt modbus tcplistener tt
gets the connection manager object
sets the tt avail tt property
stops this tt connection manager tt
starts this code service tracker code and its jobs
returns the socket of this tt tcpmaster connection tt
stops this tt modbus tcplistener tt
returns the connection manager
returns the host name
returns the host address of this tt modbus tcplistener tt
periodically does following work
returns the address of the local machine
returns the locale of this tt modbus serial master tt
returns the last activity of the session
this method is called when the activity has been changed
set the warned flag
tests if this tt modbus ioexception tt
register a closed connection
sets the width and height of the terminal geometry
returns the number of columns in the table
returns the number of rows in the table
returns the source connection
tests if the terminal geometry of this component has changed
tests if the typeid is sql type resource
sets the negotiated terminal type for a local term
this method will be called when the shell is started
returns the connection data
returns the negotiated terminal type of this tt negotiated terminal tt
returns the terminal io
returns the environment for this tt persistent object tt
method to prepare the connection for a shell switch
returns the next shell in the queue
sets the login shell class name
returns if this thread is active
register a connection listener with this monitor
returns the login shell
removes a connection listener
tests if the line mode is in line mode
this implements the connection listener
sets the line mode flag
sets the host name
sets the host address
returns the number of elements in this buffer
read a character from the stream
colorize the given string
returns a reference to a terminal that has
puts a character into the buffer
put the specified number of bytes in the buffer
read a byte from the buffer
bells the memory mapper
define scroll region
writes the given array to the output stream
write an int array
writes a single character
handle the escape sequence for the i o terminal
write a string
returns the autoflushing state
flushes the stream
set the autoflushing flag
closes the output stream
write data to the telnet session
flush the stream
returns the tt terminal tt that this tt modbus tcplistener tt
sets the default terminal field to the negotiated terminal
sets the terminal to use for this localizer
executes the command
closes the input stream
returns true if the terminal geometry of this component has changed
start this telnet daemon respectively
stop this telnet daemon respectively
method to prepare the shell manager
read an unsigned 16 bit integer from the stream
checks for the telnet protocol
method that is called when an address is needed
handles a break by sending a break event to the server
updates the terminal geometry of this window
handles a c style
parse buf with doubled iac to convert doubled to elicitation
handle the naws section of the file
process a linemode
this method refers to the server for a token stream
negotiate the line mode
method that sends a new environ send subnegotiation request
skip all subnegotiation request
read an iacseterminated string from the buffer
method that informs internally about the supported negotiation options
this method sends a command
method that checks if a given turn is enabled
wait until the given reply was received
method waits for a reply
get the status of the current solver as a qssolution
generates a name for a variable
generate the name of a constraint
returns the number of nodes in the graph
returns the position of the next node in
round the input matrix into one unit
loads the matrix into a round loader
loads the matrix from a random data source
calculates the index of a given row and column
append rows to this row
append columns to the current row
returns a basic lpsolver that uses the default constructor
get the index for the given local row
sets the value of the lpvariable property
sets the orientation of the player
sets the value of the constraints property
adds a new constraint to this solver
adds a variable sequence to this specification
get the column model index for the given local column index
returns the number of all fields in the given class and its superclasses
the graph is the global graph
returns true if the given node is a negative compiler cycle
double value function
corrects the label of a node to be added to the algebra
helper method that actually performs the dfs traversal
search for cycles in the glob nodes
returns the predecessor of the given node v
runs the traversal for all nodes
get the residual capacity at the given edge and direction
returns true if the graph can be nested by the given property
set the node map
sets the edge map
method add node
add a new node to the tree
add the specified number of nodes to the graph
adds the specified number of nodes to the graph using the
create an edge from a tt from node tt to node num
adds an edge to the graph
adds an array of edges to the vertex
adds edges with weight
adds several edges to the path
fills the edge map with the weights of the edges
update the tooltip
displays the image in the panel
this method is not supported because this obstacle is dead
this method is called when the user evade
updates the velocity for the next step
runs the thread
the process location method is called when the user selects a location
sets the distance to pater that has been set
update the panel
kills the particle
sets the velocity of a target
returns the closest visible target to the current vision
the method is called when the agent is moving
turns off any dead sets that may still be avoidd
check if a particle is eaten
returns the right image
returns the location of this hit area
is this thread alive
returns the current acceleration
get the width of the image
get the height of the source image
pauses the current play
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated setter method
auto generated axis2 error handler
auto generated getter method
auto generated setter method
auto generated axis2 error handler
auto generated axis2 error handler
creates the field editors
receive notification of the start of an element
end an element
returns the channel title
gets the channel link
returns the title of the item at the given position
returns the link at the specified index
returns the number of items in this container
returns the parameter with the given key or the given default value if
get the parameter with the given key or the given default value
get the boolean value of a parameter
returns the parameter with the given key as color
get the font style parameter given the font key
paints the box
paints the channel title
paints the item
displays the given status in the status bar
mouse listener interface implementation calls the same method on current item
repaint the item when the mouse leaves the area
mouse move event handler
get item from coordinates returns the item number of the item
calculate the bounds of the item
find the bounds of the node
returns the line height
returns the line number for the base font
returns a string with the given width and width
returns the start position for a string of the given line
closes the thread
connects this socket to the given address
opens a connection with the given address and blocks until
gets the address of this socket
listens on the socket for incoming data
binds this socket to the given address
binds the socket to the address specified in the constructor
returns true if the credirbies are to be passir false
gets the peer gid of the other socket
return the reply type of the message
gets the peer id for the current connection
check if the message has a reply
gets the unique id of the peer
returns true if the input stream is shutdown
returns true if the output stream is closed
reads the credential argument
sends a packet with the given data
enable disable blocking
compares this code uint32 code to another code uint32 code for order
enables disables the pass hash function
sets the timeout for this socket during which an attempt to be made
closes the input stream
shuts down the output stream
retrieves the introspectable
gets the user identifier
set the introspectable
sets the user identifier
gets the filename for the tab at index
returns the text file for the tab at the specified index
create an interface for the specified reader
add an entry to the bus
get the dbus entry at the given row
returns the type of this field
returns the bottom unsigned integer number
compares this code uint64 code to another code uint64 code for order
returns the top long
returns the value of this
returns the value of this literal
compares this code uint16 code to another code uint16 code for order
get a dynamic proxy from the object path
throws a runtime exception
return the alignment type for the current position
append a signature to a data buffer
append a byte to the byte
append a string to a buffer
add a fallback objectprefix
append an integer value to the array
gets the value of the object path property
changes the number of threads to the specified value
ensures that the buffer is valid
interface for local messages
disconnect from the server
get a remote object from a bus
export a object to a dbus
get a bus object from the bus name
returns the destination header field
get the unique name of the bus member
get the bus address of the bus
release a bus name
get the error from the pending errors list
returns the value of the specified header
returns the interface header
returns the name of the header
returns the path
gets the reply serial number
returns the signature value
remove a fallback objectprefix
gets the source header
encode the integer in the array form
internal method to pad a specific alignment
sends a signal to the bus
preallocated bytes in the list
un export a object
processes incoming game data
process incoming packets
loads all packet handlers from the persistence manager and stores them in
returns the npc handler with the given id
loads npc handlers from persistence mechanism
registers a new shop to the room
returns the shop at the specified location
sets the value of client updater
return the length of the entire segment
returns the x coordinate of the given way point
returns the y coordinate of the given waypoint
return the x coordinate of the waypoint recalculating cached values
return the waypoint y coordinate
set the delayed event handler
returns the client updater
returns the delayed event handler
set the location of an entity
returns true if the point is within the world
packs the tile
sets the tile at the given coordinates
sets the tile at the given index
gets a tile from the given location
packs the tiles into a byte buffer
returns the tile value at the given x y position
replace the entire path recalculating cached values
set the path of the waypoint
update the position of the path
reset the path to be empty
returns the active tile at the given coordinates
checks if the path has been finished
checks if the given waypoint is located inside the path
returns the tile at the given point in the container
return true if the mob is at the start
a new object has been created
a game object has been removed from the queue
registers a player with this game
registers an npc at the map
removes an entity from this player
this method checks if the user is logged in
register a game object
register a door
unregisters a door
registers an item in the pool
invoked when an exception is thrown by the remote server
packet listener interface method
called when the session is closed
returns the time when this file was created
called when a new session is created
invoked when a session idle event is received from the server
called when the session is opened
adds the given packet to the list of packets
returns string representation of pdu
returns string representation of pdu
reads the next code short code from the payload
remove a player from the game
reads the next code int code from the payload
a message has been received
called when a session is closed
reads the next code long code from the payload
a new session has been created
invoked when the idle status of a session changes
invoked when a new session is opened
shutdown the world for update
get the time till shutdown
unregisters an npc
shuts down the server and empty the world connector
unbinds the acceptor from the socket and invalidates the sockets
decode the packet
this method is used to get the string representation of the session
decode the packet
writes packet in output buffer
removes a game object from this container
unregisters an item from the inventory
updates all the message queues that are logged in
sends the packets which have been queued for this player
updates the timeouts for the given player
updates the npc positions
returns the number of npcs in this collection
updates npc apperance builder and writes the npc apperance
updates wall objects
updates game object position
checks if the given npc is in this city
updates items on the client
checks if a player is in this game
restores the player collections
gets the player with the given username hash
gets the npc at the given index
returns the npc with the given id
gets the player at a given index
sets the player who made the event
clears the packets in the history
sets the id of the packet
convert the packet to a packet
sends a screenshot
expand the receiver to the given minimum capacity
sends the combat style
sends a fatigue packet
returns a packet representation of this packet
sets id of packet
sets u id of packet
sets specified connection handler for login and remaining packets
packet of packet
show bank information
hides the bank
updates the bank data item with new values
show a shop
hides the shop
sends an alert message
sends a sound to the rsca
sends a died packet
send a private message
sends a friend update request to the rscboard
sends the list of friends
sends the list of ignored users known by the broker
expand the receiver to the given minimum capacity
sets specified handler to this packet
sets the packet id
sets the parameters
returns this fpacket as a packet
sends the equipment stats to the armour
sends the statistics
sends world info
sends the prayer players
sends the game settings packet
sends the logout request
sends a cant logout packet
sends the login box
tells the player to inform itself of a player
a unit test for junit
a unit test for junit
test method for
test method for
test method for
test method for
test method for
tests to property name
test method for
test that dasherization works
test map single input stream
map multiple input stream
check if the puzzle8 is a valid permutation
utility function to delete feed with the same title and label
find the feed for the given url
enter this panel
returns the feeds of the container
removes the feed configuration
exit the panel
resets all the cookies and initializes the internal data structures
sets the last selected label in a label panel
save the cookie
initialize the various feeds
this method is called when the user selects the enter key
returns the view containing the cover
returns the edit text view with the given id
called when the discard button is clicked
build http parameters
creates an http client to talk to the host and port
checks if is empty
gathers library account information
returns session id associated with url
show the element containing the holds data
the execute method handles the events that occur
returns the object associated with this node
sets the object id
reads the content of the file
add a value to the history
fill the content
add the current value to the history array
returns the value of this attribute
sets the value of the attribute
deletes this element from the database
returns the location of this entity on the specified time
returns the time that the next move will take
gets the value of the int field property
update the speed of the track
sets the int field
moves the track by a given speed
sets the string field
start the time
starts the timer
stops the time movement
stop the timer
gets the airplane
checks if the entity is moving
sets the airplane id
gets the airport id
return true if this track has been set
sets the airport id
executes the event
returns the current time
sets the flight name
returns the name of the flight to the specified value
sets the start airport id
gets the airport this player is using
sets the land airport id
returns the current speed of the agent
sets the current speed of the robot
returns true if the given airplane is contained in the list of
this function is called to land an airplane in the table
this method is called to start an airplane in the database
sets the name of the user
sets the coordinate for this cell
return a string representation of the time
starts the airport
land the airport in the lander
calculates the id of the flying flight that is the id of the
returns the coordinate for this region
sets the flag indicating if the creature is flying
returns the id of the flight this entry belongs to
sets the id of the flight this entry belongs to
returns the speed of the movement
returns the distance between airports
gets the time of this time zone
this is the first airport that the employee wants to say
returns the coordinate of the land covering this patch
returns the coordinate for the given time
sets the starting airport id
sets the land airport id
sets the start time of the test
sets the land time of this land object to the specified time
write an object and read it out
executes the event
senses the sensing of a set of sensables
executes the event
returns the element
this method will move the element to the next location
get the currently moving element
get a code movable code object from the given element
method to set end time
this is the run method for the simulation thread
this method simulates the actual simulation
visits this node for traversal
visits this node for the purposes of the specified visitor
throws the given exception to be thrown
creates exception from an exception method
set the lines for this map
accepts the visitor
write the event to the file
an event has been popped
write out the event to the disk that the user has removed
called when the simulation starts
called when the simulation has finished
signals that an element has been created
adds a line to the current line
called when a child element has been changed
method requested element
adds a new line to the current line
adds a line to the current array of values
this method is called when the simulation is about to be advanced
starts reading an archive
adds a new line to the multi line
called on the event dispatching thread not on the worker thread
starts writing an archive
adds a line to the current array of keys
notify that the writing operation has finished
adds a new line to the multi line
called when an exception happened during parsing
called when a message is received
collects the nodes of the current level
collects the nodes of the current level
this method performs the actual analysis
collects the value of a node
returns the next token from the string
calculates the time to wait for a message
calculates the new time based on the next time
sleeps the current thread for the given number of milliseconds
sets the keys
sets the keys
adjust the distance to a mean square function
convert a string to degrees
sets the values
return the length of the array
gets the latitude and longitude of the local coordinate system
returns the longitude
get the height of the space
transforms the vector
returns the distance between this coordinate and another coordinate
returns the arc that is this point at the given coordinate
returns the angle to a given coordinate
returns the angle between this point and the given coordinate
calculates a coordinate for a given angle and length
calculates the direction of a point on an angle
reads the coordinate of this object from the given time
reads a space vec object from the input stream
creates a new move instance and returns it
moves the specified coordinates to the specified position
reads a vector
reads and returns the speed of the current direction
compares its two arguments for order
amount of this expedition
reads the direction of the end vector if the start vector is
returns a new speed object with the addition of this one and another
returns a new speed with this speed minus the specified speed
returns the current speed of the robot
multiplies this speed by a value
returns the time in the space that is the amount of time in
returns the start point of the space
returns a space that contains all the time t times
this method is used to read the start time of a message
returns the end vector of this line
returns the time at which the target was last read
compares the absolute values of two speed vec objects
returns the minimum distance between the two given vectors
returns a new space vector consisting of the total times of this vector
returns a new speed object which is absolute to this one
returns the minimum of the read time in the space given by r
returns a direction vector that is the direction of this
creates a move at time t
returns a new speed vec object that holds the sum of this vector
returns a new speed vector consisting of this vector with another
returns the distance between two points in the space
returns a new vector with the times of this vector
returns the distance between this point and another point
returns a space that is absolute to this
compares two objects
amount space in the drink in grams
returns a direction vector corresponding to this direction
add a space to this space
returns a new vector that is the sum of this vector and another
returns a new space with the same units as this space
returns a new space with the specified amount
returns a new vector that is the difference between this vector and another
get the time for a given speed
returns a new vector consisting of the product of this vector and another
divides this speed by the given time
compares two space units according to their centers
compute the dot product of this vector and another
returns a direction that is the cross product of this and another direction
compares two vectors according to their euclidean distance
returns a new vector consisting of the product of this vector and another
returns a new speed vector in which all components are multiplied
compares two vectors representing the distance between each component
compare two time objects
adds a sim listener to the list
removes a sim listener from the list
notifies all listeners that an event has been pushed
notifies all listeners that have registered interest for
notifies all listeners that the sim model has been removed
a new element has been created
updates the simulation time and the listeners that this simulation has advanced
gets the amount of time in the specified time units
notifies the listeners that an exception was thrown
used to notify the gui of a message received from the server
returns a new time with the same units as this time
returns a new time object with the difference between this time and the
returns a new time object with the times of this time duration
find an event with the given id
returns a new time object with the specified number of units
pops the event and returns the event
inform the user of the change
compares two events
state that was imported
returns the event that was pushed by the event queue
pop event from the stack
store the value for the if condition
returns a string representation of the event
returns the number of conditions in this collection
returns a hash code value for the object
check if the condition map is empty
returns true if the given object is an event with the same id
compares this event to another event
returns true if this domain is initialized
checks whether the condition contains the given key
returns true if the button was pushed
returns whether this is the popped state
adds a event listener to the list of listeners
adds a listener to the list of listeners
sets the event id
returns the value to which the specified key is mapped in this
sets the time
returns the value to which the specified key is mapped or
sets the priority of a given event
put an association between a key and value
remove the condition with the given key from the condition map
copies all of the mappings from the specified map to this one
clears the condition map
adds a line with the given values
adds a new line to the end of the list
adds a line to the chart
add a line to the multi line buffer
adds a line to the first line of the text
adds a line to the first line of the text
find the first line in the given keys
sets the elements
returns the elements of this element set
returns the hash code of the element
returns true if the given object is an element and has the same
compares this element with the specified element for order
returns a string representation of this object
this method sets the key for an element
returns the key of the value
sets the id of the element
reads the value of the property and returns it as an object
set the value of this property
returns the outer type of the class
delete this element and all its children
sets the keys
sets the list of ids
sets the keys for a part
compares two elements
this method is called when an event is pushed
the unpacking of an event is executed
this method is called when the event is removed from the queue
called when the simulation starts
called when the simulation has finished
called when an element is created
this method is used to increase the time spent in the simulation
starts reading archive
called on the event dispatching thread not on the worker thread
starts writing an archive
sets the values of this property
called on the event dispatching thread not on the worker thread after
called when an exception is thrown by a remote call
called when a message is received
returns the time when the game started
returns the next time
called when the timer finishes
sets the speed of the dynamic object in s
returns the current speed of this entity
test method for
create a table with speed data data
calculate the speed we move with during the given
create an airplane
helper method to test the conversion of the linear moves
test linear conversion and write to xml
test that we can locate
update this moving
test of convert method of class speed vec
test the norm method
test of cross method of class x
test speed components
test multiplication of arc s
additive arc of a band
test comparison of two arcs
test the conversion of arc base length to arc length
this is a test that the arc function is working properly
this test is for testing if the multiplication of speed is correct
test convert method
test adding some speeds
test the compare method
test conversion of a string to speed
tests that the speed filter works
test the norm method
this is a test that tests if the multiplication works
test adding a whole space
tests the compare method
test the conversion
test all components of a space
test sorting of space
this test case checks if the multiplication of two times
test adding times
compare two times
check the conversion of time t1 to t2
test simple conversion
test the conversion from string to date
test tree with third node
tests the icd
test omt tree
starts the gass server
init job out listeners
this method is used to notify the implementer when the status of a
called when the output changes
called when the output is closed
submits a job to the remote machine
delete permanently the adv table
empty this method is called when the job is scheduled
schedule the specified job s for scheduling on this scheduler
called to indicate that a job resource is ready
this method is called when the job is recovery
notifies this scheduler that the resources have been added to the
schedule the specified resources for execution
get the queue configuration parameters for this queue
returns the queued job
sets the queued job
sets the decision type value for this queue type
schedule the execution of an asynchronous task
sets the advanced decision value for this scheduler
sets the default decision value for this scheduler
start a new request
creates a job created by the remote system
set the value of an element in the tree
set the value of an attribute
called to indicate that a job resource is ready
this method gets called when we receive the upload file
perform any job recovery required before running the job
returns an iterator over the names of the attributes of the current element
modify a pending modify request
serialize this object as xml string
is the target server jboss
deletes all temporary files when the test is finished
create a temporary file
sets the rotation state
redraws the canvas
w pallete setting for pixels
flips current pallete color
creates a new image with the current pixels
returns the game action associated with the given key code of the
returns the current image as an image
starts playing the movie in loop
starts playing the movie
stops the playing
sets the alignment for this layout
returns the preferred dimensions for this layout given the components
returns the minimum dimensions needed to layout the components
returns the string representation of this code vertical flow layout code
gets the condition
returns the duration of the transition
returns the timer associated with this transition
returns true if the event is a transition to an instant
setup the bst and the basic states
returns true if the transition is a system transition
checks if the event is a system transition
returns true if the event is a time out event
get the timer that is used for entry to this scheduler
sets the timer timer for this entry
returns true if this activity has leaving transitions
sets new container state for this state
returns true if this state is the superstate of s
if the monitor worked on a code generation event code
returns true if this state is a substate of s
sets the save flag to true
returns a vector of all transitions from this state to another
returns a string representation of all the transitions in the out links
checks if one or more pre precise states of both sets are
finds the first out link that is not a timing transition
finds the sub states and their substates
converts a set of strings to a comma separated string
returns the concept instance
returns true if the state is a choice state
returns the entity this reference refers to
returns a list of all the events that are currently in the state graph
sets the concept instance
sets the entity reference
retrieves the top most substate of this state
this method compares the conditions of each state against another
checks whether the conjunction of the bitset is equal to the
this method generates the state char for the current
this method checks if the given condition includes the given state
get the current entity
returns true if this vob scene have the superstate of the state
append the conditions of a state to a string buffer
returns a sorted set of all sub states
returns true if this is a time out substate of the given state
returns true if this state is the same as the given state
recieve an event and exclude any listeners listening to this state
checks if the condition is satisfied in the given state
returns a sorted set of all sub states that neither achieved nor times
returns true if this state includes time out
returns a set of all the super states including state itself
sets the title of the use case description
checks whether this extend relation condition is in the context of another
returns true if this aspect relation condition is in an aspect relation condition
returns the description of the use case
sets the description of the use case
checks the post conditions of use case
remove all from the set of super states
adds a relation to the model block
adds a new extend relation to the block
adds an aspect relation to the node
notifies all listeners that the use case has changed
returns a vector of all the relations of the use case
checks if the user selected a use case name change
returns a vector of include relations
searches for an include relation to the given code name code
returns a vector of all the usecases in the description
adds a basic state to the sub state list
create the include relation
returns the condition that is validated if any
extend this block to include the same data as another
sets the validated condition
adds a basic state to the super state
adds a transition to this state
returns the set of sub states
returns the timer entry state for the given source state
generate a combined ucnode copy of the use case
returns the root node of the document
add a node to the document
create a new cfnode with the given label
creates a new ucnode for this index
checks if the given set contains any contradicts
this is the method that does the actual validation of the pointcut
sets up all the pointcuts in the use case block
check if the guard conflict of the given node is covered by a
checks all conjunctions conditions of this conjunction
validate that this set of joinpoint is the same
verifies if the conditions of a rule verifies at least one
this method checks that the value of this actor is an actor
returns the condition that is validated
creates a new part of the first use case description block
create a repeat step with the given name
returns the delay to be used after the motion
inserts an extension of the use case description block
adds a vector of procedure blocks to the procedure block
inserts a child block after the current block
set the usecase
returns the use case
returns true if there is at least one time out state
sets the procedure
complete the set of links
returns the stored procedure
returns an iterator over all the extensions in this code use case code
creates a new use case step with this as its next block
insert a new block after the given line
returns a pre label of this block
remove a child block from a block
returns an iterator over all any extensions
creates the first block of the use case description
inserts an extension point at the given position in the extension points array
inserts an extension to the
this method checks the given domain and all its children and
checks that the value of this object is correct
inserts a block after this one in the use case description block
gets the text content
inserts the given block after the use case description block
performs the insert block after the given block
returns the precondition of the use case
returns the postcondition of this use case
creates a new call to this procedure
insert a new use case description block after the current block
returns the invariant for this class
check if title is changed
performs the following command
pre label of the axis
returns number of lines in the puzzle
returns the unit that is identified by the given line number
returns the usecase description
returns a string representation of the job
todo document me
returns the number of descriptions in the usecase
returns the last child block of this block
returns the additional attributes
sets the title of the editor if not available
returns an iterator over the set of traits that are considered primary
sets the if not set condition to add to trait
set the title of this use case viewer
creates a new code part step code with the given name
returns the action text
updates the usecase image
checks the given domain and the domain for validity
checks the value of this editor with the given domain
returns the condition that is validated
set the validated condition
creates a repeat step next
returns a vector of all usecases in the receiver
pre label pre label
returns true if the use case u case is in the use list
adds a new extend relation to the end of the extend use case
creates a new use case description block immediately before this node
set this extension to be part of another
inserts a child in the block after the given block
add a use case to the list of enabled usecases
this adds a part to this procedure definition
get the extension point
returns an iterator over all the extensions in this procedure
returns the delay for the aftdelay frame
get the befdelay
get the last trait in this line
adds content of another container to this container
generates the configuration information for the node
getter for the ucoperation
returns the delay used before the plotter
returns the delay after which the children will be drawn
returns the remain
performs the new extension point after the specified line number
sets the condition that this condition is to be executed
setter for property operation
generate a configuration node
set the delay before the children of this node
true if indent can be used
sets the delay after which the children will be displayed in the
this method was created in visual age
returns true if any of the file extension is supported
creates and returns a new action that will replace this one
returns the use case description
inserts a child block after the current block
returns the precondition of the operation
set the title if it is not set
adds a new step with the specified name
checks the set of traits for their domain and uses the given
returns the postcondition of this query
generates a combined ucnode for the given node
adds this extension point to the vector that reaps time entries
adds a range to the step
checks whether all pre conditions of this precondition that are satisfied
checks if is use case
determine if an actor is defined
called when the use case name field changes
returns true if this option is followed by a use case
returns the flow node that resumes the use case
adds a normal use case
adds a use case
returns the text of the label
returns a vector of all the use cases including the normal use cases
returns the set of states that have been satisfying the given condition
check if the conditions of a rule satisfy any of the given set
returns the top states satisfying the given conditions
returns the set of resume states
returns a string representation of the set of conditions in
creates a state for the given use case case
returns the set of outgoing transitions
adds a new region to the use case
adds a normal use case to the chart
returns the set of resume states
returns the set of transitions from the given state graph event
sets up the aspect relation for the aspect relation
check that all actors that are already defined in the use case are
this method composes all charts in the tree
description of the method
returns the version
returns the use case model
returns the state graph that is used for generating the output
returns the number of occurences of this entry
creates an orthogonal state
gets the scenario model
checks whether the graph includes cycles
sets the simulation history
sets the domain to use for calculations
sets the use case model
sets the state graph that will be used for this calculation
sets the scenario model
sets the state of the scenario model to saved
create a string representation of a node that is an inclusion loop
returns true if this block is the last block in the root block
reset the state graph of the state graph
output the html report to the given writer
sets the editor
description of the method
sets the project model for this page
returns the label of the current dot
get the set of links to the node
returns a set of all the loop links
get the set of links to the node
creates a new link between this node and another node
create a new link to the given destination node and add it to
update the in links list
removes the specified link from the graph
remove a link from the in links list
set the validated state to be un saved
number of lines in the file
ensures that a line number is within the limits
abbreviated string representation of value
returns the destination of the message
returns true if the last block is the last block tobe removed
get the link value
sets the destination of the edge
throws an illegal argument exception since the line number is
set the link value
sets the origin of the graph
method that throws an illegal argument exception if the use case name is
returns the selected use case block
deletes a block
return all children of this point that have no numbered
loads the aspects of a given element into the given use case
builds the extension point element
builds the any extension element
builds the procedure element part of the procedure
add a repeat block to the use case description
add the use case description to the usecase description
adds an any extension to a use case description
adds the extension point to the use case description
build the element for the include relation
returns true if the model is valid
build the redirect element
checks if the code indentation code can be indented
can the argument be decreased
transforms redirect to all the code redirect code s
adds a new
adds a new negative scenario to the list of blocks
export to html export
adds the step elements
the method code next scenario element code
checks if this node is empty
returns the operation with the given name
looks the next scenario element
convert this node to an aggregation
indent this block as a child block
realize a block with same parent
the action of the forward add condition
do the backward withdraw condition
adds a new non entity condition
this method performs the change to concept function
this changes the policy to the system
change a block to aggregation
this method returns the vector of concepts
get all concepts in the tree
initializes the entity
this method creates a concept for the domain
returns a vector of all entities in the ontology
get an iterator over all operations in this context
add an operation instance
returns all concepts of this ontology including concepts of this ontology
returns a vector containing all active entities
add an operation to a step element
returns a set of all objects of a given set
returns an operation that can be applied to a domain
returns the current state of the show all entities menu item
equivalent to get succ
this method finds the possible value in the sup concepts list
show all possible values of the property values of all the possible values
gets the unit of this duration
can this attribute have discrete values
checks if the given string is a correct unit
returns a string showing all active entities
returns the full name of this user
returns an iterator over all the nodes in the tree
finds the sub entity of the active entity that has the given vent
compares this entity with another
gets the value of the value property
sets the value of the value property
add a node to the path
returns the concept with the given name
remove article from vector
returns the active entity with the given name
adds listeners to the buttons and the aggr fields
sets the location for a hovering shell
creates the editor for the specified model description
checks if the given value is a possible value for the slot
returns the current use case description
sets the area of the editor
this returns the domain of the current editor
shows the previous line
shows the current line
returns the complement of the given entity and value
returns the number of characters in the specified vector
shows the next line
creates an editor for the given model description
goes forward the current line in the input
inserts an extension point into the current line
goes to the previous line
decreases the current line counter by one
inserts the newline character at the current location
insert a blank new line
returns true if the given entity can have discrete values
returns a concept instance in this domain
this method is called when the shell is resized
returns the concept instance in the domain
sets up the view for the given project model
equivalent to get longest object name except returns all
starts a simulation for a single simulation
selects the specified editor
append the reac code to the current string
resets the reactions text
updates the line with a new line number
inserts a new line at the end of the given line number
resets the previous text
indents the given line
returns the current indent level
returns the list of integrity errors
add a new line to the end of this section
insert block after the line
this method simulates a scenario
adds the child items to the vector
gets the original events of collection attribute of the
inserts an extension point after the given line number
inserts an extension into the use case
used to notify that a block has been deleted
returns the index of the given combo item
create the editor for the use case model
returns the index of the given item in the given list
returns the code actor operations code that are available from the
creates the entities
shows a new line
shows a new line highlight
because the domain model does not have a richer listener model
because the domain model does not have a richer listener model
add an operation after a given entity
returns the abstract swt application instance
method for getting the display
this method should return the text for the caller
implements the text layout interface
returns the text area
copy the current line to the clipboard
sets the current file
set the text
paste current line into line
returns a vector of all actors
create a non entity condition
clears the text in the text field
moves scenario from history to editor
overrides method from superclass
displays the ok text box
returns the current line incrementer
empty the commands
build a compound graph
returns the current line
getter for the use case model editor area
setter for property model
getter for the use case model
generate all states for the given project model
generate the state machine of normal use case
returns the model that was edited
creates an editor for the given domain
inserts block after the line number
adds a child block to another block
write the given text to the folder
start a new line
displays the error mode
shows a new line
shows a new line highlight
returns the incrementer
this method returns an integer that indicates the extension of the
create a connection from an edge
returns the tool tip text at the specified position
opens the file dialog for the given file
returns the compound directed graph for the given statechar
returns a negative scenario
sets the canvas this fig will draw its shapes
returns the figure canvas
returns the indent of a child
return a code domain code with the same prefix as the one passed
builds and returns the validation domain menu
creates and returns the validate use case menu item
build the view effect state chart menu item
build the view effect detail
builds the correct menu bar
builds and returns the set initial state
creates a new simulation menu item
create and build the view simulation history menu item
builds the correct menu item
reset the item list
reset the flow elements
reset the flow elements
resets the values of the use case elements elements of the flow
resets the elements of the menu item
sets the current project model
returns the current project model
method that gets the state of the current project
starts a simulation with the simulator and the current project
simulates normal use case
this method shows a dialog that displays the simulation history
auto fill one column to a random value in the matrix
print out the matrix in to the console
clear the matrix
returns the number of rows in the table
returns the value of the mcolumns property
setter for property mcolumns
clears the drawing area
adds an element to the queue
dequeues the next element from the queue without blocking
create server socket and the client that will be sent to the remote
sends a message to the server
closes the socket
read the input stream and write the contents to stdout
converts a byte array into an object
publishes the given object under the given key
this is the main method that runs the test
evaluates an operand
creates the lookups map for this agent
encodes a rational number
initializes the node with the given bucket id and adds it to the
adds a key with data that was compressed
stores a byte array value in the configuration
adds a key with string value using the default encoding
stores the int value for the given key
stores a long value
adds a key to the properties
returns the value for a key with the given encoding
returns the value for a key as an int
returns true if the bucket can be split
returns the length of the common prefix between this and the other kuid
returns the value for a key as a long
purge database from the perspective that are currently in the perspective
a value that isnt empty
reads a string from the input stream
writes the given socket address to the output stream
called every tick
called when the finish button is pressed
creates a new internal frame and adds it to the desktop
hook for subclasses
adds an action to this toolbar
show a progress bar in the status bar
initializes the menu bar
hides the status bar
sets up the gui
generates a new country tree and populates it with the required fields
creates the button panel
add a text field to the form
returns the concrete object of the given class
register a service
unregister a service
clears the type and the concrete type
this method adds data listeners to the concrete instance
adds a listener to the collection of listeners who will be notified when
removes the registered data listener
define a package
removes a listener for structure data events
set the property lazy status
returns the value of the base property
register the child
convert the parsed bean to a status change listener
removes all listeners from this bean
updates the status and fires a property change event
returns the current status property
fire change to all registered listeners
remove the specified child status from the child list
is property method name
checks that all objects are filled
generates the instruction to adapt the acc static field if the acc
inform the structure changed listeners
check that the given field contains a given error
checks the given field if its not 1 and throws an exception
checks that the specified field has reported errors
extracts property name from worker entry
checks the specified field for validity
throws an code validation result code if the specified field is not
sets the status of the bean
assert that the given status is the same as expected
set the current status of the bean structure
checks if the profile properties are correct
inform the structure about a change
asserts that the given property has one of the predefined read methods
allows instances to be deserialized in pre 1
shows the popup menu for the selected table row
adds a column
adds a column
adds a column to the table
adds a combo box column
sets the model to use
fire a status change event
set reference panel
sets the converter
returns the null value of the property
returns the renderer to render each cell or null if the default
sets the source null value
set the renderer for the table
unsets the source value
returns the editor
returns the source unreadable value
sets the table cell editor
set the model
sets the source unreadable value
returns the value that will be returned by
sets the value to be returned by
removes the model from all unmanaged bindings
sets the validator
returns the sub binding of this binding
sets the sub binding of this binding
adds a new selection binding
adds an action to the selection
removes an action from this selection provider
get the status of this bean
disposes the action
removes a selection binding
adds a column
sets the model
add a property to the listener
validate the given code el code
changes the model of the register list
adds a column
sets the default action for this action group
the model is removed from the list
bind the unmanaged bindings in the group of unmanaged bindings
refreshes the list
returns the popup manager for this local component
adds a column
removes all the elements in the given collection from this list
adds an action to the given selection
remove any bindings that were created with the given
removes an action from this selection
removes all the elements in the given collection from this list
removes all listeners and the list
inserts the specified element at the specified position in this list
returns the sub type of this type
sets the sub type of the array
sets the status of this bean
returns the settings
validate all properties of the model
returns true if the given selection should be shown in the selection list
sets the settings
get the converter that converts the java array into a list
adds all the elements of the specified collection to this
adds a column of the status table to the model
returns the exception handler to be used
checks if the flag for the given class is a class class
setter for property list converter
execution of the action
this method is called when the user selects a file
validates the content of the business element
returns the path of the menu
called when the user presses the finish button
shows the popup
removes a column binding
removes the given local action from this composite action
compares two entries
adds a sub menu to the end of the menu
compare the actions of this menu entry with the supplied action entry
groups together with the default order
sets the list to be displayed
validates a property of the model
adds a sub menu to the end of this path
returns the status of the cell at the given position
clears the list
returns the last group
adds a menu group to the path
removes the value at the specified index
resets the path
returns the last group order
returns a menu path object containing the menu path of this menu
called when the enabled disabled state of the list changes
adds the next segment to the menu
returns the sub menu
removes the first occurrence of the specified element in this list
returns the sub menu order
returns the first entry group of this menu
validate a property
adds a jmenu item to the given menu
replaces the element at the specified position in this list with the
returns true if there are entries
returns the group order
returns an accessor for the specified holder
adds a new mapping for an accessor to the specified entity
add all properties of the given class to the given properties set
adds a new accessor mapping
returns the index of the element in the ordered list
get the menu at the specified index
adds a new property mapping
gets the resolver attribute of the property descriptor object
sets the tables readonly flag
add a new property value mapping
returns the menu that appears at the top of the given path
creates a binding info object for the given source and destination path
returns true if the bean was valid
sets the resolver to use for this registry
add a mapping between a key and a type e
adds an error to the list of errors
sets the comparator used to sort the list
finds the expression using the specified key and type
returns the accessor to the given key
prepares the stack to contain the given number of entries
returns a string representation of the value associated with the given key
returns a number from the bean
add a business validator to the collection of business validators
sets the model
creates a new validator instance
returns the value for the given key from the given fallback
adds a deep validation to this property
returns the value for the given key from the given fallback
adds a validator to the list of validators
returns the value for the given key from the given fallback object
registers a simple property
inspects the fields declared in this class
returns the long representation of the value associated with the key
returns the value for the given key from the given fallback
returns the path to the element that would be added to the
returns the double value for the specified key and the specified fallback
inspects the property methods for the current class
returns the model of this mapping
returns the currently selected row
returns a char representation of the given bean
validate array against collection element
adds a new entry to the map
validate the list
appends all the validations for a parent to the
validate the map
gets the value of a property from a bean
copies the configuration of the external configuration into this configuration
appends the given validators to the current list
copies the annotation and its descendants to the given configuration
this will bind the jtable bindings in the given list
sets the model to use
appends all the interfaces
sets the concerned class of the exception
configure jtable bindings in the table
get the status of the model
creates a new instance of this bean mapper
creates a new bean mapper configuration
configures the given column with the given info
adds inherited mappings for the current type
get the class that should be mapped to the base type
removes the model from the binding
sets the current mapper
convert an object to a collection
converts the passed collection to our destination
converts the given object to our destination entry by calling the
creates a new instance of the given class
inspects the given annotated element
adds a mapping between the reactant and product side to this
get the bean mapper
inspect the property methods for the current class
adds mapping properties from the given bean to the corresponding mapping properties
adds mappings for our bean mapper to the mapping list
adds mapping properties from the given bean to the given base
create a validator for the given annotation
returns an accessor for the given type
adds a node to the node list
create binding for a table
processes mapping of
looks up an entry in this directory
add jars in the library path to the classpath
method create validator
searches for an entry with the given name
create a binding
determine if we should ignore the mapping element
returns the package fragment for this project
returns the property name for the first letter of the key
adds a deep validation to the validator
sets up the compilation unit
initializes the java source code
add simple mapping to element
parse the properties file
creates a new entry for a property
returns a constant name for the given property
creates all missing constants
adds a new business validator
add the mapping from the source type to the target type
inspects the mapping validation string for the specified property
deletes the field that was previously visited
returns the name of the class corresponding to the property name
initializes the compilation unit
creates the get method
add external mapping
creates a new entry for the method invocation
removes the specified business validator
adds a property for a method declaration
adds the deep mapping
builds the property with the given name and setter
creates a new text element
adds a new mapping for the given source property
returns a constant name for the given property
adds the deep mapping
sets the method of this method declaration to the given one
gets the property validator
adds the deep path mapping
add a path mapping
creates an infix expression from left and right
creates a field access
creates a new return statement for the given expression
adds the deep path mapping
adds the inherited mapping validators for the specified property
sets the property validator
creates a field declaration
adds the collection mapping
adds the collection mapping
clean up after parsing
creates a variable declaration with the given name and type
returns the actual type of the given property
creates a string literal from a string value
add the mapping of the collection code property code for the given
adds the mapping for the given collection type
returns the simple name of the given type or null if it is
add path mapping for property annotated element
write the model to disk
add a path mapping for the given property
returns true if the property is lazy
returns true if the given property descriptor is lazy
adds a new path mapping
adds a default mapping to the mapper configuration
adds a default mapping for the given property
ignore the given mapping
clean up any open resources
at startup create and show the main frame of the application
sets the root
returns the current node
take the right node
take the left node
set the indent
sets the input file
adds a file set
set the encoding value
return the file in the given path if possible or create it
set the mapper to use
returns the value of a test attribute
asserts that two bytes are equal
asserts that two bytes are equal
is this servlet instance set
gets the test attribute
returns the servlet context
return a set containing all resource paths of resources that start with
returns a url to the resource that is mapped to the specified
adds a new resource as stream to the classpath
get the resource as an input stream
a deprecated method for get servlet
return an enumeration of servlets
returns an enumeration of servlet names for this request
this method is deprecated and should not be used
strong does nothing strong makes api happy
returns a string containing the real path for a given virtual path
returns information about this server
returns the name of this servlet context
returns the context path
sets the testing status of this servlet
set an attribute to a test for
sets the query string
include the response in the response
forwards the response to the invoked dispatcher
li rss 1
set the content type
the character encoding
get the writer output
return the redirect url
returns the list of dispatchers that this handler is invoked
returns the last invoked dispatcher
this is a callback that will allow us
disposes this header component
set the text editable property
register an image with the registry
performs special processing when this pages restore defaults button has
creates an editor for the file type
returns a string representation of the content viewer
the run method of the thread
save this memento to a writer
saves the dictionary to a string
clear the tree
returns the id of the protocol that this packet represents
connects to the given socket
disconnects the monitor from the thread
start the server
returns true if the server is running
return the default type of the generated data
disconnect and stop the server
closes the connection
returns the protocol adapter with the given id
get the name of this server
return the content filter associated with the given id
returns the id of this element
sets the name of this node
get the order of this element
create an instance of the monitor
set a property
returns the property associated with the given key
adds the given add request to the request buffer
starts the thread that monitor the monitor for the given port
adds an add response byte array to the response
returns true if the message has been sent
stops the thread that will monitor the given monitor
sets the response
add a request to the list of requests
get the monitor for this thread
fire the monitor event to all the registered listeners
add a response to the response
notifies the registered listener that the content of this
add a resend request
return the response for this request
set the label for this request
fill the internal buffer
return the index of the first crlf if any
write a byte array to the connection
attempts to set the label of the connection
set the message to be sent
creates default properties for source files
appends the xml representation of this layout to the given string
writes the src page id to the file
writes the output to the file
this method is not supported
sets the city
sets the state of the task
this method does currently nothing
gets the nonsense attribute of the player object
initialise the table f bench with a table element
inits a row for a table node
get a list of the keys of the configuration
paints the component
convert input stream to image stream
gets the preferred size attribute of the sizable label object
flushes the cache
get a list of names
sets the message to be displayed in the status bar
configures the user interface look and feel
builds the list of available databases
builds the names of allowed grid beans
creates a new gridbean with id as parameter id
merges the contents of a second keystore with the current one
create the gui manager
destroys the softphone handlers and media manager
the handle method for registering a user
invoked when the call is ended
start a call
called when a call has arrived
load the configuration for this panel
set the listener for user actions
add a new interlocutor
get xml representation of call history
adds a new call
creates the call panel
remove a previously added interlocutor
sets the username
sets the status
lets the user answer a question
sets the current call
hold a file or a block
enable disable the register button
send a dtmf tone to the current current paper
dial a number
hangup the selected call
sets the status code and reason for the global status
shuts down the soft phone
sets the status code and the reason for the call
method called when a call has arrived
adds spark tab to the main tab
sets the auto answer option
closes the cam window
returns a list of the selected checkbox values
performs a search and displays the results
getter for property m label1
getter for property m label2
this method initializes m indicen
getter for property m label3
this method initializes m chuter
creates the jradio button that allows the user to change their name
this method initializes m cescala
getter for property m label4
this method initializes m j text area
this method initializes j text field
invoked when an action occurs
action listener implementation for indicen
action listener implementation for chuter
action listener implementation for x igual yaction
this is called by the gual ystate handler
action listener implementation for x gual xant
change listener implementation for xant
action listener implementation for c escala
action listener implementation for resultado
action listener implementation for component 38
change listener implementation for component mod
action listener implementation for coeficienten
action listener implementation for coordenadax
sets the progress
removes stale entries in the cache
runs the application in modal mode
append text to buffer
return the current log buffer as a string
returns the default value for the property
returns the value as a string
set the value of this instance
convenient method to retrieve a specific type stored as string
sets the integer
convenient method to retrieve a specific type stored as string
convenient method to retrieve a specific type stored as string
adds a queue listener for the given class
sets the value of the boolean
remove an item from the queue and send it to the listener
wait until the queue is empty
sets the central region
adds a textfield with an input field and an action listener
overrides set visible to center the window
compares this taxon proxy to another
centers this window on the parent
sets the content of the result table
gets the controller
clears the view
returns the parent of the proxy
this method composes the creation of the elements of the list
returns the controller
called when the selection of a taxon has been changed
sets the text to the text field of this gui
sets the result list
clears the text in the view
called when the taxon is clicked in
called when the selection of a taxon is received
sets the text to be transient and notifies the ui
get controller of the tree
clears the selection
starts the search with the given expression
sets the enabled attribute of the jtool bar object
sets the text that will be displayed after a change to the
returns the lineage of this node
returns the container
called when a taxon is added to the tree
sets the text for the delayed text
sets the content
sets the content to display
returns the taxon at the given row index
this method makes the table columns preferred size and maximum size
clears the selection in the tree
returns true if the given option was set
set the width of the columns in the table
get the scalar
returns true if this node is complete
returns the selected taxonomy plugin
returns true if the option has been set
sets the taxon for this item
returns the value of the given option
sets the enabled attribute of the jtree component object
checks if the token is an option
returns the value for the cell at code column index code and
method that is called when the user presses the ok or cancel button
the code tree selection listener code implementation of this
gets the controller
invoked when an action occurs
called whenever an item in the tree has been expanded
this method is called when the user selects the connect button
expand the given node and all its children
sets the enabled state of the components
disconnects the selected mail
compares the taxons based on the names of the taxons
invoked when an action occurs
shows a warning dialog with the given title and message
creates and lays out the components
disconnects from the selected plugin and exits the program
sets the current page
shows an informative dialog
gets the controller
shows a warning dialog with the given title and message
returns the controller
enable or disable the jcombo box
clears all views and the associated data
sets the enabled flag
creates and shows the properties of the taxon proxy
removes all components from the container
shows an informative dialog
invoked when an action occurs
returns the dimension of the screen scaled to the given screen factor
a new method that interrupts the worker thread
creates the components for the search graphycal elements
a new method that starts the worker thread
this method initializes sql
this method is used to synchronize the waiting condition between the
this method checks if a player is immune
this method removes a player from the immunity list
builds a welfare mek
gets the name of this planet in a user friendly format
modifies the current pilot
adds a pilot to the unit
adds a pilot to the correct weightclass
returns a string representation of the object
add the fact that a player has not yet a contracts
clears the queue
a method which deletes contracts making players employable as a result of a
the return the outstanding contracts for a given player
this method returns a string containing the welfare of a player
adds a listing to the list of books
place a bid in the market
returns the bid for a player
sets the amount of the bid
gets the minimum bid
compares this market bid with the specified object for order
gets the id of the listed unit
return the name of the listed model
returns the name of the listed hidden model
removes the auction from the list of the auctions
return the name of the listed file
get the number of ticks on the sale
decreases the number of sales
method to set whether the player is death
removes all the listings from the system
this method removes all the listings of auction from the market
create a new random object from a string
find a listing for a given unit
find a market listing by the auction id
checks if a player has any active listings
get price for unit
returns the amount of the player who made the given auction
get the influence for a unit of a typeid
returns a string listing all bids listed in the auctions
get the weightclass of the shouse item
get the name of the model
return a string showing the marketing information
mark this object as updated
returns the next available id
send complete market status to a player
sets the owner name
adds a player exclude
checks whether a player is excluded from being used
removes an exclude from the list of players
sets the status of this maintainance level to unmaintained
mark the state of this unit as a move
removes the returns from the given motd string
returns the description of this photo
tally total tonnage
checks if the attacker costs for the given unit
sets the status of the job
get the splanet object for this world
returns the id of this object
clears all the disconnection tracks for a player
returns the name of the operation
add a short operation to the active shorts list
returns a string describing what this is idle in
getter of the property tt attacking house tt
returns the defending house
returns information about the current in progress state
returns the operation with the given name
returns the finished info
compares this operation to another
return a value for this campaign data
checks if the defender costs to a failure is set
adds a modifying operation
returns the type indicator of this node
returns the mods indicator
validates an short attack
load a modified operation
validates the short defense against the sapinstance user
checks if player has returned a player
returns the mod value
gets the value of this mod
returns a string containing the names of the failed tests
terminates an operation
returns the operation manager
specified by id
checks whether a long p is on the planet s planet
check if a house has a long operation on the planet
return a string containing the failures that occurred in the decode
check if the specified house has a specific planet on the planet
a shouse step has a short on a planet
get a specific chicken thread for a player
compares this unit to another
remove the given player from all possible defender lists
this returns the id of the player that is attacking p
reset variables that are needed
return the id of the player p
this returns the short op for a player
this checks if a certain player has a chicken thread
returns the next available short id
finds free operations id
returns the short validator
whether this operation is a mulonly operation
if the player is loading a campaign this will save the campaign
adds a player to the progress update list
this method returns the rounded rating for the current comment
accessor method for the maximum number of attackers
return the maximum number of defenders
get the minimum number of attackers
add a new unit to the colony
getter for property min defedners
returns a mwchat client for a given target
validates the user id
returns a unit with a given id
get the weight and type of a house unit
kills a user and all its members
removes received pongs from the list of active mw chat clients
returns the short id
this sends status changes to all players
returns a text message after parametric replacement of the specified
sets the short id
gets a player by name
sent when a message is received
returns the long id
construct and queue a message that will be sent back to the client
find the unit with the given id
construct and queue a message that will be sent back to the client
check if the user may sell on the bmno
check if the user may buy from the bm
removes possible defender
return the in progress information for the current process
get the influence for the given unit
checks if this unit has an unmaintained unit
sets the fighting status of the player
returns a string with all information about the finished
sets the fighting no opp in the current campaign
this method checks if a player is in the game
add a new unit
resets the weighted army number to 1
send online players to all fighting players
notifies the gui of all players
decrement shows to clear
a method which sets a money in a player
compare this short operation to another object
lookup a house by name
broadcasts a message to all the mw clients in this room
sends a message to a specific user
parts off a user
this method is used to authenticate the guest user
checks if the user id is in the list
get the string for a hspp estimate
returns the shouse of the configuration
access the current house fighting for this city
sets the current house
method that returns the status of a specific duty
calculate number of votes allowed for xp
get the bv that will be hangar
returns the next free id
a method which returns the number of a players current team in the
obtains the bv of the attackers
adds an influence to the ith vertex
returns all the campaign data
reads the campaign data for the specified cache path
finds out if access levels are available
returns the number of users in this group
adds a new unit to the collection
load the image from a directory
adds a unit to the list of units
returns the image with the given name
checks if the given parameter is yes or on
adds a pilot to the ppq campaign
removes a pilot from the campaign
set the current bm data for this auction
remove a unit from the bmunit list
add a unit to this auction
change the bm unit for this auction
get the integer value of a parameter
saves the current settings to config file
set the unit to an auto unit
sets the data of the army
sets the hangar data
updates the data for the unit being worked
create unit entity from mmclient
removes a army from the players inventory
removes a unit from the hangar
the method that is called when the user clicks the button
shows the dialog
return the map panel
save players in the houses
returns the next available army id
sets the gun emplacements for the given string
forces a save of a player
adjusts the color to fit the given color
activate a planet
added this guy to make sure an image is loaded ie no broken
activate planet on the world
handle the key pressed event from the text field
sets the list of admin excludes to use
sets the player excludes
setter for code selected planet code
called when the save settings button is pressed
the ticking is performed and the store is not saved here
saves the current map selection to the given planet
returns the table model for battles
set the name of the faction
clears all data from the status holder
adds a new faction unit to the hsmek
change all components according to data
remove factory from the factory list for the weight and type
this will rearrange the table if it was not actually selected
button recall bid
button recall unit is selected
auto generated event handler method
sets the first tab as selected
returns influence of this edge
set the influence
selects the first tab
called whenever the value of the selection changes
releases the lost soul for the player
get the entry input stream
returns true if a unit is locked false otherwise
a method that heals all pilots
displays the given entity in the panel
changes the base roll
updates fields for the specified mech
returns a string with the status of mercenary
the user has selected an item in the army list
this method is called when the user clicks on the ok button
decode the input string
compares this object with the specified object for order
locks a given army
is over any unit limits for any unit
a method which returns true if the player has a hangar penalty
builds a string that describes the penalty for the current purchase
handles action events generated by the user
outputs a bin to the specified bin writer
takes a stream from the bins
return the total environmental probability of all environments
generates a binary file for this bin
bin info store data in a bin reader
returns a string describing this type
checks if the player has the given pilot
adds a pilot skill to this creature
removes a pilot skill from the list
returns a description of the skill set
the name of the constellation
updates the influences
returns a string representation of the object
adds the flag or not for the attacker
clears the flag with the given name and makes it empty
compares this object with the specified object for order
sets the name of the flag
returns the key of the given flag name
sets the value of a flag
returns the current status of a flag
load the flags from the specified string
writes the fields of this instance to the given output stream
description of the method
empty the flags list
set a flag on a campaign
clears the flag with the given name
returns a string representation of the flags
saves the data in the file
decodes fields from the input stream
load the properties from disk
sets the unit price mod for a house
sets units flu mod for a house
returns the unit component mod for a house
sets the unit component mod for a house
returns the default value of the option
called when the data block starts
called when the data block ends
reads a double value
reads a boolean value
reads a line of html file and returns the content
returns the name of the model
reads a line of text from the file
creates a new bin writer
returns the influence of the given faction id
sets influence of the specified house to the specified list of house
returns the number of influences in this set
sets the influences
returns whether the influence zone belongs to a specified hot zone
number of continents
adds a new continent to this physical object
writes the xml representation of the house to the specified print writer
gets the continent which is biggest in the environment
returns an influences difference between this influence and the other
return the total probability of all environments
returns a random environment based on the propabilities
add an influence to the influences map
prints this bin out to the specified output stream
takes a bin in a bin reader
writes the influences of this faction to the given writer
adds a unit at a specified position
adds a unit to the list of units
takes a bin read from the file and stores it in the influence
returns the number of units of a given type
returns the total number of support units in this container
returns a planet by its id
get a planet by its name
returns the number of networks
get a planet with the same name as the given one
adds a planet to the map
remove a planet from the storage
clears all planets from the storage
sets this entry invisible
get an unused planet id
sets the team number of this ownable
sets whether the elements are automatically reordered when it is true
returns whether the list should automatically be reordered when it is true
sets the status flag for the given name
sets the status of the given flag
returns the status of the given flag
get a specific house
loads the flags into the flags object
returns the flags in a string representation
add a house to the faction db
remove a house
method get house by name
removes all houses from this entity
returns an unused id for a house
return an unused id for terrain
write this bin houses to a binary writer
writes the bin houses in a binary format
decodes a bin from the mutableplanet
encodes a binary list of planets to a bin writer
set the default values for the various properties that can be
decode the input string
changes the status of the task
handle a tick
sets the environment for the world
the game has been changed
deletes the identify faxova ponuka
delete the entity
method for modifying the entity
delete the entity
edit the user action
returns the number of plans defined in the database
reloads the auth bean info
deletes the current user
edit the category
get the cancel edit action
reloads the categories
delete the entity
edits the preference
edit the category
returns the multi edit flag
logout the user
do the login
returns true if the user has role or superadmins
identifies the country
returns true if the current user is a manager role
check if the current user is an admin role
is the user a super admin role
this method converts the category name to the category name
returns the name of a category
identifies the country
this method fixes the numbers in the text
replaces http localhost to a blank form
check if the license exists
checks if the license is ok
check if the applet has role user
the parser adapter is to be used for parsing the document
check if the applet has a check manager role
deletes the search plan
check if the applet has a admin
check if the applet has a super admin
strip all tags from a source
save the entity
flush the current session
saves the ponuka
change the password
convert a type to a lower case string
authentificate user with password
make a dummy user
user user data
get the tmp index for a page dump
returns true if the given character is a splitter for psc
check if the user exists in the data base
returns true if the algorithm should iterate through every n iterations
this method is called upon plug in activation
the action has been activated
find the number of days from this date to the given date
checks whether the mpt class is ready to load
gets the current campaign
get the dependency for a component
create a report for every campaign in the campaign manager
register the service
returns true if a control script is contained within this container
open the connection to the database
removes a previously registered listener
get the name of the control script file
executes a query and returns the result set
executes a sql query
returns a string containing the arguments for the control script
closes the connection to the database
get default instance id
returns index of component mi within specified instance
disconnect from rlogin server
called to dump a var object
adds a log4j text area to the log4j panel
appends the logging event to the log4j panel
starts interactive mode
invoked when an action occurs
invoked when an action occurs
load a test case source
get the currently active text pane
converts a y coordinate into a line index
invoked when an action occurs
called when the run button is pressed
we rotate between not selected selected and dont care
invoked when an action occurs
get the version of the kernel
convenience method for running a native command and waiting for the result
get the build number of the manifest
returns the full build number of this project
convenience method for calling exec with out and instructs the
get the manifest for the specified attribute name
convenience method for calling exec with output parameters
execute a command with a given parameters
convenience method for calling exec with output parameters
kills the process
getter for property extra result details
setter for property extra result details
transfer number of available bytes from the device
shuts down the simulator
sets the object to be used as simulator
schedule a task for execution after a given delay
log a message
close the html file
print a string and then terminate the line
gets the value of dest
returns the data source
dumps the content of this record to stdout
test of get instance method of class components loader
test of register method of class com
test of get component implementation class method of class com
test of get registered components method of class eu
test of get registered verbs method of class com
test of get component name method of class qtaste component engine
print a heading in the file
prints the test link for the given test class
returns true if the location overlaps with the given search location
sets the location of the monitor and creates the new search
handles the text selected event
passing the focus request to the viewers control
creates new form chat client
set the debug flag
this method will set the catalog for the connection
store the connection to the file
load info method
returns the result of a diff call
runs the jsconnection
loads a file into the system properties
store the bible cache
get the database properties
returns an enumeration of all the property names
get the value for the given key
get the value for the key
displays the database properties
sets the temp attribute of the browser object
returns the file location
generates the book url
displays the chapter in the top of the panel
starts the service
connects to the database
connect to the database and load books in abbrev
returns true if the connection to the database is still open
returns a string representation of the object
set the file location for the current ij
initialize the database properties
at startup create and show the main frame of the application
sets a torrent comment
torrent tags are identified by id
write the footer to the file
get the description of this filter
constructor for rjceexception
constructor for rjceexception
creates a new properties exception object
constructor for properties exception
creates a new configuration object
creates a new method tracer
retrieves the value of the specified string property
retrieves the value of the given property from the resource bundle
creates a new instance of view initialisation exception
constructor for view initialisation exception
creates a view from the specified starting object
initialise the container
retrieves a url property from the resource bundle
creates a new instance of view configuration
gets the title of the view frame
returns the starting object null error message
gets the image directory
gets the clazzs instance
get the constructors object
creates a new object structure tree
get the methods object
loads the superclass structure for this class
description of the method
getter for property fields object
returns whether to ignore accessibility modifiers
creates a new object structure tree renderer
creates a new object structure configuration object
returns the starting object null error message
gets the image subdirectory
evaluates the specified namespace
constructor for name
creates and returns a method invocation
returns the value of the method line call
return the class source for the specified class name
insure that the insure has been initialized
returns the full path list
add the specified method to this class
creates a new class manager
add a class to the list of imported classes
returns the plain class for the given name
add a package to be imported into the model
resets the base class path and base loader
reload all the classes
initializes the base loader
returns the set of packages this model uses
reloads the specified package
returns the class with the given name
create a beanshell class path using a native class path
import the class into the lookup table
called when the class loader has changed
constructs a new bean shell class loader
collects all the names in the given vector in order
helper method for
invoke a method
dynamic proxy returns the static interface
helper method for
clear all data
evaluate a string in the given namespace
this method implements evalstatement
returns the text of the token
evaluates a given namespace
re throw the given exception
re throw a node
creates a new interpreter
creates a new interpreter
this method is called when the user clicks the undo button
action handler for the menu item
dispatches the window closing event
invoked when an action occurs
action handler for the text field
handle find replace button clicks
constructor of the copy action
method invoked when an action occurs
method called when the user clicks the save button
shows a warning
action handler for the text field
creates a source
constructor of the class
invoked when an action occurs
implementation of action listener
method called when the user selects the save menu item
print the contents of the sheet
invoked when an action occurs
method that handles events for the text field
action handler for the text field
implementation of action listener
use the global name space implementation
constructor of the cut action
method action performed
constructor for select all action
invoked when an action occurs
method that sets the orientation
evaluate the name space from a reader
evaluate a string statement in the specified namespace
gets the input reader
method that is called when the user clicks on the vertical scrollbar
method called when the user selects the save menu item
creates a new source file filter
creates a new file filter that accepts the given file type
action handler for the menu item
method called when the user clicks the save button
method action performed
handle find replace action
constructor of the back action
method that handles events for the text field
get standard error output stream
assign the value to the name
unassigns the given variable
creates a precompiled object
constructor for the cpp code generator
converts the path to a file using the file name as the
invoked when an action occurs
serialization is only done when serialized
constructor that takes the source object
action listener for checkboxes
action listener for check boxes
constructs a new mismatched char exception
sets up the tool bar
constructs an exception with the specified line number
generate code for the given grammar element
generate code for the given grammar token
generate a line of code in the file without the header
opens the log file open dialog
ref a token from the grammar
constructor which takes a grammar and a string
creates a token buffer that can hold the given token stream
construct a new lookahead
constructor for lookahead
sets up the test environment
invoked when an action occurs
method action performed
refuses a token on an assignment
creates an empty code indexed vector code
creates a new indexed vector
creates a new bit set
create a new bit set with the given bits
create a bit set with the specified number of bits
constructor with the cursor list
invoked when an action occurs
invoked when an action occurs
the implementation of the exit action called
dumps the set set to the standard output
alternative error reporting
creates a new instance of chooser file filter
the description of this filter
constructor for recognition exception
creates a new code recognition exception code with the specified line and
creates an analyzer on the given tool
constructor that takes a file name and a full description
generate a header that is common to all txt files
generate a header that is common to all python files
creates a new java code generator
creates a new code generator
create a new token stream that reads from the specified ioexception
constructor with string
creates a new tool error handler
constructs a new code char stream exception code with the
create a new byte buffer
returns the string error message if the next token is the
constructs a new mismatched token exception with no arguments
creates a new input buffer
generate a header that is common to all txt files
this method is used to extract the name of the astconstructor and
returns the repository for reading and writing files
returns the repository for write operations
returns an editor for writing operations
commits all modifications that have been made
returns the path to the given resource
check out the last issue time
check the state of the task
increase dead ping count
gets the ping count attribute of the status object
reset the dead ping count
sets the last ping time
gets the time when this connection was last ping received
starts all the threads in the pool
set the data object name
gets the action
sets the action
get the book id
set the book
gets the reader
sets the reader
get the time the message was transmitted
sets the time
sets the reader name value for this ws read source params
sets the book title value for this apartement booking
returns the phone number of the reader
sets the phone number of the reader
returns the action string
sets the action string
sets the reader email value for this wsyetki kullanici
returns the time string
sets the time string
sets the insert subject sql
sets sql statement to select all subjects
set the crypto object
sets the update reader password sql
set sru client interface
sql statement to retrieve all readers
sets the sql statement to read an insert from
sets the insert user role sql
sets the desk phone value for this wsyetki kullanici
setter for property readers
sql select reader id filter
sets the book sql
sql select reader by id query
sets the select reader by desk phone sql
sets the sql for the update that will be executed
sets the select book by isbnsql
sql query to delete a reader role
sets the book by id sql
sql string to insert a admin role for reader
checks whether the reader with the given id exists
sets the update book sql
sql select statement used to select db entries
sets the sql string to insert book author
sets the sql string to select authors by book id
sets the insert subject book sql
retrieves the xml document with the given id
sets the select all books sql
retrieves the generic data by the database id
sets the sql string to select the book by title
sets the sql string to select book by owner
retrieve a reader by uid
sets the subject string
sets the book by author sql
retrieves the entities for a given deskphone
the setter for the author dao property
validates the isbn
determines if the isbn is valid
setter for subject dao
reset all properties to their default values
strips the isbn characters from the given string
setter for property subject list
reset all properties to their default values
normalizes a isbn
this method removes the end of line characters from the input string
replaces all occurences of non numeric chars in the given phone string
return the collection of readers associated with this stream
set the readers field
sets the end point url
gets the value of end point url
verify that errors are defined in the errors collection
dump the errors to system
inserts the bean into the request context
sets the proxy host name
gets the value of proxy host name
gets the value of proxy user id
getter for property proxy passwd
gets the value of proxy port
test of get subject id by description method of class subject
test of insert new subject record method of class subject
test of get subjects method of class gergometer
test of retrieve method of class usyd
test of find author by first last name method of class author
test of retrieve by uid method of class daos
test of retrieve by phone method of class daos
test of get possessor method of class edu
test of uid exists method of class daos
this test case will get the reader id from the container
the desk phone exists method is used to test the getting of
this test will get the pending state from the library
test of get readers method of class daos
test of set subject string method of class com
test of validate method of class br
test of get class name method of class com
test of get reader id method of class usyd
test of get authors method of class com
test of set authors method of class com
test of get created method of class f
test of reset password method of class daos
test of set created method of class com
test of get id method of class com
test of set id method of class com
test of get isbn method of class f
test of set isbn method of class f
test of get owner method of class com
test of set owner method of class com
test of get pub date method of class com
test of set pub date method of class com
test of get publisher method of class com
test of set publisher method of class com
test of get subjects method of class com
test of set subjects method of class wikipedia
test that the returned object is checked when there is a specific
test of get title method of class com
test of set title method of class com
test of get author string method of class com
test retrieving a document by isbn
test of get subject string method of class com
test of get enumerated subject string method of class com
test of get subject list string method of class com
this method is called when the filter is called
test the is isbn10 valid
checks if a filter has been called
test of set authors method of class com
method get filter name not yet implemented
test method for
method get init parameter
method get init parameter names not yet implemented
this method will get the subject object from the subject
test of strip isbn dashes method of class f
test of get action method of class br
test of set action method of class br
test of get owner phone method of class com
test of set owner phone method of class com
test of get subject list method of class com
test of set subject list method of class com
overrides the super classs init method to ensure that it is
this method will get the search that are contrubited from another user
this method will get the book object from the database
sets up the test fixture
gets the http servlet request
gets the request wrapper
sets the request wrapper
clear all parameters
gets the response
gets the response wrapper
sets the response wrapper
gets the request
gets the mock response
returns the current http session associated with this request or if the
set the action servlet
sets the request path info
sets the init parameter
sets the config file
set the configuration file for a module
returns the forward name of the request dispatcher
test test forward
verify input forward
verify tiles forward action
verify the input tiles forward
verify if there are no action errors
verify action messages
verify if there are no action messages
gets the action form
sets the action form
returns the selected value
returns the current row
returns the current column
gets the cell at the given position
returns the value of the cell as a big decimal
creates and returns a copy of this object
sets the dash board definition
returns the url of this dash board
returns the url of this dash board
returns the connection
returns the data source definition
setter for property connection
add a view to the dash board definition
returns the dash board definition
sets the dash board definition for this line template
adds a filter to this definition
get the filter with the given name
returns the view with the given name
connects to google spreadsheets web service
build dash board definition that dependant to this definition
populates the filter item list
returns the absolute path for the repository
parses the expression dsl expression br
returns the dash board definition
sets the path to the file that contains the view to be created
get the path to the view file
to set the last command
gets the value of the market total quantity property
update the weight according to the given day and total cost
update market info
delete a user
deletes a user from the system
dealer bidition
get the number of players in this table
set my turn
sets the user with id ready
writes the user object to the database
called when a vehicule in a garer or a place parking
loads the back image to the background
paints the component
load the minibg image from the disk
places the login widgets on the root panel
this method is called when the dashboard dashboard list is changed
places the dashboard widgets
builds the form for the dashboard gui
place the revision edit form on the page
called when a service login fails
this method calls the add content gui
places widgets on the main panel
place revision edit widgets
this method is called when the add user button is clicked
build revision edit form
this method initializes add department gui
this method initializes dashboard form
this is the entry point method
this method is called when the user has successfully logged in
this method is called when the service has been revisioned
this method is called when the html parser encounts a string
dummy sets the value of this field
enables disables the menu item
called before the invocation is executed
called after the invocation of the method represented by this class
returns the first child which starts with the given prefix
returns the leftmost tree that starts with the given prefix
returns the row number of the first cell that contains the hyperlink
returns the row number of the last cell returned by the iterator
fired when user clicks on a cell in the table
save the content of the given file to its file
unmarshall the content from its source to file
returns whether furniture key is a ctrl key or not
disposes this generic ui element
get the shift key flag
returns the alt key
returns the meta key
dispose of all attributes
returns the character code
gets the value of the key identifier property
disposes all the attribute bindings
returns the state of the modifier key
returns the x coordinate of the client area
returns the y position of the client
get the ctrl key flag
returns the shift key to the new value
get the alt key flag
get the meta key flag
returns the target related to this event
returns the modifier state for the given key
returns a string containing the modifiers
helper method to get boolean
returns a string representation of the given boolean
initialize the engine
registers all xml elements in the given scope
put the attribute identifier into the core document
set the id of this element
returns the id of this element
returns the name of the attribute identifier
applies all bindings specified in the dom elements and
find the next resource of the correct name in the classpath
add one or more classes in the classes dir
sets the parent for this class loader
adds a path element to the path
parses the given file using the given writer
loads a class through the class loader even if that class is
add a section to the manifest
parse the value to a dom document
searches for and load a class on the classpath of this class loader
creates a new adapter for an object of class
returns a string representation of the object
converts a string into a dom document
returns true if this is a lazy event listener
returns true if the event can be handled by this handler
returns the attr name
gets the old value
gets the new value
update the table swt
closes all project files on project close
returns true if the given event can be handled by this handler
returns true if there are any listeners registered with this
dispatches the event to all the listeners
creates the pages of the multi page editor
computes the correct dialog size for the given page and resizes
add controller error listner to this page to handle the error page
adds a controller error listener to this wizard
compares the argument to the receiver and returns true
handles gui property changed events
handles the mutation event of a domproperty changed
gets the container element
retrieves an attribute value from the configuration file
return the previous sibling of the given element
retrieves attribute value from the configuration file
returns true if the cell at code column code and
start editing the given element
saves the value of the currently active cell editor
sets the cell modifier for this row
disposes of all resources
sets the cell modifier of this tree viewer
sets the pack
set the align left right or right
sets the orient
sets the width of the image
sets the height of the image
returns true if the combobox item is a combo item
returns the ilistitem for the given listitems
returns the ilistitem for the given listitems
removes the ilistitem item from this listitems
creates a new item object with appropriate listeners
removes the item at position index
removes all items from the menu
retrieve the tree item at the given index
returns the namespace uri of this type
sets the base directory of the velocity templates
set the configuration of the dynamic distribution
put a value in the current context
merge the template with the context
set the configuration for the internal skat tool
inserts an xml string into the document
inserts xml into the model
inserts an xml source into the model
adds a new key value pair to this map
merges the template with the generated writer
set the variables shared by this template
set the object wrappers
get the configuration engine
sets the template reader
sets the path to the template
gets the base directory of the template files
merges the properties from the specified file
merges the source file with the target file
merge the source file to the destination file
gets the configuration id
set the configuration of the part
getter for property command base dir
invoked before the command is executed
returns the code updater for the given type
creates a composite control with a gridlayout with the specified columns
maps an object to an edit part
upon activation attach to the model element as a property change listener
upon deactivation detach from the model element as a property change listener
set the accessible listener for a control
returns the selected resource in the tree
returns the resource selected in the tree
returns the attr value
checks if there is a wildcard index defined
gets the index wildcard
match the given node with the pattern
returns true if the given node matches the element
returns true if the element matches the given element name
returns a node with the specified node type
gets the nb wild card
add an attribute matcher to the list of attributes to be evaluated
returns a new xpath element matcher for the given element name
checks if the reporter is enabled
creates the status of the test
saves the current sorting settings
restores the sort column widths of the dialog settings
returns the number of pixels corresponding to the height of the given
returns the number of pixels corresponding to the given number of
returns the number of pixels corresponding to the given number of
returns the number of pixels corresponding to the width of the given
sorts by type
sorts by name
returns the context information for this context
this method returns true if the test case is fatal
sequences the incoming message using the given method
performs the update
reset the sequence
if tt true tt rebuilds the source
return search pattern data and update previous searches
informs the control that a calculation should be recalculated
informs the control that it should relayout itself
refreshes the display
initializes the model and adds the sequence to the xforms document
test if an event is cancelled
returns the context information
get the context information for the specified property
returns the property names of the context
reset the instance document
execute the element action
returns the page settings for this text search page
checks the align value
check if the given orient is vertical or horizontal
check if the given pack is the center or end of the bounds
inserts the specified item before the specified index
removes the menu item at the specified index
checks the align value
gets the native widget
dispose the node
returns the ui element of the editor
sets the ui element
returns true if the source object is a control object
returns true if the source object is an item
binds the specified observable value to the given observable value
binds the specified observable to the ui
binds the given value to the given observable
convert the given string to a dom document
parses the element info and pushes it onto the stack
parses the value of the given property and extracts the property value
save the css file to a url
sets the tooltip text
returns the tool tip text
returns the tooltip to display for a mouse event at the specified
set the visibility of the painter
change the bounds of the decoration relative to the decorated
change the bounds of the decoration relative to the decorated
return the bounds of the decoration
returns the css engine for this page
apply styles for the given widget
repaints the component
apply styles to the widget
fill the textarea with the style sheet content
called whenever the part throws an exception
create the menus
get the cssserializer configuration instance used for creating
convert string cursor auto cursor to swing cursor
convert string cursor move to swing cursor move
test conversion from string cursor to swing cursor
convert string cursor help to swing cursor
test if it is possible to convert string cursor
compute the style string for the widgets
creates the shells menus
convert string cursor auto
this tests convert string cursor move method
returns a string representation of the current values of array
tests the conversion from string cursor to swtcursor
this tests converting a string with the cursor help to swtcursor help
returns the type of condition
test the conversion from string cursor to swtcursor xxx
gets the first condition
gets the second condition
b sac conditional selector b
gets the simple selector
b sac b implements
get the condition type
this attribute was specified in the constructor
b sac b implements
b sac b implements
b sac b implements
b sac b implements
gets the ancestor selector
returns the condition type
code get specified code returns the original value of the property
returns the condition type
sets the document handler
returns the condition type
gets the selector type
returns the type of condition this effect is defined on
returns the condition type
selector type one of
returns the selector
b sac b implements
returns the type of condition this
b sac b implements
set the error handler
returns the version of the parser
indicates whether some other object is equal to this one
b sac b implements
tests whether this selector matches the given element
fill the attribute set with the given attributes
returns the specificity
returns a string representation of the selector
returns the condition type
tests whether this selector matches the given element
returns a string representation of this property
indicates whether some other object is equal to this one
returns the condition type
returns the specificity of this code competence level type code
tests whether this selector matches the given element
fill the attribute set with the values of the given attribute set
returns the name of this language
checks for equality of this attribute condition
returns the hash code value for this object
b sac b implements
tests whether this selector matches the given element
specificity of the literal
returns a string representation of this object
two abstract element selectors are equal iff they have the same namespace
fill the attribute set with the given set
compares this selector against another for equality
gets the specificity
return the sibling selector
selector type one of
tests whether this selector matches the given element
fill the attribute set with the given attribute set
return a string representation of this selector
get the condition type
tests whether this selector matches the given element
fills the attribute set with the given attributes
returns a string representation of this object
returns the type of condition this is
tests whether this condition matches the given element
b sac b implements
tests whether this selector matches the given element
fill the attribute set with the given attribute set
return a string representation of this object
creates a selector that can be used to any node
creates a selector for the root node of a css document
compares this object against the specified object
returns the specificity of this rule
indicates whether some other object is equal to this one
returns a hash code value for this object
get the condition type
indicates whether some other object is equal to this one
returns a hash code value for this attribute
get the condition type
indicates whether this filter matches the given pseudo element
returns the specified flag
return true if the two selectors are equivalent
tests whether this selector matches the given element
gets the specificity
gets the ancestor selector
fill the attribute set with the values of the given attribute set
returns a string representation of this object
get the condition type
get the selector type
tests whether this selector matches the given element
returns the version of the parser
fill the attribute set with the given attribute set
tests whether this selector matches the given element
return a string representation of this selector
returns the specificity of this code competence level type code
b sac b implements
tests whether this selector matches the given element
returns the specificity of this property
returns the name of this member
b sac b implements
creates a reader for the given input source
b sac b implements
b sac b implements
sets the red part to a new value
sets the green part to a new value
sets the blue part to a new value
returns the selector that this rule belongs to
removes all style sheets from this theme
look up a computed style declaration
todo return a value for a vector
returns the document handler factory for this application
returns the name of the preferred parser
changes the value of the preferred parser name field
checks if the given input source is valid
adds a static pseudo instance to this instance
called when the list of cssstylable elements have been applied
get the element that is bound to the context
handle the exceptions thrown by the method
sets the error handler for this csslayout
initializes the css properties
registers a package
converts quot handler class quot property to appropriate
creates the help button
returns true if the event can be handled by this handler
parses a string property and applies it to the widget
sets the type of this variable
returns the number of answers
stores day details in the database
at startup create and show the main frame of the application
at startup create and show the main frame of the application
this method is to initialize the specified window by injecting resources
writes information on the gui
adds a new entry to the hash map
assert that the urls fetched contains the expected url
returns the current status of the info field
add attribute to be searched for in the search
assert that the content of the current element equals the given one
returns the current debugging detail level
assert that the given file has been read
returns the last warning generated by the compiler
assert that the given file is write
returns the last error or empty string
assert that the given directory has been created
returns the current fatal
gets the trace string
adds the dns name and its operation to the internal domain
print the organisation tree in a hierarchical format
prints out the unit list
clears all dir context
called by osgi to add dir context operations
sets the root units
assert that the given filter is the search filter
returns the distinguished name of the parent of the entry
set the content type of the response
get the unit value from the request or the user input unit name
sets the name to url map
get the content of an rss item
loads rss content
returns the appropriate message bundle for a given language
set the search flag
resets the search flag
load a properties file
sets the name of the unit
sets the users township district city or local administrative
checks if this object is empty
sets the healthcare type
checks the disabilities of a criteria
sets the result type
reports an error with the given dn and text
gets the saml response
gets the value of the national id property
sets the sort order
this method must be called to initialize the service endpoint
set the repository of the current citizen
gets the value of meters
sets the search service
sets the global variable
sets the meters value for this town info
sets the signature service endpoint value for this signature service
gets the google maps key attribute of the map query object
sets the google maps key
sets the max search result
clean the search form
build html representation of the unit list
builds a plain text string from a list of units
builds the xml for the given list of units
escapes all special characters in the given string
init the travel planner
get the stop id of this simulation
removes all outdated units from search result
handles the unallowed units
fix the uri
get a person by vgr id
returns the first person in the list
get the person object by the vgr id
gets the fav icon attribute of the jboss class editor object
removes all invalid telephone numbers from the telephone number string
creates a health care filter object from this healthcare type object
sets the fav icon attribute of the team member object
get the person object by distinguished name
creates a search filter for a given search unit
sets the ldap template
get citizen name from a ssn
retrieves the content of the sitemap based on the persons and units
set the service endpoint
adds a new sitemap entry to the cache
adds a unit to the list of units
returns a unit by its dn string
adds given name and arguments to this name
adds a person to the list of persons
add a name value pair to the map
adds a unit name to the list of units
add a title and title
compares two units
get the value of an attribute as a string
return true if an attribute with the given name exists in this directory
returns the distinguished name of this directory as a string
returns true if this collection contains no information about any of the
initializes the code table
adds an extra information object to the end of the extra information list
add a new data source
initializes the code table
get the total time spent on data source search in milli seconds
elapsed time in milliseconds
returns the total time spent in data source search in seconds
returns the elapsed time in seconds
helper method to determine if this object is empty
returns the total number of found items
sets the total number of found items
assigns the url of the case types to the unit
sets the translation map
get the number of metres from the current mile
calculate the geographic coordinate for the given coordinates
validate the array for unit search
get the search service
builds an xml document from a list of suggestions
checks if the given code unit code has any of the managed units
checks if this user id is empty
returns an instance of unit identified by hsa id
returns true if this collection contains no information
returns a unit by given dn
report an error
returns an instance of person identified by id
gets a specific person of a certain dn
clean the search simple form
returns the same as
returns the zip code as a formatted zip code object
returns the update stamp
gets the value of the business object property
gets the url large
sets the implementation resource path attribute of the jboss class settings object
gets the current healthcare type object by its index
gets the healthcare type with the specified name
returns the notice
sets the notice
returns true if packages are visible false otherwise
returns true if this criteria has criterias visible false otherwise
sets the municipality key
adds a condition to the conditions collection
gets the value of the zip code property
sets the zip code
returns a string containing all the additional information in the
sets the value of the additional info property
returns true if the zip code has vcard data
accessor method for x is unit and administration is same as
returns the url encoded version of an address
return the ancestor as a dn
returns the concatenation of all the additional information
returns the first available unit name
returns the distinguished name dn of the current entry
return the parent dn of the current node
returns the ancestor dn of the current generation
returns the url encoded
set the end day
set the end day
set the end hour
set the end hour
setter for property end min
getter of the geo coordinate
setter for property end min
set the start day
setter of the property tt geo coordinate tt
set the start day
set the starting hour of the time period
set the start hour
returns the base64 encoded dn as base64 string
setter for property start min
setter for property start min
adds hours to the haze
set the employment period of this station
adds hours to the list of hight surgery days
get the first employment number
get the first mobile number of the first employment phone number
adds hours to the list of hainfall in
adds hours to the list of hainfall in this month
gets the value of the hsa telephone number property
adds a list of telephone numbers to the contact
returns the charset for the given content type
replace newline with newline
return the text with an ellipsis
adds a list of telephone time to the contact time collection
adds a list of descriptions to the list of descriptions
adds a list of telephone numbers to the contact
adds a feature to the hsa public telephone number attribute of the sladata cvo object
add a list of telephone times to this weekly account
set the visiting rule age for this rule
gets the value of the health type attribute
returns true if the name of this node is valid
java doc java doc java doc java doc
gets the hsa street address is valid
get the time of horse surface date hours
get flag for drop in hours
get public telephone number
get the validity of the time of the week
validates the form for hsa geographical coordinates
returns information whether the labeled uri is valid
returns true if the description is valid
vgr organizational role is valid
gets the hsa business classification name attribute of the corrent object
returns whether the visiting rule age is valid or not
returns whether the visitor can find ha visiting rules
this method returns the care type is valid
returns true if the text entered by the user are valid
gets the modify timestamp formatted in w3 cdatetime format
gets create timestamp formatted in w3 cdatetime format
adds routelist to this map
adds a healthcare type to the list
adds a list of healthcare types to this current health
adds a feature to the mvk case type attribute of the method object
gets the formatted ancestor of this healthcare type object
checks if this is a show in vgr vard val
checks if the current health type has a healthcare type
adds an indicator to the hsa destination indicator list
returns the pattern
returns the pattern string
get the number of instances of this class
the function code clone code creates a new general query graph node
returns the number of edges leaving this node
returns the from node of this edge
returns the number of edges leaving this node
returns the to node of this edge
returns the number of edges in and out adjacency lists
returns a hash code value for this object
returns the ancestor of this node
two instances of this class are equal if they have the same hash code
returns true if this node is equal to n
the method code clone code creates a new instance of this object
returns the number of selected nodes
returns the selected node
returns the edge that is being edited in this query graph
returns the node
returns the node id of the given node
checks whether the node is associated with a node
returns the induced subgraph in the given node and its
returns the query graph of this model
this method returns a new graph which is a copy of the given
adds a new node to the graph
this method creates a new node and adds it to the graph
adds a node to the query
deletes a node from the graph
deletes an edge from the graph
adds an edge to the graph
returns the node at the given index
returns the edge at the given index
clone this graph
returns the number of patterns in a given graph that have been created
gets the pattern instance count
get the codec
get a connection to the database
returns the uri for a given id
returns the id of a uri
index the given edge
returns a resultset with all the stat in the database
method get patterns
add a statistic record to the table
this method initializes this
this method initializes update
returns the text of this code text component code
sets the title of the titled border
e h i o c v b
sets the col type
returns the actual component
this method initializes syncro
returns the cause of this exception the exception that caused the
this method initializes txt target folder
this method initializes sel macro page
this method initializes sel macro line
this method initializes page from
this method initializes page to
this method initializes line from
returns the value of this unsigned integer object as a byte
this method initializes line to
assert that x is can be modified
this method initializes sel sync player
returns the double precision value of this number
returns the index of the element that would be returned by a subsequent
gets the index of the previous instruction or ite
checks if this queue has a previous message
setter for property font
this method initializes j scroll pane
returns the previous element in the queue
returns the float precision value of this number
returns the index of the element that would be returned by a subsequent
returns the index of the element that would be returned by a subsequent
this method initializes j table
indicates if this iterator has a previous element
throws an unsupported operation exception
returns the element at the specified position in this list
returns the value of this unsigned integer object as a short
compares this big decimal with the specified object
compares this big decimal with the specified object
return input stream for reading
compares this big decimal with the specified object
compares this big decimal with the specified object
return a writer for writing to this resource
return a writer that can write to the file
compares this big decimal with the specified object
returns an output stream for writing to the process
compares this number with the specified value
sets the color of a row
return the value as a string
when the nfa has no non null text or an nfa
writes the content of the buffer to the output stream
sets the object value for the cell at code column code and
checks if the given column is a valid mode
sets the row with the given data to be hidden
sets the data for all the cells in the given row
returns the row at the specified index
returns the hexadecimal representation of the system
sets the number of rows in the hidden data list
returns the hidden value at the specified row and column
sets the hidden value at attribute of the abstract table model object
sets the editable color priority
this method initializes row sizes
returns whether the data is savable
checks if is deletable
is this the last level of a program
updating the company proposed code
updates the model from the parent object
fills the table with the values of the specified row
sets the selected item
returns the index position of the specified object in the filtered entities list
throws an exception if the collection is not allowed to be removed
returns the index of the specified key
creates and returns a new default key selection manager
creates and returns a listener to handle key events
installs the keyboard actions on the associated combo box
returns the jlist used in the list
creates new form yes no dialog
adds a keyboard event handler to this component
check if a specific pin is still active
returns the number of pins down on this method
returns the total number of pins down
gets the value of the foul commited property
returns the throw number of this exception
set the last handler in the chain
sets the original score
gets the original score
add an observer to the list of observers
publishes the changes to the observers
inform the controller that the next frame is about to be followed by
returns the current score
called to notify the observers of the state change
resets the frame to its initial state
create a new frame for the game
control desk event receive
returns the calculated score for this token
party assigned
the game is paused
resets the iterator for accessing the party members
the game is stopped
set the auto commit property
dump the details of this object to the given print stream
removes this space from the registrar and removes it
write a value to the array
sets the entries
adds a new field to this tag
returns the field content for the given tag
generates a string representation of this object
dump the content of this object to the given print stream
creates a new instance of key serial number
constructor for primary key
dump the data of this object to the given print stream
dump the current
setter for property key bytes
sets the key length
set the name
returns the time of the last check
sets the last check time
get the namespace of this name
sets the namespace
creates an empty ui
creates an instance of this class with the given config
generate a key for a given key length and key length
sets the object factory used by this instance
create an encrypted pin with the specific pin number
returns the registrar
decrypts an encrypted pin instance
creates a new
template method for creating an encrypted pin instance
creates an object of the given class
configure the xml document
reconfigures the configuration of the named component
translate key from old lmkimpl to this kd
erase old lyrics implementation
create a new fsdmsg instance and set base path
control the periodic process
creates a new thread pool with the default number of threads
returns the rotate count
sets the rotate count
returns the date format
sets the date fmt
gets the value of last date
sets the last date
get compressed suffix
set compressed suffix
set the configuration object
return a new compressor thread
returns a buffered output stream for the given file
get the compression format
set the compression format
get the compression buffer size set on the rtp data channel
sets the compression buffer size
compress the code log file code using the
set the trailler
code is expired code returns true if the date represented by this
dump the card holder to the specified print stream
tests if this card holder is equal to another
creates a new nacchannel object
creates a new nacchannel event object
intercepted method to set str2bcd header
default constructor for logging
default constructor which takes the host and port as a parameter
creates a new logager
creates a hexchannel object
creates a hexchannel log record
constructor for padchannel
creates a new code padchannel code instance
creates a new code padchannel event code
constructor for post channel
creates a new post channel
creates a new post channel
sets the packager
creates a new bcdchannel object
constructor for bcdchannel
constructor for cschannel
default constructor which takes the host and port as a parameter
creates a new code cschannel event code
constructor for xmlchannel
creates a new xmlchannel object
creates a new xmlchannel object
constructor for gzipchannel
constructor for gzipchannel
creates a new instance of x25 channel
creates a new instance of nccchannel
the constructor sets the host and port
creates a new instance of nccchannel
creates a new x25 channel isopackager
create a new asciichannel object
creates a new asciichannel object
constructor for asciichannel
create a new 24 channel object
default constructor used when creating the 24 channel
creates a base24 channel by default
constructor for raw channel
creates a new raw channel
constructor for vapchannel
creates a new empty document
default constructor creates a new vapchannel object
creates a new vapchannel
constructor for base24 tcpchannel
default constructor used when creating a base24 tcp channel
creates a base24 tcp channel by default
returns the dynamic header
set the iso component for this struct
unsets the specified field
returns the composite that this view is associated with
returns the key associated with this entry
returns an iso object that represents the value of this
returns the max field for the given query
returns a map of the children of this node
construct an isomsg with no specific direction
return a localized exception message for an operation
removes an isorequest listener
construct an isomsg object
shutdown the server
construct an isomsg with the given message
sets the header of the file
set the name
returns the server socket factory
sets the server socket factory
set a component to be stored in this field
set an isofield associated with the given isofield number
returns true if bit map should be emitting
set the value of an isomsg
override this method to emit bit map instructions
unset a field
this method deals with unsetfields
sets the configuration of the translator
validates the isocomponent
executes the bit map
unpacks an iso packet from a byte array
unpacks an iso object from an input stream
this method will print out the xmlpackager information to a print stream
copies fields from source to this isomsg
adds an error to the list of errors
get a list iterator of all errors
get the component for the given field number
returns the value stored in the given field number
retrieve the value of a given field
constructor for isochannel panel
get the component that contains the isomsg
return the string value associated with the given isofield number
returns a string value from the iso formatted file identified
checks if the given field number is present in the database
returns the length of the longest packed
check if field is present in the isomsg
constructor takes byte array as argument
returns string representation of the rejected code
create a base channel object
validates a component
creates a new base channel
partially clone an isomsg
creates a new base channelager
return the v errors
dump the content of this node to the specified print stream
sets the host and port
creates an isoexception with the specified nested exception
creates an isoexception with the specified detail message and nested throwable
sets the local address and port
creates an isofield
dump the content of this xmlpackager to a print stream
creates an isobinary with a field
this method will print out the xmlpackager information to a print stream
set the server socket for this connection
usually 2 for normal fields 1 for bitmap less or ansi x9
get the cn from a dn
returns a new unconnected socket using the given host and port
validates the isocomponent
set the configuration
sets the timeout of the socket
returns the error code for the rej
validates the given isocomponent
connects to the server
creates an empty xsltfilter
returns the packager to use for this test
returns the space
sets the space
returns the key prefix
sets the key prefix
returns the packager used to add the test
checks if is veto unmatched
unpack a tlv into an iso packet buffer
returns an enumeration of the values in this set
returns the dynamic packager for the given image
set whether veto unmatched
unpacks a tlv from the given buffer at the given offset
returns the match direction
append a tlv to this message
sets the match direction
append a tag with byte array
indexed getter for property ignored fields
append a tag with a string value
return the dynamic header
indexed setter for property ignored fields
sets the value of ignored fields
get the value of saved field at specified index
set the saved fields at the specified index
sets the saved fields value for this document query result
returns the key at the specified index
sets the key at the specified index
getter method for overwrite original fields
setter for property overwrite original fields
sends a keep alive message to the server
template method for creating an isomsg
get the number of bytes read from the socket
disconnect from the server
sets the name
creates a new jce handler which can use the provided provider
set the configuration of this store
set the configuration for the service
retrieve the isomsg from the server
waits until one isomsg is received
returns the message socket factory
sets the socket factory
set the name
writes a key value pair to the output stream
read from cache
generates all lmk
returns the peer for the given object
reads in all pairs of lmk
writes lmk to disk
get lmk for the specified lmk index
private constructor prevents instantiation
sets the expired attribute of the cookie
queue this object for processing
sets the number of the trace number field
set the number of transmitted tx messages
return the response for this request
set the response for this transaction
returns a formatted key for the isomsg
purge expired messages from the rx queue
queue an isomsg to be sent back to the server
put an object into the map
todo replace this
sets the connect state
returns the latest log event
get the profiler for this application
adds a message to the log
run a check point on the given detail
execute this command
executes the function
queue up a set of messages
queue up a message to be sent
this method is used to handle the events for the fields
sort a table using a column
sort a table and update it
returns the image to be displayed
method to get the book
interactive the execution of the program
sets the project path
runs a program with default parameters
runs the cvs application in the specified file
finds the project file with the given name in the project path
multiplies this matrix with the value of the parameter
returns this value
multiplies two matrix4x4
randomly pops the state
perform one step of the algorithm
returns true if the current sparql query is efficient
returns the number of systems in the simulation
randomly pops the state
perform one step of the game
checks if the pop state is signaling
perform one step of the game
randomly pops the states and states according to their natural order
gets the draw float uniform
returns the probability that the given draw point is used for this
initialize the agent and query the text area
top the agent and query it
initialize the agent
choose strat from the saved query
update after the saved results are saved so far
set the strategy for the agent to the given value
attempt an obese
returns the property with the given tag
sets the property for the given tag
adds a property to this measurement
deletes a property
set the learning strategy
called after a play has been performed
if the user chooses a strat for this learning rule then
sets the learning rule
called after a play has been updated
called when the user clicks on the choose strat
calculates the utility function which is used for calculating the cost
set the strategy space for the given player
probability of payoff
get the expectation value for the given player to payoffs
generates random numbers with a z
generates random numbers with a uniformly distributed value between
generates random numbers with a uniformly distributed value between
this method replaces the last solution solution
method to receive results from the text area
reset all flags to false
reset the entered text
sets the text of this node to the given string
just calls the method
draws the background to the specified graphics context
sets the type of the parameter
return the detail message including the message from the nested exception
draws the block foreground
sets the width of the map view
returns the number of blocks
sets the delay between each step of the scheduler
returns the number of blocks
draws the object to the given graphics context using the given transparency
sets the height of the map view
get the delay time between two consecutive countdowns
draws the image
returns screen width in pixels
set the delay countdown value
sets the index of the image layer
sets the x coordinate of the view point relative to the map
returns screen height in pixels
getter for property current frame
return the index of the given image layer
update the animations for the blocks
sets the user data for the given index
gets the index of the specified block
setter for property current frame
draws the objects on the screen
draws the object to the screen
returns the user data at the specified index
sets the index of the given block
returns the current frame
sets a new flag
sets the frame count
returns the value of the specified flag
gets the user data
set the pillar riser mode
returns the animation block at the given coordinates
sets the collision flag for the given shape
returns the chrome key if set
returns the collision flag of the given shape
returns mozilla search key index
getter for property colour depth
returns the height of the map block
checks if the object at the given coordinates exists
adds a pixel to the x axis
returns the height of the map area
sets the text string
getter for map type
getter for property map version major
getter for property map version minor
returns the map block width
returns the width of the map
adds a pixel to the y axis
set the anim blocks
sets the blocks
returns the status of the rising pillar mode
set the image data for the image
setter for property colours
get the value of text string user data index
adds a block x to the x map
the alpha component of this color
returns a string representation of this color
adds a new block y to the block y
return the length of the current chunk
returns whether this file is a lsb or not
returns the byte at the given index
throws a chunk exception with the given information
reads a byte from the input file
set the initial restore option
when set to true the database environment will be
sets the snapshot file
takes a snapshottable
restores the contents of the snapshottable from the specified snapshottable
clears all zones and their entries
sets the output file
sets the log file
set the snapshotter to use for getting the data
restore the memory from a snapshot
checks if the log stream is open
takes a snapshot of the current state of the memory
locks the memory
locks the memory
checks if the memory is locked and throws a memory exception if
is this service enabled
sets the log level for this logger
returns the log level of this logger
print out the digest in a form that can be easily compared
adds a new submission to the queue
removes the given submission from this queue
returns the next submission
get the default limit
populates the reference information from the result set
given a result set return a limit object representing the total
getter for property time limit
sets the maximum amount of memory that will be used by the application
gets the user profile
gets the value of memory limit
returns the logger to use
setter for property output limit
getter for property output limit
set the submission limit
sets the user profile
gets the value of submission limit
logs a message with debug priority
returns the user security for this user
sets the current user security
logs a message with info priority
gets the user preference
sets the user preference
logs a message with error priority
stores an object in the session
sets the id of the contest
returns an attribute stored in user session
gets the value of contest id
logs the given exception and records the error in the log
the default behavior of this method is to call set attribute string object
set the problem id of the proof
the default behavior of this method is to return get attribute string key
handles the failure of a mapping
get the problem id
the default behavior of this method is to return get attribute string
checks if the current user is administrator
get the problem file
set the problem file
this method is called when a validation fails
sets the contest
sets the length of the contest
handles the success of the mapping
gets the contest
gets the value of contest length
p handle the success by searching for the specified forward name
returns the student number
sets the student number
gets the value of forum id
getter for property remember me
checks for required actions
handles the success of a test
creates a string that contains information about the operation
creates a string that contains information about the operation
setter for property use contest default
determines if the current adapter is a login context
getter method for use contest default
sets the special judge
sets the use global default value for this service options
gets the value of special judge
getter method for use global default
sets the contest type
gets the contest type
p set the plan for this employee
sets the language ids
gets the value of plan
test get all countries
test the update thread one
test search submissions
test search submissions list
test search submissions list
test the get all contests method
test update problem1
test persistence for test get all problemsets
gets the address line2
create a new limit object
the default constructor
creates a new problemset
create a new problemset
method new problem
helper method to create a new forum
create a new contest
test if update post is working correctly
helper method to test the abstract contest methods
test if the submissions are not deleted correctly
helper method to check the given languages
helper method to test the compiler language
test search submissions
helper method to check forum1 and forum2
sets the address line3
helper method to test the equality of the two threads
accessor method for x school
test method for
helper method to test the equality of posts
sets the major version
checks the given posts
creates a new thread
gets the value of student number
creates a new post
sets the graduation year
sets the graduate year
gets the value of the graduate year property
gets the value of graduation year
sets the graduate student
gets the graduate student
sets the graduate student
gets the value of the graduate student property
checks the user entered a new author and their permissions
checks if the graduation year is valid
check if the country is valid
checks if the birthday is valid
parses a string to a date
helper method to check that judge reply is correct
checks the given submissions for equality
getter for property userinfo
set the userinfo
returns the my lote dao
return the tx id
set the tx id
creates a function with the cliente
set the function
returns the repository
get the bapi name for this connection
returns the selected cell background color
returns the foreground color for the specified cell
returns the selected cell foreground color
returns the selected cell background color
returns whether this view should only be highlighted
returns the column cell at the specified column index
returns the column cell with the given column name and type
returns the column cell that contains the given element
formats a message with the given resource key and the message format
sets the value of a variable
start the plugin
method declared on drag source listener
initializes the currency list
applies the status to the status line of a dialog page
executes the given sql statement and returns a code data access exception code
sets the identifier for this node
saves the given registry to the data store
deletes the given entity from the database
returns the next session identifier
called to indicate that the persistent state has been persisted
called when the persistence state has been removed
checks if theres anything in cache and if not creates it
return the total for this currency
returns the total amount of all payments for a given currency
returns the combined total and currency
returns the total amount of all account children accounts
adds a transaction item to the current group
removes the transaction item from the account
adds a child account
removes the child account
adds a transaction item to the account
loads all accounts
passing the focus request to the viewers control
do model loaded event
create a hsqldb database
retorna a derby db
sets the configuration files
sets the configuration file to use
reset the factory
adds a column to the table
gets the value of label provider
gets the sort provider
refreshes the current page
load the preferences into memory
sets the input to the givenadaptable
adds the given filter to this viewer and triggers refiltering and
removes the given filter from this viewer and triggers refiltering and
compares the two given objects
updates the current sort column with the new sort value
sets the transformer to be used by the transformation
this is a callback that will allow us
create the table
passing the focus request to the viewers control
do the model loaded event
the model changed we just refresh the view
returns true if the model is loaded
sets the sort column
sets the sort direction of the table
returns the current sort column
returns the index of the given column
returns the current sort direction
refreshes the table
sets the input
adds the given filter to this viewer and triggers refiltering and
removes the given filter from this viewer and triggers refiltering and
sets the sort column
adds listeners to the column
dispose of the widget
handle double click selection
sort the column
handles an init error
set the account information
set the internal values
returns the currency of this account
getter for the account name
getter for property description
returns the account that this transaction is in
adds a column to the viewer
set transaction for payment
sets the current transaction
adds a column to the table
the model has been updated
update an account from payment
update the account and all the children
populates the account combo
get the account combo object
returns the currently selected account in the combo box
selects the specified account
returns the currency combo object
get currency selected by user
set the selected currency
set if all files in category list are found
sets the list of currency values to be used for the standard
returns the text in the given column of the given transaction
sets the label for the specified column
this method initializes the csv splitter
gets an account by its name
sets the pattern to be used by this formatter
adds a new value to the list of values for the given key
check that the import is valid
add a key value pair to the transformer
negates the value
replace the regex in the text transformer with the replacement
close the stream
validates the context for the transformer
adds the transformer
sets the parent account id
gets the parent account of the current account
calculates the total of all payments owned by the customer account
sets the amount
gets the value of the exchange rate property
sets the exchange rate
gets the value of the account id property
gets the account
gets the transaction
get the payment amount for a given currency
check if balanced payment is balanced
gets the booking date
sets the booking date
is booked
sets the booked
gets the value of the rate property
setter for property rate
reset all data about the customer
create a model object
delete the object from the model
find object by id
updates the given model object
sets the drop db statements
sets the build db statements
accessor to application context
convert a model id to a string
converts null to empty string
get currency object
gets an account by name
round toward the nearest value
round to the nearest whole unit of the given floor
round the floored value to the nearest integer
round a number to an even number
round a number to odd numbers
round towards zero
round away from zero
truncate the value of floored
returns a string representation of this object
find the file in the directory
launches the denaro application
retorna a hsqldb de denaro db
obtain a denaro db
displays a progress message
this method returns the exchange rate for a given date
gets the exchange rate for the company or mutual fund
returns the string representation of the value
convert a value to a string
returns a string representation of the value
returns the string representation of the value
returns a string representation of the value object
open a xml file and write the xml content to it
closes the file output stream
sets the value of the specified parameter
sets the request parameter with the given name to the given values
get the user name
get the type of the packet
get the name of the principal
compares the specified object with this
sets the radius attribute for this radius template
applies a list of attributes to the entity
perform the authentication
phase 2 of authenticating a code subject code when phase 1
this method is used to handle the request and response
returns a radius attribute of the given type
phase 2 of authenticating a code subject code when phase 1
help method to retrieve the attributes of an application instance
returns the packet type
returns the packet identifier
logout the user
get the hostname of this thread
sets the hostname to use for the serial port
get the authentication port
get the accounting port
gets the value of shared secret
set the shared secret
returns a string representation of this radius client host
returns code true code if the argument is an radius client instance and
closes the socket
closes the socket
sets the code value for this error
sets the data type value for this data type
sets the quality value for this product
sets the event type value for this event
sets the writable value for this attribute definition
sets the alarm level value for this alarm
sets the message value for this event
sets the server state value for this server
sets the product version value for this order type
sets the supported locale ids value for this runtime context
sets the ack time value for this message received details type
set the value related to the column rtn time
sets the rcv time value for this janus message info
sets the reply time value for this message received details type
sets the configuration value for this job ticket
sets the items list value for this item
sets the errors value for this contrib
setter for property options
sets the items list value for this item info
sets the reply base value for this get reply response
sets the items list value for this item value
gets the value of the return item values property
sets the return item values value for this describe global sobject result
sets the item path list value for this archive locator
sets the items path value for this order
sets the options value for this field
sets the options value for this document
sets the server status value for this get status response
sets the type value for this data source
get the datasource id
sets the data source id
sets the database id of the data source
sets the data source value for this job ticket
sets the data point value for this custom field definition data
sets the data sources value for this data source list type
sets the data points value for this document attributes
gets the value of the return events config property
sets the return events config value for this runtime context
sets the event messages list value for this event type
sets the events list value for this event definition
sets the events id value for this job ticket
sets the options value for this ack events
sets the events path value for this job ticket
sets the options value for this document
sets the options value for this event
sets the events list value for this event notification
sets the events value for this business service
gets the value of the return event details property
sets the return event details value for this event type
sets the options value for this browse events
sets the event id
sets the initial date value for this subscription controls
sets the final date value for this booking
setter for property options
gets the value of the more values property
defines if the values should be appended to the end of the list
sets the slave id value for this job ticket
sets the register range value for this service transaction
sets the data type value for this modbus transaction
set the settable property
sets the offset
sets the xml config value for this archive locator
sets the multiplier value for this document attributes
sets the aditive value for this wsyetki kullanici
returns the polling period
sets the polling period
returns true if the graph is a contiguous batch
sets the contiguous batches
returns whether to create slave monitor points
sets whether slave monitor points are created
sets the serial port value for this wsyetki kullanici
returns the baudrate
sets baudrate
sets the project value for this flex project list
sets the projects value for this flex project project list
the description of this filter
removes an event instance from the active events list
get the datasource id
returns the id of the data point
returns the schedule id of this code transport unit code
get the id of the compound event detector
get the publisher id
updates the current point value
stores data for the given key
save data to database
sets the 1 wire network voltage to 0 volts
closes the 1 wire network
get the watch list for the given xid
returns the time when the test was started
gets the duration
validates all the view components
reads up to code len code bytes of data from this input stream
add a variable and its value to the list of values
get the value of a property
this method is used to acquire the next part of the file
terminates the smtp connection
returns true if connected to a server
send a message to the smtp server
receive a message from the smtp server
close the connection to the pop3 server
execute a command and return the result
close the connection to the pop3 server
sends a message to the mail server
send a string to the server
sends a message to the smtp server
receive a message from the pop3 server
receives one line from the pop3 server
sends a command to the pop3 server
returns the number of messages in the stat request
returns the number of messages in the pop3 server
get the message from the pop3 server
returns the message from the pop3 server
returns the headers at the given index
returns the headers at the specified index
removes a message from the pop3 store
removes a message from the pop3 server
instanciates a key
sets the value of the first header
decodes the berkeley db dataset to the current data
this method decodes the milliseconds dataset
decode the data in the milliseconds
decode the data from the lcmcm output stream
decodes the berkeley db dataset parameters to the current state
decode the data from the packet
decodes the berkeley db dataset parameters
decodes the berkeley db dataset to the current data
decode the data from the packet
decode the data from the packet
decodes the berkeley db dataset to the current data
handle confirmation messages compliance
reads all variations in a group
builds a confirm message
control block in out
build a confirm message and update the current frame
returns the code application code that is associated with this
returns the currently active configuration
returns the passive configuration
this method is called when the active input element is changed
roll back the active output elements
generates the text representation of this object
specifies the name of my application
returns the number of parameters this command takes
determine whether the parameters are valid
gets the dnpelement
adds the elements of dnpelements to the vector
creates the dnpelements from the index created
deletes the current session
returns the minimum index value for the given group
deletes all sessions
returns a session by number
returns the maximum index of the data object type within the given group
sets all the elements of this parameter to invalid
mark all invalid rows as invalid
initialize the user layer
destroys the servlet
starts the line
stops the current line segment
destroys the net
starts the application
stop this stage
destroys the current instance of lnk rc
called when the connection is closed
generates the html code for this object
pushes the specified length to the marker stack
pops a result from the stack
determine if this offset is empty
resets the marker to the start of the current position
returns true if this cell is locked
output the variation data
increment the offset
decrement the current offset by the given number of bytes
increments the marker
decrements the marker count and resets the size
returns the length of this character sequence
read a byte
convenience method for writing a byte array with a marker
writes the specified byte to this output stream
write a byte array to the buffer
write the given int array to the stream
return a byte value of a given number of bytes
returns the bridge in and out
starts the modem
reads a byte from the underlying input stream
returns a string representation of this object
destroys the applet
returns if this user want to keep the given
adds an object to the queue
adds a feature to the notify attribute of the change listener object
returns the number of notifications that are registered
gets the value of a given field
returns a string representation of the object
trims the capacity of this tt array list tt instance to be the
sets the value of the given field
this implements the unsynchronized semantics of ensure capacity
this method is used to read the mode from the socket
sets the size of this vector
gets the dnpelement
sets the time of the event
sets all parameters to their default values
dial a number
return a string representation of this week
returns true if the response is ready
return a short string representation of this instance
set the baud rate that the sensor is running on
opens the modem
sets baud rate as a code string code
returns an input stream for this response
creates the dnpelement
returns the current capacity of the stack
returns an enumeration of the values in this hashtable
gets baud rate as a code string code
returns an enumeration of the values in this hashtable
returns an output stream for this socket
searches backwards for the specified object starting from the
are there more elements in the enumeration
description of the method
sets the flow control for the state
reset the iterator
stops the timer
resume the timer
returns the component at the specified index
the trigger event handler
closes the modem
set the flow control for this line
get a property
get a property or the default value if the property is not set
returns the first component of the vector
returns a boolean property
returns the index of the control flow control
returns a int property
returns the last component of the vector
get the property value for the given key
gets the string representation of the flow control for the form
get a float property
sets the component at the specified code index code of this
set a property
set a property
removes the component at the specified index
set a property of type int
sets a boolean property
removes a property
inserts the specified component at the specified location to the end
start generic documentation
ensures that this connection is open
executes a sql query
executes an sql insert update or delete statement
registers a class to the parser
adds the specified component to the end of this vector
removes the first lowest indexed occurrence of the argument
returns the name of the data bits as a string
removes all elements from this vector
returns a string representation of the vector
sets stop bits
log an error
sends all the messages
opens the record store
receive all clients
close the record store
called when a trigger event is fired by the synth
get the incoming messages
sets stop bits
log an object to the standard output
read xml from the given xml
output this object as xml
sets all the elements of this analog to invalid
returns stop bits
returns the database id
read the parameters defined in the xml parameter
returns the stop bits as a string
writes the xml representation of this object to the given
sets all invalid dnpes to invalid
set the parity of the parameter
open and return an input stream for a connection
scale the value according to the linear scale factor
get the maximum size of the log
read from xml
output an xml representation of this object
output this object as an xml element
set the parity of the parameter
read the settings from the given xml string
output xml without linebreak
returns the name of the servlet
get the parity of the parameter
main processing method for the data element object
output the object as xml
set the record to be invalid
this method prints the object to standard out
return the parity schema as a string
creates a copy of this element with all children
sets the data request listener that will receive the incoming request
returns the servlet name
returns a data element for a database id
output the object as xml
reads properties from xml
returns the timeout value of received time in milliseconds
returns an enumeration of the values in this database
removes the given data request listener from this connection
reads the configuration from the given xml
output the integer as xml
adds a new element to the end of the database
returns the timeout value in milliseconds
adds a listener to the list of listeners
sets the time stamp to the current time
sets the rx time out value for this web service method data
returns the number of milliseconds since january 1 1970 00 00 00 gmt
removes the specified data event listener
getter for property output1
getter for property output2
instanciate a record with a digital object
description of the method
sets the time stamp
get the number of milliseconds since january 1 1970 00 00 00 gmt
sets the rx time out
notifies all listeners that the data has changed
output the vector as xml
returns the quality of this current value
returns the last record in the list
determine if this user is authorized to access the profile
output the database object to xml
requests the record to be refreshed
set the quality of this creature
request a get request
specifies the name of my application
returns an enumeration of all the records in this database
returns whether this quality object is valid
read the database information from the given xml string
this method writes the xml representation of the database object to
sets the value of this boolean literal
process a get request
process a get request
sets the value of this int
print the html form tag
process a get request
sets the value using a float object
request a get request
returns the number of parameters in the sql statement
process a get request
inject data into the given data element
returns a string representation of the record
log an object to the standard output stream
this method will return a vector of strings that represent the quality
displays the cards in the specified boxes
override this to determine if an user is authorized to access the
processes a data element request
returns the type of this output
has the given failure
returns true if any failure has occurred
register that this object is listening to the active database
log an error
writes the xml representation of this object to the given
reads the configuration from the given xml
not allowed to be supported
registers this data event listener with the active database
invoked when a request not authorized
read the settings from the xml stream
returns the type of this input
implementation of the data element listener interface
prints information about this hlist back to the client
print lt style sheet gt tag
output the object as an xml element
convert this object to xml
returns the type of the form
read jumper configs from xml
this function returns the value of the specified short acquisition
erase all configuration
prints a javascript script to the status bar
register as a listener for the active database
stops the configuration
end the page
returns the name of this input
read data from eeprom
registers this connection manager as being listening in active database
returns the type of this object
returns the string representation of this box
registers this data event listener with the active database
registers the command as a read error register in the io buffer
automatically test a byte
returns a string representation of this object
stops all poll threads
writes the object to the console
set the mboard io application
rolls back the active input to the active output
returns the number of parameters of this method
output this object as xml
returns the stop bits being used to control the number of serial port
returns a string representation of the bridge
run method for the thread
prints a message to the standard output stream
returns the number of sessions allowed
opens a new session
returns the value of the mask
returns a string representation of this object
returns the number of current sessions
returns the box index
delete all sessions
returns the card number of this card
called by the listener to stop the server
return a string representation of this object
ensure the connection is closed
returns the com1 parameters
destroys the current module and releases resources
returns the com2 parameters
this method is called whenever the modem is pressed or released
reads parameters from the xml string
wrap a heading element
converts this object to xml
wrap a table row in html table
wrap the table into html table tags
commits the active input to the xml file
write the list of xml elements as defined by the list
returns the name of the application
opens a form with a given action and method
closes the form tag
wrap an input field with a single string
wrap an code int code in a html document
appends a handshake to the end of the handshakes array
wrap an input field with a float
handle http client and put the macsecret to client
this method is used to start the thread that reads from the input
copy the cache to the current instance
wrap an input field with a single boolean value
copies the cache
this method works according to the specification of implemented class
wrap input with the given params
wrap the select text in a select statement
start a new paragraph
write the start of a tag
returns the underlying cipher
flush any buffered output for this output stream which also causes the
initialises this cipher
returns the maximum size of an input block to this engine
returns the maximum size of an output block to this engine
writes out a start tag for the given tag name
write a portion of an array of bytes
wrap a anchor tag with the given text
this method prints out the specified object to standard out
closes the stream
stops the server
validate the domain name
validates the mail address
returns the ip up
parse a domain part a host address and return
inits the serial port
skips over and discards code l code bytes of data from this input
ready status callback
returns the number of bytes that can be read from the
initializes the protocol
get the input stream
reads a single byte
sets the pppevent
get the output stream for the response
closes the stream
read the record into the bytes
sslrandom client connection
dial a number
reads a byte from the input stream
writes a byte to the stream
returns the data start offset of the current array element
returns the data byte at the given index
sets the data byte at the given index
reset the nak variable
returns the number of data elements in this data block
dump the packet data to the console
reads the ip header at the given index
copies data from this collection into the specified array
construct a new serial channel
set the parameters for the ppp client
construct a new modem channel object
return the protocol number
the event sent by the server will be processed
initialize the packet mngr
auto generated getter method
read the client side hello message
initializes and returns a new serial channel
creates and returns a new modem channel object
sets the configuration for the ethernet parameters
ppp event handler
start the controller
registers this listener with the given database
starts a new frame
read one frame
returns a string representation of this thread in a pre processed format
closes the input and output streams
release resources if any
triggers the event
prepare the response for a new request
sets the input stream
checks to see if headers are not sent
set the value of a cookie header
deletes a cookie from the response
reads server finished data
sets the response code and message
returns the string representing the object
sets the value of the specified header field
returns true if the value of this number is na n
closes the stream
returns the value of this unsigned integer object as a byte
write a chunk to the output stream
returns the short value of this code number chromosome code at the
returns the long value of this code xdr long code object as a
get the length of the body
returns the float value of this code xdr float code object as a float
returns the double precision value of this number
returns a hash code value for this object
returns the string representing the object
get the value of this argument
compares this object against the specified object
returns the method
throw an exception if the stream has not been closed
writes a byte to the buffer
returns the method identifier
writes code len code bytes from the specified byte array
reset the writer
reuse this pool
get the named header field
writes the contents of this code buffer code to the specified
returns a string representation of this byte buffer
closes the stream
get the header fields
adds a child element
this will return the byte at the specified index
this will return the byte at the from end of the buffer
this returns the current capacity of the backing store
returns the mime part of this xmlelement
returns true if this record has mime part in it
returns the value of the specified request parameter
get the value of a request parameter as a string or return the
adds a property
adds a property
set a request header value
adds a property
writes the request to the stream
returns true if the two objects are equal
free the buffer a stream of bytes
returns the child element at the specified index
specifies the name of my application
opens a new session
deletes all sessions and kills all sessions
returns the number of active sessions in the session manager
gets the session with the specified id
enumerates all managers
starts running and fires the remotes
returns a property of the object
after the server successfully returns a status to
returns a property of the object
called by the application to tell this application to terminate
returns the name of the application
octet set must be a byte set with the code octet
resets the internal state of this object to an initial state
this is the main loop of the thread
starts the receiver loop
wait for all queued jobs to finish
get the active data element reference
record events for this database element
returns the writer asdu corresponding to the given key
return an enumeration of all the writers in the cache
trigger the event
sets the watchdog attempt
backup the data
receives an object using the receiver and sets the correct timeout
removes a child element
reads a single object from the layer
convert a kxml xml document into a kxml document
remove the child with the given key
add a kxml filed node to the xml document
creates a new similar xml element
creates a kml cot input node with text content
creates a kml document node with text node
scans an identifier
creates a private ft103 input node with text
parses the private range then adds the private keyword to the xml element
add a child element to this element
input xml with kxml parser
output to xml
read the xml document and set the parameters of the logic
shortcut to get a protocol
add the xml representation of the xml element to the document
skips whitespace characters
shortcut to add an xml node with protocol
factory method to create a communication element from kml xml node
returns a string representation of the object
returns the child node at index
add a communication to the xml document
print out the code
add a protocol
prints the assembly instructions of code this code to
convert the kxml file into xml
this method is called when the application is killed
input kxml document into this xml document object
convert to xml document
output kxml document to xml
read kxml from xml
output to xml
read the logic xml document and set the internal state to the state
convert to xml document
output to xml
convert the kxml document into xml
called by the application context to shutdown the application
output kxml document to xml
input xml from ko xml
adds a new element to the database
reads the xml document into the object from the given kxml object
output kxml document to xml
convert to xml document
convert to xml document
returns the aditive value of this sequence
sets the aditive of the sequence
remove a child element to this element
shortcut to create a kxml element with text content
output to xml
adds a new element to the end of the database
adds a new element to the list
stops polling threads and closes all connections
reads all variations in the group
control block in dn dn
handle confirmation messages compliance
send a confirmation message and update the application frame
commit user to xml
roll back from the xml document
deletes the given session
adds the dnpelements to the vector
returns the minimum index value for this band
mark all invalid rows as invalid
getter for ack
setter for property ack
sets the condition value for this test case
sets the items list value for this job ticket
gets the value of the return conditions property
sets the return conditions value for this test case
sets the events id
sets the ack messages value for this get ack response
setter for property options
initializes the applet
draw the game background
reset statics to default
prints a line of text to the screen
start papplet as a java program can also be run as an applet
returns the line at the given position
add a listener that will be notified when a contact is
returns true if this shape should be collide with another shape
create a world for this system
register a contact event listener to respond to events between
returns the world bounding box
registers a contact event listener to respond to events between
set the gravity of the body
registers a contact event listener to respond to events between
get the gravity used in world space generation
moves the model along the given vector
rotates the particle a certain amount
initialize the spring list
gets the index of the spring in the given index
closes the playing music
closes the credit music
starts the robot from moving
plays the game
vibrate the hi ts midlet for display
adds a criterion to this junction
returns the parent criteria
returns the alias of the option
add a criterion to this criterions list
add order to the criteria
set the maximum number of results to retrieve
set the first result to be retrieved
returns a list of all records in the database
returns the property name
initialize the database
get the wiki reference for the page
this method retrieves the levenshtein simpairs for the names of the test
gets the tag lists of the data definitions
returns the tag lists that stores the tags in the wikipedia cache
gets the tag lists for the given co occurrence
get all relative tags of a group
returns the number of occurrances of the specified tag
get all relative tags of a group with a given name
returns the group id of the tag
returns the max group id for this group
update the number of occurrances of a specific word
set the representative for a given group
initialize the relationship with not relevant tags
initialize the group representatives
the table is initialized
initialize the table of cluster pairs
initializes the clusters
initializes the table
set not relevant flag
mark the specified tagid
create a new tag group
set a new tag group
inserts a levenshtein relation for the two given objects
returns the query according to the unofficial tag selection
assembles all tag names of a row into a column array
gets the tag lists for a specific cooc
insert a new cluster pair
inserts a cluster in the cluster table
how many tags are relevant
counts the number of occurrances of a specific table
counts the number of wikipedia tags in the database
this method counts the wikipedia tags that are not checked
counts the number of tag groups in the database
returns the number of tag groups relevant for this object
number of groups to display
counts the number of tag sim pairs
counts the clusters
count number of coooc
executes a query on the database
executes the given clause
file was read from previous file
reads the original file name and fills the original contents
subclasses may override this method to do nothing
subclasses may override this method to do nothing
initializes the applet panel
does this player have a land list
adds a css style for a keyword element
add a keyword to the set of keywords for this style
removes a keyword style from the page
remove a keyword from this set of keywords
add a token style to the node
add a token style for the given token type to the table
adds a new token style for a particular token type
the text area has been typed
initializes the applet panel
set the main directory for the application
gets the filename of the history file for the given tag
reset the directory list
returns the mod prefix
sets the mod prefix
returns the name of the main directory
gets the value of the mod dir name property
returns the mod name
appends a comment to the end of this line
get a child with the given id
find the generic object with the denoted name
find the last child with the denoted name
returns a generic list of all the lists with the given name
returns the last list with the given name
get list by id
returns the variable with the given id
returns a string whose variable name is var varname
returns last string with given name
returns a value as int
returns the last value in the variable variable name
returns a double value
returns the last double value
returns a boolean
returns the last boolean
returns the parent of this object
returns the root of the tree
returns the next token in the inline comment block
displays an error message
prints a warning message if any of the files were written
add all the children to the list
add a comment to the header
add a blank line to the multi line comment
set whether or not lists are allowed
whether single tokens are allowed in this token stream
if set to true any lines beginning with a single line comment
whether or not to print timing information
whether or not to print the warning messages
whether or not to recover after recovery
method set warnings are errors
add a trait to the gen
returns the history object of this environment
gets a province history
get the cached ctry history file for the tag
sets the score
sets the number of attempts this player has made
sets the number of attempts this answer has been validated
set the status text
sets the word
enables disables all symbol components
the game has finished
enable or disable text field components
this method is called when the server starts the game
this method is called when the game is started
this method will be called when the game is finished
connects to the server
set the gui observer
disconnect from the server
disconnects from the server
sends a start request to the server
sends start request to server
sends a guess to the server
sends a guess message to the server
receives an answer
receives an answer
the run method of the thread
starts the buffering of the socket
closes the socket
initializes the word to be shown in the view
guesses the word
sends a message to the server
finds the first word with the given guess letter and modifies it
returns true if there were any attempts left
gets the parent class
gets the next value in the sequence
returns the length of the column
returns the report version for the given username
gets the version of a readable user
gets the version of the specified user
disconnect from the server
returns the set1 method of the class
get the current working directory
is the given path a directory
converts the path to a normalised path
find count of all attributes with a certain class
replace all windows and unix with windows
replaces directory names with their urls and separator characters
used by unnormalise to set the working directory
joins the path of the parent directory into the path of the
joins the given path into the given parent path
converts first letter to upper case
join strings into one string
returns the set method for this collection class
returns the value of the key name of the first non null value
get the database id of the hook
returns the meta class that this class is using to define its
indicates whether this value is required
flush the hibernate session
shutdown the service
gets the associated uihook
returns true if there is an auto shutdown signals policy
do in background processing
overrides code filter input stream
overrides code filter input stream
overrides code filter input stream
overrides code filter input stream
remove all status listeners
add a property change listener to be notified about status of this
adds a listener to be notified when a specific status is sent
assert that the current worker is not a swing worker
shutdown this handler
start the task
asserts that the shutdown flag is set
registers the specified listener to receive status events
start the task
initialize the scheduled future task
add an underlying iostream interrupted or closed
cancels the scheduled future object if any
stops the execution of a recurring event
updates the send status in ui
set the delay between each update
this method should be called when the status of the record has changed
close this stream
creates a buffered image
returns the content of the buffer as a string
saves the savedfire data to disk and notifies all listeners
checks if there are any tokens left
returns the send status notification enabled
returns true if status notifications are enabled
set the future object that will be used by this thread
cancels the plugin
checks if is cancelled
this is the method called from the background
shuts down all tasks
automatically shuts down all tasks that have been configured for this
registers a task to the list
unregisters a task from the list
removes all stopped tasks from the list of tasks
invoked when a window is in the process of being closed
validates the data in this container and its subcomponents
checks if data entered by the user is valid
set property resolved
checks if the property was resolved
associates the specified context object with the specified key in this context
returns the context object associated with the given key
factory method for thread local instances
if the base object is a resource bundle return a resource bundle
if the base object is a resource bundle and the property is read only
get the feature descriptors for this resource bundle
constructor for field
constructor to create the object
constructor for the class
adds an el resolver to the list of resolver
return the context that generated this event
sets the component
returns true if the os is mac
returns the mac application
this method is used to initialize the protocol
sets the resource manager
sets the action manager
called when this service is ready to be scheduled
shutdown this service
add a listener to a given property name
report a bound property update to any registered listeners
notifies all listeners of a property change
the exit event of the application is fired
returns the parent resource map
returns the resources dir
returns true if this map contains a mapping for the specified key
configure the window by injecting the root resource map into the
shows the given component in the main frame
shows the given dialog
shows the given frame
checks whether the resource bundle contains the given key
returns value from bundles map using given key
shuts down the application
adds a key value pair to the map
get a string from the underlying resource bundle and format
returns the key code associated with the specified key stroke
returns the application resource map
sets the list of application bundles that should be accessed
get the platform
set the platform
get the main frame for the application
sets the main frame
sets the code foreground task code for this code timer code
returns whether the foreground task is automatically updated when
sets whether the foreground task should be automatically updated when
injects the component properties
set the action proxy
returns the proxy source
sets the proxy source
save the state of the component to the file specified
restore the state of the application to the specified file
returns the resource map
invoked when an action occurs
returns true if the action is enabled
enables or disables the proxy
returns true if the button is selected
sets the selected property for this action
returns a string representation of this object
sets the session state
called when the cancel button is pushed
invoked when the execution of the worker successfully completes
called when the listening thread starts
called when the listening thread ends
called when the thread is interrupted
called when the test fails
called on the event dispatching thread not on the worker thread after
returns a string representation of this object
get the error code
returns a string representation of this exception
gets the type of the failure
returns the exception thrown during conversion if any
returns a string representation of this object
returns a string representation of this code jmethods code
returns the value associated with this node if any
returns the failure that caused the transaction to fail
returns a string representation of the exception
returns a string representation of this object
returns the value of the field
returns a string representing the state of this node
this method is called when the source property of a source
this method is called when a target is changed
sets the detail binding for the given property
returns a string representation of this object
adds a column binding to the table
removes a column binding from the model
gets the string
sets the locale of the resource bundle
converts a string into an object of a given type
if this is set to a table binding this will set the table
set the class to be used for this column
put the given component into the button group
returns the column name
sets the column editable
registers a class and its template for the given tag name
returns the factory that is registered for the given tag name
parses the document and returns a new instance of the
this method is used to link labels to the jlabel
renders the content of the file at the given url
link actions with the mac os system menu bar
renders an object from a resource
renders an object from the given xml file
renders an object from xml
renders the given xml document using the idmap
inserts the content of the container into the given url
inserts the container into the container
inserts the given container into the container
registers a converter to be used when converting the input
set the class loader to be used for instantiating application objects
sets the text
sets the alignment of the text relative to the icon
converts a layout manager element to a layout manager object
returns null since constraints are not required to implement attribute
converts the constraints of the element to an object
converts a layout attribute to a layout manager
converts a layout manager element to a layout manager object
returns the constraint value corresponding to the constraints of the
converts a layout attribute to a layout manager
converts a layout element to a layout manager object
test method for
registers all the layout converter
registers a layout for a particular class
register a layout converter for a layout class
returns the code layout converter code that associates a given
returns the layout converter with the given id
end cashout selling to a given time
sorts the model using tt sorttype tt
find a type by its id
sets the filename
returns a string representation of this list
returns a string representation of the object
deletes the given type from the array
add a type to the array
returns the big bet of the cash
buyin winner wagner
sets the gameid and starts the timer
called when the execution of the program is finished and the
converts the given session to a human readable string
checks if the file exists
create a new directory
relinquishes the given session to a rebuy true if it is necessary
sets the layout which is associated with this panel
set the config file which contains the commands to use
this method sets the configuration file
set the encryption method
sets the nsca password
tell whether this stream is ready to be read
specify the host which we are running on
sets the port
sets the service name default
set to true to use mdchost name for this server
sets the use mdc service name flag to true or false
this method allows to set the mdc service name key
set the mdchost name key for this instance
set the value of this mdchost name
sets the mdc value of the host name key
returns the port
sets the use short hostname flag
returns the service name as string
returns the config file
get the encryption method for this code key sender code
returns the nsca password
specify the level of jamocha mud messages
gets the value of the log4j level debug property
set the log4j level in the form of an integer
returns the log4j level info
specify the level of the log4j level in effect warn
gets the value of the log4j level warn property
specify the log4j level in which error will be displayed
gets the value of the log4j level error property
specify the log4j level in which the log4j repository should be
returns the log4j level fatal
send an event to the nsca
this is the method that will be called when a request is made
returns the header value for the given key
returns the header value for the given key or the given default value
returns the header value for the given key
get the boolean value of the named header or default if not set
get the value of a cookie
set a cookie
dumps the header
decode the line
decode the given key with the given key val
constructs a new xml document
execute a message
initialize the xml configuration
this method is called by the application code to deliver a message to
gets the response
sets the max contemporary urgent requests
notifies the handler that the queue is full
add a new request
add a new request
marks this task as completed
adds a new request to the server
add new request
set the timeout
add a new request
add a new request
add a new request
add a new request
notify that a ajax request is completed
add a file name filter to the list of file filters
remove a file name filter from this file filter
reset the file queue
remove button on click
validates the file name
returns the html currently edited in the editor
sets the html text of the tiny mce editor instance
adds a shortcut to the desktop
adds a window to the desktop
gets the desktop of this code tile grid code
adds a new button
removes the button
removes a shortcut from the desktop
removes window from desktop
computes the width of the taskbar
finishes the current window and makes it minimized
sets the size of the taskbar
restores the window to its original size
start the chain
method for marking the window as the top of the screen
creates and adds a new event to the queue
set the frame to be on top
add a new event to the list of events in the event container
sets the current event body callback
add a new event to the queue after the current event
sets the event container for this event
set this event as a container for an event
updates the task bar width
this method updates the position of the taskbar
updates the height of the task bar
updates the height of the task bar
returns the number of tasks per row in the current row
removes a task bar window from the task bar
this is called when the refresh button is pressed
get position of given task in the task list
set the position and size of given task
sets the coordinates of the given task to the given event
compute the width of tasks that are needed to be resized
compute the height of the task bar
resizes current task list
sets the maximum width of this task bar
sets the max tasks height
sets the min tasks width
sets the min tasks height
returns the tasks height
sets the permissions for the application
executes the delete command with the timestamp timestamp
execute the query and return the result
adds a code message selection listener code to be notified of
refreshes the list
removes a code message selection listener code from being notified of
this method is called if the user tries to log in a fatal
sets the displayed page
returns the new page index
adds a code message index change listener code to be notified of
notifies code page index change listener code s that the page index
removes a code message index change listener code from being notified of
sets the page index
sets the total number of pages
returns a buffered reader for this url
test the invoke method
test case for a reported bug with too many parameters
test method for
test invoke with too little params
test method for
test that an operation that does not exist
tests the create bpelprocess dao
test create process context dao
test method for
test of get instance method of class daofactory
test the delete method
test of update method of class com
test if the bpelprocess dao is instanceof memory bpelprocess dao
tests create process context dao
creates a new bpelprocess
test the delete method
test method for
test replace operation
test that the complex type does not add anything
test for string get property string
test system property
test for string get property string string
test for system properties
set xexee properties
tests the get instance method
test dispatch synchronous
tests get instance by system property
test dispatching a synchronous asynchronous invocation
tests dispatching a null bpelprocess
tests dispatch with no process context set for clarity
run the service
test the undeploy of the bpel axis service
write the configuration out to the specified output stream
gets the name attribute of the bexee provider object
create a new call
hardcodes the endpoint locations url to the actual service description if any
dispatches the given code message code to all registered
create a new partner link with the specified attributes
create a new partner link with the specified attributes
create a partner link with the attributes of the partner link
create a new partner link with the specified attributes
create an correlation set element factory based on the given attributes
returns standard attributes
create a new partner link
creates an instance of the class represented by this builder with
creates an object using the default switch element factory
creates a new bpel case object
create an instance of
adds an instance of receive to the list of receives
create a correlation object
create a correlation pattern
returns the url of the xmltape rules
create an instance of
visits a process
visit an assign sssign
visits a compensate
visits an empty expression
this method will be called when a reply is received
called when a new code flow code is visited
accepts the root activity if it is not null
visits a invoke
visits a flow object
visits the given scope and its activity
creates a new sequence with the given standard attributes
default method to visit a receive
visits a sequence
validate a reply
checks visibility and purity of the given expression
visits the specified sequence
visits the specified terminate statement
visit throw statement
visits a code activity code
called when a link has been visited
visits a partner link
visits the specified variable
checks visibility and purity of the given expression
visit partner links
visit a correlation
visit a correlation pattern
visits a copy
creates a switch
creates a new
get a partner link given its name
retrieves the variable with the specified name
gets the suppress join failure
get the value of a variable
execute the task
set the wsdl file
add a wsdl file set to the list of wsdl files
execute the task
deploy a wsdl file to the server
get the deployment
gets the receive
undeploy a file
get the context of the current process
returns the process
returns the axis engine
create a call object
returns a string representation of the input stream
runs the execution of the code activity code
set the message
executes the task
get the message
get the process context for the given bexee message
sets the given variable to the given map
get bpelprocess from message
returns the map of variables with the given name
returns the set of all variable identifiers
returns the part of the variable part that is associated with the
remove message from group
add an event to this result
get the event for the given activity
return the plot data for this chart
sets the equation
initializes the result
add a new computation unit to the history
this method is called when user wants to keep scrolling
update the computation unit information in the display
set the calculator result display
sets the calculator input text view
no need to make this immutable object because the server is not
an exception occured in the message processing thread
test for jndi
tests a simple data source
test method for
test method for
test that the pool manager works as expected
set whether to keep generated code around
returns the keep generated
returns true if there are no connections in the pool
set the failed flag
destroy the given object
returns the number of entries in the history
sets the replace result
returns the object that was replaced by this one
checks if is result replaced
returns the target exception that was thrown during the invocation of this
returns the object factory used by this context
compares pooled objects by last used time
returns pool info
returns the number of checked out objects
returns the number of objects in the set
main method to run the test
sets the timeout for connections
returns the connection timeout in milliseconds
sets the agent port
register jmx mbean server
sets the domain name
returns the sql statement to execute on the initial connection
request an object out of the pool
gets the value of the initial pool sql property
standard setter for busy standby flag
reports whether the code busy standby code is displayed during
get the transaction isolation level
allows the standby state to specify the loading mode that failed
sets the check interval
gets whether the server allows standby to get
sets the max connection
returns the maximum number of client connections
returns the logger
maximum soft soft
returns whether soft is allowed
returns the remove on exceptions
returns the servers
set the transaction isolation level
sets the weight of this edge to the given weight
returns the transaction isolation level
get datasources of this datasource
sets the is global
binds the name of the current pool in the jndi context
sets the jmx configuration
gets the jmx configuration
returns the object pools
sets the check interval
adds a new object pool info to the list of object pools
set the database name
check an object during a transaction
get database name
sets the factory
sets the sql statement to execute on the initial connection
returns the factory
sets the initial pool sql
sets the initial objects
sets the transaction isolation level
creates a new pooled object
returns the initial objects
cleans the database
gets the value of password
validates the state of the queue manager
close all resources
set whether or not the runtime exception should be removed from the
clean the flow
opens the pool
debug info about the pool
gets the gateway
expires the object from the pooled connection
sets the maximum use time for this attribute
set the sql with a validation query
returns the exception listener
gets the maximum use count attribute of the generic data source object
return the sql with a validation query
sets the user listener
set the timeout for objects in milliseconds
gets the timeout for objects in milliseconds
sets the proxy handler
sets the user listener
returns the proxy handler
sets the proxy interfaces
called when an exception occurs
sets the value of the check sql exception
returns true if the sql exception was thrown during the execution of the
gets the value of the proxy interfaces property
returns the jndi name of the pool
set the value of shrink by
returns the statement proxy for the given statement
cleans all created statements
get the value of shrink by
sets the jdbc pool
closes all open connections
gets the jdbc pool
returns the pool name
sets the sticky
returns a string representation of this pool
returns the data source
unbinds the name specified in the jndi name
returns an enumeration of all the pools
get a jdbc pool
returns a pool
set the user timeout
adds a new object pool to the pool manager
gets the value of the user timeout property
close all the resources
creates a new object pool
creates a new jdbc pool and adds it to the pool manager
handle a connection closed event
removes a pool
terminates this thread
handles a connection error
request a object from the pool
returns a connection to the pool
request a connection to the server
return a connection to the pool
returns a connection to the named database
returns a connection to the pool
returns a connection to the named database
return a pool to the pool
return a pool to the pool
initializes this pool and perform a sql statement
resets the connection with the current transaction isolation level
releases the rule session
returns the number of errors since initialising
the number of warnings reported so far
invokes the ecj compiler with the given arguments
output for verbose option
write the package to the output file
write the package to a file
this is the entry point method
transforms the graph
returns the swizzler that has a target value number embedded in the
returns the first element of the local store for the value number
this method displays the individuals that are contained in this
the swizzler display
insert built aswrange
cleans up the database
perform the optimization methods
prints the trace message if debug is enabled
prints the given optimization to stdout if debugging is set to true
posts a debug message if debug is set
returns the method gen of this class or null if none
returns the control flow graph that is the cfg
returns the control flow graph of this model
returns current context
method to create a new flow graph for the current class
commit all changes since the last commit
called when a label is found
the height of the stack is decreased by the height of the given instruction
note the morphicity of a morpheme
add the number of live methods to the class
set the number of live classes
returns a set of all resolves that are to the given
set the maximum size for inline inline codes
sets the max call depth
set to true to inline exceptions
prints the content of the program to the given writer
print a summary of the class
returns true if the two names are equal
returns the declaring class
returns a string representation of this field
adds a class to the list of classes for this class
returns true if the given object is of the same type and name
returns the immediate subclasses of a given type
returns the super type of the given type
returns a collection of all interfaces implemented by the given type
returns a list of all the types that implement the given type
returns the node type in the extends hierarchy of the given node type
returns the node implements the given node type
transforms all variables excluded from this clause for all constaniated variables
transforms a file of a wildcard type into an array of
print class node to the given writer
prints the implements clause of the class rule
prints a given number of spaces to the print writer
inserts a hole into the code block tree
get the operands of the expression
return the phi associated with a given block
remove phi at block from this control flow graph
add a new phi to the target
add a catch phi reference to the given catch block
add a phi function to the block
return all reals of a block
adds the classes in the given collection to the hierarchy
returns the return address type
returns the set of nodes that are equivalent to code node code
sets the value of the return address property
returns the number of paths in this path
returns the paths of the class
removes all paths contained in the given block
removes the path from the given block
removes all paths from this path
returns the target of the given block
returns the source of the given block or null if none
set the entry block of the subroutine
set the exit block of the subroutine
return the entry of the block
the exit block of the subroutine
prints the contents of this classpath entry to the specified output stream
visits the subroutine or constructor declarations
save the java class information for this class
visits the given ret statement
visits the given switch stmt
visits the given if stmt
visits a goto stmt
verify that the given block has an target and its target
visit a definition expression
returns the stack optimization that is used for this query
returns the label of this handle
visit the children of the tree
returns true if this block dominates the block passed in
returns true if this block postdominates the given block
returns the set of successor v
returns a collection of predicates for a given vertex
prints all the sccs in this graph to the given writer
returns the representative node for the given array of nodes
find the node with the given value
finds the node that contains the given node
returns true if a and b are equiv
union this node with another one
remove the local variable from the current scope
is this variable live at the start of a block
is this field declared as a live at the end of the given
return an iterator over all the intersections of a variable expression in
recursive method to perform numbering
return the node associated with the given key
returns true if there are overlapping ranges in which the given variable
check if a node is contained in this graph
return true if there is an edge from v to w
creates a new local variable of the given type
calculate the weight of a block
retains only the elements in this list that are contained in the
appends all of the elements in the specified collection to the end of
removes a code subroutine code
add an edge to the graph
removes an edge from the graph
cleanup the edge we are about to join the source
removes the physical statements from the phis nodes
initialize the local expressions of each of the locals in this set
remove the statement from the statement list
removes the last statement in the statement list
computes the node ids edge and node edges and leaves the tree
cleanup the database
remove an object from the pool
removes all this collections elements that are also contained in the
retains only the elements in this collection that are contained in the
replaces the element at the specified position in this list with the
remove a row and close the statement
this method is called when an expression info is about to be
reset the later flag of each block of the cfg
this method is called when the end of the visit method is called
copies a block and its instruction into a new block
returns the subroutine label this instruction is a subroutine label
returns the last statement in the statement list
add statement to be executed after the current statement
prints the file to the given writer
add statement to be executed before the current statement
returns true if the expr is a leaf
prepend a statement to the statement expression
checks visibility and purity of the given expression
add a statement to the save stack
prints out the graph
add a statement to the end of the code block
checks visibility and purity of the given expression
throws a class format exception with a message
creates a new stack expression of the given type
visit the children of the tree
create a new stack local expr
create a new local expression of the given type
create a new local expression of the given type
the method generated by this class
returns a string representation of this tree block
invoked when an nop instruction is encountered
sets the leaves of this node
returns the leaves of this predicate
get the operands of the block
set the operand of a block
get the operand of a given block
symbolically executes the corresponding java virtual machine instruction
pushes a ldc instruction onto the stack
sets the given block as having a real use
can this block insert the given block at the given index
set the can be avail property
iterates through the given blocks of code block code
set the later flag
iterates through the given blocks of pdom frontier
add a store expression to the end of the expression
idf a collection of blocks
convenience method to determine if the current event is a forward
set down safe status
symbolically executes the corresponding java virtual machine instruction
cleanup the expression list
returns true if this expression is a def
returns true if the given local expr def is contained in this
adds an operand to the list of operands
returns the operands of this list
sets the operand at the given index
returns the operand at the given index
symbolically executes the corresponding java virtual machine instruction
sets the type of this expression
sets the definition of this expression
copy the fields of another expression into this one
two expressions are equal if their left and right are equal
replaces the expression at the specified position in the stack with
replace the top element of the stack with another expression
look at the top of the stack
pops a word from the expression stack
pushes an expression onto the top of this stack
returns the expr at the specified position in the stack
returns true if the given expression is equal to this one
removes the block with the given key from the graph
is this address a return address
the code negate code method inverts the comparison
sets the expression definition for this variable
returns the operand for the given block
returns the definition of the given expression
returns the children of the block
returns the parent of the given block
set the value number of this node
sets the parent of this node
copy the fields of this node into the given node
add a real expression to this expression
replaces this node with the given node
set the end of the expression
returns the type of the specified block
add a phi block to this block
returns the loop depth of the given block
remove a phi block from this configuration
returns the loop level of the given block
return the phi function of a given block
returns the header of a loop
returns a list of reals of the given block
returns the children of a block
returns the parent of the given block
returns a collection of the frontiers of this block or null if none
returns the immediate children of the given block
returns a string representation of the cfg for debugging
sort the expressions by their key
sort the list of kills by the key
this will print the label and the statement to the console
symbolically executes the corresponding java virtual machine instruction
adds a real to the worklist
add a kill to the cfg
adds a goto statement to the statement list
symbolically executes the corresponding java virtual machine instruction
visits the given ret inst
translates the given java return statement
symbolically executes the corresponding java virtual machine instruction
pushes a new expr onto the stack and sets it as the
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
pushes an array length expr onto the operand stack
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
builds a sequence of bytecodes
symbolically executes the corresponding java virtual machine instruction
visit all of the statements in force children nodes
returns the descriptor object for the given object from the
configure the factory of the given storage type
adds a code to the current list of codes
is called when the user finishes dragging a drag operation
get food property
called when the user starts dragging a drag
called when a drag operation has ended
clears the log
get the mean food code
registers a type with the given name
add a new artifact to the group
returns the artifacts in the group
determines if the repository contains the artifact with the given id
resolves a path to a given artifact in the repository
utility to get the properties file for the artifact
filter overrides by path id
create a new ant project
run an ant test
add the class name to the ant
run an ant test
mark artifacts in the list as conflicted
formats the given paths
returns the file associated with the given key
checks the existence of the quokka file if one exists and if not then return
set the unset flag
executes the task
remove property from project properties
add a sequential task to the if then else task list
add a sequential element to the else part of the if else
execute the task
sets the host
set the host name of the socks server
set the port of the socks server
sets the non proxy hosts
log out the current setting info
execute the task
thread count mutator
sets if site is keepgoing
setter for property list
add a path to the end of the classpath
add a nested path element
sets the begin of the range
sets the index of the last page to be generated
sets the step of the parameter
sets the default case
add a new map to the graph
adds a set of files to be processed
add a fileset to be processed
adds a directory set to the implicit build path
add a directory set
adds a collection to the graph
add an iterator to the graph
adds an object to the graph
configure a proxy for the given project
get the lower version of this version range
add a range to this version set
returns code true code if this interval is lower inclusive
get the highest version of this version range
returns the ranges
gets the value of the is high inclusive property
add a version for an entity
this is a very simple method
returns a clone of the object
invoke the method on the given object with the given parameters
invoke a method
get the value of a field
set the value of a field
saves the properties to the given file
constructs a new object of the given class
load a class
loads a properties object from the given input stream
load the properties from a file
loads a properties file and returns the result as a properties object
copy an input stream to a temporary file
returns the version information in a string
copy the contents of a url to a file
returns a hash code value for this object
creates a url
convert the file to a string
compares this version to another object
write the given string to a file with the given encoding
returns a string representation of the file
returns a string representation of the contents of the file with the
returns a hex representation of the input bytes
returns the message digest as a hex string
return a collection of all artifact ids that supports resolving
creates a directory if it does not exist
gets the id of the artifact
returns an unmodifiable set of path specs for this abstract domain
returns the overrides list
adds a conflict to the list of conflicts
returns the set of conflicts
parse the given string as a shorthand
returns the set of dependencies
returns true if the generated java stub is to be used for
this method will be called to check if the passed artifact id matches
checks if the path id matches the path id of this request
returns the list of licenses
returns the options
returns a set of all paths contained in this resource
compares this to another object
returns true if this node is a descendent node
returns a list of path spec objects that match the conditions
adds a new path to the list of paths
returns the local copy of the file
returns a short string representation of this id
returns the repository dependency
returns the flag indicating if the field is required or
this will return a new repository artifact id that is merged with this
return a short hand representation of this
validates the data in this object
returns a short string representation of this object
returns a string representation of this version identifier
returns the imported from
checks if this artifact id matches the id of the given one
validates the object
checks if this is the default name of a group
converts this group name type to an unversioned id
compares this object with the specified object for order
gets the short description of this code sentence code
get all the known core overrides
returns the locator
returns a list of all property references
load the properties from the given url
read a property
reads the next property
gets the value of this expression
returns the comment lines
replace all property references with the given property provider
replace the value of the specified key with the specified value
check if the given line contains a comma separated list of lines
checks if the object code array code is in the set
sets a property on this object
put the value for the given key in the map
gets the value for the given key
remove the annotation for the given key
returns a set view of the mappings contained in this map
clone this object
add an exclusion pattern
adds a converter to the converter list
returns the annotation with the given key
returns the first converter that can convert the class
returns a string representation of the object
adds a context to the context map
returns the context object associated with the given key
remove the context with the given key
returns a string representation of the given object
serializes a java object to xml
put all the properties from the given annotated properties object into this object
writes the xml representation of the specified object to a writer
converts an element into an instance of a class
reads an object from an xml string
replaces all the properties referenced by this bean with those supplied
evaluates the current reference and returns a code null code
this returns the first child element within this element with the
returns all child elements of this element with the specified name
adds a new element to the root of the dom document
returns the value of the named attribute as a string
writes this exception handler to an xml file
returns the name of this node
creates a new child element of this element with the given name
returns an xml representation of this lf
serializes this code component code to an xml writer
returns the text of this element
evaluates all properties that have been found using the
sets an attribute on the current element
set the attributes for an object
verifies that the given attributes are not already defined
returns a list of files that include the given file set
creates a directory
deletes the given file or directory
initialize a task
returns the string for the given key
converts this file set to a file set
converts the given file to a path
normalise a file
returns the int value of the key in the configuration
creates a file set
create a file list
create a nested dir set element
create a zipfileset object
returns the long value of the key in the configuration
creates a copy task to copy a task
sets the resources
initialise project properties if they havent been set
get the target directory for the project
get the directory in which the project will be generated
get the directory for resources
accessor for the utils property
returns the boolean value associated with the given key
getter for property project
the properties of the property
returns the logger
returns a boolean indicating whether the named target is enabled
returns a path object for a key
returns the short name of the target
returns the project properties
clear all properties of the project
answer the resource prefix for the given string or null if the resource
get the file associated with the given key
returns a resource collection for the given key
return a copy of this properties with the suffix
a string representation of this map
verify the keys
writes the output of the process to the log
find all jui files in source dir
strips out the package name from the jui file name
manage the package name of juic commands
returns true if the queue is full
returns the sum of this time and tt
substracts another time from this time
compare this time to another time
returns the server object
sets the server to communicate with
getter for property bandwidth
sends the packet to the peer
clears the interface
used to mark the first element in the packet arrival stack
returns the number of interfaces
returns the routing table
resets the results collected during the simulation
returns true if the packet queue is full
compares this object with the specified object for order
adds a new route to the routing table
removes the specified route interface from the routing table
returns the server interface for a specific result
get the probability of the route
removes and returns the first event from this queue
schedules a new event to be executed by this agent
returns the priority load
returns the rate at which this job is to be running
returns the minimum rate a unit can have before it was achieved
returns the maximum priority of the load
get the range of this code default location renderer code
get the next double value from the range
this method adds a serviced packets
add rejected packet
adds rejected packets to the map
get the server object
get the time when the execution of the task ends
returns the type of the generator
get lower flow id range
get higher flow id
returns the interval between updates
get mean time of this code time ticks code object
get variance of the samples
adds a server tab
sets the progress bar to the specified value
create the tab folder and add it to the shell
prints a string to the console if debugging is enabled
print the string s to stdout if the debug flag is set
set service start time
returns the size in bytes of the file
get service start time
returns the flow identifier
returns the maximum size of the cache in bytes
returns the flow identifier of this element
return the size of this file
the finish tag for this result
set the finish tag
remove the first packet from the list
removes the first flow packet received from the node
returns true if there are no more jobs in the queue
returns the queue that is used for this job
returns the local host
sets the local host
clears the interface
clear the results
updates the time for the last packet departed
returns the mbac for this controller
compares the packet timestamped with the specified packet
returns true if the identifiers are equal
returns the number of packets in the packet queue
returns server interface
checks if is empty
the run method for this thread
returns the priority load
returns true if the queue is full
returns the maximum priority a load can have before it was applied
returns the first packet in the packet queue
returns true if the queue is full
puts a packet into the fifo queue
removes the first packet from the fifo waiting if present
peeks at the first packet in the fifo queue
checks if the fifo is empty
returns the number of fifos in the queue
set the maximum size of the packet
get the load
add a serviced packets
this method initializes generate graphs dialog
add a packet that was rejected so far
get the flow list
return the average number of rejected packets
returns the average time it took to send a packet
how many measurements are taken into account
return the number of packets that were rejected during the last parse
get the number of packets sent by the daemon to the service
returns the number of packets in the local serviced
get the priority load
saves the server configuration to xml
get the start time of the code action code
get the ending time of this code task code
gets the gaussian number attribute of the random variable object
returns the first packet in the queue for a flow
adds the specified number of bytes to the end of the file
returns true if the fifo is full
returns the number of free bytes in the buffer
puts a packet into the fifo queue
remove the first packet
loads the server configuration
returns the length of the list
registers a new flow to this flow
unregister a flow
returns true if the given flow identifier is in this policy
returns true if the given flow is protected
returns the flow with the given id
returns the size of this object in bytes
removes all flows
prints all flows in the store
get the most backlogged flow
run the splash screen
find a server by its name in a vector
sets the flow identifier
returns the probablity of this specickness variable
sets the probablity of this point
get maximum number of traffic types supported by this network
create the tab folder and add it to the shell
set maximum traffic types
returns the current routing table
sets the routing table
getter for property server
get the ith server
returns an iterator over the elements in this collection
returns tt true tt if this collection contains no elements
returns tt true tt if this collection contains the specified element
returns the number of servers in the server pool
adds a server to the list of servers
ensures that this collection contains the specified element optional
removes the server at the specified index
removes a server from the list of servers
clears the server list
setter for property server
sets the current value of the real time clock
set the task list
return a string representing a date
return feed document of the feed
get the document path
returns the version of this converter
adds an attribute to the element
add extra elements to the channel element
adds an attribute to the element
convert a rfc822 date string to a java date object
test method for
tests adding an item in the middle of the list
adds the given item at the end of the list
returns the text content of the element publisher
adds an item at the specified position
inserts an item at the beginning of the list
convert a string date into a date object
lookup news entity facade
lookup news service
lookup news service for the facade
check if form is submitted
test of process request method of class org
sets the value of the entry to the given value
v is atomic
verify account by user name and password
verify account creation and registration
verifies if the first question of the account matches the current question
shows the msg
shows the password
setter for property account
returns the regtime
returns the passwordrecovery url
set the account facade that this supplier uses
gets the value of the confirmanswer property
checks whether the given user is redundantid
set the accountid
add an account to the question
returns the account facade
sets the signup url
get the account facade
set the account facade that this account belongs to
sets the registry url
gets the wikibox
sets the value of the specified key
sets the edited status of the receiver
sets the wikibox
sets the initial render context for this filter
gets the wikibox
set the wikibox object associated with this page
set the filter uri used for filtering the output of the output
sets the number of wikibox rows
initializes the render engine if it is not initialized yet
returns the html code
returns the filter uri
gets the number of rows in the outer wikibox
sets the render engine to be used by this engine
sets the macro uri
sets the content of this element
sets the value
sets the inner wikibox rows
returns the macro uri
get the render engine
sets the value of this parameter
gets the inner wikibox rows
gets the wikibox
returns the value of this field
sets the edited flag
returns the value in html format
returns the text as the tooltip
add the wikibutton child element
sets the image for this chart
sets the rows
sets the postfix
returns true if this cell is multiline
sets the prefix
sets the pattern to be used by this rule
sets the value of sampletext
sets the regular expression pattern to match in the values
sets the text as the tooltip
sets the value
gets the value attribute of the mfstring object
gets the sections for this executable
sets the postfix
sets the prefix string
sets the sampletext
cleans the object name
gets the nested name specification for a given object name
gets the nested object name specification
builds an object name
register a member
unregister a member
the refresh method uses the persistent object to refresh the
get the mbean info for this class
returns the object name for the given object name specification
called when a record is updated
backup one field
backup the request
processes an event entry
this method is not used by the application programmer
returns true if this executor is shut down
this method returns true if the thread is terminated
read data from the input stream into the given buffer
indicates if this is a client call
sets the class name
sets the name of the class to use for creating the map store
get the write delay seconds
set the write delay seconds
enables disables the configuration
sets the implementation
sets the object factory implementation to use for creating new map objects
returns the factory implementation
returns the value indexed
set the value indexed property
returns true if the value is cached
sets whether or not this map should store the value of the cache
sets the number of times the backup file was rebuilt
set the default time to live for a map configuration
sets the maximum idle time in seconds
get map store config
set map store config
adds an interface to this class
clears all the interfaces stored in this set
sets the interfaces
add a new executor config to the set
returns executor configuration for the given name
add a semaphore configuration
returns the semaphore configuration
returns the cluster that originated this event
gets the old value
get the event type
test adding and removing a listener
test with two different arguments
returns the http session
returns the value of the attribute with the given name
removes a cluster wide distributed attribute
the activate method is called by the server to indicate that no
perform the internal processing required to passivate
the id of a hazelcast cluster
return an code enumeration code of code string code objects
get a new hazelcast session
invalidate the item
get the element count on disk
returns a map of the cache values
get the element count on disk
returns the maximum time interval in seconds between client requests
sets the id of the parent state
set the parent instance
cancels this invoker
returns true if all transfers are complete
run the timer
returns the current speed of this task
returns the current progress of the task
starts the thread
returns true if tranfer operation is complete
delete the file and put it to the local storage
starts the proxy
starts my proxy login
get my proxy status
starts my proxy login
this is the run method for the thread that runs the client
returns true if the transfer is complete
login to a remote host
get my proxy status
this method will start a thread to transfer the login data from the
uploads the login form to the server
returns the login status
return the transfer status
returns the upload clients status
starts a new login thread that will be used to log in to
check if the upload is ready
return true if a transfer is ready for this host
this method will be called from the server to send a client login
uploads the login form to the server
getter for property first transfer
use this method to find out if the upload is a first
returns the login status
update the client
add a command to the transfer queue
check if there are still unexecuted and run
return the transfer client status
start a new transfer
return true if a transfer is ready for this host
checks if a transfer is in progress
returns the transfer name
the transfer speed in d bm
the transfer progress
changes the directory on the server
returns the current directory
go up directory
close uploading the web client
update the client state
add a file to the queue
check if there are still unwritten packets available to send them
compare two jobs by their job names
is the current transfer in progress
this method changes a directory
this method returns the current working directory
this method is used to go up a directory
initialize the value of this property using the adapted value model
fire value change event source this
called when the value of the adapted value changes
notifies all registered listeners that the value has changed
set the object that is used to handle changes in the value
returns the current value change detector
returns whether or not the given objects are changed
sets a new buffered value and unsets it as a value
called when the value of the wrapped value changed
commits the changes to the underlying model
returns the value to be committed
called when the dialog is closed
updates the buffering status
converts the specified object to an instance of the destination class
convert the specified input object into an output object of the specified class
convert the given object to the required type
returns the number of messages in this folder
returns 0 since this is a message type
returns the number of messages in the current case that the
always returns an empty set
always returns an empty set
always returns an empty set
clear all messages from this instance
sets the user metadata associated with the specified key
clears all user metadata items
retrieves the value for the given key
test of get collection method of class com
test of set collection method of class org
returns the next unique id
adds a code resource code instance to the set
returns a resource containing an xml representation of all resources of all
returns the number of elements contained in the set
removes the code resource code instance stored at code index code from the
test of accepts uri method of class org
creates a transport object
clear the namespace mappings for a service
gets the value of transport id
sets the transport id
creates a transport object for the given object
sets the content of the code resource code using a dom
get the collection from the session
test of rejects uri method of class org
closes the collection
gets the value of root node name
sets the root node name value for this application status
creates a new unique id for the collection from the provided transport
removes a service from the namespace
initialize the servlet endpoint
sets the namespace uri for the service
sets the collection service
returns a child collection from the session with the specified name
sets the content for this resource
returns the number of child collections under this
returns the content of the url handler
accept anything that starts with uri
gets the name of the specified transport
not implemented returns null
sets the content of this resource as a dom node
test of get collection method of class org
returns the parent collection for the given collection and session
returns the value of the given property
sets the property attribute of the service object
set the url spec of the web application
returns the code resource code instance stored under the given id
test of get conformance level method of class org
test of query method of class org
get xml db conformance level for this database
getter method for reloadable
returns the number of resources currently stored in this collection or 0
gathers the parameters for the test case
test of get name method of class org
returns a service from the database
gathers the parameters for the test case
get name returns the name of this database
returns true if the collection is open
test of add resource method of class org
test of close method of class org
test of clear method of class com
gathers the parameters for the test case
stores the provided resource into the database
test of get document id method of class org
test of get iterator method of class com
test of get resource type method of class org
test of clear namespaces method of class org
test of get members as resource method of class com
removes a resource from the collection
test of create id method of class org
test of set content as dom method of class com
test of get resource method of class com
test of set content as sax method of class com
test of get name method of class com
closes all collections
test of get size method of class com
test of create resource method of class org
test of get namespace method of class org
test of remove resource method of class org
test of get property method of class com
test of get child collection method of class org
test of get version method of class org
gets the collection password
sets the collection password
test of query method of class org
gathers the parameters for the test case
create a new unique id for the given transport
test of get child collection count method of class org
gets the collection user name
sets the collection user name
test of has more resources method of class org
returns the uri of the collection that contains the metadata
test of query resource method of class org
test of get parent collection method of class org
sets the uri of the collection that contains the metadata for this
test of remove namespace method of class org
returns the name of the document element
test of get resource method of class org
sets the document element name
gets the x path query service version
test of set collection method of class org
sets the x path query service version
test of get resource count method of class org
test of set namespace method of class org
gets the value of num query results
test of set property method of class org
sets the number of query results
test of close method of class org
test of get xpath query service method of class org
test of create id method of class com
test of accepts uri method of class org
test of get services method of class org
test of accepts uri method of class db accepts
test of get collection method of class org
test of get collection method of class org
test of get conformance level method of class org
test of get child collection method of class com
test of is open method of class org
test of get name method of class org
test of get property method of class teambob
set the endpoint address for the specified port name
test of set property method of class teambob
test of get child collection count method of class com
test of get name method of class com
test of list child collections method of class org
test of get parent collection method of class com
returns vendor error code
sets the vendor error code value for this exception
test of list resources method of class org
test of get property method of class com
returns transport id
modify a resource in the collection
insert a record into the collection
test of get resource method of class com
sets the uri of the collection that contains the metadata for this
test of store resource method of class org
test of get resource count method of class org
get the collection from the database
gets the value of collection manager
removes all namespace mappings stored in the internal namespace map
returns the uri string associated with the given prefix
setter for property resource transport
removes the namespace mapping associated with code prefix code from
get the name of the service implementation
sets the namespace mapping for this resource
not implemented yet
returns the resource type for this resource
returns the content from the database
returns the version number for this implementation
returns the unique id for this resource
not yet implemented
not yet implemented
not implemented yet
returns the unique document id for this document
test of get services method of class com
synchronize the content of this document with the underlying xml document
test of clear method of class org
test of is open method of class org
close the collection
returns true if the specified uri is accepted by this
returns the conformance level of the implementation
test of list child collections method of class org
creates a new unique id within the context of the code collection code
returns the name associated with the parent collection object
test of list resources method of class org
adds the code resource code to the database
clears the resource set
returns the number of elements in this collection
not supported in this implementation
returns the number of child collections under this
test of remove resource method of class com
removes the resource located at code index code from the set
test of set property method of class com
test of default method of class com
test of get size method of class org
returns the name associated with this collection
tests that a collection can be added to the database
test the database accepts uri collection name
test of accepts uri method of class org
not implemented yet
test of get names method of class com
gets the uri of the remote database
test of get conformance level method of class database
test of remove resource method of class org
sets the uri of the remote database
test of set conformance level method of class com
test of get collection method of class com
returns the number of resources currently stored in this collection or 0
test of get id method of class com
test of set id method of class com
test of remove namespace method of class org
test of next resource method of class com
test of has more resources method of class com
returns true if this collection is open
test of get namespace method of class org
test of get dom handler method of class com
test of set collection method of class org
test of set dom handler method of class resource handler
test of get saxfeature method of class resource
test of set property method of class com
test of set namespace method of class org
test of set content as dom method of class com
test of get resource method of class com
test of get content as sax method of class resource
test of query resource method of class org
test of set resource method of class org
test of set saxfeature method of class resource
test of get content as domtext method of class org
test of set content as sax method of class resource
test of get version method of class org
test of get document id method of class com
test of set resource as node method of class org
test of get name method of class xpath query service impl
test of get content as dom method of class com
test of get resource as document method of class org
test of get url method of class org
test of clear namespaces method of class dhmp
test of set url method of class org
test of get url string method of class org
test of get saxfeature method of class resource
test of get document id method of class org
test of get resource as document method of class com
test of set url string method of class url handler
test of set resource as node method of class com
test of get resource type method of class org
test of get time between checks method of class com
test of set content as dom method of class resource
test of get content as sax method of class resource set resource
test of set time between checks method of class org
test of set saxfeature method of class resource
test of set content as sax method of class com
test of get document id method of class resource
test of add resource method of class resource set
test of remove resource method of class com
test of get size method of class com
test of set content as domtext method of class org
test get child collection
test of get resource method of class com
test of get resource method of class com
this method is not supported for this implementation
test of get members as resource method of class com
sets the content of the code resource code as a dom node
test of get iterator method of class com
sets the collection that holds this property
test of store resource method of class generic handler
this method is not supported by this implementation
adds a code resource code instance to the set
test of remove resource method of class com
removes the resource located at code index code from the set
test of clear namespaces method of class org
returns the content of the code resource code as a dom node
returns the number of resources contained in the set
test of list resources method of class com
sets the content for this resource
convert a long value to an int value
get the service name
returns the code resource code instance stored at the index specified
returns the content of the message
test of close method of class com
set a property value
returns an iterator over all code resource code instances stored in the set
test of create id method of class com
sets the resource
adds a collection to the set
test of create resource method of class com
returns true if the dispatcher can handle the given uri
not implemented yet
gets the value of conformance level
returns the code resource code instance stored under the given id
test of get child collection count method of class com
sets the conformance level of the result
set the url
returns the code collection code instance for the requested collection uri
stores the provided resource into the database
returns the url string
returns the next code resource code instance in the iterator
removes the code resource code from the database
test of get name method of class xmldb
returns true as long as there are still more resources to be iterated
this method is used to close the appender
set the url string
creates a new resource id
getter for property millis between checks
test of set name method of class com
not implemented yet
setter for property millis between checks
sets the content of this resource as a dom node
not yet implemented
not yet implemented
test of get parent collection method of class com
test of query method of class org
this method is not supported by this implementation
test of get resource count method of class com
returns the id for this document
returns the number of resources in this group
returns the content of this document as a dom node
test the get service method
sets the content for this resource
returns a service from the database with the specified name and version
returns the content of the document as a dom object
test the get services method
test of query resource method of class org
test of is open method of class scio
test of list child collections method of class com
initialize the servlet endpoint
p destroy the database connection object
returns true if the named collection is available
this will convert the map to a string representation
return a string representing a document
return a string representing a doc type
return a string representing an element
return a string representing a list of nodes
return a string representing a cdata node
return a string representing a text node
return a string representing a comment
return a string representing a pi
return a string representing an entity
this will append character content to whatever content already
calculates a hash code for this object
compares two similarity scores
returns the score of the two elements of the two variants
reduce the size of the list to the maximum of the list
returns code true code if the result of the test is
checks whether a given import statement is needed
returns the next line of the file
calculates the function of the vector x
todo this method should be able to set the values of the class
answers true if c is a sub class of this class
set the classloader to use for loading classes
checks if the specified class is a superclass of the specified class
return the class loader used by this classloader
checks if the class specified in the code super class name code
this method loads all the methods in the given class into the map
returns true if this class implements the given interface
returns true if the passed class implements the interface
convert the package name to the packege name
replace the first occurrence of a given string with another string
replaces all occurrences of a given string with another string
returns the difference between the current element and this one
create a new context to hold a key board for a given locale
adds a new sub sequence to the match
compares this character sequence to the specified character
returns the length of the sub sequence
get the base sequence index
return the compare sequence index of this object
returns the character sequence of this token
returns an integer representing the similarity of the given word
returns the integer value of the lower case character in the given word
adds word to dictionary
indicates if this set contains a specified word
print statistics about the word
returns a string of the given length containing only the padding
compares two similarity scores
save a file to disk
setter for organization sets
getter for lex gets
setter for lex sets
setter for conjugation 1 sets
setter for conjugation 2 sets
setter for pronunciation sets
call a remote method on the server
generate a line from an rmi registry service
copies all of the mappings from the specified map to this one
obtain a line from an rmi registry endpoint
this method is used to create an code inet socket address code object
checks if registry is running
sends a message to a specific client
returns the current link counter
returns the name of the object class
get the module object
move checked module to the given name
this method starts the application server process
remove module from the list of loaded modules
getter for property instance class
this method checks if the module name already exists
adds the map values of the given configuration to the map
set the instance class
returns the module hash for the given module name
checks if a dependence is in the list of dependences
extract the tail of the segment
parses the text into a graph
on hit by bullet what to do when youre hit by a bullet
returns the code dav locator factory code
returns the css class for a given message
returns the icon to use for a given message
returns a new feedback messages model for the current session
create a new message display component
creates a new repository instance
returns the entered password
get the remember me value
convenience method to retrieve the email
makes the email persistent
returns the bricket feedback panel for the given page
set app controller
adds an upload iframe to the browsers frame map
add callback for uploaded events to the browser
notifies the observers of the current object
notifies the change of the current object
returns a new object and updates the current object
returns the edit mode
adds a column
adds data provider to the
add a new list property
add boolean property
add a boolean property
sets the number of rows
reads the sgipresponse from the input stream
handles a compare connect response from a cmpp 3
listener for the response to the server
executes the command
returns the time in milliseconds to wait for a response from the server
sets the timeout in milliseconds for receiving a packet reply packets
returns the single instance creating one if its the
returns a connection to the named pool
loads properties and initializes the instance with its values
loads and registers all jdbc drivers
returns the number of docking matches
gets the structural error
returns the node type id for a given node id
reads a variable from the xml node
returns the reference to the cost function with the specified id
get the cost name at index i
gets the costs of a cost
get the frame container that is used to dock the graph
returns the default repairer used by the docking panel
get the name of the constraint
returns the costs of the cost of the current solution
returns the number of constraint instances
get the default test graph repairer
getter for property type id
returns the repairer for this scgraph
clear all instances from the data store
this method is called when a player has improvement
sets the node choose mode
the method code initialize code initializes the cost type
marks an instance for removal
returns all nodes of a given type
mark all instances
returns the number of instances of this constraint
removes an instance from the list of structural constraints
sets the number of random node types
removes all instances from the set of structural constraint instances
updates the costs of all structural constraints in all
set the create density for random create density
gets the costs of an entity
returns the database object id for the type
returns the set of code node code s that represent the
creates a test graph instance
returns the number of code sc instance code s in this
mark the graph as docking
returns the collection of all structural constraints in the type
check if the given interpretation is already in the graph
test if graph is invalid
unmarks the graph
chooses a test graph by probing the probability of the last repaired
returns the structural costs of all the constraints
this method is used to destroy the docking graph
checks if the actual test graphs and structural costs are equal
gets the current timing
returns the list of interpreted nodes
adds the given node to the list of nodes
add the main part to the graph
adds an nac to the list of nacs
adds a condition to the list of pacmans
determines whether the given node is contained in this set
reset the interpretations for each sublayout
check if the given node is a node with an interpretation
add a arbitrary node to the graph
adds a collection of nodes to the graph
clear the current graph
checks if the given collection contains any of the nodes in the graph
removes all nodes of the specified type from the container
returns the number of elements in this container
sort the nodes by frequency
return the number of type in the term
compares two structural constraints
removes all nodes and reductions from this graph
clear all instance types
clears all data stored in this code data structure code
code set auxiliary node data code sets the auxiliary node data
clear all type definition instances
get the auxiliary node data
switches graph search sort order on or off
load structral constraints from a file
load the structral constraints
removes the node code n code from the graph and sets the interpretation
print the status of docking
gets the graph part
prints structural constraints for each node in the tree
registers the deleted node
define interpretation for repair node
register a new node as expanded and selected
set the link to the graph part
add a new node to the list of new nodes
gets the node that this link points to
add a node to the list of nodes connected to this node
remove a random element from the repair plan
add a node to the linked from list
removes a structural constraint from the set
return true if the given node is an external interpretation
returns true if repairs of this repository
switches off repair mode
connects this node to another node in the graph
switches on repair shop
do all edges have a non determinism that is already in the
returns true if all nodes in the tree are checked and all nodes
find the next embedding
find one embedding
creates a collection of
returns true if this reference has a link
return true if the constraint with the given name exists
returns the number of con assignments
updates the costs for all structural constraints in the system
sets the interpretations of the graph part to the given value
check if all the interpretations are defined
put the node in the parse tree
reset the ast tree for all non static nodes in the tree
returns the number of nodes in this list
returns a string representation of this object
peeks at the next interpretation
returns a copy of all interpretations that have been created in this
returns an iterator that contains all the graphs connected to this graph
returns true since this part is the connecting part of a dot
returns the stack of frames that are currently being fitting
get the frame used to draw the inner graph
returns a copy of the vector of nodes that are linked to this
gets the node with interpretation for this package
reset the computed interpretation by removing all possible assignments
returns a vector containing all the nodes of this graph
gets the one connected graph part
returns true if part is connected
get the graph part frame
this method is not supported
reset the code interpretation code to code extern code
adds a new connecting pacpart to the list of the docking pacing
this method creates a new edge
add the given node to the interpreters list
this method is not implemented
removes all assignments that may be accumulated in the graph
check the frame
does this graph contain the given node
copy the interpretations from the source to this one
tests if the given connections node has already been interpretted
return true if the graph part exist in the current fitting frame
returns true if this frame is a frame
find the next embedding
find one embedding
returns whether there are more con assignments to be done
tries to find one embedding
indicates whether there are more than one possible embeddings
returns the number of connected parts
returns true if this part contains the given interpretation
returns the next connection with a given edge
prints the nodes of the main part
reset the interpretations to the default value
reset the interpretations
checks if the given node is linked from any of the nodes
resets the intersection
perform ast node interpretation
finds the node whose seed is the current node
removes all the possible con assignments
find one embedding
tests if the graph contains an instance
returns actual size of the actual match
returns all interpretations of this node
gets the actual size of the actual interpretation
returns all interpretations of all parts of this subgraph
returns a vector containing all the parts in the database
gets the minimum number of elements in a subgraph
copies all nodes and edges of the given collection of
returns the node with the given interpretation or null if none
returns a collection of all parts that are notconnected by any
returns a copy of all the interpretations of this graph
adds the node with interpretation to the graph
add a part to the list of parts that this subgraph
determines if all nodes in the search tree are checked
get the frame for the inner graph
copies all interpretations from source to dest
find all parts that are not part of the subgraph
returns a set of all inner graph links in a given part
this method is called when the xpath handler matches the
returns the number of parts in this file
returns the set of inner graph link nodes
reset all interpretations of all subgraphs
reset all interpretations extern to their default value
returns an iterator over all inner graph link nodes
checks if the nodes in the given set have been deleted
check if all parts of the subgraph are valid
checks the reduced nodes
returns an iterator over the graph parts making up this composite
get an iterator over the intersecting parts
add the node to the graph and its interactions
returns the minimum number of nodes that a current match
determine if this graph contains the given interpretation
gets the node with the given interpretation
find one embedding without other part nodes
checks whether the given node is interpreted by this template
resets the intersection
determines if this set contains one of the given interpretations
return the first structural constraint graph part
flushes all currently used interpretations for this subgraph and all
sets the first seed interpretation that will be used to generate a new random
sets the next alternative seeds
check if a node is a seed interpretation node
returns true if the part is connected and false if not
gets the seed interpretations attribute of the seed object
remove the actual seed interpretation from the list of used seed
sets whether new seeds should be on or off
returns true if new seeds are on
finds the next embedding
finds the next embedding with the current seed
finds one embedding with the seed
find one embedding without other part nodes
the number of seed interpretations that were added to this instance
register a seed node
register a seed interpretation node
gets the seed node
remove a seed interpretation node
test that deletes all the seeds that have been deleted
returns the raw specification of nodes in this assignment
test for a collection of nodes that have been deleted from the tree
gets the value of the custom instance class name property
add a new edge to this graph
returns a new instance of a
adds edge to set
returns a sctdocking graph with all docking application
returns a test graph types container containing all the test graphs
add an edge to the list of edges
adds the node with an interpretation to the graph
adds a link between two subgraphs
add a node to the graph
adds a new variable to the node
start the actual graph docking
returns true if any nodes are searched
begin a subgraph
returns true if the given interpretation already exists in the scgraph
creates a subgraph and adds it to the actual subgraph list
starts a test
recursive method to get all edges from a subgraph
creates a test graph with the given parameters
connected main parts
tries to find one embedding seeds
computes the main parts linked to subgraph and its subg number
tries to find one embedding node using search seed
returns true if there are any inner graph links in this graph
finds the subgraph in the given node and returns it
returns true if there are inter graph links in this graph
get the connected main part frame
return the set of inner graph link nodes
this method should be overridden by subclasses to process the messages that match
checks if there are more records to fetch
tests if the connection to the server gives the right input
tests if the given frame is a graph and not an ac
tests if the given part is a subgraph of the main frame
returns the application condition of this workflow
test if one part is ac
tests if a given part is ac
returns the whole set of frames in this file
set the interpretations of all frames
returns a collection of the parts that are fitting
returns the number of parts that are connected to the inner graph
add all the graph parts in the collection to the model
clear all frame hashes
check if a frame is already in the cache
checks if the given set of nodes contain any of the nodes
removes this instance from all instances in the pool
returns an iterator over the frames in this tag
remove a frame from the cache
remove all graph parts from the set
reset the interpretations of all graph parts
returns the number of frames in this tag
checks if any of the deleted nodes are still deleted
adds an ac to the list of nacs
returns true if this fragment contains the given interpretation
registers alternative seeds
sets the main parts of the nac
returns a map of all interpreted nodes
get the main part of the subgraph
returns the error associated with the minimum match
gets the number of errors encountered during the
sets the instance of a acoustic model
prints list of nodes
returns true if this is a type
returns a vector of all the uninterpreted nodes
returns the valid status of this object
checks if the given nac is valid
copy all the interpretations from the given graph to this one
register a node as a linked node of this node
reset the interpretations
test the graph
compute the error for the nacs
find all parts that are not part of the subgraph
find the biggest embedding
find the next embedding
removes edge from the list of interpreted edges
this method is called when the condition is satisfied
this method is called when interpretations are added or removed
test the graph using the pre conditions
test if a given frame is the one for the ac graph
returns the minimum number of matches before the last error
reset the status of this nac error
test if all parts of a nac are ac only ac
this method is called when the xpath handler matches the
check the frame
returns a map of all the test graphs that are invalid
sets the scmanagement for all the test graphs in this group
gets the structural costs of an edge
create a test graph instance from the test graph key
adds a test graph to the list of test graphs
compare two nodes
returns the connected node given a node
gets the direction of the edge from the node
returns the edge id
gets the from node
the code interpretation code is not connected by a
getter for the interpretation of this entry
resets the interpretations of all nodes and edges to their original state
get other node from this edge
checks if the node is connected
returns true if the given node is the same type as this node
gets the second node in the edge
indicates if the first and second interpretations are defined
clear all queues
return true if there are no interpretations in this set
pushes a new code graph part code onto the stack
push all queue entries of the given collection into this
marks all nodes
unmarks all nodes in the tree
get all frames that fitted to this one
adds an ac to the list of candidates for this context
reset the interpretations on the external nodes
adds a pacpart type to the list of all pacpart interfaces
check the frame for matches
checks if the given part is valid
nodes that have a fitting node directly in the graph part
checks if a frame exists
resets the intersection
try to process the given node and its children
the number of nodes in the graph
find one embedding node without checked
checks if all nodes of the given set are ac
checks if subgraphs of the given pacpart has been moved
tests the resource
copy the interpretations from another graph part
registers the application as a missing match for the given condition type
copies all interpretations from source to this one
copy the interpretations from source to this frame
registers a new type of match
sorts the nodes by frequency
test if all nodes in a subgraph are ac
checks if all parts of this nac are connected to the same nac
checks if there are any nodes in the set which are not
removes a match from the set
returns all nodes searched by the specified node type
returns true if there is a main part thats not yet
checks if a part is currently connected to a frame
try to interpretation with the given node
check if the frames that fitting the given part exist
checks if there are fitting main parts of the inner graph
returns true if there are any matches in the current frame
find one new matching using the main part
finds one pacpart which has to be embedded into other
handle the search with a given validity
this method is called if the main part of the match is
checks if the given part is connected to this pacing program
this method is called whenever the robot enters a match
returns a collection of graph instances that are currently being used
find the first seed node
clears all the data
create an inter graph frames part
returns a hash code value for the object
returns true if there are any instances of this class
register all the improved main part matches in the match
adds the missing main part to the given queue
print out all the graph part matches
draws the main parts of the docking layout
removes an instance from the set of instances
gets the value of the hash code property
sets the instance constraint
set the type frames for this part
get the frame container of the type
adds a new condition part to the application condition
set the type of the graph to be valid
checks the main parts of the graph
checks if all the pacs are removed
destroys the main part of the graph
returns the auxiliary element for the given data node
returns the node in registry where to fit the given node type id
returns the node in the graph that has been fitted into the edge
set the source node
destroys a node in the graph
destroys nacs of the test graph
starts the timer
registers a new node in the main node source
time up test
if the node is a variable node or else add it to the
return the edge at the given index
number of edges in embedding
sets the repair embedding example
this method is responsible to display the sub hierarchy of a select query
set the repair plan for the sub task
gets repair plan that is a super plan
adds an embedding edge to the graph at the given position
adds a new consent line breakdown element to the list of
adds a succeeding offer to the list of pending jobs from
if the given edge is in the graph then it returns true
sets a new node chooser interface
removes an existing plan from the list of those that are
executes a sub query from generic cache
gets the node chooser attribute of the select tree object
removes the all of the edge that cannot be repaired
returns the node for the given key
gets the real node corresponding to a node in the model
creates the repair embedding for the given list of data objects
this method is responsible to display the sub hierarchy of a select query
if there is no repair plan registers any new entries
add a new edge to the list of connected nodes
add a new node to the list of matched nodes
unregisters all i pattern pattern change listeners
returns true if the given node is a direction node
returns the other node of this edge
returns the auxiliary element data of the node
returns the node that is currently fitting
resets the addition of a node to the removed nodes list
sets the source node for the main interface
sets a node chooser for the graph
returns the edge that was added to the node
the node was replaced by a node in the list of nodes
adds an edge to the graph
add a node to the graph
mark each node as being moved up
register a new node
set all edges to be added and removed
set all edges removed from repair plan
remove a node from the graph
this method is used by a subclass to set the actual edge
removes an edge from the repair plan
called when an edge has been removed from the graph
start timer for repair
time up test
set the actual created node
get the next node to be processed and return
mark the given node as being added
adds edge to the nodes in the node queue
enter the waiting for interpretation
mark a node as removed
repaired the edge in the graph part
returns the node that is currently fitting
sets the main node
sets the node that is replaced by another one
registers a new node in the ast
if the graph is not a node or an edge then add it
returns the auxiliary node data for a node
sets the source node for the main interface
removes a node or else edge from the graph
checks if a node still exists in the gsc hierarchy
repairs the data structure
clears all the internal data structures
reset the edge added to the repair plan
reset the cached information about the edges removed from the specified
resets the addition of a new edge
called when a node has been removed
resets the addition of a node to the added nodes
resets the time in milliseconds to the current time
loads a scp from a file
loads the graph from a file
returns true if the edge was added
saves the scp
checks if the given node was removed
saves the graph to the specified file
same as code load structural constraints code except that the file
returns whether the given file should be loaded structural constraints
returns all structural constraints of the scm
returns the costs of the solution
creates a variable with a given name and returns it
returns the chute variable of this chute
returns the variable factory that is registered with the
checks if there are fluff factories missing for the last construction
updates the costs of the reference
create a variable with a given name
creates a variable with an unsafe graph object
find cruft that is too much cruft
append a string to the introduction
creates and returns a new
updates the costs of this reference
if this variable is not a reference to another variable removes it
code set auxiliary code sets the auxiliary data of this node
creates a variable without any data
creates a graphics object
sets the lower and upper bounds in the range of the underlying intervals
sets the lower bound of this range
sets the upper bound for this range
deactivates the lower bound
deactivates the upper bound
update the exponent label
disconnects two nodes from the registry
sets the specified variable to the specified long value
return the string representation of this resource
returns the string representation of this resource
set the value of a variable
sets the value of the specified variable
sets the specified variable to the specified double value
sets the value of the given variable to the given value
sets the value of the specified variable to r
deletes the specified variable from the constraints
deletes the specified variable from the list of variables of this
returns a string describing the variable descriptions of the
update the coefficient label
returns true if there is a variable constraint in this constraint set
finalize this type
creates a graphics object
updates the range
returns the set of variables
calculates the number of same variables in the two arrays
update the costs of all the same variables
calculate number of duplicates
adds a constraint to the model
removes a constraint from the constrained variable
adds a description for the given operation
deactivates the specified lower bound constraint
deactivates the upper bound of a constraint
updates capacity variable in all drcplanes
gets all tasks from the project
creates a constraint with the given cost and cost id
creates a constraint
create a constraint with the given id and default type
create a constraint without any parameters
heuristic deletes a task by letting the project delete itself
create a constraint with an internal id
the heuristic used to compute the heuristic for the current
heuristic deletes latest task by letting the project
creates a constraint with an internal id
create a constraint with an internal id
improve the heuristic used by the heuristic scanner
improve the workload task if needed
create a constraint
create a constraint
updates the costs of all the variables
create a constraint
sets the value of the exponent of this graph object
create the graphics object
updates the costs of the reference
create a constraint without any parameters
create a constraint with an internal id
create a constraint with an internal id
create a constraint without any initial constraints
delete a constraint from the graph
when a new situation is added to the execution state the
this method creates the list of variables to be used in the auxiliar
returns the set of constraints for this graph
updates the cost of all variables in the list
returns a string representation of this object
this method returns a string description of this object
clone this interval
calculate the claims costs
connects a node with a conventional edge
create a cost mapping
create a cost mapping object
returns the cost mapping with the given name
selects the cost mapping in the cost map
select the cost mapping corresponding to this mapping
selects the cost mapping with the given cost function
returns a string representation of this instance
returns a string representation of this code predecessor state code
returns a string representation of this contribution
sets the coefficient of the graph
creates a graphics object
gets the coefficients
selects the default cost mapping
updates the costs of the input and output nodes
sets the default factor for a particular constraint
sets the type name
returns the costs of the solution
selects the cost mapping as specified in the configuration file
returns a string representation of this object
this method returns a string representation of the cost list
sets the selection method
returns the selection method
returns the currently selected cost mapping
updates the global costs of the solution
compares this object with the specified object for order
shows a dialog to select a new name
returns the default cost mapping
notify all listeners that have registered interest for
add an element to the set of results
add a collection of values to the set of values for a key
add a collection of keys to the map
extracts all of the values associated with a key
returns a set of objects associated with the given key
remove an object from the map
removes all items from the set
returns an iterator over the keys in this map
convert the interval to a string
returns true if there are more records in the data collection
returns the next element in the iteration
removes the current entry
returns a string representation of the object
sets the default cost mapping attribute of the web app object
adds all the elements of the given map to this set
checks if the value set contains the given object
returns tt true tt if this map contains a mapping for the specified
returns tt true tt if and only if this tt set tt contains the
returns the value to which the specified key is mapped in this hashtable
returns a set view of the values contained in this map
removes a key from the hashtable if it is present
removes all mappings from this map
creates a new cost function with the given name and cost function number
returns the number of elements in this set
returns the number of elements in this hashtable
returns the number of keys in this map
returns a set view of the keys contained in this hashtable
returns an iterator over the elements in this set
returns an iterator over the values in this hashtable
find the cost function with the given name
starts the improvement iteration
select cost function
select cost function
selects the cost function to use
returns the default cost function
returns the function that is used to compute the structural cost
returns the max cost function
returns a string describing the cost function
adds a cost cost pair to this cost record
add a cost and cost mapping to this cost
returns the set of cost data for this structure
gets the cost mapping types element
sets the namespace for this element
load cost mapping data
returns the instances of my gsc as an xml element
loads the cost mapping types
loads the xml file
loads the xml file
adds a cost function to the given
saves the xml file to the given name
adds the graphic data to the given node graphics element
this method creates a unique id from a string
creates a constraint element for the given node
constructs a new edge element for a given connected node
create a variable element that will hold a variable
enable structural changes on repair
adds a connection between this node and the given node
removes a constraint from a given node to the edge
returns a string representation of this node
this initializes the connections of the node type
adds a connection to the node
disable structural changes
removes the local node
determines whether the supplied object is already connected to a
initializes the iterator
this method checks if the given node criterion matches
returns the specific nodes
returns whether or not this node is empty
returns the number of nodes in this graph
returns the number of variables in this store
updates the display
code set auxiliary code sets the auxiliary data of this node
updates the name of the variable
updates the value of the control
update the sliders size
returns the value of this number as a code double code
updates the global costs label
returns a string representation of this constraints object
get the list of matching extensions for the given node
return all extensions of a node type that match the edge
this function is called by the constructors to initialize the
creates a graphics object
returns true if this constraint is integer
returns true if this constraint is constant i
returns true if this node is the same node as the other node
code set auxiliary node data code sets the auxiliary node data
returns the lower bound of this constraint
if the current object is a code graph object code or a
removes the mark from the current graphics node
returns the largest value of all variables in this constraint
ensures that the value is within the bounds of this instance
clears the display of csp messages
creates a graphics object for the variable graph
add integer constraint
removes an integer constraint
restricts the range to include the specified values
recalculates the lower bounds for all the constraints
recalculates the upper bounds of all of the constraints
recalculates the lower bound of the constraints
adds a range constraint to the list of constraints in this
gets the upper bound of this range constraint
gets the lower bound of this constraint
removes a range constraint
checks to see if the lower bound was changed then
checks to see if the upper bounds are in the correct order
adds a control to the control panel
pass though method to service menu
pass though method to service menu manger
adds a tool button to the tool bar
adds a listener to the view
generate the controls for the current control
pass though method to service menu
adds a graph object to the panel
returns the swimlane control that is associated with this fragment
removes a change listener from the main view
displays a constraint
enable disable buttons for all variables
removes a variable from the layout
updates the cost function costs of all elements at the specified level
enables or disables all the constraint buttons
returns true if this cost function reference is more than one cost
enables the cost function button conventional
enables the cost constraint buttons
enables disables all the minimal radio buttons
enables all the constraint buttons
enables the given constraint buttons
enables all buttons for a node type
removes the specified constraint from the graph object
add the control to the form
compares this object with the specified object for order
the priority of the current thread
returns true if the robot is retracted
overrides the paint component method to force the button
displays a message in the message label
tests the new speed and knot ac list
returns number of items in list
returns aircraft info from the list
sets the planned cruise speed
save the route
restore the database settings from the preferences
loads a file
returns the wp database file name
sets the wp database file name
gets the value of the ac database file name property
creates a new document
code get tas code calculates the actual speed
sets the altitude of the location
set the altitude ft value
returns the altitude ft as a string
init the gpx document
returns the altitude in mstr format
stores the route
gets the column name attribute of the route table model object
handles events from the editor button and from
parses the wind data and returns a wind object
invoked when an action occurs
sets the value of the control
updates the gui when a waypoint has changed
shows the file browser
sets the value of filter string
returns the index of the match
update the list of waypoints
returns true if the given event is ok
gets the waypoint at the given index
returns true if the given event is a cancel event
invoked when an action occurs
get the active waypoint
set the active waypoint
invoked when an action occurs
get active waypoint
adds waypoint listener
called when the active waypoint changes
removes the waypoint listener
get the active waypoint
activates the waypoint with the name
set active waypoint
fires waypoint listeners to all waypoint listeners
returns true if the given event is the ok button of this dialog
returns true if the given event is a cancel button event
set the aircraft info
returns whether the default file is selected
invoked when an action occurs
sets the file to be read
re load the gpx database from disk
displays the preferences dialog for the main window
get the value of wp list
invokes the edit and returns the selected aircraft info
add a waypoint to the list of waypoints
set the value related to the column info id
adds a waypoint to the list
get the waypoint information
gets the current position of the mouse cursor
gets the waypoint at the given index
prints the current position information
find a waypoint by its name
returns a string representation of this position angle values
sorts the list
print all the waypoints in the track
set the elevation m
method to clear the input stream
appends the segment to the route
get the start point of the route
adds a segment at a certain index
remove a segment at a given index
set the start point of the move
prints the contents of the buffer to the console
gets the segment count attribute of the route segment list object
get information about this route segment
display information about this object
returns the single instance of this class
is this the last page
adds a route listener
append a segment to the route
returns the current cas
removes a route listener
convenience method to get the speed of this task
returns the wind
returns the kts in the knots
get the length of the last segment
returns the textual representation of the distance unit in the units
returns the arcsin of a double
returns a string representation of the duration
sets the wind of the tile
returns the arc cosine of an angle where 0
calculates the ground speed of this task
convert time to string
rounds a double to the nearest integer
returns true if this base unit is equal to another object
rounds a double to the nearest integer uniformly distributed
returns the wca angle
compares this object with the specified object for equality
gets the magnetic heading
returns true if this unit is equal to another
gets the deviation of the compass
sets the deviation of the compass
returns the value of this measurable stated in the specified unit
returns the angle in degrees
get the heading corrected at current position
returns the current velocity
return the current number of minutes for the current cursor position
gets the direction of the ray
get the degrees as a string in degrees
returns the true heading of this task
returns a string representation of this object
returns a string representation of this angle
sets the velocity of this body
returns true if the value is valid
returns the ground speed and knots
checks if the angle is valid
sets the direction of this cone template
convert this value in the given unit to this value in the current
normalize this line segment
returns the direction of the team as a string
get the first triangle
define the first vertex of the triangle
returns the velocity in knots
get the second triangle
set the screen area to be displayed
is this wind chel calm
define the second triangle
calculate screen position for position
returns width of latitude
returns the width of longitude
calculates the screen position for a given map position
calculates the poisson distribution parameter at the given latitude
receive notification of the end of an element
receive notification of character data inside an element
returns the key to use to store the component resources
executes the json request
transforms the class of the model into the given transformation
adds the dont headers
add relative headers to the response
returns the root of the tree
returns true if code a node code is a leaf
returns the number of children of parent
p returns the child of parent at index index in the parents child
returns the index of child in parent
adds a listener for the tree model event posted after the tree changes
removes a listener previously added with b add tree model listener b
tell all subscribers of the tree of the change in terms of node
tell all subscribers of the tree of the removed tree
tell all subscribers of the tree of the change in terms of structure
set the xmleditor frame
returns the xmleditor frame
sets the configuration
returns the configuration
set the configuration editor state
returns the editor state information for this configuration
sets the document
returns the text of the config document with the specified element name
gets the value of a config attribute
sets the value of a config attribute
this is a code imodel view code method
returns the file description
checks if this container contains the specified element
is the current document required
return the next node
reinitializes this object with the given node type and search string
notifies all listeners that have registered interest for
is the property required or optional
notifies all listeners that have registered interest for
reinitializes this object with the given node type and search string
set the write separate flag
create a dtd type object
create a dtd type
return the name of this node
a code representing the type of the underlying object as defined above
overridden to pass the new row height to the tree
returns the index of the child
sets the row height of the tree and forwards the row height to
sublcassed to translate the graphics such that the last visible
returns the number of child nodes of this xml node
gets the cell editable attribute of the day table model object
if code updating list selection model code is false this will
get the name of this node
return the type of this node
a code node list code that contains all children of this node
return the nth node in the list
returns the length of the array
return the name of this node
returns whether this node has any children
writes the content of this node to the given xml stream
checks the given element into the given element
returns the node type
check if the tree is empty
get the ith child node
writes the content of this object to the given xml stream
item returns a new node that is the node with the given index
get the name of the current node
moves the cursor to the next content node
resets the current al
adds sequence to the element
returns the index of the given child
set the owner document of all merged documents
get the name of the node
returns the content node
get the content model
b dom b implements
sets the xml document builder
returns the dtd type
report the end of dtd declarations
returns true if the xml parser is validating false otherwise
returns the namespace aware
report the beginning of some internal and external xml entities
returns whether the parser is ignoring whitespace
report the end of an entity
returns true if the lexical info is ignored
getter for property expand entity ref
report the start of a cdata section
returns whether or not comments are ignored
report the end of a cdata section
returns whether the underlying parser is coalescing
report an xml comment anywhere in the document
set the validating parser flag
set the namespace aware flag
receive notification of the element declaration
set whether the parser should ignore whitespace
set whether the underlying parser ignores lexical information
by default the code entity ref code is expanding
if set to true any lines beginning with a
set whether the underlying parser is coalescing
returns a new xml document
returns the domimplementation used by this element mapping
parses an xml document
print the dtdnode when option is enabled
iteration of dtd
iteration of dtd
insert the methods description here
receive notification of a sequence item in the document
add an alternative node to the list
start a sequence
returns the start of the alternative
outputs the closing sequence tag for the sequence section
end an alternative node
prints an element
writes a message to the debug output
retrieves the root of this dtd
get the error message
retrieves the root of this dtd
sets the source of the data
sets the source of the data
returns the document
sets the document for this state machine
returns the tooltip text for a given source file name
returns the default src dir
creates the pages of the multi page editor
prints a message to the console
get the full html text of this part
save the current html file to disk
saves the file to the disk
returns the preference store of this preference page
initializes this view with the given view site
passing the focus request to the viewers control
disposes the composite
returns the lock image data
get the image data for the error
returns the success image data
returns the running image data
get the image data for the specified key
returns the image with the given key
adds an image to the image registry
passing the focus request to the viewers control
this method is called upon plug in activation
this method is called when the plug in is stopped
creates the initial layout for a page
define the actions for the menu
defines the layout of the editor area
defines the initial layout for a page
returns the xml representation of all children
refresh the page
returns the value of a string variable
returns the value of a variable
add a new variable to the context
select a copy file or directory
creates dummy model
returns the default src dir
loads a file into the search engine
adds a classpath to be searched for
start the configuration
run the copy operation without touching the child
changes the bounds of this node
fires a property change event for the bounds of this node
return the property value for the given property id or null
return the property value for the given property id or null
set the property value for the given property id
changes the connection type
sets the bounds of this object
updates the current bounds of the standart state
updates the state of the tool according to what the current state
sets the state of the container
return the property value for the given property id or null
set the property value for the given property id
open the editor with the src file
sets the active state
changes the active state of the automaton
this method will be invoked when the active state changes
return the property value for the given property id or null
set the property value for the given property id
this method is called when a shell is closed
sent when a shell becomes the active window
returns the position of the given event
adds a child to the list of children for this node
sent when a shell is deactivated
invoked when a shell is un iconified
invoked when a shell is iconified
adds a new child node before the one specified in the children
adds a node before the one in the xml
gets the parent of the specified object
passing the focus request to the viewers control
changes the text for this cell
changes the tooltip text for this button
appends the specified action to the specified menu group
appends the specified action to the specified menu group
appends the specified action to the specified menu group
opens the source editors for the currently selected node
changes the fore color
changes the background color
returns true if the operation can be executed on the target
set the connection relationship between the source and the target
return the property value for the given property id or null
sets the old text
set the property value for the given property id
verifies that the command can be executed
gets the text to display for a node in the tree
invokes the execution of this command
sets the simple container that contains this container
set the parent of this element
sets the original bounds of the object
saves the schema
gets the relationship
removes the connection to the out elements
called when this label provider is being disposed
invokes the execution of this command
set the node element for this instance
sets the code imodel element container code for this
returns true if the command can be executed
sets the connection
creates and returns the palette viewer provider for this editdomain
the code multi page editor part code implementation of this
refreshes this edit parts visuals
get the node element represented by this edit part
overridden to track when this component is added to a container
returns the xml text without any children
creates edit policies and associates these with roles
handles change in layout type
creates edit policies and associates these with roles
returns the model of this as a simple container
handles name change
returns a newly created figure to represent this
handles change in bounds to be overridden by subclass
returns the model element
creates and installs pertinent edit policies
returns the active element
handles change in text to the direct edit
creates and installs pertinent edit policies
returns a newly created figure to represent this
called when the active state of the shape is changed
refreshes the visual aspects of this
refreshes this edit parts visuals
reverts to existing text in model when exiting from a direct edit
modifies the current state of the tool
refreshes this figures visuals
sets the width of the line when selected
initializes this actions text and images
initializes this actions text and images
returns code true code if the selected objects can
returns whether this action should be enabled or not
returns the current location of the mouse
this method is called when the bounds of the slider are changed
sets the dimensions of the rounded rectangle
handles change in name when committing a direct edit
returns the current content of the document
returns a figure to represent this
returns a newly created figure to represent this
apart from the usual visual update it also
sets the selection state of this instance
sets the width of the line when selected
display the results in the ui
clears the parent container
create our main view
set the default message
clears the composite and disposes of all children
called by the drawable during the first repaint after the component has
this is a method with three custom methods
this is a method with three custom methods
run the script in batch mode
returns the default src dir
returns the child text for the given interface
save the file to the text area
runs the given view in batch mode
returns the index of the column with the given name or 1 if
only show action when there is 1 alias selected
sorts the data set by the given column in the given direction
returns the value for the given column at the given row
set the value for a given column
fill the node context menu with actions
returns the parent of the given element
returns the type of folder
gets the type attribute of the schema object
returns the type of this inspectable object
this method returns an image for the given key
check if the node name is filtered
returns a comparator for sorting the column and foreign keys
return true if the given node name should be excluded
returns the type of this inspectable object
returns the type of the form catalog
returns a comparator which is used to order the inode instances
returns the type of the table
run the alias query
only show action when there is at least one selected node
get an tt isqlalias tt by its name
get the substitutions of the node
initializes the session node
this is a method but a comment above but overrides the default
returns the image for the given element
returns true if the given element has children
closes all connections that are there without returning them
return true if there are any selected elements in the tree
return true if there are any instances of the selected type
can this node be returned by the client
returns true if there is a selection available
only allow one selection
fill the context menu with all the actions
only allow the selection if a session is available
adds actions to the given menu
returns the index of the given object in the internal list of
adds the actions to the specified menu
create workbench and launch it
register the actions and the gui controls
set properties after application window is opened
saves the cache for all drivers that are are selected
compare this raw sql statement with the given one
add sql to history
increase execution count
initialize the formatted time
filter based on query string
returns true if this action is disabled
restoring default drivers
migrates all aliases of the current isqlalias
returns the current interactive connection if there is one
gets the file at the specified index
create our detail view
returns the name of this column in the form alias name
sets up the list of views the user will see by default
sets up the list of views to be shown
define the actions for the menu
returns the full view list
disposes this detail view and releases all internal references in the detail
refresh the trees for the session with the given session name
this is the entry point method
unlocks the database
closes the database
returns the status of the action
encrypts the data and writes it to the output stream
compress a string into base64 encoding
returns the number of fails that could not be processed
sets the site name
process the data for the working range
helper method to bind a combo box index
helper method to bind a combo box item
swaps the entries at index1 index2 with index1
takes current textfield entry as new or changed to the advanced
starts editing the entry specified by index
enable ok button depending on whether the caret is moved
shows or hides this dialog
removes an entry from the list at the given index
takes current textfield entry as a parameter and copies it to the
enable ok button depending on whether the caret is moved
shows or hides this dialog
fill the fields with current values
enable ok button depending on text field state
set the visibility of this dialog
the only event raised by this model is tree structure changed with the
returns the child of parent at index index in the parents child array
returns the number of children of parent
returns the xml document object for this value
returns the index of child in parent
returns the java object for the value
checks whether a node is a leaf
test of xspace key parse method of class xspace key parser
set the xspace id of the image
returns the server timestamp
close the jms subscriber
get the name of the xspace
create a new xspace
deletes an xspace
put a new xspace
get an xspace item from the workspace
delete a xspace
reparents for the given parent in the xspace
sets the string that is prepended to the country name
get the country prefix
this method updates the status of the system to reflect the
shows the image in a code task pane code
called when the country prefix is changed
returns a code task pane code with the given title and icon
extract the recipient from the sms
imports a vcard file to the browse panel
validates the form
this method is called when the browse button is pressed
checks if the given component is valid
updates the border of the component depending on the validity of the
removes existing contacts
removes all invalid gateways
validates the form
updates the label that displays the current country information
updates the label on the credentials information dropdown
updates the checkbutton
selects a contact
this method sets the contact information into the contact object
set the contact list
show error message in this panel
this method returns the contact object for the currently selected
sets the status message
installs the given runnable as the current handler for the given
hides status message after a specified number of milliseconds
prepares all text fields for show no gateway
this will set the sms object to show in this dialog
sort the updates based on the configured order
performs task management
clears the selection of the contact list
gets the text of this text area
adds a message to the
sets the selected contact
removes the current task pane
expand the next pane in the task pane
sets the selected contact
update the visibility of the component
ensures that the selected contact is in the contact list
gets the finished ok value for this bad price calculation exception
changes the selection to a single contact without firing a nice
returns the compress action
shows the add contact dialog
returns the send action
selects the contact with the margins
the gateway message
setter for auto hyperlink handling property
getter method for auto hyperlink handling
updates the label that displays the current country information
returns the currently selected gateway
get the gateway name that is currently selected on the tab
updates the label that displays the current restart
sets the selected gateway
selects the suggested gateway for the given gateway number
generates the tooltip for the gateway
show or hide advanced controls
this method filters the list of gateways
update the list of gateways
set the exception text
update the number label
removes the old tuple and adds the keyring to the keyring map
set the items according to the queue
update the tray icon with the current tray size
returns the popup menu
this method updates the proxy settings
selects the last record in the log list
is this throwable related to an esmska throwable
updates a local copy of the checkboxes depending on whether there are
displays the dialog and sets the exception message
handles an uncaught exception
start the application
returns the running status of this thread
displays the tip of the day ex
updates the rendering of the contact list
update the status of the form
if the current skin is selected then update the
returns the url where this application was downloaded from
gets the minimum version of this program
compare the latest program version with the latest version
returns the plain text content of this email
does the given set contain the given ignore case
backups the given collection of files in the backup directory
updates the status of this command
exits the program
show search field
remove a record from the history
remove a collection of history records from the history and fire the
method remove records older than given date
updates the status of this command
show or hide the new contact hint
repaints the search field
sets the number
sets the name of the preference
sets the text of the question
saves the current history to disk
sets the gateway of the client
load the history file
setter for property date
updates the labels according to the current locale
true if the message is problematic
returns the recipient of the message
requests an update
gets the value of the image code property
get the image hint
returns the message that was sent by the gateway to the client
saves all the user data
p sets the image code for this image
set the image hint
is this program instance the first instance of the program
enable or disable the status bar
sets the message to be displayed when the sms recorder is finished
sets the message that will be sent to the gateway
returns a debug string representation of the object
create history record
remove a record from the database
returns true if this set contains no records
adds a collection of sms objects to the queue
saves the config
returns the first element
removes the given sms from the queue
set the first element in the tuple
returns the second element in the tuple
set the second element in the tuple
returns the third element in the tuple
set the third element in the tuple
returns the event that was the cause of this event
clear the queue
adds an action listener to this button
removes an action listener from the button
this method is for the listener to be notified of an action
adds a valued listener
creates a temporary file to store data
removes a valued listener
fire an event to all listeners
checks to see if a given sms is already queued
copies information from another contact object
returns the number of items in the queue
creates a backup of the given file
sets the name of the imported piece
sets the number of the dial
checks if the queue is empty
adds a new
set the gateway
adds all the contacts in the collection to the list
removes a contact from the list
removes all the contacts in the collection
returns the current state of the code paused code flag
remove all contacts from the database
returns true if the provided contact is in the collection
pauses or unpauses this queue
returns true if the collection is empty
saves the queue to the persistence manager
put the tuple key into the key store
if the key is not null then set it
put a set of keys into the map
remove the key on a given gateway
sets the options that are shown in the combo box
clears all keys in the current keyring
save the history
adds a new gateway to the end of the gateway list
sets the value of the i text i field of the sequence
sets the sms status of the message
returns the length of the first sms contained in the list of gateways
adds all gateways to the set of elements that are associated with
returns the count of the number of gateways for the specified
mark a sms as being sent
returns the length in bytes of the signature for the given sender
returns the length in bytes of the signature for the given contact
show the given contact
removes the specified gateway from the list of gateways
sets the sms status of this queue to failed
returns true if this is the first version of the project
removes all gateways from the set of elements that are contained in the
marks the sms as ready
clears all gateways
marks all sms messages in the queue as ready
shows the dialog and updates the contact list
returns true if the provided gateway is included in this gateway list
update the gateway delay with the new gateway name
returns the number of elements in the list
returns true if the set of gateways is empty false
returns true if the application is portable
this method adds all gateways entry in the set of deprecated gateways
called when the text in the text field changes
creates a border with a certain color
set the action bean
sets the number of service resourcescount
returns the program directory name
get configuration directory
it may return null
called when the window is closed
returns the log file
activates the gui
registers a dialog window as a modal sheet
get the visibility of the modal sheet
turns on all of the smsscount and waits for each to start
shows dialog for overwrite file
tests if there are still threads
sends a new sms message to all workers
called when we finished sending sms
initializes this java script execution object
forward all the variables in the gateway
returns the preferred language for the given gateway
return the error message
get the message associated with the gateway
returns true if this is a text content
gets a url connection
executes a post request to the twitter rest api
set the error message
sets the error message for this page
the message to set when the gateway is checked
updates the ui
causes the current thread to sleep for a specified number of milliseconds
set the language for the request
sets the binary content
sets the plain text content of this node
color the from and to color the document
remove all cookies for the given name domain and path
connect to the server
returns highlight style for specified offset or highlight
find the proper charset for xml content
set the look and feel for this frame
updates the laf
sets the check update policy
sets the check for unstable updates attribute of the jboss
called when laf is changed
sets the contact
redraws the text of this contact
get the number of the contact
sets the number
removes a role from the user
compares this vendor with the given object
sets the password for the user
returns a string representation of this object
returns the full name of this user
returns a string representation of the object
returns the full name of the user
get a string representation of this object
this method initializes this
returns the side of the cell
this method initializes this
clear all clicks on the guide
sets the battle window
resets all messages to zero
gets the game result
connects to the server
gets a random move
this method makes a random move
disconnect from the server
signal that the player has readiness
moves the player to x y
gets the client one queue
returns the client two queue
adds a player to the game
retrieves the game engine queue
gets the opponent board
checks if the game is ready to play
retrieves the server queue
gets the player
checks if player is the owner of this turn
resets the game
returns the player with the given queue name
returns the queue that is used for the given player id
returns the opponent board with the given id
stop this queue
checks if the game is ready
returns the session associated with this queue browser
returns the player with the given id
determines whether two coordinates are equal
returns a hash code for this object instance
checks if player id is the one who turn it is
sets the hit field of the board
notifies all registered observers that the content of this part has changed
get the board
sets the miss field to the given coordinates
getter for property opp board
gets the game result
sets the game result
returns if its my turn
prints all messages in the list to the console
returns true if the ship has been lost
clears the messages
sets the coordinate of the square
gets the coordinate of the square at the given coordinates
throws exception if object is null
returns the length of the board
this method makes a move
prints the board to the console
returns true if the given board has the same coordinates
returns a string representation of the current board state
reset the board
add a message to the current faces context
observes customer added notification
log a message object with the i info i level
enables the device configuration
enable the production configuration
log that the configuration has changed
go to customer page
loads a pizza entity by its id
find a customer by its phone number
loads a pizza from the database by the identifier
find a customer by their phone number
entry point method validates a phone number
execute the command
returns true if this flow execution can handle the given flow execution exception
sets up the test fixture
loads the flow definition resource
removes all users from the db
returns the user with given last name
creates a user
returns the user attribute by id
search a list by attribute and value
get the persistence service that is being used
save an object to the database
persist the object
removes all the objects in the given list from the database
select all objects returned by the search
select an object from the database by id
returns a list of objects based on the field name and the field value
select objects by field
select objects by field
add an error to the list of errors
returns the number of errors in the list
returns a string representation of the errors
check if object has attribute value
adds a variable to the jep
removes the variable
check if attribute values exists
calculates the value of a given expression
evaluates expression string to a jep syntax
updates an object in database
validates a variable expression
gets the value of the final range property
sets the final range of the code select field code
returns the initial range
select last generated id
sets the initial range
returns the operator name
sets the operator name
gets the value of the cell phone property
sets the cell phone
returns the operator
sets the operator
compares this league to another one
get the standing expression
this method set the expression used to stand in for the game
get the handicap expression for this user in this match
sets the handicap expression
this method verifies if two blmshandicap history league objects are equal
compare two users
get the handicap expression of this mob
get the value of league name
gets the change date
sets the date of the last change
set the value of league name
returns the type of change that occurred
this method returns the name of the player that lost the match
sets the change type
set the name of the loser
gets the handicap
gets the value of the winner name property
sets the handicap
sets the winner name
gets the value of the length property
sets the length
gets the league id
gets the longest run for the loser of this code match code
set the league id
sets the longest run for the loser of this ownable
returns a string representation of the object
gets the value of the longest run for winner property
sets the longest run for winner of this ownable
gets the score
sets the score
gets the current handicap
gets the value of the loser id property
sets the current handicap
sets the loser id
gets the join date
sets the join date
gets the value of the winner id property
this method verifies if two blmsplayer leagues are equal
sets the winner id
gets the current standing
sets the current standing
get the league id
set the league id
get the current handicap
sets the current handicap
gets the value of the join date property
sets the join date
resets the league
sets the length
returns the longest run for the loser of the match
sets the longest run for the loser of this code match code
gets the value of the longest run for winner property
sets the longest run for the winner of this ownable
get the score
sets the score
this method returns the loser id
this method was generated by abator for i batis
resets all properties to their default values
gets the value of the winner id property
sets the winner id
sets the creation date
resets the league to the initial state
resets the form
resets the league
gets the value of the first handicap property
sets the first handicap
get the players id of the first player
setter for property first player id
gets the value of the second handicap property
sets the second handicap
gets the value of the second player id property
sets the second player id
returns the table header
sets the table header
changes handicap for a user
removes all the handicap history
constructs a league for a user or user name of a user
adds a handicap to the history
company is a meeting
returns an attribute of the league
this method verifies if a certain user is a member of a league
returns the current date
changes an attribute of a user
this method returns the value of an attribute
updates the league of this day of week
save the user league
find a league in this group of blmsleague
this method will return the attribute value of an user league
remove all the leagues
this method obtains the user league for a certain league
find a league in this group of leagues
this method is responsible for the exclusion of a
removes all the players from the game
removes a league from the leagues list
this method returns a list of all players in the system
returns a list of all leagues
this method obtains the handicap value of a player
defines an expression of leagues standing
checks expression for standing syntax
easy accept facade for
validates expression handicap syntax
delete a user attribute
validates variables for standing
validates the variables passed in against the expression given
adds variables that are standing to the standard standing
adds default handicap variables
set the date format
updates the given league in the db
updates the league of this translators handicap
returns the league standing of a given league id
returns the expression of a league
get a single blmsmatch object
this method is responsible for calculating the standing of a certain league
update the match with the blms match
this method is responsible for calculating the handicap
defines the expression of the handicap sub league
set the path to the matchup table
sets the matchup tables
search for table header in all handicaps
search value by handicaps
this method obtains the number of matches already played in
validates the table header
save the user
this method obtains the number of matches already played in
this method returns a list of all users
this method returns the value of an user attribute
this method will change a user attribute in the user object
update the user
returns the user with the given id
delete a match
removes all users from the system
return the first user with the given last name
deletes a user
this method obtains the match for a certain league
get the date of a match
use database method comment
this method returns the winner id for the given match
this method is used to remove all matches from the system
this method returns the loser id for a certain match
this method returns the length of a certain match
removes all the leagues
this method returns the score for a given match
to remove all users
this method obtains the matchs longest run for the winner player
finds a user by his last name
this method obtains the matchs longest run for the loser player
this method searches for a league with the given name
this method creates a new league
this method obtains all the matches from the database
creates a new league
this method obtains the standing of a player
returns the value of a user attribute
this method returns the number of wins for a given user
gets a leagues attribute
this method obtains the number of losses of a certain league
changes a leagues league attribute
todays date
changes an attribute for a user
delete a user
system facade for code matches manager
it deletes a league
initializes the matchup table
this method initializes leagues list
this method verifies if a certain user is a member of a league
this method initializes the list of users and leagues
this method returns the leagues for a given user
this method returns the members of a certain league
this method is responsible for join a league into its players league
this method returns an attribute of the user with the given id
this method is responsible for the exclusion of a
delegate to the matches manager
system facade for code matches manager
this method obtains the number of matches already played in
this method obtains the number of wins for a specific user
this method returns the number of losses a user has had
this method add a new match result
system facade for code matches manager
this method obtains the match for a certain user
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
system facade for code matches manager
defines standing expression for a given league
this method obtains the standing value for a certain player
returns a list of all users
get all players
get all leagues
this method returns a list of all matches
this method obtains the handicap value of a player
this method is responsible for changing the handicap
defines handicap expressions
get the handicap history of a league
system call to match up of two strings
this method obtains the matchup of two players
returns the user with the given id
find a league in the list of leagues
this method obtains a blmsplayer for the user with a certain league
returns the match with the given id
deletes a player
this method returns a list of all players in a certain league
this method returns a list of all handicaps for the player with the
sets the matchup table
sets the l f object that renders this component
sets the selected player type
set the name of the player
initializes the user interface
returns the name of this player
gets the player order
sets the player order
initializes the copyright label
register a listener to be notified when die conditions change
fire die rolled
convert toss
this method fires the coin event to all the listeners
this method adds a coin listener to the coin
creates a blank square
fire a score updated event to all registered score listeners
adds a score listener to the score
removes the specified score listener so that it no longer receives
this method is called by agent when batsman is out of the game
called when a ball is bowled
returns the ball that is being played
get current troops score
moves the entity to the given position
reposition the entity
gets the current batsmans score
returns the player who made this move
adds a code piece listener code to the list of listeners
gets the amount of teams that must be exchanged when player decides to
fires a piece moved event to all registered listeners
gets the number of wickets in the game
gets number of innings
get the key for this segment
returns the number of balls in the ball table
returns the number of overalls
paints the component
returns the number of over balls
called when the piece is moved
sets type of the category
init all fields
returns the category of this
p sets teams in the teams field
call one of the coins
this function performs the select to bat or field function
sets the code bowler code
returns the new batsman
returns the new bowler
sets the code batsman code
set the field member
returns true if user is batting
auto column header field
creates and returns a position based on the given fielders
called when the position of the cursor has been moved
fires the next turn notification to all listeners
fires the signal score event
fired when this node gets the end of xml document
every time the ball is moved
fires the event that the current umpire has been finished
returns true if the ball is moving
catches the given ball with the given ball
notifies all listeners that the ball has stopped
stops the given ball
fires the code batsman is out code event
fires the ball moved event to all listeners
adds the listener to the variable bean
fires the ball caught event to all listeners
removes the listener from the listener list
the code caught code method is used to signal that the
moves the ball to its previous position
out fire the batsman
returns true if player is ready to bowl
this is called when the ball changes
informs the game state that the game has ended
sets that player is ready to ball
when a ball is caught we should fire
this method is called when the ball has stopped
initializes the player
gets the state category type
returns the type of the current state category as a string
gets the state of the ball
start the ball
returns true if the player has a ball
changes the state of the ball
called when a new turn has arrived
paints the label
this method is called when the agent is caught
invoked when the controller has stopped
paint the ball
sets state to ball
returns a randomly selected ball state depending on its type
init the drag and drop listeners
draws the point
loads the image
this method paints the coin
set the colour to be used for the die animation
p gets called by the drag gesture recognizer
this method is called when the coin is tossed
set the colour of the die text
gets the colour of the die
sets the colour of the spot
gets the colour of the spot
process mouse event
handles mouse events
gets the name of the new user
displays a message in a dialog box
the ball has moved
updates the ball
places the piece at the given position
returns true if this unit is ready to face
removes the piece from the given position
checks whether there is fielding the given position
gets the pieces at the given position
sets the pieces at the given position
clears all fielders from the field
plays this fielders
initializes the menu and the file chooser
initializes the menu bar
initializes the bowler
returns the centre x coordinate of the centre of the panel
initializes the frame
initializes the ball
returns the centre y coordinate of the centre of the panel
this method initializes the coin
returns the current diamond of this panel
initializes the batsman gui
initializes the umpire interface
creates and initializes the ui field
called by drop methods
initializes the scoreboard gui
start drag under feedback on component
start drag under feedback on component
sets the code bowler code object to use for viewing
sets the batsman component
adds a task to the queue
start a new thread to handle tasks
registers a task as execution after the given task
stop all running tasks
starts an ui
show the information of a given node
no info inspect panel
this method is called whenever the graphics object needs to be updated
start a new frame
sets the transparency of the rectangle
return a ctl expression string representing the current value
draws a vertical value across the graph
gets the effect attribute of the effect component object
sets the effect
stores a data object for later use by the api classes
show convergance for the given pass
shows the value of the pass number in the graph
look up the ctl values and passes them to the correct screen points
returns the apply settings object for this apply header
get the layout settings
returns the colormapper settings for this header
returns the graphics settings
retrieves a list of all settings in the browsing dialog
calculate the ctl values
get the settings of this movie
get the parser settings
reset the plot to the default values
returns the graphic content of this frame
converts a coordinate in the layout coordinates to the time in the
called when the mouse is clicked
invoked when a mouse button has been pressed on a component
returns the graphic content
print the content of the print dialog
export the content of the component to a file
repaints the control
the maximum number of passes the influence can move
show the dialog settings dialog
set the maximum number of passes to be displayed
add a new layout property
add a new layout property
sets the max y value
set a property to the given value
summary string of the object
returns the graphic content of this frame
handles events from the editor button and from
store the data in the table
shows the status
show an error message in red in the status bar
helper function get the input file name from the user
window closing event handler
changes the slice number to the specified number
apply the layout to the current slice
apply the layout to the remaining number of tasks
calculate the stress in the current layout and the current slice
returns the graphic content
play all the animations that are currently selected
given a slice number set the number of coordinates to the
starts a thread to keep the state from running
get slice matricies
starts the trans thread
updates the displays for this plot
repaints all the displays
move nodes and controle the mouse motion
selects the given pane
pauses the current layout
resume the current layout
get display width
set the display width
get the height of the display
set the display height
get the width of the layout
displays the current slice
get the height of the layout
renders the current settings
updates the display
returns the padding needed to stretch a value between the top and bottom
gets the display of this panel
returns the display width
returns the padding in pixels between the text
top inset between area and its content
returns the height of the display
returns information about the current layout type
set the size of the display
returns a string representation of the engine
sets the show updates attribute of the antelope panel object
sets the number of updates
records the render settings for the browse settings
fetches the settings from the settings tab
returns the current slice number
returns the number of slices in this layout
returns the maximum matrix value
returns the minimum value of the matrix
returns the current
returns the specified slice
finish parsing validates and report the result
set number of frames per frame
gets the number of frames in the interpolate between
set the offset of the component data in the screen
save a son of this instance in a new file
creates the clusters for all modularities in the clusterer
returns the where clause found
show the son preview in the given row of the given text
shows the data of the given problem
returns the distance in matrix from the two layout slices
sets up the layout properties
draw the controller
draws a border around the shape
this method is called when the movie is finished
sets the codec to use for coding
adds an association between the two given values
returns the type of layout
returns the layout information
called when the thread is sleeping
resumes the execution of this thread
converts the colormap to a colormap
shows the gui
disposes a network and removes it from the list
returns the current fps
dispose the given engine
return number of nodes in the subtree including
returns the shape of this object
updates the diamond shape if it has been changed
loads the settings from the given file
updates the triangle shape
creates a new layout
shows the specified frame on the desktop
updates the shape if it is not already done
sets the data of the frame
gets the value of the field for the given name
shows a status message
shows an error message
writes the specified text to a servlet log file usually an event log
update the displays for all the skat objects
returns a random integer between the two ints
returns a random double between the two uniform distribution
set the pause state for this element
returns the current path
called at the end of each parse
sets the file name
indicates if there are any networks
sets the verbose attribute of the jbuilder editor app object
parses a string of rgb values into a color object
gets a reference to the sonia layout engine at the given index
get the graphics settings
getter for the browsing settings
parses an element of rgb values
configures the parser
parses the cluster header string to get all information about cluster
parses ar col header information from the string
parses the parent id of the cluster parent
set the attribute key for this attribute
parses label of the node
parses label of arc
return a string describing the internal parser
configure this factory with the given configuration
trim braces in a string
tests if this file descriptor object is valid
makes a canonical path to the source code file code
create the extensions selection group
try to retrieve the javadoc
open an appropriate directory browser
retrieves the existing path of source archive files
gets the initial directory
returns the init extensions for this classpath
checks if a given directory is valid
checks if the given string is valid of a set of external
decrypts a file with the private key ciphers
reads a file from the given file path
read from a file
increases the capacity of this tt array list tt instance if
removes the first occurrence in this list of the specified element
appends all of the elements in the specified collection to the end of
inserts all of the elements in the specified collection into this
checks if the given index is in range
reads the objects data from the given stream
this method initializes robot
print lt li gt tag
build the comments for the member
build the comments for the constructor
build the comments for the field
wrap an output stream with iso 8859 1 encoding
print lt th align align i gt tag
returns a string representation of this object
start a stat record
get the number of errors that have been loaded
reads the source of a file and returns a char sequence
generates the list for the class
is t an unchecked subtype of s
set a new source and return the previous one
print an error or warning message
removes the last element returned by this buffer
return and remove the head element of this buffer
create a method declaration for a method symbol
checks whether a zip file with the given path exists
search for a locale with a language and variant
set the packages doc
do lazy initialization of documentation string
return the source position of the given path
set doc path
sets the doc path
return the package that this package doc area contains
return the source position of the entity or null if
returns the flags of this variable symbol
get the containing class symbol
get the value of a constant field
returns true if this member is included in the current scope
return the source position of the entity or null if
return the file that contains this file
does something something
return the source position of the entity or null if
the method is called when the runtime is about to start or stop
resets the sequence diagrams of a certain number of elements
appends the given url to the end of this queue
returns the number of regions in this container
resets the status bar
resets the mosaic to a new empty tile
append a list of urls to the end of the list
brings this tile to the top
places the picture to the thumb
returns the tile at the given position
adds a picture to the panel
finds a picture by url
starts the retrieval of a picture
brings the specified tile to the top
returns the delay between two polls of the screen
set the delay between events
updates the graphics
p get the origin hex offset p
set the origin point for this instance
adjust the clip bounds to include the insets of the current clip
returns the extent of the component
this method determines whether the status bar is visible
set the width and height of the bounding box
returns the preferred size of this component
sets whether the status bar is visible
sets the valid state of this component
set the preferred size of this component
returns the url of this object
set the url to the identity object
reset this code position code object to its original position
called when mouse is clicked
returns true if the history list is visible
this method returns a string representation of the object
empty mouse event handler
empty mouse event handler
returns the thumbelina
empty mouse event handler
if the mouse is pressed on a mosaic then bring to top tile
returns true if the sequencer is active false otherwise
saves the state of the thumb
returns the amount that the scroll bars are scrolling vertically
activate or deactivate the sequencer
initializes the screen size
returns the amount to change in the scrolling offset of the contents
restores the size of the rational rectangle
get the background thread active flag
called at the beginning of parsing
visits a tag object
visits a end tag
visits a string node
returns a string representation of the given rectangle
invoked when the components size changes
visits a remark
called on the event dispatching thread not on the worker thread after
returns true if children should be processed
set the background thread active
returns true if self should be processed
a component has been moved
scan a tag
returns the page that this page editor is in
called when the component is shown
returns the capacity of the array
returns the current speed of the playing sequence
returns true if the given rectangle is within this window
adds new entry to cursor
invoked when the component has been made invisible
add a new page to this multi page editor
remove the specified cursor from the list
removes the element at the specified position in this list
hierarchy changed event
returns the element at the specified index
sets the speed
determines the row for the given cursor
this method is used to execute the thread
get the row index of the given cursor
get the column index of a given position
gets the current column number
resets the stream to the marked position
performs a search on the page with the specified cursor
get the discard cgi flag
perform a bsearch on the given cursor and page
marks the current position in this stream
inserts the specified element into the list at the specified cursor
nop method needed for implementing window listener
removes the mapping at tt index tt from the array
gets the first number in this list
returns the number of the last highest element currently in this sorted set
set the discard cgi flag
returns a copy of the list at the specified position
the method window closing
swaps two entries
getter for property discard queries
returns the input stream
invoked when a window is changed from a normal to a minimized state
set whether queries are to be discarded during a run of the
required for window listener interface but not used by this class
reset the iterator
returns true if the url is an image
reads the next byte of data from the input stream
invoked when the window is set to be the active window
close the source
read characters into a portion of an array
returns the panel that contains the pictures
invoked when a window is no longer the active window
reset the stream
add a property change listener
reacts to button events
mark the present position in the stream
get the url connection
tell whether this stream is ready to be read
updates the status bar according to the selected status
remove a property change listener
pushes the current character
updates the title bar depending on the property change event
returns the character at the specified offset
returns the current url
gets the characters of the subset from the specified source
get a string from the file
set the value of current url
gets the characters from the source
opens the browser for the given url
destroys this object
updates the queue size
get the offset into the data stream
returns the number of bytes that can be read or skipped over from
updates the visited size property
creates an about dialog for loading the image
this method returns the name of the page
p get the base url
returns the page name
this method returns the assignment represented by this
get the assignment from the page
exits the program
p set the base url
this method returns the value of the page
sets the character encoding to be used for parsing
override get value so we can nullify the descriptor for the font
reads the next byte of data from the input stream
retrieve the value of this property from the value of the given
read characters into a portion of an array
returns the raw value as a string
returns the source that this event is associated with
indicates if this source is ready to be read
reset the stream
set the page that this form will be rendered in
mark the present position in the stream
returns the name start position
this method returns the content type associated with
pushes the current character
sets the value of the name start position
returns the character at the specified offset
copy characters from the current position into the character array
returns the end position of the attribute name
this method returns the string that is represented by the
sets the ending position of the name
gets the characters from the source string
clean up resources
returns the position of the start of the value
get the offset for the next character in the source string
set the value starting position of the value
returns the number of bytes that can be read from this stream
this method sets the position of this field object
returns the end position of the value
advance the position
decreases the position of this token by one
unget a character from the current position
duplicates this cursor
this returns the printable representation of this column
sets the ending position of the value
compares this cursors position to another cursor
returns code true code if this page is a whitespace
return true if this assignment is a stand alone assignment
returns the encoding of the source
returns true if the object contains no key value mappings
return true if the page contains a value which may be
set the current page
sets the encoding of the source
this method is called when the user selects a radio button
returns the value of the given attribute
constructs a url from a link and a relative url base
listen to the slider
remove the attribute with the given key
sets the cursor for this component
sets an attribute
returns the attribute with the given name and size
returns the factory that is used to create new nodes
sets the ex attribute
retrieves the absolute url associated with a link
add a url to the history list
sets the node factory used to create new nodes in the tree
returns the list of attributes associated with this class
opens a new url
get absolute url
returns the tag name without the surrounding tag
return the position of the cursor
returns the first raw tag name associated with this
get the row index of this position
sets an attribute name with one or zero length
sets the cursor position
returns the text of the element
returns the number of url requests that are queued
returns the row number of the element in the array
gets the current line number
return the text between two indices
sets the text of this node
set the attributes for this component
returns the text as it is not recommended to call this method
returns a html representation of this document
accept method from visitor pattern
returns the text of this component
sets the text of this node
used to set the tag start
same as to html but returns the text representation of the
returns a string containing the html representation of this node
get the column index of this position
returns the current line
return true if the text contains only white space
accept method from visitor pattern
returns the start position of the tag in the stream
return a html representation of this object
this method is called by the filter to add this node into a
resets the cursor to the first page
used to set the end position of the tag
returns the column number of the given position
returns the starting position of the node
returns the end position of the tag
set start position of the node
return the ending position of the node
returns next node from parser
returns the text between two indices
set end position of the node
sets the text of the tag
gets the list of children of a node
this will extract the text from the source buffer
return the first child of this node or null if none
returns an html representation of this version id
gets the last child of this node
parses cdata nodes
creates a html tag with the given length and all attributes
returns the text contained in this label
this method implements the semantic action for the html parser
returns the string representation of this tag
returns true if the tag is a break tag
returns the text contained in this label
returns the name of this property
accept method from visitor pattern
create a text node
checks if the element contains an empty xml tag
p get the assignment
returns the assignment string
creates a remark
returns the text in this line
setter method user id of assignment
indicates if this start tag is an end tag
creates a tag node
gets the starting line number of the current page
returns the value
gets a line from the given position
get the line number of the end of the current page
scan a jis page
returns the character used for quoting
returns a string representation of the token
returns a scanner which is configured to scan css source for
returns the value of the quote field
sets the this scanner
sets the character to use as quotation marks
returns the end tag of this type
retrieve the raw value of the property
adds a list of nodes to the list
adds the specified node to the end of the list
retrieve the raw value
set the end tag for this instance
creates a string node
returns the old encoding
p get the new encoding
checks if this token is a whitespace
this method handles whitespace attributes
returns true if the assignment is a stand alone
returns a html representation of this node and its children
removes the element at the specified position in this list
indicates if the assignment is empty or not
returns true if this list contains the specified node
generate a standalone attribute font
returns true if the property is null or is valued
returns the index of the given node
removes the node at the specified index
returns the length of the given value in the given attribute
returns a string representation of this list
return all nodes that match the given filter
returns a string with the specified length
generate an empty xml element
return a node list containing all the nodes that match the filter
removes all nodes that match the given node filter
returns a string containing the assignment
recursively removes all nodes that match the given node filter
this method overrides the inherited visit all nodes with method
generate a new html
specifies a comment for the purpose of this property
returns the request properties
specifies the domain within which this cookie should be presented
this method sets the expiry date
generate a single quoted attribute font
this method returns the expiry date
set the path to the file
this method sets the request properties
this method handles double quotes in a html document
set the value of this property
p get proxy host p
checks if a string is a token
specifies the proxy host
adds a listener for the tree model event posted after the tree changes
sets the selected state of this component
removes a listener previously added with
adds a spacer component to the home
returns the child of code parent code at index code index code
removes the spacer from the layout
returns the number of children of parent
returns the index of child in parent
adds a filter to the container
returns the root of the tree
adds a filter to the list at the specified index
returns true if node is a leaf
returns the port of the proxy to connect to
p removes a filter from the filter list p
messaged when the user has altered the value for the item identified
removes a filter at the specified index
returns true if the component can accept the given number of items
creates a tag
returns the node text
returns a string representation of this object
returns the preferred dimensions for this layout given the components
sets the proxy port
p get proxy user p
p set the user name of the proxy server
creates a remark node based on the current page
lays out the container in the specified panel
get the url associated with the given resource
p get the proxy password
get the icon associated with this label
p set the password of the proxy used for basic authentication
returns a string representation of this object
sets the selected attribute of the skin window window object
makes a filter button for the given class name
sets the expanded state of all components in this container
method get description
todo missing method documentation
returns a node filter that filters out all nodes that match the given
this method is used to set a filter for the node
get the description of the measurement
this sets the sub node filters
todo missing method documentation
returns a node filter that is used to filter nodes in the tree
sets the node filter
returns code true code if the given node is accepted by the filter
sets the sub node filters
get a description of the measurement
gets the icon specification for the image of the component
this is a code imodel view code method
this method returns a filter that can be used to filter nodes
get the description of the measurement
todo missing method documentation
set the currently selected filter
returns a node filter that is used to filter nodes in the tree
set all sub node filters
sets the node filter
sets the sub node filters
generates a java code for this object
this method handles events for the text field
get the description of the measurement
returns the icon specification for this product
returns a filter that filters out all nodes
sets the filter for the tree
adds drop targets to the given list
returns code true code if cookie processing is enabled
returns a printable representation of this tag
the description of this filter
called when the user presses a button
todo missing method documentation
the description of this filter
todo missing method documentation
this method returns a filter for the node
enable or disable cookie processing
returns a node filter that can be used to filter nodes that match
set the node filter value
set the node filter that is used to filter out nodes that are
returns a string representation of this object
returns a string representation of the given strategy constant
sets the base point
returns the integer representation of the given string based on the given strategy
given a strategy constant get the corresponding index
returns the strategy for the given index
runs the program in the default locale
update the strategy index
returns the connection monitor
called when text is inserted into the text box
called when text is removed from the text field
gives notification that an attribute or set of attributes changed
get the description of the measurement
todo missing method documentation
returns a node filter that filters out all nodes that match the given
this method is used to set a filter for the node
returns the base point
sets the monitor object
recursively add attributes from node and its children to the set
recursive method for adding the given attribute values to a set of attributes
get the description of the measurement
todo missing method documentation
get the description of the measurement
this method returns a node filter that can be used to
this method is used to set a filter for the node
sets the sub node filters
gets the icon specification for this product
this returns the status of the redirection processing flag
returns a printable representation of this predicate
returns a node filter for this tree
get the description of the measurement
gets the icon specification for this product
returns a node filter that is used to filter out all nodes sibling
this method is used to set a filter for the node
sets the sub node filters
returns a string containing a concise human readable description of the
returns the sub filter list that contains the given component
this sets the redirection processing enabled
returns a string containing a concise human readable description of the
called when the filter is selected
get the location for the given key and value
called when text is inserted into the filter text area
called when text is removed from the text field
returns the enclosed component
setter for property source
fixes the spaces in a url
return the value of capture resources flag
set to true if the resource names should be captured
returns the filter of the node
returns true if the given string is to be captured
checks if a given url points to an html file
get class name from file
add cookies to the vector
get the domain from a host
captures all images and copies them to the page list
clears the selection
save the cookies in the vector in the cookie jar
opens a file dialog
action for saving the configuration
saves the actual action
exit the application
copy the selected string to the clipboard
copy the given action to the system clipboard
delete the selected text
this method displays the about dialog
this method is called when the user selects the expand menu item
this method collapses the currently selected node
this method expands all items in the tree
close the stream
collapses all items
setup all mouse listeners for this component
sets up drop targets for all drop filters
sets the expanded state of all filters in the filter list
invalidates the main scroller and then relayouts the main scroll pane
adds a filter to the selection
removes an element filter from the list of filters
select or deselect all the elements in the receiver
clears the selection
moves the selection point
returns code true code if the code filter code is in the
this method returns the last filter in the
serialize the selection into a string
deletes the selection
returns true if the selection is a single selection
if the user presses the mouse button move the enclosing container
invoked when the mouse cursor has been moved onto a component
invoked when a window is in the process of being closed
the user has initiated a drag gesture
is invoked when you are dragging over the drop site
is invoked when you are exit the drop site without dropping
is invoked when a drag operation is going on
is invoked when the user changes the drop action
is invoked when a drag operation is going on
is invoked if the use modifies the current drop gesture
sets the value of the variable at the given index
this method is used to get the ask set
edit the selected record
read the storage
this method parses the file and adds the delete file or
edit the configuration per
edit the database bean
this method opens a file as a file
modifies the current sql map
returns the resulting information of the operation
method to get the action list
this method makes an input stream to the database
run the action
returns the value of the property with the given name
reset the list of files to empty
returns whether or not to parse only the caonly file
returns the number of strings stored in the database
sets whether or not to parse only the ca uri
add a file extension
returns chain group filter
parses the xml file to a structure using the type format
gets the value of the parse sec struc property
get the time stamp
returns the 1 letter corresponding to the given amino acid code
returns a new group
parses a line for conect and returns the bond between them
return true if the chain chain id is known
resets the game
sets the maximum delay for the timer in milliseconds
clears the property list
sends the message by email
returns the progress of the file transfer
returns the total number of bytes uploaded by this peer
returns the value of the given parameter
gets the number of post files
returns the post vars
returns the extension of the file
save the content of the file specified by field name into a file
returns the value of the response
set status of this assignment
returns a new
returns true if this node has any children
returns the type of this tag
sets the type of this tag
returns the value of the attribute at the given index
returns a list of all attributes in this container
returns a copy of the set of attributes for this class
returns true if the collection has any attributes in the list
create a new w3c document
create a new empty document
get a document from a file
get a w3c document from a reader
get the w3c document from an input source
returns code true code if events are supported
returns the root object of the w3 c xml schema
this will set the name space uri to the document
registers a new way engine in the list
finds the class with the given name
installs the tokens for the waypoint
this sets the range of the scanner
get the child node at index
fetch a scanner start offset in the document
returns the token
returns the length of the token in the original string
returns true if scanning has been completed
obtain the index of child in parent node
convenience method to get a grammar from a uri
returns the depth of the given node in the tree
returns the string representation of the node
returns the node
set the file node
get the tree node corresponding to a branch node
returns the grammar list model that this list is using
get the way to predictive grammar
duplicate a node
set the selected grammar
inserts the given node after the given node
returns the index of the currently selected grammar
edit a node
this method should be overridden by the xpath parser
this method is called when the indention is encountered
indents the selection
returns the type of this event
returns the way mask of the way
returns the number of columns in the model
returns the value for the cell at code column index code and
get child count
tree model method
returns the extension type of the given file
returns the extension type of a given extension
tree model method to return the number of children of the given node
finds the index of a particular file type
returns the child of parent at index index in the parents child array
get the index of child in parent
returns a description of the file type
print information about a file
overridden so we can exit when window is closed
get a description for this filter
opens a dialog to rename a file
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
this method displays the right click popup menu for the
tell all subscribers of the insertion of the tree
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
returns the scan value
opens a chooser to save the current document as an xml file
returns the category of this code search result code
handles project popup menu
appends a good text to the document
appends a neutral element to the given text
appends a bad style module text
append a string to the document
returns the source object of the event
returns the reader of the source
returns the source file of this event
saves the waypoints to a file
adds a tab to the end of the given file
saves all open files
add a tab to the table
starts the reader thread
returns a reader for the entity data
sets the editable flag for all fields
builds the main wilderness tab panel
sets the list model
adjusts the size of the panel to fit the given size
returns the current insight list
show the popup layer
returns the active tab
hide the tab at the specified index
scrolls the console to the top
rename the tab
string representation of a wp node
get the scan reader of the wadl document
get the string reader from the document
this method returns the wysdio piped reader
loads a list of waypoints from a file
called by the dom editor when an event occurs
load waypoints from a reader
loads a list of waypoints from a reader
returns the tab for the given title
loads a list of waypoints from an input stream
save the model to a file
get the title of a given tab
set active tab
fetch the foreground color to use for a lexical
adds the given window to the list of window actions
fetches the style for the given scan code
removes the window from the menu
returns true if the selection is empty
gets the tab size
cascades the open internal frames of the desktop
returns true if the document has been altered
renders using the given rendering surface and area on that
closes the active tab
tile all the frames
closes the given tab
update the scanner if necessary
returns true if the desktop contains no internal frames
reads from the input stream and displays it in the gui
sets the status of this file
closes all tabs
get selected window
loads the header document and experimental
sets the selected window
returns an iterator over the entries in this table
creates a new scanner and installs tokens
create a new ini file
sets the next window to the one selected
parse the header
returns the button manager
set the text to the given string
closes the current window
resolves external entities
returns the action associated with the button
closes all windows
opens a new window to the end of the application
loads the gesture library from a reader
returns the drill message of the given exception
loads a image from a reader
loads a new xml file
save a list of xml files to a file
save a new xml document into a file
fires a model changed event
save an xml document to a file
returns the option code of the option switch
save the current tree to the given file
returns a source object for the given document
shows the dialog and returns the option selected by the user
adds the listener to the domodel
returns the content pane
apply the specified xpath to the current document
expand all the rows in the table
get the status panel of the wlandscape app
get the project of the wadl project panel
copy selected node to new location
sets the status panel to use a new file
get the w3c editor
loads a tab from a given file
returns the tabbed pane
returns the edit mode
loads the way to tabs from a reader
searches for a node by name
parses the wp grammar
update the gui
update this model
sets the style for the text paragraph format instance
get the current file
sets the new value of the simple property file
shows the adp node
gets the type of this text
gets the instance of the insight handler class
convert a list model to a list model
replace the currently selected content with the given content
called when the main jmeter frame is selected
writes a string to the stream
toggles the edit mode of the current document
adds the listeners
this method selects a tree node
updates the actions
sets the read only field to the given value
sets the status of this editor
show the dialog
returns the last directory that was visited
mouse listener interface method
returns whether the user can edit this file
mouse listener interface method
returns the selected file type
returns whether this content is fresh
gets the untitled file attribute of the mp3 file object
sets the status of the session as a fresh one
returns the number of fields in the current row
populate the fields
returns the next element in the iteration
populate the labels
returns true if the panel was validated
returns the root node of the tree
sets the validated flag to true
checks wether node is a leaf
requests focus for this object
update the undo actions
returns the source of the event
sets the source of the exception
gets the user panel
returns the size of the visualization
show the user interface
set the preferences for the style system
creates a copy of the editor kit
creates a default w3c document for use when no token information is provided
convert the list to a default list model
parses the wp grammar
stop the plugin
validates the given value against the currently selected format
returns a string representation of the current settings of this
reset the reader
reads the next byte of data from this input stream
reads characters into a portion of an array
set application properties
adds a new listener to the list of listeners
fires the given event to all listeners
update the actions
gives notification that an attribute or set of attributes changed
gives notification that there was an insert into the document
gives notification that a portion of the document has been
get the text of the specified type
get the wcs application properties
create hashtable of actions for given text component
returns a string describing parse exception details
returns the number of errors encountered during the last compilation run
sets the path to the compiler
create a jaxb context
get the root context object
called when the ui is being installed into the
gets the desktop of the current application
get the new grammar
print the text components keymaps
removes a highlight from the view
changes the key behaviour according to the current keystroke
set the model for insight control
turns off the row hightlight
updates the next option
get the selected string from the insight model
get the text from the end of line of the line
not used yet
get the current offset from the document
creates a new message object with the soap part contained in the message
registers a new wizard step to the wizard
returns the action group
retrieve the wizard step that is to be displayed
fill the message with the content of the source soappart
get the group description of this dxmleditor
get the number of steps in the step list
populate the message with the soap message in the given soapmessage
sends a message to the given server
return the result of a soap request
recursive method for finding body children of an element
adds a file to the current file list
adds a file to the project
renames the file to the new name
returns the file at the specified index
returns the current number of projects
sets the status of this project
set default stat for file actions
sets the selected file
file exit action performed
checks if the given file is a project file
sets some actions used in tabs
removes the selected file from the list
open a new project from a given file
saves the project
set tab actions default stat
tree selection listener sets selected node
sets default action for this mask
sets window actions
set window action default stat
sets the desktop action default stat
sets the option actions
sets the default project action
set the actions default status
set action for use in a jeditor pane
set help action default stat
set default transform action
mask changed method
executes the job
this method registers a job description as being
registers a job parameter
execute the command
registers all the parameters in the given array
returns the long value of this integer
returns the number of times this test has been executed
returns the index of the execution in the code execute code array
invoked when an item has been selected or deselected by the user
finds the bean index of the given bean in the list of beans
this message goes to drag source listener informing it that the dragging
write a message to the report
write a message to the report
the core option uses a jradio button
this helper method is called for checkbox constructor
attempt to create the mouse event handler for the sprite class
set the font size and width to use
inits the thumb details
calculate the horizontal alignment
attempt to fire an event for this sprite
checks if the robot is over the given position
set the font size
init the thumb color
set the precision
init the values for the thumb position
starts the animation
stops the timer
update the slider
inits the background color scheme of the application
returns true if the option is selected
determine if this option is not selected
set the minimum and maximum limits for the thumb
sets the selected state of the owner group
invoked when a mouse button has been pressed on a component
gets the group that this command belongs to
returns true if the cell is over a certain point
set the sliders value
returns the largest value
handle a change in the inertia value
sets the value type
set the value of the tick number
returns the value
get the value as a float
calculate angle from user coordinates
set the number of ticks
returns true if the value is changing
sets the font to be used
calculates the angle between two points on the map in radians
set the sliders value
attempt to create the event handler for the sprite class
set the sliders value
deselects the selection
set the sliders value
returns the control mode
attempt to create the mouse event handler for the sprite class
sets the size of the slider inertia
set the control mode
attempt to create the mouse event handler for the sprite class
set the tick length
constructor for the core of this panel
attempt to fire an event for this sprite
sets the font
this method is called when the component loses focus
returns the papplet instance which contains the control layer
returns whether or not this component is currently being dragged
constrains the panel to the current position within the window
take the focus
checks if the current mouse location is over a given mouse location
deletes one character from the text
checks if the mouse is over a panel
returns true if this sprite is the mouse ora sprite
changes the alpha value of this component and all of its children
sets the tick colour for the windows
this method is called when the cursor is moved to a component
returns whether this panel is collapsed
deletes one character from the current selection
sets whether the mouse is over the ellipse ora
enables disables all options
gets the option at the specified index
adds a new option to this group
adds an option to this group
set the focus flag
removes the given option from the list
sets the colour to be used for each tick mark
removes the option at the specified index
get the value of the range
remove option with the specified text
sets the option that is selected
sets the selected
set the selected option by the given text
returns the currently selected option
returns the option that deselected the option for this option
returns the index of the selected option or 1 if not selected
returns the current value of this code number chromosome code
returns true if this field has focus
returns the index of the first selected item
returns the selected text contained in this code text component code
sets the font colour for the windows
returns the selected text
returns the number of options in this list
copy selected substring to clipboard
returns true if this button has the key focus
the core of this button is
set the font colour
set the needle angle to a new value
returns the cursor position
sets the needle angle to a new value
return the maximum width for the button image
return the angle that the value will be in the range 0
returns true if the mouse has moved
get the height of the button image
checks if the given angle is in a valid arc
adds a component to this container
makes sure the angle is valid
set the z coordinate of this component
sets the images that will be displayed in the button
removes the given component from this container
set the images that are pressed and left on the button
unsets all components of z
set the images that compose the button text
sets the bezel width of the bar
returns the selected text contained in this text component
sets the flag that controls whether or not the value track is visible
sets the local color scheme of the current application
returns the flag that controls whether or not the value track is visible
the value of the selected text
sets the number of spaces the number of tick marks before the
set the text to be displayed
set the number of tick marks
sets the font
sets the text alignment
if the rotation represents a mouse this method will set the
set the font size and adjust the font
method that sets the flag that controls whether or not lines are drawn
set the image align type
calculate the horizontal position of icon
creates a new gcscheme object
return the flag that controls whether or not lines are drawn between the
sets the font
change the window
creates the clipboard
copies a string to the clipboard
paste the clipboard contents into a string
scroll up or down by one step if possible
creates the event handler object
fire all events to the listeners
determines if the given point is over the given ay
fire the event
starts the timer for this code component code
start the timer for this code nrepeats code
stops the timer
checks if the timer is running
obtain an audio mask
set the delay between updates
gets the interval between updates
returns true if the object is still valid
calculates the absolute position of this component
called when a file is missing
set the font and calculate the width and height
determines if the given point is over the specified
draws the image
initialize the thumb details
add a component to the container
check if the robot is over the given position
add a new data object to the internal windows data table
sets up the size
set the background color of this cell
attempt to pre process the sprite for this sprite
sets the on top flag
attempt to draw this sprite into the sprite class
mouse event mouse event
attempt to post a sprite for this sprite
create the slider
sets the location of the jframe and also the sprite
creates the options
makes a new goption
sets the visibility of the dialog
set the font size and the twin text
sets the slider color scheme
set whether the applet is resizable
process a slider
when the user selects a text option call the
on mouse down fire the event
sets the selection to the given index
set the text alignment
set the background color of the control window
sets the text that is selected by the user
set whether the control should be removed automatically after each control
adds a new option to the group
invoke the event handler if any
set the font size of the current font
adds a new option at the specified position and modifier to this group
sets the action for the window close event
removes the option at the specified index from the group
calculate the horizontal alignment
inits the thumb details
removes the specified option
draws the slider using the current drawing parameters
returns true if the given point is over the given ay
this method is called from the event handler to add a
p returns the action on close
sets all sliders to invisible and sets all sliders to false
called before the slider is moved
closes the frame
expands the slider
adds an event handler to this field
remove control from g4
set the sliders value
this method is called when the component loses focus
attempt to create the mouse handler for the sprite class
loose the focus
get the papplet instance which contains all the control classes
attempt to create the pre handler for the sprite class
take the focus
loose the focus
attempt to create the mouse handler for the sprite class
set focus flag
attempt to create the post handler for the sprite class
constructor for the panel
this method is called from within the constructor to
loose the focus
adds a component to this panel
invoke the event handler method of the event handler
copies a string to the clipboard
this method is not implemented
inits the thumb details
draws the slider using the current drawing parameters
copy a substring of text between start and end
constrains the panel to the current position
update the x position of the cursor
sets whether this panel is collapsed
enables or disables all components in this container
returns the index of the nearest gap
sets the text value of the text box
sets the border of this button
returns whether the background of this label will be opaque or not
sets the alpha value to the specified value
appends an error to the output stream
if the quiet parameter is true then it is set to true
create a hash set of all the fields in this group
recursive method to build path
creates a selection listener
creates a new row for the table
creates a new row for the table
get default foreground color
returns the in range color
updates the graph for the given metric source
add metric per string child to tree
creates a new table tree item
creates a new table row
adds a node to the given layer
add the title of the table
add metric per item child to tree
add the name of the item to the title list
the code java element selection listener code implementation of this
the class name of the calculator
returns the level of the configuration
returns the name of the configuration set
generates a calculator object for this file
sets the propagated flag to the specified value
remove the project from the hash table
returns the compilation unit this operation is working on
set the metric value
exports the export export dialog
sets the average value for the input
sets the maximum value of this input
returns the metric with the given id
recursively calculate the nesting level of the parent metric source
returns true if all threads have been interrupted
gets the average of the given name and permanently
returns the maximum value for a single feature
returns the java element created by this factory
invokes the calculators for each calculators value
sets the do recurse
setter for ast node
merge all efferent couplings i
stores the various metrics sourcemap
returns the hierarchy of this type
this method sets the ast node
scan all metrics defined in the extension point and install the metrics
returns the class name of the class to be created
returns the description of the configuration
returns the namespace of the xml element
creates the exporter
determines if this property is propagated
initialize the display order preference for all metrics
check if the operation is canceled
returns whether there are any errors gathered for the given project
add a listener to be notified when the metrics metrics are available
performs an incremental build
push new changed command onto the stack
dequeues the first command from the head
returns true if the given package fragment is enabled
pushes the given resource onto the stack and processes it
adds metrics builder to project description
returns true if the plugin is enabled
removes metrics builder from project description
initializes the table of the various metrics in the table
pushes the given resource delta in the stack and processes it
enables or disables the given item and all its children
execute the command
checks whether the table tree item can be enabled
number of outgoing arcs
returns the vertex at the specified index
the outgoing arc to another vertex
returns the number of routed arcs
returns the tail vertex at the specified index
adds an incoming arc from this vertex to the given vertex
returns the vertex at the specified index
resets the visited state of this component
adds the given vertex to the graph
performs a deep search first of the graph
mark this node as visited
return the node at the given index
returns the edge at the specified index
delete all edges contained in the vector
removes all the commands in this project handle which are not
delete the nodes specified in the vector
returns the horizontal scrollbar
get the hyper scroll
returns the scrollbar that controls the rotation of the scrollpane
get the locality scroll
returns the zoom scroll
calculate dcd from call data
nic calculation by data
calculate ndc for call data
the network has nic
returns the edge at the specified index
setter for the result of a metric source
populates all the methods that are not connected
marks all calls that have been accessed by the call data
return the width of this node
marks all methods called by a call data object
gets the index of the given member
paints the small tag
collects all call data of the given type
helper method to check whether a method is accepted or not
returns true if the member should be ignored
determines the rule for processing the field
called when the enable disable state is changed
returns the signature for a given method
returns a string that represents the methods called map
returns a string containing the names of the attributes
gets the adjacency matrix
returns the adjacency matrix of this connection
shuts down the application if it is embedded
returns the integer value of a boolean
save all measurements to the database
creates the metric values table
invokes the calculators for each calculators value
enable or disable the dependent metrics
this is the distance metric between two metric values
calculates the instability
filter out everything in the method body
create a hash set of all the fields in the class
recursive method to build path
return a string representation of this max
add the title text to the titlebar
returns the astnode of this class declaration
returns the list of handles
sets the ast node
merge a set of efferent objects
returns a new source for the given input
display dependency graph
returns the metric with the given id
scan for metrics in the extension point and install them
do the recursive work of finding a node
initialize the display order
get all the metrics with the given name from all the children
get a list of all the averages that have the given name and per
gets the lasima of all children with the specified name
returns the average for the given name
returns the maximum value for a single attribute
tests the equality of two metric objects
returns the path of the compilation unit that contains the method
returns the node that represents the actual state of the compilation unit
invokes the calculators for each calculators value
returns whether there are any errors gathered for the given project
queue a command for execution
remove the first command from the queue and return it
adds the id builder to the project
remove the builder from the project
pushes a new changed command onto the stack
returns true if the package with the given id is enabled
returns true if the persistent property is enabled
initializes the table
enables or disables the given item and all its children
helper method to enable or disable all dependent metrics
returns whether the given item is allowed to enable
execute the next command
this will add a new command to the queue
removes all commands and processes that are in this project handle
recursive method to build path
initialize the display order preference for all metrics
add strong edge strong to graph
updates the graph for the given metric source
creates a new source for the given input
recursively calculate the nesting level of the parent metric source
display dependency graph
scan plugins for metrics and calculators and install them
initialize the display order preference based on the metric configuration
collects all call data of the given type
helper method to filter out methods that are accepted by jml
returns a string that represents the methods called map
returns a string containing the names of the attributes
gets the adjacency matrix
saves the metric data to the database
gets the cards x coordinate
refreshes the text pane
refreshes the status of this thread
gets the card y coordinate
gets the gap width of the cards in pixels
displays the center of the frame
refreshes all panels
start the game
adds a score to the match
start the game
resets the players score to 0
waits for the next move to be done
get the next move in this path
puts the given move in the move queue
start the game
returns the number of blocks
returns the number of corners
returns the representing char
sets the representing char property
returns the flag indicating if the algorithm is in flip state
retrieves the state of the rotate invariant
checks if a cell is a block
checks if a tile has a corner
flip the blocks up or down one block by one
rotates blocks by one step
applies all the layout changes made to the specified snapshot
create a new snapshot
returns true if split can be performed on this node
returns whether this split can be split
returns the fixed width of this component
returns the used width for this page
returns the minimum width of a midlet representation in
returns the maximum width of a midlet representation in
does this stream have a substream
returns the substream
sets the substream
reset this stream
returns the font metrics of the graphics object
returns the line reference font metrics for the current chunk
sets the line reference font
sets the margins
sets the size of a page
clears the layout data
removes all columns from layout data
returns the data for the given column
clears the list of layout data
add some glue to paragraph
adds a penalty to the paragraph
adds a forbidden area to the list of areas
setter for property hyphenator
resets the forbidden area
adds a table layout if the element is a paragraph or table
lays out the given paragraph
need to be overriden for linking
creates a snapshot of the layout of this column
applies the layout to the specified snapshot
mark a paragraph element cnt
determine whether this instance is non breaking
returns the name of this cluster
destructively clear all lines except the first n spaces from the current
returns the natural width of the item
initialize a new float
returns an interim float placement with all the given anchors
try to place any deferred floats in a given position
apply the given interim
finalize the float placement
create a layout snapshot for this cluster
checks if all children have finished their sub layout
adds a new paragraph to the buffer
adds a paragraph before any deferred paragraphs
returns the column on which the current cluster is defined
restore snapshot column values from a backup column
switches to the next column if possible
called when the user clicks the ok button
cancel the activity
add a list of activities to a pick list
loads the content of the given code program in the given filemanager
hides the window icon
make the icon for awhile not visible and hides it
checks if market link is available
get notification timeout from preferences
launches a new note launch activity to insert a new note
set the callback that indicates the duration of the task
sets the current day
cancel the notification identified by code notification id code
sets the current second
update the display of the day
set the state of the spinners appropriate to the current hour
pick or edit an alarm
set the state of the spinners appropriate to the current minute
update the second display
edit an activity that has the currently selected information
get the duration of the calendar in milliseconds
sets the duration of the current time
dismisses the countdown
start a thread to search for the search
check if the given password matches the users password
saves the password
delete the password entry with the given id
delete the password entry with the given id
called when menu button is clicked
called when menu button is clicked
follow up for the delete password dialog
fills the list with the categories and passwords
initialize the key generator with a salt
get a salt from the table
store the table as a salt in the database
used to get the session key
add a category entry to the table
create a new session key for this query
sets the automate checked state
start a thread to backup the database
get the cipher access for a package
prompt the user to select a file
start a new import database thread
called when the activity is first created
recursively deletes a directory and all its subdirectories and
called when loading of the file is complete
called when reset is called
applications should call this method when they are done with resources
make a view to hold each row
return the position in the list of the selected item
this implementation of code motion event version code does not
retrieve the velocity tracker version
a default implementation of
set the text to be shown when the list is empty
sets the initial saved state
is this class detached
get the important data from the internet
schedules the next run
returns false since the idle state is not handled by the driver
by default does nothing code return false code
returns false since the shake is not supported
default implementation of
returns false since the catch event is always ignored
convert to integer values
returns the length of an integer in integers
gets the integer difference between two sensor values
returns the integer value of the sensor event
called by the animation system when the animation is held
inform the view that the animation is hold by the view
disables sensors on all sensors
activates all of the sensors on the magnetic field
this method tells the device to use best available sensors for
update the world speed hack for sensors that use best available
resets the sensor reading and compass sensors to 0
holds the animation lock
create a new instance of a service to log all name
action bar helper code to be run in
get the data value at the given column number
sets the name of this tt modbus slave exception tt
refresh the alarm
easter egg is selected
get the version number
get application name
returns true if the resource is required for an update
this method should be called when the user clicks the finish button
version utility to compare with other version
initializes the quick bridge
quick post a message
sets the event intent
returns the most recently contacted activity or null if not available
called when the source is clicked
only starred contacts are listed
called when a contact is selected
sets the config intent
called if the source filter button is clicked or not
load the interaction type from a cursor
converts the given event to an image view
returns a cursor for the handle
returns true if this filter has any filters
open a cursor for the given selection
removes all the filters of the given source
open a cursor for the given source uri in the given context
remove all filters for a contact
returns true if there are any filters applied to the given contact
loads an event source from a uri
returns true if the given contact filtered the source
returns true if this filter is more than the specified contact
returns true if quick post can be enabled
code start pretty time refresher code starts the pretty time refresher
code stop pretty time refresher code calls stop on the
load the contact from a cursor
deletes all filters
sets the quick post context
removes an observer from the list of observers
enable an observer and notify all observers
releases the cursor
release any resources allocated by this aggregator
returns most recently contacted activity
update the item state from the given event source
checks if an activity context exists for the given contact
sets a filter for the text
update all the source states
releases the observer
unregister the observer
crate a intent
init the list item view
this method returns a cursor over the events that are to be
query for events
queries the events that match the given key
queries for matches a constraint
get the display setting of the sortorder attribute from prefs
check if market is available
get the most recently used theme
inserts a new note launch activity
this method looks for tags in the content resolver and returns a cursor
return a cursor over all tags that match the given content uri
returns a cursor over all tags for the given content type
return a cursor over the list of all tags in the database
return a cursor over the list of all used tags
start activity to add a tag
scans the files found in the external storage
scans in the current thread
called by the slider when the user moves the slider position
returns the appropriate media type string
picks the item at the given cursor position
launches the item activity
gets a content body matching the uri
start activity to add a tag
start the save activity
sets the name of this code title code
get the default encoding from preferences
adds a category to the list of categories
returns the name of the feed for the given category id
sets the current categorie
extract the content of the browser
set the eula in default state finishes
check if eula has been accepted and do not accept
saves the notepad to a sd card
write a string
writes a string value
writes the string representation of an integer to the stream
writes a newline to the output file
prompts the user for confirmation of deleting a store
deletes a store
loads the theme to be used for the current document
display the import policy
constructor that binds gtalk service to the service
register a callback to be invoked when the item is changed
return the interpolation between colors in the given fraction
determines the width of this view
determines the height of this view
set the month and highlighted date
sets the month
returns the name of the sd card file
changes the logo image uri
displays the artists information
show a notification while this service is recording
displays the authors name and intent about
sets the default sensor manager
disconnect from the server
connects the client to the server
displays the comments about the given package
disconnects the client from the server
checks if the client is connected
unregisters the specified listener for all sensors
get a default sensor of the specified type
this method is used to register a sensor with the
removes a sensor from the simulation
displays the copyright information for the given package packagename
enable a sensor in the simulator
checks if all sensors of the specified type are in the list
removes a sensor from the list of sensors of a specified type
called just after the actual database has been created
displays the list of documenters needed for the given package
called when the activity is first created
displays the recent changes on the text box when one one is selected
connects to the server
disconnects from the server
change the power of the simulator
change the presence of the agent
run method to start the simulation
change the ac or off value
scales this vector with the given factor
rotate about the yaw by angle in radians
change the health of the current selected item
change the status of the unit
send gps data to the server
this method is used to slow the emulation
this method will be called when the next time event occurs
called when a new client connection is established
displays the name and version text for a program
disconnects the simulator and all of its components
get the application label for a given application
sets the state of the buttons
read all available sensors from the sensor sensor source
determine the name of the version to be created
displays the website link for the given package
this method will return a double value from textfield
creates a new client
stops the client
displays an email address
returns the entered longitude
returns the lis name
adds the first simulator instance to the set of instances
sets the gps to the given values
returns the telnet port
print the status in the status bar
inserts the new item into the list
shows the about dialog
starts the server
stops the server
removes the state of a specific view
shows the big view for the given small view
check if the state is the current state
pick item from the given cursor
updates the information about sensor updates
set the port to be closed
adds a message to the message window
set the mobile device view
returns the port number
add a sensor simulator to this system
called when a new client is connected
this method will return a value from the textfield
add a sensor to the list of sensors
this will start the animation
unregisters the specified sensor to be notified of any new sensor
add a simulator to the current simulation
unregisters the specified listener for all sensors
listen for incoming messages
connects to the server
disconnect from the server
changes the power capacity
creates a new list with the given name
send the current gps position to the sensor
stops the client
slow emulation method
interrupts the thread
stops the server
invoked when an action occurs
changes the name of the list currently selected in the dialog
disconnects the simulator
add a new sensor simulator tab to the current simulator panel
returns a random double
used to update the sensor state information for the selected sensor
clean up the items in the list
registers a listener for a specific amount of sensors
registers a listener for the sensors on the client
unregisters the specified listeners for the sensors
unregisters the passed listener from the
disable a sensor on the view
enable a sensor on the i o client
returns the number of values for the specified sensor
returns the update rate for a given sensor
sets the update rate for a sensor
unset the update rate of a sensor
enable the specified sensors
prompts the user to confirm a delete of the list
connects the client to the server
disconnects the client from the simulator
deletes the list with the given id
stops the client
stops the server
returns a random double
loads the theme of the currently selected item
listen to the slider
changes the mobile color
shuts down the server and sets the port to close all connections
called when a button in the options menu has been pressed
get the port number from the port text field
called by the gui when a new client is connected
this method will return a double value from textfield
sets up the server and closes all connections
connect via telnet server
adds a message to the end of the text area
set the spinner list adapter
returns the telnet port
callback for a new client
updates the sliders from the file replay data
updates the sliders from the file data
this method will return a value from textfield as a double
this method will return a value from textfield as float
sends a shutdown message to the http client
find the nearest neighbour tour
place ant randomly
empties the visited memory
chooses the closest city to the next city
updates pheromone using the constant values defined in constant
weighted matrix pheromone
find the nearest neighbour tour
clears all the cities in memory
write the time used tours tours
updates the global pheromone information
updates pheromone level information
initializes pheromone trails with the given initial trail values
computes the total information gain for the cities
outputs a solution for the current state of the solver
computes the total information gain for each cities in the population
calculates all pheromone generalized experience
evaporation recursive
returns the distance between two points
do two files
print a string and then terminate the line
returns the heuristic value of the three values
calculates the heuristic between the 2
returns the distance between the two given vectors
returns a hash set containing the coverage for test case n
returns the transition probability between two labels
prints the usage
clears all objects from the manager and notifies observers
adds an object to the model
load the network
returns the object at the given position
loads the network into memory
notify all observers of a change in the list
returns the number of images in this image manager
since the data comes from an array just returning the index is
returns the id of an image
adds the zoom controls frame to the layout
adds the zoom controls to the layout
add your post init code in here
create all obstacles with the arrows from scratch
creates the player plane for the game
builds the image viewer
updates this object
schedules an object to hit for a projectile
triggers the projectile
plays the sequence
returns the view port x
gets the maximum volume of the channels in this
sets the volume
returns the view port y
stops the sequencer
closes the sequencer and synthesizer objects
sets the view port
this sample function for reading a midi file
moves the viewport according to the move x and y coordinates
moves the viewport up by the specified magnitude
moves the viewport down by the specified magnitude
creates a shallow copy of this midi asset
moves the viewport left by the specified magnitude
moves the viewport right by the specified magnitude
creates a deep clone of this object
validate the view port of this ribbon gallery
get the asset name
returns the image realisation
returns the image that is realised
draws the sprite onto the graphics context provided
creates a shallow clone of this image
creates a deep clone of this asset
set the volume for this sound
draws the sprite at the specified location
set the pan value
plays the clip
tests if the clip is currently playing
stop the clip
updates the sound
clones this sound
closes all the sounds
returns a shallow clone of this ribbon asset
clones this object
clones the current image
returns the play count
adds a new image asset to the resources
gets the value of the home frame property
this method returns the current frame
get the message display time enabled value
get the duration of the message display in milliseconds
returns the number of images in the image set
gets the message display initial pause
get the image with the given index
disable the message display time
returns the current frame as an image
return the period between each frame of the animation
sets the message to be displayed
set the period between each frame of the image
returns the text of the message
sets the message font
sets the number of playings of the animation
returns the message font
sets the home frame
sets the message color
returns the color of the message
this method initializes j button cancel
draws the current frame to the specified graphics2 d
set the border width and color
creates a clone of this image
clone an image and all its images
returns the rendered image
set the assembly volume
sets the width and height of the viewport
creates a shallow clone of this message
returns a deep clone of this asset
resets the points of the target
stops all sound clips
specify the number of points to be used by the bar chart
validates the image and image dimensions
stop the playback of a sound asset
adds the given number of points to the line
returns the image that is realised
receives notification of a line event from an assembly
subtract the specified number of points to the line
add an image asset to the store
creates a shallow clone of this tile
returns a deep clone of this tile
returns the target points
returns a shallow clone of this object
returns the maximum number of points
set the key click sound
clones the object deep copy
sets the maximum points
sets the cursor width
sets the cursor colour
sets the maximum update point change
sets the selected status of the button
toggle focus on mouse over
returns true if the button is selected
toggle focus on mouse click
sets the offsets used for the inner world
returns true if the mouse is over this component false otherwise
sets the maximum text field length
sets the focus state of the control
returns a text element that matches the given text
returns true if the user clicked the button
define the text to be displayed
trims the capacity of this vector to be the vectors current
increases the capacity of this instance if necessary to ensure that it
this is called when the splash screen is displayed
sets the shape for this shape painter
set the alignment of the text
build the asset manager
returns the alignment for this node
find the index of the given object
removes the splash screen
set the image separation in pixels between character
return the index of the last occurrence of the given object or 1
draws the block
returns the character separation
returns true if the initial game layers should be created
gets the specified element
set whether to use fixed width characters in the text element
replaces the specified game object in this container at the specified index
returns whether the parser should use fixed width characters when parsing
appends the specified element to the end of this list optional
restores the full screen
inserts the specified element at the specified position in this
adds a midi asset to the media store
records the initial available video memory
starts recording the current interval
removes the element at the specified position in this list
record the start time of the update
records the update time of the single component
removes the first occurrence in this list of the specified element
records the render time of a single frame
renders the game layer
records the loaded asset size
set the relaxtion value on this joint
called by the system before each simulation step
apply the impulse force to the joint
sets the game layer visibility
returns the average frames per second
renders the entire game
removes all of the elements from this list optional operation
returns the average number of ups
retrieve a asset from the store
returns the average update time of the system
appends all of the elements in the specified collection to the end of
shutdown the game
returns the average amount of time it takes to load the database
gets the value of the visibility property
returns the average render time in milliseconds for this widget
inserts all of the elements in the specified collection into this
sets the mass of this physics node
get the average render load between rendering time
retrieve a clone of an asset given its name
returns the number of bytes available in the video memory buffer
removes from this list all of the elements whose index is between
sets the force value for this tank
set the current activity
returns the number of available memory
sets whether the server allows to enable at rest determination
returns the total size of all loaded image assets in bytes
returns the number of game objects that are active in the game
retrieves a particular asset from the asset store
set the gravity of this body
gets the current activity of the layer
returns the number of visible game objects
remove all the arbiters for a given body
setter for property relaxation
this method updates the mass and inertia values
retrieve a graphical asset from the store
getter for property relaxation
add a joint to the simulation
returns the x coordinate of the anchor point relative to the control
sets the connections between the connections of the shapes
returns the y coordinate of the anchor point
sets the shape connections
retrieves a graphical asset from the store
gets the collection of joints
increases the number of sort game objects by one
remove a joint from the simulation
retrieves a sound asset
sets the impulse
remove all bodies and joints of the world
returns the impulse applied to the block
sets the impulse propagation
sets the offsets
sets the width and height of the surface
retrieves a sound asset from the asset manager
sets the radius of the surface
sets the impulse brittleness
queues a game object to be added to the end of the queue
set the gravity vector
queues the given game object to be added to the db
calibrated force of gravity for the accelerometers x axis
calibrated force of gravity for the accelerometers y axis
this method is called when the body is broken out of scope
add a new game object
this method is called when a body is broken
this method is called by the simulation framework to perform the simulation
queues the specified game object to be removed
removes all objects from the list of game objects to remove
removes a game object from the collection of game objects
removes all game objects from this storage
update the game layer activity
this method is called whenever the observed object is changed
calculate the success quotient of the current player
returns the user home path
returns the name of the properties file
calculates the victories bonus for all positions
calculates the defeat malus
removes the player with the given number from the list
sets the current player
this method parse the position of the gamesystem
returns the current list
returns the index of the current list in the active tabbed pane
add a new player list to the tab
adds a player to the list of players
adds a player to the list of players
removes the player list tab
returns the path to the directory containing the organizer files
get beq returns the beq
returns the psq
returns the burger b coefficient
returns the price at this position
gets the index of the given player
returns the basis points
gets the gamesystem that this game simulation is in
called when the application is exiting
set beq sets the beq
sets the psq
sets the burger b coefficient
sets the price negotiated
sets the basis points
sets the gamesystem of this panel
setter for property victories
sets the defeat number of a ship
getter for property victories
gets the amount of defeats at the given position
gets the value of the balance sheet value property
setter for property balance sheet value
compares this object with the specified object for equality
gets the current player table
updates the statistics
refresh the frame
set the text of the message
adds a list to the frame
removes a tab
add a new tab
returns the active tab
enables or disables all the player activities
set the enabled disabled status of the list activities
set the enabled status of the new player panel
test negative parsing
test of delete method of class org
checks if all the instances were deleted properly
return the system preferences
delete a detached parameter from the database
delete a detached parameter from the database
find an entity by its id primary key
find an object in the database
update the state of a detached parameter
update the state of a detached parameter in the database
delete a proposal
find the proposal based on the id
delete a vote
update the state of a proposal
find a vote bean by its id
update the state of a detached parameter
delete an existing idea
find an entity by its id primary key
update the state of a detached idea
insert a relation into the database
delete a relation from the database
find an relation in the database
update the state of a detached parameter
delete a question from the database
find a question bean by its primary key
update the state of a detached question
constructs a user object using the given credentials
validates the given password against the current password
returns the hashed password of this user
return string representation of sync directories
inject dependencies into the test instance
inject dependencies into this instance that is this test instance
count the number of rows in a table
create a spring application context from the given configuration locations
fails a test with the given message
mark this transaction as completed
indicates whether or not the trace level is enabled
this is a constructor that takes no parameters
this method is called after the transaction has been committed
log a trace message
asserts that two strings are equal
start a new transaction
indicates whether logging on this level is enabled
log a debug message
asserts that two longs are equal
generates the xml report for all the suites
indicates whether or not the info level is enabled
asserts that two bytes are equal
logs an informational message
creates a section showing known results for each method
asserts that two chars are equal
asserts that two shorts are equal
start of result summary table
log a warning
asserts that two ints are equal
writes the result of the test suite
log an error
logs a message at fatal priority
executes all tasks in parallel
set the xml details
sets the doc type
registers isuite listeners interested in reporting the result of the current
called when a test succeeds
pushes a new tag onto the stack
called when a test fails
pushes a new tag onto the top of the stack
called when a test has been skipped
pushes a new tag with specified attributes
invoked when the test is started
invoked after the test finishes
pushes a new tag onto the stack
pops the top tag from the stack
adds a required tag with the given name and value
add a required value for the given tag
add an optional value for the specified tag
adds an optional value for the specified tag
add an optional value for the specified tag
creates and returns a new reporter instance based on the
adds an optional value for the specified tag
adds an empty element to the root element
add an empty element
ends the html tag
compares its two arguments for order
sets the number of all the counters for this
returns true if this iterator is a skip
reduce the stack trace
restore the stack trace
asserts that the given file is a directory
asserts that the specified file is a file
asserts that a condition is true
asserts that the length of the actual directory structure is correct
asserts that the actual length of the list is greater than the expected length
asserts that a condition is false
asserts that the length of the actual file is a directory
creates a color for testing purposes
asserts that the condition is true
asserts that the condition is write access
asserts that the condition is true
asserts that two objects are equal
asserts that two strings are equal
returns the time out
runs a test case using the given class
starts the test runner
asserts that two doubles are equal concerning a delta
runs the test methods of the current test class
initializes meta groups
asserts that two floats are equal concerning a delta
asserts that two longs are equal
asserts that two bytes are equal
adds a node to the set of available nodes
sets the status of the nodes in the given collection
sets the status of the node
asserts that two chars are equal
asserts that two shorts are equal
asserts that two ints are equal
checks if the iconfiguration annotation is a class configuration
checks if the given configuration annotation is a suite of tests
runs the test case
return true if the code iconfiguration annotation code should always run
asserts that two collections contain the same elements in the same order
asserts that two arrays contain the same elements in the same order
this method creates the workers for given nodes and executes them
asserts that two arrays contain the same elements in the same order
submits all tasks and waits for execution
shuts down the service
asserts that two sets are equal
asserts that two maps are equal
set the output directory
set the output directory where the generated files should be put
turn on off the use of default listener notifications
invoked in client mode
sets the annotation type
set the path to the jar file that contains the test classes
shuts down the connection
checks if the message matches a regular expression
set the dump command
set whether to dump the generated environment files
specifies the number of threads to use for the thread pool
sets whether to dump the system information
sets the parallel mode
log the start of the test
sets the working directory
returns the parallel
sets the jvm attribute of the java config object
fires a on start event to all listeners
set the timeout value
returns the suite of this test
setter method parallel
set the test classes
sets the config failure policy
sets the list of xml classes that will be generated
returns the config failure policy
getter method attribute verbose
add an environment variable to this code body part code
setter method for the verbose attribute
creates the classpath
sets the list of suites to be executed
p get the test
sets the method selectors
sets the list of suites
set the expression to be used for bean shell expressions
returns the expression to be used for the bean shell
sets the list of excluded groups
this method updates the parameters map and adds the new ones
sets the list of groups to include in the search
returns the value of the named parameter as a string or null if
sets the number of threads to run
returns the annotations for this property
specifies the default annotation type for this property
set the main class of the suite
returns code true code if this property is temporary
p set annotations p
set the name of the suite to be executed
returns true if this is a junit suite
save the suite content into the xml file
sets whether junit tests are to be used
sets the test name
sets the output directory
sets the list of xml packages to be processed
set the test jar
add listener classes to the list
p set the connection timeout
p get the time out
p set the suite files
process a method selector element
this method writes the class attributes to the xml selector
this method will add a selector to the xml method
sets the verbose flag
execute before suite of tests
test that we can collect all lots of stuff
executed by a halt target
returns the command line java command
verifies that the factory is parallel to the main factory
create the path using the classpath entry
creates a suite runner object based on the data gathered in this
this method is just here to satisfy interface
the path of the source code to be parsed
sets the master file name
set the slave file name
add a class loader to the project
test method for
test method for
test method for
test method for
test method for
test method for
analisa sintaticamente comando loop
analisa esperado
e logica o arquivo de logica
regra de logica
m todo que t logica a
funcao logica especificado para expressao logica
analisa expressao relacional
test method for
expresso o logica
test method for
test method for
test method for
test method for
m todo que expresso
test method for
this method is used only by nfo is used only by manger
test method for
termo fator termo
test method for
test method for
analisa sintaticamente os termos
test method for
test method for
test method for
analisa sintaticamente o metodo identificador
test method for
test method for
comando saida dans un comando
loads a gantt diagram from disk
returns id of the task in the repository by task name in parameter
gets the task name for the given task id
returns the task meeting for the given task id
gets the task type
gets the task start date
gets the task end date
gets the duration of the task
gets the level of complete level of a task
gets the task priority
gets the task note of a task
returns the resource name
gets the resource function
gets the resource function code
returns the contacts of a resource
get the task property id for a task property
returns the name of the task property
gets the tasks property type
returns the task property value type
gets the phone number of a given resource
modify the project name in the gan file
modify the version of the diagram
modify the diagram in the project
modify the diagram with the weblink in the project
modify the diagram
changes the diagrams view date to the today date
writes out the gantt diagram to the given file
modifies the duration of the task
modify the name of the diagram
modifies the diagram for the given meeting
this method will be called to modify the diagram
modify the diagram
modify the name of the diagram
modify the type of the diagram
sets a value type for the diagram
modifies the diagrams task complete level
change the name of a resource to a new name
modifies phone number of a resource
modify the property in the diagram
returns task with the given id in the repository
returns the resource object with the given id
returns the resource element with the given id
returns task element from the task element list
gets the task property object identified by the property id
returns the task property element with the given id
returns a depend object given its id
returns a depend element given its depend id
this is the entry point method
returns the first element in the list
removes and returns the first element from this list
adds a deposit to the bank
withdraw the balance
removes the first occurrence of the specified element from this list
inserts all of the elements in the specified collection into this
adds the account to the bank
returns the person with the given name
returns the entry at the specified index
returns the compound property model that contains the instance
get the member info for a bean class
send a mail to an address
add system properties to the sensor base
called when a bad timestamp is returned
checks if the auth user is an admin
returns the property specifying if the resource should be compressed when
returns true if this repository should be re indexed on startup
updates the cache with the given user and user ref
finds the default file in the server properties directory
check if the user table exists in the database
saves the properties to the default file
initialize the database by creating tables for each resource type
saves the properties to a file
gets the sensorbase user
gets the sensorbase password
sets the project names
returns the start date
constructs a clause of form owner user1 or owner user2
sets the date when task was started
returns the end date
sets the end date
gets the sensorbase host
returns the hackystat local host
returns the telemetry host that this telemetry server communicates with
deletes the resource specified by the given statement
sets up the proxy route
update a buddy list with data from the server
user can call this method to see if a message has been handled
adds a message id to collection
adds a listener to the list of listeners for this facebook
removes a listener
invoke a facebook user status change event
send typing event to facebook listeners
invoke an error event for a facebook event
invoke facebook disconnection event listener with a reason
returns the pattern matcher
returns a string representation of the object
initializes the pool
retrieves a pipe from the processing queue
add a pipe to the list of processing pipes
removes a pipe from the list of processing pipes
returns a resource pool
adds a resource pool
removes a resource pool
get the processor with the given name
adds a processor to the group
removes a processor from the group
returns an initiliazed instance of form component
returns an initiliazed instance of string item component
returns an initiliazed instance of ok command1 component
this method is called by the bluetooth server when
this method is called for each discovered bluetooth devices
returns an initiliazed instance of string item2 component
this method is called by the server when the search is completed
returns an initiliazed instance of wait screen component
returns an initiliazed instance of task component
returns an initiliazed instance of image component
returns an initiliazed instance of ok command3 component
get the next token
read whitespace characters
remove all of the obremovebles from a vector
returns the scalar multiplication factor
get the vector of all the charts
get the directions
get the waypoint list
this method returns whether the user wants to continue
increment the count of the number of files received
increment the count of the number of files received
method to notify that line has been processed
called by the code stats code object when a number of bytes have
merge the contents of another file info object into this one
can this file be overwritten by this filter
urldb gets the value of this field
sets the urldb
adds all event handlers the editor needs to work in response to text
closes the frame
sets the value of datos curso
adds a menu item to the popup menu
adds systray to system tray
resizes the buttons of the toolbar depending upon the total number
selects the specified internal frame upon the virtual desktop
notifies the window about changes in the database
sets the this reference of this object to the given object
returns the number of currently running threads
initializes the application
processes the mail
processes a map of data extracts
closes the connection to the database
helper method for processing a crawl
process the ndr metadata section of the file
this method processes the mailing list to collection
this method is used to process the search
process the database setup
reads the dds document from the code dds code
reset all properties to their default values
called when the servlet is taken out of service
get base url
get the xml declaration
get the root open tag
get the root close tag
returns the example id
returns the name of the repository
adds a feature to the error attribute of the repository form object
returns the version of the protocol
get the value of admin emails
returns whether any errors were encountered during parsing
removes the admin email address and its corresponding group
get the earliest datestamp that the repository was last updated
returns the errors
returns the deleted record
returns the granularity
returns the compressions defined in the configuration file
returns the available descriptions
log a message
obtains the serialized and deserialized email addresses of the admin
this method adds a new admin email to the data store
p removes an admin e mail from the persistent store
prints a line to standard out
add a derived datatype
returns true if the attribute max occurs
method get type by name
adds a page to the document
adds a new page to the form
derive a simple type from its global definitions
returns the pages of the document
derive the xsdatatype for a given simple type a global def
return a string representation of this object
get an attribute from the attribute map
returns the name and mapping of this object
removes all children of an element
print a line to standard out
returns the elements of this list as a list of
get a pretty label name for cross reference validation type to validate
given an xml element this method returns the base name
returns a string representation of the object
get name space info
write the page to jsp file
render a node using an xpath
returns the global definition with the given type name
returns the global definition for the given type
write the object to the writer
called when the servlet is being destroyed
gets the node that represents the instance document for the xpath
delegates the rendering to the renderer
get the schema node specified by the given xpath
initializes the factory
returns true if this set contains the specified key
returns a list of the keys in this cache
returns a list of all the values in the map
returns the value of the specified attribute
stores the given value under the given name in the global def map
initializes the xml schema files
method get xsdata type
method get xsdatatype manager
returns the global def map
gets the complex types attribute of the file indexer class
get the path of element n from the footnote pane
get the document instance
gets the complex types attribute of the definition miner object
gets the simple types attribute of the standard class model object
gets the simple type attribute of the def map object
gets the schema node map
gets the global elements attribute of the definition miner object
gets a list of keys from a schema node of a given node type
indicates if the element is repeating
returns a list of all the values in the map
returns the value at the given path
sets a schema node specified by a path to a schema node
displays all global elements defined in the global def map
debug display of the simple type values
displays the current attributes in the schema node map
displays the complex types
write compositors for the elements of the complex type to the file
checks if the type is an enumeration type
print a line to standard out
gets the ordered pages attribute of the property set object
returns the display type of this data source
returns a page list of the current request parameters
returns the schema node
renders the given choice element as a choice
write the object to the writer
get the name space info
to string method
compares its two arguments for order
returns the schema node that this object belongs to
sets the schema node
returns the global def
sets the global definition of this variable
gets the multi box input attribute of the simple jsp renderer object
returns the framework
inits the report
convert an element to a jsp page
creates an instance of the renderer
sets the framework attribute of the weblogic object
creates an instance of the renderer
method render element debug info
returns the type element of the current element
description of the method
render the sequence
gets the xmlwriter attribute of the jbuilder editor app object
set the schema helper
get the schema helper
gets the instance specified by the xpath expression
sets the vocabulary
get the simple type box
gets the appropriate renderer for the given xpath expression
gets the vocabulary for this result
opens a check
description of the method
gets the text input attribute of the simple jsp renderer object
gets the simple type label
creates the formatted label element
create and return a table element containing an action table
render the complex type box
return the label for the type of this node
return a html element that can be used to create the input area
returns the renderer class name
does the current file have a mdv mapping
create the complex type box element used in the form
creates a new item control
initialize renderer with data retrieved from the xml file
gets the select input attribute of the simple jsp renderer object
render the simple content box
override to return the input element
method render simple type
creates a repeating item controller
renders the complex type
returns the text input element of this pane named description
creates the formatted label element
render the sequence
creates an element containing a label cell and a table
make table for action
returns a list of sub elements sorted in the order they appear in
creates an instance of the renderer for the given xpath expression
creates an instance of the renderer
creates an element that does not exist
returns a list of sub elements
creates an element that doesnt exist
returns a string that describes the content of the renderer
tears down the fixture for example close a network connection
renders a choice compositor for a given choice compositor
gets the test attribute of the simple test object
updates the messages of the given input element
creates a repeating item box
sets the forward url
gets the forward url
returns the vocab input state
sets the record id
return keywords as a comma separated string
returns the record id
gets the label for a repeating item
returns the keywords of the query
sets the context url
sets the request
sets the error message
returns the error message
return a html element that can be used to create the text area
gets the select input attribute of the simple jsp renderer object
creates the xml element formated label and input table
creates the formatted element
returns a div element representing the level
create a div element that has the given level
returns the tool help for the given tool
attaches a tool help message to the given element
converts a string to a jsp quoted string
creates an instance of the renderer
creates an instance of the renderer
attach all messages to the container
process incoming http get requests
sets the dcs status
sets the dcs status note
sets the dest collection
gets the value of dest collection
returns the repository service client
sets the repository service client to use
gets the mail server
sets the email to addresses
sets the email from
gets the value of email from
compares its two arguments for order
returns true if this item has a duplicate
returns the duplicate sim
sets the duplicate attribute of the duplicates object
gets the list of similar mirror urls
sets the similar mirror urls attribute of the validator results object
gets the similar primary urls
sets the similar primary urls
return a string listing the similar primary urls for a status note
return true if the module has similar urls
gets the reference collection
make the similar url query str
creates a new resource record instance
convert a string to a string of the form grade range
returns the message subject
returns the title of the document
sets the title of the document
returns the url of the document
description of the element
get the creation date of the document
returns the last modified date for the document
get the name first xpath
returns the name last path
returns the email primary xpath expression
returns the instance name
performs a prtln cross reference
return a string representation of this object
called when the servlet is being destroyed
called when the servlet is being destroyed
returns the title of the document
gets the xml format for the annotation
creates a new comment record
sets the title of the page
returns the item id of the suggestion record
get the client for the search service
set the web service client that will be used by search
returns the full description of this file filter
gets the schema helper for the suggest
gets the organization element
gets the parent element of the person
returns the role of the document
returns the instance of the suggest comment helper
returns the share name
get the first name
return the name of the last path
gets the email address
returns the current instance of the suggest resource helper
returns the instance name
get the creation date
reset method for bean
this method clears the coppa flag
set the creation date
clear all the instance variables to allow this instance to be reused
clears the form
sets the item id
returns the item url
sets the item url attribute of the project object
sets the xml record
sets the results of the validation performed by the
getter for services submission error
returns the title of the item
indicates if the job has failed to submission
returns a duplicate record for the current validator result
sets the title of the item
returns the xml record
gets the dup record id attribute of the duplicate object
returns the error messages generated during validation if any
sets the description of the user
add an error message to the list of errors
returns the value of the input parameter
returns the value of the input parameter
sets the title of the user
sets the value for the given input name
gets the share
set share property
returns the doc map
put a value in the document
gets the name first
returns the string value for the given xpath expression
sets the first name of the customer
sets the url attribute of the web service object
gets the last name
sets the last name of the user
returns a print writer object that can send character text to the client
gets the email
sets the email of the user
gets the inst name
sets the status code for this response
sets the inst name of the instaiton
sets whether grade ranges are preserved
return the string representation of this object
set the content length for this response
initializes the filter
gets whether ranges are preserved even if the original grade may be
initializes the filter
sets the array of grade ranges
generate the validation message for the request
gets the value of the name first property
converts xml to html
gets the last name
append validation report to file
appends the report to the given
gets the value of the email primary property
sets the email primary attribute of the user bean object
gets the value of the inst name property
to string method
returns the context url
gets the value of the oai id pfx property
sets the oai id pfx attribute of the oai id object
sets the collections
gets the collections
sets the collection labels of this collection
returns the collection labels
print a line to standard out
returns the formats
sets the list of format elements of this repository
returns the labels for the axis
returns whether or not a warning message is displayed in the
sets the list of supported formats
shuts down the oai provider servlet
gets the allow dup dir
gets the default dir attribute of the file chooser object
get the number of harvested records
sets the selected collections
gets the backup one property of this folder
gets the zip latest suffix
returns the backup two
returns the backup three
returns the is zip present
returns the repository name escaped
gets the directory for the harvest
gets the result doc list
getter method for split by set
sets the results
returns the set spec
returns the set spec as html
sets the result doc
gets harvesting interval
get the result doc
returns the interval granularity
gets the interval granularity label
destroys the servlet
returns the enabled disabled status
gets the metadata
gets the last harvest time of the repository
gets whether all elements in the tree should be harvested
gets the number of results returned by the query
get the query string
set the query string
sets the harvest all attribute of the flat file store object
sets the value of allow dup dir
set the value of num harvested last
get all params that are not defined in this request
sets the id of the user
returns the name of the command in case sensitive fashion
kills the harvester
set the default directory
sets the backup one
sets the zip latest
sets the backup two
sets the backup three
returns the start of the time period
sets the is zip present value for this wsyetki kullanici
gets the ending of the current page
set the value of warn r
returns the offset of the first character in this string
sets the harvest directory
returns the length of the page
set if split by is set
sets the num paging records
sets the repository name
gets the directory for the harvested records
sets the base url attribute of the application object
sets the specification of the command used
sets the metadata prefix property
sets the non paiging params
gets the value of the harvest id property
sets the harvesting interval
sets the interval granularity attribute of the mregistration dates model object
sets the enabled disabled
returns the error code of the oai error
returns the error message generated during oai operation
sets the last harvest time attribute of the harvester admin form object
set the harvester object
sets harvest attributes
returns a string representation of this object
tests this harvest for equality with another object
a serious error has occurred
returns the number of records that were harvested
compares this object with the specified object for order
prints a line to standard out
recursively count files in a directory
sets the harvest directory
checks if the harvest is running
get the scheduled harvests
gets the harvest for an instance of the given harvest id
checks if the scheduled harvest for the given uid exists
checks if the scheduled harvests contains the given value
called when a fatal error occurs during the parsing
harvest this document immediately
checks if the harvest is one time harvested
gets the description
returns the description of the node
gets the text to display for a node in the tree
returns a textual representation of this entity
returns a copy of the list of all ancestors of this item
get the author of a document url
returns the topic associated with the given url
gets the description
get jurisdictions for a given url
get the name of the jurisdiction where this language is located
this method returns a map of jurisdictions for a file
get the set of author names
one time harvests
write a jurisdictions to the jurisdiction location
retrieves an acsr id from the map
returns an id of an acsr id stored in the map
read all mapping files from the mappings directory
report standardized counter
gets the asn category item with the given id
gets the status of an element
returns the list of subjects from the mappings directory
gets the value of subject items map
reads all mapping files for all subjects
count files in a directory
gets a prtln representing a subject and adds them to the
gets the asn
gets the status of an existing asn
gets the subjects
reads cache files for all subjects
read the cache file and verify that it exists
returns a list of items for a given subject
gets the prtln representation of this object
gets the uid
gets the key
gets the value of created
returns the details of this object
return the mappings of the specified subject to this mappings
read all mapping files from the mappings directory
stops the timer thread for harvesting a given sh uid
returns the id mapping object for an acsr id and subject
writes the list of updated subjects to the underlying file
runs the harvesting process
creates an id mapping object corresponding to an acsr document bean
removes an acsr id and the associated subject
runs the thread
adds a mapping and its corresponding publication id
walks through all the acsrs mappings and report each each
sets the status of the acsr info object
returns the status of the content panel
runs the harvesting process
returns the xml representation of this object
validates the state of the acsr info object
returns a printable representation of the form
create an xml element for a specific instance of acsr info
get the title of this page
get the created date
reads a document from url
gets the topic
get the author of this item
returns the value without its null
returns the node matching the given xpath
returns this object as an xml element
return a list of nodes that match the given path
compare two document locations for id mapping
get the xpath for the given path
compares two code asn info code objects
gets the value of file created
getter method for export version
this method returns a string representation of the object
return the unique identifier of this resource
gets the children ids attribute of the elvis registry object
gets the value of author purl
gets the author
getter for property statement notation
gets the start grade level
gets the topic purl
gets the end grade level
method get id
gets the topic
gets the standard node for the root
returns a string representation of this element
used to get a standard by id
returns the text value of a sub element of this element
gets the sub element text attribute of the elvis registry object
returns a collection of the standards in this set
returns the value of a sub element resource
gets the sub element resource attribute of the elvis resource object
gets a list of standards at a given level
returns the topic associated with the given url
returns a map of the concepts
checks if the author of this document is colorado
gets the root document for the standard error
gets the value of asn statement
returns the description of the thread
checks if the author of this book is aaas
makes a standard
retrieves the id of the thread
gets the identifier of the statement
the set of identifiers in this domain
gets the range of the grade
gets the identifier of the document
gets a standard
get a standard for statment by statement id
gets the author
gets the topic
for debugging purposes
adds a standard child
retrieves the start grade level
retrieves the end grade level
gets the parent id
gets the parent standard of the current asn
returns the text to display for this object in the tree
gets the ancestors of this standard expression
destroys the servlet
returns level of this node
returns a display text for this item
gets the std document for the given document id
returns a standard identified by its id and standard id
returns the standard with the given standard id
gets all the documents that are available for analysis
returns the identifier for the standard document
returns the standard with the given id
gets the author of the script generated
gets the topic
get the root standard
returns the standard with the given id
returns a collection of the standards in this map
adds a child to this standard
returns a list of standards at a certain level
gets the parent standard attribute of the standard doc object
the collection of free identifiers in this statement
returns a string containing the text to be displayed on the gui
returns a list of the ancestors of this element
this method returns the level of this node
get the description of this rss feed item
get the parent id
returns a string representation of this object
returns the standard identified by the given standard id
returns the text value of a sub element of this element
returns the data manager that generated this event
gets the data list
gets the sub element text attribute of the elvis registry object
release lock releases a lock on a file
retrieves the input for multi box fields
selects the content of the given xpath
this method is for testing if the oid exists in the data path
returns whether the page has a virtual page list or not
returns the virtual page list
tests if this widget is expandable
renders the content of the xpath to the file and writes it to
prints a description of the current node
render the jsp with the given file name to the given file
override to invoke standard rendering
renders a standard node that is a prtent for a standard
returns the name of the renderer class
get the file object to redirect to
returns the file destination for the generated jsp page
generates header of master part of the test
returns the header of the master detail panel
returns true if the render mode is display
render the node
renders the subjects node
renders the content of the code lt language gt code element
calls init on schema node
init renderer with xpath and form bean information
method render simple type
calls init on the type name and the type name
renders the derived model of the complex type
renders the sub elements of the given type def
create and return div element for this level
returns the name of the class that will be used to generate
create a div element that has the given level
returns the file destination for a batch jsp page
reports the component as xml text
renders the mde type
returns the next lock key
get the text input of the global type definition
returns the label text for the given xpath expression
sets the label text
renders the complex type
sets the label class
get the label element for this field
render the node
renders the subjects node
render repeating element if possible
renders the elements of the box
render the derived content model
creates an iteration element in the xml file
render the label
determines whether the input element should be presented in an xsd
creates a mde model group and calls render model group
renders the sub elements of the type def
renders a text extension element
renders the given choice element
renders a text extension element
gets the list of sub elements attribute of the order
this method is used to render the code substitution group code
create a new renderer
create a controller for deleting a repeating item
gets the child model group attribute of the definition node object
returns true if the drawing is in edit mode
returns whether the render is in display mode
returns true if the child contains a repeating child false otherwise
get the rendering mode
renders the sub elements of this mde node
renders the derived content model as a prtln
gets the restriction element and renders it
return the input element to be used for rendering
returns the path of the repeating complex singleton child element
description of the method
returns a link to the best practices defined by the given xpath
return the tool help for the given field
get the namespace of the instance
returns the prefix for the instance of the given namespace
returns an input helper element
resolves the qualified name of the given type def
add an attribute to an existing tag
render a mde simple type
render a choice element
gets the read only element attribute of the xelement renderer object
render sub elements
gets the max length of the input path
returns a rendered element that has no input field set
renders the sub elements of this mde object
returns the form bean name
returns a boolean input element
gets the static simple value attribute of the simple jsp renderer object
bean name of the form bean
gets the multi select input attribute of the dcsbrowse form bean object
gets the text area input attribute of the simple jsp renderer object
gets the optional item control attribute of the dcsbrowse form object
returns the controller for deleting an item from the inventory
returns the framework of the document
return a html element that can be used to input the textarea
gets a simple type label object from the given xpath location
gets a complex type label object from the given xpath location in the
return the tool help for the given tool
gets the select input attribute of the form bean object
gets an edit me tag from the document
indicates whether the specified mui group info is present
returns the language input element
indicates whether there is a layout key defined
gets the rendered field attribute of the flat field renderer object
this method is used to attach debug information to an element
render field 2
description of the method
this method will attach debug information to an element
test that a node that is not defined with a value
attaches a label debug info to an element
test for whether a node has a value test
returns true if there is an input helper defined for this path
returns combo union input
attach a label debug info element to the debug info
returns a string representation of the object
gets the input helper file attribute of the schema helper object
insert html comment
gets a simple type label from the given xpath
returns the xml format
creates a default dup sim comparator
compares its two arguments for order
print a line to standard out
adds html comment to the parent of the document
attach debug information to a label
returns the label text of the node selected by code xpath code
test the xpath to a parent node that doesnt exist
attaches a dom4j element to this node
returns the value of the named parameter as a string or null if
get the label of the multi box according to an xpath expression
gets the parameter array attribute of the dcsbrowse form object
gets the dups prtln entities in the list
used by tests to simulate a node in the model
returns the controller for deleting an item
emits a line to standard output
gets the list of sims that are currently in this group
checks the xml document against the definitions of this configuration
used by tests to simulate a bare user to test a
gets the mirror dups attribute of the repository admin form object
clean up any resources when the application is destroyed
this method is called when the web application is deployed
gets a specific complex type label
get the collection registry from the servlet context
get the registry of the jada framework
returns a new chioce test element with the given path
returns the meta data framework for the given xml format
determines if the user is locked
always returns true
obtain the session id that is locked by the given session
node exists test
this method will only be used by the underlying database
get the records locked
returns a rendered field by evaluating the xpath expression
truncates a string to a specified length
register a session bean
unregister a session bean from the session bean map
show request attributes
attaches a tool help message to the given element
reports the renderer
gets the session attribute of the framework object
returns the standards directory for this program
returns the code framework plugin code which is used in this
return the tool help for the given field
gets the asn catalog
sets the code framework plugin code which is used in this
empties the library file list
description of the method
gets the library document attribute of the environment manager object
gets the standards manager associated with this page
called by the servlet container to indicate to a servlet that the servlet
initializes the std doc
synchronizes an existing document with an embedded document
get the root standards node of the xml document
gets the value of the asn doc keys property
returns the version of this xml format
gets the xpath expression of the node
returns the unique key for this document
sets the value of the path text field
returns the renderer tag
returns the author of this advancement
gets the xml format attribute of the node text object
sets the maximum number of nodes to return
returns the maximum number of nodes
sets the xml format for the text area
gets the standard with the specified id from the repository
gets the standard source type
returns the root node of the tree
returns the topic of the document
gets the helper class attribute of the node text helper object
creates a new teachers domain for the given standards document
gets the plugin class off attribute of the node object
returns the data types defined in the standard source type
compute the diagnose of a standard parent standard by adding all the
returns a list of the available docs
returns the standards directory for this instance
print standards
returns the list of nodes
returns the default doc for this stad instance
returns the node list for the given nodes
returns the standards file name
returns the current document
description of the method
get all nodes satisfying the given xpath
returns the number of key value mappings in this map
cleans up the internal data structures
gets the action form
get the text of a node satisfying the given xpath
returns the lexicon of the standards document for the current user
returns the lexicon to be used for the standards document for the
gets the xml format
returns the standards format
gets the standards manager attribute of the teachers domain object
gets the value of grade range
returns the author of the document
returns the parent of this node
returns a list of all ancestors of this node
return the list of optional cat uifields
gets the value of framework
returns true if this element is the last element of the list
gets the path to the grade range file
get the keyword path
gets the path to the description of the file
returns the subject path
returns code true code if this cell editor is not displaying a
joins a list into one string
the standards domain of the given child
returns true if the given id has a child with the given id
deletes an instance of doc info
adds a standard tree under the given key
accessor for the document
checks if the queue is full
returns true if this list has a sub list
removes the node in the tree for the given key
gets the is leaf node attribute of the node object
removes a tree and its corresponding entries from the tree map
gets the value of rejected docs
adds the given node to the sub list
empties the tree
always returns null
gets the value of service is active
get the wrapping setting of the code text field code
gets the label of this node
gets the full text of the given standard
set service active status
sets the capacity of the cache
returns a list of all the lineage of this node
returns the number of key value mappings in this map
show the lineage of this server
returns the percent utilization of the cache
for debugging purposes prints a line to standard output
returns the key for a given document id
description of the method
to string method
sets the capacity of this operation
returns the cat helper
a convenience method that returns the standards xpath expression
gets the list of optional categories
returns the lru of this group
returns the path to the grade range for this item record
gets the description path
removes the item with the given key
get the keyword path
get all the keys of the document
returns the subject path
removes the item at the specified index
returns the xml format
adds a new item to the list
print a list of all items in the queue
returns true if the document with the given id is registered false otherwise
gets the derived catend grade attribute of the pvjrules log object
returns the renderer tag
getter for property suggested standards
gets the match key for this filter
initialize the standards document
get split level
get the number of levels
returns the match key
gets the leaf this split is split
returns a string representation of this object
gets the comparator
gets the asn doc info by key
returns the full text value of this property
compares its two arguments for order
print a line to standard out
returns the number of selected standards
gets the range of the grade
returns the parent of this standards node
returns a list of the ancestors of this node
convenience method returning the id of the
sets the full text
gets the doc info
gets the display text attribute of the school model object
this method returns a textual representation of the ancestor list in
returns a list of selected standards
returns a string representation of the object
gets the standards document
returns the child node with the given name
return a list of selected standards from this subtree
given an adn text return its asf id
gets the asf text associated with a registered asn
returns the sub list
gets the standards document for a given document id
gets the mapping for the specified asn id
sets the sub list attribute of the dlese standards object
converts a standards list to a list of suggestions represented as adn standards
returns true if this list has a sub list
gets the other selected standards attribute of the standard type panel object
returns a collection of the ids of all the elements
gets the collection of grade ranges
gets the label to display in the
gets the start grade value for a given grade range
gets a standards node by its identifier
gets the end grade for a given grade range
returns a hash map of the grade ranges in this group
sets the suggested standards
for debugging purposes prints a line to standard output
returns the author of the contribution item
to string method
gets a standard of an asn
get a standard node
gets the use description attribute of the project object
get the list of xml formats the standards manager uses
print a line to standard out
returns the number of standards in this collection
returns the value for the given key
gets the standards document definition attribute of the schema helper object
sets the use description attribute of the project object
prints the standards of the current node
returns whether keywords are used in the generated documentation
returns a list of nodes for the given list
description of the method
get a list of all the doc info objects
gets a map of level names and levels for this package
sets whether keywords are used in the generated documentation
returns the standards
returns the standards list
returns the cache instance for this tree
free all resources
returns the subjects
returns true if subject subject are used
returns all subjects
get all extra doc ids
gets all categories
print a line to standard out
returns a list of all the extra docs
set the flag to use the subjects in the simulation
gets the subect extra docs map attribute of the concept object
returns a list of items for the given key
sets the standards managers
gets whether to use grade ranges
returns the standards managers
returns the subject ids map
returns a list of subject ids for a given subject
returns the set of registered xml formats
sets whether to use grade ranges
constructor for communication suggestion service
returns a string representation of this object
creates a new lar suggestion service helper object
returns the display mode
gets the start grade attribute of the vocabulary object
gets the end grade attribute of the vocabulary object
sets the document key
returns a sorted list of grade ranges
returns the set of all keys in the document
prunes the list based on a range added to the sorted list
gets the information for a given document
set minimum grade available
get min grade return the minimum grade available for the current
sets the display mode of the export wizard main application
set maximum grade available
gets the document information
compares its two arguments for order
get maximal grade
returns a string representation of the object
gets the number of selected document by the user
gets the value of standard
returns the number of selected documents for the given document key
returns the range of grade that should be used
gets the number of selected standards in the current document
returns the display content
get the standard id of the std
gets the standards document
returns the document identifier of the standard output
returns the standards registry
gets the parent
gets the default doc key
gives a list of the ancestors of this node
gets the other selected standards attribute of the dcsbrowse form object
sets the display content
sets the default doc key
gets the prtln corresponding to the selected standards
gets a standards node
show the contents of the given map of standards
gets the url
get the current standard level
returns a string representation of the user
gets the cat helper
gets the grade range helper
adds a standards node to the sub list
returns the value of the grade level option
gets the list of optional cat uifields
gets the start grade of a user in the option value
gets the derived catend grade setting
return the selected catstart grade value
returns the label of the node
return the selected catend grade range in the list
gets the label decorator
returns the xml format for the configuration system
gets the derived catstart grade
gets the grade range item for the given vocab
returns the xpath for this configuration
gets the full text
gets the label used for the grade range
gets the value of a grade range item
returns a full text representation of a standard standard
gets the start grade attribute of the vocabulary object
a list of all the lineage of this node
gets the start grade attribute of the vocabulary object
gets the end grade for a given grade range
gets the prtln attribute of the xml format object
gets the derived catend grade
for debugging prints a line to standard output
gets the end grade attribute of the vocabulary object
inits the grade range map
add new item with given grade
add a new item to the list
gets the standards manager
sets selected grade ranges
set the path for phenomenon and base
add an item to the list
description of the method
remove all available docs
initializes the instance with the values from the xml document
returns a string representation of the vocab
returns the identifier of this document
sets the weighting of keywords
gets the standards document instance
gets the document key
standards format
returns the source of this file or code null code if not set
returns the renderer tag
gets the standards manager
returns all other selected standards
gets the list of the grade range options
update selected standards bean
gets the standards node associated with a particular id
returns selected standards bean
gets the root node
returns a list of available docs
gets the prtln object from the input
creates a standards node
gets the record description
returns a string representation of the object
return the list of optional category uifields
gets the path to the grade range resource
replaces the subject value with the value in the subject string
get the keyword path
gets the description path
gets the current document from the standards document class
returns the subject path
return the list of optional keywords as a list of strings
the default doc for this application
convenient method to retrieve the id of a
get keywords of selected page
returns a list of nodes subnodes for this node sublist
description of the method
returns the subject path
return the list of optional category uifields
gets the list of optional categories
returns the path to the grade range
get the record educational educational educational
gets the list of the grade range options for this code judge code
get the keyword path
this method initializes grade range helper
sets the keywords that are shown in the list
returns the subject path
create a grade range helper
gets the list of the grade range options for this user
returns the subject path
returns the path to the grade range file
returns the service helper
return the list of optional category uifields
returns the gem subject path
initializes the service
gets the path to the grade range file
gets the list of the grade range options
returns the path to the description file
normalizes the subject value
constructor for adnfrag doc reader
gets the record url attribute of the main panel object
returns the subject path
gets the record description attribute of the file search engine object
compares two users
returns the user with the given username
creates a new user and registers it with the database
returns the source file of the xml document
deletes the user with the given username
updates all suggestions for this response
saves the given user to the file system
delegates to the wrapped reader
return a list of all users in this group
return a list of user names for this role
gets the username of a node
get the list of users that are displayed in the table
show all users of the user manager
sets the username
description of the method
get the email address of the person
sets the email address of the node
more like this does a more like this
get the first name of the node
get the path of the mapping document
sets the first name of the node
get the last name of this node
returns the text of a child element
sets the last name of the node
create the action path map and action mappings
retrieves the roles
returns a collection of all roles that satisfy the given
action path for action path
returns the institution name or null if not set
returns the guarded path with the given path
returns the path part of the url
return the list of action paths
sets the institution
get a list of all the guarded paths
get the department path of the department
returns true if this mapping is an action mapping
sets the path to the department
finds the best path against a given path
gets the preferences
retrieves the preferences for the specified name
checks if the request path contains a
return the password of the user in the specified typed principal
add a principal to the set
sets the pref for the given name
initialize this login module
p this method is called if the login contexts
deletes the preferences for the specified name
abort the authentication process by logging out
logout the user
loads user information from the login file
generates the xml element that stores the preferences
show the shared state
returns the password for the given username
returns the name of the login module
p compares its two arguments for order
returns the max role
gets the role of the assigned role of a collection
get the role of the user for a given collection
checks if user has role
updates the user session bean
checks if the current user has a given role
gets the role options attribute of the ejbmethod descriptor object
gets the collection access map
get the referer header from the http request
sets the admin user
gets the collections
checks if is admin user
get the roles of a collection of users
gets the value of is admin user
returns a user role map
returns the sets
returns the full name of the user
sets the sets attribute of the dcs set object
sets the role of a collection of roles
gets the collections
gets the value of the sort sets by property
deletes a role from the role map
sets the sort sets by
compares two user role beans by their full names
generates the xml element containing the roles map
returns the collection key
returns the text of a node
sets a node text value
returns a list of nodes that match the given path
returns the node with the given path
convert a string to a non null value
destroys the cache and the underlying data structure
returns the user role map
sets the node text attribute of the abstract tree node object
sets the user role map
sets the source file
getter for property new role
setter for property new role
returns the code subject code that failed the authenticating user
returns the collection
gets the uid attribute of the webdav nob object
gets the collection options
gets a map of xml files with the root element name as string
sets the collection options attribute of the jbuilder editor app object
gets the managable users
sets the managable users
gets the roles
sets the roles
gets the role options
sets the role options
description of the method
sets the command to execute
sets the value of scs
initialize the configuration
write the specified object to the output stream
returns true if there were any warnings during the parsing
this method pulls out the verb id from the verb and
gets the id from the collection
copy the current logo to the current servlet context
description of the method
description of the method
description of the method
performs shutdown operations
description of the method
description of the method
displays the attributes in the schema node map in the appropriate
gets the string attribute of the jtree node object
returns a string representation of the status object
prints a line to standard out
returns the idgenerator for this ltmbuilder
returns true if the file ends with
compares two code schema path code objects by comparing their
refreshes the list
returns a new idgenerator
gets the base render level attribute of the framework config reader object
sets the base render level attribute of the framework config reader object
returns a string representation of the object
sets the id of this node
get the prefix for generated id
sets the discussion url attribute of the framework config reader object
sets the prefix of the id of this node
returns the collection of config readers
gets the rebuild on start attribute of the framework config reader object
gets the export directory attribute of the file set object
sets the rebuild on start attribute of the framework config reader object
sets the export directory attribute of the file save panel object
get the schema path map
get the id of the config reader
returns the xml format of the content of this code node text code
sets the xml format of the content of this code node code
gets the schema path map attribute of the framework config reader object
set the id of the config reader
returns the authority part of this url
gets the name attribute of the framework config reader object
gets the xml format for the configuration file
sets the authority of the resource
find the collection configuration by the given handle
sets the name attribute of the framework config reader object
gets the records dir attribute of the framework config reader object
sets the xml format attribute of the config reader object
get the collection config for the specified collection
sets the records dir attribute of the framework config reader object
clear the ndr info element from the document
gets the renderer attribute of the framework config reader object
gets the metadata provider handle
sets the renderer attribute of the framework config reader object
sets the metadata provider handle attribute of the dcsbrowse form object
gets the best practices label attribute of the tide browse object
clears the ndr info for the service
gets the text aggregator handle
sets the best practices label attribute of the framework config reader object
set the aggregator handle
get the authority for this source file
gets the root element name attribute of the framework config reader object
returns the handle of the agent that hosts the agent
sets the root element name attribute of the framework config reader object
is this object a ndr collection
set the handle of the agent
gets the sample record path attribute of the framework config reader object
set the authority for the service
returns the text of the ndr oai link
sets the sample record path attribute of the framework config reader object
returns the idgenerator for a given collection key or null
set the oai link to this object
returns the handle of the metadata provider
gets the schema uri attribute of the framework config reader object
returns the text of the ndr server
gets the vocab layout uri attribute of the flat file tree node object
sets the metadata provider handle
set the path to the ndr server
getter for property collection config mod
sets the schema uri attribute of the framework config reader object
get the file aggregator handle
gets the xml format attribute of the framework config reader object
gets the final status label
sets the xml format attribute of the framework config reader object
sets the configuration mod for this collection
sets the final status label of this node
set the aggregator handle
gets the status flags of this element
gets the final status label for this collection
get the agent handle as string
gets the final status flags
set the agent handle for the agent
gets the tuple map attribute of the abstract tuples object
get the master status list
return the path of the specified property
return an iterator over all the names
set the oai link on the ndr reader
convert the information contained in the info map to a string
refresh the status of this response
show the current document in pretty printer format
compares its two arguments for order
returns the value of the prefix parameter for the id
returns the source path
returns the example id
set the ndr server
get the id of the first cfg
sets the source file
register a collection config instance for this registry
return the last id from the cfg
get the document from the map
the the delocal document
get the status map
write id from file
parse cfg id
description of the method
construct an error id from the information in the format from the
get the tuple map from the configuration file
get all nodes satisfying the given xpath
constructs the id to use in the format method
return the text of the node satisfying the given xpath
return the dcs set info object for this set
unregister a collection config instance from the data store
sets the text of a node satisfying the given xpath
sets the status map attribute of the dcsbrowse form object
remove the collection configuration from the repository
minimal record paths
sets the tuple map to be used by this configuration reader
returns a list of labels for the current status
get schema paths for a particular value type
gets the paths of all schemas in this collection that are read only
returns a string representation of the object
return the value of the named tuple
add a path for a schema
returns the ids of all the elements in this container
sets the value of a named tuple property
returns the schema path for the given xpath
returns a schema path for the given name
returns the number of elements in this collection
get label of status flag
clears the path map
returns the directory in which the configuration files are stored
returns a string representation of this schema
loads a framework from the xml format
description of the method
initializes the tree
returns a list of flags that are assignable to the current status
adds a page to the document
opens the element with the given encoded xpath
sets the first page
closes an xml element
returns the first page
return the set of flags which are selectable based on the current
sets the home page
return the error log that was loaded
get the export directory
clears the list of load errors
returns the name of the mapping
set the export directory for the config reader
return the error log used by the load method
clears all the warnings reported for this code load code
get the final status value as a string
sets the order of this column
get the configuration image in conf icons de
returns a list of possible mui known formats for the
gets the default sort order
get the final status label for this configuration file
returns the other order by clause
description of the method
get the final status flag
extract the mui groups from the frameworks
set the final status label for the configuration file
adds a virtual page to this version history
registers a metadata format from the repository
description of the method
unregister a framework
return a string representation of the page descriptor
refreshes the configuration of this component
gets the framework attribute of the framework registry object
returns the number of frameworks in the collection
returns a string representation of this virtual page
description of the method
returns the format of the configuration file
print a line to standard out
clears the state map
check if a key is defined in the configuration file
checks if the xml file is loaded
closes an element
returns a set of all keys in this cache
list of page lists that are currently being displayed
returns a list of all the frameworks that are unloaded
get virtual page list for xml format
sets the default state of the participant
flushes the cache
expose the node at the given xpath in the tree
returns a string representation of the framework
refreshes the page
gets the state map
sets the display state attribute of the collapse utils object
get all known formats
sets the state for this node
returns true if the door is open
get all item formats
returns the display state of the default state
returns a list of oai formats supported by the repository
gets the state for the given key
returns the url of the request
get a list of all the names of all frameworks that are
opens the element with the given key
returns the number of items in this container
description of the method
update the display state of this request with the given pattern
returns the number of items in this container
gets the results attribute of the lucene query object
returns an iterator over the items in this container
performs a search and returns the results in result
returns true if this container contains the item with the given id
adds an item to the list
update the collection filter label and value
returns the hits
returns true if this list contains no items
returns the list of hits that match the given range
returns the is empty
gets the index of the result doc with the given id
returns the items
returns true if there are no hits in this result set
returns a string representation of the object
sets the index
gets the value of is empty
returns the list of cache hits
returns the number of hits
gets the hits attribute of the result doc object
returns current record id
returns the source of this node
sets the current record id
sets the current record id
returns the current record index
sets the cached rec inex attribute of the dialogs main cli object
gets layout nodes
current result record
gets the record id
returns a list of nodes for the given list
get the result doc for the specified id
gets the report of the title of the layout nodes
gets the result doc attribute of the lucene index object
returns the parent of this node
build a list of ids from a result doc
returns the cached rec index
get the vocabulary name
returns the name of the current element
sets the cached record index
get the definition of the term
gets the record id of the item at given index
print a line to standard output
set the result doc list
vocab layout is used by the xml parser to identify the layout
gets the collapsible
sets record id
return the sub list of this list
returns true if this list has any sub list
returns the set of keys
returns a boolean indicating whether the given sort widget
gets the value of has sub list
gets the value of last in sub list
return all the layouts as a list
returns the last time the client sent a request associated with this
returns if a new sort field has been set
p returns the siblings of the current layout
returns a list of all fields
gets the number of columns in the layout
indicates if there is a vocab layout specified by the xpath expression
returns true if the query is new
returns a string representation of this map
report the data collected through the group level hierarchy
returns true if the current index is new
compares its two arguments for order
get the id from the result doc
adds information about a reader to the field
gets the field info for the given xpath
gets the new attribute of the session bean object
removes the xpath mapping
returns a list of the terms and deftns that match the given term
returns if a new sort widget is available
returns all the values in this container
returns the time of the last access in seconds
returns a list of all the terms in the current term set
returns if a new sort field is the same as the current sort
returns the sort widget that is wrapped by this
returns the time since the session was created
prints a list of all the errors
gets the definition of this field
gets a list of all the prompts associated with this field
gets the dos attribute of the field info object
indicates if this category has dups
returns true if the file is a directory or a cvs file
gets the donts
returns a list of the terms that have a count term 1
gets the examples
return a list of records that are locked by the user
returns a list of the current practices for the current document
gets the formatted practices
called when a session is bound to the session
gets the value of files read
called when this session is about to be unbound from the session
returns the bad paths
gets the value of reader errors
prepare object for garbage collection
gets the unseen paths
returns a map of multiple paths for this schema
returns the repository manager from the servlet context
compare two records
gets the title of the current record as a flattened string
gets the practices defined by the document type
create a directory for the specified collection
gets the dcs status options attribute of the dcs data framework object
returns a string representation of this header
gets the dcs data record for the given collection
returns the dcs data manager for this web application
registers a listener for service events
returns the full name of the given user
removes the listener
print a line to standard out
get dcs data record for the given id
compares two objects
returns the unique id of this item
return the element that was added or removed
return a list of servlet context attribute names
returns the number of work units that have been done
return true if the specified resource id is owned by this session
returns the number of the task
returns the number of working threads
returns the number of working files
release the lock on the session
print the current status and the change date
gets the collection attribute of the dcs data record object
releases all locks
return true if the status is a final status
gets the lock attribute of the session registry object
get the name of the last editor
returns the status attribute
returns the status note
get the dcs data file indexing plugin field ns is valid
returns the last touch date
returns true if there were any entity errors
gets date from field in string format
get the status label
returns the normalized xpath
gets the final status flag input field from the input field list
returns the name of the field that this xpath is mapped to
gets the list of input fields from the status flags
gets the query form attribute of the dcsquery form object
sets the value attribute of the elvis resource object
returns true if the type is an any type
returns true if the node is an attribute
gets the view form attribute of the dcsview form object
returns true if the node is an element
initializes the filter
returns true if the node can be nillable
returns a string representation of the object
set the debug flag
compare input field objects
gets the current entry attribute of the editor object
should the given field be skipped due to the nature of this validation
gets the schem edit form from the session
gets ordered elements from the given xpath
gets the entry list attribute of the dcs data record object
returns the input field with the given name
checks whether the given operation is authorized
gets the history element attribute of the dcs data record object
compares its two arguments for order
return the input manager
gets the authorized attribute of the aproject object
gets status history entry corresponding to a change date
returns the url schema paths
get the input fields
gets the framework attribute of the metadata vocab input object
indicates if this form validation reponse contains entity errors
returns a list of entity field names in the input fields
get the schema node for the param name
returns a list of session scoped attribute names
validate the properties that have been set for this non http request
gets the value of schema helper
gets the session registry from the servlet context
check if there is a schema node for the param name
gets the role manager from the servlet context
gets the value of attribute fields
gets the is valid attribute of the dcs data record object
gets the collection registry from the servlet context
gets the value of any type fields
this method determines whether the data is valid
gets the value of element fields
gets the collection config for the given collection
gets the value of multi value fields
description of the method
gets the final status label from the registry
removes unpromising instances from the document
gets the validation report element attribute of the dcs data record object
skips the given field if its a public name
this method processes the root element
set the schema helper
set the validation report
displays the input fields corresponding to metadata fields that are
gets the records in the results as a record list
return xpath action for the given message
return the validation report for the current element
compare two paths
displays the input fields corresponding to metadata fields that are
gets the search params attribute of the form bean object
gets the last touch date attribute of the dcs data record object
compare input field objects
displays the input fields corresponding to metadata fields that are
clears search params
displays the error fields of the entity class
sets the last touch date attribute of the dcs data record object
returns the error message
removes the instance document
checks if a element with the given path is empty
displays the input fields corresponding to metadata fields that are
gets the paiging param attribute of the dcs query form object
description of the method
gets the last touch date date attribute of the dcs data record object
displays all the parameters of the request
gets the paiging param attribute of the dcs query form object
returns the id of the record
create and return a newly instansiated
to string method
gets the query url for this supplier
sets the id attribute of the dcs data record object
reset all the fields in this instance
gets the metadata handle attribute of the dcs data record object
returns the sets
initializes the map of type paths and types
returns the type list for the given path
gets the types of the given path
returns a list of all paths in the current path set
checks if the given path exists
sets the metadata handle attribute of the data record object
gets the value of xml format
sets the sets
description of the method
description of the method
returns the sifref id map with the given xml format
returns a list of xml formats that have been configured for this
checks if the given xml format is present in the map
gets the last editor attribute of the dcs data record object
returns a list of all the sets authorized to this group
sets the last editor attribute of the dcs data record object
creates the query for getting the collections
clear collection info
print a line to standard out
clear all the fields
returns record id
returns the node collection info
returns new record id
sets new record id
sets the collection info value
description of the method
sets the collection metadata handle of this metadata
sets the set spec attribute of the dcs set info object
clears the ndr info element from the ndr info object
description of the method
returns the meta data framework for this application
looks up the specified attribute in the context and returns the
return the ndr info node
gets the meta data framework attribute of the meta data framework object
return a list of
gets the session bean from the http request
returns currently used user from session bean
convenience method to get the user from session bean
returns the session user name
set the ndr info path
returns the xml format
print a line to standard out
this method returns a map with the roles of the given user
sets the ndr handle attribute of the dcsbrowse form object
print a line to standard out
returns the xml format to use
returns the action forward used for creating the new
print a line to standard out
sets the metadata provider handle
validate the path
print a line to standard out
print a parameter unless null is null
returns the xml format to use for the configuration
returns the action forward used for creating the application
sets the nsdl item id value
insert the user information into the database
print a line to standard out
sets the last sync date to a string
sets the last sync date
performs any necessary cleanup
returns the path of the last synchronization date
check whether the given collection of records contains a collection format
gets the last sync date date attribute of the dcs data record object
check whether the given record list contains a collection format
returns text of synchronization error message
check if there is an error that may have occured
print a line to standard out
returns true if there was a sync error during the last sync process
sets the error message from the ndr sync process
returns the meta data framework
validate the set status form
clears sync error set
print a line to standard out
gets the status attribute of the most recent status entry
returns the meta data framework for this plugin
gets the prior status attribute of the dcs data record object
sets the status of most recent status entry
gets the status note attribute of the most recent status entry
sets the status note of the most recently parsed status entry
gets the change date attribute of the most recent status entry
sets the change date of most recent status entry
gets the change date date attribute of the revision object
returns the editor to use for the given mapping
delete this data record from the datastore
get all nodes satisfying the given xpath
emits a line to standard output
get the text of a node satisfying the given xpath
gets the list of available formats
emits an error message when a comma separated list of files are
get the directory of the metadata record files
print a line to standard output
returns the sample file of the metadata format
print a line to standard out
return the editors list
print a line to standard out
returns the sort field
print a line to standard out
print a line to standard out
gets the sort widgets attribute of the sort widget panel object
print a line to standard out
compares its two arguments for order
sets the search helper
get the index of the result
compares its two arguments for order
get doc reader
gets the number of results
gets the results per page
set the number of results to be displayed on a result page
returns the end index of the page
returns the current search mode
compare two users
set the search mode
gets the show query options
get the result doc
sets the result doc
returns the result document reader
set the document reader
sets the record that will be edited
sets the show query options
get the sets
sets the set of oai pmh files to import
this will return the dcs set info instance
this will set the dcs set info object
gets the list of the child components that can be rendered by the
returns the editor config
set the editor config
sets the renderer attribute of the dcs data record object
get the file that was uploaded by the user
set the value of sample file
sets the path to the exit file
set the editor mode
clears all the fields
sets the editors list
set the xml format for this instance
returns the name of the framework
returns the vld
sets the name of the framework
gets the value of the sample record file property
sets the sample record file name
gets the value of current std doc key
set the validity date of the object
set the uri of the xml schema that will be used for validating
returns the working schema uri
sets the selected sources and sources to be parsed
set the working schema uri
returns the discussion url
sets the discussion url
sets the key for the current standard documment
this method sets the workspace editors
gets the directory where the database will be saved
set the directory for the record data
returns the page list
returns the statuses
set the page list
gets the value of the num identifiers results property
sets the statuses of this response
sets the num identifiers results
reset all properties to their default values
sets the selected statuses
accessor method for num records results
returns the terms of use
gets the suggestion service helper
set the terms of use field
sets the id mapper errors attribute of the dcsquery response object
mutator method of the attribute num results
returns the terms of use uri
set the terms of use uri
return list of errors that occur when mapper is applied id mapping
this method is called from the framework and should not be called directly
getter for property id mapper error labels
sets the copyright information of this feed
sets the status of the index
sets the name of the service
the base directory to write the generated files to
gets a list of all accession status objects
the directory where the generated files should be written
sets the indexing start time
sets the number of errors that have been indexed
gets the value of the num indexing errors property
returns the remove invalid records
returns the list of indexed formats
getter for property is exporting
get the validate records
setter for property is exporting
sets the vocab field attribute of the schem edit form object
sets the list of indexed formats
getter for exporting session
sets the repository name
setter for property exporting session
returns the labels for the indexed format
sets the repository identifier for the annotation
this will return the exporting set info for this user
sets the vocab interface
this will set the exporting set
sets the labels for the indexed properties
returns the repository identifier
returns the list of archived reports
sets the current admin email attribute of the user object
sets the list of archived reports
returns the validation report
gets the current admin email attribute of the jmain frame object
sets the vocab audience
sets the validation report
returns example id
returns the current export report
sets the export report
sets the value of the current description field of the sequence
sets the vocab language
returns whether or not the xml parser is validating
gets the current description attribute of the webdav nob object
sets the is validating value for this ws schema instance
gets the value of progress
sets the value of the add property
sets the progress
gets the mui formattable attribute of the vocabulary file object
set selected id mapper errors
gets the value of the validating session property
sets the validating session
sets the location of the metadata records to be used
sets the collection records location
gets the vocab list attribute of the vocab action form object
returns the collection parameters to be used in a post request
set the destination path
gets the status options
sets the value of the current set description property
sets the status options
gets the current set description attribute of the concept object
sets the results attribute of the result set object
returns the vocab layout specified by code xpath code
sets the value of the current set name property
gets the current set name attribute of the concept object
gets all layout nodes that are associated with a layout
sets the current set spec attribute of the jbuilder editor app object
gets the current set spec attribute of the composite chart object
sets the formats
sets the current set directory
gets the value of async jason
returns the current set directory
returns the name of the file containing the metadata groups
gets the num results attribute of the search result object
clears all the values in this record
sets the async jason
getter for property edit record link
gets the sets attribute of the dcsbrowse form object
setter for the edit record link attribute optional
gets the input manager
sets the sets of this group
returns the full title
sets the full title
sets the current set format attribute of the db form tag object
gets the rq string that was already processed
gets the current set format attribute of the dcs data record object
sets the query string that should be used to refine the
sets the boost factor for this field to code drc boost factor code
sets the boost factor for multi doc boosting
set the meta data framework for this component
sets the collection key
sets whether stemming will be applied to keywords
this will return the base export directory for the exporting service
sets the boost factor for query terms
returns the prefix for id
returns the stemming boost factor
gets the value of the format of records property
returns the drc boost factor
sets the format of records
returns the multi doc boost factor
returns the boost factor used to boost the title field of a document
returns the url for the policy
stemming enabled gets whether stemming will be applied to keywords
sets the policy url
get the policy type
set the policy type
sets the xml error attribute of the deployment generation task object
returns the num paging records
gets the sets attribute of the dcs set info object
returns the error message from the last call to parse
sets the set of this group
returns the sort spec
set the sort spec
returns the saved content
get the dcs data record
this method sets the dcs data record
sets the saved content map
set the record list
this method initializes record list
set the failed record list
get the list of failed records
clears the status attributes
returns the validated url
gets the index of the current paiging parameter
returns the status note
sets the status note
sets the framework of the document
returns the status flags
sets the status flags
clear the cache
sets the validated url
sets the sort widget params
this will return the underlying dcs set info object
this will set the dcs set info object
gets the validator
return the directory in which the records are stored
override this method to specify the xml format that should be used
gets the similar url recs attribute of the result docs object
returns the name of the last editor
sets the last editor
print a line to standard out
returns the path of the file
returns the date of the last modification
returns the date of the last modification
last modified time of the file
get the id of the file
print a line to standard out
sets the similar url recs list
returns the forward for the given record and id
set the collection name
set the name of the collection
write the dcs data record to the server
returns the metadata writer to be used
gets the sync report
get an object from the servlet context
gets the list of duplicate url records
print a line to standard out
gets the ndr handles attribute of the metadata provider object
builds the query string for a collection of dcs status values
get the list of ids from the index
sets the duplicate url recs attribute of the schem edit form object
get the collection configuration for the collection key
returns the metadata for the collection framework
get servlet context attribute
gets the xml element for a ncs item stream
get the meta data framework for the collection configuration
sets the title of this frame
setter for property description
get oai base url
setter for property type
setter for property identifier
returns the content of this dc properties as an element
gets the collection history attribute of the data collection object
checks if the view context is in the list of view contexts
gets the dups attribute of the property object
gets the document for a xml file
is this an oai record
loads collection level metadata
returns title of this data record
returns url of the record
gets the record id of the data in the node
returns the description of this
get brand url
sets the duplicate list
sets the brand url
returns the collection id
gets the image width of the node
creates and adds a new contact
sets the width of the image
returns the height of the image of this node
this method returns the user name of the session
sets the height of the image of this node
create an image and set the parameters of this image factory
get list of oai sets
returns the name of the collection that has been created
gets the alt text of this node
returns the list of sims
sets the width of the alt text node
gets the contacts for the document
returns the format for native files
set the contacts element
sets the type of this field
gets the path to the collection agent
sets the collection agent path
get application agent of the application
returns the root element of the service description
get the configuration file for a collection
service description test
returns the node matching the given xpath
sets the sims attribute of the validator results object
set the text of the node specified by xpath
gets the values for the given xpath
collect dlese collect dlese
returns the image as an element
returns the contact as an element
gets the ncscollection id for a resource
write the collection configuration file
returns the record ids
return a list of ncscollection ids
sets the nsdl about category
sets the repository primary identifier
sets the date of the harvest
returns collapse bean
sets the harvest type
sets the harvest datasource public
sets the harvest datasource
sets the harvest identifier
sets the harvest record datestamp of this harvest result
sets the metadata namespace value for this metadata
returns the root element for the xml document
getter for property set info
checks if a string has a value
returns a string representation of this object
returns a string representation of the integrator
returns the mapping info object for the mapping with the specified id
returns a string representation of the match
returns a string representation of the xsl file
this sets the dcs set info object for this set
creates a new sync report entry with the given data record
gets the collection agent attribute of the collection agent list object
returns the list of metadata needed to add this resource
this method will return the xml data stream from which this
get the root element of a dlese collection
gets the metadata reader
returns the repository service
convenience method to check if the ndr service is enabled
convenience method to check if the ndr service is active
sets the metadata attribute of the data grabber object
determine if the ndr collection is enabled in the repository
gets the ncscollection config attribute of the metadata provider object
gets the ncscollection native format attribute of the meta data framework object
gets the metadata reader
get the processing status
returns the record xml for the item record
return the normalized status information
gets the is valid attribute of the dcs data record object
run a sync write on this collection
returns the value or null if the string is null or empty
synchronizes the collection config with the data
returns the sync report
get an servlet context attribute
gets the collection name attribute of the dcs set info object
get the collection config for the specified collection
get the list of ids from the search result
returns the meta data framework for the given xml format
returns the configuration for the collection with the given key
stops all processing of the current document
emits a line to standard output
synchronizes records in the repository
sets the discussion url
emits a line to the output unless debug flag is set
sets the sync report
gets the value of sync report
gets the content attribute of the jelber server object
sets the response from a proxy
gets the name of the framework
print a line to standard output
gets the value of proxy response
set the browser handles
gets the value of binary
sets the map of mdp identifiers
gets the map of mdp ids
sets the ndr collections
fetches the content of the url
fetches a binary encoded content string from the uc
gets the value of ndr collections
sets the dcs collections attribute of the dcs data record object
gets the value of dcs collections
gets the directory in which the sensor
adds a plugin to the repository writer
removes a plugin from the repository
initialize the page manager
gets the value of plugins
creates an exception
creates and returns an
creates and returns an
delete a collection from the database
returns the repository manager from the servlet context attribute value
sets the directory in which to store the records
initialize the repository writer
get the value of an attribute in the context
remove the collection from the registry
gets the meta data framework
find a record by its id
write a collection data record
refreshes the configuration reader
gets the directorys files and directories inside the
handles a given event
return the event name
returns the event data
return the event data in a printable form
notifies the manager of completion of indexing
sets the servlet context for this request
checks if this record set spec corresponds to a collection of collection records
returns the current
get the handle service base url
get the metadata handle for a collection set spec
get handle service base url
notification of indexing completed of a indexing operation
gets the config reader
returns the repository writer
set the hash of this object
gets the collection of urls representing objects of a url
returns the doc root
gets the sims attribute of the crawling data object
set the doc root
sets the title of the page
start the frequency auto export
gets the page list attribute of the meta data framework object
gets the xml format of the framework
stops the auto export timer thread
destroys the servlet
get the field info map for the current field
get the repository manager from the servlet context
get the field info for the given xpath
sets the page list
get the initial collapse of a field
return the framework registry from the servlet context
get the schema path map
returns the validation report for the service
return the validation force option
gets the meta data framework attribute of the framework registry object
main processing method for the validate thread object
gets the user info from the config reader
gets the dcs data manager from the dcs data manager servlet context
setter for property force validation
sets the mui groups attribute of the metadata vocab object
search if a record is stale
returns the validation report for the document
returns the list of mui groups
compares two report entries
gets the tmp arg
getter for the standards manager
it creates a unique id for the collection
sets the tmp arg attribute of the create command object
it gets the id of the file with the name of the collection
returns the destination directory for the dlese col export
verify the file name
setter for code standards manager code
deletes the file from the mirrored file
returns the report
gets the standards of the documents in the repository
run method for fetching records
get the renderer for this config reader
init init the sum of all the data
returns true if this task is still processing
gets the value of msg
getter for property done
sets the done
returns the value of error
returns the percentage complete of the task
reset the status of this task
set the renderer to use for the config reader
return the dcs set info object for this record
gets the legal export dest attribute of the jbuilder editor app object
get the best practices label for the current configuration
returns the export report for this service
save a collection data set
p set the path argument
sets the best practices label
read the xml document and write the resulting xml to a file
returns the path to the guarded exit
deletes a file from the export directory
validates a record
set the working schema uri
main processing method for the export thread object
set the guarded exit path property
checks whether the collection contains a url
returns the working renderer
move all records records in the batch and return a list
returns the path arg
set the renderer to use for the working button
move all records records into a collection
returns the current page
sets the directory in which the records should be saved
sets the current page
set the directory for the records
gets the current page encoded attribute of the meta data framework object
deletes records in batch
gets the previous page
delete a collection from repository
sets the previous page of data
get the root element name for this parser
gets the field info map attribute of the jbuilder class info object
set the root element name for the configuration file
returns the field info reader
gets the validator attribute of the schema factory object
this method will return dcs data record using the dcs data manager
sets the field info reader
resets the validator
return the xmldoc reader for the given id
validate a record
gets the unique url path attribute of the dcs data record object
returns the xpath expression to the schema named code name code
returns the doc map
returns the schema path for the given path name
set the document for this mapping
gets the paths of all the url types in the current context
gets the collection item records of all items in the collection
returns the id path
sets the adnitem doc reader
adds a listener to this repository
returns the date created path
gets the reader for adnitem doc
removes the given listener from the repository
returns the path to the url of this document
return the value of a given key
gets the record url
sets the value of a key
set the schema uri for the xml schema
return the auto form directory
gets the any type value of the given key
gets the node exists attribute of the schem edit form object
get the version of this application schema
return the name of the config file
gets the base render level
sets the base render level used when rendering
return true if the node exists with the content
get the discussion url
set the discussion url
is this file being rebuilt
return true if the given branch is required and false otherwise
set if the file should be rebuilt if true
gets whether or not a parent node exists
gets the node is empty attribute of the schem edit form object
gets the enumeration paths of the document for the given xpath expression
clears the multi values cache
gets the members of attribute of the schem edit form object
gets the member count of attribute of the schema helper object
returns the number of child elements of the given path
returns true if the given path has children
scan through all ordered element paths in the document and
returns the number of substitution groups of the given path
to string method
creates and returns a code label value bean code with the
preprocess an xml document
description of the method
gets the accepts new substition member attribute of the schema helper object
gets the accepts new choice attribute of the schem edit form object
to string method
returns a string representation of the email
returns the repeating fields to prune
clears the list of repeating fields to be pruned
returns the textual content that this entity is primary
get the primary content type
gets the coll key
sets the repeating fields
gets the status string
gets the value of the metastyle property
gets the metastyle string
checks if two records are equal
determine if the request is authorized to access the host name
log the errors
gets the record xml
returns the record xml
sets the record xml
sets the format to be used for formatting records
returns the record format
destroys the servlet
returns the s
sets the s value
sets the number of the bars
gets the value of the authorized for property
sets the xml format
sets the value of authorized for
returns the date the result was submitted to the repository
sets the error msg attribute of the prtln object
sets the status
returns the result doc list
returns the status labels
sets the results
sets the status labels
returns the number of results
trims the value and removes any whitespace
gets the standard by id
the directory to write the xml files to
return the tool kit
sets the value of error list
returns the number of terms in the collection
checks if the user is authorized to access the repository manager
returns the list of xml formats that will be used by the
returns the terms
returns the index version
returns the total number of terms in the collection
sets the list of xml formats
gets the i th bean
returns the i th bean node of the bean
returns a collection of item records in the item store
returns the i th bean as xml
returns the number of elements in this list
returns the collection key for this entry
get a collection of item records from the database
return service response code
return the service response message
get the service request made
get response document
get the collection keys
returns the request string
get the response as xml
returns the response in xml format
gets the collection info object for the collection
checks if the database record exists
get the content of a node given its relative path
get the integer value of the node at the given path
return the value of a child element
set the facet map
get facet category delimiter map
setter for property facet category delimiter map
returns true if the request is authorized to access the user
get facet category delimiter
gets the global max facet results
sets the id of the vocabulary field that defines the vocabulary
sets the global max facet results
sets the id of the vocabulary value
global max allowed depth
gets the vocab label attribute of the vocabulary document object
global max allowed depth
gets the global max facet labels
sets the global max facet labels
gets the result doc list attribute of the school model object
sets the result doc list
gets the number of results
get the error message
set the error message
returns the doc reader for the first result
sets the status of the menu item selected
checks if the request is authorized to access the repository
get the list of position history for a given id
returns the has menu item selected
return history as json
returns a string representation of this object
returns a map representation of this object
returns a view of this object as a json
compares this position to another position and returns true if they are
check if this position is a visitor position
return a string representation of the object
return a string representation of this object
compares its two arguments for order
determine the error message from the service error
compares its two arguments for order
returns the base url for the web service
time out secs in seconds
returns a list of all the documents in the standard repository
return the time out secs
returns the error message from the error element
returns the text of the specified tag
returns the text of the first element with the given tag
used to generate the asn id of an attribute value for an asn
get the identifier of this element
returns the author of this book
returns the topic of the message
get the grade levels of this benchmark
returns the text of the annotation
returns the benchmark
returns a list of suggested cat request info objects
returns the standard documents for this code query code
adds a new standard document
returns the id of the service
sets the start grade
gets the value of start grade
returns the creation date of the document
returns the title of the document
sets the end grade
get the description of this feed
get the version of this application
gets the value of end grade
set the query to execute against the database
sets the url of the request
returns the web service client
sets the max results value for this search result
gets the record attribute of the web service document object
gets the record response of the request identified by id
returns the url that was used to launch this request
sets the feedback standards
destroys the servlet
sets the standards for feedback purposes
sets the verb and query string used to execute the http request
gets the value of feedback standards
gets the doc reader attribute of the index helper object
gets the document associated with this request
to string method
returns a string representation of this object
print a line to standard out
retrieves a standard xml response from the service
returns the command to execute
get all the document elements for a specific tag
returns true if there is a document
returns a juris
returns the results of the analysis
gets the value of acsr id
returns the argument map
returns the command to be executed
retrieves the results of the current subj bean
retrieves the detailed results of the bean content
reader type getter
gets the value of jurisdiction
returns a string representation of the subject identifier
gets the value of local adoption date
returns the command of the content frame
returns the result of the query
return the soap action string
get the status of the document
returns the file name without the path
returns a hashtable populated with the ldap authentication credentials
accessor method for jurisdiction
reader type setter
return the unique identifier of this document
for debugging purposes
retrieves a statement from the standard registry
gets the sub element text attribute of the cdata node object
verifica se a condi o do managed bean colorado
return a cdata section with the given string
returns true if the client is trusted
returns the level of the target tree
returns the metadata prefix
returns true if the server is trusted
gets the target
gets the value of the doc stmnt property
get the created date
return the author of this document
creates a socket
return the topic of this activity
create a socket from a string representation of an ip address
creates a socket on the given ip address
this method returns the text that is displayed in the tree
creates a socket on the given address
creates a socket on the given ip address and port number
gets the url for the item
returns a list of the ancestors of this member
returns the url truncated
set the meta format
gets the prtln formatted as a prtln string
sets the group level
returns the group level
gets the title of the item
returns the attribute name for the given node
sets the meta format
gets the description of the item
gets the value of the id compare property
returns the label abbreviation
set label abbrev set wedge label abbreviation e
gets the collection key associated with this collection
returns the id of this element
sets the id
returns the list of possible possible states
sets the list of possible choices
returns the list item that is a sub list of this list
returns the keys associated with this relation if any
returns true if the list has a sub list
returns the no display
sets the no display
returns the no display original
return whether or not this resource is having any related resources
sets the no display original
returns the vocab field content as a string
returns the divider
sets the divider
sets the is last in sub list value for this s list
returns true if the list has a sub list
get all elements satisfying the given xpath
returns the is last in sub list
initializes the servlet
sets the no display
registers a new listener for this metadata vocab creation
removes a listener
stop the servlet
gets the first element matching the given xpath
main processing method for the vocab manager object
starts the thread that shuts down the handler
close all connections
get the text of the element that was written into the xpath
gets the collapsible
sets whether set the initial price is collapsed
receive an object for locating the origin of sax document events
return the value of a given xpath within this document
register new id for a field
receive notification of character data
has this method completed
returns the has completed anno
get the number of completed annos
returns the opmltree that is currently used
get the number of in progress annos
sets the current tree for the given group
sets a node for a sub group
has this type completed
sets the current tree to the one with the given key
gets the value of the has in progress anno property
returns true if this type has at least one in progress annotation
returns the new tree object
returns true if the annotation is in progress annotation of the given status
get the annos of the specified status
sets the key of the tree
returns an array list of strings representing the text annos in progress
adds an error to the list of errors
returns all audio annos in progress
returns all graphical annotations in progress
adds a message to the message list
get the completed annos
returns all completed reviews
returns the tips for completed teaching tips
returns an array list of all completion editor summaries
returns the set of all system interfaces
returns the list of completed challenging situations
returns the scores of all completed examples
returns an array list of all the completed advice
get the completed annotation
returns true if the field value id pair exists
get the completed bias
get the complete annos of type change
returns all completed annos of type comment
returns all educational standards completed by this proteins
returns the field id
get the completed example
returns an array list of all completed explanation
returns all completed questions of the current type
returns the completed annos
returns whether the database is being used
closes the connection to the database
get the vocab nodes
creates a table containing vocab values
sets the highest metadata field id
creates vocab fields table of the given metadata field
writes the data in the vocabulary as a text file
sets the state of the request
p returns the current state of the query string
gets the feedback string for the current state
check if the given field and value is selected in the vocab query
returns the value of the is selected flag for the given field
return the query for calculating the histogram
set the percent adjust for the bar
returns a string representing the percent of the total bar
set library total
get the total librarys total
setter for property has subtotals greater than zero
getter for property has subtotals greater than zero
sets the loader feedback
returns the loader feedback
returns true if this node is the last in sublist
set the value of is last in sublist
gets the value of the is last in sublist property
get the vocabulary node
checks if the value exists in the map
gets the vocab text file
the url of the database
returns the id of the specified tree node
the parser will call this method to report each chunk of character data
checks if the string is null
compare two files
returns true if the file ends with the zip
returns the title of the page
get the meta tag content for a meta tag
display a message indicating that a particular method was
gets the value of a meta format of field
initialize the servlet
load mappings from a configuration file
receive an object for locating the origin of sax document events
receive notification of the beginning of a document
returns all the nodes in vocab for the current language
return the ids of the vocabulary field ids in the database
returns all the possible nodes for the vocab type
returns the paths to the vocab field
called after the vocab is loaded
returns the is read only
done loading method comment
set the ids in the given list as the id of the field
set the node field ids in a list
the creation date of the data in the first step of the datastore
sets the ui label of system ids field for a given list of
the date the file was last modified
sets the definitions
the last modified date is the date of the datastore
returns a new vocab node for the given system field
receive an object for locating the origin of sax document events
ordered list of all the values in the cache
deletes and reinitializeitlize the taxonomy
receive notification of the beginning of a document
add a new id for a vocab field
end document event
returns the path to the index directory
receive an object for locating the origin of sax document events
receive notification of character data
receive notification of ignorable whitespace in element content
begin the scope of a prefix uri namespace mapping
end prefix mapping
returns the first found node in the list of the given nodes
process a processing instruction
looks up the node with the given name in a list
tree callback method
displays an error message
gets the current version of a metadata format
get the vocab node for the given meta data and value
this method is called to process the text within an element
write definitions for xml output
this method is called when the xml parser encounts some text
sets the operator
this method is called when the sax parser encounts whitespace
returns the operator for this expression
return the reader that is used to retrieve the index
returns the number of documents that match the given query
returns the number of documents that match the given query
gets the number of documents in the index
should return the current version of the browser or the
gets a list of all documents in the index
list docs retrieves a single docs instance based on the field
get the translated field value
list docs for a field
not implemented yet
gets a list of all terms in the index
gets the fields of this index
set the response group for the items
group information for the items in the response
returns a map of the terms in the corpus
get a list of all stopwords in the index configuration
return the response from the opml request
gets the term frequency of the term in the corpus
gets the term frequency of the term in the given field
adds a document to the index
returns an array list containing values from the cache
returns the number of terms configured for the given virtual field
gets the i th result document from the index
adds a document to the index
returns whether the given virtual term is configured for the given
gets the number of hits that are stored in the result set
removes the given virtual field from the term
default opml for audience and field type
removes a virtual field
gets the lucene document
add a category path to the list of paths
clears all the data for the given fields
called when there is a new reader
adds the document to the index
always returns null for obstructions
returns true if the specified character is a
creates a token stream which tokenizes all the text in the provided reader
creates a token stream which tokenizes all the text in the provided
adds the document to the index
creates a token stream which tokenizes all the text in the provided reader
default opml for audience and field type
returns a string representation of the map
set the default analyzer for the field
determines if there is an analyzer configured for the given field
removes an analyzer from the list of analyzer names
removes a document from the document store
creates a token stream which tokenizes all the text in the given field
returns the number of documents
returns the fields
add additional indices to the hash table
return the class that implements the index writer implementation
gets the title of the page
gets the description of the current record
get the class name of the
cleans up the map
gets the whats new date
gets the class for the current reader
returns the keywords as a single string
does the full content of the item
returns the last name of the creator
get the mmd rec for this thread
get the type of the document
gets the class name of the code reader code implementation class
removes one or more documents from the index
returns the accession status
returns whether this resource is a resource that has not been
returns the code date code object that represents the accession
gets the result docs
override this method to return whats new type
does the full content of the item
get the xml format of the report
always returns false for obstructions
returns the first primary id
gets whats new type
returns the type of the document
returns a list of ids of all related elements
gets the class name of the
gets the class name of the java class used to read the annotations
returns a list of all related urls
get the ids related to this node
returns the vocab node that is created by this factory
get the related urls as a map
get whats new type by loading by emf
get the doc group
sets the list of response objects
adds the fields to the lucene index
return the document type
get the class name of the
set the list of response values
gets the class name of the code reader code implementation class
returns a hash map of all the configured attributes
returns the full title for the collection
sets the configuration attributes
returns the short title of this collection
returns the title of this video
gets the session attributes
returns the description of the current element
returns the source file
gets the metadata associated with this collection record
gets the part of the drc
returns the accession status of the current document
returns the source directory
returns the status of the collection
return the document wrapper for this component
gets the url to the collections scope
set the document wrapper
gets the url to the review process
gets the single review process attribute of the jbuilder summary object
gets the format of the records
sets the value of file indexing service
gets the cost attribute of the local file store object
gets the nth document in the index
returns the central file indexing service
gets the keywords attribute of the java doc filter object
returns true if validation is enabled
gets the class name of the
returns the accession date or null if there is none
returns whether the search is in progress
initializes the xml document
returns the doc source
sets whether the doc is making a deleted document
stop the indexing process
aborts the indexing process
adds a feature to the doc to remove attribute of the lucene index
add a keyword to the list of keywords in this query
returns the value of the given keyword field
adds a text field to the form
returns the value of the text field with the given name
returns the column key
returns the index field preprocessor for the given field
get the map of facet categories
gets the format configuration document
checks if the format is configured
sets the flag that indicates whether or not the field is
get the north coordinate of the centre of the map
get the south coordinate of the rectangle
get the east coordinate
get the west coordinate of the centre of the rectangle
returns the title of this pre processed document
this method stops the thread monitoring the process
sets the title of this post
returns the description of this pre processed xml node
sets the description of the post
destroy the adnfile indexing writer
sets the urls for this post
returns the accession status
sets the ids of the post script node
returns the related ids
returns true if any resource that has the same resource id
closes the taxonomy store
returns the related urls
returns the related ids map
returns the creation date of this device
returns the related urls map
finalizes the index
sets the related ids map
returns the type of this document
gets the class name of the log reader implementation
sets the related urls map
sets the related ids
gets the mmd rec for this record only
sets the related urls
gets the last name of the creator of the list of contributors
gets the request date
returns the processed url of this request without any
returns the notes for the record
gets the remote address that this udppeer thread is sending to
gets the remote address that this udppeer thread is sending to
reader type is the file type
set the document for this object
returns the score of this item
gets the primary index for this lucene index
returns the full xml content of this pre element
gets the items index that duplicates the items of the item
helper method for extracting the term from the given array of
get an attribute from the configuration
gets the cost attribute of the adn xml document object
returns the query
returns a set view of the keys contained in this map
get the content of the full xml attribute
returns a set of the entries in this map
checks to see if the specified field is in this document
returns a collection view of the values contained in this map
checks whether the given value is in the set
returns true if this set is empty
returns the number of document sets in this collection
this operation is not supported
this operation is not supported
this operation is not supported
this operation is not supported
method get xml indexer
initialized the xml database connection
gets the record data service
get the content of the xml document as a string
returns the email address of the creator of the person
gets the index
returns the title of the document
return the field names
return the field values list
get the set of all field names
returns a set view of the mappings contained in this map
returns the email address of the creator of the email
returns true if this doc contains a key
returns the description of the record
returns a collection view of the values contained in this map
returns true if the field contains the given value
returns true if there are no fields in this document
return the number of fields in this form
extract the email address from the email list of contributors
returns the url of the document
returns the list of fields
returns a string representation of the object
get field by index
get the organization institution name from the adn xml fields
returns the number of fields in this group
returns the value of the field at the given index
returns the id of the document
return the internal error message stored in instance variable msg
returns the number of fields in this record
returns the stack trace from the underlying document
returns the key of this field
returns an xml s document id as that
returns the duplicate id
returns the value of the field
get duplicate id source file
get the organization inst department from the adn xml fields
throws an unsupported operation exception
return the service name
gets the id of this document as an encoded string
returns the item id
returns the title of this document
gets the description
returns the name of the editors content
returns the pathway of this record for example t
get the organization institution name from the created xml fields
returns the type of this annotation
gets the value of the is part of drc property
is this a part of a drc
returns true if this operation is completed
indicates if the current status is in progress
returns true if this code cache entry code is a retired
get the department for person related to the organization
gets the additional metadata if any from the record collection
determines whether this collection is currently enabled
returns the full title of the document including the title
returns the url mirrors of the adn xml document
gets the formatof records in this document
gets the accession status of the document
audience tool for
returns the part of the drc
used to check if this is a part of a drc
returns the collection url
returns the url of the scope
get the location of the audience beneficiary
gets the review process url
gets the review process
returns the cost of this record as a string
returns the set string for collections
get the value for audience typical age range
gets the location of the files in the files metadata
gets the num files attribute of the file search engine object
return the collection index for the primary index
returns the goal for audience instructions
returns a string containing the number of indexing errors that have occurred
returns the party this is responsible for
get the name of the teaching method for audience teaching
gets the type attribute of the person object
returns the name of the titled border
returns the title of the multi doc
gets the value of the inst dept property
returns the email primary
gets the value of the email alt property
gets whats new type
returns the type of the form organization
returns the doctype declaration
returns the deleted
gets the whats new date as a string
returns the description of the multi doc
returns true if the document is deleted
returns true if the file exists
returns true if the file exists
gets the date and time this record was indexed as a string
gets the date and time this record was indexed
gets the last modified date as utc string
gets the last modified date from the file
returns the document source
returns the ids of the multi doc
gets whats new date as a date
returns the filename of the document
get the document source
returns the document source encoded
gets the log date attribute of the log record object
gets the start date from the record
returns the title of this document
gets the start time attribute of the harvest log reader object
returns the description of this document
returns the announcement url
gets the start time as a long
returns the announcement url
used to get the part of a drc
gets the end date from the record
returns the event start date
returns the event stop date
gets the end time attribute of the harvest log reader object
returns the date the index was created
gets the end time as a long
returns the post date
returns the date of the record creation
gets the harvest duration in milliseconds
returns the due date
gets harvest duration
get the date that the opps file should be applied
returns the name of the repository
get the base url
returns the url of the document
returns a string representation of the current set
gets the set for this record
returns the uid for the record
gets the unique id from the document
returns the set collection
returns the url encoded version of the original document
returns the unique id of the harvest document
gets the unique id of the harvest document
returns the number of harvested records
returns the number of harvested records or 1 if the record was
returns the number of resumption tokens associated with the document
gets the url truncated as a string
returns the number of resumption tokens associated with the document
return the collections name
returns the log message from the log record
gets the directory to which the harvest will be generated
returns the collection key
runs the thread
returns the name of the entry so that entries can be made
gets the reader type
gets the attribute with the given key
parses the query string and returns the query object
stops the indexing process
returns true if the collection is enabled
gets the creation date as a string
queries if the indexing thread is waiting to stop
returns true if the collection is disabled
returns the collection record id
this method changes the update frequency
print a line to standard out
gets the xml format attribute of the file resource formatter object
start the timer thread
get the oai sets list from the servlet context
set requested xml format
stops the timer thread that continually sends the indexing operation
gets the accession date as a string
gets the status attribute of the query object
get a list of status labels
set the sel status
gets the accession date as a java date
returns the accession status or default if there is none
returns the accession status of this document as a string
returns true if the queue is currently indexing
returns true if the given directory is configured within the classpath
gets the oai last modified string from the record
gets the last modified time of the content file
returns the date the content last modified date
gets the last sync time
used for checking if this annotation is part of
returns the finder object used to locate the data instances
returns a new resource object
factory method for creating metadata objects
get the number of records to delete
get the resource for a given resource handle
returns a metadata provider for the given handle
get pathways returns a list of strings from a sentence
get an aggregator from the ndr handle
finds the resource with the given identifier
show the configuration of the client repository
gets all resources of aggregator
get the number of records to add
get the agent that is currently authenticated
uploads a file to the repository
sets the content of the resource referenced by the given url
finds a list of status strings from the anno document provided
sets the content of a resource
sets or creates a new resource content with the given label
get the number of records to replace
gets the mime type of a file
returns the mime type of the given file
returns the list of annotation formats available in the multi doc itemannoformat
checks if the document is valid
generate a header
returns the metadata vocab object
returns the data stream element for the given format
adds a command to the list of commands for this robot
adds a command to the command map
adds a command to a given parent element
gets the parent element of the command
returns a copy of this component as an element
gets the properties
gets the input xml relationships
gets the data
gets the root element
return the xml representation of this object
returns the xml representation of this object
return the vocabulary default language
add a data stream command to the message
returns the data stream element for the given format
set the info stream for the datastream
set the vocabulary default language
create new url
destroys the servlet
shows the context parameters in the current servlet context
returns the metadata vocab audience
returns the service description
returns the handles for the members of a group
get the number of members
get the handles of the inactive member
returns the number of inactive member objects in the member list
return true if the ncs agent is authorized to change
checks if the user authorized to change the agent
returns the record id
returns the unique id of this object
returns the item id of this item
re indexes all documents that match the given term within the given field
returns the status of the job
returns true if this is a final status
returns true if the ncs metadata is available
native data stream returns the item record
gets the canonical npc data
gets the child to parent relationship attribute of the pdb pupil model object
set the vocabulary audience
gets the mdp handle attribute of the meta data object
returns the name of the native format
getter for property aggregator for
returns the collection resource associated with this relationship
returns the ncs collect element
gets the metadata element for this nsdl
gets the nsdl dc reader
returns the title of this book
gets the metadata element for this nsdl
re indexes all documents that match the given terms within the given field
gets the harvest info reader associated with this metadata
return the url of the resource to be used
description of the method
this method will extract the data streams from the data source
returns the id of the collection that this resource belongs to
gets the collection name attribute of the set var object
get the collection record
returns the native format for this resource
returns the aggregated by
returns the name of the set spec
returns the name of the set
gets the data repository
get the handles for the current member
initialize the test
get all nodes satisfying the given xpath
get the text of the node specified by the xpath
get url of the harvest harvest server
get list of ingests
returns the namespace map
reindex the given documents
reindexes the documents in the result docs
run method for the thread
returns true if this document has related resources
main processing method for the index thread object
returns a map of namespaces
returns the textual description of the element
returns an iterator over the set of ui labels
returns the textual description of this service
gets the value of identifier type
returns the number of vids in the bidding queue
check if the authorized to change is allowed
retrieve the list of metadata providers
get all aggregators used by this builder
initializes the data streams
gets the value of the has related resource property
get the first value of the given property
returns a list of values for a property
get the relationship value
returns a list of values for a given relationship
returns the has handle
get the creation date of the repository
init the data streams
returns a set of all registered formats
get a data stream for the given format
unsupported operation at this time
get a native data stream element from this packet
get the data stream as an element of the given type
gets the canonical nsdl dc element
get all nodes that match the given path
returns true if this doc has any assigned relations
returns the xpath for the given path
returns the qualified name of a class
set the identifier for this instance
set the identifier
adds the member of command to the given aggregator
set the unique id command
adds the metadata for
sets the data stream to be used for future output
sets the metadata provided by
sets the aggregator for
associate command with a resource
return the handle of the result
get the handle information for the current response
return the number of items in the list
returns the payload of the current message
set the object type
get a component of given type
adds a command to the element
returns true if this document has relations
add a command to ncs with no options
add an ncs property cmd with an action to the ndrconstants
main indexing method
add an ncs namespace relationship command to an ndrconstants
add a dlese command
add a dlese command to the namespace
add a data stream command
used for checking if this annotation is part of
set the data info stream to use
add a service description
adds a new state to this syntax tree node
add an object to the collection
compares two related resources
this method returns an array list with the indexing messages
returns the missing item ids
add a service description to the service description
add an element to the dcstream
this method creates a ndrconnection object from a given path
submit form using default values
description of the method
start the tester thread
overrides method from superclass
gets the report attribute of the report config object
this method creates a ndrconnection object from a given path and xml string
submit the form
description of the method
stop the tester thread
returns the verb
has this method completed
sets the request agent
gets the value of request agent
try to connect to the ndr server
submit form using the request
submits a file to the remote server
receives a prtln indicating that the next verb was encountered
sets the metadata prefix to be used for this page
returns the namespace of this metadata format
sets the namespace for this metadata format
sets the database schema
returns a string representation of this metadata
compares the specified object with this set info
get the number of fields in the current subset
returns true if the specified set spec is defined
gets the oai set specs attribute of the repository object
gets the value of the specified by id property
checks whether the given object is equal to this collection session
commit the current index
returns a list of collections that are currently configured
gets the state of a collection configured under the specified collection key
delete a record
returns a new collection indexing session for the given collection key
this method returns a new collection indexing session
delete the previous session records from the index
this fires a indexing event based on the item name
this method fires indexing event
destroy the servlet
servlet context config listener method
returns the collection indexer
return the array list of indexing messages
returns a string representation of the object
adds a message to the indexing queue
returns the current value of the attribute accession status
stop the indexing timer
gets the value of the id property
this method returns the unique id of this object
updates the metadata vocab field with the given metadata vocab object
initialize the repository manager
sets the name of the field
gets the index associated with this object
sets the set spec attribute of the web service object
gets the value of the collect collection id property
sets the collect collection id
gets the id mapper query object attribute of the dcsbrowse form object
get the number of video in progress
returns the description in html format
closes the id mapper and releases database connection
sets the description of the record
description of the method
returns the enabled
closes the id mapper and all related resources
returns code true code if this cell is enabled
returns whether the id mapper is disabled
sets the enabled flag
gets the dir infos
gets the file path for the given mmd id
returns the dir info at the specified index
gets the file path for a given mmd id
sets the dir info
sets the dir info attribute of the main frame object
returns true if the given dir info is contained in this collection
get the number of files
returns the number of files in the directory
sets the status of the accession
returns the number of the indexed data
returns the number of the indexed fields in the result set
returns the number of deleted files
get the number of deleted records in the local storage
gets the value of the num discoverable property
returns true if there are in progress annotation of this type
returns the number of errors that have been indexed
returns the number of indexing errors that have occurred in this object
gets the anno status from result docs
returns true if the directory is in the list of directories
gets the annotation formats from the anno result docs
adds a directory information to the list of working directories
gets the valid drc pathways attribute of the schema url object
two set info objects are equal if their names and dir infos
sets the directory of the web application
returns true if the directory is the same as the given one
sets the format of the page
method to string
override the equals method
returns all the text annos in progress
returns all audio annos in progress
returns all graphical annos in progress
returns all video annos in progress
returns the number of records that were returned by the most recent
returns the number of results to return
set the namespace and schema definitions for this repository
returns the repository description
returns the value of the em b namespace identifier b em attribute
this implementation returns the offset of the cursor
sets the name of the repository to use
sets the repository description
sets the namespace identifier for this node
sets the administrators email address
gets the value of the trusted ws ips property
sets the value of the trusted ws ips property
get the set of the page
return the days of the week in the messages
sets the number of days of week before the current week
gets the value of the until property
returns the number of results
returns the result offset for the current page
determines if this is the last token
sets the location of the metadata records
gets the config dir location attribute of the server object
adds a new error to the list of errors for this repository
returns example id
returns the repository name
get the hashtable of metadata formats for this device
sets the deleted status of the task
returns the deleted status
sets the hashtable of metadata formats
set the resumption token
get the resumption token
set the length of the results
gets the results length attribute of the repository object
returns the sets
sets the requested format
gets the value of the requested format property
sets the sets to be sorted
returns the repository identifier
returns the status of the provider
returns all admin emails for this user
gets the set list from the servlet context
returns the earliest datestamp that exists in the servlet context
get the name of the deleted record
convenience method to get the metadata schema urls
convenience method to get the metadata namespaces from the servlet context
returns the granularity for the repository manager
returns the list of compressions to be used for the current servlet
get the list of descriptions for this web application
gets the results attribute of the query object
get pathways returns a list of strings from a sentence
gets the value of the identifier property
get status from the document for annotation query
get the datestamp
set the datestamp value
resets all the values in this object
return the list of set specs
set the list of set specs
sets the name of the set
reset all properties to their default values
set the name of the set spec file to use
sets the description for the repository
gets the dir nickname
returns the list of annotation formats in the doc or document
returns the dir metadata format
sets the value of the set url property
returns the name of the metadata schema
sets the dir nickname
sets the dir path
sets the directory metadata format attribute of the file search engine object
sets the metadata schema for this data source
sets the metadata namespace
gets the value of the set description property
gets the value of the set url property
sets the matching field values
sets the value of the included dirs property
returns the format used to export the results
returns true if this format is included in the current
gets the value of the included terms property
returns the included query
returns the current repository
sets the current repository
returns the background indexer repository
set background indexer repository
gets the excluded terms
highlights keywords in a text
gets the excluded query
get the index of the first highlighted keyword
sets the format used to convert included values
sets the included terms
sets the included query
sets the list of excluded dirs
sets the comma separated list of excluded terms
sets the string representation of the excluded query
returns whether or not the definitions are empty
commit background index
set the metadata vocab object
set the current result doc
sets the default search operator
set the directory to which the configuration files will be written
optimize the indexes by adding items to the internal
the config used for xml indexing
this method destroys the servlet
changes the indexing timer frequency
gets the format type to be used
starts the indexing timer for the given period
returns absolute path to a file in the workspace
print a line to standard out
get the name of this collection
get the collection description
stops the indexing timer
gets the unique id of the collection
print a line to standard out
return the lar status
destroy this repository
print a line to standard err
returns true if the lar type is the recast as a lar related metadata collection
return the string representation for the vocab cache feedback string
set the string that is used for the vocab cache feedback
returns the xml for the ncs record
sets the system
gets the primary index
clears the vocab cache
return the ncs record document
set the vocab cache value
sets the vocab cache group
return all cached vocab values in order
sets the resource result link redirect url
get the collection key for this metadata record
gets the resource result link redirect url
set the primary result document id
returns the value of status comment field of the structure
sets the status comment
gets the value of the primary result doc id property
sets the vocab interface for the application
set the system
clears the vocab cache
sets the vocab cache value for this metadata
return all cached vocab values in order
return the last known vocab number
set the primary result doc
returns the last sync time
returns the last modified time of the index
get the primary result doc
returns the update frequency
get the number of records to delete
get the item doc reader
return the number of records to add
get the set spec for this collection
returns the number of records in the replace
get the show num changed property
sets the primary result doc collection key
set the show num changed flag
returns the number of records in the index file
returns the primary key for this record type
return the list of messages that are currently being processed
returns a list of errors in the vocab file
sets if vocab messages should be shown
gets the has reviews attribute of the ddsview resource form object
getter for property show vocab messages
sets whether or not error messages appear to show the vocabulary
return true if there are no possible error messages for the vocabulary
gets the has drc reviews attribute of the ddsview resource form object
get library format for oai
stop indexing with current filters
gets the is drc review attribute of the ddsview resource form object
resets the paging links array
returns the pathway url
set library format for oai
gets the has other reviews attribute of the ddsview resource form object
setter for property wnfrom
gets the teaching tips attribute of the ddsview resource form object
returns the wnfrom
returns the date strings
gets the has ideas for use attribute of the result docs object
gets the has challenging learning contexts attribute of the
clears the array of date strings
check if the file is being indexed
sets the search index for this query
this method adds a string to the date
display the relative relative to the reference frame
returns a comma separated list of date strings for ui
gets the value of the rel displayed property
compares the specified object with this collection info for equality
sets the type of search
gets the id search title attribute of the result docs object
sets the vocab input state
gets the id search url
get the title of the resource
returns the url to the resource containing this document
returns the items index that duplicates the items of the item
sets the record filename
returns the record filename
get the value of record collections at specified index
get the record id at the specified index
get the number of collections in the database
sets the id mapper errors
return list of errors that occurred during id mapper execution
get the list of result documents
sets the searcher
returns a list of all accession statuses
check whether the item is part of a drc
gets the has viewable review attribute of the ddsview resource form object
returns a description of this collection
sets the current vocab name
returns a list of label constraints for the collection
get the current vocab name
sets the current vocab group
gets the current vocab group
set the current vocab framework
returns the largest total number of all items in the database
reset the largest number of items
returns the total number of resources
sets the collection meta name
returns the collection title
sets the total number of resources
sets the has collection specified
returns the list of indexed formats
returns the has collection specified
set the collection doc reader
get grade level
returns the collection doc reader
set grade level
returns an array list with the indexing messages
returns an array list containing the vocab list for the current vocab
vocab list returns an array list of the vocabulary
this method returns the re of the resource type
returns the total number of all discovered documents
this method sets the re resource type
returns the collections vocab for this application
sets the array of selected indexed formats
sets the repository manager for this instance
get the standard
return the collection number of documents in the index
sets the cs
sets the metadata vocab for this set of metadata
initializes the metadata vocab
set the vocabulary interface
get the subject of the message
set field name of meta data using a string
set the subject of the email
returns the field label
returns the translated field id of this field
ky get the ky
set the ky
returns an array list containing the vocab nodes for the given field
returns an array list of all possible vocabulary names
set the headless status of this element
returns the headless status of this record
returns the result doc reader
return the keywords as a space separated string
returns the keywords of the query
return the configuration directory
gets the index object from the servlet context
sets the index that the index reader should write to
get the record from the data store
sets the calculate counts for fields attribute of the calculated wrapper object
ky sets thhe value for this field
gets the value of the is empty search property
get the term count fields
returns the number of terms in the collection
stem words in english
sets the is empty search
returns a map that maps term count to term count
sets the index to use attribute of the table element object
returns the index to use
returns the number of results
set the directory to read the configuration files and subdirectories
returns the start page of the results as a string
returns the paging criteria parameters according to the criteria type
get the document map for this result
return the lazy document map for this result
get doc reader
get a mmd rec from the database
returns the repository manager from the servlet context
helper method to get a metadata provider from the ndr utils collection key
returns the date the indexing started
tests if a specified file should be included in a file list
gets the xsdatatype attribute of the datatype set object
derive a set of simple type definitions from its union
derive the xsdatatype for a given simple type def
gets the base name attribute of the xquery object
updates the metadata vocab with the given new vocab
prepare object for garbage collection
gets the format type to be used
the max occurs property is true if the max occurs 1
sets the metadata vocab audience default value is
nillable is true if this element is nillable
returns true if this element is the head element of the
returns the metadata vocab audience default
sets the substitution element
return the name of this collection
sets the substitution groups for this class
returns the code schema node code that is substitution group head
returns the ndr handle
returns the start position of the token in the stream
set the language used by the metadata vocab file for the current language
the max occurs of the parent compositor
check if this composite is a singleton
is this a attribute node
a convenience method to check if the node is an element
is this field required
returns a list of all the names of all the attributes
get the collection key
returns the property for the given key
return the language used by the metadata vocab file for the default
get the validation type of the object
find the validating type for the given extension element type
returns the metadata vocab object used to set the current data
returns the target namespace uri
compares the specified object with this collection info for equality
returns a list of schema locations that include imported elements
returns a list of nodes that match the given xpath
returns a single node matching the given xpath
checks if a node exists
returns the compositor for the type of the complex type
gets the value of the key node
sets the text of the node at the given xpath
set the value of a node or attribute specified by xpath
extracts the documentation string from the given element
returns true if the type definition is a type definition
getter method for inline
set the inline attribute
indicates if the column is simple type
indicates if this column is complex type i
returns the xsd prefix
remove the node specified by xpath from the document
get the type of this type
returns a string representation of this object
get the type of the data in this column
returns true if this is a global declaration
returns true if this element is a global element
returns true if this is a global attribute
returns a string representation of the object
gets the number of siblings of the node specified by xpath
returns true if this is a attribute group
returns true if this column is built in
is this data type a model group
registers the namespaces of this document
returns the generic type of this field
returns the namespace context for this element
returns an iterator over all namespaces
returns the list of all namespaces defined in this scope
insert the given element into target path
returns the qualified name of this type
converts the contents of the uri map to a string
returns the fully qualified name of this type
unregister a namespace from the repository
resolve an element name by looking up the qualified name
gets the namespace for a given uri
returns the element as xml
gets the prefix for a namespace uri
returns the xml representation of this element
returns the namespace prefix for the given namespace
filters the children of an element
returns the namespace that is mapped to the given prefix
filters the children of an element
this returns the first child element within this element
returns the prefix map
gets the children attribute of the annotation object
returns the target namespace uri for this version of xml schema
returns the target namespace of the current transformation
remove the element specified by the given xpath from the list of
sets the target namespace uri for this version of xml schema
returns an enumeration of all the values in this table
returns the default namespace
creates a new sibling node at the given xpath as specified
returns the namespace of the schema instance
returns the namespace of the schema that is associated with this
returns a qname which can be used to create a namespace uri
get the data type
gets the kind of repeating element of the current node
returns a string representation of this object
returns true if namespace is enabled
get the data type
returns true if this is an enumeration
returns true if this is a union element
get the schema props
returns the union member types as a string
gets the simple enumeration values attribute of the simple type object
description of the method
returns a string representation of this object
initializes the namespace registry and comparator
get the data type of this column
clears the cache
get the schema location
gets the compositor
returns a list of the keys in this namespace
gets the remove invalid records
returns true if the current page has a inline compositor
returns true if this element is abstract
gets the type of the compositor
get the global definition with the given name
checks if this type is derived from the other type
returns true if the model contains complex content
get the version
compares its two arguments for order
returns true if this element has complex content
gets the schema doc needs converting prtln attribute of the schema helper object
returns the complex content element
initializes the internal structures used by this class
returns true if this model only has simple content
returns the uri of the xml schema that is used for validating the
get the root element name
returns true if this model has simple content
get the name of the type from a base
returns the simple content element
returns the namespace registry
return the simple content type of this element
sets the remove invalid records attribute of the metadata vocab input state object
adds a global definition to this mapping
returns the type of the derived object
get the target namespace
adds a global definition to the list of global definitions
returns the xsd extension element of this extension element
returns the restriction element
get the root element for the schema
get the root doc
gets the global definition of the specified type
adds a schema reader
returns the extension type of this file
get the schema reader for the specified uri
gets the extension root type
gets the schema reader associated with a particular namespace uri
returns the global definition for the given type
gets the restriction type
gets the restriction root type
method ambiguous root element
get the derivation base if any
gets the validate records attribute of the dcs data record object
processes a schema file
gets compositor by xpath
returns the derivation type of this schema
cleans up the resources
returns the content model of this complex type
returns true if this map contains a mapping for the specified key
gets the compositor attribute of the meta data object
returns a list of all the values in the cache
return the value of a path
set the value of a node given by its path
returns a string representation of this object
compares its two arguments for order
tests if a new member of the sequence guard is accepted
return a string representation of this object
get the schema reader for the specified namespace uri
initializes the compositor
sets the validation records
gets a list of nodes that match the given xpath
gets the substition group names attribute of the
returns a list of all subgroups of the head element
returns the current reader uri
gets the schema node attribute of the schema helper object
prints the instance names of the composite
gets the current schema reader
prints the leaf member names of the collection
returns the type of this container
gets the current namespace attribute of the jtree object
returns the name of the type
get the parent schema node for the given xpath
returns the index of the given member in the group
pushes the current namespace onto the stack
finds the index of a particular member in the composite
returns the member at the given index in the group
returns the schema node that contains this node
pop the current namespace from the stack
returns the string describing the number of times the interval
returns the largest number of instance elements for any members that
create a child element of the current element with the specified name
creates an attribute in the given parent
finds the member in the group with the given name
find the leaf member with the given name
returns a string representation of the object
returns true if this choice is required
gets the acceptable members attribute of the simple type object
gets the definition miner
returns a string representation of this object
returns true if the element can be created
returns true if the element is of the right type
check that the current object is valid
gets the compositor
checks if the element is an extension element
prints the instance members in the composite
gets the repeating element attribute of the schema helper object
returns true if the element is repeating
returns the number of members in the group
gets the member count attribute of the occurrence object
get the example id
adds a list of elements to this list
adds an element to the list
returns a string representation of this occurence
returns the maximum number of instance elements for any sub compositor
returns true if the element at the given xpath is a singleton
returns true if this nested element has a sub compositor
gets the substitution group member names attribute of the
returns true if this element is a head element
get the provider status
returns true if this composite node is a singleton
gets the inline compositor
gets the compositor that defines this group
gets the parent compositor guard attribute of the composite element object
gets the instance qualified name attribute of the meta data object
returns the qualified name of the element
returns true if the given xpath is a repeating complex singleton
returns the label of the node
gets the cm type
return a list of occurrences based on the times
returns true if the xpath expression contains a repeating complex singleton
prints all elements of a bucket
sets the provider status
checks if this guard accepts a new member
get the type of this type
returns a string representation of the object
get the framework registry
gets the meta data framework
print a line to standard out
get the harvester status
returns true if the element is a choice element
get the path of a node in the form of a prefix
return true if the element is a choice element
returns the uris of this namespace prefix mapping
print a line to standard out
gets the choice element attribute of the a schema node object
sets the harvester status
gets the path attribute of the flat file data object
check if a choice compositor exists for the schema
get the path of an element
check if the schema node contains compositor
get the repository identifier
returns true if the given schema node contains a choice compositor
gets the frameworks
sets the frameworks
gets the xml format
gets the sequence compositor attribute of the schema node object
returns true if the schema node identified by the given encoded
sets the metadata for framework
return true if the schema node is a multi select
returns the directory uri
sets the directory uri
sets the repository identifier to be used by the persistence
returns the fields frameworks
sets the fields frameworks
returns the qualified instance name of this field
returns true if the schema node contains an optional multi select element
returns true if this is a complex type
returns true if this is a global declaration
get the version of the protocol
returns true if this module is built in
the type of the data object
checks if a schema node has a required multi select
returns the qualified name of the given old way
returns a string representation of this object
returns the reader for the item at the specified index
gets the top element from the stack
pops the current schema reader from the stack
returns the name of the framework
sets the name of the framework
return a list of all item objects uris
returns the index of the item with the given uri
get the schema reader for the item with the given uri
sets the protocol version
return a string representation of this object
returns a pretty printed type element name for the type of
returns true if the file ends with the
returns the from format
gets the minimal tree attribute of the schema helper object
returns the to format
returns the time when the file was last modified measured in
returns the bread crumbs
returns the name of the from format
returns the format to be used
return when last modified
returns the to format in which the content is generated
gets the xmlwriter attribute of the jbuilder editor app object
compares its two arguments for order
checks if a schema node is required
returns the from format
returns the name of this format
returns the format of the receiver which is code ncs item code
return when last modified
returns the to format
gets the repository name
returns the parent of this node
checks if the type is combo union
add a child node to the children array
returns a child element at a certain index
returns the number of children of the specified node name
finds the place that contains the specified tag
set the path of the file
adds a new comment to the xml element
get a comment from the mixed content
returns all the comments of that element as a list
checks if the type is an enumeration type
removes a comment from the element
sets the repository name
returns true if the receiver is a leaf
returns true if this type is an enumeration type
returns the name of the encoding format
convert xml to a readable string
returns the value of the attribute with the given name
always returns 1
sets an attribute value to the element
gets the missing required xpath
format of the reaction component
gets the to format
performs xml conversion from dlese anno to dlese anno localized
get the earliest datestamp that exists in the database
returns the enumeration values of this simple type
returns a list of enumeration values for the given type name
compares the specified format against this format and returns true if
gets the global def from the schema with the given xpath
returns the from format
returns the to format
set the earliest datestamp value
returns the converter with the given format name
gets the asset nodes attribute of the scan2 d object
adds a new xsl stylesheet for the given format
gets the thumbnail nodes
returns the id
returns the url
set the url of the general element
returns the text of the node at the given path
sets the text of the node identified by the given xpath
select nodes using xpath
selects a single node that matches the given xpath
returns the xml node this record is representing
get the xml representation of the record node
get xml node stripped of the record node
returns the xml representation of the element
process the dom tree to find the correct node
need some constraints or programmatically output a file
output the record
returns the time when the file was last modified
returns the root of the tree
adds a node to the dom document
cleans the map of all xml nodes in the map
returns the footnote
sets the footnote
time of last modification
process the comments section of the document
returns qualified name for any type using xpath as the schema namespace
get the granularity
returns the from format
returns the to format of the filter
performs xml conversion from dlese collect to dlese collect localized
returns the to format
performs xml conversion from dlese collect to dlese collect localized
returns the last modified date of a file
returns the to format in the pager
converts the xml string to a news opps record
destroys the global definitions document and xsd
prepare object for garbage collection
sets the granularity for the data
return a string containing all content from node and sub node
sets the id
initialize the xml record
recursively walks through the content section of a subtree
returns the url for the resource
returns true if the last call to code next code or
returns init error message
sets the resource url
destroy this xml file
returns the error messages generated during parsing
returns the warnings
sets the named value
sets the urls to search for classes and resources
returns the created date as a string
sets the creation date of this object
sets the oai base url override
returns the accession date
get a comment from the xml record
sets the accessioned date
returns the unique id of this node
gets the list of science stds
adds an entry to the hash table
returns the url for the main resource of this application
sets the list of available science standards
returns the created date of this node
returns the base url to use for oai
sets the list of available science stds
returns the accessioned date
clears the list of science stds
returns the informations about the record
returns a list of all the geo standards in the first argument
returns the title of the page
sets the standards for the result
get the description
get the list of compressions
sets the list of standards for the query
returns the cost of this node
test parsing of simple filename and encoded data
test method for
test method for
test method for
returns a unique string for this test
clear the list of geographys
get the copyright string
returns the keywords
returns a textual description of the otherrequirementsinfo field
set the keywords for this keyword search
add an compression to the list of compressions
set the keywords for this keyword search
returns the title of this book
get a list of the subjects from the current record
sets the instance title
get the urls for this node
the run method of the thread
returns the description of this filter
remove compression from the list
sets the description
returns the cost of this ownable
sets the root reference
sets the cost
returns the copyright
remove compression at given index
sets the copyright
returns the information
sets the information
get the list of all the descriptions
get the keywords
invoked when a window is in the process of being closed
sets the list of subjects
returns the audiences
set the audiences
returns true if the given string is contained in the given uri
returns the technical reqs
adds a feature to the feedback attribute of the guicontrol object
gets the description at the given index
returns a string value from the xml record
focuses the component
sets the list of technical reqs for this task
updates the gui
inserts a string into a list
get the other technical info
clears the feedback
sets the value of the other technical info property
insert an object into a list
shuts down the application
adds a row to the table
get the description of the look and feel
adds a description to the list of available descriptions
return the id of this object
returns the name of this module
returns the value at the given row and column
returns the number of rows in the model
returns the value of the given input
sets the background color of the highlight region
sets the resource types
sets the value at attribute of the strcture table model object
returns true if the cell at row col is editable
returns the list of catalogers
set the list of catalogers
returns the name editor for the given value
replaces the description of the given item
returns the creator
returns true if this is an editor
gets the value editor attribute of the abstract skin button object
sets the list of contributor
getter for the annotations
returns true if the given path is editable
shuts down the editor
sets the annotations
invoked when an action occurs
window closing event handler
remove the description for the given value
set the relations of this code association code
returns the geo references
sets the list of geo reference objects
remove the description at the given index
return true if this isnt a type
sets the technical value of a requirement
gets the opml namespace
called if the user has modified the current drop gesture
returns the opml version
returns the head extended element map
returns the head extended element name
returns the value of the requirement or null if not found
returns the requirement hash map
returns the icon to display for the file type
gets the icon attribute of the xmleditor doc ui object
check if the value is empty
sets the value attribute of the environment entry object
get the value for a key from the resource bundle
this method replaces all html tags with html
returns the resource
gets the record with the given id
test if the instance contains an empty value
creates the navigation buttons
gets a query for all disabled sets
sets the value attribute of the person form object
returns the value of the given key
returns the values
returns the advance width of the specified string in this font
returns the width of the frame available for reading
is the user empty
sets the value of the annotation
returns the value of the given annotation
add a navigation button to the navigation panel
returns the values of this object
returns the frame
creates a jlabel with the specified label and text
returns a box with a left aligned component
is this value empty
get the jcomponent associated with the given field name
sets the relation between the specified key and the specified value
returns the value of a component
returns the value associated with the given key in the relation
set the value of a component
returns the relation
loads xml file and insert data into the xml file
return true if the component is empty
adds a blank line to the current tab
adds a new repository filter
sets a value in the registry
returns the value of a given key
return the map of geo reference objects
add the attribute name value pair to the list of attributes
sets the empty node attributes
starts the thread
returns true if this namespace declaration is a tree name
returns the is allowed flag
returns true if this is a group definition
returns the opml declaration in xml
returns the url of the xml
gets the header attribute of the jbuilder class info object
set an attribute
returns true if the header parsing is enabled
gets the formats that can be converted to format
returns all the attributes in the extended head element as a string
gets the nodes by url attribute of the db form tag object
return a map of all nodes by vocab name
gets the nodes by id attribute of the graph object
gets the concept key
returns the concept path
gets the top menu
returns a list of strings that can be converted to
adds all the new nodes to the tree
set top menu attributes
get the title of the opml from a node
returns a string containing all tabs
returns true if the node has the node associated with it
this method fixes the node in the tree
get the html for the tree node
called when a hypertext link is updated
gets the set of indexed sets
changes the icon according to the expanded state
returns the tool tip text
returns a string containing all tabs
returns whether the form has changed since last saving
adds the given string to the feedback text pane
clears the fonts list
gets the set search keys attribute of the query object
sets the directory where the user state files are stored
sets the form font
set the left aligned label width
sets the size of a group
get the size of the main window
returns true if the given path is editable
gets a list of all accession status objects
gets a list of all id mapper errors that have been indexed
returns the cache name for the given file name
adds a new url tag with specified type and text
add a tree to the selection
determines whether the given id is in the repository
removes a url from the tree
adds the given element to the list
remove a url from the menu
sets any styles on the component
returns an array list with all the url elements
adds a text to a group
returns true if the set is in the index
sets the size of the group
returns true if the given format can be disseminated
returns a list of groups that are in the given group
updates the tree according to the selected tree node
set the background color of the input area
get a list of available formats
get a list of all available formats
sets the initial values of text fields
returns the value of an input component
handle the key pressed event from the text field
invoked when a key has been released
sets if the field is being edited
set the data string
gets the formats that have been indexed
returns the value contained in the editor
returns true if no items in the tree are selected
returns the tree
sets an attribute
sets the data string
returns the url of the web page associated with this code data item code
get the tooltip text for this tag
gets the icon attribute of the astdimension node object
gets the list of available formats for the given id
adds a feature to the data attribute of the applet tags object
sets the icon for leaf nodes
returns a text with the given font style and text
sets the icon used to represent leaf nodes
sets the icon used to represent the root node
sets the icon that is displayed when the node is leaf
sets the attributes
determines whether the specified set is configured
returns the attributes map
fix the attributes
returns true if the given source directory is configured in the
get the url of the customer
checks whether a set is enabled
gets the content of a url from the cache
initializes the gui
returns the file object node
create a new jframe with the given title
checks whether a set is disabled
returns the number of columns in the model
returns the name of the column at code column index code
returns the most specific superclass for all the cell values in the
returns the number of rows in the model
returns the value for the cell at code column code and
returns true if the cell at row row column is editable
sets the value at attribute of the my tree table model object
called when a key is pressed
set font size for the text
returns whether or not the specified data flavor is supported for
returns the tree
returns a text for the tree
parses a xml file and returns a jtree object
selects the node that is identified by the given link
opens a link in the editor
returns the tree contents
returns the tree index
when the window is closed it sets the frame to null
sets the otag
get the currently enabled sets
returns a hash map of all the disabled sets
get the drc boost factor
resets the boosting factors to the default values
get the value of stemming boost factor
saves a serialized stemming boost factor
returns true if stemming is enabled for keywords
enables disables stemming
returns a copy of the set infos that are disabled in this repository
delete the set infos
enable the given set of files
disable the given set of files
p returns a copy of the set info object p
remove the given set of files from the repository
removes the i th set in this repository
removes the given set from the index
remove the directory from the index
gets the number of indexing errors that have been submitted
gets the number of records in the index
the total number of deleted documents in the index
the of documents that are not deleted
puts the given set into the index
get the collection record doc reader from the collection key
get the record data service
get the list of administrators e mail addresses
gets the administrators email
adds an admin e mail address to the list of administrators e
replace an admin email address of an user by its index
removes an admin e mail from the list
set the namespace for a metadata prefix
get the namespace for a metadata item
remove a metadata prefix from this item
set the url for a metadata schema
get the url for a metadata schema
remove a metadata schema url from the list of metadata schemas
get the directory for the item indexer
returns the persistent data directory for item indexer
removes the given oai set definition from repository configuration
remove the default oai set specs from the system
create an oai sets for collections
do define define for collections
returns true if there are any oai sets configured in the repository
determine whether the specified oai set is configured in this repository
getter for admin data
sets the additional indices hashtable
override this to perform any substitutions on the given closure
verify method call
for internal processing only
calls the method with the given code candidate code and returns
iterates through all the values
removes an object from the collection if it is present
returns an iterator over the elements in this set
applies the ternary operator to the value
returns a new instance of this class
return true if this boolean can be instantiated
creates and returns a copy of the given object
returns a reflect class instance for the specified class name
two db4o database objects are equal if their signature is equal
this method is used to get the stream id from the stream
check whether the given histogram exists
opens a bin with read only mode
return the bin identified by the given uri
add a bin to the histogram
reads data from the file into the specified buffer
flush the cache
returns the new size of this collection
closes the bin
flush all pages and then sync the database
for internal processing only
checks if the given file exists
writes an array of bytes
check if the given file exists in the histogram
opens a bin with read only mode
return the bin with the given uri
specify a memory bin that will be used by the kernel
reads a block of bytes from the database
reads a block of bytes from the file
reads buffer content into buffer
reads data from the specified address and buffer
reads data from the buffer at the given address
for internal processing only
writes bytes to the file at the given address
writes bytes to the file
writes bytes to the specified address in memory block
writes bytes to the file
for internal use only
returns the block size of this instance
sets the block size for this file
sends an object to the server
the configuration object is expected to be
external include include
returns a constraint that can be used to constrain objects
returns the next available index entry for this writer
returns true if the type is strongly typed
called by the configuration system when this component is
get the object from db4o type if it is available
registers the db4o service implementation in the osgi code
this method is called when the plug in is stopped
add same value from same transaction
test ordering of children
initializes a generic class
asserts the array provided is the same as the current array
returns true if this validator is applicable for the db4o version
template method for determining if the fragment is in read mode
runs all public methods of the given class starting with test
this method will be called after the server is initialized
instruments the class
launches the crawler
launches the edits to the given url
returns a boolean constant
returns the swizzler object for a given target value number
returns the first non null mem expr in the local store
print out the individuals that are contained in this induction
the swizzler display
insert aswrange into the tree
renames the expression info
checks if the expr info is still available
informs the queue that the transform has been changed
performs the actual transformation
cleanup the ast for the next iteration
return the node that is replacing this one
sets the locals
returns the length of this variable
writes this object to the given output stream
returns the class info that was declared
sets the name index
sets the type of this index
return the name index
returns the index of the type in the constant pool
sets the modifiers for this class
returns the modifier flags for this class
get the value of a constant field
sets the constant value at the given code index code to a new
writes this object to the given output stream
returns a string representation of the field
writes the object to the given output stream
reads a catch block
sets the maximum stack size
set the maximum number of local variables
returns the maximum stack size
returns the number of local variables in the local variable table
sets the exception handlers
returns the length of this attribute
sets the line number for this expression
sets the locals
returns the length of the bytecode array
sets the code of the packet
returns a string representation of this operand
returns the maximum number of stack entries this code attribute can hold
sets the code max stack code value for this code attribute
returns the code max locals code value
sets the code max locals code value
return the length of the bytecode of this method
sets the code
sets the line numbers
sets the code local code field of this exception
sets the exception handlers
write this object to the given stream
returns a string representation of this method
returns a copy of this object
writes the data to the given output stream
returns a string representation of the attribute
return the name index of the current expression
returns the loader
returns the name of the class or interface
sets the class index
sets the index of the class name in the constant pool
sets the indices of all implemented interfaces
returns the index of the class of this array type
returns the index of the super class of this class
sets the methods of the class
sets the constants
returns the file that was read from
returns a file that contains the output of this process
commits the data to the file
h cafebabe hayay osx spec
sets the classpath to be used for this compilation
appends the class path
prepend a classpath to the current classpath
gets the classpath
writes the class info to the given stream
loads a class from the jar file
sets the output directory
writes the attributes to the specified output stream
returns the directory that contains the output of the process
reads the header from the given stream
reads the constant pool
returns an output stream for writing the given file
called by the gui when the task is done
reads the access flags of this member from the data input stream
sets the line number list
returns the length of this line
writes this attributre to the specified data output stream
reads the class information
done processing by the scanner
reads the constant fields and promotes them to the constant pool
reads the constant pool entries
reads the generic attributes from the specified stream
closes the stream
write this constant pool object into the stream including the type byte
get the index of the constant value that this instruction
sets the constant value index
returns a string representation of the constant
writes this attributre to the given data output stream
length of this exception
string representation of class exceptions
deletes the method with the given name and type index
print the inference
get the height of this line
subtracts the height of the stack from the argument instruction
returns the set of try catches
push a new instruction onto the stack
pops the current element from the stack
pops n elements from the stack
returns the height of the current stack
traverses the dominance tree and visits the node that
is the expression a leaf
checks if insts and category match
check the instruction set to see if it contains exactly one category instruction set
checks visibility and purity of the given expression
returns the set of live methods defined by this mapping
returns the roots of the program
returns the live classes attribute of the class declaration object
checks if an array length expr is valid to wsml full
returns a clone of this code stack height counter code
sets the config name
note the morphicity of a morpheme
signal that there were no preexist
prints the method signature
mark this block as inlined
specifies the number of live methods
specifies that this class should be live in the class tree
set the maximum size for inline instances
sets the maximum depth of the call tree
sets the flag to inline exceptions
sets the dirty flag
marks the object as deleted
returns the class info for this class
returns true if this member is package
create a name and type of this anonymous class
return the referenced member
print the field name and type
returns the full name of the class including the package name
returns the dimensionality of this dimensions
convert to a string representation
adds a class to the list of classes for this class loader
returns the immediate subclasses of a given type
checks if a static field is supported
returns the superclass of a type
sets the default target for this template
returns the default target label
returns the lowest value in the array
returns the highest value in the array
returns a collection of all interfaces that are of the specified type
helper method sorting the population according to the sorting algorithm
partition a target and a target array
assign each value to its targets
returns a string representation of the object
returns a list of all the immediate implementsors of the given type
compares two local variables for equality
returns a string representation of this object
returns true if the rule is a closure false otherwise
returns the node of the extends type
returns the block of this statement
returns the node implements the given node type
sets the leaves of this tree
returns the index of the given label
returns the leaves of this predicate
add a label to the label list
adds a long branch to the code block
print the classes node
prints the implements clause of this class to the given writer
add a branch to the code
get the operands of the block
add an opcode to instruction list
prints the specified number of spaces to the specified writer
adds a byte to the end of the code array
set operand at
add a short integer to the array
add an integer to the byte stream
get the operand of a block
sets the dirty flag
returns the name of the class
returns the editor context
returns the class info for this class
sets the has real use flag for a given block
the type of the class
return the superclass of this type
sets the interfaces of the class
returns the modifiers of the class info
return the constant pool for the class file
commits all changes to this code data source code
commits the class info to the database
returns the start label
returns the end label of this member
returns the handler of this node
sets the label handler for this instance
returns the tag of a constant
returns the index of a given constant in the constant pool
symbolically executes the corresponding java virtual machine instruction
return the index of the constant pool for the given class
answers the index in the constant pool that contains the given integer
return the float constant pool index at the given index
answers the index in this string constant pool that contains the
answers the index of the given double constant
get the index into the constant pool for the given class
get the index for the type
answers the index of the given string in this string constant pool
return the index of the constant pool entry containing the
get the name and type index for this type constant
get or assign the index for a utf8 string constant
can the given block insert with this statement
returns a list of all constants
returns the variable of this store
returns the next integer value
returns a string representation of this object
returns the original opcode of this instruction
sets the use slow
check if the data source will be available
indicates if the solver should use slow
returns true if the opcode is an increment
sets the flag indicating if this field can be considered
returns true if the opcode is an athrow
returns true if this opcode is an invoke instruction
returns true if the opcode is a ret opcode
returns true if this opcode represents a return opcode
checks if this instruction is a switch instruction
returns true if this is a goto or a goto
check if the sensor can be available
checks if this instruction is a jsr instruction
returns true if this instruction is a goto instruction
determine whether or not this instruction is conditional jump instruction
returns the opcode of this instruction
sets the flag if a compile is after a compile
sets the opcode of this instruction
sets the operand
returns the operand
returns true if the request is a later request
returns the type code of this type
returns the short name of this type or code null code if
if this is an integral return type object
return the descriptor string for this constant
returns true if this is a method return type
checks if this is the null object
checks if this is a void type
return true if this is a primitive type
sets the flag if a compile is down safe
returns true if this is an integral type
is this a array type
returns true if this is a class or object type
returns true if this is a wide entry
returns true if the test is down safe
is this a address descriptor
returns whether this is a reference or not
returns the class name of this type
returns the qualifier for this type
returns the number of dimensions of this array type
returns the type of this array
get the type of an array of the given type
returns the element type of an array with the specified dimensions
returns the element type of this array type
returns the return type of this method
two types are equal if their desc is the same
returns a string representation of this object
returns a string representation of this class
two names are equal if they have the same name and type
returns a hash code value for the object
returns the declaring class
b for internal use olnly b
return the type of this variable
returns the name and type of this
returns a string representation of this field
returns true if the specified object is a member ref with the same
returns the hash code for this type
sets the comment
sets the starts block flag
returns true if this block starts a block
tests if the specified object is a label with the same index
returns a string representation of this object
sets the dirty flag
returns the local variable parameter at the given index
return the method information for this jml method
returns the class that declares this class in the
returns true if the class is an interface
this is used to compare type comparator
clears the code from the symbol table
returns true if this is a constructor
returns the length of the bytecode array
add a new defintion to the list
returns the live ordered list of code elements
returns the first block with a code that begins with the
get the definition of the specified expression
returns the next block with the given label or null if none
removes the code at the given index from the list
inserts the string representation of the object into the code at
replaces the code at the given position with the given object
returns the code at the specified index
add a real expression to this block
adds a new line number entry
returns the number of try catches
returns a collection of try catches
add a new phi to the list of phi for this node
adds a try catch
returns the subroutine this instruction is a subroutine
get the operands
returns the operand of this expression
remove the phi function for a given block
creates a new local variable of the given type
creates a new local variable
return the phi function phi at the given block
returns the local variable at the given index
returns the cfg object
returns the set of nodes that are equivalent to the given node
add an instruction with an associated class
returns a list of reals at a block
return all equivalence classes
add an instruction with an operand class to the list
adds an instruction to the store
create a new label and return the label object
prints all the fields to a writer
returns the prototype of this variable
return the phi that is at the given block
remove phi at block
add a phi block to the block
add a catch block to the statement list
adds a phi return to the given block
returns a collection of all reals
return all reals of a block
prints name type and dirty value
returns a collection of all defined blocks
returns the index of the first entry of the local variable table
sets the value for the start pc field
returns the index of the last instruction executed
sets the value for the end pc field
returns the index of the exception handler
sets the handler pc
returns a string representation of this exception
returns a hash code value for the object
tests this constant for equality with another object
returns the index of the type in the constant pool
returns a string representation of this object
returns the line number
returns a string representation of this object
description of the method
returns the class loader of this compilation unit
adds the classes in the specified collection to the hierarchy
commit the given
returns the collection of protected blocks in this package
visits the subroutine or constructor declarations
visits the given ret statement
visits the given switch stmt
visits the given if stmt
visits a goto stmt
verifies that the given block has the given target
checks visibility and purity of the given expression
returns the stack optimizer for this genetic algorithm
returns the tree that is wrapped by this tree model
sets the tree
returns the graph that is being shared by this machine
returns the label of this node
visit the children of the tree
sort the expressions by their key
this returns a string representation of the block
does this block dominates the given block
returns true if this block postdominates the given block
returns the collection of succs
returns a collection of predicates
returns the maximum number of times a
returns the set of successors of the given node
returns a list of graph nodes that contain the given vertex
returns the loop tree
sort the list of kills by the key
returns a list of edge to be added to the pre order
returns a list of all the edges and edges of this node in
recursive method to visit all the post order nodes
get the node with the given key
this will print the label and the statement to the console
checks if a node is contained in this graph
does the graph have an edge to the node v
returns a collection view of the nodes contained in this map
save the labels of the method
removes a subroutine from this block
retains only the elements in this list that are contained in the
appends all of the elements in the specified collection to the end of
adds an edge to the graph
removes an edge between two nodes
returns the code node code containing the given array of
cleanup the edge we are about to join the source
find the node number with a given value
finds the node of the given node
returns true if the two elements are equiv
union this tree with another tree
adds a new real to the worklist if a new expression is
create a new block of the same type as this block
computes and stores the node hinators
add one kill to the list of blocks in this worklist
remove the variable from the current scope
returns true if the variable is live at the start of a block
is the variable live at the end of the block
returns a collection of all defined ig keys
return an iterator over all intersections of a variable expression
are two intersections of their own non null ranges
return the number of local variable slots used by this symbol table
creates a new local variable of the given type
calculate the weight of a block
copies the old block to the new block
get the definition of this expression
returns the subroutine label that is associated with the given
removes the phis nodes and join them with a given cfg
this method is called when the code content manager code is no longer
inits the local expressions of the given locals
prints the file to the given writer
remove the statement from the statement list
removes the last statement in the statement list
cleanup the database
print out the graph to the specified output stream
remove an object from the pool
removes all this collections elements that are also contained in the
move the tree walker forward
retains only the elements in this collection that are contained in the
replaces the element at the specified position in this list with the
remove an object from the list
removes from this list all of the elements whose index is between
cleanup the expression list
returns the version of the class file
returns true if this expression is a def
determinates if an operand is defined
adds an operand to the operand list
returns the operands of this list
returns the number of operands
sets the operand at the given index to the given expression
returns the operand at the given index
visits the children of the node
returns the method that this method references
returns the target of this case statement
returns the expression being cast
builds the special trees
sets the type of this expression
returns the statement that contains this node
cleans up the state
sets the definition of this expression
returns the definition of this switch case
copy the fields of the argument into the current expression
returns the comparator used to order the elements in this list
returns the last statement in the statement list
two expressions are equal if their left and right are equal
returns the type of this object
return the operand stack of this expression
replaces the expression at the specified position in the stack with
replace the expression at the given depth with the new expression
look at the top of the stack without removing it
pop a word from the stack
pushes an expression onto the top of this stack
returns the expression on the stack at the specified index
add one statement after the existing statement
returns a string representation of the stack
tests if the parameter is equal to this expression
checks if the push value is a return address
add statements before the given stmt
prepend a statement to the statement list
returns a list of the parameter types declared in a method editor
negate the comparison
returns a list of all traces of this method
add a statement to the save stack
add a statement to the end of the code block
returns the source of the statement
throws a class format exception with a message indicating the type
add an instruction to this basic block
get the initializer block
add an instruction to this list
get the operand for the given block
returns the number of operands that this instruction
returns a list of the predicates in this block
returns a collection of all operands
returns the sink of this packet
appends a new label to the end of the list
iterates through the given blocks of code block code
adds an instruction to the operand stack
iterates through the given blocks of pdom frontier
idf the given blocks
returns a new stack expression for the given type
create a new stack local expression
return the value number of this object
set the value number of this node
returns the root block of this node
returns a new local expression for an expression at the given index
sets the parent of this node
copy the fields of the current node into the given node
replaces the current node with the given node
set the end value of the expression
create a new local variable reference
returns a string representation of this tree block
this method visits an nop instruction
stops the thread
add a store expression to the target expression
removes the node with the given key from the graph
returns the map of handlers
returns the collection of handlers of this handler group
symbolically executes the corresponding java virtual machine instruction
returns the live ordered list of catch blocks
returns a collection of the children of the block
returns the parent of the given block
returns the type of the block
get the loop depth for the given block
get the loop level of the block
header a loop
returns a list of
returns a list of
returns the children of a block
returns the parent of the given block
returns the frontier of the given block
returns the immediate children of the given block
returns the name of the cfg for debugging
symbolically executes the corresponding java virtual machine instruction
adds a goto statement for the given instruction
symbolically executes the corresponding java virtual machine instruction
visits the given ret statement
generates code for a return statement
builds a field expression and adds it to the top stack
pushes a new expression onto the stack
pushes a new array expr onto the operand stack
pushes an array length expr onto the operand stack
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
builds a sequence of bytecodes to push it onto the stack
builds a string representing the binary expression and adds it to a
builds a string representing the binary expression and adds it to a
symbolically executes the corresponding java virtual machine instruction
symbolically executes the corresponding java virtual machine instruction
visits all nodes that are only children of the root node
adds the given run data to the preview
returns a new renderer for the specified index
this method initializes j preview panel
updates the preview panel with the content of the given file
returns the index of the named field in the series
shows a preview for the chart
starts the stop watch
stops the timer
stop the host if running
print a line of output to stdout
adds a value to a run data field
subtracts another duration from this duration
stops the updating of the model
returns the number of milliseconds this track will play
this method initializes this
returns the seconds of this duration in seconds
this method initializes j chart panel
plays a sound
returns true if the simulation has elapsed
initialize the run data and start the thread
returns the run data for the current thread
this method initializes j content pane
this method initializes j main frame
returns the elapsed limit string
returns a connection to the given port
this method closes the port
saves the settings to the default file
this method initializes j actions panel
return the current person id
commands the bot to check the cockpit
set the current person id
command the receiver to get the cockpit address
this method initializes j record button
starts the prog
change the programm
this method initializes j programm button
command the get person id
this method initializes j stop button
sets the pulse per minute
start a built in programme
stop recorder and close all connections
returns the localized name of this class
add a new date to the history
this method initializes j predefined radio button
returns the value associated with the given run data object
commands the bot to play the specified frequency
saves the settings to the default file
this method initializes j file radio button
this method initializes j predefined number
this method initializes j file name
update the test panel with the current test directory
this method initializes j set file name button
this method initializes j user combo box
shows or hides the dashboard
returns the efficiency of the character
this method initializes dashboard
returns the difference between the person and the total height of the
update the user combo box with person data
set the user id in the menu
sets the user id in the user combo box
this method initializes j programs combo box
this method initializes j user name
this method initializes j max puls
this method initializes j save user button
this method initializes j max watt
this method initializes j max kjoule
this method initializes j max distance
this method initializes j age
this method initializes j weight
this method initializes j extra weight
this method initializes j body fat
this method initializes j body size
this method initializes j toggle dashboard button
this method initializes j preview
this method initializes j port combo box
callback for port combo box
method to handle closing of the window
return the nefield at the given position
this method initializes this
this method initializes j content pane
this method initializes progress
this method initializes this
this method initializes j content pane
this method initializes output scroll pane
this method initializes output box
prints each one
waits for a next message
waits for a next message
sends and waits for response
flushes the cache
opens a game
start a new game
connects to the server
waits for the game to complete
arrange turn actions
this method tells the class that a transaction has been negame
creates corner icon
returns the file tree model
gets the selected file in the tree
inits the views components
initializes the listeners for the tree
update the ui
generate a string representation of this operation
initializes the tree
returns true if this editor can be deleted
tells whether the web application server is working
returns the show files
returns the show hidden files
sets the permission to delete delete existing rows
defines if the tree should show files
defines if hidden files should be shown in the file chooser
sets the operating system to navigate osxapps
tree of look and feel
if 3 d mouse is pressed
deletes the specified directory
creates a new sheet
create an instance of
returns the default schema override
set the default schema override
returns the current import mode
sets the import mode
moves the cursor down one row from its current position
closes the result set and statement
retrieves the value of the designated column in the current row
returns the date at the given column index in the result set
returns the data from the specified column as a string
returns true if the designated column is a blob
returns true if the designated column is a clob
get a wrapper for a prepared statement
called when the parser finds characters that are not recognized
starts the export
starts a row set
starts a new row
compares this object with another table object ignoring case
writes a db column with the data in the given column name
ends a row
ends a table
get the result set for this query
ends the export
returns the query for a sql table
starts the import of the message writer
is nullreturn
creates a table
returns the schema qualified table name as a string
ends the insert of data
ends the import
prints the processing time summary to the console
returns the progress monitor
get column name from resultset column name
returns the full name of this schema including the schema if present
checks if database product is using database
starts the import of the file
closes the current import
returns the string val
create a col desc and add it to the given attributes
this method is called after an insert is executed
delete all records from the target database
creates an output stream to the given file
init the database
returns the packet store
prepare the sql statement
count the number of rows in the database
gets the server interface
drops the table
initialize the traffobase system
processes the request and returns the page map
processes the http request to create a page map
processes the request and returns the page to be sent to the client
processes the request and returns the page to be sent to the client
adds a traffo packet to the store
the post it method returns true if it is successfully printed
reverse all the correct model elements so that
reverse accrual none
returns the user id of the document
get region id for a region
get mun
get pais description
returns the current date and time
show a dialog for editing configuration
delays the event dispatch thread
deletes the message with the given information
set the request handler
set the request handler for this channel
tells whether the column dimensions are in the new result
checks if there is any tag on stset
this method sets the maximal value for the time parameter
returns the anchor points
returns a string containing the url encoded version of the
prints the topic page for the given topic tree
prints out a html representation of a peer page
print all the tags from the iterator to a string
helper method for
internal helper method to check if the given string is a composed type
returns all topics that do not get anymore si values
returns the nc for a topic
tests if a topic is a sub super type
returns true if the type is a subtype of a topic
returns true if the type is a supertype of the given topic
prints out a list of all concepts
method create tcpstream stub
stop the server
gets the local address to which the socket is bound
hold the connection
the threads run method
send a byte message to the remote host
close the tcp connection
starts tcp server
starts udp server
stops tcp server
stops udp server
start the http server
starts an http connection
stops http server
starts the mail server
stops the mail
save the current model to disk
deletes all information of a given cp
get the port number from a string
main loop that listens for incoming connection requests
sends a message to the server
close the connection to the server
sends a message to a remote agent
stop the robot
method update context point
merges all the context spaces and new dimension
add the received interest to every mailbox
returns the protocol type
returns the address string
returns the number of bytes that can be read without blocking
returns the length of the header
method print ndigit id
run the thread
set the kephandler object
returns true if the code open code method should be called after
returns the address of the recipient
returns true if the message has a reply address
checks if the connection to the database is still valid
sets the stub for this message
sets the stream connection
get the knowledge
gets the value of cmd
sets the reply address
called when the process is finished
returns the stub for this message
get the stream connection
inserts a knowledge into the knowledge base
expose an interest in the given peer
returns true if the response has been sent
set the otp parameter for this fragmentation parameter
expose interest in the provided array
refresh the interest for this anchorset
inserts a new knowledge into the knowledge base
set the synchronisation in the model
sets the stsization mode
sets the relay address
unset the relays
method to stop a protocol
returns an enumeration of the kps in this tank
removes a specific kps from the environment
delete all knowledge port kps
returns the local address to use for the specified type as a
starts a tcp server
checks if a given set is a semantic tag
sets the address to be used for reply to this udp packet
tells the local interest variables that they need to be initialized
gets the knowledge format
return the time out milliseconds to connection
set the connection time out
determines if this protocol set has already been started
determines if the protocol field value has been started
this method is not supported
restarts the kps of this engine
backdoor set the public key
sets the knowledge base for this configuration
set the stub for kep stub
synchronize the interest
returns true if the current interest object is ready to be processed
returns true if this tag is an ikp io
stops the server
active the controlled environment
active active kp
returns whether this thread has been started or not
adds a listener to the set of listeners for this environment
returns the address that is connected to the peer
creates an in memo shark kb
removes a listener to the set of listeners
method for generating a string
notify listeners that a query has been exposeed
notify listeners that a knowledge is inserted
notify listeners that knowledge assimilated kp
sets the property to be hidden or not
does this vector already contains a tag
adds a new information to the set of sent information
notify listeners in siadded format
sends a knowledge to a recipient
prints the column definition and its attributes
this method activates a kp
gets the peer semantic tag by id
this method activates all kps in the environment
performs a single initialization of this enumeration
add a peer semantic tag
finds a way from the semantic tag to a specific tag
this method deactivates a kp
removes peer and init si
adds a peer semantic tag to this universe
removes peer and init si
returns the peer semantic tag with the given string si
this method deactivates all kps in the environment
return the set of fragment that this fragment is attached to
returns a set of fragmentation objects with no hidden tags
writes the content to the given output stream
set the content of the stream
returns the write access
get the size of the content
gets the content type of this view
sets the message content
sets the content type
return the semantic net fragment associated with an anchor
merge two semantic net
adds a peer hierarchical semantic to this tag
recursive method used to remove peer tags
returns peer hierarchical semantic tag with given name
returns the fragment peer associated with the specified anchor
returns a new fragment that contains only the tags that dont
checks if tag is a listed tag
internal stset factory
returns an enumeration of anchor s for the given range
create a semantic tag if it is not already there
create the any peer
create the semantic tag if it does not exist
create an any location element if not in the context space
preserve the properties from the original tag to the property holder
get all the coordinates of the local interest context
return the fragment associated to this node this
put this monitor to sleep
returns the semantic tag object of the given string
get the keys of all the assoc types
return all the associated tags for a particular type of net
removes a predicate from the ontology
checks if the subject of the semantic tag in memo associated with
returns an enumeration of sub tags
gets the time semantic tag with the given id
returns a new time stset representing the anchor
checks if two times are overlapping
returns a set of fragment representing hidden tags without hiding
returns the anchor set
sets the topics for this swf
sets the peers for this dimension
mutator for the tt peer stset tt
sets the originator of this dimension
sets the locations of the context space and all the location objects
this method allows to set the time stset parameter
returns the context point at the specified index
set this dimension
to set the effective context map objects free for gc
to get a context space objects free for gc
sets the addresses
sets the certificate value for this signer
this method is called when a semantic tag is added to an associated
method serialize returns a string with the specified type
sets the dimension of the set of dimensions
sets a anchor value for a given dimension
enumerate anchors of a dimension
performs a depth check of anchor sis operations
returns the semantic tag object of the given type
finds the cp by their coordinates
this will calculate the dimension for a given set of ontologies
changes a predicate between two tags
return the enumeration of forbidden associations this client can find
returns an enumeration of anchor names of this shark set
finds a way from this tag to a specific tag
internal merges the set with another one
returns an enumeration of all the properties of an anchor
return all the si elements
preserves properties of a copy
adds a new semantic tag to the list of tags
this method merges two
returns a set of
merges two time stset
adds a tag to the list of associated tags
call back for each listener
returns the semantic peer associated with the given string si or null if
returns true if this user is allowed to see the other users
getter method for sub allowed
gets the allowed assoc types
gets the forbidden assoc types
calls a listener with the given message
clears the connection pool
creates an opening xml tag with the given name
adds a closing tag to the tag
method encode rostset
returns all the coordinates along the given coordinate system
serialize a internal taxonomy
add all the properties from the given property holder to a hashtable
writes a new context coordinates
returns true if the response has been sent
expose all available live interest in the given channel
delete a directory and all its contents
process the http post request
check if a database connection is valid
returns the handler class
this method will verify that the class is properly instantiated
add an event handler to this event system
get the class name of the handler for this exception
get the event handler for the given event name
get the method instance for the given method name
get the default method instance for this request handler instance
returns the number of children that the specified element has
returns the value of a child of the first node
returns the value of an attribute of an element
check the validity of the user object
gets the machine having the specified scheadule
build the manifest for the given plugin
automatically redraw the panel if the image is not already redrawn
update user info login
gets the amount group new id
sets the content
pause the recording of coordinates
get the helper for this code model
resume the recording of coordinates
set the helper for this parser
checks if the current position is space or linefeed
insert the selected text into the text area
get the name of the tested application
sets the tested application
sets the test app params
servlet context application context
fulfill the config stream
called while a drag operation is ongoing when the mouse pointer has
called if the user has modified the current drop gesture
called when a drag operation is ongoing while the mouse pointer is still
called while a drag operation is ongoing when the mouse pointer enters
deletes the video record from the database
returns number of ratings for specified video
updates the section in database
gets the date modified
gets the value of story url
gets the value of video file name
getter for property thumb file name
fired when the user types in the name field
called when the login failed
resolve this reference
resolve data references in this context to the specified resolver
resolve object by id and resolver
resolve using the given refid
get an object with the given refid
resolve the data set
registers the data set parser for the given input stream
register a data file for this chunk
register the data in a file
register the service
finishes the current job
set the model maker for creating modelsheets
sets the name of the model
save the properties to the given rdf resource file
set cache size
sets the repository dao
destroy cache administrator
empty the repository
load specific file and set up database connection
to load database from a file
load environment settings
sets the user
set the database
returns the password
returns a string representation of this object
loads hashes for all the tables
load hash of bin
returns all refseqs representing the ac2 form
constructor which takes a message and a database name
set the database name
returns the error message string of this exception
sets the is stored flag
returns whether the property is stored or not
constructor that makes the database connection
returns the database connection for this data store
stores the list of objects
remove a collection
constructor for xml walker exception
creates an instance of the exception without any parameters
return a storage manager instance for the given name
returns the storage manager package
sets the storage manager package
lookup the bean in consultator
lookup the admin bean in the context
prints the current list of search results to the given print writer
search a person for the current person
prints the result of the test
prints all personnes and their prenom information to the file
print the head title
generates foot code for the html document
print the head title of the administrator interface
this method will add a card to the admin
add new carte de visite
lookup admin personne from jndi context
at startup create and show the main frame of the application
at startup create and show the main frame of the application
convert the specified locale sensitive input object into an output object of the
a helper method that resolves the decimal format for the given locale and
not operator not
this method compares the specified object with this
this method initializes this
this method initializes j tabbed pane
this method initializes select type combo box
this method initializes add entry button
this method initializes name field
this method initializes j panel
this method initializes cancel button
this method initializes ok button
this method initializes display table
this method initializes j split pane
this method initializes this
this method initializes j content pane
this method initializes j text field
this method initializes j panel
this method initializes j menu item
this method initializes ok button
perform a report attacking
returns the page info that belongs to this page
pauses the thread
resumes the thread
returns the return page text
returns the total word weight
returns the current group state
make a url from a url string
filters the href string to include only those entries that start with
check if all the analyzers are finished
perform the attacker report callback
gets the group state
accept the visitor
accept the visitor
add a button to the display
get the double value of the number field
clears the text in the text field
deposits an amount in the bank
withdraws an amount from the account
adds a customer to the customers list
finds a customer in the bank
sets the customer number
selects the customer
this method is used to withdraw the account from the account
deposits the current account
sets the state of the pin
returns true if the given number matches the pin
get the checking account
get the savings account
returns the image to be used for the communications
starts the execution of the thread
the action performed method
connect to the server and initialize the connection
log a message to the standard output
updates the report
returns the temperature of the report
returns the name in lowercase format
checks if temperature given as parameter is within range
gets the date of last clean
get the periodicity of the system
setter for property cleaning supplies
sets the last clean
set the periodicity of the system
perform an actual merge of a code location code
use the hibernate session
persist a location
saves a location
load the location with the given id
make the given instance managed and persistent
use hibernate session to update an object
load a chore from the database
mark a list as payed
list cleaning supplies from database
list all chores
list all locations on house
add cleaning supplies to list of search result
returns whether the client is connected to the server
returns the temperature in centigrade
returns the high temperature of the current forecast
returns the temperature low
get the humidity relative to the body of the current
get the relative humidity value for this temperature
returns the value contained in the editor
returns true if the selected item is already in the list
mark the entire text
sets the text of this document
sets the selected item
searches for an item that matches the given pattern
returns true if the given strings start with the given case insensitively
returns the size of the vector or zero
create a new ixout instance
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j button
this method initializes j button1
inits the popup menu
writes an short field value
this method initializes this
this method initializes tf such feld
this method initializes b suchen
closes the stream
init all gui components
this method initializes cp inhalt
this method initializes this
this method initializes pb ladebalken
this method initializes p anzahlen
this method initializes j button
this method initializes b schlieszen
this method initializes tp groszanzeige
this method uses xerces specific classes prints the xml document to file
this method initializes p groszanzeige
this method initializes sp zusatzdetails
this method initializes t zusatzdetails
this method initializes sp groszanzeige
this method initializes m datei
this method initializes mi beenden
this method initializes sp anzeige
this method initializes mi import
this method initializes mui settings
this method initializes m hilfe
this method initializes mi info
this method initializes p vorschau
this method initializes such panel
this method initializes p thumbnail steuerung
this method initializes mi loeschen
this method initializes p bildinformationen
this method initializes p bilddetails panel
this method initializes sp bilddetails
this method initializes t bilddetails
this method initializes sp thumbnails
this method initializes mi auswahl aufheben
this method initializes mi import dir
this method initializes mi aufraeumen
this method initializes mi auswahl alle
this method initializes cb max anzahl
this method initializes j content pane
this method initializes cb seite auswahl
stop the applet
handles user interactions
start the applet
stop the applet
returns the content of the request as a string
set the status line
returns the request line
set the request line
get the next chunk
sets the mehtod of this item
get a string representation of this object
gets the first header of the given type
sets a header
sets the request uri
removes all headers of the given type from the message
removes a header with the specified value
returns all the headers of the given type
copy all headers to the given header
get the chunk data as an input stream
set the status code for this request
set the content of the response
set the httpinput stream that this object will use
is this request a dot9 request
this method returns the hash code of the request uri
method to check if this is equal to another object
traverses the header of the given functor
starts the thread that will wait for a call to the
this method is used to receive a selection key
accept one socket
returns a list of objects matching the given code a key code
removes an entry for the specified key
stores a key value pair in the database
inserts a new entry into the table
add a new entry to the queue
allocates system number
tests if the specified number is allocated
get the next identifier
reads the next note from the file
retrieves the first entry in the map
returns the backing file
adds a new entry to the j2 system
allocates system number storage
get the next identifier
reads the entry map into the program
start the server
shuts down the web server
test the rpc server
create and return a newly instansiated code message resources code
sets the name attribute of the main frame object
returns the page that the user will see when the user clicks
initialize the servlet
get the version number from the server
get a specific job from the server
get the job status from a specific job id
submit the job to the server
validate input data
create and add psiscore to the list
create and add psiscore client
add a psiscore client to the list of psiscore clients
get the version number of a client
get the input format
get a job from the server
validate the input data
returns a unique id for this token
runs the calculation
setter for scoring parameters
fires a scores added event to all scoring listeners
fires a notification to all scoring listeners that there are no scores
triggers an error occured
runs the experiment
get the entry set object
gets the version of the product
get a specific job from the psi database
cleans up the pool
initializes the thread pool
returns true if the interaction is the same as the one given in
compares two confidences
compare two psi mi tab model
help about action performed
help menu faq
overridden so we can exit when window is closed
initializes the dictionary
help action performed
returns the jmenu edit
adds a word to dictionary
exits the application
exit the program
set login to database
execute an action on a project
move currently selected row up
sets the tabbed pane
launches the viewer
launches the viewer with the given oid
select a person by the query
sets the up launch
resubmit seqs action
returns the object id
set the oid
get the oid of the person who sent the line
set whether the resulting consensus should be written to db or not
this method should be called to determine if the consensus is written
sets the flag that controls whether or not the process
returns true if the temporary working directories should be cleaned
set the assembly successful flag
get the value of assembly successful
setter for property last modification date
clear the database of all rxn rows
edits the selected project
sets the contents of the sequencej text area
sets the project for editing
sets the options
refreshes the text boxes with the latest project text
get the database of the pool
gets the seq db interface
sets the seq db interface
sets the database user name
delete projects tab
get the value of db user name
clears the project
sets the password needed for connecting to the relational database
get database user pwd
clears the project information
sets the database driver name
get database driver name
set database url
refreshes the plate sequence savej button
get the database url
edits the selected plate but not the selected plate
sets the technical comment
returns the technical comment
creates a new project
adds a string to the technical comment list
sets the user comment
gets the value of the user comment property
adds a raw sequence to the container
saves the current project
sets the raw sequence oids
removes a raw sequence oid from the oid list
adds an additional sequence to the oid tree
refreshes the project table
sets the additional sequence oids
removes a segment from the additional sequence list
launches a dialog to edit a plate
adds a primer oid to the list of primer ids
sets the known primer oids
removes a primer oid
this method is used to add a vector oid to the oid list
init the trace
this method replaces the vector oids with the one given as argument
this method removes a vector oid from the oid list
calculates the trace features for the current data set
adds an oid of contig to the assembly
sets the oids of contigs
calculates the slope of the trace given a base and position
removes an oid of the contig from the list of contigs
check if the base is a valid base
returns the median value in the array
sets the trace position to the specified value
sets the trace position
the action listener method
returns the comment of the field
returns the name of the plate
gets the name of the primer
returns the name of the project
returns the name of the template
returns the current plate position
return the plate pos manual
p returns the boolean value of the positioned field p
refreshes the symbol sequence renderer for all of the sequences
sets the comment of the field
sets the name of the plate
p sets the primer name of this song
sets the name of the project
sets the name of the template
p set the value of the code plate pos code property
sets the value of the plate pos manual field
returns the database
record that this block has been positioned
gets the oid
gets the oid plate attribute of the player object
gets the init position
get the plate name
returns a vector of all the names submitors
updates the horizontal zoom slider
get rank of a reaction in the list
get the directory chooser
sets the distinct flag
prints the project information
prints the attributes of an object
set the project data in this object
sets the database to be used
sets the hash of the fields
set where field
set where value
sets the date the request was made
sets the from address
returns the encapsulated jtable
clear the project details
update a status of an attribute in the status table
get the project from database
returns true if the name is in the database
clear rxn buffers
get the number of columns in the plate
get the number of rows plate
get the number of base rows plate
getter for property base columns plate
initializes the dialog
loads a list of words into the given format
create a decoder for this media type
sets the cause of this exception
returns the first keystore entry for a given key
refreshes the given object
get the current session
this method gets the value for the given code key code
releases the session of the current thread
helper method to check the set of values
tests the bean for equality with an arbitrary object
returns a hashcode for this set of key value tuple objects
the acr number
set the acr number
returns the action node
returns the agent name
the string to be used in the test
compares this object with the specified object for order
returns the instrument node
sets the string
this is the acr agent name of the patient
gets the node properties
set the action for this node
gets a node with the given name
this will set the agent to the given one
adds a node to the properties
two nodes are equal if their properties are equal
returns the hash code value for this object
returns the argument node for this acr
set the argument of an acr node
returns the name of the component
sets the name of the component
returns the name of this connective
adds a node to the argument list
sets the name of this connective
returns the content of the document
sets x to y
sets x and y to the specified value
get the encoding value
sets y m within the scope
get the reference
set reference to this resource
sets the value of a point in the grid
tries to narrow an agent name to a monster name
sets the values of this rectangle
narrows an envelope to a sender and receiver
get the language value
sets the values of this rectangle
narrows the given payload by setting all the members of this payload
this method is used to narrow the transport messages into a transport message
set the time span to the given value
get the ontology value
get the performative value
receives a message for an agent
removes an agent from the blocked agents list
remove an agent from this group
get the protocol value
get the sender of this message
this method will schedule a job to be executed at the
sets the content of the acr node
removes a job from the scheduler
shutdown the scheduler
creates a job for an agent
sets the content
creates the agent
unregisters the cron job for the agent
to remove custom cron job
set the encoding role for this acl
set the language of a node
set the ontology value
sets performative action type
set the protocol property
add a receiver acr to the acr group
set the receivers based on agent names
sets the number
increment the item number
sets the key for this object
get the hibernate object value
sets the sender of this message
sets the value of the property
set the jas bean
run the command loop
shuts down the manager
called when a message is received from the socket
sets the advanced writes
write a message to the socket
open a file for writing
removes the specified value from the collection
returns an iterator over the elements in this collection
returns the next task in the active task queue
returns the pending worker if any
return the length of the stream
method check set all
adds a new value to the list
deploys the component
undeploys the component
checks if the given attributes are available in the archive
test method for
test method for
test that the descriptor filter can be found
stop the smoothing process
test with zero length
adds an element to the list
this method is called when the repository is first started
adds a x509 certificate to the keystore
removes the certificate with the specified alias from the keystore
returns the x509 certificate assigned to the specified alias
stores the key store
returns the private key corresponding to the given alias
request a number from the group
returns a string representation of this message
the callback method for the message handler
sets the security property
returns the complete url to this node
finishes this connection holder
returns code true code if the current name is a peer
returns the number of threads which are waiting to be executed by the
kills all client threads
interrupts the thread
finishes the client thread
returns the number of client threads
kills all client threads
interrupts the thread
adds the given result to the set of results
shutdown the connection manager
release all waiters
sets the value of the waiters released property
removes the specified value from the collection
start the service and put the message into the state
gets the message queue
subscribes to a group
returns true if the peer is subscribed to the given group path
sends a message to a url on a remote server
connects to the server
determine if the server is connected
close the server
test method for
initialize the page
adds a remote repository to the local cache
removes a remote repository from the local cache
converts an id to its name
test method for
sets the sender
creates and returns a key to be used in the cache
sets the expiration time
returns the communication to the current position
set the test interval for expiration
sets the expiration time
returns the mbean server
sets the mbean server
builds the dependencies between components of the given dom node
set the mbean server used by this facade
returns the object name of the resource
parses the description element
sets the pre inject operation
sets the post inject operation
parses the attribute dependencies from an xml node
returns the post eject operation
returns the post inject operation
returns the pre inject operation
returns the pre eject operation
pre inject the context
execute post execution if the target is a proxy
returns the current ejector creating it if necessary
returns the dependency
sets the dependency
sets the injector
returns the guice injector
sets the attribute
sets the original
sets the name of the method to inject
sets the eject operation
handles the registration of components from the container
returns the eject operation
handles the element by parsing the post injection post injection
if the operation is an ejection then set it to ejection
sets the attribute
returns the current ejector
gets the attribute
sets the value of the object property
pops all attributes and attributes
gets the root node for this configuration
handles an unregistered dependent object name
returns the adapted object
finds the method for the attribute with the given name
deploy a component file
undeploy the component
this method returns the filter to be used for the deployment
sets injectors to be used by the application
unregister an mbean
returns the url of the descriptor file
sets the group
handles the deletion of the dependency
returns the name of the archive
returns the short name of this code file code object
shut down the service
returns the current state of this node
sets the state
deploys the component archive
returns code true code if the vm is running
returns code true code if the receiver is in a pending state
returns code true code if the current text is erroneous
tells the archive to start or not running
adds a guice injector
notify all deployment handlers that a deployment
returns a work copy of the given resource
delete work copies
creates the work copies
checks if this thread is running
sets the poll interval
returns the poll interval
returns the resource repository
returns the wrapped scanner
sets the resource repository
returns the name of this document
sets the status
collects all file links recursively
returns the status of this requestor
returns the file name
sets the file name
returns the uri of the file containing the document
sets the uri of the file containing the document
returns code true code if this is a directory
sets the is directory
tests if a specified file should be included in a file list
undeploys the component archive
returns the suffix of the files to be created
accepts or rejects files and directories
returns the property with the given key
returns the value of the given key
get a property as a folder
unregister all component classes
creates the relation
handles the update of an archive object
handles the update of a relation object name
unregister the mbean server
starts the configuration
shuts down the named configuration
get free node
returns true if the file exists in the mds
delete all files in this directory
returns the id
sets the remote ip address
compares its two arguments for order
get chunk at given position
tests this entry for equality with an arbitrary object
returns the virtual directory for the given path or null if the path
returns the file with the given path or null if it cannot be
releases the disc space for the node with node id
delete the virtual file associated with the given path
replace the current chunk with a new chunk
returns the number of bytes available for reading
returns the canonical path of this files file
compare this chunk meta data to another object
adds an element at the end of the list
returns the next element in the iteration
compare this file meta data to another object
moves the current element to the middle of the list
returns a url for this resource
return a uri representation of this resource
returns true if the application can read the file
returns the last life sign
returns true if the file system is able to write to
returns the amount of free disk space
returns the value as boolean
returns the value as long
return the time the file was last modified
connect to the server
creates all directories
writes the best terms in a vector to configuration file
returns the distance between two feature vectors
returns the id
returns the feature vector of this class
sets the time of the last modification
starts the index
set the file to be read only
adds a term to the term list
adds a term to the query
returns the term at the given position
returns the document frequency of the given position
returns the number of terms in this collection
returns the position of the given string in the term vector
gets the number of members
loads the term vector from the client
called when factory is initialized
get a category by name
shutdown the scheduler
loads the properties file and initializes the categories
load the configuration from the weta news configuration file
shutdown the scheduler
updates an existing user
guess the categoty of a given text
resets the navigation to the main content
initializes the servlet
sets the main navi status
sets the main content action
called when this session is bound to the http session
called when the user is unbound from the web service
transform xml to text
returns the certificate for this public key
sets the public key certificate for this key
sets the key
creates the gui and shows it
loads the list of files into the editor
refreshes the alias list
returns the text that shows up in the alias list
creates a new node which is expanded if it was opened
returns true if node is a leaf
validates a file
validates a file
constructs a line that is at least the first entry of the dbl
load the model from the workspace
get the next xml outer token trimming whitespace
return the next entity
get the next meta object
skip characters until past the requested string
get the double value associated with an index
get the int value associated with an index
get the long value associated with an index
make a string from the contents of this jsonarray
get the optional object value associated with an index
get the int value associated with a key
get the long value associated with a key
append an object value
get an enumeration of the keys of the jsonobject
produce a jsonarray containing the names of the elements of this
trims numbers from a string
append a hashtable value
append an object value
put or replace a vector value in the jsonarray
put a value in the jsonarray where the value will be a
get an optional double associated with a key or the
put or replace an object value in the jsonarray
write the contents of the jsonarray as json text to a writer
make a json text of this jsonobject
write the contents of the jsonobject as json text to a writer
this method is called upon plug in activation
this method is called when the plug in is stopped
get the skybox instance given its name
sets the key bindings for the keyboard
returns the plane of the surface
sets the plane for the polygon
update the code base execution function code
returns the interpolated value for the given key
called when suicide is finished
create a pass manager
build the fps node
creates and resets the sky timer
builds the camera chase camera
create our custom input handler
build the skybox read boxes and weathers
build the fog effect
gets the amhm wsdl port address
get the amhm wsdl port name
sets the value of the amhm wsdl port wsddservice name property
gets the value of endpoint
getter for property amhm wsdl port type
gets the persistence service port address
get the persistence service port name
sets the value of the persistence service port wsddservice name property
gets the persistence service port type
gets the value of payed
sets the value of the payed property
sets the value of the contact property
gets the tariff
sets the value of the tariff property
gets the subscribable
sets the value of the subscribable property
gets the city id
sets the value of the city id property
gets the city name
sets the value of the zip value property
gets the value of phone type
getter of the emails type
gets the tariff id
sets the value of the phone type property
gets the value of phone id
sets the value of the email type property
sets the value of the tariff id property
sets the value of the phone id property
gets the value of email id
sets the value of the email id property
gets the value of defval
sets the value of the defval property
sets the value of the type id property
gets the tariff title
sets the value of the tariff title property
gets the value of type
gets the value of freetariff
sets the value of the typename property
sets the value of the freetariff property
getter of the city
sets the value of the city property
gets the subscribable id
getter for property civid
sets the tariffs
sets the value of the civid property
sets the subscribable id
gets the civi name
gets the subscribable id
sets the value of the civi name property
gets the value of season name
sets the value of the subscribable id property
sets the value of the contact id property
sets the value of the season name property
getter method for program type
sets the value of the program type property
gets the season thema of this centro
sets the value of the phone property
sets the value of the season thema property
gets the speakers
sets the value of the email property
sets the value of the speaker property
gets the value of event date
sets the value of the event date property
gets the job title
sets the value of the job title property
getter for property surname
sets the value of the salutation property
sets the telephone numbers value for this phone return
set the endpoint address for the specified port name
return the deserialized value
serialize an object to a vector
creates a soap message from an input stream
sets the coordination context on the server
adds a child node at the specified index
set the coordination context for this object
return the suffix for the status storage part
adds a participant to the transaction
returns the code message headers code object
override this to change the operation storage suffix
sets the headers
sets the service endpoint
returns the storage id for a coordination id suffix
assign the coordinator
call a procedure with the given parameters
returns a vector of operation descriptions
store the operation of the specified uri
sets the endpoint value for coordinator endpoint set
sets the service endpoint value for this endpoint reference type
sets the protocol identifier
set the coordination status of the agent
sets the value of protocol status
gets the first operation from the queue
returns an enumeration of the elements in the queue
initializes the coordinate store
returns coordinator listener for operation coordinator
sets the listener
called when the operation is completed
fires the closed event for this operation
fires the cancel event for this operation
fires the compensated operation
generates an activation id for the current state
fires the exit code bacparticipant code message to the peer
fires the fault event for this code bacparticipant code object
fires the status code get status code event
fires the given status with the given headers
builds a new coordination context object
initializes the coordination context type registry
return the concrete implementation of operations impl
initializes the type registry
sets the implementation of the operations
notify all listeners that a message has been complete
fires a close message
notify all listeners that a code message code has been
fires a faulted message
notify all code soapfault code objects that a code message code
send a compensate message to all registered operations
send a get status message to all the members
send a status message to all the operations
adjusts the coordination state of this faulting object
start the timer to prepare it for a given message
cancels a timer for a given message id
recover the timer manager
returns the message id of the message
sets the message id of the message
returns the timer manager
returns the absolute timeout
sets the absolute timeout
gets the storage factory
get the current message context
get the soap server instance
get the storage factory
convenience method to get the timer manager
initialize the service ref timer manager
deserializes the message headers into a message headers object
returns the storage instance
returns a converter which can convert the specified class
sets the message id header
sets the relates to header
store the reply to header
get the value of call object
setter for property call object
store the fault to address in the response header
store the given addressing type as a from header
set the property on the underlying implementation
sets the x
gets the value of the service ref property
set the endpoint reference
sets the value of service ref
sets the relates to header for the message
sets the reply to endpoint of the connection
sets the reference type of the from endpoint header
removes all headers from this request
returns the message id of the message
sets the message id
generates and returns an unique uri which identifies the message
invoke the operation
invoke the next message in the sequence
start up the service where we host the service and
starts the application
this method recovers all transactions
this method recovers any failed recovery for the participant
this method initializes browse button
this method initializes regexp text field
this method initializes remove button
this method initializes j scroll pane
this method initializes found artifacts list
this method initializes j scroll pane
this method initializes selected files list
this method initializes j scroll pane1
this method initializes result text area
this method initializes search button
this method initializes j scroll pane2
this method initializes regexp check box
this method initializes result text area
this method initializes split pane
this method initializes split pane
this method initializes jar search panel
this method initializes regexp search panel
this method initializes tabbed pane
this method initializes content
this method initializes status panel
this method initializes update panel
this method initializes this
indexes the repositories for the given repository
wait for the work to finish
create a new artifact in the given directory
check if the given image file name is a directory
returns the path to the pom
deletes the directory and all its contents
searches for the next sibling with the given name
returns the text value of a node
this method extracts the prefix to the document
returns this plug ins template store
returns the template context type registry for the workbench
creates the field editors
add a pair of values
loads the properties from the given file
prints the current positions
stops the robot from moving
create the gui and show it
stops the robot
stops the robot
moves the robot forward by pixels
turns velocity and turns the robot on
turn the robot about the current angle
turns the robot about the current position till the given angle
turns robot to point2 d through point2d by x y
follows wall in a given direction
returns a string containing the sensors on the sensors
gets the distance from the robot
retrieves the current angle for the robot
this is a helper function that resolves the position of the
checks whether the goal has reached the given positions
calculates the distance between two positions
print the distance matrix to standard output
add a predicate to the and operator
add a predicate to the and operator
this method removes a predicate from the patient
adds all the predicates in the given compound predicate
get the column with the given name and key
returns the where clause
add a where predicate
add a where predicate
initializes this joinable
returns true if this is a group function
adds expressions to the select clause
groups expressions in a single list
adds a having clause to the having clause
returns true if an alias is used
order the columns using a column
adds a context menu item to the menu
adds a thin line to the
add a thin line to the
gets the value of unit name
sets the name of the unit
get the conversion value
set the conversion value
converts pixel coordinates into double precision
converts value to a number of pixels
this method is activated on the keystrokes we are listening to
sets the parent value for this set relationship value
sets the placed at value for this partition
sets the subdiagram value for this activity diagram
sets the origin value for this workflow element
sets the destination value for this task
sets the reference value for this order
sets the represents value for this order
sets the parent of this usecase
setter for property architecture
sets the pos condition value for this order type
sets the pre condition value for this test case
sets the stereotype value for this profile
setter for property uc description
returns true if the ruler of the calendar is in effect
sets the action
called when the observable changed that this object is showing
stop listening for connections
fires a key event to all listeners
start the session
cleans up any allocated sessions
finishes the stream
removes all broken sessions that are no longer needed
check if session has timedout
adds the given listener to the list of listeners
cleans up closed sessions
removes the given listener from the list of listeners
called by the code ioexception code method
checks all the sessions that have been closed and if any returns
sets the session object
closes the terminal io interface
registers a broken session
this method is called when the session manager is closed
get the global object
set the global object for this context
the run method for the thread
sets the text of this label
returns the label text
insert a point into the polygon
deletes the last character from the buffer
deletes the last character in the buffer
if the user presses the cursor key this method is called
the cursor pressed
changes the sign to the one that is allowed
fires the given action performed event to all the listeners
returns the number as a string
sets the text of this label
returns the raw string representation of this
removes a previously added listener interface
clears the field
this method sets the buffer to be cleared
returns the terminal io interface of this interpreter
cuts the buffer to fit the current size
returns the position of the text cursor
returns true if the server allows a s3 to sign a message
sets the cursor
sets the cursor position
sets the line number of the cursor
sets the text cursor position to the start position
sets the list model
sets the text
sets whether the user can sign in
sets the contents of the list model
sets the focusable
clears the buffer
returns true if zero values are allowed
gets the position
set the widget position
returns the line of the widget
this method returns the source list widget
sets the zero allowed
sets the line of the widget
sets the selected index
sets the column of the widget
returns the session object of the owner of this node
gets the current cursor position
returns the line number of the cursor
store the session object in the owner
returns the column position of the cursor
getter for property owner
informs all list selection listeners that the editor has
sets size of the component
mark the screen as dirty
paints the component
returns the focused widget
set the height of the component
sets the header of the message
returns the first focused widget
set width of the image
sets the size of the image
returns the last focused widget
called when a key is pressed
returns the next available widget initialized for the given type
sets the message to be displayed
returns the previous possible widget in the list
called when a key is pressed
returns the current form
called when a key is pressed
sets the initialization state of this creature
performs the actual painting of the screen
sets the text alignment
get the action used to close the dialog
adds a widget to the toolbar
set the form manager that owns this form
sets the ok action
get the form manager that owns this form
returns the action that is executed when the dialog is aborted
checks if a widget is focused
sets the action to be taken if the user presses the abort button
adds a new form to the container
getter for property ok label
repaints the current form
adds a new form automation to be used
set the label of the ok button
repaint the current form
returns whether this widget has the focus
returns the set of form automation objects currently being processed
return the label for the abort action
shows the wait screen
this method is called by the ioscheduler when data has
sets the label for the button that triggers the abort button
shows error form with specified message
shows error screen
attaches a form automation set to this web page
shows a message form
detaches the form control from the current automation
returns the session object of the owner
this method sets the state of the error
set the session object of this worker
terminate the jalita application
get the global object
shows an option form
save the configuration
sets the global object
finishes the form
return the session associated with this persistence manager
called when a barcode is received
writes out the csi attribute
received a key press
move the cursor to the absolute column number of the given position
returns the port number on which this server is listening
moves the cursor one step relative to the current position
send the attributes
set the port number on which this server is listening
close the socket and the streams associated with it
write the text
returns the inet address of the remote host
writes a text to the output stream at a given position
moves the cursor to the absolute column position specified by line and column
returns the server max sessions per host
writes out the text to the output stream without using the
move the cursor relative to the given direction
writes text to the output stream at the given position
sets the maximum number of sessions per host
set the font to be bold or not
writes text to the output stream
set to true if the stream should be underlined
sets the blink status of the output stream
writes text to the specified position
set whether the output should be reversed
check if the reader is still open
sets the session height
sets the foreground color for the output
writes text to the output stream without using the
sets the background color for the output
writes text to the opposite end of a line of text
sets the session width
clear screen and set it to null
this method refers to the r r bold attribute
retrieves the session timeout value
draws a rectangle
this method changes the state of the output underscore
clear the line
sets the default session timeout value
reads the next terminal event from the input stream
this method sets the
retrieves the server cleanup interval
this method refers to the r r file reverse
set the server cleanup interval
retrieves the code class code instance of the init form automation
setter for the session init form
returns the time before clear buffer
write a newline to the output stream
getter for property barcode
getter for property barcode
sets the time before clear buffer is called
clear screen erase in display
returns the key of this item as a char
returns a property from the user properties file
returns true if this key is printable
returns true iff the key is a function key
sets a user property
draws a rectangle
clears a line
method that reads a ttype subnegotiation string that ends up with a
method that informs internally about the supported negotiation options
method to enable the i th binding environment
yes this address is the address that is marked as needing to
are you there
calculates and sets the terminal geometry of this event
method to output a byte
writes an int to the stream
write a sequence of bytes
write an int to the output stream
this method is used to write a character to the stream
write a string to the output stream
flushes the output stream
closes the telnet output stream and closes the socket
closes the input stream
begin a host
indicates if the given url has been found in the search
starts the spider for a url
get the size of a column in the given table
closes the result set
creates a new instance of sqlworkload manager
execute the workload
adds a url to the workload manager
executes a query and returns the result set
cancels the current operation
returns true if the given url should be excluded from view
obtains a prepared statement
creates a new host
gets options for spidering
loads a line from the given string
releases the statement and the statement cache
loads all cookies from the given urlconnection object
gets the current report
saves cookies in the http response object
returns the value of the specified attribute
returns the corresponding tag for this html tag
returns the status of this object
reads the next tag
sets an attribute
clears all the workload
gets the workload manager
peek at the next character in the stream
processes the current host
adds a file to the container
consumes all whitespace characters until non whitespace is found
adds a variable to the request
completes the current request and releases any system resources
parses the attribute name
writes the boundary
writes a newline to the output stream
parses a string
write a string to the output stream
write the name element
checks if a given url is contained in the database
writes the given string followed by a newline
converts a url to a url
returns the depth of a given url
returns a source as a url
returns the current work
marks this workload object as an error
marks this workload object as processed
resume a workload
wait for the work to complete
tests if there are workload objects in the database
computes the hash value for the given url
gets the column size
returns host by id
marks a host as processed
truncates a string to the given length
perform a get operation
perform a post
p computes a re production rule p
p computes the method to be resolved
p computes the set production rule method from a nonterminal
sets the production rule
returns the minimum depth of termination expressions
creates an instance of the class
returns true if this set contains any conatins
sets this phrases list of non terminal symbols
returns the length of the symbol table
sets the id of the parent solution
adjust the fitness of this chromosome by the given delta
sets the fitness of this individual
returns true if the parity is known
gets the video info
wrapper for the standard servlet api call
invoke the named method or constructor in the named class
uses the name of the filter and uses the parameters to filter
run the program
main processing method for the javi renderer object
validates arguments to make sure they are valid
runs the thread
get the function parameters
starts the program
main processing method for the javi renderer object
main processing method for the javi synth object
returns true if this block is the source of the given file
gets the character stream
dumps this object as text using the given content handler
dumps this object as text using the given content handler
setter to in
setter to the out directory
sets the yaml type to type
cloning is not supported
pushes a scalar string onto the stream
pushes the start sequence to the stream
test to see if the end of the file being read has been
read a space character
read a space or tab
read a line break
read a character
reads a sequence of characters
unmarks the current position
checks if a character is a valid lf character
returns the current indentation
inits the parser
adds a new event to the collection
scalar value for single quotes in xml file
tear down instance variables required by this test case
returns a copy of the events
scalar value for complex type
this is used to read a mark from the current position
pushes back a character
resets the reader
return true if the current context has a previous context
adds an event to the current context
resets the stream and mark if necessary
read a character from the reader
asserts that the last character read is the same as the specified char
asserts that the total read of a string equals a given value
returns the list of
asserts that the end of the file is reached
unmarks previously marked markers
returns the mark depth
unmarks all buffered events
see if current stream is not marked as true
get a collectingevent
appears to be more efficient than single entry point
top api taobao
selects a collection of taxon based on the current taxon name
select the target collection
go back to the previous page
go through editing sample bean
edits the selected object
make the entity manager persistent
edit an entity
delete the entity
given a query and a set of parameters return a single bean
this method returns the last collectionobject in the group
returns the taxon of the given collection object
process a constraint violation exception that describes a constraint violation
get entity class
returns the new catalog number
returns a string value by evaluating the xpath expression
returns a node by xpath expression
returns a list of nodes that match the given xpath expression
returns a list of nodes that match the given xpath expression
test of get view data map method of class usyd
gets the coordinate of the wgs84
sets the value of the wgs84 coordinate property
returns the pattern that is used for parsing
sets the value of the parse pattern property
gets the value of the locality description property
sets the value of the locality description property
create an instance of
sets the value of the latitude property
create an instance of
create an instance of
sets the value of the longitude property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
gets the result set that is being resolved
sets the value of the result property
get the locality string
sets the value of the locality string property
checks if is hwy x
returns the county
sets the value of the hwy x property
returns the v locality of this locality
returns the find waterbody
sets the value of the county property
sets the value of the v locality property
sets the value of the find waterbody property
gets the users complete v geography
gets the value of the find water bodies within locality result property
sets the value of the v geography property
sets the value of the find water bodies within locality result property
return the time on the exectution the local accumulated by the
sets the value of the exectution timems property
gets the value of the wgs84 latitude property
sets the value of the wgs84 latitude property
gets the longitude of the wgs84 in degrees
sets the value of the wgs84 longitude property
set the endpoint address for the specified port name
setter for property locality string
sets the engine version value for this job ticket
sets the wgs84 coordinate value for this geo poly pt
setter for property parse pattern
returns the execution timems
sets the execution timems
sets the precision value for this ws jdbc database column
sets the result set value for this search result
sets the uncertainty radius meters value for this quote data
sets the uncertainty polygon value for this wsyetki kullanici
sets the reference location value for this archive locator
get the displaced distance miles
set the displaced distance miles
returns the displaced heading in degrees
sets the displaced heading degrees
sets the debug value for this job ticket
set the endpoint address for the specified port name
sets the x value value for this wsyetki kullanici
sets the y value value for this wsyetki kullanici
sets the elevation units value for this quote data
sets the get all elevations result value for this get all elevations response
return a new session for the specified object
create a new info request from an info request
builds the table tree for this object
returns the table information for the given class name
checks whether the specified principal is valid for the cache
reset cache timer
escape xml entities
escape xml entities as xml entities
removes all extracted datasets from the repository
adds a data set to this set
set the endpoint address for the specified port name
gets the annual revenue
sets the annual revenue
sets the date added value for this document attributes
sets the postal code value for this address
set the endpoint address for the specified port name
set the endpoint address for the specified port name
gets the value of the default record type mapping property
sets the default record type mapping
sets the record type id value for this ws record type
returns the custom
sets the custom
sets the result value for this search result
sets the sobject name value for this wsyetki kullanici
sets the result value for this salesforce service result
sets the query locator value for this search retrieve request type
sets the layout items value for this item search request
returns the number of items in the list
sets the number of items in the bank
sets the external idfield name value for this wsvalor serie vo
sets the s objects value for this upsert
sets the ids value for this wsyetki kullanici
sets the latest date covered value for this defect
sets the sforce reserved value for this wsyetki kullanici
returns the auto number
sets the records value for this search result
sets the result value for this search result
set whether this is an auto number number
returns whether the confirmation email is triggered
sets the trigger auto response email
getter for property trigger other email
setter for property trigger other email
sets the layout components value for this report
returns the email of the user that triggers the action
sets the trigger user email
returns whether this property is a placeholder property
sets the placeholder
setter for property byte length
sets the query string value for this query constants
sets the heading value for this wsyetki kullanici
sets the layout rows value for this report
sets the result value for this salesforce service query result
sets the workitem id value for this wsyetki kullanici
gets the value of the use collapsible section property
setter for property use collapsible section
sets the account id value for this user
returns true if the heading is used
sets the contact id value for this order type
sets the use heading value for this custom site
sets the converted status value for this job ticket
sets the picklist name value for this picklist
sets the calculated flag
sets the picklist values value for this picklist
returns the do not create opportunity
set to true if this operator will not create the opportunity
returns the number of lines that are displayed in the label
sets the lead id value for this wsyetki kullanici
sets the number of lines that should be shown in a graph
returns the order of the tab
sets the opportunity name value for this wsyetki kullanici
sets the tab order
sets the type value for this component
returns the value of the overwrite lead source property
sets the calculated formula value for this job ticket
sets the value of overwrite lead source
sets the transfer to user id value for this ws operation log instance
sets the owner id value for this job ticket
sets the field list value for this archive locator
sets the s object type value for this sobject
to know if the email address is a notification email
to set the send notification email flag
sets the next approver ids value for this order type
sets the errors value for this salesforce service result
sets the batch size value for this job ticket
sets the success
sets the layouts value for this report
sets the bcc sender value for this annex
sets the record type mappings value for this search retrieve request type
sets the email priority value for this email
sets the reply to value for this email message
gets the value of the record type selector required property
sets the save as activity value for this workbook create remote request
sets the record type selector required
sets the result value for this salesforce service
sets the use signature value for this custom site
sets the master record value for this merge request
sets the result value for this search result
sets the record to merge ids value for this search retrieve request type
sets the result value for this get service response
setter for property controller name
sets the field value for this document attributes
sets the format value for this attribute definition
sets the item api name value for this wsyetki kullanici
sets the result value for this salesforce service result
returns true if the property is createable
sets the result value for this search result
sets the target object ids value for this service log type
sets the template id value for this job ticket
sets the createable
sets the status code value for this status
sets the encoding value for this ws connection params
returns the maximum batch size
sets the maximum batch size
sets the types value for this quote data
sets the opportunity id value for this wsyetki kullanici
sets the result value for this search result
sets the detail layout sections value for this report
sets the edit layout sections value for this edit layout
sets the record type ids value for this archive locator
sets the related lists value for this salesforce service
sets the entity api name value for this gss acl base result
sets the items value for this list
sets the call types value for this invoke info
sets the logo url value for this document
gets the defaulted on create value for this describe global sobject result
sets the tabs value for this report
get the value of accessibility mode
sets the created
set the accessibility mode flag
sets the defaulted on create
sets the info fields value for this report
sets the currency symbol value for this quote data
sets the sections value for this report
sets the license type value for this wsyetki kullanici
sets the result value for this update response
sets the organization id
sets the dependent picklist value for this job ticket
sets the bcc addresses value for this janus message info
gets the organization multi currency value for this company type
sets the cc addresses value for this job ticket
sets the organization multi currency
sets the html body value for this email template
sets the plain text body value for this job ticket
sets the organization name value for this quote data
sets the target object id value for this job ticket
sets the assignment rule id value for this job ticket
sets the use default rule value for this defect
sets the to addresses value for this download request
returns true if the password has expired
sets the profile id value for this job ticket
setter for property password expired
sets the search records value for this search result
sets the server url value for this job ticket
setter for property digits
sets the user info value for this login result
sets the result value for this search result
set the endpoint address for the specified port name
sets the external id value for this external id
returns true if this component is activated
sets the user email value for this janus user info
sets the user full name value for this user
sets the activateable
sets the layout id value for this wsyetki kullanici
returns whether this filter can be applied to all elements
sets the picklists for record type value for this record type mapping
sets the child relationships value for this salesforce service
sets the user language value for this janus user info
sets whether the receiver allows or denies incoming messages or not
sets the user locale value for this janus message info
sets the user time zone value for this user profile
sets the object id value for this wsyetki kullanici
sets the html formatted value for this document attributes
setter for property user ui skin
returns true if cascading must be applied when selecting delete and
sets the cascading delete flag
sets the child sobject value for this wsyetki kullanici
sets the relationship name value for this related code
sets the column value for this ws jdbc database column
returns true if this property can be deleted from the model
sets the columns value for this report query
sets the deletable
sets the fields value for this search service
gets the limit rows
sets the limit rows
sets the deleted date value for this defect
sets the sobject value for this wsyetki kullanici
sets the sort value for this list
sets the key prefix value for this job ticket
returns the update mru
sets the update mru
sets the result value for this search result
sets the merged record ids value for this search retrieve request type
returns the default value
sets the default value
return true if this field is part of a name
sets the valid for value for this product
sets the updated related ids value for this updated related info
sets the label plural value for this job ticket
sets the record value for this search record
sets the errors value for this salesforce service
sets the deleted records value for this search result
sets the earliest date available value for this product
returns true if the panel can be laid out
sets the entity id
sets the name field
sets the instance id
sets if the panel can be laid out with a layout or not
sets the instance status value for this archive locator
sets the new workitem ids value for this runtime context
return whether the current element can be merged into another element
setter for property name pointing
sets the mergeable value for this deep sky finding
sets the record type infos value for this record type info list
get the replicateable status of this entity
set the replicateable property
returns true if cells are retrieved from the repository
sets the value of retrieveable
gets the searchable attribute of the value node object
sets the reference to value for this wsyetki kullanici
sets the searchable attribute of the value node object
undeletable state if all
undeletable state mactic
getter for property updateable
setter for property updateable
returns the restricted picklist flag
sets the url detail value for this job ticket
sets the url edit value for this document
sets the restricted picklist flag
setter for property url new
sets the soap type value for this service
sets the sortable value for this synch lit data
sets the type value for this field
sets the exception code value for this api fault
sets the exception message value for this application exception
sets the case value for this describe sobject result
sets the case access level value for this place order parameters type
sets the case id value for this order type
sets the is deleted value for this document attributes
sets the created by value for this sobject
sets the last modified by value for this order
sets the contract value for this get post
sets the last modified by id value for this order type
sets the created by id value for this defect
sets the body
sets the contract id value for this job ticket
sets the last modified date value for this document attributes
sets the row cause value for this test case
sets the created by value for this describe sobject result
sets the user or group id value for this wsyetki kullanici
sets the body length value for this document attributes
sets the master label value for this job ticket
sets the new value value for this change event
sets the old value value for this change event
sets the sort order value for this order status type
sets the sort style value for this attribute definition
sets the system modstamp value for this defect
sets the compliance bcc email value for this order type
sets the is private value for this document attributes
sets the is standard year value for this defect
sets the account contact roles value for this customer party
sets the last modified by value for this order
sets the period id value for this order type
sets the period label scheme value for this quote data
sets the period prefix value for this subscription manager rp
sets the account number value for this user
sets the periods value for this salesforce service result
sets the quarter label scheme value for this quote data
sets the owner value for this object name
sets the quarter prefix value for this quote data
sets the parent value for this object name
sets the account partners from value for this customer
sets the default account and contact access value for this user
sets the week label scheme value for this document attributes
setter for property week start day
sets the default calendar access value for this job ticket
sets the year type value for this document attributes
sets the fiscal year settings value for this feta fiscal year
sets the fiscal year settings id value for this wsyetki kullanici
sets the account partners to value for this account
sets the is forecast period value for this defect
sets the default case access value for this application options
sets the account value for this transaction
sets the period label value for this quote data
sets the quarter label value for this query schedule
sets the default lead access value for this job ticket
setter for property active c
sets the account access level value for this user
sets the activity histories value for this search result
sets the default locale sid key value for this s list
sets the attachments value for this salesforce service result
sets the default opportunity access value for this job ticket
sets the opportunity access level value for this wsyetki kullanici
sets the cases value for this salesforce service result
sets the default pricebook access value for this quote data
sets the contact value for this sobject
sets the division value for this annex
sets the annual revenue value for this wsyetki kullanici
sets the assets value for this salesforce service result
sets the fiscal year start month value for this defect
set the value related to the column activity date
sets the language locale key value for this wsyetki kullanici
sets the activity type value for this activity data
sets the events value for this salesforce service result
set the value related to the column install date
sets the is competitor product value for this item attributes
sets the max actions per rule value for this quote data
sets the duration in minutes value for this janus message info
sets the is all day event value for this subscription manager rp
sets the max rules per entity value for this defect
sets the is closed value for this document attributes
setter for property billing postal code
sets the organization type value for this quote data
sets the is reminder set value for this document attributes
sets the is task value for this job ticket
setter for property billing street
sets the notes value for this salesforce service result
sets the preferences require opportunity products value for this user profile
sets the notes and attachments value for this salesforce query result
sets the primary contact value for this wsyetki kullanici
sets the open activities value for this search result
sets the receives admin info emails value for this receive admin info
sets the contacts value for this salesforce service result
sets the process instances value for this invoke service
sets the receives info emails value for this receive info
sets the process steps value for this invoke service
sets the reminder date time value for this booking
sets the contracts value for this get salesforce service result
sets the product2 value for this product
sets the product2 id value for this wsyetki kullanici
set the value related to the column purchase date
sets the trial expiration date value for this subscription manager rp
sets the what value for this describe sobject result
sets the quantity value for this order item info
sets the what id value for this order type
sets the ui skin value for this wsyetki kullanici
sets the serial number value for this wsyetki kullanici
sets the who value for this get object name
setter for property uses start date as fiscal year name
sets the who id value for this order type
sets the web to case default origin value for this application context
sets the customer priority c value for this company type
sets the tasks value for this salesforce service result
sets the is default value for this document attributes
sets the usage end date
sets the user role value for this user
sets the user role id value for this auth create token request
sets the activated by value for this sobject
sets the owner value for this object
sets the activated by id value for this defect
sets the industry value for this wsyetki kullanici
sets the is active value for this job ticket
sets the activated date value for this defect
sets the actor value for this actor name
sets the actor id value for this job ticket
sets the original actor value for this shadow
sets the original actor id value for this wsyetki kullanici
sets the process instance value for this process result
sets the process instance id value for this job ticket
sets the approvals value for this salesforce service result
sets the comment body value for this document attributes
sets the last activity date
sets the is published value for this document attributes
sets the parent value for this child relationship
sets the opportunity line items value for this search result
sets the pricebook entries value for this search result
sets the status code value for this order type
sets the master record value for this merge request
sets the product code value for this order type
sets the master record id value for this job ticket
sets the company signed value for this user
sets the steps value for this salesforce service result
sets the steps and workitems value for this search result
set the value related to the column company signed date
sets the target object value for this name type
sets the workitems value for this search retrieve request
sets the company signed id value for this order type
sets the email template name value for this email template
sets the first open date value for this booking
sets the contract contact roles value for this customer party
sets the last open date value for this document attributes
sets the task value for this job
sets the is pending value for this job ticket
sets the task id value for this job ticket
sets the contract number value for this order type
sets the times opened value for this order type
sets the contract term value for this job ticket
sets the account from value for this transaction
sets the number of employees value for this company type
sets the account from id value for this user
sets the reminders sent value for this company type
sets the account to value for this transaction
sets the step status value for this job ticket
sets the account to id value for this user
setter for property numberof locations c
sets the is primary value for this field type
sets the event id
sets the opportunity value for this describe sobject result
sets the customer signed value for this contact
sets the opportunities value for this salesforce query result
sets the responded date value for this defect
set the value related to the column customer signed date
sets the opportunity partners to value for this search result
sets the customer signed id value for this order type
sets the customer signed title value for this company type
sets the campaign id value for this job ticket
sets the has responded value for this defect
sets the contracts signed value for this result
sets the ownership value for this user
sets the parent value for this account
sets the histories value for this search result
sets the list price value for this quote data
sets the partners from value for this customer
sets the last approved date value for this quote data
sets the delegated approver id value for this job ticket
sets the pricebook entry value for this pricebook result
sets the partners to value for this list
sets the delegated users value for this search result
sets the pricebook entry id value for this order type
set the value related to the column service date
sets the total price value for this order type
sets the unit price value for this quote data
sets the email encoding key value for this email
sets the employee number value for this company type
sets the extension value for this document extension
set the value related to the column slaexpiration date c
sets the owner expiration notice value for this subscription
setter for property slaserial number c
sets the forecast enabled value for this search result
sets the assistant name value for this company type
sets the sla c value for this sla
sets the assistant phone value for this company type
sets the shares value for this search result
sets the special terms value for this quote data
sets the last login date value for this user
sets the shipping city value for this order type
set the value related to the column birthdate
sets the shipping country value for this order type
sets the campaign members value for this salesforce service result
sets the case contact roles value for this search result
sets the shipping postal code value for this order type
sets the shipping state value for this order type
sets the locale sid key value for this describe softphone screen pop option
sets the shipping street value for this order type
sets the mobile phone value for this user
sets the actual cost value for this job ticket
sets the sic value for this wsyetki kullanicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicicic
sets the amount all opportunities value for this quote data
sets the amount won opportunities value for this quote data
sets the offline pda trial expiration date value for this user profile
sets the site value for this search request
sets the offline trial expiration date value for this remote user information
sets the budgeted cost value for this order
sets the profile value for this sobject
sets the ticker symbol value for this company type
sets the email statuses value for this ad group search result
sets the profile license type value for this defect
sets the upsell opportunity c value for this wsyetki kullanici
sets the expected response value for this test case response
sets the expected revenue value for this quote data
sets the website value for this wsyetki kullanici
sets the is note value for this document attributes
sets the home phone value for this wsyetki kullanici
sets the time zone sid key value for this time zone
sets the languages c value for this search retrieve request type
sets the cases value for this describe sobject result
sets the leads value for this customer
sets the cases id value for this test case
sets the user permissions marketing user value for this user
sets the number of contacts value for this company type
set the value related to the column last curequest date
sets the number of converted leads value for this wsyetki kullanici
sets the user permissions mobile user value for this user
sets the number of leads value for this test case result
set the value related to the column last cuupdate date
sets the user permissions offline value for this user permission
sets the number of opportunities value for this quote data
sets the competitor name value for this wsyetki kullanici
sets the user preferences value for this salesforce service
sets the number of responses value for this search result scene ticket
sets the number of won opportunities value for this search result scene ticket
sets the user preferences activity reminders popup value for this user
sets the number sent value for this order type
sets the strengths value for this search result scene ticket
sets the user preferences event reminders checkbox default value for this defect
sets the weaknesses value for this wsyetki kullanici
sets the user preferences reminder sound off value for this user
sets the user preferences task reminders checkbox default value for this defect
sets the lead source value for this job ticket
set the value related to the column level c
sets the mailing city value for this user
sets the display type value for this television display
sets the mailing country value for this email template
sets the encoding key value for this ws conversion params
sets the has menubar value for this job ticket
sets the mailing postal code value for this address type
sets the has scrollbars value for this merchant item attributes
sets the has toolbar value for this job ticket
sets the does send email to members value for this archive locator
sets the height value for this signature image dimensions
sets the mailing state value for this job ticket
sets the is resizable value for this wsyetki kullanici
sets the group members value for this salesforce service result
sets the mailing street value for this employer info
sets the sobject type value for this wsobject
sets the link type value for this web link
sets the master record value for this contact
sets the queue sobjects value for this search result
sets the related id value for this related business info
sets the solution value for this sobject
sets the solution id value for this get version collection
sets the preference value for this user profile
sets the open type value for this s list
sets the page or sobject type value for this search retrieve request type
setter for property require row selection
sets the scontrol id value for this wsyetki kullanici
sets the shows location value for this television shows
sets the pricebook2 value for this flight
sets the pricebook2 id value for this wsyetki kullanici
sets the shows status value for this document attributes
sets the author value for this object name
sets the author id
sets the width value for this signature image dimensions
sets the binary value for this creative
sets the use standard price value for this defect
sets the access level value for this job ticket
sets the can submit value for this payment method
sets the content source value for this document attributes
sets the folder value for this sobject
sets the access type value for this access right
sets the folder id value for this archive locator
sets the developer name value for this gss acl base result
sets the is readonly value for this attribute definition
sets the opportunity contact roles value for this search result scene
sets the is internal use only value for this document attributes
setter for property html wrapper
sets the is public value for this document attributes
sets the business process id value for this business process
sets the other city value for this address
sets the other country value for this company type
sets the supports caching value for this document attributes
sets the other phone value for this phone return
sets the lead value for this sobject
sets the lead access level value for this gss acl change
sets the default probability value for this job ticket
sets the other postal code value for this address type
sets the forecast category value for this defect
sets the brand template id value for this job ticket
sets the is won value for this wsyetki kullanici
sets the other state value for this phone return
sets the other street value for this address type
sets the html value value for this wsyetki kullanici
sets the last used date value for this quote data
sets the is converted value for this attribute definition
sets the template style value for this job ticket
sets the template type value for this job ticket
sets the times used value for this order type
sets the group value for this sobject
sets the table enum or id value for this ws jdbc table enum
sets the reports to value for this contact
sets the reports to id value for this order type
sets the activity date time value for this train obj
setter for property salutation
sets the permissions api user only value for this document
sets the permissions convert leads value for this user permission
sets the permissions create multiforce value for this custom site
sets the super user value for this user
sets the permissions customize application value for this application list
sets the permissions disable notifications value for this user
sets the case access for account owner value for this order type
sets the forecast user id value for this wsyetki kullanici
sets the event attendees value for this search result
sets the permissions edit activated orders value for this user
sets the opportunity access for account owner value for this order type
setter for property reverse role
sets the parent role id value for this janus message info
sets the portal account id value for this wsyetki kullanici
sets the permissions edit event value for this edit list
sets the is archived value for this document attributes
sets the portal type value for this authentication context
set the value related to the column close date
sets the rollup description value for this job ticket
sets the is child value for this attribute definition
sets the permissions edit forecast value for this user permission
sets the users value for this salesforce service result
sets the permissions edit opp line item unit price value for this order type
sets the is group event value for this document attributes
sets the friday end value for this wsyetki kullanici
sets the probability value for this job ticket
sets the stage name value for this job ticket
sets the friday start value for this wsyetki kullanici
sets the permissions edit public documents value for this document list
sets the document id value for this document properties
sets the document sequence value for this document constants
sets the is recurrence value for this service transaction
sets the permissions edit readonly fields value for this user
sets the monday end value for this wsyetki kullanici
sets the monday start value for this wsyetki kullanici
sets the saturday end value for this wsyetki kullanici
sets the permissions edit reports value for this document attributes
sets the saturday start value for this wsyetki kullanici
sets the sunday end value for this job ticket
sets the permissions edit task value for this user
sets the sunday start value for this job ticket
sets the thursday end value for this wsyetki kullanici
sets the permissions import leads value for this document attributes
sets the thursday start value for this wsyetki kullanici
sets the tuesday end value for this wsyetki kullanici
sets the tuesday start value for this wsyetki kullanici
sets the permissions install multiforce value for this custom site
sets the wednesday end value for this defect
sets the wednesday start value for this defect
sets the permissions manage call centers value for this user dto
sets the is high priority value for this job ticket
sets the permissions manage cases value for this user dto
setter for property recurrence activity id
setter for property recurrence day of month
sets the permissions manage categories value for this user dto
setter for property recurrence day of week mask
sets the permissions manage css users value for this user
setter for property recurrence end date only
sets the permissions manage dashboards value for this user
setter for property recurrence instance
setter for property recurrence interval
sets the permissions manage leads value for this user
setter for property recurrence month of year
sets the permissions manage mobile value for this user
sets the fields to null value for this document attributes
setter for property recurrence start date time
sets the permissions manage self service value for this user
setter for property recurrence time zone sid key
sets the permissions manage solutions value for this workspace configuration
setter for property recurrence type
sets the is reviewed value for this review
sets the recurring events value for this salesforce service result
sets the permissions manage territories value for this admin order
sets the permissions manage users value for this user
sets the campaign value for this operand
sets the show as value for this television show
sets the approve comment value for this job ticket
sets the permissions modify all data value for this workspace configuration
sets the permissions password never expires value for this shared object
sets the permissions publish multiforce value for this custom site
sets the permissions run reports value for this user permission
sets the converted account value for this product
sets the parent value for this contract
sets the permissions send sit requests value for this application options
sets the request comment value for this request obj
sets the converted account id value for this company type
sets the active value for this job ticket
sets the permissions solution import value for this workspace configuration
sets the converted contact value for this company type
sets the permissions transfer any entity value for this user permission
sets the converted contact id value for this job ticket
sets the permissions transfer any lead value for this user permission
setter for property converted date
sets the permissions use team reassign wizards value for this user
sets the converted opportunity value for this sobject
sets the permissions view all data value for this workspace configuration
sets the converted opportunity id value for this wsyetki kullanici
sets the permissions view setup value for this application context
sets the is standard value for this document attributes
setter for property current generators c
sets the first responded date
sets the account partners value for this account
sets the case solutions value for this search result
sets the is published in public kb value for this repository info
sets the is unread by owner value for this defect
sets the delivery installation status c value for this order type
sets the solution name value for this company type
sets the solution note value for this job ticket
sets the solution number value for this get version collection
sets the fiscal value for this wsyetki kullanici
sets the fiscal quarter value for this defect
sets the fiscal year value for this defect
sets the category node id value for this job ticket
sets the master record value for this merge request
sets the asset value for this product
sets the has opportunity line item value for this merchant item attributes
sets the related sobject id value for this related sobject
sets the asset id value for this asset
sets the case comments value for this search result
sets the case number value for this order type
set the endpoint address for the specified port name
sets the main competitors c value for this wsyetki kullanici
sets the engineering req number c value for this engineering req
sets the next step value for this job ticket
sets the primary c value for this wsyetki kullanici
sets the has comments unread by owner value for this defect
sets the has self service comments value for this defect
sets the opportunity competitors value for this salesforce query
sets the product interest c value for this defect
sets the is escalated value for this attribute definition
sets the opportunity histories value for this search result
sets the siccode c value for this wsyetki kullanici
sets the opportunity partners from value for this search result
sets the order number c value for this order number
sets the potential liability c value for this defect
sets the partners value for this customer
sets the product c value for this get company report parameters type
sets the slaviolation c value for this wsyetki kullanici
sets the solutions value for this salesforce service result
sets the supplied company value for this company type
setter for property supplied email
setter for property supplied name
sets the supplied phone value for this company type
sets the total opportunity quantity value for this order type
sets the tracking number c value for this order type
get the average of the data
returns the minimum value of this short validator
returns the maximum value of this short bounded short object
called when a button is clicked
returns code true code if this object is equal to the specified
test delegate without action
sets the scene
this method is used to test the connection
sets the jdbcdriver value for this ws jdbc driver
enable or disable snap to grid mode
sets the grid visible
returns the component
setter for property dialog result
gets the sort field
called after page export
returns the log text area
returns true if the provider supports the get fields operation
sets the columns of the source query in the code jeditor pane code
notify listeners that compilation status has changed
sets the column error from the work to the given string
gets the font
gets the field to hold the parameter
sets the field to hold the parameter
setter for property obj
concatenates an edit to the end of this one
sets the error message for the columns in the status bar
sets columns error message from work
sets columns from the report query dialog
sets the bean explorer from the worker
sets the init
returns the temporary field
set the current fields and update the panel
gets the parameter
sets the parameter to hold all the values
set the source jcomponent
returns the new value
sets the new value
returns the old value
sets the old value
selects a node in the tree
invoked when a key has been pressed
invoked when a component loses the keyboard focus
returns the current directory for the user
notifies all registered listeners about the event
sets the postfix value for this wsattribute
sets the current directory for the file chooser
set the classpath to be used for the report
sets the fontpath
gets the clip board to be used for the chart
sets the chart cli board
sets the chart series clip board
gets the parameter
sets the parameter to hold the paramater for the gui
notifies all registered listeners about the event
setter for property pattern
gets the sort type
sets the pattern value for this wsobject
set the crosstab in the active objects
returns whether the paste operation is supported by this stack frame
sets the adjusting selection property
returns true if this paste operation can be performed on the
prepares a file chooser
handle the menu item selection
method add xs entity vo
adds a new wsml entity vo
find a wsml entity by its slimbing this
check whether there is a mapping for the entity
returns the concept that contains the selected element
delete the entity from the wsml list
adds a property change listener to this cell editor
removes a property change listener
returns a concept with the given name from the current ontology
returns true if a concept with the given name exists
adds a subconcept to the concept
adds listeners to the dialog
removes all superconcepts of a concept
sets the fields for the type name text field
imports an iri from an iri to an ontology
passing the focus request to the viewers control
this is the method that sets the remap action to the entity
sets the selection in the onto viewer
sets the selection in the xsd viewer
returns all the atributes of the given element
create the context menu
updates the tree according to our input
the implementation of this code property change listener code
creates the viewer and initializes it
the viewers control has been changed so update the list list
handle the selection changed event
this method traverses all the global nodes in the tree
traverse the dom node passed in through the visitors methods
find a matching entity
storeinhash table
parse a witout extension or restriction
method parse pattern
this method parses the file name
method create concepts from unreferenced
creates a new axiom and mapping
get the mapping factory
sets the selection in the onto viewer
write the schema definition for the node
creates the reference to the xml schema definition under the given
adds a child to the node
method create concepts from unreferenced
returns the url for the image to display in the session
returns true if the file has an image
select the file in the current entry
fix the comment
get the type of the elements of the extension
whether the given filename matches this pattern
sets the panel width
add a filter
sets the dialog height
add the specified group to this user
this method is used to build the folder structure
get the type of the elements of the extension
add the project to the project list
get the type of the elements of the class
returns true if the given file should be excluded from viewing
adds a child element to the list of childs
returns the element type
gets the element type of the exten xls file
read the log factory in using a custom routine
get the type of the elements of the class
get the content of a comment
gets the element type of the exten xls file
loads the comments for this program from disk
adds a selection listener to the back button
returns true if there are more points to read
opens an entry by name
init the childs of this code nav node code
create about dialog
exits the application
updates the specified field with the specified value
updates the specified field with the specified value
updates the field with the given value
called when the update is done and the cache is updated
constructor which creates a field with the given name and adds this
destroy the field
notifies all registered listeners that the value of this cell has changed
returns the id of the control
get the string value of the object
sets the value of this property
sets the values
create an img tag with this image and the default tag width height
returns the html img tag for the image part or null
notifies the registered listeners about the event of the specified type
add a session event listener to this component
remove a session event listener from this component
register a control
this method is called whenever the observed object is changed
update the accessed time information for this session
returns the age of this code time code object as a formatted string
clear the redirect to url
called by the servlet container when the application is destroyed
returns the application setup
returns the control with the given name
returns the control that is associated with the given layer
returns the redirect url
indicates that this component needs to be redrawn
returns the top control in the tree
returns the top control id
get a property from the configuration
returns true if the type is ie
returns true if the type is a ns type
returns true if this is a firefox service
close the top control
returns true if the symbol is a opera
returns true if this post is a konqueror
pushes a control on the top of the stack
returns a string representation of the object
redirects to the specified url
destroy this stage
returns true if the rendering of the child control is relevant
remove the control with the given name
gets the value of the root control class property
remove the layer identified by the given id from the map
returns the major version number
set the call back url
stop all clients and destroy all clients
create a new session container
returns the session with the given id
get control by id
this method returns the session with the specified app id
removes the session from the store
returns the exit url
sets the exit url
returns the time when the store operation was performed
redirects the client to the exit url
get the localized string for the given key
render the control
sets the velocity engine
creates a velocity context for a given control
retrieve a template from the cache by its name
set the extensions of the template files used to process the generated
sets the path where the generated files should be saved
get the first value of the specified initialization parameter
converts string to utf8 encoding
format text to html
formats the given time
formats the given date using the current time zone
formats the given date and time using the current time zone
returns the path to the contexts directory
generates a css property for the given element
gets the request ticket
cleans up this instance
generates a css property for the given element
calls the corresponding method in
returns the request ticket for the specified layer
get the old value of the tool
get the new values
validate the ticket
get the first value for the parameter with the given key
returns the page that this event occurred on
gets the input stream attribute of the file meta data object
adds an object to the writer that is extra elements
getter for property require redraw
returns the extension of the file
get the input stream of this file
sets the locale of the response
returns the file name from a file path
gracefully shut down this servlet releasing any resources
handle authentication for the user
add a tab to the tabbed pane
add a tab to the tabbed form
returns the name of the active tab
sets the location of the node
get the template name
returns the master radio button
redraw all the radio buttons
get the field that this form is for
returns true if the form field is selected
set the current state of the radio button
returns the selected radio button
sets the base style
adds a script to be executed when the script is executed
called by jwic ui when a message is sent
returns the top field
returns the left field
called by jwic ui when a message is sent to the client
sends an element selected event to all registered listeners
adds a new entry to the model
adds an element selected listener to this part
removes an element selected listener from the list of listeners
called by jwc viewer when a message is received
clears all the fields
returns true if the given count is a line break
invoked when an action is clicked
returns true if the checkbox is checked
get the selected key
sets whether it is checked
sets the selected key
sets the label of the axis
returns the change notification
sets whether change notification is needed and should be done
sets whether the job is enabled
returns the layout data for the given control
sets the work manager to be used to manage the work managers
removes a control from the form
get the attribute name of class css class
sets the title of this page
returns the progress monitor
sets the progress monitor to be shown
sets the number of columns in the grid
provides the percent of the current monitored method
sets the width of a column
close the window
adds or updates the layout data of the given control
gets the height
sets the height of the image
gets the width
sets the width of the image
gets the top
sets the top position of the box
gets the left
method set left
initialize the outer renderer and the title
get the template name
set the size of the border in pixels
sets the cell padding to be applied to each cell in the grid
adds a listener to the list of listeners
notifies the selection listeners that a file has been received
handles a file upload
sets the name of the outer template
returns the name of the file
returns the field object identified by the given key
add a selection listener to this selection provider
remove a selection listener
send selection event
destroys the current file handle
sends the selection event to all listeners with the specified
set the cell spacing in pixels
select a type
sets the size of the slider
returns true if this file has been uploaded
js class used to load the data loader
setter for data loader jsclass
this method must be overriden by the derived class
adds an element to the select
method that sets the class name of the content renderer to be
adds a new element to the select
adds a select element to the selection
returns true if text is selected when the text field is selected
selects an element by key
set whether the text should be selected when the field gets focus
this method returns the
renders the ups image to the given output stream
adds a selection listener to this selection provider
called when the user clicks once on this object
adds a text value changed listener to the text field
set the delay time for a key
removes the given text value changed listener
sets if the open box icon should be available
notifies all listeners that have registered interest for
adds a shape to the chart
sets the client side filter
adds a shape to be displayed on the chart
get the selected key
get the value of the text field
returns the element that is selected
initializes the fields
returns the template name
sets the given element as selected
sets the top field
sets the selected key
adds a value changed listener to the field
sets the width of the box
adds a key listener to this input service
sets the value of the text field
sets the height of the box
computes the style string
create an image url for the current session
sets the text of the text field
sets the empty info text
method set max length
notifies that a progress bar has been worked
sets the info message
gets the creates the unique url
returns the icon of the tab
returns whether the icon is available
returns whether the button is a submit button or not
sets the creates the unique url
set the submit button property of this field
sets the hidden
set the flag indicating if the user is a password
initializes the renderer
closes the frame
sets the date pattern
returns the template name
check if the entered date is valid
set whether text input is enabled
sets the empty info text property
gets the value of the combo behavior property
sends an element selected event to all registered listeners
get the file name
initializes the tree view with the directory model
returns the type of file
returns the named size in bytes
returns the file list control
adds a listener to this dispatcher
called when the window is closed
add a property change listener
remove a property change listener
sets the value of the label
loads the childs
changes the directory to upper
notifies that the directory has changed
updates the display
changes the enabled state of the button
changes the visibility of the button
changes the visibility of this component depending on its state
apply the changes
applies the changes to the label
clears the listbox
removes the selected items from the listbox
move the progress indicator
adds the text
changes the visibility of the dialog
apply the text to the monitor
this method is called when the apply button is pressed
create the controls for the main tab
sets the text
exits the application
returns true if this folder is a leaf
clears the entries checkbox
loads the folders
returns the unique id of this file
remove the selected items from the checkbox list
changes the checkbox state
returns the title of this part
changes the enabled state of the anchor button
changes the visibility of the component
set the columns
apply the changes to the text anchor
changes the enabled state of the checkbox
changes the visibility of the checkbox
returns the user agent information
adds the text to the checkbox
clear the properties that have been changed
sets the position of the given control
initialize the outer renderer and title
get the template name
sets the submit button
return the control name for the given property
sets the root node of the tree
a unit test for junit
client id app id
a unit test for junit
a unit test for junit
a unit test for junit
returns the node with the given id
a unit test for junit
test set title method
clears the entries radiogroup and radiogroup entries
test get icon url
test get field by key
tests get date and set date methods
programmatically clicks the node
tests the is valid method
verify get selected key
test method for
test set tooltip
removes the selected items from the radio group
test get selected keys
test set confirm msg method
toggles the inputbox on the input box
test method for
test method for
test is key selected method
test method for
test method for
changes notification state
a unit test for junit
adds a new button
toggles the multi line input box
test of remove method of class com
test that when the focus is added to the field then
adds a listener that will be notified when the inp field changes
test of set title method of class wikipedia
set the number of columns in the radio group
test is do break
test method for
test method for
sets the width of the inputbox in pixels
changes the enabled state of the button
selects a node
change the visibility of radiogroup
test method for
test clearing the list
toggle the enabled state of the inputbox
adds the text to the radio group
test method for
test method for
test method for
deselects a node
toggle the readonly state of the inputbox
test method for
tests that add and remove events actually adds the element
change the visibility of the inputbox
expands a node
apply text to the input box
expand all the nodes that were expanded by the node id
collapses a node
returns the url to download this file
select the row identified by the given row key in the model
appends the column to the end of the list
sets the click mode
double click on the first row
add a column to this table
expand the tree
sets whether the text is plain
collapses the given row
returns the css class for the header of a table column
sends an element selected event to all registered listeners
resize the column with given key
resize the column with given key without redraw
returns the column at the given index
actions to performed when button b first b is pressed
actions to performed when button b previous b is pressed
actions to performed when button b next b is pressed
actions to performed when button b last b is pressed
get the number of rows and columns in the table
adds a spacer to the toolbar
adds a new action to this button group
adds a button to the dialog
adds a label to the toolbar and returns it
adds a toolbar group
adds a toolbar group for the right side of the editor
this method is called when this plugin is activated
returns the parent of the last entry
checks if there is a next wizard page after the given one
get the next page
checks if there is a previous page
performs the next page action
get the previous page
this method is called when the user clicks on the abort button
this method is called when finish button is pressed in
fire selection event for the current selection
p closes this dialog
closes the dialog
sets the maximum number of lines to be displayed in the drop down
returns the url for the image to display in the session
returns the url for the image for the option
gets the maximum number of lines for the text field
get the frame container
this is called by the implementation to indicate that a task has worked
sets the result viewer
returns information about the step
this method is called when the progress of the task is
resets the range
set the information message in the status bar
returns the url of the disk
add an error message to the set of errors for this field
returns true if the given field has an error
return the error message for the given field
add a button to the toolbar
add a property change listener to this property
returns the ontology text
sets the text
add a new history entry
method set scrollable
code set custom tool bar code sets the custom toolbars
sets the chart that is displayed in the panel
returns whether or not the grid includes selectable columns
shows the error message
set whether the columns are selectable
initialises the listeners
shows the given error
shows an error message
show an error
sets the selection mode
shows a warning message
shows a warning
sets the time zone to use when setting the timezone
sets the text of the comment
sets the hour
calculates the height of the tree
selects the specified row
sets the minute
action listener interface implementation
sets the second
returns the time of the event
returns the formatted time
registers a listener for changes to the stack panel
registers a callback to be invoked when a control is clicked
removes the given listener from the list of listeners
get the date format style used to format dates
fire a stack panel change event
set the date format style used to format dates
registers on context menu
selection deselection of single or multi selection
sets the time
gets the date formatter for the locale
returns true if the row key is currently selected
perform a show on the display
initializes the code window code
invoked when a mouse button has been pressed on a component
set the height
fires a selection event to all on event listeners
returns the height
toggle the hide state of a specific parameter
set the value of the width property
returns the width
set the delay between two subsequent calls to
show the window
add a menu item to the bar
removes a menu item from the menu
sets the pixel width of the foreground image of the icon
hides the panel
returns true if icons should be shown
sets the pixel height of the foreground image of the icon
returns whether this window is modal or not
shows the panel if the panel is hidden
sets the visibility of the component
adds an action to this code action group code
hides the widget and repaints it
returns the action that is associated with the given key
clears the selection
clears the expansion state
returns the first selected key or null if there are no selection
sets the time zone
fires an event to all registered listeners
appends a message to the end of the log
appends a message to the end of the screen
returns the formatted time
return the control id as a unique identifier
returns the log content as a string
attach resource to the current thread
updates the order in the database
invoked when the order of the field changes
select all checkboxes
removes a listener from the list of listeners
toggle hide the description text
notifies all registered
selects the given column
sets the show seconds flag
returns the locale used to display the time
called when the content of the content changed
add an element to the demo
sets the immediate update
remove the demo task
returns the date formatter used by this code date picker code
notifies the table that the checkbox state has changed
fires a table model event to all listeners
get the date format style used to format dates
returns true if this task has sub tasks
loads all childs
sets the hint
returns the show seconds
sort the data by the field name
change the enabled state of the editor
returns the selected time
creates the error control and adds the ok button
changes the fill width
changes the enabled state of the viewer
return the throwable that was thrown by the query or null if none
return the result of the test
set the time to the current time
set the components to be readonly or not
test method for
return the ifolder represented by this group
create the child folders
returns the mail server
get the height of the list
logs a user on the mail server
get the height of the preview panel
performs the logout
returns the mail for the given username and unique id
sets the data list
returns the row element for the given key
fires an event to all registered listeners
sets the link matcher for the model
load the index for the data
set the precicion
searches for the match of the given key
adds a set of tasks to the task manager
remove a task
create the fetch options for the current request
sets the tasks that have not been run before
proceed with a
sets the batch size
launches the task
called when this task is finished
override the transaction class matcher
use the jrebel class to set the flag
add a new class and metadata
creates a key for the entity
validates an index value
checks that all required properties have been set
convert java object to datastore key
add embedded properties
returns true if the field is a static field
return true if the property is a candidate property
checks if the parent key is valid
sets the paged cache type to use
creates a simple query with a start cursor
create the cache expiration object
creates a cursor which matches the end of the text
add the class to the repository
creates a new session with the specified expiration time
asserts that the queue contains the given number of tasks
counts the number of objects in the cache
calculate the cache key
add some parts to the key after the cache has been
calculates the cache key
invariant for this move
retrieves this adapters monster
is this a guest invariant
this is the special way to determine if this is a guest
marks the given cell as occupied by this location and asserts that
is this a organization or party
this handles cell unoccupied
retrieves the player this job is using
retrieves the number of food requests eaten
sets the food eaten attribute of the food list object
indicates whether this game object has been initialized
this is the invariant for this player
checks if the players have reached the same total points
the invariant for this class
the invariant for this class
initializes the game
tries to move the agent to the guest if it is within the
notifies the observers of a change in the viewers state
invariant for this class
persist a move
returns true if the cell associations are consistent with the board
returns whether this game game is invariant for the given board
retrieves the cell at the given coordinates
is this a guest invariant
indicates if player dies
returns the guest
returns the most recent move
retrieves the guest code
returns true if this cell is occupied by an inhabitant
returns true if the move is possible
checks whether the given point is within borders of the cell
this is a convenience method that can be overridden by subclasses to
retrieves this instances x position
applies the cell move and checks for its availability
get this columns width
called when the player dies
get this instances y position in its original form
revives the invariant
is this player in the invariant
get this layouts height
returns if this cell is still alive
gets the points eaten value for this ferecupera last cmpresponse
gets the moving guest
this method is called when the agent is die
retrieves the board this job represents
this is called at the end of each simulation
returns true if this cell is adjacent to the other cell
this is the invariant for the controller
creates the player
the implementation of the tick action called
undo the cell
get a random monster from the list of monsters
returns the from cell
this method is called every tick
the invariant for this class
load images from file
starts the animation and the animator thread to monitor the time
undo the animation
create a new monster and add it to the list of monsters
stops the animation and the animator thread
check if the monster is initialized
exits the application
returns the width of the window
player image relative to current animation
returns the height of the window currently used
moves the game to the beginning
returns the monster image for the given animation
returns the height of each cell in pixels
decrements the game after the player has been killed
attaches listeners to the various buttons
returns the total width of the cell
loads an image from a resource
moves the game to the left
moves the players to the right
creates a graphics2 d object
draws the cells
advances to the next animation
applies the given move
tests that a move can be moved outside borders
checks if the player has died
called when the observable changed that this object is showing
the junit setup method
updates the value of the food field
test that the state transition works when it is terminated
updates the status field
test method for
checks if the player has won the game
displays the board viewer window
the junit setup method
called when the observable changed that this object is showing
checks whether the game is over or not
test undo with a guest mover
gets the player last dx
test undoing a monster move
tests to make sure that if the move can be moved outside the border
setup the game before the test is run
cleanup after each test
creates a new image factory
test the player image up
empty mengers controller
test method for
gets the last dy
this method returns the width of the current board
this method returns the height of the current board
method get guest code
returns a string representation of the given objects
adds the given audit event to persistant storage
adds the exception to the audit log
notifies that audit is finished
this method will get activated when checkstyle start of
notifies that audit is finished on a specific file
notifies that audit is about to start
this method returns an code image code of the required type
sets the checkstyle properties file
get the checkstyle properties file
gets the help ctx attribute of the igeneration task object
returns the name of this check configuration
initialize the page
logs a message with code java
log error to code log kit code logger with code error code priority
log error to code log kit code logger with code fatal code priority
log error to code log kit code logger with code fatal code priority
this method handles a informational message
this method is being called when an informational message is received
is debug logging currently enabled
is error logging currently enabled
is fatal logging currently enabled
is info logging currently enabled
is trace logging currently enabled
is warn logging currently enabled
logs a message with code org
logs a message with code org
log a message with code org
log error to code log kit code logger with code warn code priority
this method returns the icon to be displayed for this code filter code
returns the name of the command in case sensitive fashion
this method initializes the code required by code
this method returns the name of the icon to be used for the
gets the name attribute of the check style object
initializes the action
return this widget as a widget
method that sends the data to the client
creates the menu bar
this method is called from within the constructor to
logs the user out
logout the client
creates the menu bar
populates the menu bar
populates the menu bar
populates the tool bar
this method is called from within the constructor to
populates the tool bar
get the next page
set the next page
returns true if the previous page can be moved back
add a new page to the wizard
get the previous page
handle back button
called when the next button is pressed
returns the wizard container
set the starting page of this wizard
returns the container
returns true if help is available for this wizard
returns the color of the title bar
sets the wizard dialog container
shows the starting page of the wizard
sets the default page image
sets the title bar color
updates the wizards components
returns the dialog area
gets the message area
sets the text of this dialogs dialog title
sets a message to be shown
sets the title area color
sets the title image
show a new message in the status bar
sets the image
returns the dialog settings object used to share state between several
sets the dialog settings for this wizard
initializes the timer
removes an action group from this menu
adds a new group to this menu
adds an action group to this menu
populates the menu with available actions
returns the code action group code at the specified index
updates the state of all actions for a given resource
removes all actions from this composite action
removes the given action from this composite action
updates the widget states based on the current state
updates the source and source buttons
adds an action at the specified index
sets the reason that the entry was disabled
populates the menu with available actions
returns the reason that the entry was disabled
adds an action to this creature
returns the large icon associated with this action
returns the action at the specified index
sets the large icon
returns the number of actions in this composite action
gets the small icon associated with this action
returns true if this is a popup false otherwise
set action small icon
gets the long description attribute of the menu item object
sets whether the event is a popup trigger
sets the long description
gets the short description associated with this menu item
sets the short description
gets the name of this menu action
gets the mnemonic character associated with this action
sets the painter to use for painting the scaled image
sets the ab sprite updater
starts the projector
sets the visibility of the layer
getter for property pause
sets the pause state
executes the document
sets the orientation of the plot
returns the component associated with the given node
returns the node that is associated with the given key
sets the orientation of the tree
set the root node
sets the resource
paint this component
sets the tree to be displayed
configures the xslt input source
load data from an xml file
builds the tree data
add a component to the tree
set the agent for which this manager is responsible
initialize the service
loads the states of the document from the given code document code
update the leadership
loads the state of the fsm from the document
create an aid for the agent whose value is the
set the interval between two automatic proposal retry attempts
draw all federations
finds the df that contains the given point
get df by aid
called when leader is elected
update dfpositions
find a federation with a given point
creates the field editors
gets a string for a content section of the given resource
sets the active editor to this contributor
needed for content assistant
return a partitioner for
return a scanner for creating lua partitions
adding the page to the wizard
tests if the current workbench selection is a suitable container to use
ensures that both text fields are set
get color of the line
get current line width
invoked when an action occurs
checks if is draw
returns true if the image scales on
set the scale for the table
updates the values of the table
update the scale
sets draw settings to true
dispose of the window and free the resources
sets the map
returns route list of the current vellum
sets the scale cursor on the main window
get the scale multiplier for this model
sets the scale multiplier
returns the line color
adds a random element to the small list
adds a random medium element to the selected medium element
clears the internal state of the token marker
get the end route mark
gets the start
calculates the total of all routes
the implementation of the unit type action called
the implementation of the undo action called
returns price which should be used for seed
set text in the given box
creates a new instance of pdftext chunk builder
returns the font used for text drawing operations
returns the context type
sets the context type
returns the title font
sets the alignment of the title see label alignment for details
sets the title font
returns the amount of space between the title and the text
sets the amount of space between title and title
returns the amount of space between the title and the text
sets the amount of space between the title and the title
gets the image caption font
sets the image caption color
sets the image caption font
set the value of image caption size
returns the header background color
sets the header background color
returns the header value font
returns the font used for drawing the value of a column
returns the alignment of the cells in the table
sets the alignment of the cells content
returns the amount of spacing between table cells after the table
sets the amount of space between table cells after the user
returns the amount of spacing between table cells
sets the amount of space between table cells
sets the color used to draw the column value
sets the column value font
set the column value size
sets the header value color
sets the header value font
setter for property header value size
returns the size of a page in pixels
get the bottom margin cm
set the bottom margin cm
get the left margin cm
set the left margin cm
returns the right margin
sets the right margin cm
get the top margin cm
set the top margin cm
sets whether to use a margin mirror
get chunk header font
setter for property chunk header context color
setter for property chunk header context font
setter for chunk header context size
setter for property chunk header color
setter for property chunk header font
setter for chunk header size
create a factory for text report chunk builder
getter for property insert chunk headers
setter for property insert chunk headers
adds a chunk to the explanation
factory method to clone only the element values
creates a clone of this data explanation chunk
setter for the url
sets the caption of the help dialog
set the context of the current expression
set the first value
sets the group of the user
set the second value
get the value of value3
set the third value
sets the dimension related to this data set
sets the rule
sets the value of the data to be returned by the method
sets the tags of this book
set the values of the array
set the name of the variable
sets the unit of the data
returns the first dimension
set the first dimension of the data
get the second dimension
sets the value of dimension2
get the third dimension
set the third dimension of the data
translates a unit
creates a new simple text explanation chunk builder
creates a new instance of simple data explanation chunk builder
creates a new instance of simple image explanation chunk builder
creates a factory for a non null explanation chunk builder
sets the i18n manager
set the country of this explanation
this will set the language of the explanation
set the owner of this explanation
set the title of this explanation
gets the value of the internationalization property
picks a random
play a track in the given category
starts the music loop
initializes the categories
handles the key pressed event
getter for property key pressed c
handles the key released event
returns the key released
gets the key released c
invoked when the mouse has been clicked on a component
gets the mouse clicked button
gets the x position of the mouse click
gets the y position of the mouse click
returns the number of mouse clicks that were left
handles the mouse pressed event
returns the mouse pressed button
returns the x position of the mouse pressed
returns the mouse pressed y position
handles the mouse released event
gets the mouse released button
gets the x position of the mouse released
returns the mouse released y position
informs the observers that the mouse has been moved
returns the mouse moved oldx
returns the mouse moved oldy
returns the mouse position after the last mouse move
returns the mouse moved newy
put an item into the inventory
put a new field into the container
this will return the item of the content
adds an item to the inventory
gets the point if an item is a full field
renders the field on the given graphics context
check if mouse is over inventory
add font to the current font list
returns the current window in the application
create a command entry of the specified type
paints the component
forwards the mouse event to the delegate class
invoked when a property changes
closes the print writer
fills the line positions of the text area
checks if the number entered is valid
this method is not supported
this method is not supported
returns a code reg exp result code object representing the
how many groups the pattern is matched
switches to the editor pane
returns true if the editor is read only
get file object returns the file object that represents the node
called when the user presses the quit button
called when a split is performed
called when the user presses the close button
called when window closing other views
win goto n msg
called when the user wants to win a cycle
sets the integer value of this property
sets the boolean value for this configuration
sets the color of the value
get the jvi version string
sets the string value of the option
performs an xop operation
get the document
sets the document offset
returns the column of the current position
throws an unsupported operation exception
sets the column number of this location
modification of the collection is not supported
tries to set the position of the caret from
returns whether the change is an undo change
if the user is in redobuff should not be changed then
get offset of ending of match brace
getter for property blinkon
returns the offset of the blink for this button
get the value of highlight id
create a copy of the current url object
get the index of the cursor within the line
return the current yank as an int
notifies the clipboard owner that it has lost the ownership of
sets the character to use for the escape key
enable optimizing
returns true if the current match is a match false otherwise
returns the pattern that was used to create this matcher
prepare command for redo
check if none of the tos fields are empty clears the
check if none of the tos fields are empty if not remove if
one to showcmd buffer
deletes a given length from the showcmd buffer
creates an instance of nv bt cleavage
sets code nv next cap code to true
process a command that was issued on a v visop
calculates the message to be returned by the method
if scanner is in gomark mode move cursor to next position
calculates a default line operator and clears the cap
deletes the xoptimistic and then deletes the lineop
adjust the cursor so that the sel character is always
process a line that was not reached
creates a default nv command
method that removes a page from a navigation
join removes all lines except the end of a line
sets the occurence time
sets the effort
sets the progress of the current task
returns the configuration resource name
sets the configuration resource name
removes an event listener
getter method for allowing events
get the allowed class for the property
gets the value of allowed role
gets the value of allowed role prefix
throws a saxexception if the line column number is not valid
add an id to the configuration
returns the string that should be matched against the input
returns true if the given string matches the pattern
executes the actual command
this method lays out the child screen block
removes the prefix from the target
creates a lock file
deletes the lock file
send an offline message to jxta server
handle a generic message
realizes the content of this widget
return the cached service for the specified interface name
cache the given service under the given name
returns a string representation of this operator
gets the version range of the resource
checks if the constraint is satisfied by the given resource
checks if the specified resource is satisfied by this operation
compares this version object with the specified version object
check if this version is the minimum version
get the maximum version
create the metadata section of the xml data
create the properties for the given element
parses a compound expression
parses a resource string into a resource object
returns true if this attribute has a value
returns whether this object has been modified since the last save
get the instance by the id
check if the given modifier is included in this combination
gets the modifier count
returns the first modifier key
returns the second modifier key
this method returns the parsed object
get the third modifier key
checks if an instance with the given id already exists
returns the offset to the given coordinates
called when the data has been entered
adds a layer to the end of the list of layers
removes the given layer from this character area
sets the origin of the line
requires that a text list widget is present
add an instance to the registry
set the size of the image to be rasterized
returns a text field that indicates that the current text is
get the service factory by the id
returns the content focus group
checks if the factory id exists
called when the dialog is closed
returns whether the content of this node is realized
returns the pcdata string of this entry
realizes the content of this widget
set whether the parser should be in pcdata mode
set the service context
add the factory to the registry
p return the parsed object at the top of the stack
render the title
sets the origin of this window
renders the content of the view
returns the origin of this window
pops the parsed object off the stack
sets the text
sets the size of the main frame
returns this components window size
sets the windowed area
pushes the parsed object onto the stack
processes a peer event
returns the area where the window is to be displayed
extracts the text from a text node
returns the button created by the method code get button code
draws the character area
scrolls the text window to the given position
returns true if the dialog is showing
extracts the text from an element
returns the background character area of this
throws an error with the given message
returns the current location in the sax events stream
requires a widget box
returns the text area that is not visible
returns true if the given attribute name is in the container
returns an enumeration of the attribute names
returns the character area renderer to be used
this method checks if this code candidate code is a superset of
returns the widget to which this service belongs
loads the service configuration
start listening for events for the given widget
cycles the animation
render peer event
handle terminal io exception
returns the top frame
returns the amount of arguments this method has been consumed
sets the log file name
writes the entry to the log
checks if the file is being output to
logs the failure to the output file
creates the output stream
set a hint of the number of visible rows
return a hint of the number of rows that should be displayed
set the row length hint
sets the enabled flag
getter for property row length hint
set the status bar text
sets the text of the role
sets the editable flag
sets the visible items hint
notify all the listeners about an event
adds a child widget to the list of children
returns a service event source
remove a child widget
sets the length hint for text area
sets the fill hint for a child
replace old widget with new widget
returns the length hint for text area
convenience method to get the event distributor
checks if the given widget is a child of this widget
returns the text of the label
returns the fill hint for a child widget
return visible items hint
get the service object
gets the number of children for this widget
sets the text of the token
gets the widget at the given index
enables or disables this role
appends text to the role
sets the position of the role
gets the status text
flattens all the nodes in the graph into an enumeration
returns an enumeration of all visited nodes
clears the visited history
returns an enumeration of the marked nodes
visit the specified node
mark a node as marked
returns true if this is a single selection mode
mark a node with a given mark
clears the marked nodes
checks if a node is marked
checks if a node is marked
stop the thread
render the current frame
sets the selected items
this method initializes this
this method is called by the container when this instance of this
initialize the engines
appends an item at the end of the list
this method is called by the parser before parse the command line
get a service object
get the service object
returns the log service
inserts an item at the specified index
returns the command line parser
handles a command line exception
sets the item at the given index
returns the resource that was parsed by this parse method
removes the item at the given index
returns the driver class name
returns the view associated with the given widget
returns the item at the given index
begin a new resource
selects or deselects an item
throw a format error
returns true if the given index is selected
throws a format error with the given message
clears the selection
gets the value of allowed role
returns the number of selected items
returns the index of the selected item
find the first visible child frame
ensures that an index is valid
finds a setter method on a class
removes the default prefix from the type if the type starts with
this method initializes the service
write the attribute to the output
sends an ascii string to the client
creates a new service instance
finds all entries for a given root directory
finds all entries in the given roots
creates a new factory
renders the status bar
run the service
returns the screen size
appends the specified string to the sequence
sets the name of the item
set the item index
appends the specified character to the sequence
handle terminal io exception
send the sequence to the terminal
update the style attributes for the video output
returns the string
put a string or a substring in this object
put an entry at a given position
returns the number of elements in this set
get the substring
returns true if the given logstamp matches the basic
returns true if the set contains the given substring
returns the code substring code component of this code saxfrequency entry code
saves the features of the committer to the log
sets the value
gets the start
returns the number of series in the dataset
set the start value
gets the timestamp of this record
get the point at the given index
gets the end
sets the timestamp value
sets the end
compares this tpoint to another tpoint
subsection of the series
creates the taged text
returns true if the current token is the end of sentence
check for a purchase rule
checks if the word is an opposition
get the aui model element
get the context model element
return the cui model element
return the resource model element
sets the type of conector to be used by the logic
sets the library path
returns the current logic conector
this method prepares the library for use
sets the name of the class to be used for the method
sets the name of the method to be executed
sets the return type parameter
sets the return type parameter
prepares the return type parameter
returns the class of the elements of this list
adds a new method parameter to the parameters definition
adds the given integer parameter to the list of parameters
the default implementation of this code icontribution item code
forces the transition to occur for the given component
adds a new parameter to the method parameter map
returns the class of the elements of the list type
returns the class of the text area
returns the class of the elements of this module
performs the user interface change
returns the class of the text field
performs the user interface change
execution method that performs the actual execution
inserts a new behaviors element into the behavior manager
insert the content into the element
setter for property library path
returns the current indentation
gets the bean name
get the package name
adds a property to this file
writes the command list to a file
adds a command line to the list of commands
gets the value of command list
creates the command for the jsp action command
create the bean footer
create the value command
finds the navigation rule
creates a string of the indentation level
execute the method
returns the double value of the method definition
returns the integer value of the method definition
returns the return value of the method
adds a double parameter to the method definition
adds an integer parameter to the method definition
sets the name of the method that will be executed
prepares the class for the execution of the method
this method prepares the method for execution
prepares the method
sets the method definition to the given value
sets the return parameter
returns the next renderer to use
returns the name of the element that this component reader
validates the element
the default implementation of this code icontribution item code
get the next renderer to be used
get the next renderer in the chain
always throws an unsupported rendering exception
returns the name of the element that this component reader
returns the name of the valid element
this method is used to get the renderer that is to be used
returns a renderer for the next button
returns the name of the valid element
returns the name of the element that this component reader
returns a renderer that can be used to draw
returns a renderer that can be used to draw
returns the name of the element that this component reader
returns the name of the element that this component reader
the default transition is performed in the given component
insert the content into the element
prepares the library for use
returns true if this a valid constraint has been accepted by the given
returns true if this filter is accepted by the given filter
get the longitude in radians
returns true if the location is valid
used to check if the filter has been accepted by a
checks if the filter is accepted by the current filter
adds the offer to this user
removes the offer from the user
adds a new offer to the list of favourite offers
removes a favourite offer from this multi offer
adds a filter to the user
removes the filter from the user
return true if the given filter is accepted by this
determine if this position is valid
returns true if the given value is within the range
checks if a point is inside this circle
add a photo to this offer
remove a photo from the offer
checks whether this offer can be accepted
check if a constraint is failed
get the resouce that is being addressed in this current context
get the resouce that is being addressed in this current context
set the endpoint address for the specified port name
debugging method to print out the contents of the database
iterate through the list and print the
sets the pop handle
sets the color processor for this polygon
sets the polygon collection of this map
sets the border color
sets the border strength
set the endpoint address for the specified port name
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
todo document me
creates the database and initializes all tables
invoked when the ok button is pressed
action handler for the apply button
updates the grocery item
parses the object o and returns a code string code object
returns a code complement text configurable limit code representation
clears the selection of all members
set the selection to be used by the entity
add the specified selection to the selection
remove the selection from the selection list
gets the value of member count
gets the value of group count
checks if a given entity id is in the selection
this will delete a choice collection from the database
deletes the specified code idecision collection code object from the database
registers a resource
register a resource and return its id
unregister a resource and remove it from the map
removes stale entries from the resource map
retrieve a resource
returns the number of elements in the cache
validates the given identifier
generate an identifier for the specified name
deletes a resource
expands all tokens in the given string by certain ones
return a xml representation of this object
compares two msg objects
compares two msg objects
returns the displayed abstract as a string in the default context
deliver all messages
sets the parent
getter of the features
produces an xml representation of the group
sets the username
returns the parent of this folder
sets the password
set to true if this thread should quit
sets the path
sets the value of the ehlo property
set the host name
set the from address for the message
sets the port
sets the apop capability of the server
sets the timeout value for this allocator in seconds
returns the authentication object
returns the number of unread messages in the pop3 server
returns the url name for this server
set parameters from a urlname
get the properties for this mail protocol
evaluates if two email folders are equal
parses an xml element
get the sender address
set the body type
returns the folder
get the body type
gets the session
returns the features of this folder
not supported on email attachment
return the textual representation of this object
getter for property store account
get the date of this message
return the store associated with this store
return the map of recipient types
returns the root node of the current book
getter for property transport account
return the transport for this connection
returns the abstract of the requirements
returns the number of virtual features associated with this
implement equals because profiles need to be compared
return the body text of this message if any
establishes the session
returns true if this message was unread
returns true if this message was marked as deleted
compares two email messages for equality
returns the message
returns the module name
look up the specified query in the list of active queries
get the account that owns this account
tests if this code email message factory code is equal to another
returns the root node of the index
return root node of current selection
disconnects and destroys this object
checks that the given file exists in ddbms database
returns the ichoice collection associated to the given resource type
helper method to get the user context
get the screen that contains a screen handle
sweep the cache
return a query for the current context of logical operators
run a common set of common queries
call this method to report usage of some information about the current
query the list of active selections
generate the list of portlets in the list
clears the selection of sharee selection
set the selection for a user
adding a user to a selection
add the given selection to the list of selection members
removes the specified selection
removes the selected member
checks if sharee with given id is in this selection
returns the factory with the given identifier
adds a fact to the fact map
get the factory with the given key
adds a message to the database
run a common set of common queries
query the settings for the manager
p query the navigation rules for the factory currently being used
formats a size in bytes as a string
gets the value of description
run a query on the current configuration
returns the date the user uploaded
initialize the blojsom comment api servlet
returns the excerpt from the source uri
determine whether this blog entry supports trackbacks
delete the blog category
count the number of blog entries in this category
return the trackback date formatted with a date format
return the e mail address of an authorized user for this blog
return the comment date formatted with a specified date format
load a blog entry
get the size of this folder
get the total number of folders
initialize this fetcher
get the total number of files
returns the url of the request
initialization method for blojsom dispatchers
runs the thread
add a message to the given context
return a content type up to the first character
returns the value of the specified tag
initialize this plugin
send email to the trackback
initialize this plugin
initialize this plugin
read the permissions for a given blog
retrieve the current users username from the session
check permission for a given username and permission
close the statement
send a comment email
closes the given result set
initialize this plugin
rolls back the data on the given connection
close the connection
send a text back to another user
launch the server
returns the number of permits that this environment does not have
sets the number of permits available in this environment
sends a text back to the client
launches the client
closes the message stream if it is open
ends the stream session
creates a new translator log object
returns the enclosing string change set
show information about the logged messages
compares this web content to another object
initialize translator services
getter for code author manager code
determines if the given page type is valid
get link manager
retrieve the page content from the cache
create the debug output interface for this panel
creates the debug interface that we install
returns true if this annotation is after a given content annotation
returns true if the given object is equal to this vccontent annotation
returns a hash code value for this set
returns the difference between the vc content annotation and this one
creates the debug interface that we install
creates a new instance of bold translator
creates a new hrtranslator impl object with an los
constructor of the table translator
creates a new code multi translator code instance
creates a new brtranslator impl object with brtranslator impl
return the command usage
constructor for the list translator
creates a new instance of lttranslator
gets the name of the filter
initializes the translator services
initializes the translator services that are used to search for translation
retrieve the list of supported types
creates a wiki name for the given user identifier
return the name associated with the given wiki user identifier
returns the current user identifier
capitalizes the first letter of a string
given a wiki string find the previous wiki page
creates a new code file watcher code instance
flush the stream
close the dialog
check for errors
overrides the default write
write a portion of an array of bytes
print a boolean value
print a character
sets the display threads
print an integer
print a long integer
print a floating point number
print a double and then terminate the line
print an array of characters
print a string
print a java object
print a new line
print a boolean and then terminate the line
print a character and then terminate the line
print an integer and then terminate the line
print a long and then terminate the line
print a float and then terminate the line
print a double and then terminate the line
print a string and then terminate the line
print an object and then terminate the line
sets whether the shape is filled or not
sets whether the cell is shaded
sets the color of the point
this method is called by a visitor implementation to visit
sets whether or not this label is border
sets whether this label is shaded
get the text of the otext field
sets the text of the message to the given string
sets the color
create a new node
creates a new instance of fast queue
returns true if the next token in the input should be consumed
consume a character
consume a string
consume tokens until one matches
returns true if any of the remaining unescaped characters in the
discard any remaining characters
discard a string
consume tokens until one matches the given until token
serialize a string
called when the thread is terminated
returns the queue push flag
set the value of queue push
this will return the ctp retry
set the value of ctp retry
specifies the maximum number of retries
set the value of ctp max retry
informs the service provider that the connection is now started
get the timeout applied before a command is executed
stops the service
set the value of ctp cmd timeout
this method method is called
returns the timeout value for connection to client
this method method will run the connection handler on the connection
run the service
set the timeout value for connection to the ctp server
get the port number this client will use to listen for connections
handles a throwable
set the value of ctp port
get the number of blocks ready to be processed
set the value of ctp ready
sets the ctp nonce
get the timeout used for notify
set the timeout value used for notify message
returns the username
set the username
returns the ctp password
set the ctp password
set the command code
set the device id
get the value of ctp server
return the command code
set the name of the server
write a log message to the log file
initializes the log file
close the log file
write a log message to the console
initialize the log file
opens the log file
close the log file
delete the log file
open the log file
close the log file
get the next string with the given separator character in the
returns the number of parameters
delete log file
get the next string with the given separator character
get the next chunk in the chunked string
sets the time
returns the time of this calendar
returns the parameter code
gets the timezone
get the next chunk with the given separator character
sets this date to midnight
remove the specified days from this date
adds minutes to the date
returns the character at a given index
return the time in gmt format
converts this date time to a timezone
returns the number of days since the specified date
compares this string to the specified string
is the date time after the start of the day
get the number of threads running in the pool
compares this string to the specified string ignoring case
returns the number of runnables for this runnable
opens the record store
returns the object
getter of the object id
returns true if the enumeration has more elements
fecha o sistema
gets all objects from the result set
creates a record store
returns the list of all log records
searches the string builder to find the first reference to the specified string
opens the record store with the given name
returns an initiliazed instance of exit command component
called when action should be handled
creates a record store
searches the string builder to find the first reference to the specified
test all threads
test the test single thread
closes the record store
the run method of the thread
return the index of the given chunked string in the chunked string
get the number of object stores in the object store
lookup a binding in the environment
returns the index of the first row in the record store
get the chunked string without the given range
returns the index of the next element in the record store
get the chunked string without the given start and end position
initializes the log
store the record into the record store
writes an log message with the input log
test of test date to rfc2822 method of class rfc2822
adds an empty record to the record store
this test writes the log file with the input file name
test of test date to utc method of class com
test of test parse rfc2822 date method of class rfc2822
test of test parse utcdate method of class com
this method writes the current counter to the log file and rotates
start the service
this method stores all the test methods invocation
test the log file initialization
tests the write log file method
returns the number of elements in the container
creates a new container for each test
tear down instance variables required by this test case
this method tests if a string starts with another string
this method stores all the test methods invocation
get the storage size of the avaliable
removes the record at the given index from the rms
test open the file
we only create one os instance for each name
we store any acceptable values from the store
resets this tt buffer tt to the beginning and the length of the
sets the push notification listener
this method stores all the test methods invocation
we only retrieve an existent name
used to get the available storage in the object store
we only allow one name to retrieve one
we only allow one get on a line the retrieve all method is
test retrieve not existent
store only the vector name
add a listener to be informed about changes to the store
test the retrieve vector method
we only allow one container at a time blow away any others
move the start position of the token
test delete vector
removes the specified listener for data store events
this moves the end of the buffer to the given position
set the object filter used by this code xmltree code
returns a string representation of this token
handle command events
set the object comparator to use for sorting the list of objects
write all objects from the store name
read all objects from the store based on name
removes a comparator from the underlying collection
serialize this object to the given output stream
close the connection to the remote resource
deserializes this object from the given stream
sleeps the given number of seconds
connects to the service
disconnect from the server
converts a byte array to a string
sends a message to the server
receive a message synchronously
this adds a property descriptor for the impls feature
this adds a property descriptor for the src feature
this adds a property descriptor for the link url feature
this adds a property descriptor for the src feature
this adds a property descriptor for the margin bottom feature
this adds a property descriptor for the icon feature
this adds a property descriptor for the rows feature
this adds a property descriptor for the cols feature
this adds a property descriptor for the margin top feature
this adds a property descriptor for the name feature
this adds a property descriptor for the margin left feature
this adds a property descriptor for the margin right feature
this adds a property descriptor for the closable feature
this adds a property descriptor for the margin height feature
this adds a property descriptor for the maximizable feature
this adds a property descriptor for the collapsible feature
this adds a property descriptor for the margin width feature
this adds a property descriptor for the page size feature
this adds a property descriptor for the mold feature
this adds a property descriptor for the multi selection feature
this adds a property descriptor for the color feature
this adds a property descriptor for the field id feature
this adds a property descriptor for the display type feature
this adds a property descriptor for the sort feature
this adds a property descriptor for the ref path feature
this adds a property descriptor for the splittable feature
this adds a property descriptor for the collapsible feature
this adds a property descriptor for the orientation feature
this adds a property descriptor for the size feature
this adds a property descriptor for the selected index feature
this adds a property descriptor for the columns feature
this adds a property descriptor for the src feature
this adds a property descriptor for the main feature
this adds a property descriptor for the order feature
this adds a property descriptor for the service id feature
this adds a property descriptor for the native feature
this adds a property descriptor for the required feature
this adds a property descriptor for the id feature
this adds a property descriptor for the code table feature
this adds a property descriptor for the event feature
this adds a property descriptor for the format feature
this adds a property descriptor for the constraint feature
this adds a property descriptor for the layout backgroup feature
this adds a property descriptor for the rowspan feature
this adds a property descriptor for the colspan feature
returns the target location request
returns the key handler with common bindings for both the outline and
update the button enablement state
updates the selection in response to a change in the viewer
this is a callback that will allow us
apply the dialog font to the control font
update the button enablement state
updates the selection
update the button enablement state
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
activates the proxy service
checks if the new updates command line argument is present and if so
compute the bundle group map
returns the static gradient start color for active graphical drawing
returns the static gradient end color for active gradient
get a color from the color map
returns the system color corresponding to the given swt color
frees up resources
returns a statement identifier for the given entity class
returns the page ad2a string
sends data to child process
reads data from the input stream and sends it to the receiver
clears the list of selected files and sets the default
clears the selection
close the reader
clears this objects signature and random data
sets the preferred reader
logs off the card for the given apdu
erase key for the
activates this key if possible in the current phone
deactivates this key apdu pair so that it will not be used
selects a file if it is valid and selects it
erase data from the selected file
check if file access is allowed
sets the type of the previous apdu
returns the type of the previous apdu
sets the signature type
returns the signature type byte
returns the parent device of this device
sets the parent device
at startup create and show the main frame of the application
returns an initiliazed instance of form component
returns an initiliazed instance of select command component
returns an initiliazed instance of stop command component
returns an initiliazed instance of previous list command component
returns an initiliazed instance of media text field component
returns an initiliazed instance of select device command component
returns an initiliazed instance of goto pair form command component
returns an initiliazed instance of media string item component
returns an initiliazed instance of pair device form component
returns an initiliazed instance of pair device text field component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of complete pair command component
returns an initiliazed instance of finish pairing command2 component
set barcode type
get barcode type
sets the scan date
gets the value of scan date
launches barcode scan activity
scan the log with the defined scan intent
return true if logger is not in hibernate
p initialize the servlet context when the cache is not available
testa un criar fabrica
saves the transient instance
return the cookie with the given name if any
get the value of the specified request header as a string
returns the request dispatcher instance that is associated with this
returns the resource located at the given path as a file
this implementation throws an unsupported operation exception
removes a header
adds a parameter name value pair to this request
returns the map of parameters keyed by name
throws an unsupported operation exception
throws unsupported operation exception
returns the port number the server is listening on
sets the port number this server will listen on for client requests
set the user role
set the content type
get the entity manager
set the query string
set the principal who has been authenticated for this request
fase restore view before
convert the specified input object into an output object of the
convert the specified input object into an output object of the
convert the specified input object into an output object of the
convert the specified input object into an output object of the
convert the specified input object into an output object of the
retrieves the action from the request
checks if an object is an entity
check if a class is an entity
returns a string representation of this exception
if there are no more write requests to disk then this is
notify all threads waiting for read access to the lock file
notify the oldest writer objects that have been accessed
sets the css class for a property of a bean
main processing method for the write thread object
create the properties of the service without checks if the properties
copiar war the cdd
descompact the current app in target
apagaes a target for validation results on this directory
apaga os target resources
c o o
this method executes a command
sets the input array
gets the next sentence
returns code true code if the iteration has more elements
returns the next token from this sentence
returns the next sentence token
checks if there are more sentences in the current sentence
validates the xml file against the schema
gets the rule with the given id
sets the tokens
setter for chunks
splits the sentence into spans
returns the analysis as a string
get the total number of chunks in the current file
return a plain text version of the sentence
sets the tokens
returns a string representation of this object
returns the rule type of this rule
checks if the given email address is valid
validates the given validator
returns true if the input string is a number
get the feature dictionary i
returns true if the given error is contained in this error
returns true if the given error intersects with this error
returns true if the given error intersects the start and end of this
compares this error with the given error
returns a hash code for this object
tests two errors for equality
called when the initialization is completed
destroys the receiver
adds an analyzer to the list of analyzers
set whether or not error reporting should be done
finds the first child of a given parse parent that is a child
only last child of a parse tree if the parse parent is not
the parse method takes the first string in the string and returns
advances code p code to the top of the build model
map the given parse index to a map of parses
returns the next sentence
generates a secret key for a user
adds a feature to the url attribute of the project object
turns on or off tracing of the caches activity
returns the xml rpc client instance associated with this connection
returns whether the object method is local or not
sets whether the consumer will use the object method local
creates an object which is implementing the given interface
initialize the toolbar
create the actions
sets the alpha numeric optimization flag
returns the value of the alpha numeric optimization flag
returns the next sentence in the stream
shows or hides this dialog
commits all xchanges for the given root object
creates a peer for this window
set the controls to match the current state
sets the current step
returns the current step
sets the enablement state of the given step
returns true if the given code step code is enabled
returns the next available step according to the current step
returns the step that is previous available
returns peer for the window
this method initializes username
this method initializes password
this method initializes login
this method initializes cancel
paint the splash window to the screen
prints the usage of the tool
setter for property orientation
remove a listener to the database
notifies all registered listeners that this database has changed
initializes the applet
set the database state
retrieves the current database state
closes the connection to the database
returns the password
returns the username
adds a progress listener to this reporter
returns the database url
removes a progress listener from the list of progress listeners
returns the driver name
notify all progress listeners that the operation finished
get the amount of free disk space in bytes
returns true if the current version of the famous file was checked
checks the oracle version
initialize this database connection
parse the database information and call this method to handle changes
tests the database connection quick start method
test the quick stop method
starts a thread for processing the documents
starts the database
shutdown the database
stops a dbpoll thread which is a service service for the
opens the mount database
start the database
shutdown the database
this method is called from the server to shutdown the service
deletes a service
delete this service
creates a new entry in the service table
create a new service
write a 64 bit endcenloc
write the end of the entry
returns true if the given object is a supported attribute
returns true if this converter supports the specified attribute
set the maximum iteration
return the maximum number of iterations to be executed
get the active tab index
gets the value of releas information
get the noncentrality parameter for the specified dimension
set if this value is a distance proportional distribution
returns the correction of this code position code
set the value of sigma x
set the value of sigma y
set the value of sigma z
initializes the system of equations and matrix conversion
set the value of sigma rx
set the sigma ry value
set the value of sigma rz
set the variance factor aposteriori
inverse quaternion equation
return the absolute value of this quaternion
gets the value of active tab index
calculates the transformed matrix after applying the matrix matrix
set the robust estimation limit
returns the point at the given index
calculates the transformed matrix based on the matrix values
open connection to database
gets the connection attribute of the jdbcdefault connection handler object
returns a matrix which is a weighted matrix with respect to the current
convert lu decomposition into a matrix
returns the deformation analysis flag
export a variable matrix2 so that the output of the covariance matrix
indicates if the specified type is restricted
sets the selected
returns whether the import is significant
set the maximum number of iterations to be used
sets the deformation analysis flag
set the opacity value
sets the three d flag
adds a vertical range marker
adds a horizontal range marker
adds the range markers to the list of range markers
adds an axis info
adds an axis info to this line
adds an axis info to the list of top axis infos
adds an axis info to the list of right axis infos
adds a color and width to the list of colors
adds a color and offset
add a comparator
delete the selected entry
invoked when an action occurs
apply the changes
calls the default action on all panels
perform the validate action
called by pressing the cancel button
sets the style properties for the given line
set a general option
set italic button
set bold button
set underline to the given value
set strike through
set foreground button color
sets the background button on a given line and color
sets or unchecks a button
sets the color for a given line
set the default values for this parameter
applies the filter to the given input
sets the default values of the checkboxes to the given boolean
applies the boolean value to the configuration
gets the default values for the configuration of the
reads the textfields and puts them into the default values
applies the changes to the configuration
action for ok button
delete the selected page
undo the last change
redo the last change
cleans the formation format
reset attributes that are currently being edited
watch all selected links
run the disambiguation link action
toggles between table and table visible
display the table of toc
hide the toc
show a warning that the template was disambiguation
sets the elements
removes all elements from the list
checks if the page matches the filter criteria
shows the popup if the mouse event is a popup trigger
updates the text of the links in the filtered list
shows the context menu if the user clicks on the context menu
displays a popup menu
selects the previous occurrence
selects the next occurrence
selects the last occurrence
toggles between show and hide toc
runs the full analysis
this method displays the toc
hides the toc
updates the tree with the new mwpane title
limits the length of the text
changes the title level of the given title tree node
selects the previous occurrence
select the next occurrence
selects the last occurrence
called by pressing the close button
find the page with the given name in the links list
action for automatic alternative fixing
update dab warning
creates the text window
runs automatic fixing of the selected list of alternatives
updates the menu with the saved selections
add backlink to full analysis page
performs the first occurrence action
selects the previous occurrence
opens the external viewer link in the selected page
select the next occurrence
create an automatic fixing for the current text
select the last occurrence
updates the popup select errors for the algorithms
remove the automatic fixing of the selected unselected list
action for automatic fixing of the advisor
opens the browser and displays the page
action for the history button
the user has pressed a button
save the automatic fixing date
constructs all the pages that are contained in the media wiki
constructs a collection of category members
add backlink to full analysis
constructs a list of embedded pages
constructs a list of links
run the disambiguation link action
opens the external viewer link
runs the full analysis
run the disambiguation analysis on the selected page
create a list of all the pages to disambiguation watch
sets the text in the window
removes the selected pages
action for adding a value
sets the run page to the selected wikipedia template
creates an update info for the selected pages
override this method to create your component
show the page that is selected in the list
show the history of the selected pages
displays an error resulting from the specified exception
display a warning message
display a warning message to the user
runs automatic fixing of selected pages
display a yes no warning message
display a warning message
displays an informational message to the user
same as ask for value but with formatting
perform validation of the form data
action for the signature
checks if text is valid for a given string
sets the page as loaded
sets whether the page has been loaded
opens the first occurrence text page
action for the replace button
select the previous text
this method returns an enumeration of wikipedia objects that should be
the user has selected another occurrence text page
invoked by pressing the login button
sets up a worker that will be reloaded after it has finished
updates current configuration
print the message to the output stream
opens the demo page
prints the current start time to the log file
print the message in the output file
adds a task to the list of tasks
opens the last occurrence text page
displays the url that is in the other wikipedia area
updates the ui after the operation finished
display the url for the other languages in the page
called before the wizard page is finished
wait for a retry
called before the background thread starts
increase the number of contributions by one
logout the user
add the name of the page to the panel
displays the url for the help system
adds a button disambiguation to the given panel
creates the first occurrence button
reloads the user information from the database
adds the button for full analysis
attempt to load all disambiguation pages from this dab template
change toc text page
creates a button to be used in full analysis mode
display the help on the command line
creates a jbutton which has a last occurrence of the type alt l
indicates if this page is an extractor for the given page
create a button with an icon which will be displayed next
open the idea in the browser
create a button with an action listener
adds a button to the given panel with the appropriate redirect buttons
toggles the contributions display
action for the view of this page
adds a button reloading the given panel
creates a button to reload an image
save the password
adds a button to the specified panel
creates a button to send an event to the gnome document
performs a full analysis
adds and redoes the next next button in the given panel
create a new button to be displayed in the table of contents table
disambiguation
creates and returns a validate button
adds a button view with the specified icon
create a button to display a viewblem
retrieves the list of internal links from the page names
adds button view history
create a button to display a view history
adds a button watch to the specified panel
creates a jbutton which watches for actions
add a checkbox labelled automatic comment
add a comment label to a panel
initializes the namespace collection with default
creates the check box for the automatic comment checkbox
initializes the list of namespace encyptnames
add checkbox close after send
show choose errors
add a chk edit talk page to the panel
adds a chk update dab warning for the text fields contained in this
saves the position of the given window in the configuration
adds a warning that the user has entered the new dab warning
add orthograph for the specified component
this method is used to extract all available dab pages
this method handles action errors associated with the check box
adds the last modified label to the given panel
check the current page
adds the default edit protection level for the page
run the bot tools
adds the panel with the given constraints to the text contents
this method is called from within the constructor to
creates the text contents for this window
action for watched pages
reload the selected error
block a given boolean
checks if a given title is in the white list
run the disambiguation
get the query result and wait for a retry
add a list of comments to the page
add a list of page elements to the tree
add internal links
perform disambiguation redir on the page
adds images to the page element
add a list of categories
this method resets all user input fields to their default values
add the language links
adds a default sorts to the list
add the titles of the page elements
adds external links
add all page elements
expand the templates in the page
checks the previous areas of the page
resets the password text box text
expand the templates in the preview
runs the full analysis
runs the full analysis page
displays the preview of the text in the preview panel
performs a full page analysis
expands all the templates in the given wikipedia and text
this method initializes the comment tree
method that toggles the toc
check the time for the edit and update the last edit time
analyzes the square bracket of the link
perform validation of the source code
analyzes the link that is associated with the current index
analyzes two curly brackets
show the browse url
analyzes the equal number of pages on the page
action for the view of this page
this is the main function of the programmatically
count the number of links
count the number of occurrences of the specified link
creates a need token login result
returns the index in the list of parameters that this
returns the name of the parameter at the specified index
get the index with name offset of the parameter at the given index
use this method to add a replacement in the html document
add a replacement action for the given text
adds an action to the list of actions that can be executed
adds an action to the list of actions that can be executed
add an action to the action manager
add a new page to the history
removes the given page from the error group
removes all error messages from the page code errors code
helper method that constructs a string from the given collection of pages
constructs a string representation of the list of values
cleans this object
purge the given page and all its titles
helper method that constructs a string from the list of pages
checks if a given item is in the white list
this method is used to automatically replace the contents with the
this method is called with a custom page fix
load the site info and initialize it
replaces all occurences of a code string code with the first
removes error messages from a page analysis
starts the game
does the move
sends a message to all connected players
determine if the given player can move
ends the current game
called by the server when a connection has ended
returns the ui object which implements the l f for this component
set the connection state
activates or deactivates the join button
prints a message to the console
opens the data connection to the given host and port
sends a message to the server
closes the connection to the server
the run method for the thread
closes all sockets and streams
sends a message to the client
closes the program
closes all sockets and streams
returns the players name
returns the client description
set the lobby
initializes the game with the given number of blocks
returns the prioritiy of the message
draws the board
initialize the servlet
this method moves all files in the given directory to the given location
get resource listings
returns the directory constant for the servlet
deduce the url filename from the url
process the exception
process the end of this tag
transform the given xml using the
xsl param1 gets the value of this field
atribui valor especificado para string xsl param1
xsl param2 gets the second xsl parameter
setter for property xsl param2
xsl param3 gets the third parameter
gets the xsltemplate for the input stream
returns the chart chart as html string
setter for property xsl param3
get the xsl template for the given resource id
xsl param4 gets the value of this field
put xsl template into cache
setter for property xsl param4
get a template from cache
xsl param5 gets the value of this field
build xsl template from input stream
builds a new templates instance for the given xsl description stream
start the server
start a monitor
read in a source on the given server
convert a string to a boolean
get a resource on the server
this method will return the property value for the given bean name
create a new empty dom node
retrieve format string for given request and locale
convert an xml node into a dom node
add an instance of jndicontext to the list of jndi resources
add an option element to the specified string buffer based on the
return an emulated jsr223 resource
returns the host name of the client
returns the host name from the ip address
gets xml as string
format the given code date code using the default locale
the method code format date code
creates a new base tag with the given name and target
returns a urlstream to read from a url
get the chart util
returns a monitor for this test suite
invokes the foreach function
returns a new java class that represents the current httputil
returns a read only nerator
invokes the foreach function
gets the bean util attribute of the bean reference object
tests the connection to the url
invokes the foreach function
returns a list of the elements in the queue
print usage then exit
creates a new xyseries
returns the item at the specified position in the given list
prepares the keyboard event list for use
gets the item at the specified position in the given array
adds a child to the given parent with the given text
creates a new task series object
prepares the text event list
this method prepares the focus events for inclusion in the components
initialize the servlet
returns a specific item from the cart
adds a new item to the cart
this method adds a pet to the cart
p clear cart
returns a string representation of the currency in the default locale
returns the cart object as an xml string
format a value as a date using the specified date format pattern
convert a double to a currency format
format a double value with the given pattern
converts the given string to mixed case
find the number of matching a given string
returns the action forward associated with the given code action mapping code
reverse the characters in a string
this method is called by the server side to handle a
this method will be called if an exception is thrown
returns a string containing only the number of characters from the right
returns a new string that is just reified with the specified number
returns a word wrapped version of the given string with the given width
wraps a word with the given width
this is used to render the element
returns a string with quotes around the given string
wraps a word with a given width
renders this form and return a string representing the form
returns a string containing all html code in the given string
returns the given string as a wml text string
render the cancel tag
replace all occurrences of a string with a string
replaces the first occurence of a substring in a string with another
renders a check box
renders the html source file
renders the html code to be displayed in the hidden tag
renders the html code that represents an image
renders html output to html writer
renders a link
renders a multi box
renders an option tag
renders the html source code
renders a password tag
renders html code a radio tag code
renders a reset tag
this method is used to generate rewriting to the given
renders a select tag
renders a submit tag
this method will render the html code that represents the component
renders the content of the text area
put an attribute in this group
the run method for the thread
load all the classes
load all classes in a jar file into factories
parses the xml and returns a command object
converts the given value into a string
initializes the set of keywords
runs the application
runs the action
copies the content of the input stream to the output stream
starts the thread
opens the stream
updates combo with history
updates combo with history
executes the command
start a hibernate session
closes the session
start a transaction
rollback the current transaction
save or update object
used by the base dao classes but here for your modification update the
loads a graph from the database
print all the graphs
gets an owner by id
loads a mapping by its id
gets a collection by id
gets a node by id
loads an edge from database by its id
gets a descriptor by id
gets an xref by its id
gets a type by id
gets an attribute by id
this method prints the graph
this method will be called when the action is performed
prints the information of the command
returns html information
this method initializes j frame
this method initializes card info
this method initializes j win menu
this method initializes j file menu
gets the current file
sets the current file
open the window
sends the feedback to the gui
get the feedback receiver
set the feedback receiver
find all the markers in the current uploader and add them to the
wait for the download parameter of the map marker panels to be sent
sets the parameters which have to be used as prefix
returns the marker
sets the marker
loads user preferences
get the name of the file to store the user preferences
remove a system property
reads the content of the file
make a directory containing the ressource files
reads the directory containing the search path expression
returns the directory where xplanet files are used or null if no
resets the system properties
sets the directory for the xplanet directory under which the
sets the directory for the xplanet directoy used files
sets the absolute path to the xplanet executable
replaces the properties of the given file with the given new
according to the jpeg images directory get preview image path
gets last update date as a string
returns the type of the page
sets the id of the type of this object
sets the configuration file
retorna o local directory relativ
sets the local directory relativ
gets the value of id
sets the id
add a url to the list of urls to search for
save the configuration to the config file
send feedback to the downloader
setter for property current download type id
getter method for run once and leave
setter for property run once and leave
checks if the formatter class is in the classpath
reloads the logging configuration
opens the help dialog
opens the about dialog
tries to guess the xplanet executable
starter will clean up and exit
expand or collapse all nodes of the tree
gets the config file
initialize the download timer
save the configuration
sets the content of the parameters panel
receive downloader feedback
called when the gui receives a feedback
create a new preview image file with the given parameters
initializes the local name prefix local name
adds a namespace to the set of rule defs
adds a validatable to the rule base
factory method for creating a rule set
creates a new error message and adds it to the list
setter for property error messages
sets the stop
returns the error message associated with the given error message or
returns the local name of this type
returns the prefix string
returns the qualified name of this type
returns the top object on the stack
pushes an object to the validation stack
return the configuration of this toolbar
returns the status of this job
sets the id of the menu item
gets the id attribute of the ref object
returns the message associated with this exception
adds a validation error for the specified rule to the list
returns the exception that was thrown by the method
adds an error to the list of rules
returns true if this message is a throwable
adds a validation error for the specified rule to the list
get the stack trace
returns the validation errors that occurred during the validation process
returns true if there are no errors
sets the value of the message
binds an error message to the root node
returns the value of the command
removes all validation errors for the specified element id
returns the error message that can be used to display the
creates a nested rule definition element
set the locale of the report
get the error message according to the locale
returns the list of rule definitions
removes all of the validation errors from this validation result
removes anonymous errors
sets the attribute
throw an exception if the given boolean is null
sets the value
sets this value to be the specified value
sets the value
sets the regular expression pattern to match in the values
sets the length of the value
sets the value
add a new rule set to the registry
adds a rule to the rule set
tests that getting the errors in the list doesnt throw an exception
test method for
tests that the add errors method adds all errors in the correct order
test method for
validate a given rule set
test method for
validate a rule set
description of the method
basedir will set the grade that will be used to identify files that are
this implementation throws an unsupported operation exception since the
include the resource
include the resource
include the stream
include a resource
does the include operation
returns the parent context
returns the profile name
get all the parameters
returns the parameter with the given name
sets the profile name
adds a new parameter to the list
resolve the value
removes the given parameter from the list of parameters
renders the node
clear all parameters
returns the collection of launch handler defs
returns a string representation of this object
returns the protocol handler defs
get the collection of script handler definitions
returns the objects that are defined for the specified element
gets the value of the parameter
returns a collection of the names of the elements
returns the type of the file
put the specified value in this magnet context
return the launch handler
add a launch handler def to this module
sets the launch handler type
add a protocol handler def to this registry
launches the application with the given profile
renders the net
add a script handler def to this script subsystem
renders the protocol
returns a string representation of this object
returns the name of the file
returns a string representation of this object
returns the magnet file
returns the url of the web application
returns the wrapped object
returns the path that was passed to the constructor
sets the magnet file
returns the index of this state
returns the scope
sets the path of this file
converts this uri instance to a url
returns the default
returns a string representation of this object
returns the if define
this implementation compares the underlying url references
renders the element
returns the hash code for this object
returns the unless define attribute of the target object
returns the time in milliseconds between each wait
returns a string representation of this object
sets the name of the file
renders the component
compares this resource to another resource
returns a string representation of this object
gets the magnet
returns a string representation of this object
sets the value of the parameter
sets the scope
returns the id of the component
get all profiles
returns the name of the parent of this file
if define set the name of the if define header
returns the pattern
sets the pattern used for formatting
returns a collection of the variables of this class
set the unless define property
renders the value
sets the id
returns the profile with the given name
returns the command
returns a string representation of this object
render the value of the variable
sets the parent name
render the value of the parameter
returns a string representation of this object
add a variable to this rule
returns the profile with the given name if found otherwise null
remove a variable from the rule
renders the component
returns the working directory
returns a string representation of this object
clear all the variables
sets the type
returns the protocol that this url is used for
returns the code of the entry
get the parameters for this instance
returns a string representation of this object
sets the command
returns whether or not the process is aborted on error
set the parameters for this object
returns the host name of the machine that generated this exception
returns a string representation of this object
sets the working directory
returns the directory
adds a launch handler for the given type
sets the wait time in milliseconds between each ais decision
sets the code for this result
sets the text content of the code text event code
returns the sorting
adds a protocol handler to the protocol
sets the magnet for the magic player
returns a collection of the parameters of this query
find an environment by id
gets the parameter with the specified name
sets the value of the is aborting on error property
adds a profile to the list of profiles
adds a script handler for a particular class
returns the description of the file filter
gets the patterns that describe the files that need to be included in
this method launches the handler for the given profile
adds a new parameter to the list of parameters
removes the given parameter
returns the extends clause
renders the element
clears all parameters
gets the patterns of the exclude patterns
returns a string representation of this object
extract the variables from an environment
returns a string representation of this object
returns a string representation of this object
returns a collection of the parents of this node
returns the selected resources
sets the protocol
get all the scripts in the system
sets the host name
returns the profile name
sets the profile name
sets the directory in which the file was stored
get all the parameters in the collection
returns a string representation of this object
sets the sorting
returns a collection of launchers
returns the main class
adds an include
removes an include
sets the description of the file filter
returns the arguments that will be passed to the weblogic
clears the list of include patterns
sets the extends clause of the query
get the paths of the search result
adds a pattern included files must not match
insert a parent to the list of parents for this node
returns true if this is a daemon thread
returns a string representation of this object
removes a pattern from the exclude patterns
adds a new script to the manager
add a path to the exploration list
removes a script from the repository
sets the main class
clears the list of exclude patterns
remove a path from the list
clear all the scripts
clear all the paths
sets the arguments
removes a parameters from the list of parameters
returns a string representation of this object
clears the parameters
returns a string representation of this object
sets the is daemon flag
adds a launcher to this magnet
removes a launcher from the list of launchers
this method finds a classpath with a given id
clear the list of launchers
utility method to get the parent classloader for a given classpath
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
requestor used by the client
requestor of data e
returns a string representation of this object
sets the interop protocol implementation
set the log object for this logger
returns the pid
returns the name of the distribution
returns an envelope from the given input stream
returns a string representation of this object
returns the version of this distribution
returns the header
returns the directory where distributions are stored
get the body of the message
set the header of the message
set the body of the message
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
this method was created in visual age
process the status of a running soft reference request
sets the exit system on shutdown
interrupts the thread
returns the console this interpreter is working on
returns the command line
this is the on command not found handler
converts this option value to an integer
as boolean returns the value of this option
add a menu option
creates a menu with the given title
print the given string to the console
center the box
displays the input dialog for the menu
mark this box as no border
displays the panel behind the previous editor
writes the specified message to the console
print a new line to the end of the current line
add a line to the box
add a package
print text into the box
adds a line to the end of the text
displays the given text to the console
displays the window
writes out the console
set the console listener for command execution
outputs a string to the user
creates and returns a new context
adds a new argument with the given name to the command line
prints the prompt message to the console
adds a new argument at the specified index
creates a new input chain object
adds an argument to this line
repeat the next character on the console
repeat a char
add text to the console
adds an argument at a given index
adds a command line option
returns a new box for the current set of parameters
adds an option to the command line
returns the ith command element
gets the first element of this type
tests if this buffer has more elements
gets the next element of this enumeration if this enumeration
tests if this list has a next argument
verifies that the actual code arg code is the next argument
sets the impact
returns a new command line arguments that can be passed to the
get info for this mbean
create and return a code mbean parameter info code object that
asserts that the next argument with the given name exists
tests if this code string buffer code contains a next option
returns the attribute name
returns the read method of this property
returns the write method for this property
create and return a new mbean attribute info instance
gets the type of the parameter
return an operation descriptor for the given method
get the mbean info for this mbean
p returns true if the named option was set in this configuration
sets the class
returns true if the option with the given name and value is found
returns the has before
creates and adds an advice ref to the list
resolves an advice reference to its definition
returns the has after
creates and adds an advice definition to the list
creates a nested group ref element
signal that the invoke has been canceled
this method registers a new invoker
creates and adds an advice ref to the list
initializes the object
returns the advices
adds an advice
resolves this groups identifier to its associated definitions
returns the name of the method
clears all the being zealous memory
parse the given list of interfaces and set the list of interfaces
returns the return value of the method
invokes the method
returns true if o is a class and all interfaces in this package
returns true if the method was invoked
set the configuration file
returns the target of this proxy
creates a new method
adds a class to the list of classes to be generated
creates and adds an advice definition to this container
creates a new parameter
creates a nested group
chop the first element
add an attribute to the method descriptor
finds and returns the next argument
get the number of elements in this buffer
returns a copy of this command line options object
convert a command element to a string
create and start a new exec handle
create a new exec handle for the given environment
adds an operation descriptor to the set of operations for this mbean
create a new exec handle for the given command line
looks up the entry for a given locale
sets the value of the specified field
unsets the value of this literal
method get py object
method set py object
add a new element to the end of the sequence
test method for
returns a collection of objects that are included in the file
returns all links in the model
sets the profile name
sets the address
sets the quality
returns the parent of this node or null if there is no parent
returns the properties of the document
return the property with the specified name or null if none
return all property keys
adds a new pattern to the pattern list
returns the maximum throughput per second
sets the maximum throughput for the period of the simulation
returns the logger
set whether the emulator is explicit em after a suggestion
set the logger to use
sets the core thread pool size
sets the maximum thread pool size
submits a callables code callable code task to the service
sets the thread keep alive time
gets the creation instant
get the perishable object that this controller is controlling
gets the expiration instant
reset the creation time of this lock
calculates the expiration instant based on the creation time of the
creates the appropriate thread pool executor to use
execute the given code runnable code
submits a task to the executor service
returns the category of the given parent within the given category
updates the timeout for the monitoring task
creates a nested parameter
set the service factory
the name of the operation
configures prevalent system
returns the scope with the given name
get the next time the wake is processed or processed
sets the time to wait after a wake up action is triggered
fires an expired event for the given object
looks up the object in the result set
adds exec to the list of executables
called when an error occured while parsing
called when the execution of the task fails and the
this method invokes the execute method of the given code result code
the main method of this class
merges all global properties of this global properties object with
applies a restriction state to the current state
stop the scheduler
shutdown the scheduler
disables the output stream
create a session for this user
destroys the session
clears all forms
creates a new parameter
renders the template with the given context
retrieves the file name from the code content disposition code
adds a state machine to the database
retrieves the field name from the code content disposition code
returns a copy of this path
moves the index to the previous segment
create a new session
move the index forward one position
destroys the session
creates a session
sets the value of the given key
returns the value of the key
destroys the session
creates the form of the current call
this method is not supported
clears the current form for the given call
throws an unsupported operation exception
clears the top form of the stack
returns the current form
process the result of the call
clears the list of calls
aborts the execution of this goal
test method for
test method for
test method for
test method for
convenience method to report a parse error
test method for
this method sends an error to the client
convenience method for error messages
test method for
test method for
test method for
test of retrieve method of class form stack
test method for
test method for
test method for
test method for
test method for
test method for
test of perform method of class conexion db
test method for
test method for
test method for
test of current form method of class user data form
test the when section of the choose choose node
test execute with multiple select and a single execute
test method for
new instance of this class
adds all agents to the group
sets the domain
set the naming service
this method is invoked when a method is invoked on the proxy object
asserts that the given object is of the given type
sets the name of the class
throws the given unrecognized object
returns true if the condition executed
set the value of object
sets the condition executed flag
sets the message
returns the resource uri
set the factory to use to create new instances
get the soto me life cycle object
sets the uri
returns the properties for this fast map
sets the expected value
sets the properties for this fast map
returns a copy of all class definitions stored in this model
sets the service name
get the service implementation class
returns the class definition with the given name
sets the service to communicate with
returns the attributes
add a class definition to this object
checks whether the property value is expected or not
adds an attribute to the xml tag
returns the value of the specified attribute
this method sets the static loader for this object
sets the result object
returns true if the given attribute is present
returns true if this game object is created
sets the state to loaded
returns true if this game object is loaded
get the lifecycle
state that this environment is initialized
returns true if this game object is initialized
indicates that the experiment has started
a convenience method to load a resource
sets the state to paused
returns true if this game object is paused
disposes the widget
returns true if the widget is disposed
asserts that this module has the expected state
returns the j2me meta datas
sets the authority
sets the fragment
sets the query
sets the scheme
converts a value to a template
return the source error
print the stack trace
adds a template element to the list of template elements
renders the template as text
returns the time in milliseconds
sets the queue
setter for topic
sends a text message to the destination specifyed in the message
sends a serializable object message to the jms destination
sends a jms text message to the topic
sends the serializable object message to the jms destination
returns the next message to be processed
sets the topic
set the selector string
sets the message listener for this connection
sets the message listener for this connection
sets the pool size
makes sure the pool size is correct and removes any listeners
makes sure the receiver can be called after processing each message
sets the cluster to which this connection belongs
send a message to the cluster
registers a namespace definition
set the name of this attribute
sets the class name
includes the content of the specified context in the given stream
sets the pattern to be used by this formatter
sets the value of the ignore case flag
sets the name of this filter
sets the declared methods attribute of the clazz object
sets the visibility of the field
parses a string and sets the signature string for this object
performs the match and returns the results
returns the value of the property with the given name
add a definition to the registry
adds a package to the list of packages
sets the class
searches for the property with the specified name in this property list
getter for the class of the field
get the service id
sets the service
gets the service attribute of the service data object
tests on create method of type list type
tests on create
tests on create method
lookup the service
initialize this service
loads the container from an input stream
test accepts instance of selector
a method to load the xmlized container
a method to load a
a method to load the smart card container
returns a soto container from the given file
a method to load the registry
adds a definition to the registry
a method to load the editor with a file
start the service
gets the environment
dispatches an event to all registered listeners
dispose of resources
instantiates a new child instance
creates a view with the specified scope and adds it to the
the object that holds the list of resource handlers
load definitions from an xml file
selects a resource handler for the given uri
registers a life cycle manager
set the class base for the generated resources
resolves a resource
looks up a key in the lookup chain
loads and parses the configuration file
set the value of this property
sets the value of this parameter to the given object
set the value to null
add a critical query that will be executed in the query
looks up a jndi registry
closes this registry
this method will bind the server to a given port
bind to a remote initial context
returns the alignment of the title see label in the title bar
returns true if the page at the given index is enabled
adds a new page to this tabbed pane
liefert das ith page view
prints the stack trace of this exception to the specified writer
prints the stack trace of this exception to the specified output stream
create a registration
creates a signature object for the given algorithm
validates the start and end dates of the period
sets whether or not the window can be closed by the user
creates a signature object for the given algorithm and provider
creates a new key pair generator for this key pair algorithm
creates a new key pair generator using the given algorithm and provider
create a new cursor with the same parameters as this one
create a new cursor instance using the given feed and listener
sets the number of statements to be executed in the batch
gets the value of a property
returns the elements in this collection
returns the string value of this name
renders the template string if applicable
returns the namespace for a class
returns the namespace for the given method
sets the encoding style for this font
sets whether the resulting xml will be indented or not
register a serializer with a class
adds a value to the value list
adds a value to the value list
adds an entry to the end of the linked list
calculates the period statistics
serialize an object to xml
checks if is indenting ouput
get the average period
returns the content of the file
renders the template
get the maximum period
sets the indentation mode
get the minimum period for the entire simulation
sets the encoding to be used for the stream
returns true if the item with index i is selected
returns the encoding used for the stream
registers a namespace factory for the current scope
returns the namespace for the given class
returns the namespace that is mapped to the given method
adds a selection listener to this selection provider
returns the prefix associated with the given namespace uri
return the serializer factory used by this serializer
encode leaf method comment
return the namespace factory
returns the xml buffer
adds a new namespace to the namespace map
returns the encoding style
returns the parent buffer state
adds a new namespace to the namespace map
encode a map of objects into xml
remove a selection listener
add a namespace to the list of namespaces for this method
returns true if the queue is empty
returns the namespace prefix
returns the uri of the file
returns the element namespace
returns the prefix
adds a namespace to the namespace list
sets the uri
returns the name of the element that this component reader
set the prefix for this namespace
sets the namespace prefix
generates the hash code
returns a list of all attributes
returns the hash code for this object
returns a string representation of this object
returns whether the ouput indentation is active
returns a string representation of this object
check if the current element is empty
checks if the xml string is a nested xml string
sets the indentation mode
returns the content of this string buffer
returns the list of namespaces declared in the wsdl
returns the nested xml string
add an attribute to the diagram
adds an attribute to the list of attributes
performs the action for the given selection index
removes an attribute from the diagram
adds start element to buffer
clear all attributes
returns the default layout for this class
adds a namespace to the declared namespaces
compose a string with cdata nodes
determines if the given namespace is declared
removes a declared namespace
clears all declared namespaces
adds the content to the current xml buffer
returns the created version of the object
sets the created
was this task assigned to a task
sets whether this creation is assigned or not
sets the nested xml string
process the document
set whether the map should be mapped to the prefix
if create processor is true this method creates a new instance of
sets whether the current element is generated as a start element
add the content of another cdata node to this buffer
checks if the factory for the given namespace uri is already registered
returns the content of the message
get the result of the parsing
adds a package to the list of packages
end an element
return the object factory
returns the document position
returns the encapsulated sax exception
resolves an external entity
end the scope of a prefix uri mapping
add an attribute with value specified
receive notification of a notation declaration event
returns the namespace uri for the given prefix
unparsed entity declaration
put the handler state in the result map
get the object that serves as the result for the specified handler state
receive an object for locating the origin of sax document events
this method is called when the sax parser encounts the beginning of
this method is called when the sax parser encounts the end of the xml document
begin the scope of a prefix uri namespace mapping
end the scope of a prefix uri mapping
returns the language code
returns a string representation of this object
returns the title that was parsed
returns the date the result was created
returns the parsed format
returns the description that was parsed
returns the identifier that was parsed
returns the rights set in this entry
implementation of the characters method from the interface
process notification of ignorable whitespace in element content
throws sax exception
returns the creator that was parsed
returns the relation generated by the algorithm
this method is called when an error occurs during parsing
creates a string representation of the scribe
throws a fatal error
returns the subject that was parsed
returns the result of the parsing
returns the result of the publisher handler
returns the parsed language
returns the source
returns the coverage that was parsed
format an element
returns the contributor that was parsed
get a service object from the registry
add a service to the set of services
adds a new import
adds a task to the list of tasks
called before the execution of every sub command
mark the task as failed
add a namespace definition to the element
do something after the execution of the script has begun
fails the test with the given message and cause an exception
resumes the thread
add a task to the list of tasks
return the failure message
returns true if the last call to code next code will throw an
set the default view manager
returns the underlying throwable
add a new view manager to the container
initialize this configuration
creates a nested lt def gt element
sets the name of the view
returns the object that this class encapsulates
set the export
sets the object that this node represents
sets the view type
loads the template context
creates a new environment
load the template context
called to indicate that all tasks are done
sets the current fail view on the current command
sets the view name to success
adds a new process to the workflow
this method is called when the user selects an item from the
returns the value of a named part
checks if the offer is valid
return true if the given attribute name part matches this attribute part
called when the selected row is changed
lookup the named node in the tree
called when the user presses the name part
called when a name part has been written to the
returns the name parser for this root
returns the number of parts in this message
unbinds the specified name
sets the current index
indicates if there are more parts to be read
returns the next part in the name
returns the i th part
adds a part to the name
put an object in the cache
remove the specified part from the list
gets the first part of the name
returns the value of the named property or null if the property
returns the last part of the name
returns the last part of the name
returns the first part of the name
called when a new object is added to the parent
creates a naming enumeration for the given child nodes
stores value in the context
get the value from the context
adds task descriptor to the current transaction
executes a sync task with the specified name
execute a nested task
execute the task
executes the tasks for the given descriptor
executes a sync task
returns the name of the task
returns the name of the level for a given priority
prints a message to the standard output
creates a new transaction
prints the given throwable to system
registers a transaction
unregister the transaction
get the server address for a given node
adds a response to this multi status
gets the response at the given index
checks if this response contains an error
returns true if this response contains the responses that
returns the domain name of this property
returns the number of resps in this collection
returns true if the message was a error
returns the throwable that caused this exception
returns true if the given sync event listener is already in the reverse map
sets the socket timeout listener
this method is used to acquire the domain name of the request
returns the number of elements in the reverse map
get the multicast address used by this multicast client
retrieve the multicast port used by this controller
start the channel
close the multicast group
creates new task output instance with specified name
dispatch an event to all registered listeners
adds a listener for discovery events
returns the last usage time of the service
returns the number of times this query was created
clean up the object when it is being pooled
two tcpaddress objects are equal if they have the same host
returns the path of the current document
parses a query string and returns a query string object
returns a new connection using the given tcp socket
parses a name from a string
convert a name to a string
sets the scheme
returns an input stream to read from the file
returns a string representation of this object
returns the last exception encountered if any
returns the query string
returns a string representation of this object
returns the number of sockets in the list
returns the string representation of this query
returns the selector
returns the socket queue that this queue item is associated with
returns the local port to which this socket is bound
sets the size of the server socket read ahead buffer
returns the address to which the server is connected
returns the parameters of this request
returns the address of the server that received the message
returns the connection object that is running the client
adds a parameter to the list of properties
returns the local address this socket is bound to
returns the value of the named parameter as a string or null if
get the receive buffer size set on the rtp data channel
gets the acceptor daemon thread
returns the so reuseaddr socket option
sets the reset interval
returns the server socket state
returns true if the server socket is closed
waits for an incoming request and returns the response
close the connector
set the maximum number of acceptor daemon threads on this server socket
used to write a message body with the code response code
sets the number of selector daemons that will be created in the
listens on the socket for incoming
returns a string representation of this object
mark the current position in the array
resets the array position
clears the array
returns the number of elements in this queue
returns the number of bytes in the buffer
reads the array data from the stream
sends the next command
writes code len code bytes from the specified byte array
writes the contents of the given byte buffer into this collection
skips over and discards code skip code bytes of data from this
end the timer
increment the current value
returns the average of the numbers in this array
increments the long value by one
enable or disable all of the statistics
adds a stat to the collector
returns the object that has the given oid
removes a single instance of the specified element from this
remove a class loader from this set
returns the number of references for a given oid
sets up the test environment
returns the address of the server
executes the command on the server side
sets the response sender attribute of the judge object
shutdown the incoming command queue
add a sibling to the current service
called when responses are received
get the object
removes the lock from the work queue
returns the identifier of the command
gets the from address
gets the calling vm id
returns the invoke command
getter for invoke delay
sets the target of the message
get the invoke time
get the command to invoke
set the return value of the method
gets the value of the return property
retrieve the command that was executed
this method sets the command to invoke
returns true if this serializer uses marshalled objects
dispatches an event to the event dispatcher
gets the origin address
how many times this expression has been cleaned
return the number of references to this vm
return the number of instances of a specific vm
check if a client is in the table
called when an object reference is found in the object pool
register an object and its associated virtual machine id
dereference an oid back to the virtual machine
removes timed out clients from all the clients
sets the size we are using for the server we are using
returns the i th segment contained in this string
tests if this domain contains the specified domain
this method compares this domain name to another
start the server
returns a string representation of this object
get the data object for this message
checks if the domain name is defined
initializes the config
returns the id of the vm that owns this virtual machine
returns the address of the server
returns the server address for this connection
returns the server side reference with the given transport type
returns the oid for a specific transport type
removes a connection server from the multiplex server
returns the service mapper
add a service to this service locator
return a server instance
getter for property call back
get the current time
set the value of the call back property
returns the multicast event channel
sends a ping command
get the multicast address
stop the server
add a service disco listener
start the server
adds a listener for jndi disco events
return the service that the session will use to access the remote service
dispatches an event to all info interceptors
an interceptor that can be used to run the test
an error has occurred
dispatches an event to the method
prints the stack trace of the given exception to the standard error stream
set the delegate service
test method for
test the registration of stub remote references
performs the search and returns the match result
initializes a project
returns the distribution info
gets the process id
gets process directory
returns the shutdown timeout
returns the maximum allowable retry interval in seconds
set the shutdown timeout
sets the maximum retry time
sets the directory to process the java source code
sets the os pid
returns the last access time for this file
return true if the timeout has elapsed since the last access timeout
copies all properties from the given hashtable to the new project
return true if this pool has been shut down
kills the process with the given pid
returns a string representation of the object
the target of the new ant project to execute
create a property
add a reference to this variable
start the dynamo service
run the main loop
atribui valor especificado para string dynamo home
sets the profile
adds a property to the list of properties to be checked
sets the main class
adds a new option to the option list
cp sets thhe value for this field
add a xoption to the list
sets the java home directory
sets the arguments to be passed to the main method
sets the maximum allowable retry interval in seconds
sets the command name for java
set the polling interval
adds a process configuration
returns a list of vms
set the interval for the status bars
checks if a process with the given name is already in the list
return the process configuration for the specified name
set the shutdown timeout
sets the base directory of this processor
returns the directory where the processes are located
getter for property invoke
returns the common directory
convert this object to command line
get all profiles
adds a jar file or directory to the classpath
closes all loader instances
returns the server address
returns the transport provider used by this transport service
sets whether the element should be deleted when it kills
export the object to the server
the server started
description of the method
add a target to the cluster
description of the method
release all ports that are busy
this method sets the home directory of the corus
method called when the server starts
close the connection
deploy an application for the given file
tests for equality between two host ids
returns a string representation of this object
returns the channel
gets the server id
returns the object that has the given oid
returns the command
sets the command to execute
returns the invocable
gets the origin of the message
set the stub for the object
get the stub for the object
sets the oid of this object
returns the server
returns the server id
return the stub for this object
return the number of accesses
dispatches an event to the interceptor
dispatches an event to all info interceptors
returns the pid of the corus system
find an object using the given key
returns an object for the given key
creates the control panel
creates an object using the manufacturing mechanism
initializes the panel
returns the event topic dispatcher
returns true if this element has an exception
adds a listener to this event bus
destroys the named topic
removes an event listener
adds a channel to an event bus
executes the given task in the current thread
returns true if the given thread is a executor
initializes the event pump
fires a specific topic event
posts the given callable to the event queue
removes the first item from the queue and returns it
fires a specific event
executes the given event task
posts a new task to the queue
removes the next item from the queue and returns it
finds the most specific method of the given class
returns the name of the source file or code null code if none
returns the line number of the beginning of the text
returns true if this value is a number
get the server location request
get the answer to the server locationanswer
broadcast a server location request to all connected clients
requests the server location
listens on the server
waits for an answer
returns the ip address of the client with which the data is received
this method is called when the user clicks on the register button
this method handles the disconnection of the client
the run method of the thread
starts the server
starts the server
register a remote logger server logging interface
unregisters a logger server logging interface
register a communication handler
adds a communication handler to the server
remove a handler from the list
removes a communication handler from the server
executes the given command
remove a communication handler from the list
add all the handlers in the code co vector code to the
notifies all communication handlers of a mouse click
notifies all communication handlers of a message
notifies all communication handlers of a key event
returns the value of this constant
sets the value of this boolean field
get the current value of this boolean preference
get the current value of this double preference
get the current value of this float preference
get the current value of this int preference
get the current value of this long preference
get the current value of this string preference
set the new value to the boolean preference
set the new value to the double preference
set the new value to the float preference
set the current value of this integer preference
set the new value for the long preference
set the current value of this string preference
sent after the indices in the index0 index1 interval
sent after the indices in the index0 index1 interval
sent after the indices in the index0 index1 interval
sent after the indices in the index0 index1 interval
returns the value of the adapted property or null
removes the property change handler from the list of property change handlers
this encodes a string
this method gets called when a bound property is changed
the code label provider code implementation of this
creates a new album
this adds an album to the item
marks an item as changed
this removes an album from the item
initializes the selection in list and action
registers a listener with the selection
returns the album selection in list
returns the new action
converts the given subject value into a date format
returns the edit action
returns the delete action
returns an instance of the double click handler
opens an album editor dialog
returns the classical
sets the current subject value
returns the composer of this book
registers a listener with the model and classical
sets this albums title and notifies observers
returns true if this album is mutable and not empty
the composer enabled property has changed
sets the artist
sets this albums classical state to the given value
sets this albums composer and notifies observers if it has changed
returns a string representation of this album
returns a string representation of this album
asserts that the given file contains the given error code
compare a file with a file
reads the content of a file
creates a line
get the value of the given field
sets the field value using the given integer
test get value
get the value of the given field
sets the field value in the record
error indicating how many bytes are stored in the given field
get the value of the given field
test the code mainframe code field
sets the field value in the record
copy constructor used for external field
returns a clone of this code array list code
fixes a description string
gets a copybook loader
clone this field
creates a new abstract line definition record from the input file
gets the name of the given loader
returns the current position of the iterator
sets the current position of the cursor
sets the name of the given type
constructor for external record data
returns the length of the value
sets the length of this cell
sets the name of this widget
set the record id of the current configuration
sets the value of the description text field
gets an integer field from a line of the file
returns the update status of the message
sets the value of the type of this cloud
is this record a new record
clone this record
set the new value
gets an integer field from a line of the file
returns the keycode
returns the record store index
sets the name of the record store
returns the date field for the record
sets the decimal value of this field
returns the code dtar0020 record qty code field
sets the quantity for this record
returns the sales retail field for this record
cell format mask
sets the sales number of the record
cell format value
sets the record id
scan copybook4 redef level
sets the value of the parameter
checks if the given element has the
sets the default value of the field
sets the record name
the cobol name is the name of the column
used internally to set the name of the column
returns the sub key
sets the current sub key
error handling routine if size is wrong
returns the record type
adds a list of fields to the tst
sets the record type
returns the layout detail that is associated with this panel
check that a conversion error is ok
getter for property system
gets the value of the specified field
get the value of a field
sets the field value
adds a child definition to this definition
is a rebuilt build tree required for this folder
configures the value of the system property by calling
sets the value for the given field name in the record
error handling routine if conversion fails
sets the line provider for the layout
returns a string representation of the object
converts an object to a date
returns the list char
get the value of the field with the given name
gets the field text
get the full line
adds a record field to the current layout
sets the line provider for this layout manager
sets the character used for listing
returns true if a rebuild tree is required for this node false otherwise
adjust the length if necessary for the field if it is not
if the field is a length field it is not already
returns the copy book
adjust the length field if possible
reinitialize the record with the new size
sets how the books are copyed
writes the start document for a 100 encoding
opens the file with the given file name
set the layout
return the object representing the field
sets the layout
writes a line following text
open the record file with the specified name
opens the record file with the given name
generates the layout for the given container
sets the value of the delimiter field
compares two byte arrays for equality
error indicating that a given field value is invalid
gets the quote
sets the value of the quote property
check that a conversion error has occurred
returns the position of the record within the data array
sets the font name
gets the structure of the field for the given name
sets position of record for header
error handling routine if there is a conversion error
set the format for the binary data
gets the structure attribute of the environment manager object
returns the record separator list
sets the value of the rec sep list text field
test the main method
sets the record separator value
sets the font name of this font
returns the record style
sets the style to be used for the record
returns the file structure of the current frame
copy the contents of the specified dialog into the current document
sets the value of the file structure text field
copy the layout and layout files from a copy definition
create a new layout and copy
adds a record to this external record
init record id getter
returns the indexth record in this table
sets the name of the record tree layout
returns the number of records in this data set
add a record field to this class
returns the record field at the specified index
returns the number of record fields in this record
returns the number of selected rows
sets the system name
get the index of the row in the layout
get the value of the tst field
resets the field ordering in ascending order
sets the current layout
returns the current layout for fixed length columns
checks if the table is changed
gets the current layout
gets the actual line number
closes the window
called when the table has changed
returns the parent record
set the one line hex value
set hex format for display in percent
sets the current line
sets the line to be full
setup screen fields
initialization of the panel
sets the parent record
starts the search
updates the line numbers for the given start and end lines
load list of fields from file
creates the file view
creates the columns view
creates a new record view for the selected lines
sets the parent of this record from the name of the parent
this method is called when an action is performed
find the parent of a line node
returns the number of sort fields
sets up the display of the record
executes the action
returns true if the requested action is available
returns the current row
returns the standard insertion position
sets a new row for the table
gets the current row in the table
deletes the file or directory
executes the action
sets a new row for the table
returns true if the given action is available
deletes the current line
sets the status of the direction button
closes the search screen
setup screen fields
inits the 200 settings
execute the given action
adds program specific menus to the menu bar
return true if the current row is a row and false otherwise
adds a line to the list
saves the current selection in a csv file
run a compare dialog using the given code diff definition code
runs a compare dialog using the given diff definition
compare the layout with the default layout definition
adds program specific menus
returns field width
returns field height
returns the number of columns in the specified record
gets the field height
saves the current selection in a csv file
change the display type of the list
adjust the current field position
changes the number of fields that are displayed in the field panel
adjust the position of the current field according to the current
gets the maximum field number
closes the current window
moves the row forward by one row
moves to the next field in the field list
executes the action
checks if the field is valid
returns true if the given action is available
get the value of the field
fire a change in layout index
returns the layout list
sets the field number of the field
returns the position of the current row in the display
returns the number of selected rows in the table
sets the record table details
set the height of the rows
gets the filter field at the specified index
sets the table to display details for this field
set filter field by layout idx
assigns the combo fields to the field models
returns the current field list
set the details of the selected table
returns the field model used by this panel
description of the method
gets the filter field list
invoked when an action occurs
adds a selection panel to the layout
get the index of the field that is currently being layouted
creates a filter field with the correct index and filter fields
update the record flag in the record table
set the index of the filter field
init the file recent files
returns the number of fields in the record
returns the current row of the table
initializes the fields for the screen
update the include flag
help screen for documentation mode
load the data source ids in the db combo box
add the gui components to the gap base panel
returns the selected value
set the description of the layout
returns the index number of the currently selected item
sets a new row in the table
loads all systems in the system combo
set the bounds of the frame
put file layout
set the layout for the tab
stores a file in the given layout
notifies the editor that the layout has changed
returns the current file name
put up the previous layout
register all standard loaders
this method is used to determine the correct
set the list of keys
fetches records from rs cursor
returns a clone of this record
fetches a single record from a result set
returns the number of fields in the report
gets the value of the given field
sets the value of the given field with the given string value
corrects the file name
set the value of the field with the given object
returns the combo code
insert combo values into combo record
sets the combo code
gets the next key
gets the value of the combo value property
sets the value of the combo box
common initialization code
sets the column sizes
set the key list
returns a clone of this combo record
sets the name of a combo box operator
returns the name of the recent file
sets the search system for the given operator
gets the value of the given field
set the value of a field
set the value of the field with the given object
sets the parameters of a given combo
returns id of combo
sets the parameters for this query
opens the rs cursor
open the resultset
sets id of combo
returns the absolute record of the data that was fetched from the source
returns the next record for this combo box
returns the next table record from the result set
returns the name of the combo
returns the name of the recent layout
this method sets the column sizes
sets the value of the combo name text field
returns the next table list record from the database
deletes all records from the database
read the application properties and database file and load the data
sets the key initialization of this table
sets the key array
overrides the clone method to produce a copy of an object
adds a line to the layout
overrides the clone method to produce a copy of an object
gets the value for a given field
gets the value for a given field
set a field with a string
sets the field with string and updates the detail
set the value of a field in the corr element
set the value of a field in the pmd datastructure
gets the tbl id value for this get company report parameters type
sets the record id for the current function
return the table key for this field
sets the value for the table id column
sets the key table to be used for this query
gets the value of the tbl name property
opens the result set cursor
sets the status bar to show the given string
sets name of table
returns the number of columns in the model
return the child records
this method returns the html filename for the file
create a new record
set the keys for this init item
reset the search
clone this record
set the record id and value
returns the number of fields in the record
returns a clone of the record
get the value of the field
deletes all records from database and child records
sets the record name to search for
set the value of the field with the given string
returns the number of fields in the record
set the value of the field with the given object
returns the child record id
sets the record id of a search arg
generate a unique key to be used for the next record
sets the child record
close the statement and all child records
sets the value of the given field with the given object
sets the description of a search
sets the child key for a given record
sets start value
opens the result set cursor
sets the record type operator for this record
sets the value of the field
get the next record selection record from the cursor
sets the field value
deletes all records from database and child records
sets the list char operator
gets the next key to be used for caching information
constructor for record fields
set the array of keys for the table
set the initial key values
returns a clone of this record selection rec
clone this record
returns the number of fields in the record
gets the value of the given field
gets the next key to be used for the next record
set the value of the field with string
sets the value of the field with the given object
set the value of the field with object val
add a column to the table
insert a record into the database
close the statement
returns the record fields rec for this query
initialisation of the class names
initializes the gui for example display
initializes the gui
method g100 set table fields
set fields to display the coordinates for the current row
initializes the gui for the demo screen
sets the parameters of the pgm params object to those found by the user
set the base type
sets the options according to the current selection
a utility function that layers on top of the look and feels
sets the parameters according to the user input
this method is used to check the date format
inits the 100 screen fields
initialize the connection to the database
delete all records from the database
initializes the gui for example display
initializes the message frame
check record and update
returns the name of the cell at code row code and code col
returns the value for the cell at code column index code and
generate the next key to be used for a new record
this is a private wrapper method
insert a record fields container into this record
initialize code system jar file code and
close the statement and record the result
initialize the fields for 100 screen
write the w1100 jar file
initializes the gui for example display
method g100 set fields
initializes the gui for the demo screen
convenience method for getting a cell name
sets the initial values
method g200 set screen fields
method g100 set fields
returns the value for a cell
creates a new connection using the information stored in the
builds the jar combo box
invoked when a component loses the keyboard focus
set the fields details in the field table
sets the record table details
save this object to the default file
inits the 200 screen
update record separator list
returns the parser instance
returns the insertion post line
update the display of the database
returns the standard position
adds a component to the code tabbed pane code
creates the view for the selected rows
allocate a new extended record db
creates the column view
returns a string representation of the object
set a property
returns the column name in the given layout idx
get column count
creates a new record view
returns the name of the column at column index
returns the value of the particular column
setup the fields
get the real name of a column in the layout idx
adjust column by shift and shift
creates a new error frame
sets the tree column
method get date display
returns the record index of the given line
has the format changed since the last save of the file was modified
notifies all listeners that have registered interest for
returns the field details of the given layout idx
this method validates the field sep
notifies all listeners that have registered interest for
returns the value for the given column
creates the xml tree view of the selected tree file
sets a value in the given column
registers a type in the record
converts an object to a integer
return the type of the field
returns true if this type is a binary type
method get date formater
registers a format for a cell format
gets the format for the given type
add external fields to a record
get the value at the specified cell
set the values in the table
sets the values for the columns
returns the column position in the array of the last column
this method always returns false
returns the text value at the specified position in the given
sets the values of the options
deletes all selected lines of the file
returns the hex value at the specified position
adds program specific menus
describe code def left code method here
create a combo box to display the predefined values
saves combo record
load the dbs
set the value of the cell
sets the database details
move to the right panel
sets the row
opens the def right panel
saves a record
save the table data and update the list
saves the values entered by the user if ok
saves the current record
insert or update an record definition
creates and returns a jbutton configured for use in a jtool bar
registers the specified action listener to receive search events from this
this method initializes re action button
get the selected row
sets the visibility of the children
get the record at the given row
add a record to the table
delete record from database
set the values in the table
creates a clone of this combo box with the given name
creates a new table and sets its properties to them
changes the record in the panel
create a combo record with the fields
stops all editing actions on this table
saves the values in the combo box to database
returns the action handler for line re action
get the child record
sets all the column details and sizes to specified values
returns the text of the message
tells the editor to stop editing and accept any partially edited
sets the value of an abstract descriptor for this record
restores the previous saved record list
returns true if this type of parameter editor has a popup
sets the current value of the combo
move the def right panel to the table
sets the value of this cell
description of the method
adds to the date pane packs
this method packs the date panel
returns the popup for the given database id
save the record in the record list
returns true if the popup has a popup class
return int value from object
saves the screen values
sets the value of this field
changes the search arguments
packs the date panel
sets the record layout
returns the row index for the table that contains the specified point
saves the current record
load data into the table
sets the record id
get the type name of the given type
set the value of a particular type
sets the values for this record
set hex value at
returns a string with a message regarding the
this is called by the parser when a thread stops
corrects the given integer in the specified frame
returns the index of the row in the output view
returns an error message if the next parameter is not equal to
this is called by the parser when a thread stops
sets the current value of the field
returns the name of the column at column index
get layout details
sets the specified field to the specified value
prepares the cursor for use by the sql query
returns the field at the given index
adjusts the column if needed
sets the value of the specified field
set the number of empty columns without counting null
load data from database into this object
opens the result set cursor
returns the number of fields in the record
load the lines
called when the window is closing
update a record with new value
returns the record at the given row
sets a record to the given value
call this after the model has changed
activates the active frame if any
insert a record into the database
sets the cell editable
executes the given action on the given object
adds a row to the end of the model
deletes a record from the database
initializes the main frame and all components
deletes the rows
converts cnv name to integer
this method is called when the user clicks on a menu item
convert the value of the field to a boolean
delete record from database
returns true if the given action is available
get the absolute record values
sets the record and updates the row with the value
add a record and return the string
tells listeners that the content of the list has changed
sets the current index
removes all lines from the buffer
reloads the list from the disk
sets the designated parameter to the given java code string code
sort the lines of a record
perform initializations common to all constructors
closes the connection
register one component
this method shows the dialog and sets its visibility to true
this method updates the window status
sets the date format to be edited
sets the height of each row
closes all the statements in the result set and the statement itself
packs the date panel to the date panel
closes the statement
set the current record sep
notifies all listeners that the specified row was updated
set the absolute connection
returns the value of the last hex in the given display
write the start of the html document
reset the search parameters
builds and returns the edit menu
write the end of the html document
writes the current table to the writer
writes a table
writes the table header
replaces all instances of
writes a single row to the target table
lays out the components
sets the search string argument
writes the given text to the file
write out a text
override to add program specific menus to the menu bar
corrects the value to be stored in the map
returns the index of the first field with the given render step
set the first column index of the row containing the key
sets the row to the given value
set the search argument
returns the row at code row code as a string
sets the text field
set the search argument
check record for binary fields
initiates the combo box and agent
returns the current table cell renderer
this method adjusts the table size to fit the available space
returns true if the cell at row index and column index is editable
make sure the column is properly sized
deletes record details
remove a column from the list of fixed columns
called by the system if a record has been updated
the column header should have the values shown
makes the dialog visible
sets the details for this table
create a tabbed pane with all the initial tabbed panes
returns the text entered in the textfield
returns the name of the column at code column index code
sets the text
determines if a cell is editable
updates the table with the current values
creates a new record fields table
shows popup if the given mouse event is a popup trigger
returns true if the popup menu should be shown
sublcassed to translate the graphics such that the last visible
returns the read limit
sets the message
get the current value of the widget
sets the sql message
adds the date pane to the date choosers list
returns true if the pack thread is already running
sets the tips for the tool tip
sets the absolute ssmessage and exception if the exception
selects or deselects the tabs
sets the current layout idx
set the function log value
corrects the string
returns true if the user has selected a group
returns the string for the specified row
set the order by clause
close connection with remonte operation
reads the text content of a resource
returns true if the connection is ready
set the details panels for this wizard
returns the bottom section of the panel
deletes a line from the table
tests the getter for layout index
test setting the layout with an index
checks the given field and sets the expected value
builds and returns a new window action
test that a value is an include
tests the get field method
delete a window from the window menu
tests the get field hex method
throws an assertion error if the size of the line is negative
throws an assertion error if the conversion to a field is wrong
test the file data
returns the handler for updating the record
show the urls
test set hex byte array method testing
test set hex byte array method testing
test method for
test getting bytes
test a file with line data
test writing a file with duplicate lines
this method adds a system to the list of systems
adds copybook options to the list of copybook options
run a sql statement on the database
get a layout detail
test method get column count
load the list of layouts
get the system id from the name
test method for
test replace all find replace
sets the params
sets the combobox index
creates a file view with all the data from the given file
returns true if the parameter is an array
test method for
register an item of a combobox
opens a jfile chooser to allow the user to select a file to
test method for
edit a record at the given row
get a layout detail object from the layout map
test method for
returns a line reader for the specified file
sets the description of the current selected layout
returns an instance of the line writer for the given file structure
test method for
load the various systems from the system combo
process the record in csv format
process the record in the input stream
returns layout detail for the group
create a child record
process a file
get the layout detail for the download group
process an ivr0075d edi po line
ivr0075h edi po line
process an ivr0075 bytes
returns layout details for a layout name
this method is called by the download thread when it is started
test the code mainframe line code field
this is the main method that is called by the daemon
process an ams po download line
get the store number for the given index
enables disables the next button
returns the qty for the index
create a copybook record for the main frame
return the array position increment
get the group
insert fields for copybook
get the index of the item in the container
process an ams message
enables disables the previous button
this method is called at the end of the processing of an ams receipt
reads a file into the file
process ams receipt line
process ams receipt line
how many quantitative items are in the pack
called when an ams receipt line is received
this method is called when an ams message is received
returns the integer argument with the given name
test the is browse method
this method is called when an ams message is received
insert a record into the database
this method is called when an ams message is received
process an ar ams receipt line
test method for
process the ams receipt line
test the is binary file method
add a line
set the format used by the binary system
returns the entry date
sets the date of the record
returns the expected date
sets the date of the expected record
returns the cancel by date
sets the cancel by date header
correct for minus
returns the date to add to the download header
sets the date for this record
returns the type of the process
sets the type of downloading this record
returns the binary identifier of this bin
gets the number of entries in the list
returns true if positive integers are available
gets the code converter4code at the specified index
returns the converter at the specified index
returns a byte reader for the default record
registers a convert to the conversion service
returns a byte writer
read the block length and check if the block has not been read
set the line length to use for this connection
updates the word read with the given length
if the save file is not available it is flushed to disk
writes a block
opens the file with the given name
update rdw with a new length
converts a string to a zoned format
add a decimal point to a string
return the type with the given id
return the decimal value of the field
returns the end offset of the field in the record
converts from a number to a string representation that can be
returns the byte at the top of the pad for the specified font
returns a string with the specified number of spaces
register the name and name of a managed class
checks if the given string value has the given length
register a managed class with the user manager
obtains the managed class with the specified id
count tokens in the record
returns the key for the given index
returns the value for the specified record field
returns the number of entries in the table
get the value at the specified position in the given font
returns the number of fields in the given line
return whether to quote columns in the table as a column name
returns the field with the given number
this method is used to format the table name with quotes
this will return true if the stream has fixed format
gets the value of the paramater property
returns the quote used for data in this record
sets the text of the selected option
sets the value of this cell
returns the entered date
returns the preferred size of this component
sets the color of a row
sets the direction of the arrow
returns the maximum number of lines hold for this query
add date selector to the pack
returns the currently selected date
sets the selected date
sets the start date
set the low display date
gets the value of the high display date property
the high display date setter
sets the length of the element
sets the calendar model
returns the calendar model
set the current date
returns the file view with the specified row number
returns file view for the specified list
sets the month alignment
returns the month alignment
sets the day alignment
gets the day alignment
sets the day item alignment
returns the day item alignment
returns the index of the specified line in this file
sets the color used for highlighting the current day
gets the color used to highlight the current day
gets the filename without the directory prefix
returns a view of the base file
sets the foreground color for the days of the week names
returns true if this is a view
returns the foreground color for the names of the week names
sets the foreground color for the days
gets the foreground color of the days
checks if the file name is valid
sets the month font
returns the month font
sets the font for the week names
returns the font used to display the week names
sorts the lines
sets the day font
sorts the lines in the array according to the given compare
highlights the day at the specified point
selects the day at the specified point
displays a month starting at the given offset
called when the user clicked on a day in the calendar
empty mouse event handler
if the mouse is moved over the day highlighting
called when the calendar model changes
makes a copy of the scene to the world
stops the rendering loop
initializes the ptolemy and the landscape
initializes the open gl context
destroys the open gl context and releases resources
this method initializes j menu bar
this method initializes j menu file
this method initializes j menu item evaluate
this method initializes j menu item exit
this method initializes j menu item new
this method initializes j menu item open
this method initializes j menu item save
this method initializes j menu item save as
this method initializes vertical split pane
repaint the given diagram
display all available processors
returns the cached block numbers for the given query id
get the current time of the monitoring thread
adds this list before the specified document
adds this list after the specified document
removes this list from its list
adds a document before the current one
removes the current document from the list
creates the target directory if it does not exist
initializes shards that contain the
the index must be closed before calling this method
opens a new index file
returns the next element to be theta for the heap
construct the thread pool for the receiver
returns a string representation of the field
creates a new data adapter generator
is this field comparable
returns a string representation of the object
typechecks this generic type declaration in the context in which it
print a lower footer
generate a file name for the writable files
resets the game state
returns if the cards should be shown
add a card to the list of playing cards
compacts the cards in the hand
reset all cards to be deselected
refill the deck according to the current deck
checks if the players in this game are already won
selects the cards that are dropped on the player
returns the number of occurences of this constant
pickup the card from the given method
pickup the cards that were in og the stack if any
add a card to the list of playing cards
pop the top card from the deck
handles a click event on the p1 card
returns the number of occurences of this constant
returns the value of this number as an integer
returns the value of this number as an integer
initialize graphic components and game creation
handles a click event in the p1 card
this method is called before parsing a property file
add a period to the filter pool
returns whether a filter with given name and index is in the current
this method is called after parsing a bean or bean definition
returns whether or not a name is over a period
determines whether a samrecord matches this filter
returns the number of elements in this collection
checks if the given properties are valid
checks if the given value is valid for the given type
builds the file name
echo the contents of the sequence basescore
skips the remaining sequences
releases any unused sequences
returns the next available sequence name
prints the sequence
get the error estimate in the trial
checks if a given string is a valid base pair
close the writer
returns the weighted error estimate for a stream point
checks if is deletion
checks if is gap
calculates the phred amount of the given value
counts the number of bases in the sequences
returns true if the file is open
returns the path of the file at the given index
returns the properties of the given index
returns true if there are more records in the data file
returns the short name of the file at the given index
print the number of bases in a table
returns the next meta object
returns the reference character
returns the character with the most base
checks if a given character is a valid base
check if the set is empty
returns the forward base num of the given character
reverse the order of the given character
returns true if the specified character is a reference
return the number of characters in this string
returns the total number of individuals in the set
returns the index of the first base
gets the index of the base
checks if is null
return the ratio as a string
the ratio of the number of alt bases and the total number of
get the gnome character at the given index
getter for property indel
returns true if this is a reference only if the alt base 0
returns the object at the specified row index
returns the object at the given row index
get the login role
set the login role
returns the summarised menu item at the specified row index
gets the permissions
sets the permissions
returns the osc address pattern of this method
gets the default decimal format
get the food menu
test method for org
returns the wine list
test for the code get available table code method
get the table at the given index
test the indication of table occupation
gets the order at the specified index
sets up the fixture for example open a network connection
gets the current wine discount
tears down the test fixture
returns the current course discount
set the current course discount
tests the displaying of the food popularity
returns a table with the given number
test method for
test display wine popularity
tests the update availability of the stock for a course
checks that the food menu and wine list work as expected
create order items
checks if the first course is available
tears down the test fixture
test of view current orders method of class usyd
checks the availability of the items in the menu
test method for
tests if the update operation works correctly
sets up the test environment
initializes the test environment
tear down the test environment
check that stock ordering works when sorting
tests if the view of the wine list contains exactly one wine
tears down the test fixture
sets up the test environment
returns a result set for the given sql statement
setup the test environment
tears down the test fixture
returns the next integer from the given sql statement
tears down the test fixture
sets the id
creates a prepared statement object for sending parameterized sql statements to the database
sets the order
sets the capacity of the queue
sets the order id
returns the menu item that caused this event
sets the status of the order
sets the menu item that triggers the display of this menu
returns true if order is occupied
returns the order item at row index
sets the title of the plot
returns true if there is a value available for customers
sets the quantity for this order line
sets the description of the workflow
adds a menu item to the bar
sets the order
returns true if order creation is possible
gets the retail value of the product
determines if the bill creation is possible
adds one more items to the stock
sets the date and time for the series
returns true if user is set unoccupied
removes one quantity from the stock
returns true if this menu item contains no menu items
removes the menu item at the specified index from this menu
removes a menu item from the bar
returns the course type
sets the course type
sets the menu item at the specified index
sets the menu item that caused the event
sets the table id
gets the total retail value of the stock by dividing each stock by
sets the price
sets the stock
removes the given number from the stock
sets the status of the job
gets the discount percentage for the wine
sets the discount of the wine
returns the course discount
inits the gui
adds a new internal frame to the desktop pane
returns true if there are any internal frames
sets the course discount
removes all internal frames
sets the result
gets the total price of all the items in the collection
returns the menu item
sets the button text
initializes the labels
returns the discount total retail value of the backail execution object
get the wine value from the widget
returns the total discount value of all the students in the course
gets the course value
sets the order
adds an order item to the stock
sets the wine value
adds new order item to the order
updates the textfields with the current values
remove order item from menu
initializes the gui
shows the login dialog
creates a bill
returns the data model
p print a bill to job
show the main application
show edit order frame
shows the view tables frame
shows the view wine list frame
closes the application
gets the view tables frame
shows the view orders frame
this method is called when the user clicks the sign on button
show edit wine list frame
shows the view food menu
returns the edit order frame
show add wine frame
sets the table empty
creates and shows the edit food menu
show edit wine frame
returns true if this order has no items
sets the role to use when logging in
returns the view orders frame
show the view wine popularity frame
show the view food popularity frame
get view wine list frame
shows the add course frame
show edit settings frame
get the edit wine list frame
get the edit settings frame
show edit course frame
set discount state
get the view wine popularity frame
get the view frame
removes the order item at the specified position
get the edit food menu frame
get the view food popularity frame
add a wine to the list
add a course to the food menu
removes an order item from the bank
removes a course from the food menu
sets the order item at the specified position
init method for this filter
configures the jabapper by reading properties from the properties file
process the end of this element
render a printable version of this rule
returns the plugins resource bundle
test exporting a jabap config file
sets the config all schema
sets the config all template
sets the config schema attribute of the jboss generation task object
sets the template for configuration of the application
sets the exec schema
create the list of pools
sets the execution template
renders the schema
creates a velocity context
action to perform when the add button is pressed
executed when the remove button is pressed
returns the pool name if there is one
returns the host name from the text field
gets the entered number
returns the user name entered in the user name field
returns the value of the argument if its empty
remove all execution context and function contexts
returns whether this command is manageable
sets the manageable flag
sets the controlled flag
returns the character
sets the character
sets the object instance
returns the instance of this object
gets the name of the object
get the managed resource
returns the instrument for this sequence
returns the model mbean info
sets the m bean info that will be used for this application
get bean info
sets the bean info
get the inspector factory
set inspector factory
sets the operation info vector
this method is executed when the thread starts
sets the attribute infos of this model mbean
get the mbean descriptor
sets the mbean descriptor
number of elements in this collection
returns the number of elements in the specified list
adds a number to the list
adds a number to a given list
set the user id
set the profile for the user
set the multicast ip address
get the multicast ip address for this user
adds a user to this user set
gets the users id
returns the main preferences
returns the profile for the given username
updates the landform by adding new points and removing old points
clear the last landform
the order of the result
add a new thickness to the host
number of the ships of the player
generates the erodability of each map layer
removes the location stream
disables the location stream
returns the erodability of the current elevations
returns the index of the layer with the given elevation
apply the elevation change to the map
returns a copy of this object
update the list layers combo box
returns true if the genome has been initialized correctly
enables disables the buttons
this method is called from the thread to send a message
update the guiplates
initialize the simulation
updates the histogram of the view
updates all views on the view panel
update the view
invoked when the mouse has been clicked on a component
called when a message is received
the main cycle locus of control of the robot
processes all locations
adds a location to the map
sets the landform to be edited
draw a vertical axis
draws the title for this histogram of elevations
adds the lights
repaints the scene
sets the viewpoint to nominal viewing
a listener that will be notified of a click on the map
a listener for moving the mouse
sets the center of the circle
sets the zoom level
close the info window
add a new poly overlay to the map
adds the given marker to this java source
get the root element of the document
helper method to get the first child value
process a node
translates the computerese of an ipmml node
get the mouse event that caused this mouse event
get the x coordinate of the user space int of this page
get the vertical space of the applet
sets the eye direction
sets the direction of the cone
sets the 3 d eta
initializes the painter
returns the painter that paints the math object
updates the internal panel
sets the base
clears the contents of the panel
removes all items from the panel
adds a listener to the list of listeners
notifies all listeners that the painter is resizable
notifies all listeners that the panel has changed
ticks a jump
draws a grid
draws the grid
draws a grid with a random value
returns a math painter based on the current state of the
set the base image for this snapshot
clears the current mp3 file
clears the current image to the base image
clears the image
updates the panels components
paints the component
invoked when the component has been made invisible
sets the coordinates of the x and y axis
invoked when the components position changes
this method is called when the component is resized
invoked when the component has been made visible
scaprod
the coordinate of the center of the sphere
the coordinate of the vector v
set the horizontal and vertical scales
set the distance between the stereo cameras
returns the free form type
returns the type of the exercise
draws the base for the math painter
draws the question
draws the hint
returns the type of the exercise
draws the actual answer to the screen
draws the base
draws the answer
draws a line using the current color between the points
draws the question
draws a box edge
draws a box edge
draws the box edges
creates a math ml element with the given qualified name
creates a math element
creates a math element that wraps the argument
creates a new document fragment with the specified element and argument
creates an element of the given qualified name and namespace
creates a text node
creates a mrow element
creates a mrow element
create element for mfrac
create a msqrt element containing the math ml content
create msqrt element representing the msqrt parameter as a dom4rt
creates a mroot element
creates a mstyle element within the given fragment
creates a merror element for the given fragment
creates a madded element for the specified document fragment
creates an xml element that will be inserted into the given fragment
create a mfenced element that will store the
create mfenced element
create a new menclosed element
create msub element
create msup element
creates a msubsup element containing various msxsup
creates a munder element for the specified xml element
creates a mover
creates a munderover element for the specified xml element
create mmultis data element by mniator
creates an empty element
create math ml element that holds the mprescripts element
creates a mtable element that wraps the given fragment
creates a mlabeled structure in the given fragment by creating a math ml
creates a mtr element with the mathematical parameters of the given fragment
create mtd element
create mtd element
creates an action
sets the background of the screen
create a m element
create a mn element
create mo element
creates a lt mtext gt element
sets the background of the code graphics2 d code context
create and return a mspace element
create ms element
adds a condition to the expression
returns the resource type for this metric
this method adds a new rule to the list
creates a lt mglyph gt element
adds the given feedback to the list of feedbacks
sets the mark
sets the score of this entry
returns the template for the given name
returns the mark state of the given question
initializes the mark states of all questions
initializes the users answers
the next question button is pressed
returns true if all questions marked for this page are already marked
executed when the user presses the hint button
returns the number of correct answers
returns the index of the next unmarked question
gets the question at the given index
retrieve the dec attribute
set the decimal attribute
retrieve the hex attribute
updates the score
sets the hex
returns the requested hint
retrieve the cdbase attribute
set the cdbase attribute
get the solution for the given question
retrieve the name attribute
set the name attribute
returns the working document fragment for the given question
retrieve the href attribute
sets the tt href tt attribute for the html element
sets the working worked solution
retrieve the version attribute
set the version attribute
retrieve the id attribute
returns the users answer for a given question
set the id attribute
retrieve the encoding attribute
set the encoding attribute
retrieve the cd attribute
set the cd attribute
initializes the applet
updates the gui with the current question selection
set the current section learning context
test if the value of this character is a match
get the node type of this node
returns the precedence of this rule
sets the current question
checks if this code entity reference code has an entity reference value
gets the value of the entity reference value property
gets the value of the min number of arguments property
gets the value of the max number of arguments property
returns the message associated with this exception
returns the code computerese parser exception code
serialize a tree to ascii
serialize a tree to unicode
serialize a tree to xml
getter for the matching fence node
append to the value
sets the type of this token
returns the lexeme type for this token
convert an error type to an error type
get the exception that was thrown during the computerese parser execution
this is the implementation of the xml fragment
get the root of the tree
appends a node to the sequence
returns the length of the sequence
returns the index of the highest precedence free node in the sequence
returns the first node in the sequence
returns the node at the given index in the sequence
sets the document
serializes the ascii value of the root node
returns the node before the given index
returns the next node in the sequence
removes the node at the specified index in the sequence
serialize unicode leaf
removes the node immediately preceding the node at the given index
removes the node at the specified index
returns a string to represent all the text surrounding the given index
gets the surrounding text of the node
creates a serialized xml fragment of the
sets the document to be edited
get the problem area
serializes the operator
create a metric xml fragment for the wrapping element
getter for the matching fence
replace the metric in the tree
appends the specified lexeme to this list
get the length of the list
recursively replace the metric pis in the current node
serializes the given operator
translates the given metric processing instruction
checks whether the function argument at the given index is
is this node the same as another
creates a computerese text to inline presentation math ml
returns true if this value is higher than precedence test
returns true if this is a lower precedence test
creates a computerese text in a block
add a child to this node
checks if is free node
serializes the ascii value of the
sets the free node
returns the parenthesis level
returns the precedence of a rule in sequence
returns the xml element to be opened in the xml document
returns a serialized representation of this node and all its children
returns the xml tag name of root node of the tree
returns an empty xmlelement string
serialize a xml node to a string
returns the current indentation
convert a byte array to an int
convert integer to byte
cipher the given block using the given algorithm
decipher the given block with the given number of iterations spec
encrypts a byte buffer should be aligned to an
decrypts a byte buffer should be aligned to an
closes the db4o file
perform core operation for the given two integer arguments
returns the value of the given three parameters
for internal processing only
returns the left hand side of the four arguments
returns the horizontal value of four bytes
moves the pointer to the specified position
for internal use only
returns the integer value of the specified four bytes of the specified
create a new event
creats a new event
creats a event
fires an event
fire an event
fire an event
returns the value of a property
defines if the value for the specified property is read only
returns true if the property is read only
returns the helper
this method returns true if the given property is read only
set a property value
returns the value of a property in the resource bundle
report a bound property update to any registered listeners
add property listener method comment
add property listener to a bean
remove property listener method comment
action to perform when user clicks to ok
action to be performed when cancel button is pressed
returns the number of parameters of this method
returns the parameter at the specified index
this method generates unique hashcode used by hibernate
implement equals because profiles need to be compared
removes an entry from the set of known plugins
register a new entry for a given plugin
set the registry from the given stream
tests that the singleton plugin manager is working correctly
add a new plugin to the registry
remove a plugin from the registry
test method for
gets an iterator for all plugables with the given name
removes a plugable from the instance
test method for
routes an event to all registered plugins
save registry to file
loads the registry from the specified file
create the manifest for the specified class
resets the leds to the default settings
this returns the width of the cell
gives the height of this cell in pixels
refreshes the display to reflect the current state of the program
update the state of this leds
resets the game state
adds a component with the specified constraints to this container
removes a component from this container
updates the state of the scroll bars
acquires the ressources from the project
releases the write access for this project
sets the alignment of the row with the given index
sets the alignment for a given column
sets the scale of the specified cell
sets the scale for a given column
begin user doc end user doc
tests blob data inserted
tests inserting a new byte array
tests setting profile sql on off in the connection
tear down the test environment
skip over a length encoded string
get the current position within the buffer
set the byte buffer directly
setter for property position
checks whether or not this statement is supposed to be providing
fix the parameter name if it is not empty
returns the result set that holds the output parameters or throws an
moves the rows from the given position relative to the current
passes call to method on physical connection instance
whats the version of this jdbc driver
passes call to method on physical connection instance
passes call to method on physical connection instance
returns the connection id
whats a columns name
returns the field instance for the given column index
whats a columns tables name
set a parameter to a java double value
tests fix for bug 18740 data1
initializes driver properties that come from a jndi reference in the
dont hold on to overly large packets
retrieves the name of the sql cursor used by this
get the value of a column in the current row as a java
get the value of a column in the current row as a java
a result set is initially positioned before its first row the first call
destroys this connection and any underlying resources
closes all open statements in the statement map
returns the io channel to the server
a driver may convert the jdbc sql grammar into its systems native sql
used by mini admin to shutdown a my sql server
sets this rooms wall to true
sets whether this tile is a wall or not
returns true if this is an agent
set the square view
sets the agent flag
sets the reference to the abstract system
add a parameter to the list of parameters
returns the value at the specified index
returns the value of a parameter
returns the parameter key at the specified index
checks whether the given parameter exists in this parameter set
returns the minimum number of elements in the component
returns the number of walls in this area
sets the number of walls
returns the number of squares in this grid
returns the cbb algos
sets the cbb algos
this method is called when the button is pressed
returns the button group that this panel belongs to
sets the button group that will be added to the button group
this method paints the graph
get the database debug radio button
sets the database debug radio button
gets the rdb demo radio button
obtains the number of agents
sets the reference to the code rdb demo code
compares two graph values of this graph
sets the number of agents
fills combobox with values
computes the new curve
draws a dot
displays a requirement with a specified value
this method updates the gui
applies the style to all components
shows the quadri
set the label of the squares
sets the game model
returns the controller for this module
sets the controller for this module
returns the model of this component
gets the jagent view
this method sets the jagent view
returns the parameters view
starts the applet
sets the parameters for the view to be shown
sets the agent view
returns a string with the number of tab names and the specified
set the array of squares
checks if the algorithm list is valid
returns a random character direction
sets the agents array
cleans the view
cleans the view
tells whether two abstract squares are equal
initialization of the servlet
the destroy method is called by the spring framework when this bean is
inits the connection manage tool
we will set up a dummy model to initialize tree heararchy
checks if the reading of this file is invalid
gets the pose of the robot
calculate the weight for this robot and the given range
gets a specific reading
returns the number of particles
get the range of a specific data item
gets the range of a given angle
gets the angle for the specified index
checks if the map has any invalid reading
get the number of readings
sets the angle range for the given index
dump the readings to a data output stream
load the readings from a data input stream
get a specific particle
prints the readings to the console
calculates the weight of each particle
apply a movement to each particle
gets the angle of the compass
gets the estimated pose of the robot
moves the robot a specific distance relative to the current
reset the estimated position
returns a rectangle that contains the error
sets the motor speed
returns the maximum weight of any item in this inventory
get the border
sets the move speed
returns true if the given point is inside this line
gets the bounding rectangle
dump the map to a data output stream
set the standard deviation
loads a map from a data input stream
sets the distance noise factor
sets the angle noise factor
sets the maximum number of iterations
find the index of the particle closest to a given position
check that the given pose satisfies the conditions for this way point
serialize the particles to a data output stream
load serialized particles from a data input stream
dump the serialized estimation to a data output stream
moves the nxt robot forward until stop is called
loads the estimated state from the given stream
find the closest particle to the given range
moves the nxt robot backward until stop is called
rotates the camera about its own centre in the game field
returns the distance traveled
returns the angle of the last turn
gets the movement type
get the radius of the arc
rotates the nxt robot through a specific angle
send a packet to the server
returns the rcxin input stream
receives a packet
receives an ack from the multicast pipe
returns the rcx output stream
return whether packet is available
resets the state of this packet handler
return true if ack is available
close the port
this method is called by the kernel when the underlying channel is
set the listener flag
this method returns true if the message can be acknowledged
closes the lower handler
get the error code
returns the number of bytes that can be read or skipped over from
receives a packet
test if in packet is available
stop the fb instances
helper method to return a single register byte
sets a single byte in the i2 c sensor
sets a single byte in the i2 c sensor
helper method for retrieving string constants using i2 c protocol
sets the address
draws a partial circle with the given radius and angle
resets both tacho counts
add a radius to the current pose
moves this robot a specific arc
moves the camera using the given distance
set the current angle
sets the min angle of the arc in degrees
sets the max angle
sets the angle to the minimum angle
sets the robot to the maximum angle
sets the angle to the middle of the circle
sets the robots initial angle to the init angle
moves the nxt robot a specific distance in an hopefully straight line
rotates the tile forward
make the camera one step backward
add a servo to the servo list
add a servo to the servo list
return the servo at the given index
add a new dcmotor on the given location
adds a new dcmotor to the list
return the inventory of the given index
this is a method used to load all the servos
unloads all servos
sets the sensor module
returns the distance between the lsb and the high seperated
power on send
returns the number of objects
sorts the list by the specified sort type
power off the current power
sets the arpa on
sets the tracking mode
returns color value for given object id
sets the arpa off command
gets the rectangle attribute of the pngchunk object
returns the number of lsb in this module
send a character command to the robot
returns the number of bits in this dist dist node
returns the number of voltage in low mom
returns the number of bits in the voltage source
returns the sensor module of this module
returns the number of points in this module
set the number of curve to be used
returns the minimum dist in bits of the distabitants in this module
sets the value of the dist min data lsb
sets the pulse servo value
returns the minimum dist in bits of this dist node in the distnx
set the current angle
sets the dist min value in bits
sets the speed servo on the servo list
returns the max distub in bits of this module
runs the motor
sets the max distub in bits of the distabitants within this module
set motor value
returns the max dist in bits of this distnx
returns the data channel
get the motor power of the motors
sets the max dist in bits
returns the index in lsb of the volt point at given index
returns the buttons that are pressed
sets the voltage change at index to value
reads the msb of a volt point at given index
sets the value of a volt point at given index
calculates the turn rate for the turn
returns the mode of this stream
returns the data point lsb in former distrubs
sets the flag for adp mode
sets a dist data point at a given index in this module
the 2 channel of the message
the data channel with which this request is being made
reads the msb of a dist point at a given index
the data channel for the 4 byte channel
all channels off
sets a specific dist point msb to this distrubution
reads the data from a distrubet within a given module
set the speed of the pulse
transforms degrees of equinox to cartesian coordinates
returns the direction of the packet
returns the sensor value as an integer
returns the servo at the given location
starts the calibration for the pedido data
get the battery voltage
send a pf command directly to the server
sends a single byte command to the robot
sleeps for a specified amount of time
returns true if the stream is moving
create an eopd adsensor and set its type to
wake up the sensor
sets the way mode
changes the delay between two motors
get the steering value
sets the mode of operation
get the average readback value
this is the method that loads the actual data from the server
gets the x alliance in bits of this byte
changes the pulse
acceleration along y axis
acceleration along z axis
read the next value from the serial port
returns the status of a sensor
floats the motor
runs the motor forward
gets the current temperature in fahrenheit
runs the motor backward
stops the motor
sets the motor speed
returns the current speed of the simulator
add a new lsc to the servo list
returns the raw tacho count
returns the lsc at the given index
returns the current battery voltage level
returns the voltage of the motor
returns the value of this light
gets the light sensor value without taking any input value
set the nxtcomm object
sets the power
call this method to set verification
blocks tacho state
small helper method to send direct command request to nxt and return
resets the block tachometer
starts a program already on the nxt
stops an already running program
connect to a nxt
queries the nxt for the current program name
paints the component
paint the particles
paint map with the actual offset
paint the pose using ellipse2 d
opens a file on the nxt for reading
create a line that represents the direction of the pose
find the closest point to x y
requests all available particles on the server
sends a command to the remote host
stop the application flush the dos data and exit
calculates the pixel co ordinates of the mouse click
close the file
paint the component
closes an open file
clears the component
connect to the nxt
prints an error message and exits
wrapper for the command code delete code
connect to a nxt
connect to a sehr host using the specified mode
connect to a nxt
connect to a device
queries the server for the battery level
close the nxt and write the eof marker
tell the server that the connection is closed
write the given byte array to the stream
starts samba server
close the nxt
logs the specified throwable
logs the specified string to all registered listeners
write data to the file
returns true if the two values are between
returns the length of this line
defrag the flash memory file system
returns the name of the device
sets the friendly name on the nxt
queries the nxt for a local address
queries the tacho count on the specified port
used to request data from an inter integrated circuit i2 c sensor
sends a message to an inbox on the nxt for storage
plays a tone on nxt speaker
stops sound file playing
resets both motors
get the current firmware version
deletes the user flash memory
takes the reading of a float and sets the range to
clear all nav stop segments
adds a segment to the segment list
take the two reading from the take forward and exclusive
make sure the pose is random move
this method is called when a button is pressed
resets the timer
executes all actions scheduled in this class
release this instance
executes the command
returns true if this thread is currently running
convenience method to set motor
execute the command
sensor port state changed notification
the sensors state has changed
the sensors state has changed
returns true if the time spent in the system time milliseconds
get the address info of the landmark
returns extra information about the file type
returns the coordinates of the current position in the qualified
calculates the azimuth between the two points according to
checks if the course is valid
sets the terminals course ensuring that the value is always in the range
sets the speed of the animation
returns the horizontal accuracy of the location in meters 1 sigma
returns the discovery agent for this device
retrieves the name of the local device
changes the friendly name of the local device
determines if this device is authenticated with the remote device
the default device class is null
changes the discoverable mode of the device
returns the bluetooth discoverable value of the
retrieves the bluetooth address of the local device
get the service classes
determines if two code remote device code s are equal
retrieves the major device class
removes the device from inquiry mode
updates the robots position when it moves
get the projection of the vertices relative to the line origin
returns a list of particles
get the pose of the estimated particles
return an input stream
returns open stream to write to
open and return a data input stream for a connection
open and return a data output stream for a connection
closes the current stream
opens a stream for reading from the remote device
returns the current signal strength of the local bluetooth adaper
this method resets the sequence flag and the receive sequence flag
read data from the device
sends data to a single device
sets a single byte in the i2 c sensor
helper function to fetch a string
sets the address of this packet
return the port this event occured on
this method is used to stop the update process
sets the type and mode for the motor
sets the type of this controller
sets the mode
reads the boolean value of the sensor
reads the raw value of the sensor
reads a value from the input stream
get the name of the nxt device
returns the nxt command
returns the status code of the i2 c device
returns the bluetooth address of the remote device
returns the amount of free memory for the motor
this is a no op for i2 c
returns the firmware version of the nxt
returns the version of the protocol
deletes the flash memory if it is in use
delete the specified file
starts a program in the nxt
stops the current program
returns the name of the current program
sends a message to the nxt for storage by the given inbox
plays a tone on the nxt
play a sound file
plays a sound file
stops sound playback
close the nxt
download a file to a destination
sets the time stamp of the sentence
returns true if the sentence is valid for the given sentence
parses the sentence
returns the current speed of the animation
returns the time of the last fix in milliseconds since january 1
get the date of the fix
returns satellites in view
returns the number of satellites being tracked
returns the compass value of this compass pair
returns the satellite object of the given index
returns fix quality
get the current compass in degrees
give the date of the last recycled
returns the number of satellites being tracked
get longitude direction
returns true course at the end of the program
get the altitude in meters
returns the magnetic course of this list
get the speed of the ground
get the course
setup the typematic thread with new input stream and output stream
returns the selection type
get the pdop value
get the hdop horizontal dilution of precision
return the vdop value
closes the socket
internal helper method to aid in the subclass architecture
returns the location of the key
adds a listener to the listener list
set the typematic rate
gets the typematic rate
selects the item at the given zero relative index in the receiver
notify all listeners of a key event
resets the timeout to the current time
returns the capslock state
recalculate modifiers and add them to the list
sets the lcdlines
sets the delay enabled attribute of the antelope panel object
sets the delay between two timer events
echo a message to the lcd
echo a message to the lcd
get keyboard object that caused this event
adds a handler to the list
removes a handler from the list
returns true if this event handler has been handled by an async event
create a release parameters object for this operation
bind to method comment
get max priority
unbind to method comment
fire all the events
get minimum priority
get the priority of norming this worker
sets the schedulable object for this event if it has feasibility
sets the schedulable object for this event
returns the length of the initial arrival time queue
set the deadline for this task
sets the arrival time queue overflow behavior value for this quote data
set the deadline for this task
set the initial arrival time queue length
adds an schedulable object to the feasibility list
removes the given schedulable object from this schedule
not yet implemented
sets the priority of the message
notifies all listeners that have registered interest for
returns true if this property is feasible
it returns the period associated to this set of parameters
returns the start time
it sets the deadline that the event applies to
sets the deadline for this task
set the period for the test
sets the start time of the resolution
the deadline is not yet implemented
compares this high resolution time with another
the first time this probe runs in the run method
compares this object with the specified object for order
set the minimum interarrival
compares the specified object with this set for equality
write any remaining data to the output stream
waits for a connection
open and return an input stream for a connection
returns a hash code value for the object
open and return a data output stream for the connection
returns an output stream for writing to this socket
returns the nxtc input stream
write the close to the file
set the duration to the given millisecond value
sets this duration to the specified time in milliseconds
returns the bounds of this code dimension2 d code object
returns true if this rectangle contains the given rectangle
determines whether or not this rectangle intersects the specified
determines whether or not two rectangles are equal
returns the bounds of this code dimension code object
returns the bounding rectangle of this code shape code
returns the square of the distance from this point to the given point
finds the square of the distance from this point to the given one
finds the distance between this point and the given one
returns true if the given point is inside the rectangle
returns the number of milliseconds in the given date
pushes an object onto the top of this stack
test if the line segment intersects the given rectangle
tests if a line segment intersects the current line
tests if there are more tokens available from this tokenizers string
get the next token
returns the next pseudorandom uniformly distributed
returns the next pseudorandom gaussian normally distributed
returns an enumeration of the components of this set
returns the bounding rectangle of this code shape code
print a string
prints a blank line to the output stream
print a string and then terminate the line
execute the command
return the length of the file
closes this stream
close the file table
create a string from a char array
create a string from a byte array
creates a string from the specified array of characters
create a string from a byte array with a specified charset
create a string from a byte array with the specified charset
returns the index within this string of the first occurrence of the
returns the id of this thread
returns the index within this string of the last occurrence of the
appends code for internal use only
returns the index within this string of the last occurrence of the
appends code for internal use
returns the hash code of this object
run the juil applet
sets the current value to the gauge
sets the maximum value to the gauge
sets the number of nxts for each of the nxt
sets the raw value on the gauge
sets the maximum value of the raw gauge
gets the number of rows in the model
sets the scaled value
sets the maximum value scaled by the scale factor
returns the value for the cell at code column index code and
sets the type of this component
delete the specified file
returns the number of rows in the model
closes the connection to the server
attempt to reboot the nxt device in command mode
gets the value at attribute of the file table model object
sets the value at attribute of the file table model object
returns true if the cell at row column is editable
fetches the files in the nxt
returns the file info at the given index
handle status changes of the device
returns the number of files in the directory
writes a filesystem image with nxtsamba max firmware pages
verifies the firmware pages of the nxt
creates a new socket server on the nxt
causes a new thread to be invoked
it adds either the data from the input stream to the data
run tiny vm
create the tabbed pane containing all the lcptabs
creates the tabs for the console
creates the data log tab
create the files panel
creates the panel with all the necessary gui components
create the files table
returns the number of motors selected
returns true if two motors are selected
shows a message if at least one motor is selected
download the file
shows a message
update the sensor dials
clears the files panel
called whenever the value of the selection changes
update the status of the connection in the nxt
updates the connect button
returns the selected protocols
returns the selected application protocol
stops the nxt motors
get the values of sensor values
convert a byte array to a string of hexadecimal digits and return it
returns the hex digit for the specified character
connect to the selected nxts
appends a float to the log
delete the files selected in the table
choose a file and update it
download the selected file
run the selected file
set a name from a string
moves the actuator and or finish
set the sensor type
play the tone
tacho reset buttons if
play the selected sound file
receive data from the nxt
format the file system
called when the activity is first created
launches update view
launches a screenshot
opens a toast on the given message and waits the given amount
set the position of the android interfaces to the given position
sets the check box stream notification on top state
creates the menu items
called when a menu item is selected
returns the string value of the boolean param
called when the activity is first created
reads the parameter value from the configuration file
connects to the system
connects to agency using the given password
p automatically managed component initialization
this method is called by the constructor and creates the instance
p return a reference to the scoped data bean
p return a reference to the scoped data bean
p return a reference to the scoped data bean
p automatically managed component initialization
p return a reference to the scoped data bean
p return a reference to the scoped data bean
p callback method that is called whenever a page is navigated to
p callback method that is called after the component tree has been
p callback method that is called just before rendering takes place
p automatically managed component initialization
p return a reference to the scoped data bean
return the name of the quote in the database
renames the fixture to the given fixture name
renames a column in the table
writes the page content to the specified file
gets the fixture name
registers the delegate for the specified type
registers the delegate object for the specified type
todo document me
if the cycle sut is a java 1
todo document me
returns a list of the files in the tree that have the same
sets the repeat string
sets the exception string
this method will show the results of the test
shows a dot graphic result
ensures that the given row contains test results
note the row
this method traverses a comment row and tests for each row
this method traverses a single row and checks for each one
called when a row is to be processed
this method traverses a single row of text in xml and ensures that
perform the traversing action
set the repeat string and exception string
abandon a test
set whether or not the test should stop when an error occurs
find the method target by action name
controls if the interpretation should stop when an exception occurs
sets the input string for traverse
sets the exception string to be returned
returns a list of files and directories representing the same files as
set the object to be a typed object
returns a list of the files in the tree that have the same
this method will show the results of the test
shows a dot graphic result
ensures that the given row contains test results
called when a row is identified by test results
find the method target by action name
cache the credentials from the realm
expose as a
init the single instance
terminate this single instance
cleans up the open gl context
test that do perform bubbles exception is thrown when
returns the default input encoding
lays out the container in the specified panel
return true if the point is on the left boundary of the cone
calculates the preferred size dimensions for the specified
return true if the point is on the right side of the bounding
returns true if this step is the middle of a horizontal axis
return true if the point is on the top of the bounding box
return true if the point is on the bottom of the bounding box
returns true if this text is a vertical separator
compares this anchor point against the specified object for strict
sets the horizontal gap between rows
gets the horizontal gap between columns
sets the horizontal gap between columns
returns the amount of space between the border and the text
sets the amount of space between the border and the text
returns the anchor point of the component
sets the anchor point
this method is called when a connection is made to the
open this transaction
returns the string manager
getter of the parent concept
setter for property parent concept
gets the meaning
sets the meaning
returns the character that represents a part of speech
sets the part of speech of the token
returns the dynamicity of the component
sets the dynamicity of the concept
gets the valency of this atom
sets the valency
gets the interlingua
sets the interlingua
loads a file
adds a listener to be notified when the list of downloaded changes
update the show download listeners with the new list
start the thread downloading the tv data from the disk
get the number of reserved sectors on the disk
get the number of sectors on the disk
get the media descriptor
return the number of sectors per cluster
gets the fat
gets the root entries count
get the number of sectors that this sector has
get the number of sectors on root directories on this file
get the sector of the data region
returns the root directory of this application
calculates the cluster offset for the given cluster
compute the size of this cluster in bytes
returns the number of clusters
populates the directories map
load the directory into memory
checks if this is the root cluster
get a directory by name
returns whether this is a hidden column
returns whether this is a system system
returns whether the label is a volume label or not
gets the archive flag attribute of the main frame object
this method converts the integer code to a date object
returns true if this is a label for volume
checks if the field is a directory
returns true if the file is a file
gets the value of created
getter of the last accessed date
gets the modified date
return the starting cluster index
returns the offset of the given sector in the given fat
returns the size of the region in bytes
returns the number of fat entries in this sector
load the fat table into memory
returns the next available cluster number in the cluster array
verifies if the given code directory entry code is in the
verify that a cluster exists
prints this directory
write unreferenced clusters as files
sets the read only attribute for the file
gets the value of store id
gets the value of store name
getter of the item price
getter of the item quantity
gets the limit per day
checks if the player has reached the limit
gets the current server
switches the current host to the one
the code create leading slash node code method creates a node with
creates a numeric equal node with two numeric values
creates a new node with two given variables
returns the backup dir
sets the backup dir
returns the backup date format
sets the backup date format
executes the given insert update or delete sql statement without any
gibt den savepoint zur ck
undoes all changes made after the given code savepoint code object
returns the area code of this telephone
sets the area code
sets the phone number value for this contact
sets the first string value for this string array
sets the second string value for this message filter
set the endpoint address for the specified port name
sets the phone number value for this person info
sets the phone number value for this person info
the run method for the contact list parser
insert an annotation
loads single books data single book head and
the run method for the contact list parser thread
this method uses xerces specific classes prints the xml document to file
insert the annotation
the real workhorse which creates the xml structure
returns a random socket from the socket list
passing the focus request to the viewers control
get ann id from line
calls the edit for the ann id
shows a dialog for adding a new ann
calls the start dialog
find the next contact item with the given id
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes this
this method initializes j button ajouter
this method initializes j text field nom route
this method initializes j combo box type route
this method initializes this
this method initializes j text field nom ville
this method initializes j combo box taille ville
this method initializes j button valider
this method initializes j button ajouter
this method initializes j combo box choix ville
this method initializes j button search ville depart
this method initializes j radio button touristique oui
this method initializes j text field nom ville
this method initializes j radio button touristique non
this method initializes j button a
this method initializes j radio button ouverte oui
this method initializes j radio button ouverte non
this method initializes j text field rechercher
this method initializes j text field ville depart
this method initializes this
this method initializes j scroll pane villes
this method initializes j table itineraire
this method initializes j text field ville arrivee
this method initializes my table routes courante
this method initializes j radio button ouverte oui
this method initializes this
this method initializes my table etapes courante
this method initializes j table villes
this method initializes j scroll pane etapes
this method initializes j table etapes
this method initializes jung carte
this method initializes my table troncons courante
this method initializes j button search ville arrivee
this method initializes this
this method initializes j radio button ouverte non
this method initializes j table villes
this method initializes j button b
this method initializes j text field exporter reseau
this method initializes j button ajouter
this method initializes j text field nom ville2
this method initializes j button c
this method initializes j text field importer
this method initializes j text field ville
this method initializes j radio button payant oui
this method initializes j radio button asuivre
this method initializes j button d
this method initializes j radio button aeviter
this method initializes j button valider
this method initializes j panel1
this method initializes j button e
this method initializes j radio button payant non
this method initializes this
this method initializes j button f
this method initializes j radio button radars oui
this method initializes j scroll pane villes intermediaires1
this method initializes j combo box taille ville
this method initializes j button g
this method initializes j scroll pane
this method initializes j radio button radars non
this method initializes j button ajouter
this method initializes this
this method initializes j content pane
this method initializes j table villes intermediaires1
this method initializes j tabbed pane
this method initializes j panel itineraires
this method initializes j panel1
this method initializes j radio button touristique oui
this method initializes j radio button ouverte oui
this method initializes j radio button ouverte non
this method initializes j radio button touristique non
this method initializes j content pane
this method initializes j button ordonner preferences
this method initializes j text field vitesse
this method initializes j radio button touristique oui
this method initializes j text field longueur
this method initializes j button search ville depart
this method initializes j radio button touristique non
this method initializes j button search ville arrivee
this method initializes this
this method initializes j panel admin menu
this method initializes j radio button touristique peu importe
this method initializes my table villes courante
this method initializes j scroll pane asuivre
this method initializes j check box taille petite
this method initializes j table villes
this method initializes j scroll pane eviter
this method initializes j check box taille moyenne
this method initializes j text pane eviter
this method initializes j check box taille grande
this method initializes j radio button chemin court
this method initializes j radio button chemin rapide
this method initializes j radio button chemin peu importe
this method initializes j button ajouter
this method initializes j check box taille routes autoroute
this method initializes j check box taille routes nationale
this method initializes j check box taille routes departementale
this method initializes j radio button radars avec
this method initializes j radio button radars sans
this method initializes j radio button radars peu importe
this method initializes j button ajouter
loads the specified library jars
adds version information to the given target
load the jar files from the library
sets up the log stream
gets the millisecond duration of this file in milliseconds
returns the allocated memory in bytes
setup the log stream and save the current log file
sets up the log stream
add a platform
rearrange the data
finds the best value in the matrix
returns the maximum number of matrices in any product
perform the benchmark for the given runtime
creates plots and compiles them
save the current system info
the server is challenging the sasl mechanism for the stanza he just sent
returns the message body corresponding to the given language
sets the body of the message
adds a body with a language and a translation
removes the body with the given language
returns the language
sets the type of this parameter
returns the language of the user
creates an account using the specified username and password
sends the specified packet to the server
fires listeners when a reconnection attempt has failed
processes a packet after its been fully parsed by looping through the installed
sets the field
sets the current state of a given chat
adds a new file transfer listener
test that an exception is thrown if the default list is not found
test for code deny active list code
returns the xmppconnection at the specified index
creates a new xmppconnection
return the username for the given index
returns the jid of the service at the specified index
returns the full jid of the node at the specified index
returns the chat domain
returns the name of the muc domain service implementation service
checks if the hash of the string is valid
test that the constructor instantiates the
test that a comment is created with the comment creation
test parsing error when unknown xml
test that error is raised when cancel is called
test error message parsing
test cancel with message
tests the case where an anonymous connection is reconnected to the
connection to server is closed
test of accept method of class packet filter
this test creates a new room with a non instant room
test method for
sends a roster group to an user
test that the service can publish items
this test case instantiates a new item
tests success with a jabber xmpp
set up the test
tears down the fixture for example close a network connection
returns the xml representation of a configuration
returns the xml representation of a jingle result
returns the xml representation of a cancel
sets the initiator
responder method returns the value of the i responder i attribute
sets the responder
setup api supported payloads
returns a new jingle media session
start transmission and for nat traversal reasons start receiving also
set transmit indicator
stop transmission and for nat traversal reasons stop receiving also
stop receiving messages
sets the transmit
set the code image encoder code that will be used to encode
this test ensures that we can get a private iq from room
stops the transmission if already started
returns a new jingle media session
setup api supported payloads
sets the current state
add expected ack id
check if the given id is the expected id
remove the expected id
the iq has been acknowledged our pending state
the session is declined by the event
get the error of the jingle packet
get a resolver that can be used to process a jingle session
initializes the session
returns the xml representation of the child element
we have received the ack of our accept
called when an error occurred
returns the xml representation of the child element
clears the current candidates
initialize the world
the other endpoint has partially accepted our invitation
we have received some incoming transport candidates
we have received some transport candidates
an error has occurred
the other endpoint has acknowledged
sends an event error to the session
returns the fully qualified jabber id of the user that sent the
sets the initiator
setter for property responder
the ack has been received
notifies all jingle session listeners about the state of a session
send a formatted error
send a xmpp packet
returns an error indicating that the stanza is malformed
sends an ack iq
parses a packet extension
trigger created jingle session listeners that a new jingle session has been created
unregister an instance for a given xmppconnection
adds listeners for connection state changes
creates an outgoing jingle session
returns the session with the given jid
reject the session invitation
removes a packet listener from the connection
trigger a session closed event due to an error
terminates the session with a custom reason
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
get the mapping for a given entity
get the delegate for this dao if any
read mappings from an xml file
read only file and add it to the cache
read mappings from a url
read mappings from an tt input stream tt
read mappings from an application resource
read mappings from an application resource trying different classloaders
read a mapping from an application resource using a convention
parse a packet extension
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for whiteboard
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for rectangle
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the array for usager
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the array for app session
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for ligne
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
validate the array for cercle
auto generated setter method
auto generated add method for the array for convenience
validate the array for ligne libre
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
checks if the given class type is a valid type
returns the class descriptor for the given type
set the option that should be reused as a string
creates a file object for the given path
gets the reuse option as string
set the option that determines if the pool is to be reused
get the option that is used to reuse this resource
trim the string
returns the value of the config property set method name
get the configuration property with the specified name
adds the property to the properties set
returns the client properties
returns whether the resource should be shared with two branches
returns true if the resource should treat different branches when shared
get the oracle error code if it was not set
returns whether the resource manager uses different branches when
returns true if the resource should treat different partial branches when
this method returns the resource manager name for the exception
get the string that was written to the xa error resource
test basic transaction
test of resolve transaction method of class org
test that we can commit the transaction once the current transaction
test that the transaction is rolled back
test that the transaction is rolled back only
test suspend transaction
non regression test for issue 2010
basic test of a sub transaction
returns the performance counter value for the given performance mode
returns the performance rate for the given performance mode
closes connections using the set of entries
generates a unique transaction test suite key
parse input to see if it is a formatted word
modifier for a sequence
cozumleyici of this kelime felle law
the oneri urietici interface
returns the hece islemleri
kodlama a yukle given a uri
return the last letter in the letter sequence
returns the last wovel in the sequence
return the unicode character mapped to the given unicode character
returns the turkish letter of the given alphabetic
returns the aphabetic index for a character
returns the character that corresponds to the given alphabetic index
looks up the ascii equivalent letter from the alphabet
this method checks if the given ascii characters are equivalent
append a turkic sequence after the given position
this method returns the ith letter from the sequence
gets the first wovel in the sequence
returns a copy of this prefix form set
sets the frame size on the screen
registers this view to the gui
draw the message for all modules that have arrived at this node
overrides draw in the superclass
this method replaces the current vector with the given one
registers this view to the gui event generator
draw a straight line segment
report a property change to registered listeners for example edit parts
adds a segment to this diagram
remove the segment
get the station id as a string
change the id of the station
returns the figure this is the actual figure
gets the value of station
sets the figure
returns whether the given figure is valid for this layer
sets the new position for the figure
sets the station that is edited
setter method for location delegates
returns the delegate for the position of the component
sets the delegate position and refreshes the figure
get the agvdelegate object for this agent
set the agvdelegate
returns the control point of the connection
returns the position of the current node
gets the source
sets the source
get the property id
returns the station delegate
to set the content id
sets the station whose exercise results are displayed
sets the source segment part delegates
sets the target segment part delegates
returns the editor environment structure builder
gets the d
sets the position delegates
returns the station delegate
return the id of the item
set the id of the location
sets the station delegate
gets the agv
sets the agv to the figure
sets the station delegate
disconnect the segment
returns the property value for the given property id or null
gets the point adelegate
get the point bdelegate
reconnect the connection
reconnect to the new source
sets the property with the given id if possible
returns the id of the message
sets the id of the message
upon activation attach to the model element as a property change
get the direction of the segment this point is pointing to
upon deactivation detach from the model element as a property change
sets the direction of the segment
returns the agv container
sets the agv container
gets the location container
returns the model of this as a position delegate
sets the locations container
upon activation attach to the model element as a property change listener
checks if the given location may be added to the station
checks if the station can be placed in the place
refreshes the bendpoints based on the model
upon deactivation detach from the model element as a property change listener
upon activation attach to the model element as a property change
upon deactivation detach from the model element as a property change listener
this method initializes location group
sets the location group
returns the agvgroup tree edit part
sets the agv group
this method initializes charge location group
returns the child location sub group if there is one
this method initializes storage location sub group
gets the agv delegate
sets the agv delegate
gets the station delegate
sets the station delegate
returns the delegate for the position of the component
returns true if the node was removed
sets the delegate for the position of the component
sets the flag indicating if the resource was removed
returns the control point that was before the event
sets the old control point
returns the segment this circle is contained in
sets the circle segment
returns the new bounds
sets the new bounds
gets the old bounds
getter for property new point
gets the agv that is bound to this agent
sets the old bounds
sets the new point
returns the position of the node
sets the agv that this data object represents
sets the position of this node
sets the station delegate
sets the target of the move
return true if reconnecting the connection instance to new source is allowed
return true if reconnecting the connection instance to new target is
returns the old position of the layer that was moved
sets the old position of the layer that has changed
reconnect the connection to new source if set new source
gets the station
set a new source endpoint for this connection
set a new target endpoint for this connection
undo command execution
sets the delegate position
gets the location delegate
sets the location delegate
getter for property new index
setter for property new index
gets the old index
gets the environment delegate
sets the old index
sets the position of the delegate
return true if reconnecting the connection instance to new source is allowed
return true if the reconnecting target is correct
reconnect the connection to new source if set new source
gets the location delegate
sets the location delegate
set a new source endpoint for this segment
set a new target endpoint for this connection
undo the operation
return a new environment delegate for this content
returns the editor
sets the editor
configure the editors graphical viewer before it receives contents
returns the editor
sets the editor
returns the viewer
passing the focus request to the viewers control
returns the canvas
set the canvas
returns the layered pane
sets the layered pane
gets the view content provider
set up the editors inital content after creation
gets the environment
sets the environment for the test
returns the invisible root
sets the invisible root
returns the view associated with this outline page
sets the view
returns the routing constraint of this connection
this is a hook method that can be overridden by subclasses to fill
returns the id of the agv
sets the id
getter of the agv idlavel
setter for property agv idlavel
gets the source
set the source position
returns the target point of this connection
layout this edge
sets the target position of the connection
returns the station id label
called just before the receiver is removed from its parent
set the id of the station
returns the locations compartment figure of this game element
sets the locations compartment figure
returns the line color
sets the connection router
sets the line color
get the rounding mode
sets the rounding factor
returns the position of the object
sets the routing constraint for this connection
returns the position label
sets the position label
sets the list of points to be used by this polyline connection
sets the center point of the circle
sets the center of the circle
gets the clockwise flag
sets if the spaceship is clockwise
generates a random waiting time
generates a random waiting time for the process
get the agent time manager for a given agent
returns true if this time point is after the other time point
adds an entity to the set of active entities
returns true if this time point is before the other time point
activates all entities
sets the length of this duration
returns the equivalent of this duration but with the specified
changes the current clock value
adds an activity laws to this code block activity code
removes an activity law from this activity
sets the begin time of the dynamics simulation
applies the given activities to the given environment
adds an influence to this influence
sets the time point
remove an influence from this artefact
sets the influence author
gets an applicable influence law
sets the activity subject
returns the number of influences that are applicable to the influence
sets the time interval used by this activity
sets the end time of the dynamics simulation period
add an activity to the collection of activities of this action model
adds all the activities from the given collection to this activity collection
returns the duration of the time span
return true if this interval contains the other
gets the action model interface of this agent
performs the influence
sets the action model interface
returns true if this interval contains the other
returns true if this interval meets the other
returns true if this interval meets the other
returns true if this interval meets the other
sets entities table
sets the layout
returns true if this interval overlaps the other
returns the infrastructure
changes the infrastructure
returns true if this time interval is entirely after the other
sets the value of this degrees
returns true if this interval begins with the other interval
gets the angle in radians
set the degrees of freedom
sets the normalised degrees value
normalises degrees to 360 degrees
rotates the goal towards the specified angle
returns true if this angle is in range
returns the difference between this angle and another
does this time interval ends with the other time interval
returns true if the two positions are equal
returns true if a point is contained within this time line
this method returns the position of the first first child
get the second position of the line
returns a new 2 dimensional position with the first coordinate
get the fourth position
get the fourth position
returns a 2 dimensional position with a unit
calculates the middle of the pitches
returns true if this interval contains the specified point as an intermediate
calculate the direction of the line from the current position to the
tests if two lines intersect
returns whether or not this rectangle intersects with the given rectangle
sets the center of this position
returns whether or not this line intersects with the given line
get line1 for this position
does this text contain a begin
get a line to be used as source for the transformed line
get line to start from
return a line with the data from the source
indicates if this text ends with an end
returns the angle of the line
returns true if the two positions are equal
tests if there is no intersection between the given rectangles
sets the angle
sets the unit
changes the current unit
check if the angle reference is close to another range
returns true if this interval is left open
returns the unit in which the pool is actively working
returns the unit from pool
returns the unit that is currently in use
turns this rectangle in a given direction
returns true if this interval is a right open time interval
returns the station with the given id
returns a new rectangle which is the position of this one
returns the location with the given id
removes a station from the database
returns true if this interval is open
removes a station from the model
checks if the given point is contained in the line
checks if the given station is valid
removes a location from this site
checks if the point x y lies on the line
check if a location is valid or not
returns true if this time interval is closed
returns the segment with the given segment id
checks if the two given values lies between
returns the segment with the given segment id
initializes a unit vector using the current coordinates
remove a segment from this multi segment
charge the agv to the current energy level
gets the value of battery module key
remove a segment from the multi segment list
gets the value of deliver location
this method indicates whether the segment is valid
return whether the location is pickup
sets the pickup
removes the load from the list of loads
checks if the value of this dimension is valid for the given unit
adds a load to this room
returns true if the given load may be added to the queue
returns true if the load can be added to the pickup location
returns true if the agent can deliver the message
returns true if the given position is a circle
returns whether the position is valid or not
returns true if this code location code can be picked up
initializes this object
tells if the robot is free or not
checks if a rotation direction is valid for this camera
initializes the unit vector from the x and y coordinates
get accessor for center
moves the agv on the given position
sets the center position
gets the value of direction
checks if the begin and end stations are valid
sets the rotation direction of this rotation object
add a message to the inbox
removes the last message in the inbox
getter for property inbox
remove a message from the inbox
returns the first message in the inbox
sets the inbox
returns true if this inbox is empty
check if the given access object is a valid segment
returns the idobject associated with the communication node
sets the id of the communication node
gets the position of the load carrier
returns true if the load can be added
drive to a given station
check if the bounding volume is valid
return true if the load can be removed
adds the given load to this collection
moves the agv to the given position and the given segment
checks if this is a clockwise rotation
remove a load from this project
set the bounding volume
remove all load
change the bounding volume of this node
set the load
check if the key is valid
returns the load
returns the communication node associated with this module
sets the communication node
method to change the position of the component
increment the energy level by the given amount
returns the module with the given id
registers a code module code for localization
decrements the current energy level by the given amount
returns true if the module is valid
is there any energy level set
removes a module from the repository
set the current energy level
removes a module identified by its id
updates the current energy level
set the speed per time unit
set the max energy level
sets the energy charge per time unit
adds a segment part to this message
removes a segment part from the message
removes a segment part from the segment
checks if the given part is valid for this container
drive forward agv
moves the agv to the given position and the given direction if necessary
returns whether the given position belongs to this position
activates the configured
checks the route
todo this should be a test case
convenience method for
perform a single step
returns the action result to the controller
route to charge location
parks the stations to park the given segment
receive a message
sends a message to the server
assign a message to the transport base
gives the difference between the speed per time per time unit and
get the accuracy
set the accuracy in the given unit
returns the perception result
sets the perception result
sets the range value with the specified unit
gets the value of message
to set the content of the token
gets the value of receiver
set the receiver
gets the storage location for this file
sets the storage location of this product
gets the location of this charge
get the segment that contains this message
sets the location of this charge
set the segment
set the energy level to achieve
gets the station
sets the station
applies the law influence level activity to the given environment
returns true if this influence is applicable to the given influence
this method applies the law influences to the given environment
checks whether the influence is applicable to this influence
returns the sense duration
the time interval that the sense was left on the ground
checks whether the influence is applicable to this influence
this method returns a time interval representing the sense position and the
returns true if this influence is applicable to the given influence
returns a time interval object representing the start and end time of the
returns the duration of communication
this method is called by the robots to do some additional work
checks whether this influence is applicable to a given influence
checks whether this influence is applicable to the given influence
this method returns a time interval that represents the sense station
this method returns a time interval representing the sense segments of the
checks whether the influence is applicable to this influence
determines whether this code multicast influence code is applicable to
returns true if the receiver is applicable to the given influence
returns the sense duration
returns a time interval object representing the time between the
gets the time interval that is used to schedule the tasks
applies law influences to the current state and returns the
checks whether this influence is applicable to the given influence
gets the duration of receiving a message
returns true if the influence is applicable to this pick list
loads the activitys
checks if this code iacac code is applicable to an influence
returns a new time interval that represents the current pick
the method returns the time interval that is the direction of the sense
returns true if the influence is applicable to this influence
returns the picked duration
returns a time interval object representing the time between the
checks whether the influence is applicable to this influence
calculates the time interval for a given drive to station influence
returns true if the influence is applicable to this driven influence
returns the segment
returns the position of the current node
sets the segment
sets the location of this object
sets the position of the node
to set the station object
sets the perceptions vector
getter for carry load
set if the loading operation is carrying the load
set the current energy level
apply the effect to the current state
apply the effect to the current state
applies the effect to the current state
applies the status of the effect to the specified movement state
returns the location of the storage
sets the storage location for the device
used by hibernate
gets the location of this charge
sets the position of this node
apply the current action
apply the layout to the given environment
apply the layout to the given environment
apply this load module
sets the agv
applies a perception
apply this perception to the layout
applies the current battery
apply this effect to an environment
apply the current layout to the given environment
apply this perception to the given environment
gets the value of activity subject
sets the value of activity subject
returns the time point
to set the time point of the execution
sets the type of the activity
sets the storage location for this instance
gives the effect of the picking
method get position
gives the effect of the change energy at the given time interval
sets the position
gives the effect of the robot by adding up the appropriate amount of
gives the effect of the robot by adding up the appropriate amount of
sets the location of this charge
two charge battery activity objects are considered equal if their
sets the storage location for this
returns the effect for this battery
gives the effect of the robot
sets the energy use per time unit
sets the position
generates a effect that will generate load traces
gives the effect of the robot
gives the effect of the robot
gives the effect of the robot
gives the effect of the robot
gives the effect of the robot
gives the effect of the current sensor
returns the effect that this effect will use to calculate the time
get the effect that this entity represents
sets the priority of this order
returns the creation time of the presentation
sets the creation time of the presentation
returns the load id
sets the load
gets the end location id object
sets the end location id
returns the end time of the pulsemem
set the end time of the pulse
gets the start location id object
sets the start location id
returns the start time
set the start time
calls the method to build the gui
create an instance of
create an instance of
set the simulation environment
creates a straight line segment part between two points
starts the active entity manager
creates a straight line segment between two given points
todo not implemented yet
creates a circle segment part that uses the given position
pause the application
creates a circle segment part that uses the specified id and position
resumes the application
returns the transport manager agent that is in order to
sets the code transport manager code to be used to obtain order
builds the agvrobot object of this server
sets the angle of the line
set the height of this world unit
returns the position of the node
sets the position of the vertex
set the width of this world
returns the action model interface
get the environment structure builder
sets the builder
method used to synchronize the deliberation primitive execution information with
returns the agent time manager for the given agent
set the energy use per time unit
adds an agent programming interface to this programming
removes an agent from this programming
getter of the property tt agvs tt
returns true if the server is running
stops the joint controller
pauses the auto autoemanager
resumes the joint to connect to the master
returns the order location manager
sets the code order location manager code of this simulation
at startup create and show the main frame of the application
create the list of filterable categories
remove all the conditions and add them again
adds a new visibility changed listener
removes the given listener
called when the visibility has changed
resets the ui to its default state
this will enable disable the default button of the ribbon application
adds a method dialog listener to this dialog
this method enables disables the private button of the tool
removes the given listener from the list of listeners
this method enables or disables the protected button of the tool
this method enables disables the public button of the tool
set the default selection
set the selection state of this member
set the selection state of the protected checkbox
set the selection state of this member
called when a type is selected
handles the exception by displaying a dialog with the message
removes all the edges and edges of the model from the parent
removes the child model from the relationship cache
generates the code for the relationship
hide all relationships of a given type
creates or updates the connection router for this plug in
show the relationships of a given part class
returns the type model that corresponds to the given type
selects and reveals the newly added resource in all parts of the active
maps an abstract model to a model
removes the given element from the cache
sets the project to be used by this page
update the display of the items in the menu
returns the underlying project
associates a model with an element
removes the given element from the model
adds a child to this note model
add a bendpoint to this connection at the specified location
adds a child relationship model to this relationship model
updates relationship information
updates the types in the type model
add a relationship to this entity
set the part class of this container
returns the source type model of this wizard page
returns the type model of the target of this
sets the source of the relationship
sets the target endpoint of the connection
set the list of bendpoint objects
overridden to make sure that this relationship is visible
toggles the visibility of the relationship group
updates the cardinality of this relationship
sets the location and size of this component
make the selection tool active
set the child model
sets the location of the object relative to the parent
sets the size of the panel
creates the context menu
opens the code file code in the code jfile chooser code
get the comment entered by the user
creates the type
set the value of a property of the root model
adds a key action pair to the shared key handler
returns the value of the property in the root model
toggles the property on off
returns the root model of this component
sets the location
sets the location of this component to the specified x y location
sets whether or not this is an interface
sets the size of this component
sets the size of the component
returns the size of the panel
adds a listener for a given property
fire a property change event to all registered listeners
returns the parent of this node
sets the parent of this component
converts the cmodel into an xml representation
sets the visibility of this column
refreshes the list of children and fires a property change event
forces thisesh to be refeshed
invokes the creation dialog for the given entry tool
this method is not supported
this method is called by the framework when this object is valid
set the drawn size of the board
adds the child compartment
add a child to the field compartment
adds the given method model to the method collection
add an incoming edge
checks if a list contains a duplicate record
remove an incoming edge from the list of incoming edges
adds an outgoing edge to this node
removes an outgoing edge from the list of the directed acyclic graph
adds a implicit relationship to the list of implicit relationships
returns the key handler with common bindings for both the outline and
removes a implicit relationship from the list of implicit relationships
executes the given command
sets the label of this item to the given string
convert converted html to html
convert converted label to html
writes the note header to an xml representation
fire an event to indicate that the editor has unsaved changes
returns the file currently edited in the editor or null if none
sets the enabled flag
appends the quick fix actions to the given menu
set the input for the viewer to the current input
sets the editor input
sets the absolute location of the component
sets the absolute location of the component
sets the connection figure
create the actions
initializes the copy paste tree viewer
gets the outline preferences
sets the recursive figure
creates the actions and associated toolbars
create the context menu for the editor
update the editor
get the parent of the element
sets the preferred height of the panel
returns the text of the text flow
sets the text of the text flow to the given value
returns whether the given element has children or not
returns an image for the given element
saves the current file
returns the model of this as a field model
returns the display name for the given element
returns the figure of this as a ledfigure
update the font
returns the model of the compartment
updates the current font
returns the method model of this element
synchronizes the current file with the current file
get the part that is in the model
updates the source connection anchor of the given node
updates the target anchor of the given edit part
set the background color of the selected item
marks the command as saved
updates the text of the cardinality label
updates the current font
refreshes the list of files
setter for property source
sets the target type model
sets the root
returns the root of the tree
returns the figure of this as a relationship figure
helper method to update the current font
returns the code relationship model code that is associated
returns the type model of this represented as a type
returns the figure of this as a agent type figure
returns the model of this as a note model
returns the figure of this as a code itype figure code
maps a model part to an edit part
removes the given model from the set of maps
undoes the last action
set the editor for this diagram
deactivates this activation
updates the visibility of the model
update the icon
repaints the specified label
returns the member model of this
sets the selection provider for this part
sets the contents of this editor
returns true if the given model is supported by this
executes the command
sets the enabled flag
setter for the ijava element to be converted
returns true if the given element has the handle identifier of
returns the real size of the given figure
save the given figure to the disk
save the image to the disk
set the background color
push a new header to the stack
pushes a new header onto the stack
creates a new header
append the header to the end of the list
writes the key
save the project
write a map of name value pairs
appends the given string to the buffer
adds a line to the given xml node
add a child node
returns a string representation of the tree rooted at
returns an image descriptor for this file
accepts a compilation unit
sets the visibility of the node
this method is called before the visit method of the
returns the compilation unit for the given java element or
visits the given type specific ast node
visit a single variable declaration
adds a new import to the compilation unit
organizes the imports and the selected files
organizes import statements of the given type
set the selected relationship
set the cardinality of this relationship
sets the source type
sets the type to be selected for the target
set the relationship model for this table
called when an unknown relationship is removed
process the given block adding it to the list of statements
remove a relationship model from the uml part
returns the relationship model for the input source and target
sets the value of the retain flag
adds a node to the graph
removes a node from the graph
adds a pattern to the graph
returns the vertex at the given index
adds a field declaration to the list of fields
creates an assignment
returns the x coordinate of this point
returns the y coordinate of this point
returns the z coordinate of this point
returns the number of nodes in the list
sets the changed flag
returns the euclidean distance between two points
computes the distance between the ith and barycenter
returns the repulsion energy between the node with the specified index
computes the factor for repulsion forces code repu factor code
computes the node number of barycenter of all nodes
adds a node to the octtree
moves a node to another position and makes sure that the
returns the maximum extension of the octtree
refreshes the list
returns the cluster at index index
this method refresh clt nodes list
create the cvs options
enables the minimizer options
enables the time window options
method is in the java
changes the enabled state of this panel
enables the graphical components for the svg options
pops up the file chooser dialog
this method refreshes the display
tests the graph
remove an element from the compilation unit
update the display and repaint the panel
puts a compilation unit into the store
shows or hides the label graph associated with the vertex or not
todo document me
todo missing method documentation
adjust front color
returns the color used to draw the front of the buffered image
adds a cluster to the cluster list
repaints the canvas
removes a cluster at a given index
returns cluster at the specified index
returns a cluster with the given name
return the number of clusters
invoked when a graph event is fired
moves a cluster up one position
todo missing method documentation
moves a cluster down one index
refreshes all clusters
returns the messages list
returns the message at the specified index
returns the number of messages in the list
returns a string representation of this object
clears the messages list
checks if a message is already in the list
return the message
merges two strings
loads properties from the classpath
merges two strings
send a list of mails
send a list of emails to the server
set the time stamp
set the uuid
compares two messages
returns a string that represents the log message
switches the current panel
calculates the payment info for the list of courses
switches to the specified panel
convenience method to retrieve the user id or email address
clears the volunteer service model
returns the teacher with the given id
clears the date and subject information of this user
returns a new instance of the class specified in the constructor
set the value of this row from a result set
create the registration display information
creates and returns a new row for this table
set the value of this row from a result set
creates a new row for the table
set the value of this row from a result set
create a new row for the table
set the row data
clears the list of fields
returns the course reg for a given id
switches the given panel to the main panel
set group mail info
sets the mail information
clears the calendar model
clears the vote
create the info for the registration display
returns the label
sets the label value
checks if the file already exists
find an object by its id
returns the object associated with the given query
returns a list of objects retrieved from the database
new row is added to the table
set the value of this row from a result set
new row of the same type as this object
set the value of this row from a result set
creates a new object for an object
inserts a new row at the end of the table
creates a new row for the table
set the value of this row from a result set
sets the values in the row
saves the given object to the database
creates a new row for the table
creates a new row for the table
set the value of this row from a result set
creates a new row for the table
set the row data from a result set
delete the object from the database
deletes a list of objects from database
returns the earliest date for the account
closes the session
return a html message with the timer details
gets the message
show db index info
returns the active system info object
closes the session
get the current set of active flags
finds the active page of results by the given key
copies courses from one or more subddies to another
commit the transaction
get the number of rows in a result set
get the native format string for phone number
find number of payemnt by a memo
returns a new row for the table
return the name of teacher in chinese form
execute native sqlupdate
creates a html tag that indicates that a table row is not even
execute an update insert delete
return the current school
periodically searches for a teacher for a given type
clear the current school flag
create search for a critera
gets the content of the document without the tag
execute a query and return a list of results
updates the active flag for the account
checks if the teacher is alreader
count the number of students
returns phone number
returns the email of the user
return a list of
execute a query based on a property
gets the app fee4 student
sets the app fee4 student
returns whether this item is selected
execute a query
execute a sql query with replacement parameters
selects records from the data store
load an object from the database
creates a new row for the table
retrieve an object from database
get standard course information
rollback the transaction
saves all objects in the list to the database or updates a record
saves or updates an object in the database
get email address
set the row data from a result set
this method is called when a message is received and will receive a
adds a code user code
removes code user code
call code perfomed code when the event has been perfomed
sends code message code to the peer with code send code
registers code felper event listener code which will receive
returns the html needed for the user link
sets the ejb name
checks if the method is a cmf method
extracts the content of a file into a buffer
returns an iterator over all module roots in this application
getter for code project code
returns the dependency tree root node
starts a monitor thread that monitors the jetty server
gets the command line arguments
find the port number on which the compile server will run
returns the absolute path of the file with trailing
get the project source path
get the description of the help document
adds the content of this node to the given document
adds the content of the footer to the given document
launches the help application
returns a copy of the list associated with the given key
return a copy of the path associated with the given key
returns the filtered resources list as a list of strings
add a resource to be filtered
returns the list of unfiltered resources
adds a resource to the list of resources unfiltered
returns the test resources filtered by the test case or an empty list
adds a resource to be filtered
returns the resources of the test cases that will be run
adds a resource to the test collection
returns a copy of the path containing all sources
adds a path to the list of generated source paths
returns a path to the source code for test sources
add a source to the list of generated test sources
only for test cases
only for test cases
send a list to a specific address
send a list of files to a specific address
loads the avatar for the given class
returns a hash code for this object
reallocates the empty slot list
returns this throwable object
set the stack trace
returns a set view of the keys contained in this map
returns a collection view of the values contained in this map
enable cache constants for this class
returns the resource bundle for the current creator
returns the locale to use for formatting or parsing
returns a set view of the keys contained in this map
create a string method declaration from a default value
returns a verbose string representation of this node
returns the resource bundle of the error
returns a unique key for the method that should be generated
this method is called after the response has been serialized
returns a class that has a custom serializer for the given
override this method to examine the serialized version of the request
returns true if the given method is expected to throw any exception
determine whether the specified interface is implemented by the remote service
resets this writer to a state that can be written to the
appends a token to the buffer
returns the cause of this exception
initializes the cause of this exception to be null
called when the machinery of this class itself has a problem rather than
adds a widget to the panel
intercept all events and fire them on
adds a widget to the panel at the specified position
sets the position of the specified child widget
fires a key down event to all listeners
gets the left offset
fires a key press event to all listeners
returns the top offset of the given widget in the widget hierarchy
fires a key up event to all listeners
cancels the current key
returns the widget that is the parent of this widget
replaces the contents of the specified cell with a single space
gets the cursor position attribute of the component list object
returns whether this site is attached to the system
adds a new item containing the specified text
returns the number of cells in the specified row
this method is called immediately after the activity is loaded
adds a child item to this item
returns the number of columns in the model
returns the selected text contained in this text component
this method is called when a widget is attached to the browsers document
returns the child at the specified index
returns the number of rows in the model
gets the selection length
this method is called when a widget is detached from the browsers
returns the number of children
resizes the grid to the specified number of rows and columns
remove this widget from its parent
resizes the grid to the specified number of columns
returns the index of the given child
resizes the grid to the specified number of rows
creates a table cell
returns the parent item of this item
this method is called to prepare a cell in the table
returns the state of the button
ensure that the specified row is valid
selects all text in the text component
sets the cursor position
returns the layout direction of the given widget
removes this item from its tree
sets the selection range attribute of the abstract tree table object
removes a child item
removes all items from this menu
sets the alignment of the text in the header
sets the selected state of this item
sets the state of the node
sets whether this items children are displayed
sets the user object associated with this node
sets the horizontal alignment for this layout
get the value of text align string
sets the vertical alignment for this layout
sets the height of the cell associated with the given widget related to
fires a cell clicked event to all listeners
sets the vertical alignment of the given widget within its cell
sets the amount of spacing between this table cell content
fires an error event to all listeners
fires a load event to all listeners
return the gwt widget element to be wrapped
adds a style name to the current element
sets the widget to be wrapped by the composite
gets the absolute left position of the element
sets the widget
gets the absolute top position of the element
adds a widget to the panel at the bottom of the screen
checks if widget w is in this container
gets the objects offset height in pixels
adds an item to the end of the list
gets the objects offset width in pixels
gets the widget at the given index
adds an item to the listbox at the end
gets the style name associated with this object
searches the array for the given widget
removes all elements from the document
gets the title of the hidden field
inserts a widget before the specified index
gets the number of items contained in this menu
get an iterator over the widgets in this composite
gets the text associated with the item at a given index
tells whether or not this element is visible
removes the element at the specified position in this list
removes a style name
removes the widget
gets the currently selected index
sets the objects height
gets the value associated with the item at a given index
fires a focus event to all listeners
fires a focus event to all listeners
sets the css size in pixels
gets the number of items that are visible
fires a lost focus event to all listeners
inserts an item into the list box
sets the size of the image
inserts an item into the list
gets the menu that contains this item
sets the style name associated with this node
gets the sub menu associated with this item
determines whether an individual list item is selected
sets the title of the hidden field
gets whether this list allows multiple selections
sets the command to execute
sets the sub menu associated with this item
sets whether this element is visible
sets the objects width
removes the item at the specified index
sinks events that are related to this event
sets whether an individual list item is selected
adds a style to the specified cell
sets whether this list allows multiple selections
unsets events bits
sets the element
gets the td element representing the specified cell
adds a widget to the panel
sets the currently selected index
adds a widget to the panel
gets the widget
sets the value associated with the item at a given index
gets a style from a specified row
sets the number of items that are visible
set the widget for this panel
returns the container element
p gets the value of the vertical align string property
insert a widget into this container at the given index
adds a widget to the panel
this is a hook to allow subclasses to get their own children
determines whether the specified cell is visible
fires a popup closed event to all listeners
gets the action associated with this form
gets the encoding used for submitting this form
gets the http method used for submitting this form
gets the forms target
removes a style from the specified cell
sets the action associated with this form
sets the encoding used for submitting this form
sets the http method used for submitting this form
submits the form
gets the name of the hidden field
fires a before tab selected event to all listeners
fires a tab selected event to all listeners
sets the height of the specified cell
hides the panel
called when a key down event is received
called when a key press event is received
gets the url of the image
called when a key up preview is received
sets the url of the image
getter for property results
sets the popups position relative to the browsers client area
fires a change event to all listeners
gets the popups left position relative to the browsers client area
sets the value of cancel
adds a widget to the panel
gets the popups top position relative to the browsers client area
returns true if the dialog has been cancelled
adds a widget to the panel
sets the style name associated with the specified cell
gets the deck panel within this tab panel
this method must be called whenever a widget is removed
shows the popup
returns the tab bar within this tab panel
gets the filename of the file
fires a scroll event to all listeners
adds a widget to the panel
inserts a widget into the tab panel
sets whether the specified cell is visible
inserts a widget before the specified index
removes the given widget and its associated tab
sets the width of the specified cell
fires a tree item selected event to all listeners
fires a tree item state changed event to all listeners
programmatic equivalent of the user clicking the button
fires a mouse down event to all listeners
fires a mouse enter event to all listeners
gets the column span for the given cell
gets the row span for the given cell
fires a mouse leave event to all listeners
sets the column span for the given cell
sets whether the specified cell will allow word wrapping of its contents
fires a mouse move event to all listeners
sets the row span for the given cell
fires a mouse up event to all listeners
adds a new cell at the given row
returns the number of cells in the given row
gets the index of the currently visible widget
get the current flex cell formatter
returns the number of rows in the table
gets the element representing the specified cell unsafely meaning
inserts a widget before the specified index
inserts a new cell into the table
inserts a row before the specified row
shows the widget at the specified index
removes the specified number of cells from the specified row and column
creates an element for the cell at row column
ensure that the cell exists
inserts the specified row at the beginning of the table
ensures that the specified item is visible by adjusting the visible
gets the attribute at the given position
gets the vertical scroll position
gets the horizontal scroll position
sets whether this panel always shows its scroll bars or only when
sets the vertical scroll position
sets the horizontal scroll position
convenience method to set an attribute on a cell
gets whether this widget is enabled
inserts a widget before the specified index
sets whether this widget is enabled
adds a style to the specified row
fires a click event to all listeners
gets the td element representing the specified row
cancel the timer
schedules a timer to elapse in the future
schedules a timer that elapses repeatedly
gets a style from a specified row
gets whether the specified row is visible
removes a style from the specified row
sets the style name associated with the specified row
sets the vertical alignment of the specified row
sets whether the specified row is visible
returns the first serializable superclass for the given class
ensure the tr element representing the specified row exists for
returns true if the given field needs public or private accessors
validates the service interface
checks to see if the given type has serializable subtypes
convenience method to set an attribute on a row
this method will generate a native jsni accessor method for every field
adds a table listener to the table
identify the custom field serializers that are available
create a proxy for the given logger and return its qualified name
removes all the cells from the specified row and column
returns true if the type is serializable
checks whether this type represents a valid interface
returns true if the array of serializable types is valid
returns the amount of padding to be added around all cells
generates the private static type fields
gets the amount of spacing between cells
generates the service definition
gets the html content of the specified cell
returns the row formatter
gets the text within the specified cell
gets the widget in the specified cell
returns true if the cell at row index and column index is present
returns an iterator over the widgets in this container
creates a new source writer
method that receives events
makes an interface of the specified type to the specified category
emit the class tree
registers the given method creator for the given return type
removes a widget from this cell
classifies the type of the class
define a class prologue
given a type determine what jsni instance will be used
removes the table listener
returns the writer used to write source code
print a line of text to the current writer
prints a string to the current creator
mark the start of a java doc comment
end java doc comment
sets the width of the border
sets the amount of padding to be added around all cells
encodes this json string into a string
retrieves the string representation of this value
this will return the value of the header as a string with backslashes
return the json number or null if this is a number
returns the string representation of this operand
sets the amount of spacing between cells
returns the boolean value of this number
get the boolean value
returns the string representation of this operand
gets a test instance from the array
get the null value
make this jsonarray an array if it is an array
sets the html contents of the specified cell
replaces the jsonvalue at the specified index with the specified value
is this jsonobject or object
return a json representation of this jsonarray
return a set of the keys
is this jsonnull
returns the number of key value mappings in this map
returns the length of the list
this method removes a named item from the xml file system
sets the text within the specified cell
this method returns the xml element for the xml document
this method delegates to the native method code set named item code in
this method gets the element using the xmlparser element id
return a string representation of this object
returns the string representation of this node
returns a string representation of this node
this method creates a code cdatasection code node whose value is the specified
this method calls the xml parser
this method gets the xml element at the index
this method creates a comment using the xmlparser implementation specified in
this method removes the specified number of bytes from the xml file
returns the content of the xml file
sets the widget within the specified cell
this method creates an empty code document fragment code
returns the value of the attribute specified by the tag name
returns the length of the xml document
this method gets the attribute node from the xml parser
this function inserts a string at the given position
this method creates an element from the native xml parser
this method returns a node list of all the elements in the xml
this will replace the content of the first code count code number of
returns the name of the xml parser
this function sets the xml data to the parser
returns true if the tag name exists
this method creates a text node from the xml file
this will return a substring of the data object
this will remove the attribute from the xml file
delegates to the native method code set attribute code in the
returns the name of the xml parser
this method delegates to the native method code import node code in
removes any widgets text and html within the cell
returns whether the option was specified in the option string
returns a string representation of this tag
returns the value of the js object
returns a string representation of this node
returns a string representation of the object
two items are equal if they have the same dom item type and
returns a string representation of this object
this method breaks the xml parser template into tokens
this method delegates to the native method code append child code in
this method delegates to the native method code build xml code in
getter for property target
returns the key for the cell at code row code and code column code
returns the error code
this method sets the xml data from the string reader
returns the uri of the xml namespace
returns the name of the widget for the given element
returns the prefix that the parser uses to read the js object
returns true if the underlying xml parser has attributes
returns true if the java script object has child nodes
returns the widget associated with the given element
this method delegates to the native method code insert before code in
normalize the xml document
this method delegates to the native method code remove child code in
this method delegates to the native method code replace child code in
removes the given widget and its associated elements from the
this method sets the value of the node
checks that the cell at the given position is valid
checks that the row falls within the bounds
creates a new cell
helper method for accessing the body element
gets the number of elements in the dom
inserts a new cell into the specified row
inserts a number of cells before the specified cell
inserts a new row into the table
does actual clearing used by clear cell and clean cell
removes the specified cell from the table
removes the specified row from the table
changes the cell formatter
changes the row formatter
creates the meta model objects for the package
creates a new adapter for an object of class
this adds a property descriptor for the scheduler feature
this adds a property descriptor for the id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
this adds a property descriptor for the deadline feature
creates the meta model objects for the package
this just records the information
create a new model
this adds a property descriptor for the puproperty
this adds a property descriptor for the bound ll73 feature
this adds a property descriptor for the schedulable feature
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the id feature
this adds a property descriptor for the wcrt feature
this adds a property descriptor for the scheduling feature
this adds a property descriptor for the scheduling feature
this adds a property descriptor for the id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
this adds a property descriptor for the deadline feature
creates the meta model objects for the package
returns the label for the specified type name
this just records the information
creates a new adapter for an object of class
create a new model
creates the meta model objects for the package
handles activation of the editor or its associated views
this just records the information
create a new model
returns the label for the specified type name
creates a new adapter for an object of class
this adds a property descriptor for the period feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the uproperty
returns the label for the specified type name
creates the meta model objects for the package
this just records the information
create a new model
handles activation of the editor or its associated views
creates a new adapter for an object of class
handles activation of the editor or its associated views
this adds a property descriptor for the value feature
returns the label for the specified type name
this adds a property descriptor for the nb tasks feature
creates the meta model objects for the package
returns a diagnostic describing the errors and warnings listed in the resource
creates a new adapter for an object of class
this adds a property descriptor for the schedulable feature
handles activation of the editor or its associated views
creates the meta model objects for the package
this just records the information
create a new model
handles activation of the editor or its associated views
returns the label for the specified type name
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
this adds a property descriptor for the previous feature
this adds a property descriptor for the next feature
this adds a property descriptor for the root feature
this accesses a cached version of the property sheet
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
this adds a property descriptor for the policy feature
this adds a property descriptor for the datas feature
this adds a property descriptor for the cpu feature
this adds a property descriptor for the sub id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the priority feature
this adds a property descriptor for the id feature
this adds a property descriptor for the atomic feature
this adds a property descriptor for the id feature
this adds a property descriptor for the policy feature
this adds a property descriptor for the previous feature
this adds a property descriptor for the next feature
this adds a property descriptor for the id feature
this adds a property descriptor for the period feature
this adds a property descriptor for the deadline feature
this adds a property descriptor for the release time feature
this just records the information
create a new model
creates the meta model objects for the package
handles activation of the editor or its associated views
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the uproperty
this adds a property descriptor for the node1 feature
this adds a property descriptor for the period feature
this adds a property descriptor for the wcet feature
this accesses a cached version of the property sheet
returns the label for the specified type name
this just records the information
creates the meta model objects for the package
create a new model
creates a new adapter for an object of class
this adds a property descriptor for the id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
this adds a property descriptor for the deadline feature
this adds a property descriptor for the priority feature
handles activation of the editor or its associated views
this just records the information
create a new model
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this adds a property descriptor for the policy feature
this adds a property descriptor for the datas feature
this adds a property descriptor for the cpu feature
this adds a property descriptor for the sub id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the priority feature
this adds a property descriptor for the atomic feature
this adds a property descriptor for the id feature
this adds a property descriptor for the id feature
this adds a property descriptor for the policy feature
this adds a property descriptor for the sub tasks feature
this adds a property descriptor for the previous feature
this adds a property descriptor for the next feature
this adds a property descriptor for the id feature
this adds a property descriptor for the period feature
this adds a property descriptor for the deadline feature
this adds a property descriptor for the release time feature
creates the meta model objects for the package
creates the meta model objects for the package
this just records the information
create a new model
creates a new adapter for an object of class
this adds a property descriptor for the id feature
this adds a property descriptor for the wcrt feature
this adds a property descriptor for the scheduling feature
this adds a property descriptor for the id feature
this adds a property descriptor for the wcrt feature
this adds a property descriptor for the scheduling feature
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
creates the meta model objects for the package
this just records the information
create a new model
creates a new adapter for an object of class
handles activation of the editor or its associated views
this adds a property descriptor for the value feature
this adds a property descriptor for the nb tasks feature
creates the meta model objects for the package
this just records the information
create a new model
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
creates a new adapter for an object of class
this adds a property descriptor for the puproperty
this adds a property descriptor for the bound feature
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
creates the meta model objects for the package
this just records the information
create a new model
this accesses a cached version of the property sheet
creates a new adapter for an object of class
this adds a property descriptor for the puproperty
creates the meta model objects for the package
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
creates a new adapter for an object of class
this adds a property descriptor for the result feature
handles activation of the editor or its associated views
creates the meta model objects for the package
handles activation of the editor or its associated views
this just records the information
create a new model
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
creates a new adapter for an object of class
this adds a property descriptor for the scheduler feature
this adds a property descriptor for the id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
this adds a property descriptor for the priority feature
this adds a property descriptor for the deadline feature
this just records the information
creates the meta model objects for the package
this accesses a cached version of the property sheet
create a new model
this accesses a cached version of the property sheet
this adds a property descriptor for the next feature
this adds a property descriptor for the next feature
this adds a property descriptor for the previous feature
this adds a property descriptor for the todo feature
this adds a property descriptor for the previous feature
this adds a property descriptor for the todo feature
creates the meta model objects for the package
this just records the information
create a new model
creates a new adapter for an object of class
this adds a property descriptor for the scheduler feature
this adds a property descriptor for the id feature
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
this adds a property descriptor for the priority feature
creates the meta model objects for the package
this just records the information
this accesses a cached version of the property sheet
create a new model
handles activation of the editor or its associated views
this adds a property descriptor for the wcet feature
this adds a property descriptor for the period feature
handles activation of the editor or its associated views
returns the label for the specified type name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
remove a sparql knowledge source from the knowledge base
set the reasoner component
adds a knowledge source to the knowledge base
updates the factor
rebuilds the component
add a checkbox
returns a jlabel containing the configuration name and description
notifies all listeners that have registered interest for
returns a string representing the percent of two longs
checks if the option is special
updates the current option panel
called when panel is activated
convert a list to a string
called when the algorithm is terminated
add the root base directory if there is no parent
returns the component manager for this container
get the knowledge source
create a new knowledge source
initialize the test fixture
this method validates the configuration
tests the learning result
return a new reasoner instance
return the abstract reasoner instance with the given class and
returns the learning problem instance associated with this
create a new learning problem instance and return it
change the learning problem
returns the learning algorithm
indicates whether the specified tab should
returns whether or not the specified tab is enabled
this method enables all mandatory options
returns a short string representation of an iri
gets the maximum box value
gets the current axiom to be processed
returns whether smart indentation is enabled
returns whether the lines are wrapped
sets the smart indent
sets whether the lines are wrapped
get the component for this item
when an action is performed editing is ended
when an items state changes editing is ended
returns the graphical coverage panel
get the shift old concept
getter for property shift covered
get the shift new concept
get the new concept x shift
removes all elements from the panel
returns the description of the evaluated expression
trace the given named class
gets the noise
gets the maximum execution time of the test suite
gets the max number of results
returns the owl radio button
get the el profile button
returns the state of the all quantor checkbox
returns if exists quantor mode is selected
returns true if negation is selected
gets the use has value
get the profile panel
gets the cardinality limit
gets the state of the cardinality restrictions check box
this method sets the panel to the owl profile
sets the text of the error label
set the settings to the elements of the panel
enable or disable the count more box
responds to the user clicking the radio button
gets the value of the x axis property
gets the value of the y axis property
get the individual name
gets the individual point
writes the keyword of a nary set
returns an individual of the type dllearner
this method does nothing
gets the suggestion class panel
gets the options panel attribute of the main frame object
this event was generated by a tool when a mouse button is pressed
toggles the icon toggled state
sets the status bar visibility
set the hint message
reset the toggled state
returns the hint panel
shows or hides the options panel
get the add button
called when a hypertext link is updated
disposes of all resources associated with this panel
removes all run buttons
returns a detail panel for suggested concepts panel
sets is inconsistent value for this offer
get the inconsistent status of the missing property
adds the run button listener
adds an accept button listener
returns the graphical coverage panel
adds an action listener to the advanced button
remove all graphical panels
gets the learner view
show or hide the help button
tests if this node is an auxiliary tree
sets the ltag builder instance to empty the parser
increment the frequency
stops the extraction algorithm
sets the freshness in days attribute of the ticket object
converts a model to a ontology
filter namespace prefixes
return the result set in a result set that can be re parsed
return the number of objects in a json query
executes sparql query
returns a sparql result limit for the given sparql result
rewindable send true if the next set of data is available
this method will abort the execution of the query
returns the sparql query string
returns the result as json
returns the byte converter
setter for property converter
returns the xml string generated by this iterator
sets the subclass map
returns true if the solver should dissolve blank nodes
set the drop disjuncts
convert the option value to a conf string
returns whether this field contains a reference to a file
returns whether this requestor requires an init
returns whether this class references another owlclass
returns true if this property is a subproperty of the given property
returns true if this set contains the given description
adds a new axiom to this axiom set
add all the statements in the given kb to this knowledge base
returns the total number of nodes in the tree
gets the subtree of this description at the given index
returns the depth of the deepest descent of all the children
adds a child description
adds a child description at a particular index
removes a child description from the list of children
register a component instance to the component pool
remove a component from the component pool
adds a config entry to the history of the component
change the sources
return a reasoning service reasoner for component
resets the statistics
remove a component from the pool of components to be managed by this
sets the state of the object to updated
change the learning problem
set the reasoner component
return the reasoner
returns the name of the given component
this method sets the reasoner component
returns the current sparql query
converts a json object into a string that can be written to a
get manager for this ontology
prepares the role hierarchy
minimizes a given description
return the object of the same type as this one
init all the components
returns whether this hierarchy is prepared
convert negative examples from instances of parallel classes
makes a set of negative examples from all other examples
this method makes all negative examples from the instances of the class
adds a number to this statistics
prints the current time and sets the time to the current time
prints a string and sets the time
returns the mean of all values added so far
add an entry to the list
returns the mean as a string formatted as a percentage of the total
prints a string to the logger
sets the time
reset the time to the current time
returns the time in milliseconds since the last call to
returns the time in nano seconds
returns the selected text
adds a list of table row columns to the table
returns the precision of the set regarding the given
calculate the recall of the retrieval at the current position
constructs a code string code with all attributes in name value
returns true if the given node is equal to this node
returns the label of the summary
returns the value to which the specified key is mapped
sets the param
get the number of elements in this training set
getter for the first tree
returns the tree2
adds a tuple to the tree
removes the relation between the tuple and the tuple
return the root node of the tree
compute the level of the element
adds a node to the level of the elment
replaces code old code in code new class label code with code new
adds a new label to the tree
returns the node at a given position
returns a string representation of the root node
get the cov pos for the covered negatives
this method returns the size of the whole set
adds a description to the list of descriptions
returns the node score for a given node
get the number of positive examples that are covered by the given description
get the number of negative examples that are covered by the given description
calculate the negative examples for a given description
correctness of the rule
calculate the completeness of the set
returns the description of the tree
get the score
returns the addition
checks if the minimum execution time has been reached
sets the probability for crossover
sets the mutation probability
sets the elitism
set the number of individuals to be selected
check if there are too many classified positives with respect to the
check if there are too many classified positives with respect to the
sets the number of individuals
sets the post convergence generations
sets the selection type
setter for property algorithm type
handle add title bar action
handle spot map click action
handle settings click action
handle search title bar action
handle instructions action
handle profile title bar action
handle the creation of a location node
parses the gpx file
this is the run method for the thread
unloads the current service
get an event property
set the event property
delete a data object from the database
adds a new entry to the list
set the column name to be filtered
adds a filter value to this filter
sorts the list
this method loads database driver
add a table sort key to the set
creates a button for the menu
creates a menu item with an attached icon and action
sets the main content pane of the application
initializes the filter
refreshes the filters
builds the filter panel
this method is used to fetch the data object which contains the given
fetches data from the database with the given filters
enable disable all menu bars
sets the parent popup of this menu
tests the simplest possible usage of the create macro
test for ptoc1
checks the install assumptions
runs the undeploy procedure of objects not registered in the deployments
looks up object that is specified by the context
process the framework argument and set the
creates an action
print help for the command line options
causes the virtual machine to stop running and the program to exit
exit the application
this method executes the antdepo setup
writes help message
runs appropriate action depending on args
creates a command logger appropriate for the message level
lookups config property for default build file to use
execute the command
check if the antdepo configuration has been set
list the given context
getter for the jndi role name rdn
getter for the jndi role member rdn
validate the attributes of this task
returns the property
returns command that is executed
add an opts to be executed when the build is executed
implements the ant task execute interface
setter for from attribute
list all commands for this object
create an execute action element
list all the objects for a given type
list all the depots
creates a filepath action element
build up a task to execute remote command
factory method for list actions
lists the modules in the current module context
fetch the path to use for accessing a particular key file
checks if the input string is malformed
configure the sshexec task
execute the update deployments file
execute the command
execute the task
authenticates the user
validate the attributes
sets the code errorhandler code object
sets the project
initialize this manager
set the key to be used in the table
creates a depot object for a node
checks if object was fully qualified
load extension taskdefs typedefs
returns fields as a map of key value pairs
returns true if this context has depot context
returns true if there is no context
sets common framework context properties
sets all properties of the handler
lookup where the specified node reside
checks if object is registered as a node in the tree
get the name of framework node
lookup modules based on the nodes they are deployed on
get the node name of this node
checks if is local
returns the framework node
returns the string representation of this node
returns true if the hostname in the hostname field of the node
checks if the antproject
checks if the antproject
gets child resource by name
check if a child with the given name exists
list the child names
checks if the directory specified by name exists in the classpath
converts an array of string to a node descs
load the property file
returns the properties file and file
returns true if the command is inherited by the given command name
returns the name of the module that the given command name is inherited
returns the list of command names defined by the module
get the module version
returns the number of samples in this distribution
add an acceleration sample to the list of samples
get the acceleration sample at the given index
remove a sample from the collection
removes all samples from the collection
return the time of the first sample
get the time of the last sample
get the maximum x value
get the maximum y value
get the maximum z acceleration expressed in the
returns true if the event has a time stamp
get the minimum x value
get the minimum y value
adds a point to the polygon
get the minimum z acceleration expressed in the
adds all the points in the list to the list of points
removes a point from the polygon
returns the maximum x value if this x y value is visible
returns point at the specified index
accessor for the acceleration expressed in the x direction
returns the minimum x value if the x value is a float
returns the start point of the polygon
set the acceleration expressed in the x direction
returns the last point of the polygon
accessor for the acceleration expressed in the y direction
gets the maximum absolute acceleration value
gets the duration of the segment
set the acceleration expressed in the y direction
returns true if this set has a timestamp
accessor for the acceleration expressed in the z direction
returns the accelerations
set the acceleration expressed in the z direction
sets the accelerations
sets list of points for triangulation
the keylistener event checks for key status events
register a windows hook
unhooks this listener from the window manager
find the next packet from the queue
gets the last packet
returns the timestamp for the last packet received
opens the hwnd in the node
returns the pressure
terminates the special context
returns the tangent pressure
get last packet id or position of last display
get the packet
returns the last packet and orientation
get one packet
returns the rotation to be applied to the last packet received
returns the location of the last cursor
register a windows hook
updates the text field with the given command
inits the panel
the implementation of the save document action called
get all keys
update the view to the model
initializes view to default values
updates text field element according to the selected checkbox
opens the mapping dialog
this method initializes new project dialog
invoked when an action occurs
invoked when an action occurs
this method initializes options dialog
removes the mapping from the model
the implementation of the new gesture action called
load gesture set from file
the action performed method is called when the user clicks on the
performs the save project action
performs the new project action
displays the project
invoked when an action occurs
returns the gesture class of this gesture
returns a string representation of the gesture
initializes the project view and populates it with the tool bars
get the action associated with this event
loads the data from storage
loads a gesture set into the table
clears the table of gesture classes and mapping lists
sets the project file
sets the name of the project to be saved
returns the project file
called when the mouse enters the region
invoked when the mouse exits a component
sets the name of the gesture set file
invoked when the mouse has been clicked on a component
invoked when a mouse button has been pressed on a component
gets the gesture set file name
called when the mouse is released
get the database name
returns the name of the project
performs the action
sets the keys for this map
returns a string representation of this key set
creates and returns a menu bar
returns the string representation of the command
returns the gesture set used for creating the code gesture code
adds a mapping to the list of mappings
removes a mapping from the list of action mappings
shows the dialog
reset the configuration
returns the event manager for this project
adds the second tab
resets the settings
sets the configuration for this genetic algorithm
returns the model
sets whether the document is saved or not
show the dialog
returns true if the document needs to be saved
updates the gesture list
hides the dialog
initializes the values of the components
update the mapping list
update the lists of the gesture
adds the first tab
returns the class of the currently selected gesture
adds a command to the second tab
minimizes this window as the startup window
returns the currently selected mappping
returns the currently selected mapping
enables the menu item
returns the component handler
returns the gesture set used by this editor
returns the action handler
disable the save and delete buttons
enable the save and delete button
sets the current note
freezes the state of the task
export the image to a file in the given format
export the image to a png file
draws a line between the start point and end point
draws a point at the given coordinates
draws a number trace
translates a point
checks if a point is inside the area
computes the center point of the buffer
checks if two points are new in a trace
clears the trace
returns the explorer tree view that is currently selected
sets the value of the property of the passed in object
returns the value of the property
returns the object
add a service to the services map
get the service with the given identifier
removes service from system
starts all registered services
stops all the services
gets the filter
add the extension to the given file
returns the component factory
returns the command to be executed
returns the sender of the message
invokes the given command in a separate worker thread
invoke a method on the command
returns true if this node is the root node
returns the model from the controller
initializes the gesture
sets the title of this container
sets the content of the popup window
set the bottom component
gets the controller
returns the component factory of the controller
called whenever the ui of the panel needs to be refreshed
creates a spacer panel with a specified size
initialize the test suite instance
initialize the input section
initialize the title of the test
initializes the dialog with the given object
shuts down the application
store the properties to the file
initialize the device manager
initialize the device manager with the specified descriptor
initializes the title of the frame
returns the descriptor of the field
creates a spacer panel with a specified size
returns the component factory of the application
initializes the controllers
init the controller
returns a code gesture set list code that contains all the
initializes the sub controllers and views
return the storage manager
sets the storage engine to use
persists an indexed property change event
persists changes to the storage manager
shows a confirmation dialog for the user to enter a yes no
creates a menu item with the given action
increment correct count
returns the number of correct applications of the pattern
increase the error counter
set the test set to which this test set data object belongs
returns the error code of the last operation
increment the number of rejected errors by 1
adds a code gesture set code to this manager
increment the number of correct rejection correct
get the reject correct answer
gets the class name of the gesture
adds a list of gestures to this manager
returns the number of correct answered tests
returns the number of errors
get number of reject correct answers
adds a batch result to this batch result
get number of reject error
returns the number of samples
adds a algorithm to the batch
adds a gesture set to the list of known gestures
returns the number of noise in the sample
increase the number of errors of the specified class by the
increment the number of correct classifications
increment the number of correct rejection correct
sets the value of this property
sets the end value of the range
returns the end value of the range
notify the error of a rejected request by a user
sets the start value of the range
gets the start of the time range
returns the precision of the current number of corrects
sets the step of the arithmetic
returns the step of the equation
gets the recall of the sample
adds a value to the list of values
set the start time
set the end time
sets the maximum number of rows to retrieve
get the total running time
return the maximum value of the slider
sets the minimum number of genes in a geneset
returns the configuration object
returns the minimum value of this range
adds a gesture handler to the list of gesture handlers that
runs the code gesture handler code and fires the event
removes a code gesture handler code from this manager
executes the event and notifies the gesture handler that the gesture
registers an event handler
unregisters an event handler
registers the given
perform a recognise operation on the given gesture
perform the recognisation of a note
set the recognise flag for this string
runs the code gesture handler code and fires the event
adds a code multimodal gesture handler code to the list of
adds a code gesture set code to this manager
removes a code multimodal gesture handler code from the list of
adds a list of gestures to this manager
removes a code gesture set code from this manager
add a zip entry to the index
returns the gesture set used by this editor
creates a directory entry with the given path
adds an algorithm to the list of algorithms
returns an input stream for reading the contents of the zip file
removes the algorithm from the algorithm list
returns an input stream for reading the contents of the specified
returns the zip entry with the given path
adds a parameter to the algorithm
deletes the given path
removes all parameters of a class
stores the zip file to the given file
sets the code gesture handler code that will handle
copies all entries from the zip file to the original file
returns the code gesture handler code that handles the
closes the output zip file
sets the desired minimum accuracy preference
returns the minimum accuracy
sets the value of the i text i field of the sequence
sets the value of the i name i field of the sequence
sets the gesture
adds a descriptor to the type and the type of the
returns the note of the gesture
sets the maximum number of result sets to retrieve
remove descriptor for the given class
checks whether the given descriptor is registered
get max result set size
method to set the minimum distance between the two cities
method to set the maximum distance between the two cities
sets the value of the i name i field of the sequence
sets the gesture of the imported piece
getter for property gesture
add a test gesture to the list of test classes
add all of the given gestures to the list of classes
remove test class
get the size of noise used for the test class
returns the name of the event
returns the number of test classes in this collection
add a new gesture class to this manager
method for removing a gesture class
returns the number of samples in this collection
add a collection of results to the list
add a code gesture code to this code definition code
returns the code gesture class code at the specified index
returns true if this collection contains no elements
removes the code gesture code from this code gate code
find the size of the gesture class list
get the result at the given index
return the number of gestures in this gesture
returns the code gesture class code with the specified name
add a sample to the list of samples
returns the first result or null if no result is available
remove the sample from the list of samples
resolve this reference
returns true if the specified code gesture class code is contained
returns the number of results that are stored in this
sets the accuracy of the solution
returns the accuracy of the location in meters
returns true if there are no results
returns the class of the gesture
sets the code gesture code to be used by this code default location renderer code
sets the user object for this node to code user object code
returns the user object associated with this node
returns the name of the gesture class
get the source of this lookahead
setter for the recogniser source
returns the timestamp of the event
returns the timestamped location
this is the entry point method
remove all listeners of gesture change event
returns the timestamp of when the input was created
returns the gesture
set the gesture
return the wii reader panel
get the panel
disconnects the wiimote connection
this constructor takes the provided tuio cursor and an input tuio cursor
this method is used to calculate the speed and acceleration values of a
takes the provided tuio point and updates it according to the values
takes a tuio time argument and assigns it along with the provided
updates the position and velocity of the agent
takes the atttibutes of the provided tuio container
this constructor takes the provided tuio object and sets it as the
takes a tuio time argument and assigns it along with the provided
returns the current z position of the agv
returns the distance from this point to the given one
takes the atttibutes of the provided tuio object
this method is used to calculate the speed and acceleration values of a
calculates the distance between planes
returns the z speed of this tuio container
returns the distance between this code tuio point code and the provided
calculates the angle in radians between two planes
returns the position of this tuio point as an array of point
calculates the angle of the planes in degrees
calculates the distance between planes in the set of planes
returns the rotation speed in xy means
calculates the angle in radians between two planes
returns the angle of the planes in the given tuio point
calculates the angle of this object in degrees
checks if a gesture triggered
sets the gesture trigger attribute of the abstract gesture object
returns true if the compatibility mode is activated
should the experience mode be activated by the experience
disconnect from the osc server
accept a new osc message
this constructor takes the provided session id symbol id x and y coordinate
returns true if connected to the server
this method creates a new panel for the current object
sets the code gesture code to be plotted
returns a new instance of an android reader3 dpanel with the specified dimensions
compute weights of all helper helpers
checks whether the given gesture is applicable to this gesture
recognises a given gesture
get the panel
draws the plane note
disconnects the wiimote if any
initialize wii mote reader
disconnect from the wii mote reader
get the wii reader panel
adds a new gesture set
the method returns a gesture set object corresponding to the given set name
recognises a result set
remove a sample of a particular type from this gesture
this method removes a set of gestures from the storage
removes a class of gesture
returns the bit position at the specified width and height
returns the signature at the given position
returns the position of the given point
initializes the board
add the signature of this row to the given bit set
pretty print the contents of the bit set
returns the signature of the point at the specified index
returns the total number of points
get the length of the bit string
sets the cell at the specified coordinates to the specified
returns the value of the default parameter for the given parameter name
get the string representation of this direction
returns the statistics
returns true if the given stroke info matches this stroke
returns the pattern of this rule
parses a token that is a double
returns the total directions
compute the straight line for this line
compute the diagonal of the triangle
returns the proximity value for this node
returns the eastern longitude of the household
returns the west direction of the exit
get the north direction
get the south direction
returns the north west direction of the exit
returns the total south west direction of the exit
returns the north east direction of the exit
returns the distance in degrees east of the northwest corner
gets the number of traces in the note
returns true if the direction is straight
returns whether the given direction is a diagonal direction
returns the corners of this edge
adds a new data object to the list of data objects
removes a data object from the list of data objects
sets the do changed
returns whether or not the do changed
list users action
action for editing a user
action to update the user
action to add a user
save user action
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
validate the array for author roles
auto generated setter method
auto generated add method for the array for convenience
validate the array for author specialities
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
validate the array for family histories
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the array for social histories
validate the array for history of present illness
auto generated setter method
auto generated setter method
overrides code is connection valid code to check if the
returns true if the server connection is valid
create secure socket
connect an ssl server socket
p sets the key store location
sets the key store password
sets the location of the truststore to be used for this factory
sets the trust store password
adds a new entry to the map
gets the key store
returns the value of the field with the given name as a string
return the entry for the given connection name
gets the location of the truststore
get the value of the field with the given name as a date
adds an entry to the internal map
get the operation name from the map
auto generated add method for the array for convenience
returns true if the string contains the specified value
returns true if the code value is in the code list
get the code value of the field with the given name
returns the code value as string
returns the string value of the given code value
returns the trust store password
returns the measure value of the field with the given name
connect to the server
adds an entry to the form
adds a new entry to the end of the list
returns true if the code is in the set
returns the namespace id
returns the element at the specified position in the indexed property
returns true if the code is in the given scheme scheme
sets the namespace of the data source
returns the display name of the given code
validate the array for event codes
returns the display name for a coding scheme code and scheme
to get the universal id
sets the universal id
returns the universal id type
sets the universal id type
gets the patient id
adds a new patient id to the patient using the namespace
returns the string representation of the authority name
returns whether the given identifier is equal to this one
auto generated add method for the array for convenience
overrides the hash code method of object to meet the contract of
the code invoke code method is used to invoke this method
adds a new entry to the enumeration
checks if the enum value is in the dictionary
validate the array for surgical histories
get the string value for the enum
returns an enum value from the code value
create a connection to the server
sets the hostname of the connection
return the name of the attachment
p set the port of the connection
set the name of the attachment
getter for property attachment type
get the number of audit trailers
creates a new server socket on the specified port
set the type of the attachment
the main method to test the class
return the url of the attachment
set the url of the attachment
return the unique identifier of this class
sets the path to the database
sets the unique identifier for this attachment
auto generated setter method
sets the name of the connection descriptor
auto generated setter method
auto generated setter method
returns the date as a string in the format yyyy mm dd
misys patient id gets the value of this field
returns the patient id
setter for property misys patient id
sets the patient id
accessor for the current end time of the query
mutator method for the query end time
adds the specified confidentiality code
gets the value of the system patient id property
setter for property confidentiality codes
load the configuration from a file
set the system patient id
adds the format code to this entry
setter for format codes
sets the name first
accessor for the start time of the query
adds an coding scheme to the connection
mutator method for the start time property
auto generated add method for the array for convenience
auto generated add method for the array for convenience
sets the name last
getter for property name middle
sets a property
setter for property name middle
sets the document relationship
gets the value of entry uuid
sets the uuid of the entry
returns the home system
sets the home system
adds a property set
returns the maximum number of documents that can be analyzed
sets the name title
sets the maximum number of documents that can be created
adds an enum map to this connection
returns the driver license
sets the driver license
gets the value of the administrative sex property
add a new string map
sets the administrative sex value for this party type
gets the mothers maiden name
sets the mother maiden name
auto generated setter method
accessor for birth date time
mutator method for x birth date time
adds an object map to this connection
adds an object to the connection
add a new object list to the connection
adds an identifier to the connection
sets whether the default query design properties should be used
returns whether the default query design properties
validate the array for discharge diets
auto generated setter method
returns true if this database has a local id
auto generated setter method
auto generated add method for the array for convenience
sets the patient id
returns true if the local id for this person exists
returns the patient descriptor
returns a unique id for this row
sets the patient descriptor
returns true if this menu item has a contents
returns the local id for this topic or null if there is none
auto generated setter method
returns true if there is an id for this patient
sets the creation time
returns the next available id for this local variable
validate the array for intended recepients
set the home system
sets the list of author descriptors
returns true if ids1 intersects ids2
this method adds an author to the list of authors
convert a list of strings to a comma seperated list
returns the phone type which has the given cdavalue
get the format code
auto generated setter method
set the format code of the object
given a code in string format return the type
validate the array for physical exams
auto generated add method for the array for convenience
auto generated setter method
auto generated add method for the array for convenience
gets the value of cdavalue
auto generated setter method
return the sex type which has been registered with the
setter for property confidentiality codes
sets the event codes
returns the alphabetical name of this patient
returns the birth date time
sets the birth date time
validate the array for plan of cares
gets the hl7 value
sets the address list
getter for property assigning auth
get the mrn
sets the visit list
get the martital status type from the list of types
returns whether this object contains any numbers or extension
sets the insurance list
checks if is empty
sets the mrn list
auto generated setter method
returns the native format code
indicates if the call came from the confidential channel such as a
gets the value of the native type code property
returns the group number
sets the group number
returns the native class code
returns the current value of the simple property plan
sets the plan
getter for property effective dates
returns the document content
setter for property effective dates
returns the subscriber name addess
factory method for ihe interface
sets the subscriber name addess
returns the subscriber relation to patient
auto generated add method for the array for convenience
sets the subscriber relation
returns the subscriber date of birth
returns the date when the object was last updated
sets the subscriber date of birth
returns the subscriber member id
sets the last updated date
sets the subscriber member id
set the native format code
sets the native type code for this locale
sets the native code
adds a new patient to the mrns list
gets the value of the visit id property
removes a patient from the mrns list
gets the time stamp when the event happened
sets the visit start timestamp
returns the time stamp when the current time event has ended
sets the time stamp when the current test was finished
adds a new insurance to the employee
set the problem list
sets the provider list
removes the given insurance from the list of employees
adds a new visit
adds a provider to the list of providers
removes a provider from the list of providers
to add a problem to the list
to remove a problem from the list
gets the value of the date time property
removes a visit from the project
sets the date time of this booking to the specified value
gets the value of the immunization type property
sets the immunization type
sets the value of orderid
gets the note type
returns the name of the current cell as a string
sets the note type
sets the battery of this vehicle
silly method to get the date of the cafe user
returns a string representation of the alphabetical name
sets the administered by
sets the provider id
gets the value of the prov name first property
sets the prov name first
gets the prov name last
sets the prov name last
gets the value of the prov name middle property
sets the prov name middle
returns the address of this address type
returns the prov name suffix
sets the prov name suffix
returns the prov name title
sets the prov name title
returns the phone number for the given phone type
adds an address to the address list
sets the uom
removes an address of a certain type from the address list
returns the value of interpretation
sets the value of interpretation
gets the address of the specified type
sets the reaction
get the date of the report
sets the report date
sets the phone list
get the date of the last administration object
sets the last administration date
adds a phone number to the contact
sets the status of this event to the given status
gets the value of the sig property
sets the signature
removes a phone of a given type from the contact
gets the phone number of the specified type
gets the value of the refills property
sets the refills
get the code of the problem
set the code of the problem
loads mappings from a given file
get the value of an attribute of a node
returns the code mapping manager
setter for property code mapping manager
returns the oid root
sets the oid root
sets oid source
returns the patient query design properties
returns the style sheet location
sets the style sheet location
returns the log context
sets the log context
starts the ssl server
returns the patient id converter
build the streams from the super
sets the converter used to convert the patient id into an ipatient id
reads a line from the server
returns the patient id
starts the server
test method for
process the message read from the server
tests simple connection start server
tests that get standard connection method successfully creates a connection
validate the array for review of systems
auto generated setter method
auto generated setter method
returns the number of patients sources
returns the number of document source objects in this collection
auto generated setter method
returns the number of consumers that have been added to this consumer
returns the number of xref in the patient
returns the number of code document consumer code s
submits given document to all registered consumers
starts the audit trail
auto generated add method for the array for convenience
send the given code document code to all registered consumer
stops the audit trail
sets the patient id for this test patient
submits a collection of documents to the document registry
returns the mesa logger
set the mesa logger
sends the given collection of xdr documents as a intended document to the
auto generated setter method
send the given xdm document to the consumer
send the given collection of xdm documents to the xdm consumers
sets the patient id
starts the process
stops the device
registers the data source
extract the response from eb xml v3 registry
throws a bad communication exception
the run method of the thread which spawns the server socket
returns the connection string
returns connection information
find the appropriate identifier reconcile from the given identifier
creates a query to get the message of the pdq server
populates the fields with the values contained in the configuration object
populates the data in the rcp field according to the count
21 create the continuation query in the given message
throws a pdq query exception if there is one
this method initializes mesa interface
sets the maximum chunk size
sets the identifier filter
severity of alert
this method takes the response from the program and reads the
sets the id of the menu
sends a message with a default severity
sets the default severity
execute the application activity code code
executes the security alert success code
invoked when user authenticates his
submits a document by its document description and content code
start the application
p submit documents by their code description content code
stop the actor
throws a document exception with the given connection
returns the response type given an omelement
invoked when an atomic connection failed
extracts an xds response from the response type and returns it
writes a string to the log
writes the message to the axiom file
write an hl7 message to the hl7 protocol
invoked when the login action succeeds
sends a message to the server
close the context hl7 connection
this method creates a url reference to the endpoint
check if the service is open
send the submission of the submission to the smil system
invoked when the user logs out successfully
called when a patient query has been issued
loads the configuration from an oid root
get value of soap message property
records an imported participant
read the response
checks whether the given value starts with a prefix
loads the configuration from the given oid root
this method starts the process
records an exported object
returns true if the value ends with one of the suffix
replaces all instances of wildcard with the connect wildcard
event indicating that a new patient has been created
deletes the given participant object from the repository
enumeration containing information about the document relationship
registers a pdq with the data source
called when the user modifies the record
called when a patient records obtaining an object
returns the description of the actor that has the given id
add a raw pdq query field
called when a query is stored
sends pix query to the hl7 channel
creates a pix query message
processes the actor definition tag
returns true if this is an error
returns true if the transfer was successful
returns true if the response is a adhoc query
formats a string with wildcard prefix and suffix
returns the root element of the soap document
get the response of a registry
returns a query response from an adhoc query message
throws an exception if there is no pix server connection
return true if the given field should be used as a query field
returns true if the transfer was successful
returns true if the query response is an adhoc query response
returns the response for a registry operation
returns true if the result was a success
return a boolean value for the given property
is this response a success
return true if the response is a success
gets the record request number from rcp request
is this response an error
return true if the response is a failure
return the error message associated with this response
adds an author to the list of authors this object uses
add an attribute to the root node
returns true if the transfer was successful
returns true if the query response is an adhoc query response
adds a new name to the list of names
gets the pointer to the continuation object
returns the root element of the xml document
clips the given value to a certain size
adds a description to the list of descriptions
add an attribute to the root node
adds a slot to the object
adds a new name to the rim object
returns the value of a component
returns an instance of the given class
adds a slot with multiple values to the given name
add a description to the list of descriptions
add a slot to the object
add a new classification to the list
add a slot with a list of values
log a message to the configuration file with the given message
throw a patient exception
add a classification to the list
adds an external identifier to the rim instance
throws a connection exception
throws an ihe configuration exception with the given message and the
sets the first name
sets the last name
gets the middle name
add an external identifier
sets the middle name
returns formatted name of the person
creates a ccd document from the parsed content
returns a ccd document with the error messages
returns a ccd document object with the correct styles
adds a warning to the list of errors
checks if the given error has any errors
creates an cda document with the specified file name
returns the text of the node
initializes the variables of this object from a dom tree
sends an a04 feed to a patient
returns true if the job holds at least one valid metadata
the classification is the name of the class
dataset for author institution
returns a provider for the author person
retrieves the creation date
dataset for language select
gets the value of code system
gets the value of code system name
gets the function code
sets the function code
returns the complete document id for the current document type
get the end time
set the end time of the test
gets the value of code
sets the code
returns the concatenation of the patient ids of the source patients
parses the phone area string
returns the start time of this service event
returns the end time of the service
the title of the item
write test end to the mesa log file
write the soap body elements over the response
helper method to print the timestamp to a stream
helper method to build id
checks if a string array is empty
this method initializes this
this method initializes j content pane
this method initializes j button home
this method initializes this
this method initializes this
this method initializes j button cancel random reservation
this method initializes j check box donate
this method initializes j text field reservation number
this method initializes j button home
this method initializes j text area cancel reason
this method initializes this
this method initializes j radio button
this method initializes j radio button1
this method initializes j radio button2
this method initializes j text field name
this method initializes j text field pnumber
this method initializes j check box
this method initializes j text field email
this method initializes j button cancel
this method initializes this
this method initializes j button home
this method initializes j table flight details
this method initializes j text field passenger details
create the header
sets the x coordinate of the hallway
create the footer
add a member to the class
creates the given header
returns the output document as a string
sets the y coordinate of the hallway
creates the footer
returns the level of the string
sets the link type to value
returns the absolute path of the given file name
creates a header for the xmi document
sets the name of the jsp that should be displayed by this
create footer of the xmi document
returns the name of the jsp that should be presented to the user
returns the pgml document generated by the last call to
sets the jsp page that this template will use for rendering
returns the jsp page that this container is in
sets the xmi name
gets the xmi name
set the group name
sets the description of the file filter
adds an empty dependency
returns the number of pages in this list
returns an iterator for the pages in this document
get the xmi document
returns a vector of jsps
closes the zip file
file list jsps
add a file to the zip file
adds text to the zip file
checks if the input matches the last
checks if the input string is a match of this code pattern code
get the string that is a parent of this parenthesis
returns the end index of the parenthesis that matched the given group
returns true if this is a page
perform substitution on a string
returns a string containing information about the generation of the html
get page from string
returns the imports of the class
returns an iterator over all parameter names
returns an iterator over all the parameter names
returns the root path of a given string
insert the methods description here
add extra data to the extra data map
get extra data stored with key
output links bar
sets the byte array
sets the byte array of this user
set the note from a byte array
set the contents of the note from a byte array
close the open recordstore and record store
closes this recordstore and releases any resources
returns true if the value of this code octet string code is null
sets the value of this argument to a string
set sets the value as a boolean
sets this value to a byte
set the value of this constant as a char
set the value of this constant as a short
sets the value of this attribute to a int
set the value of this constant as a long
sets this value to a float
sets this value to a double
set the value of this variant
sets the value of this literal to a document
sets the value of this variant
sets the value of this object
returns the string value of this variant
returns the boolean value of this variant
returns the value of this variant as a byte
returns the first character in the variant
returns the short value
returns the integer value of the variant
returns the long value of this variant
returns the float value
returns double value of the variant
returns the element of the variant
returns the document of the variant
returns a fragment of the document fragment
returns the value of this code binding code
returns a string representation of the value
opens the database
close the database
delete the state from the database
create definitions from xml files
processes a list request by printing the response to the given writer
sets the visibility of the dialog
pops up a file chooser dialog with a custom approve button
report that there was an error while getting the axis service
sets the selected node
performs a transformation filter on the given source
initializes the service
destroys this object
get the img type
get the source directory for this row
gets the target framework release
return the target framework type
registers a task interface to be used when a compiler task is
remove the specified code element
sets the number of bytes read since last reset
returns the number of bytes read from this buffer
gets the source range
sets the value of signature
search for a particular class and all its parents
adds a child to the element
sorts the given list by insertion order
sets the value of the element name property
fills the variables of a given method with the names of the variables
fill the method signature elements map with the parameters
getter for property is in method
indicates if this is an in type file
set the braces completion flag
returns the hash map of method signatures of this compilation unit
get all the variables of the method
checks whether a word to complete exists in the document offset
gets the examin job
returns the code source viewer code
setter for property derived
returns the derived
store the comments in bold
stores the settings
store the edited text to the editor
save the settings
performs the ok action
get the list of comments that have been added to this resource
saves the page properties to the preference store
get the namespace list
get the list of class files
get the method list
get all the resources that are using this resource
set the new name
returns the debugging output
get the interface list
get the list of all properties
creates the internal pages on the multi page editor
saves the multi page editors document
saves the multi page editors document as another file
get the list of all resource types
calculates the contents of page 2 when the it is activated
closes all project files on project close
get the struct list
get the complete list of string elements
get the constructor list
get whether this is a target manipulator that is the source
write the xml to the file
check if this build is a framework manipulator
get the target framework release
check if this is a file layout manipulator
returns the source file of this workspace
returns the category of the given element
returns a negative zero or positive number depending on whether the
set the directory of the source of the new java project
set the directory to place generated binaries
save the build file
updates the code element
returns true if this build file is a build file manipulator
main processing method for the task object
get the directory of the source of the current document
get directory where binary files are located
set the target framework to use
search the attributes of a node and return its name
gets the start point text attribute of the app object
test if this target target supports a specific language
get the build file
gets the end point text attribute of the simple node object
sets whether to show signature parameters or not
returns true if this is a build project manipulator
set the project name for this build
determine whether this mechanism is a build command runner
returns the build command to execute
gets the location of the specified assembly
get full build command used in build command runner
get the location of the assembly
this will iterate over the files in the directories to trie
returns a string containing the metadata of the specified iproperty
get the list of directories that will be used
creates a string representation of the metadata field
returns a string containing the metadata for the given event
returns the method metadata for the given method
returns namespace meta data for the given namespace name
returns the type description for the given itype
returns the key analyzer
recursively walks the tree and collects all files under dir
set the flags from the given boolean value
returns the comparator used to order the keys
returns the level of the dot
method parse for type
returns a namespace
a hash map of project type loaded from its location
adds a project to internal cache
returns the code itype code object of the member
this method removes the leading and trailing spaces from a string
returns the super class name
build a display string for this element
put a key to the gac map
returns a compressed compressed version of the given object
returns an object from the byte array
returns a hash set of supported classes type
get the property return
this method will put a key value pair in the project
removes the path from the project type map
parse an individual assembly
removes the path from the project ccmap
gets the return type of the method
calculates the field flags according to the static modifier and the
returns the value associated with the given key or null if none
set a boolean value to be associated with a key in gac
returns a linked list of all variables within a file
calculates the virtual and static flags of this class
returns a list of parameters for doc offset method
gets the entry that is nearest to the given key
get the type flags
returns the source range of this
accessor method for a document hash set that has been reverted
selection in the workbench has been changed
we will cache window object in order to
returns the path to the root of the workspace
build a new trie with the external patricia extension map
returns a map of keys with the same length and length
gets the value of system object trie
returns a map of keys with the given length prefixed by each element
is there a file with the given path in the assembly cache
returns a map of elements which have been prefixed by the
returns the cached compilation unit for the given filepath
returns a sorted map of bits which have the same length
parses the document
returns a new map with the given key prefixed by the specified
add a copyright to the new rdoc
process template string
returns true if this trie contains the specified key
returns true if the given object is in the list
this method is called upon plug in activation
removes a port from the list of used ports and returns them
fires a code resume code event for this element with
fires a code suspend code event for this element with the given
removes a key from the trie if present
set the mdb id of the current thread
sets the suspended flag
return the mdb id of the thread
get the emonic stack frame
returns the frame number
indicates if the value of the variable has changed
checks if the method name is known
sets the var value value for this wsyetki kullanici
sets the var names value for this wsyetki kullanici
sets the number of the frame
removes a given entry from the trie
returns the current frame
sets the current frame attribute of the frame window object
returns the synchronizer used by the frontend
get the value of more data
setter for property more data
removes an external entry from the trie
gets the value of the process number property
sets the arg1
setter for property process number
sets the arg2
sets the arg3 value for this wsyetki kullanici
sets the process cmd line value for this job ticket
sets the number of the thread that will be started
set the endpoint address for the specified port name
returns the name of the source file
getter for daemon thread
compare to backtrace data object
setter for daemon thread
this method should be called whenever the current line number is found
updates the frame number
returns the thread state
returns whether the stack frame has changed since the last call to
sets the thread state
get the name value of an element e
returns true if the current thread is the current thread
sets the current thread
returns the class string associated with the given code element
returns position of the line of the document
returns the next entry in the trie
returns the line of the document in the given position
returns the next entry in the subtree rooted at this node
checks if any threads are resumed if not
tests the code element
tests the code element
test the set signature method using the code element
called when the client is resumed
tests adding children
test that the code element name is changed and the
test method for
test that the set type method works according to the jdom spec
test method for
function check the set access type method
test method for
test the set source method
test that the code element
called when the client requests a suspended request
returns a string representation of this trie
returns the length of the given key
install breakpoints that are already installed in the debug plugin
set the build mechanism manipulator that is responsible for obtaining
called by the system when all commands are terminated
returns true if the given bit index is set
returns the number of spaces to use for indentation
utility method for creating a bit index for the given key
returns the number of times the flow execution should continue
returns the importance of this packet
sets the key value
test check for string
an iterator that iterates over the trie
returns the first entry in the trie
follow up the node in the left subtree
returns the last entry in the trie
follow the entry to the right subtree
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j button1
this method initializes j split pane
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu item
this method initializes j menu item1
this method initializes toppanel
returns the paramtype
sets the paramtype
sets the image to be displayed
sets the width of the dem data object
sets the height of the dem
draw the map and the background
handle the mouse button click event
method mouse button released
gets the filters for a given filter name
set the size of the canvas
gets the filters for a given filter name
gets the image of this object
sets the factor of this type
exit the application
gets the average jpeg image
sorts the alphabetically
handle the mouse button click event for the run button
get color of pixel x y
handle the mouse button click event
method mouse button released
this method is used to load a directory that contains the clip
save the name of the image
scales the given buffered image to fit the image
checks whether the specified area is single color
open a file chooser for the source image
this method is called when the mouse button is released
this method is used to load a directory that contains the clip
sets the basemap
returns the count of the event
loads all the commands from the given url
returns a new file with the specified name
replace the structure in the parameter at the argument by its
returns a new file
returns a new file object representing a directory
undo all operations in the stack
concatenates a map of token names and their values
sets the filters
executes a sql command
closes the writer
sets the log string
executes a sql command that may be a query or a query
unescapes the backslash and special characters to a single space
returns the string representation of the value
tells if the user can see the whole graphical interface
returns the name of the child
executes a sql command
convert the value to the type expected
replaces all parameter placeholders in the expression with the given value
create a logger
executes the given sql statement which may return multiple results
create a new logger with the given filters
executes the given sql statement and signals the driver that the
the code add code method adds a long to the probed instruction list
insert update delete sql
this method wraps the connection with a prepared statement
this method initializes the reader
writes a line to the writer without closing the line
set the autocommit flag on this connection
shutdown the thread pool
read a line of text
returns the wrapped exception
this method closes the connection to the database
returns the hash value for this stream
writes a string to the data output stream
returns the number of bytes read from the stream
returns the counter
reads the data from the input stream
updates the list of elements
writes a string to the client followed by a carriage return line
reads a string followed by a linefeed followed by a
recursively delete a directory and all its contents
deletes all files and subdirectories under dir
release all resources
writes a long to the output stream and appends a newline character
read a long value
reads a integer value from the input stream
returns the ratio of the number of bytes in the compressed file
writes a string assignment
write the map out to the underlying writer
stores the backup entry to the file
returns the entry identified by the given path
finish the backup database
loads the reference database from the file
write a category
read the database settings from the settings file
find a category in the file
renames a key to a new value
returns true if the given category exists in the search
writes a subcategory
sets the value of a key
this method releases the repository
loads the configuration from a file
backup entry in the database
create a file with the given data
releases the file
returns true if this message digest is a cloneable message digest
loads the mappings from an input stream
reads one commas category and concatenates it with the
needed by select command br
save the settings to the given writer
close the stream
finishes writing the backup files to the disk
this method will store the system
restores the standard output
console output of the command
create a container instance with the specified value
returns true if this node is a leaf
returns the name of the variable
enables or disables this node only
sets the name of the node
this method will create the index table if it does not exist
add files to the directory and subfiles if necessary
returns true if children are enabled
returns whether this item should always be visible
store the size and the header in the database
sets the enabled state of this node
returns true if the children have been checked
creates the tables
returns an input stream for reading from the database
closes the connection to the database
executes a sql query
executes an sql insert update or delete statement
executes the given sql statement which may return multiple results
creates a code prepared statement code object for sending
creates a lock on the repo directory
release any resources
executes sql file
write this file to the repository
this will set autocommit to false
verifies that all settings specified in settings have no uncle
log that the settings used
this method replaces all occurrences of the given settings with the given
checks if the name is correct
the string which identifies this dialect in the dialect chooser
returns the french setting
prints out information about this class
prints an error message
returns the byte at the current position
helper method for writing a point to the destination
sets the value of the header at the current position
write a geometry array
write a point array
parse an array of full geometries
two geometries are equal if their dimension and type are equal
returns a string representation of the type of this field
returns true if this measure is valid
estimates the array of bytes representing the data contained in the
get accessor for dimension
returns the srid or 1 if none was available
estimates the point array of the geometry
sets the srid
generates the inner part of a
generates the declarative wkt for this
returns the string representation of this object
check if the dimension is inconsistent with the data of this
get the first point of the line
get the last point in the line
returns the string representation of this object
this function returns the llb of this square
gets the urt
sets the upload file
set the code of the current method
removes a vertex v from the graph
unmarks all vertices in the graph
removes a vertex v from the graph
returns true if the graph contains the vertex v
checks if a vertex with the given id exists in this graph
get the bgt data structure from the given rts
get the bgt data structure from the input source
returns an icon
the action calls the vehicles accelerate command which adjusts its velocity
the brake action
the action calls the vehicles drift command which adjusts its velocity
code perform rotate left code rotates the node to the left
code perform rotate right code rotates the node towards the right
this method is called when the user clicks on the roll button
code perform roll right code rotates the node towards the right
code perform rotate down code rotates the node towards the right
code perform rotate up code rotates the node towards the right
sets the model spatial of this vehicle
set the model for this node
builds the scene
gets the result of the operation
returns the result of the operation
returns true if this object is defined in the database
returns the result of the operation
returns the result of the operation
gets the result of the operation
gets the current fact waiter
stop the thread
inserts the given component into the btree
delete a node or edge
remove all nodes except the root node
select the maximum element in the tree
return the largest item from the tree
make the tree logically empty
constructor with inet address
close the connection
gets the ip address of the computer that owns and receives
mark this lock as released
sets the connection released at the specified time
return the time when this lock was released
return the webis data input stream
return the webos output stream
returns the keepalive value of this server
gets the version attribute of the ejbmethod descriptor object
close the player server
stops the player server and all mbean server
creates new form remote control panel
finds the window with the given key
returns the notification frequency of this user
sets the notification frequency of this user account
sets the fitness function
get the number of generations
set number of generations to evolve
returns the number of this node
performs a population and returns the number of childs
inits the gui components
paint the background of the graph
notification from the code uimanager code that the l f has changed
returns the probability to crossover
sets the probability to crossover
gets the probability of reproduction
sets the probability that the reproduction is performed
gets the mutation probability
setter for property cancel after generations
getter for property cancel after unchanged generations
get the genesis individual
invalidates the metadata
return the name of a page which will forward to
makes a link from the specified type and text
this method is called when the header is complete
extended request data key to hold editpart visual id
creates model palette tool group
connect to a new subject
disconnects the client from the server
this adds a property descriptor for the name feature
this adds a property descriptor for the return value feature
this adds a property descriptor for the parameters feature
this adds a property descriptor for the description feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the name feature
this adds a property descriptor for the is in feature
this adds a property descriptor for the subinstances feature
this adds a property descriptor for the is out feature
this adds a property descriptor for the properties feature
this adds a property descriptor for the operations feature
this adds a property descriptor for the referenced instances feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
reverts to existing value in model when exiting from a direct edit
the action has been activated
this method compares two xml documents for equality
this method is called to calculate the direction of the ship
eliminates the car by setting speed to zero
sort the list using the specified property
sort a list of objects
escape the string
returns the value of the given column in the given bean
returns the key for the item
evaluate the string with the beanshell expression
get item value
returns the value of the specified field
get the filter item with the given name
add a hidden filter item to the filter
returns the value of the given column in the given bean
retrieves text from a resource bundle
returns null since there is no column
decorate the table
look for a static resource in the classpath
returns the file path
set the editor kit type
sets the single instance
sets the provided fname
returns the preferred size of the panel
sets the time to wait
gets the prefered size attribute of the jdatabase panel object
returns a string representation of the object
invoked when a custom sysout parser is added
creates new code mvs jobs exception code without detail message
is this a mvs style
returns the constant representing the current double click value
return true if the ftp event listener is subscribed
return current ftp client session
returns the message that was sent when the exception was thrown
sets the data list
returns the content of this container
returns the file content
sets the data list
returns the state of jes flag
returns true if html mode is on
returns true if this connection is in binary mode
get a style by display name
returns true if the current format is a package format
returns the embedded object corresponding to the name
read the settings from the xml document
read the file
returns a dom tree representing the content body
returns the styles dom
p get a form by name p
return the control with the given id
add a control to the list of controls
p get the level of the given index source style
fix the relative link
resets the files
add a document to the output
get the file to write to
add a content entry to the message content
set the entrys title page file
sets the text file content entry
set the toc file
set the file content entry
set the file content entry
set the index file content entry
set the file content entry for the bibliography
sets the file content entry to be generated
sets the file entry for the cover image
set the meta data for this movie
applies an language name to an country
todo missing method documentation
pop the special table
parses the given node as a display equation
p apply language
returns the default language
returns the default country
p push the specified table name to the stack and make it the
pop a special table from the stack
appends the declarations to the given portion of the document
overrides get color
applies hard character formatting to the current language
family series style
gibt die normal font size eines palette
apply font effect to the text position
returns the string representation of the graph
applies row style
add a value to the list
encloses a string and surrounding the strings
p apply text underline
apply text crossout
p apply change case
method to convert font declarations to la te x
writes the contents of this code file meta data code object to the
p process a sequence label text sequence label tag p
p applies a paragraph style with the given name and returns the result
p apply line spacing
p apply all paragraph properties
process a reference mark end tag
process a display equation text display equation tag
p process a bookmark text bookmark tag p
appends declarations to the specified portion of the la te x document
process a lof text text search field text in the
process a lot text text lot tag
process object index text object index tag
process an user index text user index tag
process alphabetical index text alphabetical index tag
process reference marks text reference marks tag
appends the declarations from the specified code portion code to the
insert the endnotes text after the current
p process a note reference text note ref tag
p process a footnote reference text footnote ref tag
p process an endnote reference text endnote ref tag
p add a code hypertarget code p
add a new hypertarget text to the target list
reads the data from a stream
end the current element
sets an attribute of the current element of the dom document
called by the parser when text nodes are found
p does this reference to the specified note
is this reference mark in the heading
is this bookmark in a heading
get the heading level for a bookmark
indicates if a bookmark is in the list
get the style for bookmark list
get the bookmark list level for a bookmark
this method converts an onode hnode to a tree image
change the rule in the footnote rule list to a rule
applies the default writing direction
apply a style to this page
convert formatting properties for a specific table style
convert formatting properties for a specific par style
get the first image
indicates if the content of the document contains math
converts the html document into a form
clears all options
p remove an option from the list of options for this element
p put an option to this menu
copy all attributes of a given name
copy all of the options from the given complex option object
p does this hashtable contain a key value pair
returns the registry path
returns the registry path in which the window is opened
returns the registry path in which the window is opened
get registry path
set the character set
get the category code of a character
gets the catcode table
sets the catcode table
change the type of this token
sets the character
clears the token buffer
add a character to the token buffer
returns the character associated with the next token
expand the macros in the given string
returns the string token
get the first path or null if there is none
disposes the registry view
returns xdialog for this panel
returns the dialog access object
initialize the registry view
returns the name of the dialog library
returns the name of this dialog
set the application name for the given executable and executable value
execute the command
j h b
cancel the execution of the filter
sets the value at a given position
gets the value at a given index
writes the forename field to the supplied stream
reads the patient from the supplied stream
initialises the fields
to initialise combo box colour transform combo
initialize the panel with data from the form fields
draw a sample sample and all of its samples
get the position of the sample at the specified position
change the position of a sample within the sample list
jbuilder initialisation routines used so jbuilder will display objects
change the error of a sample in the sample list
get the colour that will be applied to this image
set a colour for the given sample
return a string representation of this sample
writes this data object to the supplied stream
read data from the input stream
draw the sample at the given position
get total error returns the total error in the first sample
invoked when a component loses the keyboard focus
get the maximum error in any sample
update the displays resolution tf when chips are found in the content
sets the x y z coordinates of the colliding
get the fmsample for the specified sample number
sets the current xyz
get the fmsample at the specified position
return the id of the selected test
return the selected view
save the current tray data to the database
set the rgb values for this color
return a string representation of this class
sets the rgb value for this color
set lms to be used by other methods
sets the lms
set this col as hsb values
set this columns hsb values
get the color of this subcomponent
get the rgb value representing the color in the given column
returns the current
returns the xyy of this date
a lms is a collection of
get a column as hsb
convert a original col xyz rgb to a new col xyz
convert xyz to rgb
creates an xyy instance
rotate xyz xyz
called when the save button is clicked
populate the contact list
sets the swimp root directory
get test data file
returns a code path iterator code object that iterates along the
returns an iterator object that iterates along the boundary of this
extracts the crawl uri to the internal cache
cancels the thread
returns a string representation of the object
gets the guid of the institution
sets the guid of the institution
creates the object and adds it to the file
returns the results of the analysis
deletes all data from this package and the database
returns the value of the given attribute
sets the value of this property to the specified string
returns a string representation of the object
returns the attributes of this object
returns the element class of the current context
sets the name of the file containing the annotation
accessor for annotation source field
sets the file status accessor
returns the file status of the file
sets the source version of the file
returns the version of the source repository
sets the path of this file
returns the path of this file
sets the file locator to use for this local project
updates the digest with a single byte
update the digest with a portion of a byte array
returns the base64 encoded md5 digest
get the base64 encoded sha1 digest of the data
returns the hex encoded md5 hash of this md5
returns the sha1 hash of the strings returned by this method
get websites for an analysis
starts the import thread
encode the robots into a single string
deletes the specified run and all its children
returns all websites for a particular entity
dumps the relationship to a string
gets the category value for this metadata
sets the metadata category for this item
to set the content of the token
a string representation of this object
indicates whether some other object is equal to this one
returns the hash code of this object
returns the guid of the package
returns the package container ref object
returns the inst symbol
determines if the specified path should be ignored in a batch
returns the full path of the virtual file for the task
returns reference to the query for the relationship
create a new dcobjects with the given testdata
returns the reference of the data object
test setting an attribute
test setting the domains
test setting an attribute
returns null since this is not an identity class
get a resource from the application classloader
thread local method to parse a date
returns the search clause
sets the search clause
paints the line
adds a point at the given coordinates
sets the point at which the mouse is currently selected
remove the currently selected point
at startup create and show the main frame of the application
this will set the barre de mesure type
adds an item to the inventory
returns the item list
pings the bomberman server
remove a user from this game
gets the width of the game map
returns the height of the map
this method is called when the user successfully logs in
get the map at the given location
returns true if the given point can be moved
checks if the given coordinates are valid for this map
checks if the map can move
compares two bomb
initializes the applet h
returns the number of cursors in this collection
load the properties file
this method is called when the module is done
retrieves the remote object
register unicast remote object server imp
register unicast remote object server imp
sets the associated frame
gets the associated frame
returns a localized permission string
clears the security token
return a string representation of this object
adds a filetype dot extension to filter against
print the string as the last value on the line
output a blank line
print a single line of comma separated values
print a single line of comma separated values
destroy the applet
stops the animation timer
this method is called when an exception is thrown while processing the
get the start of today
this method executes the job
output the comment
print the string as the last value on the line
reports an error that occured while scanning
flush the stream if its not closed and check its error state
refreshes the parent data binding
converts input stream to string
compute the display value of the property
creates sql statements from the given generator
utility method to create a jbutton
initializes the midi system
plays the given sound in the current sequence
invoked when an item has been selected or deselected by the user
called when the user clicks on a song
stop the music playback
pauses the score playback
sets the current value
returns the position of the sound
sets the position of the playing sequence
start play timer
stop playing the movie
upd the length of the sound
update the gain value
returns true if the message bundle contains the given key
returns a formatted string using the given resource key and the
print the template to the given writer
print a section to the writer
recalculates the command to be displayed
description of the method
fired when the user types in the name field
implodes the array for use in a string
starts the server
return the port base for this server
remove a port from the busy ports list
returns the name of the uploading user
request a media to be played
notify the client that a session has been request to be terminated
closes the connection to the server
starts the thread
close server side connection with server
start the session
close the players and the session managers
this method is called by the sip stack when a dialog session ends
not needed for this class
sets all controls to the appropriate state
this method is called once the client has successfully chooses up
timer action performed
get time as a string in iso format
closes the window and disposes the fullscreen
handles the code controller event code s from the gui
stops the timeline
stop the playback
sets the encoder to use
set the property editor registration strategy for this registry
returns the target writer for json output
decides whether the formatter should use a format annotation
returns a new instance of the appropriate editor for the specified
get the editor for a particular property type
encode the given object into a string
returns the editor for a given encoding strategies
returns the property editor for the given descriptor or null if none
writes the key value pairs to the target appendable
checks if the specified element should be suppressed
chargement le lors dans le salle de la course
shutdown the datasource
sets the date field to the given string
marshal a report object into xml
returns the eidpkir client that is used in this service
gets the contracts client to use
return the faces messages instance to be used by this instance
takes the certificate and revokes it from the xkms service
create a key info object to be used by the revocation element
encodes a string to be used in a url safe format
gets the value from a list of jaxbelement
returns the reason why a key binding result is null if no such
returns the reason code of the result
returns an instance of xkmsservice
parses a revoke certificate result
throws a exception with a key binding type error
constructor that takes a distinguished name expression
creates a new instance of distinguished name distinguished name
get a pem encoded representation of this certificate
returns the subject
get a pem encoded representation of this certification request
sets the entity manager
sets the log
sets the contracts client to the given eidrcontracts client
approve the registrations in the selected directory
show disapprove registrations in the registration list
creates the schema and the export
signs the certificate with the given contract
revokes a certificate for the given contract
parses a revoke certificate result
this method revokes a certificate
return a reason for the result
return a reason code for the result
gets the value from a jaxbelement list
encode special characters in key name by replacing
creates a certificate signing request type from this object
returns code true code if the result of the test is failed
returns true if the result of the call was terminated due to an
did the test passed
returns the local java launch config type
shows other information than a stack trace
shows other information than a stack trace
the wizard owning this page is responsible for calling this method with the
starts the local test runner
stops the launch
removes the given test run session from the list of active test runs
this method is called upon plug in activation
this method is called when the plug in is stopped
stops the currently running test and shuts down the remote test runner
stops the currently running test and shuts down the remote test runner
sets the game screen
initializes the screen
initializes the code game action code
sets the title screen
creates the buttons for the table
initializes the game
returns the background image at the given level
runs through the game loop until stop is called
creates the buttons for the main view
updates the game screen
draws the game screen
updates all the blocks
updates this sprites animation and its position based
gets this sprites width based on the size of the
gets this sprites height based on the size of the
gets the frame at the given index
updates all blocks of the world
draws the block
rotates the figure by 90 degrees
sets the x position of the block
sets the y position of the block
sets the vertical velocity of all blocks in pixels
sets the x velocity of all blocks in the layout
returns if the bot is going down
goes down to the next frame
sets whether realtive mouse mode is on or not
sets the state of the server as going down
checks the input
sets the paused state
exits the game
resets all game actions so they appear like they havent
returns the action associated with a key event
handle mouse actions
this is the entry point method
this is the entry point method
adds all sinks to the list
returns a data link object for a given machine
get the ip of a given machine
returns an initiliazed instance of frm main component
returns an initiliazed instance of table item buddies component
returns an initiliazed instance of table model1 component
returns the location of this object
this method sets the clocation location
sets the location name value for this location
returns the robots alert value
sets the alert value for this stave instance
returns the location of the imported type if it is known
set the location of the local file system
sets the timesent value for this order type
set the latitude of the point in decimal degrees
sets the lon value for this lon lat pt
checks if is buddies
sets the buddies
checks if is buddy requests
sets the buddy requests
returns true if the listener is a message listener
returns the default alert distance
sets the default alert distance
returns the login on start
set the login on start flag
returns the login status
sets the login status
gets the logout status
sets the logout status
sets the updated value for this wsyetki kullanici
this is called by the nested wrapped line
determines the preferred span for this view along an
clear all keys down
get the state of a key
set the directional input axis the keyboard input listener is listening
sets the enter input button
packs the child components
sets the size of the container
get the parent panel
set the parent of the frame
sets the horizontal offset value
updates the raster with the current size of the buffered image
start this server as a deamon
packs the child components
get the value of render may exceed logic
set whether this code gl20 resource shader fragment code will be
returns the logic fps
sets the logic fps
set the screen size for the next played game
sets the screen size as requested
returns the screen size
set the number of screen buffers requested
get the number of requested screen buffers
set the requested screen colour depth
closes the fullscreen
start this server as a deamon
renders the angle of rotation based on the rotation of the
set the number of screen buffering the player has requested
this method is called when a key is pressed
called when a key is released
open the books database
create a new book using the title and body provided
deletes a book with the given row id
return a cursor over the list of all books in the database
return a cursor positioned at the book that matches the given row id
update the book using the details provided
open the page database
create a new page in the database
delete the pages for the book
delete the page with the given row id
return a cursor over the list of all pages that match the given
return a cursor positioned at the page that matches the given row id
update the title using the details provided
update the page body using the details provided
this method initializes s shell
pass output sent to system
pass through method to the handle flush method of the ant interface
pass output sent to system
pass output sent to system
returns a string representation of the games in the given category
returns a string representation of all games in the system
prints the current platform
this method authenticates the principal with the given roles
authenticates the user using a given principal and roles
log the user out
can the user logout
initializes the access rules
initialize the access rules
main method to check access rules
returns the value of the property for the given target object
sets the property value
parses the mapping information
overrides the default contains value method to ensure that only the
parse the given data into the given array
parse the given collection of classes and add them to the given data
this method parses the class and its interfaces
process a class annotation
processes the annotation
this method is called when the user has clicked on a annotation
appends a where clause to the where clause
appends the given node to this one
prepends a path to the end of this path
creates a where clause for a given child
creates a boolean literal from a boolean value
creates a jpql integer literal from a integer value
creates a jpql identification variable using a value
creates a named parameter
creates and node with the given node1 and node2
creates and returns a node with an or operator
create an equals node with a collection of children
creates and returns a node with not equals clause
creates a new in path alias for a compiled statement
create the brackets that have also been used and jumping
creates a path node with the given name and root
creates a subselect node with the currently selected nodes and selects
creates a jpql select clause for the given path
creates from a class mapping
evaluates the given node
finds the index of the special character
returns the element at the specified position in this list
replaces the element at the specified position in this list with the
add a new secure list at the specified index
removes the element at the specified position in this list optional
constructs a new query object for the given query string
returns the single result of the query
tests if the property is single valued relationship
return the buffer containing the fliped data
clears the receive buffer
writes data to the remote host
write a single character into the output buffer
gets the int value at the given position
if the user decides to clean the data before we exit
method to percolate an object in the heap
add an object to the rank list
removes a number within the range
inserts the specified element into this priority queue
adds a new value to the list
removes the last object from the queue only if the queue is empty
get the element at the top of the queue
retrieves but does not remove the head of this queue or
get an integer value from the buffer
returns true if this map contains a mapping for the specified key
stores the given key value pair in the real map
returns a base integer value for the given key which may be null
sets the value of a relative variable
calculates the relative position of the data index
adds a node to the path
sets up a path find structure
returns the path node with the greatest direct child
returns the data in a string representation
sets the value of a given position on the data array
checks if a point is within the current range
the code check code method checks this test list for errors
returns true if the headset is empty
adds a range of values to the head of the queue
deletes the range of values za zb
does this problem contain any problems
clone this set
returns the text that is a range of this text
copies characters from this text into the destination character
returns an independent copy of this object
fills this array from the given buffered image
this method initializes this
constructs the filter
ip ip iplocation luma
find all roles of a type
find an entity by its id primary key
find an instance of user in the database by the user id
find an instance of user in the database by the user name
find a note by the id
find note by id
remove the note from the id
remove the entity with the given id
finds an instance of login error in the database by the login error
find an instance of login error by the user id
find an instance of board permission class by the id
finds a code board permission code by its id
finds all the resources for a given bid
find all load permissions for a given id
remove permissions for a bid
remove all permissions on a board
find all permissions of a type
find an instance of user group in the database by the user group
find user groups
find a note by the id
find note by id
remove the object by id
remove the entity with the given id
find boards by parent id
gets the next order for a given pid
find book mark by id user id
get the book mark num of a user
get the book mark number by user id
remove a book mark
find a book mark by its id user id
get the book mark number by the user id
get book marks
gets the num of book mark for a user idshare
remove a book mark from the database by id user id
returns the string value of the key in the configuration context
this method is called when the timer is started
saves the users number to the file
save the post number to the database
returns whether reg auth code is used in the response
find all roles for a type
find a login error by id
find a login error by user id
find book mark by id user id
get the book mark num
get book mark num by user id sharing flag
find book marks by user id sharing
remove book mark
find a note by id
finds a note by id
remove note by id from all note in the database
remove note by id
find a user group by id
get list of permissions for type
get board permission by id
get board permission by id
get all board permissions for a given bid
get board permissions by gid
remove board permissions by bid
remove board permissions by gid
finds an agree against a post
returns the use reg auth code
sets the value of the use reg auth code configuration
find an agree against a post
returns whether the current password is used
gets the email address to check for registrys
setter method for checking e mail address
sets x y padding in pixels
reverse the current sprite
set the image to be displayed
returns the size of the list
returns the sprite of the entity
returns an image sprite for a given position
returns the amount of padding in pixels between text
returns the amount of padding in pixels between text
returns the size of the list
returns whether this loop is currently looping
add a group img spr to the group img hash map
get group img spr object
returns the number of group members in this group
get the time loop
set the time loop start value
sets the start count of the specified loop
set the start time of the image loop
set the start offset of the img loop in reverse order
returns an image sprite for the given position
waits for all threads to be available
closes the connection
this method initializes editor pane
this method initializes split pane
this method initializes msg pane
this method initializes msg area
this method initializes j separator1
this method initializes j separator2
this method initializes j separator3
this method initializes status panel
this method initializes cursor panel
this method initializes file name panel
this method initializes j separator4
this method initializes this
this method initializes j content pane
indicates that a command event has occurred on displayable d
returns an initiliazed instance of ticker welcome component
returns an initiliazed instance of field repeat setup password component
get field login password text field
returns an initiliazed instance of command ok component
checks if the object exists
initializes the engine with the given option
get the message that was sent to the remote server when the upload
runs the worker
reads the input stream and blocks until it is ready for the
returns true if the worker is still running
gets the value of the message result property
is this term a rational term
throws an unsupported operation exception
throws unsupported operation exception
strong this method is not supported
get the mantissa of this floating point number
returns true if this is an enotation gallery
normally returns a null for an argument
the code parse string code method takes in a mathematica string
creates a new node
check if the number of children is correct
returns true if the operation is a vector
check if the number of children is correct
parses a math ml from a string and returns an astnode
reads the xml document from a reader and returns the root element
check if the child number has correct child
returns the current string
sets the value for the specified identifier
set the value for the given identifier
sets the double value for the given identifier
returns the type of this class
is log10
returns true if this is a square root
check if the child number has correct number
returns true if this is a function
indicates if this is a logical operator
returns true if this is a number
returns true if this is a relational operator
implementation of pretty interface for pretty printing
returns the element
clears the xml element
select the row that matches the given field
creates and returns a new errors with the given source
the key was not bound
given a type and a name returns the key
this method must be called after all modules are loaded
this method closes all singletons
creates the jndi names properties from the given hashtable
return the method for the given type
session factory hibernate sql orm
session factory hibernate sql orm
returns top of the query
find a list of all the sql findby in the database
convenience method to create an sql query
evcit the given entity from the database evicting the entity
p login to the system
method added by phil
returns the port this socket is connected to
returns the local port to which this socket is bound
disconnects from the underlying code input stream code
set the timeout of the socket
write the link to the sink
returns the auto flush
set the auto flush flag
returns an output stream for this socket
returns an input stream for this socket
sets the packet encoder implementation to use for packet encoding
adds the given delay to the packet
read a number of bytes
dump out incoming data to the output stream
add a message encoding to the message
adds a new code message encoding code to this code message writer code
true if connection to link should be automatically closed when
returns the default alphabet
returns the alphabet of the given language
initializes the alphabet for the given server
decodes a byte array to a string
decodes the byte array to a string using the default encoding
returns the unknown character replacement
returns the size in bytes of the given string
set the charset for this probe
receive and exit messages
returns the session that sent the event
receive and error messages from the session source
receive the exception from the session source
used by the session source to indicate the start of a
this method is called by the session source for which the session
submit smresp
submit a multi response to the remote source
notify all the observers of a event
cancels the smresp
notify all registered observer
this method should be used to replace the smresp
this method is called when a get request is received
this method is called when a link is retrieved from the database
returns the error
sets the error
method for querying elr to the server
unbinds the session from the ubd
unbinds the response from the session source
binds the response to the session source
generic nack event handler
called when a session is unidentified session
create a new instance
create a new response
unregisters a packet from being used by the virtual machine
add a command id to the store
add a request to the store
create a new instance
converts a string to a boolean
binds the client to the server
sends a unbind resp
gets the year modifier
sends a packet and waits for caller
setter for property year modifier
returns true if there are packets available
read and return the next packet
returns the time zone for a given offset in utc
returns the time out value that the next packet will be received
sets the timeout for waiting for a packet for sending data
interrupt all blocked thread
force the logging system to reconfigure
returns a url to the default properties file for the current
load api properties from url
returns the calendar
returns the tenth of this code competence level type code
returns the utc offset in the range 0 255
sets the length of the sm in bits
gets the time zone
returns the length of the sm
returns the sign character
returns true if this timezone has a timezone
gets the value of the destination table property
sets the msg count
adds a new destination to the destination table
adds a new message id to the message table
returns the number of messages in the message table
adds a new destination to the destination table
returns the number of unsuccessful results
returns the number of destination tables
adds an error to the list of errors encountered during
removes a address and returns success count
returns the length of the message
returns true if this is a request
this will return true if the command is a response
sets the command status
adds a new destination address to the destinations table
get the sequence number
adds a distribution list to the destination table
set the sequence number
get the tlv table
set the tlv tag value
get the tlv tag from this message
remove a tlv tag from the message
returns true if tag is a set tag
writes the packet to the given packet encoder
reads the requested packet from the given packet decoder
returns string representation of the message
returns the size of the address
return the size of the given date
returns the size of the specified string or zero if the string is
returns the integer value of the tag
returns the length of the longest line
safely compares two objects
returns the tag value
override this method to add info to the buffer
reads the next block of data from the packet decoder
writes the contents of this object to the given packet encoder
validates the smpp version
returns the value for the given tag
validate the smpp version
gets the value of a tag as a string
returns the int value for the given tag
reads the mandatory parameters
returns the long value for the given tag
checks if this tag is equal to another
get the bitmask tag for the given tag
this method is called if a packet is mandatory
compares this tag to the specified tag
returns the number of bytes that are required to store a value
returns the hashcode of the tag
read the command header
returns a string representation of this object
returns a string representation of this tag
removes the given tag from this list
returns the length of the signature
returns the ton of this key
sets the ton
get the value of npi
set the number of repeats
sets the address of the user
returns a hash code value for this object
tests this object for equality with another object
returns the length of this address
get the state of the current page
set whether the agent may be forward or not
returns the user prompt
sets the user prompt
returns the amount of extra header space that is added to the
write the image header
returns the object format
returns the position of the object relative to the base xml document
set the binary data
sets the object position
test that get length matches the given packet
initialize this kernel
run the device test loop until the console is typed
execute the specified program with the specified arguments
set the interrupt status
loads all pages according to the coff file
called when the editor is unloaded
handle the halt machine call
handle a syscall exception
wake up at most one thread sleeping on this condition variable
wake up all the threads sleeping on this condition variable
get the effective priority of the specified thread
set the partner for this monitor
method for generating a random item
make this thread terminate
the specified thread has received exclusive access without using
get the next thread in the queue
test this kernel
select the next thread in the queue
returns the effective priority of the associated thread
called when the associated thread has acquired access to whatever is
atomically blocks until the currently executing thread returns until the
causes this thread to begin execution
waits for this thread to finish
set the priority of the scheduler
get the current priority of the scheduler
this method is called when a new turn is started
gets the current player move
broadcast the move to all clients
returns the project member
override this method to return the url where to request data for this
utility method to get the iteration from the database
returns true if the iteration is valid
abort the form
returns a parameter of a group
retrieves a conern id parameter from the concern by its id
returns the full path to the base file for the current server
display the gui
loads the table
add a new database entry to the table and save it
adds a dbentry to the category
shuts down the database
this method will display a query in the table
prints the most active application
prints the most popular information
tests scraper and svn out of history
test method for
tests division finding
tests that page list can be handled correctly
tests scraper and get application names method
tests scraper print member
click on the code tester code at the given location
mouse move the tester
press the mouse button
action mouse release listener
gets the frame attribute of the browser object
help initialization method for this component
returns a pseudorandom uniformly distributed tt int tt value
returns the next pseudorandom uniformly distributed
returns a pseudorandom uniformly distributed tt int tt value
paints the component
returns a uniformly distributed random number in the open interval
returns the next pseudorandom uniformly distributed boolean value
returns a random color
get the drawing canvas
assert that a range of lines is contained in the same color
assert that a line at the given location exists
returns the resource bundle
returns the event queue for the specified component
wait the given component for the given action to be completed then
gets the description control
delay the robot in ms
wait for the event queue idle
returns true if the component is ready for input
invoke the popup menu
iconifies the given frame
this method is called when a condition is met
wait until the condition is met or the timeout expires
wait until the condition is true or the timeout is reached
the run method for this thread
returns the current gcanvas
adds a new gobject to the collection
removes the specified gobject from the collection
removes all of the elements from this code buffer code
returns the number of elements in the current code index code
returns the element at the specified position in the internal array
returns the gobject at the specified coordinates
this method adds the specified mouse listener to receive mouse events from
adds a key listener to this cell
adds the specified key listener to receive key events from this cell
convenience method to wait for a click event
repaints this component
remove all components from the container
sets the background color
creates a new code gcanvas code
called when the paint method is called
the i o functions is called at the beginning i
called when the mouse is pressed
called when the user releases the mouse butotn
invokes the method named in the constructor
called when the mouse exits a region
invokes the my program
adds the gobject to the run method
called when the application has finished launching
this hack attempts to find the component definition for the given array
returns an erxmigrator with the number ofmigrators name
test the buy buy order with 100
test of clearing method of class com
test that the status listener is notified
test that 12 12 a buy isnt detected after a buddy
test the cancel operation
test that time bought is set when a payment is added
reset the transaction time
test that buying 100 contracts are correctly placed
test that time bought is set correctly
calculates the time for the given paid within the two farthest
test the beta town receipt
updates the display
creates and returns a panel with the coin input
defines and returns a new button
create a panel containing the cancel button
creates the panel for the display
sets the text in the label to red
called when this label is granted
create an access exception for this method
create an access exception for this exception
sets the map value for this map
sets the map key in the object to the specified map key
returns the stored object
initializes the reference object
write a token to the serial port
stores a reference in the repository
write an object
returns the object stored in the node
serialise the key
read a token from the serial port
set the field to be edited
write the token to the specified cache appendable
returns the current position in the analyzed input stream
set an element of an array to be edited
inits the test
adds a task to the list of tasks
gets the specified indirect type
create an instance of the given class
gets the indirect type for a given object
create an array of the given type and size
returns the type of this object
returns the value of the field in the specified container
set the value of the field
move the current type to the next type in the chain
returns a serial format exception for this format
returns a format exception for a given exception
returns the string associated with the given key
returns a formatted exception
returns a code char sequence code representing the hex value
asserts that the position is relative to the serial number
converts this number to a code char sequence code using the
returns the id of this object
converts a character sequence to an integer
sets the i
returns the object that this class is associated with
get the inner child object
returns the block
returns the phone number of a given contact
adds a contact to the contact list for a particular type
adds a requirement to the list of requirements for this job
gets the value of this argument
converts the current verb record into a result
sets the context for the expression to evaluate
creates a requirement from a line of text
sets the verb
sets the implicit response to the response provided
parses a code requirement code from a
sets the assertion failure object
sets the expected error response
set the possessive property
recall the memory usage
assert that the reference of the current object is equal to the given one
returns whether or not this component can be fillable
compare label value beans based on the label because thats the human
return a string representation of this object
indicates whether some other object is equal to this one
returns a hash code value for the object
determines whether this object is equal to the given object
returns a hash code value for the object
returns a multi line string with key value pairs
adds a role to the user
set the bean name of the session factory to fetch from springs root
sets the value of mapping resources
sets the list of annotated classes
sets the config locations
utility method to populate a javabean style object with values
sets the hibernate properties
convert the specified input object into an output object of the
convert a string to a date with the specified pattern
convert a java
convert a string to a date
convert a java
set the dao for communication with the data layer
utility method to populate a javabean style object with values
send a simple message based on a velocity template
send a simple message with pre populated values
release any acquired resources
when method get input is returned
cancel the current operation
release all allocated resources
converts the scope name into its corresponding page context constant value
convenience method to get the configuration hash map
grab the entity from the database before populating with request parameters
returns the users
convenience method to send e mail to users
returns the input
delete the user passed in
p show the delete button for the current document
when users logout add their name
shutdown servlet context currently a no op method
when users logout remove their name from the hash map
needed for acegi security 1
initialize the filter
test create user
black and white cleaning
black and lower case image
black and light gray
cleaning the image according to the configuration
lock up a image
locks down a rectangular area of the image
crops the image using the given graphics2 d
locks the image up for black pixels
this method checks if there is a vertical line in the image
this method returns whether the returned histogram is locked
this method returns true if histogram1 is locked
returns a buffered image of the current color
loads an image from a file
returns an image icon or null if the path was invalid
required by tree selection listener interface
returns the number of columns in the model
returns the number of rows in the model
returns the value for the cell at code column index code and
adds a listener to the list thats notified each time a change
returns the most specific superclass for all the cell values in the
returns true if the cell at row index and column index is editable
removes a listener from the list that is notified each time a change
sends a user news to the server
reads news from the database
tell the given user the given string
tell a group of users that somebody wants to answer
called when someone tries to spell the spell query
who request arrived
no user event handler
called when the tell is received
called when a user drops connection
called when a game is finished
called when a user logs in
called when a user logs in
called when a user logs out
called when a game is resumed
called when a user shouts something
called when a game is started
called when a network error occurs with a user
called when a user has closed an admin window
called when an old connection is closed
called when a connection timeout occurs with a user
returns a set of all games that have been saved by the user
gets the games object from the database
process a line while in get string state
returns the set of games that have been saved for the given user
sets the number of saved games
set the saved games
returns a formatted string describing the number of games that have been
annotates the saved games for the given user
set the saved games
return the filter for the saved games
notifiy all timeouts
returns an empty set
called on a received line
set alert status for user
sets the alert status for the given user
get the current alert status for the user
prints a alert to the user
alert a user about the current game
sends an alert to the user that the opponent has been logged in
called when a connection is established
called on a disconnect
called when a user reply to the server reply
called when a user drops connection
called when a game is ended
called when a user logs in
called when a user logs out
called when a game is resumed
called when a user shouts something
creates a list of reply objects for who in a given role
called when a game is started
called when a network error occurs with a user
called when a user has closed the admin window
called when an old connection is closed
get a string that represents the bot
called when a connection timeout occurs with a user
called on a timeout
executes the command
start creates the thread to do the timing
adds a new entry to the trie
set the entry
gets the entry of a word
displays the string representation of the token
get the sub node for the given node
returns the label of the first sub node of the specified node
get the preffered node type of a given node
get the specific label for a particular node
get the value of a node
display a specific node label
add a node to one of the given brother labels
returns the node number of the given node and the given chr
find a previous grand child of a given node
returns the text field
set the text field
returns the text to draw
get the name of the size field
set the field to be used for size
returns the size data value for the given visual item
returns the image to draw
adds the specified component with the specified name to
hides the about window
shows the map setting window
hides the map setting window
invoked when an action occurs
sets the title of the map
convenience method for setting the author text in the map panel
gets the title of the map
convenience method for obtaining the wadl author text
set the unit increment for scrolling
sets whether or not this code jinternal frame code should force the
sets the height of the viewport
determine if the ith direction is set
returns the direction of the ith variable
returns true if this label has a target associated with it
build event handlers
write the current data set to the specified file
counts the number of start locations
sets the terrain type
returns the terrain type
set the link to a given node
get the link to a given direction
get the start location flag
set the start location flag
returns true if this is a passable tile
determines whether the scene graph will be merged
gets a unit by its unique id
this method will be called before the combat of the unit
this method will be called after the combat of the player
this method is called when a new turn starts
this method is called when a player ends a turn
returns the filename of this page
returns a content object containing the list of all users
returns a content object containing the list of index
checks if this unit is ranged
checks if the input matches the subject of this message
handle mail input
returns true if this is a authentication request
test if the input matches the subject of this message
returns true if this is a authentication request
checks if the input matches the subject of this message
test if the input matches the mail
checks if the input matches the subject of this message
gets the location of this exception
gets the increment
gets the value of race
generate a prayer object
generate prayer object from a date
updates the timer entry
start timing the event
stop timing the event by populating the timer
init time manager
populate data from current user
serialise the categories to json
gets the started running date
returns true if the server is running
populate data from the current entry
returns the value to which the specified key is mapped or
returns true if the current url is a oracle database
returns true if the url contains the postgres protocol
get all groups that are members of this group
assimilate a directory
returns all public groups of a user
method to log in a user
returns count of images in a given group
updates a users password
updates the visibility of a working set
returns the session context
sets the warning text
generates the output for the given test report
add a bootstrap to the list of bootstraps
adds a standard test to the list
adds a new web test to the list of web tests
get the bootstrap for the harness
runs the ant task
adds a value to the set of boot params
bootstraps the class
get an input stream from a file in the classpath
sets the session number
get the properties file from the classpath
returns a collection of errors that occurred during test execution
returns a test which will fail and log a warning message
gets the test failures
is the test complete
returns the test text
add a collection of test warnings
sets the test text
sets the expected value
adds a collection of test failures to the test suite
gets the test number
add a key value pair to this node
returns the actual value
add a test warning
sets the test number value for this remote issue type
set actual value
get the number of warnings
adds a test failure
returns the number of failures in this test
add key value pair to this node
gets the value of the test details property
sets the test details
returns the outcome of the test
this method returns the test type
sets the test outcome
returns the template url
returns the use sessions
set whether sessions should be used
returns the name of the jsp page that will be generated by this
returns the content of url as a string buffer
set the req username property
return the req username
boot xide server
set the req password
return the req password
checks the classes in the classpath
parses the query string into spaces
sets the session id
test method for
tests for get clock settings model
tests the military time property
tests for correct application settings model
test method for
test method for clock settings model
tests the method for setting the full date in the clock settings model
test for method clock display color
test method for org
test stopping the ticker
stop the ticker
notifies the listener that the current tick has been changed
displays a message in the chat box
this method is called when the user chooses the nuked button
is the memory allocated
returns the number of columns
returns the number of entries in the matrix
get the row that was off set
get the column that the off set event should be fired
returns the length of the wavelet
checks that indices indices are valid
get the length of the expression
get the real part of the complex number
returns the imaginary part of the complex number
set the real part of this complex number
set imaginary part of this object
add a real number to the complex number
adds an imaginary to the complex number
multiplies this number with real
multiplies this number with an imaginary part
get the magnitude of the vector
returns the phi angle in degrees
return a new complex object whose value is the conjugate of this
add a complex number to this complex number
subtract a complex number from this complex number
multiply a complex number by a scalar
multiply a complex number by a scalar
division of complex numbers doesnt change this complex number
divides this number by the scalar s
show the real part of the complex number
shows the component with the given identifier
show the magnetic variation
show the phi of the vertex
loads the header model in the given code header model code
renders the header model
this method calls render data model with the data model
sets data model in session and renders it
creates a widget for the sorting direction
sets the number of rows to render per exectution
returns the number of rows to render per exectution
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes desktop
this method initializes menu principal
this method initializes sistema
this method initializes cliente
this method initializes inserir
this method initializes editar
this method initializes j text field cpf
this method initializes remover
this method initializes j text field rg
this method initializes sair
this method initializes j text field nome
this method initializes j text field telefone
this method initializes j text field celular
this method initializes j text field email
this method initializes j text field logradouro
this method initializes j text field numero
this method initializes j text field complemento
this method initializes j text field cep
this method initializes j text field bairro
this method initializes j text field cidade
this method initializes j button cancelar
this method initializes j button limpar
this method initializes j button localizar
downloads a file by a pid
fetches the iphone stream url
returns a valid url for a version based on the pid
scrolls the window to the right
shows the login window
changes the state of the registration window
set the pokemons
adds a friend to the list
removes a friend from the list
adds a local chat message to the local chat tab
opens the friend list
pokedex is not currently active
open a local chat window
opens the bag in the display
opens the help display
open the party window
starts the clock
checks if local user is chatting
invoked when the session is closed
get the screen width
get the screen height
getter for property m map revision
setter for the map revision field
loads the settings from the disk
saves the settings to the disk
add a private chat
sets whether the player ends quest or not
sets the starts quest attribute of the message object
set the pokemon level that this player has to trade
generate weather based on the weather
returns the code field effect code that will trigger this unit
sets the quest requirement of the player
returns true if this component is legendary
this method is called to generate the appearance
removes the npcs appearance from the map
this method is called every time the pokemon is generated
removes the species from the list of legendaries
set the pokemon requirement
sets the requirement that contains the item
sets the badge requirement for this job
set the id of this quest
set the potential party string
gets the speech of the player
sets the speech of the player
sets the quest spells name
returns the quest speech
sets the index of this event
returns the index of this event
this method sets the badge parameter
get the badge parameter
sets the money
returns the money
specifies the end speech of the story
get the end speech of this token
end a battle player
returns true if the npc is trained
returns the highest level that nesting can occur for
set the minimal level of the search
sets the connected flag
return the set of moves that can learn the given species
add a spectator player
remove a spectator from the players list
returns the current map matrix
sets the actual map matrix
get a random npc
get the map at the given coordinates
run the thread
returns the required badge
get the set of possible moves that can be done
returns the required item
sets the required item
setter for x coordinate of warp map
return true if the given move can be learned
setter for property m warp map y
setter method for x coordinate of warp
setter method for this x warp y
takes an item and returns its id
getter for the warp to map x coordinate
getter method for the map y coordinate
getter method for the warp x
getter method for the warp y property
set the species name
set the minimal level
p get the minimal level
sets the maximum level that will be allowed in this range
p get the maximum level
set the sprite
the encounter rate can be set with this method
returns if the given coordinates are inside the map item
the encounter rate
returns the sprite
returns the wild probability
sets the wild probability of this context
this returns the map pvp type
set the map pvp type
add a day to the calendar
set the id of this quest
remove the day pokemon with index i from the list of pokemons
add a waypoint to the list of night pokemons that are on
returns the id of this quest
remove a night pokemon from the list of night pokemons that are on
sets the npc type
add a surf pokemon to the list of surfps
remove a surf pokemon from the list of surfps
gets the npc type
sets the potential pokemon with given name and index
removes a warp data
adds an npc data object to this event
removes an npc from the players npclist
set the minimal pokemon level
get the minimal pokemon level
get a wild species
attempts to save a player
saves a player into the db
sets the ends quest attribute of the main frame object
returns a wild level that is not a number of times the
returns the badge requirement for this job
gets the requirement for this item
get the surf species
get the pokemons requirement
player is placed here
get the pokemon level required to undervest this task
returns a randomly chosen surf level
sets the money
adds a player to the map
returns the number of alive participants at a given index
invoked when a new session is created
removes a player from the game
this method will be called when the user logs out
adds a warp tile to this tile
returns the warp tile at the given coordinates
adds a non player char to the npc
is wild encounter
calculate hitpoints from the player
check if the point x y is on the surf encounter
propagates the map data to a player
sends a string to all the players
returns npc at position x y
returns if a tile is warped by a given location
getter for property x offset modifier
saves the current state of the game to a file
loads the properties from a file
getter for property y offset modifier
returns a random direction
stops the server
called when quest is ended
set the id of the quest this player is currently in
returns id of the quest this player is currently playing
returns true if the given quest has been completed
complete quest info
the position of this local variable on the pc instance that owns the getpvp rank
set the pvvp rank
determines if this property is propagated
switch out this pokemon
marks this property as propagated or not
returns the class of this player
sets the class of this player
returns the password hash
return the effect for this pokemon or null if there is none
initialises the client friend list
adds a friend to the list
remove a friend
creates a list of pokes boxes for this page
switches the poke on a given box
adds a badges to the list of badges
checks if the given badge is in the list
returns the number of badges
returns true if this rabbit component is talking
remove a status effect from this pokemon
set the password hash
return the io session
set the io session
attaches this status to a field
heal the party
the game has lost a battle
sets the last heal point of the map
switch out a party
add the given pokemon to the list of caught pokemons
add a pokemon to the players pokemons
returns the number of boxes in this group
checks if this player can surf the player
queues this movement to the given directions
sets the health of the ownable
this method should be called when the entity has been moved
inform all status effects that a status effect has been applied
switches two pokemons
returns the money
sets the money
returns code true code if this property is a modulo operation
set mod flag
this method will initialise the client bag
re arrange a party
this method is called by the ai thread to learn a move
create a new thread for the given runnable
sends a message to a destination
sends a message to a destination
returns all portlet drivers
adds the given producer to the set of producers
returns the producer with the given id
returns an iterator of all the producers in this manager
removes the producer with the given id
removes all producers from the manager
returns if there is an producer with the given id
sets the value of the user id property
sets the user id
returns the user context
returns the producer id
sets the user context
sets the producer id
add a group session to the list of active sessions
returns an iterator of all group sessions
removes session from the list of sessions associated with this user
removes all group sessions
checks if a group session exists
get all porlet session objects
remove a portlet window session from the application context
get the portlet this object represents
remove all portlet window sessions
returns the producer id
sets the producer id
sets the url generator for html generator
add a portlet to the registry br
returns the consumer agent
get the portlet set for the given portlet key br
sets the consumer agent
remove the portlet with the given portlet key br
removes all portlets from the portal
sets the supported locales
returns true if the portlet exists in the list
specifies the modes that this device supports
returns an iterator of all the portlets
returns the user with the given user id
sets supported window states
removes the user with the given id
returns the portlet state change
adds a user to the user database
returns an iterator over all users in this group
set the portlet state change
sets the mime types
returns the user authentication method
set the user authentication method
sets the user registry
get the producer registry
set the producer registry
returns the portlet registry
sets the portlet registry
retrieves the portlet driver registry
return service description url
returns the session handler
sets the session handler
returns the composer of this template
set service description interface endpoint
sets the template composer
return the url rewriter
set the url rewriter
returns the registration interface endpoint
clone the portlet
set the url for the registration interface
returns the producer id
sets the id of the event producer
create a new wsrp session cookie
return a logger for a given class
sets the name of the state
returns the nested throwable that was thrown or null if there is no
returns a short description of this throwable
get the exception range
sets the common exception range for all requests in this test array
sets the description of this
sets the range where the consumer throws an exception
sets the range that contains this exception
sets the range that contains this exception
getter method for registration required
set if the registration is required
returns the registration data object
passes the registration data to the next listener
adds a listener to the list of listeners
notifies all listeners that the state of this domain has changed
generates a unique handle for the current time
returns the current handle generator creating it if necessary
sets the registration context
gets the service description
set the portlet description
add a portlet description
check the get markup request
returns the registration context
gets the value of registration data
sets the registration context
sets the registration data
check that the init cookie is not null
deregister this wsrp connection
check the clone request
check if a destroy portlets request is allowed
process release session request
sets the parent handle
gets the value of the parent handle property
creates and returns a copy of this object
get the handle of the portlet
set the portlet handle
retrieves the available handle for a portlet
removes a register
returns whether the service requires registration
sets the requires registration required attribute of the project object
adds a new clone consumer to the list of clone handles
deletes the portlet handle if it exists
returns an iterator over the clones of this group
creates and returns a copy of this object
sets the registration handle
returns the registration handle
adds a portlet handle to the portal
returns true if the portlet handle is contained in this collection
deletes a portlet handle from the portal
set the collection of portlet handles
get the collection of portlet handles
check if the response is a update response and if so check its
check if the response is a valid markup response
check if a portlet description element is valid
checks the templates element
returns the portlet window session associated with the given id
sets the url generator
set the window state of the portlet
sets portlet mode according to the given url
the action has been activated
the action has been activated
the action has been activated
this method is called when finish button is pressed in the wizard
returns the css class for the selected row
sets the css class for the selected row
p return code true code if this is the default tab
returns the portlet id without the domain
returns the portlet for the given group and company id
returns the root portlet id
get the portlet preferences from the portlet api
called before the phaseevent
returns the primary key for the given portlet id
this will read a byte from the stream
returns true if this document has been saved
get the owner id from the layout
set up the content value
set the url value
sets the description of this filter
this method delegates to reflection to string builder
compares this my url with another object for equality
sets the localized string for the given locale
migrates this content node down if it is a subpart of another
convert the specified argument to the specified type
returns the full path to this directory
removes the specified node from the listing
removes a property from the list of content nodes
the class returned by null safe get
get the hashcode for the instance consistent with persistence equality
transform the object into its cacheable representation
reconstruct an object from the cacheable representation
replace the object in the database with another object
adds a folder to the root folder
gets the general goals
sets the value of general goals
getter for property specific goals
sets the value of specific goals
gets the value of conceptual contents
sets the value of conceptual contents
getter for property actitudinal contents
sets the value of actitudinal contents
gets the value of procedimental contents
sets the value of procedimental contents
returns the goals of the evaluation
sets the value of evaluation goals
getter for property activities
sets the value of activities
sets the value of resources
sets the links indexed property
returns the link at the given index
returns the title
check if there are any links in the graph
tests if this title has no links
returns the name of the code mining mart concept code
this method returns true if there are specific categories
sets the value of title
gets the value of perform place
sets the value of perform place
getter of the begin date
sets the value of begin date
sets the value of end date
returns the url string
returns true if this url has no data
returns the name of this page
gets the value of start time
this method returns true if there are specific categories
sets the value of start time
gets the premiere date
sets the value of premiere date
sets the value of place
getter for property image
sets the value of image
sets the value of duration
gets the value of the image subtitle property
sets the image subtitle
getter for property summary image
sets the value of summary image
gets the value of the summary image subtitle property
sets the value of description
sets the summary image subtitle
sets the value of summary
getter for property sponsor
sets the value of text
gets the value of web page url
sets the value of sponsor
sets the value of web page url
returns the trailer url
sets the value of trailer url
set the proposals
set the proposals indexed by index
sets the value of author
sets the value of genre
returns the parent node of the given node
gets the value of productor
sets the value of productor
returns the subtitle
sets the subtitle of this embedding
set the section
subsection gets the value of this field
sets the value of company
set the subsection
getter for property main image
gets the value of the main image subtitle property
sets the value of origin
sets the main image subtitle
get the secondary image of this data reference
gets the value of the secondary image subtitle property
sets the secondary image subtitle
sets the value of language
the getter for the animation
sets the animation
getter for property adaptation
sets the value of adaptation
gets the value of coreography
sets the keywords
sets the value of coreography
gets the value of costumer
set the list of proposal objects that this pdf document contains
sets the value of costumer
set the proposals indexed by the index
gets the value of lights
return the proposals indexed by the index
like to string but also includes the whole
sets the value of lights
returns a string representation of the object
gets the value of graphic design
generated using commonclipse http commonclipse
sets the value of graphic design
process the do end event
gets the value of scenic space
sets the value of scenic space
gets the director
sets the value of director
gets the value of main actors
sets the value of main actors
gets the value of translation and version
sets the value of translation and version
gets the music compositor
sets the value of music compositor
getter for property music director
executes when the tag is finished
sets the value of music director
gets the value of photography
sets the value of photography
process the do end event
gets the channels sound
sets the value of sound
getter for property program
sets the value of program
the getter for the image
sets the subtitle
returns the multimedia file associated with this theme definition
sets the value of multimedia file
returns the alternate text of the image
set the alternate text value
returns the stored title
returns the description of this
set the description value
returns the amount of space used by the repository
returns the amount of space in mb
sets the used space in bytes
returns the string representation of this object
returns a collection of the excluded properties
process the attribute value from the dom
returns the path to the repository for the given content class
return the maximum number of directories that we will use for the
returns the destination path to the content class
returns the file extension of the given file name
returns true if this is a category field
returns the file extension of the file
get the path to the repository info
get the file name
returns the path to the public content in the repository
returns the url path description of the file
get the base url path relative to the server
returns the public path in the repository
returns the repository path
returns a string representation of the object
compares two binary data reference objects for equality
check if any files that are not referenced to this node
sets the id
sets the order
set the valid categories value
adds a new category to the list of valid categories
returns a hash code value for the object
returns the name of this title
sets the creation date of this object
returns the date of the last modification
sets the last modification date
returns the value of author id
sets the label of this node to the new label
sets the author id
get the content data value
set the content data value
to string method
compares this category with the given object for equality
returns a hash code value for this instance
saves the content to the given folder
returns the top level of this node
getter for data class name
returns true if the category is a tree
sets the data class name
sets the categories
add a category
adds a category path to the list of categories paths
add a category to the site
return the common category with the specified name
return the specific category with the specified name
find a category with a given name
retrieves the minimum age that the user will see in the rss feed
sets the minimum age
sets the maximum age
updates content in the repository
sets the version of the module
checks whether this category belongs to a given category
returns a string representation of the object
two content objects are equal if their ids and version are equal
returns a hash code value for the object
delete all the top categories
return searched text
returns the number of pages
set the amount of time in millis taken to complete the task
returns the time when the task has been done
sets the timestamp
gets the seconds when the task has been done
add a list of hits to this query
adds a content hit to this page
remove a content hit from this page
returns the list of hit records
sets the page index
returns the index of the page in the list of this
get the page range
checks if the given page is present in this result
get a list of all hit subselects that are not yet counted
returns a sub list of hits for the given page
removes the dependency of a draft content node
gets the id of the current content
sets the id of the content
gets the name of the current content
sets the name of the widget
returns the current gist
sets the gist
sets the score
returns the owner of the current object
sets the owner
remove xml tags from the given string
returns the children of this category tree
builds the query that contains the community data
construct a rssbuilder
adds an item to the list of items
creates a link from a content id and layout id
sets the type of rss version
return a fresh fresh refresh policy
return the owner world node for the given node
returns the node for the given content
put the content in the cache
removes the specified id version from the cache
removes the given node from the cache
checks the given content to ensure it is valid
check out the content
check out the node with the given id
create an instance of
create an instance of
get whether to use db2 or not
getter for property vendor informix
returns the vendor my sql
getter for property vendor oracle
getter for property vendor postgre sql
returns whether the java 3 d vendor is in the system
generate a script fragment that replaces the page body
replaces the xml string with the new one
update the current ban
returns the root portlet id
returns the instance id
returns the id of the plugin that is being exported
returns the portlet plugin type
returns the plugin package
sets the plugin package
get the plugin setting for the top level settings
set the default plugin setting
returns the virtual path of the project
sets the virtual path
returns the struts path
sets the struts path
gets the portlet name
portlet name sets thhe value for this field
sets the display name
get the portlet class
sets the portlet class
gets the configuration action class
sets the configuration action class
returns the configuration action instance
add a new role to the user
convenience method to set roles
sets the roles array
checks if the user has a role with the given name
check permissions for a user
return the class of the indexer
set the class name of the indexer
returns the indexer instance
returns the open search class
sets the open search class
returns the open search instance
the scheduler class name to use
the scheduler class name to use
returns the scheduler instance
the portlet url class defines the url of the service
sets the portlet urlclass
gets the class name of the friendly urlmapper
sets the name of the friendly urlmapper class
returns the friendly urlmapper of a wrapped servlet context
url encoder class
set the url encoder class name
returns an urlencoder instance that can be parsed by the
returns the portlet data handler class
sets the portlet data handler class
returns the portlet data handler instance
answer the listener that is registered on code org
answer the class name of the listener that will be added to the
returns the pop message listener class attribute of the bean reference object
sets the pop message listener class attribute of the bean reference object
returns the pop message listener instance
gets the social activity interpreter class
returns a social activity interpreter instance from the database
social request interpreter class
get social request interpreter instance
returns the web davstorage token
sets the web davstorage token
get the web davstorage class name
set the web davstorage class
returns the web davstorage instance that is associated with this
gets the value of the control panel entry category property
getter for the control panel entry weight
this method sets the weight of the control panel entry
gets the default preferences for the portlet
sets the default preferences
gets the preferences validator
sets the name of the preferences validator
returns the preferences company wide
returns the preferences company wide
sets the preferences company wide
returns the preferences ownerd of the group
returns the preferences ownerd by group
return true if the template will be used when every
return true if the template will be used for the default construction of
generates the xml content of the url
set whether or not to use the default template for certain types
is portlet inactive flag set
is portlet inactive flag set
sets the portlet inactive flag
gets the action urlredirect flag
tells whether latest action urlredirect
returns the restore current view
get the restore current view property
set if the current view should be restored after a save
returns true if edit window is maximized
returns true if the user is to maximize the edit dialog
get whether the help window should be maximized when displayed
get whether the help window is maximized
return true if the cells are cacheable the layout
getter for property layout cacheable
set to true to indicate the layout cache
returns true if this property is instanceable otherwise false
returns true if this class is instanceable
gets whether this attribute can be scoped
gets the value of the scopeable property
sets if the attribute is scopeable
returns the user principal strategy
set the user principal strategy
returns the private request attributes
gets the value of the private request attributes property
sets the private request attributes
get whether session attributes will be private or not
returns the private session attributes
set whether session attributes will be stored in a file
getter for property render weight
weight of this render target
returns true if the component is ajaxable
returns true if the component is ajaxable
sets the ajaxable attribute of the calendar view object
returns the integration for the facebook application
specifies the integration for facebook integration constraints the application
returns whether or not to add a default resource into the resource file
checks if is adds the default resource
sets the unlinked roles
set the map of role mappers
returns the system
get the include flag
sets the init params
get the expression cache
set the number of expressions in the expression cache
sets the portlet modes
returns true if the portlet mode has the given mime type
returns whether the portlet has multiple mime types
sets the supported locales
returns the resource bundle
set the resource bundle
get the portlet info
sets the portlet info
set the filter of portlets
add a processing event
returns a qname for a processing event
set the processing events
adds a publishing event to the set
sets the publishing events
get a single public render parameter by identifier
returns true if this is a remote reference false otherwise
sets whether this is a remote reference
returns the remote consumer id
sets the remote consumer id
returns the remote producer entity id
sets the remote producer entity id
returns the remote portlet handle
sets the remote portlet handle
returns the remote portlet id
sets the remote portlet id
get the context path for this instance
get the portlet app
set the portlet app
sets the subtitle for the page
set the title of the page
sets the port number of the portal
gets the undeployed portlet
gets the undeployed portlet value for this portlet
sets if the portlet is undeployed
compares two portlets based on their portlet id
returns true if the two portlets are equal
update a role
updates an existing user
performs an update of a group
performs an update on a image
update a phone
returns the day of the week
set the day of the week
returns the day position
set the day position
returns a string representation of this object
returns the start date of the session
sets the week of the year
set the hour member
sets the minute
returns the duration of the task
sets the seconds
returns the durations interval
sets the duration of the event
sets the interval to the specified number of milliseconds
checks if the weeks are valid
returns the end date and time of the recurrence
checks if the number of weeks is bad and throws an
returns a string representation of this instance
sets the end date of the recurrence
sets the frequency of the recurrence
set the interval to be used
gets the occurrence value for this test case
the code set occurrence code method is used to set the occurrence
get the upper bound of the recurrence
set the upper bound of the recurrence
returns the first day of the week for this recurrence
setter for property by month day
set the array of week preceding this one
set the array of month constraints for this recurrence
is the given calendar in the recurrence
returns the minimum recurrence interval in days
returns the number of recurrence methods in a given recurrence
set the array of day of the week and position constraints for this
determine if code candidate code matches the recurrences
set the array of day of the year constraints for this recurrence
determine if code candidate code matches the recurrences
determine if code candidate code matches the recurrences
determine if code candidate code matches the recurrences
tests if a code candidate code matches the recurrences
helper method for converting int array to string
replaces the xml string with the new one
update the current ban
returns the configuration action instance
check permissions for a user
returns the indexer instance if this validator was created
returns the scheduler instance
returns the friendly urlmapper instance
returns an urlencoder instance that can be parsed by the
returns the portlet data handler instance
returns the pop message listener instance
returns a social activity interpreter instance
get social request interpreter instance
returns the name of the preferences validator class
sets the name of the preferences validator
get the preference company wide for the application
returns the preferences company wide
set the preference company wide for the portlet
sets the preferences for unique layout
returns the preference to manage the visibility of the user
returns whether the preferences are owned by a group
update a role
update a user
performs an update of a group
performs an update on a image
update a phone
sets the dt start attribute of the c00 month object
sets the end date of the time period
set the upper bound of the recurrence
hook to create the view counter token
replaces the content of an xml document
returns the portlet id of the root portlet
returns the portlet instance id
returns the plugin type
the virtual path of the portlet
returns the configuration action instance
returns the friendly urlmapper of the validator
returns an urlencoder instance that
returns the instance of portlet data handler defined in the component
returns the smtp message listener class
sets the smtp message listener class
returns the single instance of the smtp message listener
gets the default preferences for the application
returns the registration with the given registration handle
return an iterator over all registrations
deregister the medium and low level registry
check the given registry exists
returns the unlinked roles property
sets the unlinked roles attribute of the security roles panel object
accessor for role mappers
set the map of role mappers
returns the init params
sets initialization parameters for the internal frame mode
get the portlet modes that are associated with this portlet
set the portlet modes that are associated with this portlet
returns true if the portlet mode contains the given mime type
get all portlet modes that are defined in this registry
gets the supported locales
sets the supported locales
returns the user attributes
sets the user attributes
returns the custom user attributes
sets the custom user attributes
get the servlet context name
set the servlet context name for this request
gets the warfile flag
checks if is warfile
sets the warfile flag
returns the context path of this web application
returns a list of urlpatterns
sets the servlet urlpatterns
returns a string representation of this day
returns a string representation of this object
set the interval to use for sending messages
stringize an int array
returns the friendly urlmapper instance
get the value of activity tracker interpreter class
get the activity tracker interpreter instance
called when the view has changed
this will compare this string token with another string token
returns adjusted line count
get the height of a line from the jtext component
checks if the given string is a script tag
clears the document
updates the text component with the new line
replaces the content of the document with the given string
returns the text of the document
sets the same width of all the buttons
get the text from the document
selects all text in the document
cut the selected text into the clipboard
copies the selected text to the clipboard
pastes the text from the system clipboard into the text pane
undoes the last action
redoes the last undone edit
replaces the currently entered text with the new text
finds the position in the tokens
color the tokens that have been dirty
add a dirty marker
returns the path to the configuration file
sets the configuration path
check permissions for a user
returns an urlencoder instance that serves the current request
returns the portlet data handler
returns the smtp message listener
get flag for maximizing print
get flag for maximizing print
returns header css
p set the value of the code header css code property
return the list of header java script codes
sets the value of the java script header property
returns true if the portlet mode has the given mime type
adds the tag positions for a single line tag
replace form name with id
returns the end index of the given attribute
returns the index of the end of the tag
sets the dt start attribute of the c00 month object
sets the day of the month to the specified value
returns the portlet data handler instance
returns a social activity interpreter instance from the database
get social request interpreter instance
replace the content of xml with the content of the xml
the virtual path of the portlet
returns the pop message listener instance
generate the view counter token
replaces the content of an xml string
remove the wsrpchannel for the given channel br
remove the wsrpchannel from the list of channels
sets whether the referenced type is a remote type
gets the value of producer entity id
sets the producer entity id
gets the value of consumer id
sets the consumer id
gets the remote portlet handle
sets the remote portlet handle
gets the value of remote portlet id
sets the remote portlet id
hook to create the view counter token
update the current ban
gets the portlet web app name
portlet web app name sets thhe value for this field
returns the virtual path of the context
sets the subtitle for the page
set the title of the page
set the port for portal based requests
update a role
update a user
performs an update of a group
performs an update on a image
updates a phone
gets an iterator for the attribute axis
sets the feature
returns the feature vector of the ith vertex of the two
calculate the estimating probability of this ngram
returns the estimating probability of an ngram
gets the added partition
returns the total weight of the set
sets the total weight of the edge
recursively gets the list of subnodes that are children of given
return number of partitions in excess of
return the log weight for the given
gets the parent of this partition
gets the top partition
calculates the disc percentage of the training set
find the parent of the current ghost if there is one
returns the class id
get the bump prior mdl of the compressed file
map the given expression to an unfiltered expression
returns the log likelihood value as the current log likelihood
returns the intersection of the inner classes of c1 c2
returns the feature value for the specified data set
returns the name of a feature
look up the specified class
gets the count of laplace of an ngram
test the depth of the class attributes
test method for
this method is being tested in test get class size
test hierarchy method
set maximal class depth is the depth of the class
this method is being tested by test suite
this method is being tested in test get minimal class size
set minimal class size method testing
test that the node is marked for pruning
this method is being tested by test class size
test that the data is marked for pruning
test for the setup method
this method is being tested by test set class size
test of prune all method of class classifier
cumulative class size
test method for
test method for
remove id removes id from raw
cumulative class weight
test method for
class under test for void class depth
test method for
test method for
classes that represent this class are not using
test method for
test of dataset method of class usyd
test method for
test method for
this method is being tested by test add class
class under test for string remove class
this method is being tested in test get data
test filtering of all
this method is being tested in test get comparator
test that size comparator works
test that the comparison of weight
test method for
test method for net
test method for org
calculates the estimated time for a given ngram
estimate the log weight for the given
recursively adjust the weights for the training
gets the feature for the given data id
get the bump prior mdl of the current size
returns the intersecting class of the given classes
returns the log likelihood value as the current log likelihood
returns the id of this node
a simple comparator for landing sites
adds a value to the feature
set the value of a feature
calculate the probability of an ngram
performs the mapping
get the initial message
connects to the server and starts a new game
this is not usefull
the method that receives a message and processes it
execute receiver rec
sets whether the team is on the east side
sends a dash command to the server
kicks a specified power in the given direction
moves the selected command
say something to the command
this method is called when the user changes the active state
sends a command to the server to sense this agent
turns the robot by a given angle
turns the neck by a specified angle
sets a catch command for catching a ball
changes the view mode of the current command
returns whether or not this action is being initiated
this method is executed bye when user selects bye
checks if team is east side
logs an error message
changes the value of the field to serialized
returns a string that represents the state of this object
returns the point
setter for property point
set the distance value
sets the command to be executed
determines if this action should be stepping
executes an hear command
sends a command to the server to sense this agent
inits a command
gets the distance change
writes an error message to the console immediately
sets the distance change
returns the direction change
set the direction changed
this method will return the speed point of the mobile object
returns a string representation of this object
perform one step of the command
called when the algorithm is stopped
sets the goalie flag
gets the my team attribute of the game object
sets the my team
returns the uniform number of this token
sets the uniform number of this distribution
gets the body direction
sets the body direction
returns the head direction
sets the head direction of the cone
sets the seen ball
checks if two field players are equal
called when the thread is about to be suspended
returns the seen ball
this method should be overridden by subclasses to change the transient state of
constructor which takes a world
sets the ball field
returns the first ball of the ball list
this method should be overridden by subclasses to change the value of
init the world
sets the go to pos action
sets the ball list
sets the go to ball action
executes the action on the given variable
gets the ball list
called when a goal is failed
sets the team list
checks if the player has a goalie
returns true if the ball is in the same state as the bean
updates the worlds fields
returns the team list
called when a goal has been successfully completed
sets the opponent list
shows the given action name
center the opponent in the current round
test action with given id
return the list of robo cups
performs a method testing the current team
sets the value for the power of dash
performs a depth first search of the target field
starts the client
method to remove a player from the ball
sets the list of unknown words
sets the kick power
calculates the best position for goalie
return the list of unknown words
sets the team name
sets the kick angle value
turn the neck
sets the seen line list
shows the method name in the current method field
sets the port number of the server
return the seen line list
show the logging message
gets the target field point
sets the seen flag list
sets the action name
set the object
get the object of the mobile
return the seen flag list
called by the execute method
kicks the player to the given direction
sets the checks if is goaly
executes the ball
sets the target
sets the absolute position field point
execute the command
sets the center state
returns the absolute position of the field
set the absolute angle of the vector
returns the absolute angle
set the approximated angle
get the approx angle of the screen
set the x coordinate
sets the y coordinate
checks if is my team
sets the my team value
sets the number of this node
returns the px
sets the px
gets the py value for this get uvby id response
set the py value
code that will be run before the info is processed
calculate the absolute position of the given line
the controller is informed that any object is in sight
dashes the ball with a certain power
the controller is informed that any way are in sight
the controller is informed that any object is in sight
the controller is informed that any object is in sight
the controller is informed that any object is in sight
description of the method
the controller is informed that any object is in sight
the controller is informed that any object is in sight
update the list of lines and flags
say something to the player
the controller is informed that any object is in sight
sets the player sense body to true
turns the neck by a specified angle
catch the ball
changes the players view mode
updates the field opponents
sets the error code
sets the args
validates the schedule
register a bean comparator class for a given property
register a bean comparator for a given bean property
returns the start date of the schedule
returns the last date of the schedule
returns the start date in milliseconds from the given schedule
returns the time when this task will end in milliseconds
set the configuration name
bean factory bean
takes a single string as an argument and returns an encrypted version
takes a encrypted string as an argument decrypts and returns the
execute a command and return the result
execute command in java process
fetches the command line
to view help page
return submit job
submit the job to the job manager
return the html page for the given exception
returns the writer used to write the response
this method returns the user name from the cookie
grab the user from the database based on the id passed in
all charts
set the data to be used for the list
get the begin index of the data
this function will return the index of the last page
assert that the given indexed property change event is not equal to one
assert that a property change event is set add event
assert that a set remove event for a specific property equals the old
asserts that a map put event contains a new element
asserts that a map set event has been fired
asserts that a map remove event has been fired
sets the state of this task
sets an error message to be displayed with this dialog
set the error
set the error and update the panel
set the value of the message property
determines if the dialog should be disposed
gets the value of the get priority property
stops the game
returns the root edit
called when the player passed a succession
returns the previous edit in the list that would be an ancestor
returns the next edit in the chain
return a string representation of the deep
internal interface for changing the view
a listener interface for managing the life of the application
an interface for manapool listener classes which implement
an interface for changing the internal prior
interface implemented by objects which are interested in
an internal interface for moving card events
an interface for making a listener on a change in the internal step
an interface for returning the timestamp from the
a listener that is used to visualize the draw
advances the code phase code to the next phase in the code turn code
advances the game to the next turn
for serialization purposes always resolve a de serialized object
starts the server
p open deck
open the deck in the pool
opens a deck with a pool of cards
opens a deck using the specified collection of printing pool objects
remove the object from the list of disposable objects
creates a card panel for a characteristic object
add a card to the list of cards
remove a card from the panel
shows the specified card
removes a card from the panel
compiles all compiled files
loads the template from disk
this class implements the logger factory interface
gets sets the timestamp attribute of the date field object
update the timestamp with the next timestamp
gets the current timestamp
sets the ammount of this item
returns true if the given code action code is a legal action
getter of the template of the card
start a new card parts
method get part
returns the parse context
applies the predicate to the object
get the line of the key
get the magic object that is being edited
checks if this object is a legal object
method is legal state
returns the play action
returns the effect of the given event
p resolve the cost
returns the amount of this money object
returns the amount of change
applies the operation to the given element
returns the player who is affected by this event
returns the value of the literal node
sets the literal value
read the file
reads the given reader
reads the configuration file and creates a new instance of the
starts the configuration
creates a job from a source search and a destination search object
returns the sql select count count
get the number of rows in the result set
creates an sql query
flush the cache
returns true if the given file is accepted by this filter
gets the description attribute of the file filter object
initiate the dl engine
shows the jmxinfo panel
classifies the current taxonomy
switches to the inference panel
computes all the individual types directly
sets up the jes algernon controller
method executed after the creation of a nmea line
method called after load from dbford
method called after show edu stanford smi protege
this method is called before the line is closed
method called before hide instance
this method is called prior to saving the pmiford
called after saving a project
appends the specified string to the output
appends a line to the output
append a string to the output
test the getting of a list of connected jecl
called when a message from the server is received
returns the panel containing the control panel
clears the textpane
append a string to the output
add the macros to the input map
does the query
attach un swing algernon to current kb
loads the rules from a file
creates a new individual with the given owl class name
todo missing method documentation
todo missing method documentation
todo missing method documentation
clears the rules and queries
returns true if processor is busy false otherwise
fire a fire command
adds a new individual to the ontology
run the mbean server
constructs a clause for the given resource name and value
this will register the mbeans in the mbean server
returns a string containing the error messages for the algorithm
connect to the definition mbean server
connect to the server
disconnect from server
check if the board is still alive
register a protege proxy for the current project
call the proxy and check for the correct answer
removes an individual with the given name and owl class
disposes of the operating system resources associated with the receiver
set the server url
unregister a protege mbean
this method performs an internal shutdown operation on this
adds a disjoint class to the list of disjoint classes and returns
get the jmxconnector server
get the mbean server
returns the protege proxy
adds a model notifier to the list of model parts and to the
called when the plugin is being disposed
add a property value listener to an individual
add a model listener to the proxy
creates a new notifier
this method handles the notification
adds a new subclass to the group
adds a superclass to the group
adds a given individual and a group of multi valued properties to the
adds a single xsd type and value to the multi datatype property
adds a single
adds an individual with a type that has been written to the
clear the pane
some rules that could not be frozen at some stage
get the name of the individual
append a line to the document
counts the number of newlines in the given string
some inference graphs with non external external definitions are not ordered
write a single character
write the byte array to the output stream
write a portion of an array of bytes
returns the text in the textpane
some algeries are loaded here
remove event listener removes a event listener from the event listener vector
notifies all listeners of an event
sets the request code of the message
returns the request code
sets the object that was passed to the constructor
returns the object of the exception
finds a property by name
tests whether the machine is alive and promotions
returns whether the result should be in a single classified
clears the first value of a single property of an individual
tests if the given individual and value is in the set
creates a class with a given name and returns whether it was
creates a new individual for an owl class and returns the result
creates a new individual with the given name and
deletes a class with the given name from the list of classes and
fills the given object property with the given name in the
gives the name of a class which has the same prefix and
returns the current number of milliseconds in the
returns the name of this group in a single string optionally with
gives the name of a single individual for which this node is a
gets the value of a property of an individual with
returns the state of this node in the tree
returns whether the node is a heartbeat it should be written out
describe code notify message code method here
removes all individuals of a given class type
removes all the values of a particular property and all of its
removes a disjoint class with the given name from the list
removes equivalent class with given name of class and returns whether it
removes a single individual and returns whether it has been added
adds the given value to the specified multi datatype property
removes an individual with a given name from the given property value
removes a single individual from the type inference graph
add a new individual property to a multi datatype property
removes a model notifier from the model and makes it non stale
removes a single object property with the given name from the list
removes a single property with the given name from the
removes a single value notifier
adds a individual with a name to the to add to multi object
removes a superclass from the type
rename the given class in
rename an individual of the same type
save the last project only
checks if the owl individual with the given name and value already exists
sets the name of a group of external information
sets the function to get the boolean value of a given property and
shows the console
fill a individual property
this will create a new instance of the remote service
description of the method
description of the method
method get rdfsdatatype by name
description of the method
initializes the client for this server
get the name of the class
sets the client to a particular port and opens a separate stream
initializes the client and starts the client
get the owl class with the given name
disconnects the client from the server and cleans up the
this method is called when a message is received from the remote host
checks if the given class is a valid class for this object
this method is called when a message from the server is received
get the value of a property of the individual
creates a new class in the current ontology
removes the given class from the list of classes
rename the given class
rename an individual
remove a property from the current owl class
set the property function functional or non functional
clears a specific property of the individual
returns the rdfsdatatype of the datatype defined by xsd type
returns true if the algorithm is algered on non load rules
load rules from a file
proxy method for
classifies the current taxonomy
adds a property change listener to the individual
removes a property value notifier
adds a model notifier
removes a model notifier
saves the main project
saves the project
method to refresh the knowledge base
returns the current time in milliseconds
returns true if the class is alive
returns true if this heartbeat has been received
sends a notification message to the user with the given data
checks if the given string contains no spaces
prepares the string name
handles the errors
sets up the knowledge base for the main project
getter for knowledgebase
opens the project
disposes of all resources associated with a particular
code set roughness code sets the roughness of this color
sets the number of iterations the task should perform
sets the minimum allowed delta value
sets the maximum allowed delta value
returns true if the device supports texture3 d
set the flight bean
sets the journey
returns the confirmation number
sets the confirmation number
sets the boarding point value for this place information cls
sets the date of journey value for this company type
gets the num seats booked
sets the num seats booked
sets the reservation details value for this product info
sets the ticket issue date value for this defect
sets the traveller
sets the destination value for this job ticket
returns the flight id
gets the zip
sets the flight id
sets the zip
sets the flight number value for this get flights
setter for property hire date
sets the intermediate value for this job ticket
sets the work description value for this job ticket
sets the intermediate arrival time value for this job info
sets the intermediate departure time value for this job ticket
gets the number of available seats on this server
sets the number of available seats on the map
sets the pilot name value for this wsyetki kullanici
set the endpoint address for the specified port name
gets the value of the ticket price property
sets the ticket price
sets the time of flight value for this quote data
returns the default alarm
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes text field nombre
this method initializes button cancelar
this method initializes panel siguiente ant
this method initializes j content pane
this method initializes panel superior
this method initializes panel inferior
this method initializes button ok
this method initializes combo box imagenes
this method initializes text field name
this method initializes text field nombre
this method initializes progress bar calibracion
this method initializes progress bar temporizador
this method initializes button nuevo
this method initializes panel posicion
this method initializes combo box right
this method initializes desconecta
this method initializes combo box centre
this method initializes combo box left
this method initializes button ok
this method initializes button cancel
this method initializes conector button
this method initializes this
this method initializes salir button
this method initializes progress bar valor xactualizado
this method initializes menu bar principal
this method initializes button guardar
this method initializes menu archivo
this method initializes button wizard
this method initializes menu administracion
this method initializes menu item admin resorces
this method initializes this
this method initializes contenedor
getter for property n cumulative
returns true if the given plugin descriptor is already loaded
load the extension
returns the current session
reads a integer
returns the connection
reads a string
returns the torrent table controller object
returns the client that will be used to communicate with the xml rpc
stops the connection and sends the session state listeners
returns a download client for xml rpc proxy
starts the session
returns a global instance of xml rpc proxy
shuts down the connection
creates new peer connection
returns the xml rpc proxy file
notifies all registered session state listeners
returns a tracker which will provide us with this service
add a session state listener
return the container for the relationship element
creates figure for this edit part
creates figure for this edit part
creates figure for this edit part
creates figure for this edit part
creates figure for this edit part
creates figure for this edit part
creates figure for this edit part
constructs a new instance of grid layout data
constructs a new instance of grid layout data according to the
constructs a new instance of grid layout data according to the parameters
constructs a new instance of grid layout data according to the parameters
constructs a new instance of grid layout data according to the parameters
appends the display value of the given slot
creates a parser for the given role
pastes the clipboard contents into the system clipboard
applies all the highlighters to the components
sets the view selection model
sets the background color for odd rows
sets the background color for even rows
sets the code searchable code property
computes the selected background color
returns the property change listener to use
computes the selected foreground color
refreshes the pattern matchers in the model
the find method
closes the dialog
sets the image to be displayed
tries to find a string value from the uimanager prefixing the
set the mode for saving
sets the username in the name field
returns the entered username
configure the shared find bar
sets the filter pipeline for filtering table rows maybe null
set the callback class name
cancel authentication for the user
returns a new thread that will be notified of the login process
authenticate a user
returns the password for a given user in the given server
deletes a password entry in the key store
pack selected columns
invoked when the table model changes
this method updates the view size based on the current row size
sets the filter pipeline for filtering table rows maybe null
returns a new instance of the default renderer of the specified class
encrypts the given string
decrypts the given string
returns the xaresource object
pre invoke marks the connection as active
this method should always throw if called for a prepared statement or
get the reference
this method causes the pooled connection to be closed and to close
this method sets the database driver class name
propagates the connection event to all registered listeners
returns the physical connection object
this method will always throw a sqlexception
set the datasource name
set the transaction isolation level
returns the transaction isolation level
returns theads data source
creates a new pooled connection using the default user password and
sets the data source forads
return the size of the prepared statement cache
defines the size of the prepared statement cache
creates a code prepared statement code object for sending
gets an xaconnection from the pool
clean up the prepared statement and sql statements
this function is called after the database has been closed
pre invoke marks the statement as a part of an invoke
this method is called to prepare for processing a transaction
creates a code prepared statement code object for sending
indicates that the connection has occurred
forget all connections associated with this transaction
handle a connection closed event
close the pooled connection for the given object and remove it from the
throws an unsupported operation exception
set the current transaction timeout in seconds
this method checks that the given object is still valid
performs a test on the given object
creates a default code prepared statement code object capable
gets a new xaconnection for this data source
creates a new xaconnection for this database using the specified user and
creates an idb xadata source object instance
the method returns the number of transactions that have been used to store
creates a new instance of idb xaconnection
this method is called to start a transaction on a resource manager
prepares the state for a transaction
creates a callable statement object for calling
returns a new xaconnection from the pool
creates a new xaconnection and returns it
returns a new pooled connection using the default user password
returns a pooled connection using the specified user and password
stop the data source
sets a link to be returned in the request
sets the log writer for this data source
enable disable debugging
puts an object into the cache
resize the cache to a new size
this method is called before an object is removed from the pool
checks for invalid level code level
set the minimum size of the pool
set the life time of the jvm
set the sleep time between two workers
sets the gc flag
checks or unchecks a level object
setter for jdbc test stmt
set the generation of this pool
sets the maximum time in milliseconds that the pool will wait when there
shuts down the service
used to retrieve a new xaconnection
get xaconnection and count the connection count
get a new pooled connection
get a new pooled connection
creates a new oracle xaconnection object with the given parameters
creates a new oracle xaconnection for this database using the
retrieves an oracle object instance
sets the identifier value for this coordination context type
sets the expires value for this time period
sets the registration service value for this registration type
sets the participant matchcode value for this defect
sets the participant matchcode value for this participant type
sets the status value for this response type
sets the result state value for this get status response type
stop the pool
sets the protocol value for this endpoint reference type
sets the participant protocol service value for this registration data
gets the addressing headers
sets the current context value for this create coordination context type
sets the coordinator protocol service value for this registration data
sets the coordination context value for this create coordination context response type
returns the number of objects locked by this lock
gets the local services url
returns the url of kandula services
set the endpoint address for the specified port name
returns the number of unlocked objects
sets the address value for this endpoint reference type
sets the reference properties value for this base properties type
sets the reference parameters value for this order type
sets the service name value for this party type
sets the outcome value for this person
sets the vote value for this order item info
setter for the thread factory used by this datasource
sets the identifier value for this add note data
sets the expires value for this add project
remove an object from the pool
sets the current context value for this coordination context type
sets the coordination context value for this create coordination context response type
remove an object from the pool
sets the state value for this creative
sets the logger
set the endpoint address for the specified port name
set the endpoint address for the specified port name
sends the participant to the new pc br
returns a new context for a new participant match
this will return the remote demo service
handles the incoming message
gets the participant that is involved in the correlated project
returns the map of states
completes the operation of this service
closes the connection with the given notification type parameters
cancels the operation
sends a compensate notification to the remote agent
notification of a faulted operation
returns the other states of the state machine
notification from the remote peer that the client has exited the
this method gets the status of the current message
sends the status message to the status handler
translates a state name to a qname
this method throws an
returns the state transition corresponding to the message
this method throws an wrong method call exception since this is not
gets the value of message to resend
if this state is not resending then return the previous state
returns the previous state
translates a state from one state to another
get the name of the current state
get the result type
get the name of the current state
returns the name of the last state
send a cancel message to the server
returns the name of the second state
send a message to the server and close the connection
throws an wrong method call exception
reverts the current state
the servicemodel protocol identifier
p returns the participant proxy
returns the protocol type all protocols
returns the id of this object
tells the agent the current state of the state machine
returns the coordination context with result code
gets the name of the protocol type
send a message to the server that this player has completed
send a message to the server
checks if this state transition is possible for the given message
returns theatomic outcome object that this instance is associated with
sets result to be decided and closes this outcome
decided this outcome
send a compensate message to the server
returns true if the result is decided
returns true if the result set was decided to close this question
this method is called when a fault is encountered
create a duplicate fault
returns the name of the outcome decision of the usecase
returns the other states that are not in the automaton
returns the qname of the outcome of the current call
tell the agent the faulted message
called by the manager to notify this listener that the timeout has
returns whether the specified match code is available
this method expects to be overridden by subclasses
sends an exit signal to the server
translates a state name to a participant view
handle incoming message
registers the match code in this participant
returns the id of the participant
handle incoming message
translates the given state and returns the qname for the given
handle incoming message
set the endpoint address for the specified port name
on fault name code
returns the endpoint reference associated with this
set the endpoint address for the specified port name
handles the incoming message by sending it to the participant
handles the incoming message
this method is not supported
handles the incoming message by sending it to the state machine
gets the outcome type
returns true if the given participant is in this group
tells the agent that the state changed
gets the value of matchcode
returns the participant that matches the given match code
gets the name of the state the result is in
verifies the initiator and request originates the session
this callback method will be called just before the execution of the
deletes schedule record from the database
fires a completion event
create the component designer
creates the component
create a pop up with an empty popup array
create a new pop up with the specific menu items
create a pop up with a single item
clears this token
adds the given url to the request header
return true if this button should be visible
renders the tool bar components
returns the radio group
sets the radio group
gets the down img
gets the up img
set the down image property
returns the tooltip for this application
set the up image
returns whether this is a global button id
sets whether this button id should be generated globally
checks if the required locale is set
creates a new component
returns the code component code associated with this
renders the request and returns the result as xml document
reverts the current form
initializes the applet
destroy the session
destroy the object in the session
set the form component
collects the bookmarkable state information for the current session
returns the current state of the bookmark
restores the state of the session
set the current state of the bookmark
restores the state of the given attribute
returns true if the xsl cache is used
create a new log handler for the specified log directory
getter for log conf
returns the xsl document uri
sets the log conf
returns the log version
returns the name of the log file
sets the log file
sets the uri of the next view to display
gets the root logger level
create the log form component
if xsl cache is set then the xml is returned
revert to previous state
sets the xsl uri
add a configuration to the log
returns the label for the given configuration
starts the rendering of the page
loads default configuration file
gets the order significant value for this search order
sets the order significant
stops rendering of this component
sets the empty allowed
returns the model of the category
sets the model of this component
returns the change category button element name
sets the log file
returns the root of the logger
renders the category
sets the categories
returns the name of the root element
sets the category renderer
setter for property change category button element name
sets the item renderer
set the name of the root element
find the correct tree handler for the given form component
invoked when the panel has changed
reverts any changes made to this request to the underlying request
formats an object using the user pattern
adds a new handler for a format
sets the current panel
gets the handler for the specified type
formats an object using the user pattern
parses a string using the given user pattern
finds the correct handler for the given value
adds a new pattern to the pattern list
find the pattern for the given user pattern
sets the on click event handler
called when the page is applied
cancel button action
returns the table component
sets the code table model code used by this code table code
sets the entries
sets the selection model
sets the selection model
sets whether or not this model is optimization by default
sets whether the root node should be optimized or not
gets the value of the has always children property
sets the value of has always children
returns the selection model used by the associated ribbon band
set the column sortable status
returns the name of the element that contains the node
sets the name of the node element
returns the subtree of the tree
set the decoree value
set the visible nodes
sets the visible
gets the filter that determines which nodes are deletable
sets the filter for which nodes are deletable
setter for pageable property
returns whether to enable the change order
sets the code tree model code that will provide the data
sets the enable change order
getter for property pageable
returns the nth page from the top of the stack without removing it
set the column index used for sorting the table
adds a listener for the given request
removes a request listener from the given key
find all the request listeners for the current request
a convenience method that finds all listeners matching the parameters
returns the expr context
sets the expression context
invalidates the current instance stack
sets whether the response is complete
finds a bean from the request session or session context
this is used to determine whether the authenticated user is included
returns mapped role
sets the locale
set the locale for the request
expands the selected node
expands or collapses all the nodes under the currently selected node
select all the roots which are visible
returns a generator
generates the sql for the given expression
sets whether this window can be closed by the user
adds all session parameters to a given collection
generates the sql for the given expression
removes all session parameters from the passed memento
returns the column map
returns the name of the tree element
sets the column map
returns mdx value
returns the sql value map
set the mdx value
return the value of the sql expression evaluated by this
sets the sql value for this column
sets the renderer that is used to paint code nodes code
sets the display value
creates the sql generator
sets the tree element name
sets a change order model to the current order
create the component
sets the render id
create the component
sets the xml uri
show the dialog and remove it from the request listener
reverts the bean to its original state
validates the request parameters
test the form button pressed method
given an element search the parent node of the handler
reverts to the previous list
this method is called when the revert button is pressed
sets the bean
returns the node handler with the given id
start rendering the component
set the error message of the code user code with the given id
stop rendering the image
clears all errors associated with this document
sets the selection model
returns the title provider
set the title provider
return true if item is selectable
sets the error message
returns the selectable filter
sets the filter to be applied to the query
restore button actions
creates the appropriate component for the current page
initializes the action references
returns the base display url
sets the base display url
returns the default hier
slicer is not restored by members
gets the number value from a cell
create a member set
gets the value of report title
getter for property set page width
sets whether to calculate the page width
gets the page width
returns the value of page orientation
the page orientation is used to override the default orientation
gets the paper type attribute of the paper details form object
sets the paper type
returns the set table width
set the value of children
sets the flag that controls whether or not the table width is set
getter for property chart page break
setter for property chart page break
gets the page height
returns the width of the symbol table
converts the pdf file into pdf file
sets the table width
creates the print component
get test axis
set axis to test
returns the child member
gets the parent member
sets the parent member
sets the root members
returns the sort mode
returns the top bottom count
sets the sort mode
sets the top bottom count
sets the sorting
check if an item is selectable
returns the level of children of this node
sets the level of children of this node
get the dimension with the given name
returns a list of positions for the given member
returns true if the hierarchy is visible
expands the current row
collapses the row 0
returns the slicer
set the slicer
calls hierarchy navigator
sets the axis selection
calls hierarchy navigator
convert to mdx string
set the hierarchy for this query
returns a mdx statement that represents this principal
return true if the given function name is the name of a function
called after parsing a olap query
returns the cube name without the leading brackets if there are any
sets the cube
returns true if the select none button should be displayed
sets the member children of a member
sets whether to show an empty button when no items are selected
set the slicer expression
collect parameters and parameter references
returns the number of members in the grouping
sets the grouping member count
returns a mdx statement that represents this object
adds a new formula with the given names and member properties
returns the expression
sets the expression to evaluate
returns a mdx statement that describes this dimension
returns true if the user is a member of this group
return the uniqe name for the brackets around each name
gets the first name
returns the last name of this class
returns a mdx statement that describes this variable
sets the o value object
create union of two arrays of exps
a braces around an expression set if possible
returns true if this member is available to be used
finds the quax with the specified dimension
returns a list of memories in which the group has hierarchy
expands a member
expands a member in the hierarchy
gets the mdx query
sets the mdx query
collapse a member
returns true if axes are swapped with the two axes
set axes swapped
sets the top bottom count
collapses the members in the hierarchy
sets the quax to sort
determines if the hierarchy ofax is allowed
return true if the member can drill down
return true if the query has a relationship to the given hier
drills down a member
drives down a member
navigate up one level
drills up the hierarchy
returns 1 if cell iswap
returns a string representation of the member
sets the sort column for data
resets the result set when a new model is changed
resets the result variable if there is a change in the model
returns the slicer axis
sets the levels
return a list of cells in this row
sets the positions
returns the formatted value
sets the formatted value
gets the overflow occured value for this archive locator
sets if the overflow is occured or not
returns the value of the cell
sets the value of the cell
set the caption of the measure
gets the value of the measure property
returns the caption of this measure
returns true if the event is a time event
set hierarchy for individual queries
sets the measure
get the index of the member
the method which handles the tree node
setter for property fraction digits
sets whether to use a grouping or a label
sets the formatted value
sets the maximum distance between the root of the tree
print the list of positions in the order they were added
sets the axes for this plot
sets the cells
sets the slicer for this axis
set the hierarchy for this property
return the cell formatter for the given property value
get the index of the first element in the l array
generates a url
creates the component for the given olap model
returns the config xml
sets the config xml
get the top decorator
decorates the given model with the current decoration mode
set the underlying olap model to decorate the supplied model
returns the delegate
implementation of generate url that integrates with jpivot wcf framework
deferred ctor called once by the creating tag
pretty print the axis
destroys the session
returns the index of the given dimension
notifies part builders that a new dom will be created
returns the table model that this cell is drill through
notifies part builders that a new dom will be created
returns whether the spans are hidden
returns true if this is a style specification
sets whether the spans are hidden
initialize the page
get the bookmark state
a recursive method that finds all children of an expression
returns whether the parent members should be displayed
returns the table model that this drill throughs to the given cell
sets whether the parent members should be shown
adds members to result array from right to left starting at offset
get the span builder
set the span builder for this instance
called after the model has been initialized
returns whether indenting is enabled for members
sets whether the member indentation should be applied to all member
gets the number of header spans
returns the current state of the code bookmark code
sets the state of this bookmark
returns the hierarchy header
return the number of members
sets the number of headers
sets the hierarchy header
sets the number of members
gets the span calculator
builds a table element from a span
builds the html element for a row span with a given number of
returns the current state of the bookmark
sets the current bookmark state
sets the sort mode
hierarchy span for this cell
gets the object that is displayed
sets the object to be displayed
return the current position of the cursor
returns true if the tri state option is set
returns the span for the given position and hierarchy index
returns true if the member can be expanded
returns the member
returns the hierarchy index
creates a new element with the given name
returns the index of the current position
sets the tri state
checks if this object is a member of the group
returns the number of hierarchy levels
returns true if the format is significant
returns the number of positions
appends an element to the given parent
returns true if the two spans are equal
get the configuration of the span
set the configuration for this span
returns true if the extension is a break hierarchy
sets the spans for this column
insert a child element
creates a cdata section
checks if the given property is in this package
does a variable exist in this scope
add direction for class
returns the direction for span or default if no span is set
returns the default direction
return a list of member property meta objects filtered by the filter
sets the default direction
return the set of member property meta objects associated with this
adds an extension to the list of extensions
returns a map of the extension types
returns the position header
sets the position header
removes a child from the node
returns whether the document is dirty
updates the visible properties in the extension
makes a deep copy of the receiver
returns a deep copy of this node and its descendants
walk through this subtree applying callback handler to all the children
walk through children of this node applying callback handler
destroy this code indexed element code
add an extension to the list of extensions
decorate the given model
sets the reference object
this is called after the model is initialized
get the top decorator
whether this cell can drill through the given cell
create a member expression list
gets the connect string attribute of the jdbc connection object
sets the connect string
returns the cell builder used to create this cell
ignored properties are always ignored
returns the column axis builder
increment the size of an array
sets the drill exes
set the member sets bean that holds the list of members for this
setter for property drill down list
returns the current corner builder
adds a member to this group
returns the mon query
sets the query for this monitor
returns the row axis builder
returns the mdx query that was used to create this thread
create the member set
find out if given member can be expanded
returns the slicer builder
find expand member in model
sets the cell builder
expands a member in the path
drill down can only be called if the member is not an drill
expose as a
returns a connection to the database
expose as a
gets the sort mode name
sets the row axis builder
sets the slicer builder
returns the number of dimensions
returns the row axis or null
returns the first column axis or null
returns the property config for this row axis
create a new member of the set
returns the member that matches the given object
returns whether this model has displaying any values
returns true if the member can drill down
return the dimension of the given member
sets the path members
returns true if the given property name should be accepted
returns the string value of the given key
p get string from resource bundle for specified key
p gets a string message from the resource bundle for the given key
p gets a string message from the resource bundle for the given key
returns the fixed locale
p gets a string message from the resource bundle for the given key
return a boolean associated to the given configuration key
returns the key set of the provider
returns the fun call at the given index
returns the home directory of the application
sets a string value for the given key
stores a boolean in the persistent store
sets the persistent integer value for the given key
sets the persistent long value for the given key
sets a persistent double value
sets the connection string
flushes the persistent store
dump the contents of the current provider to the given dump
returns a list of all providers
set the connection properties
create fun call
sets the mdx query
recursively finds the root cause of the given exception
checks if a member is a descendant of another member
add a dimension to this mondrian
check if a member is a descendant of another member
add hierarchy to hashtable
add a level to this mondrian
add a member to this group
remove a member from the group
lookup a dimension by unique name
returns a hierarchy with the given unique name
the implementation checks for the correctness of a node
look up a previously registered level by unique name
returns the mdx that was used to create this query
format member name
returns the mdx query
p destroy the vpdmf system model p
sets the mdx that should be used for the current version
gets the connect string
get the current state of the bookmark
a method that handles writing the tree
adds nodes to the given set of lists
get the intensional bookmark state
create a memento for this class
create a list of measures for the given axis
callback when a node is expanded
called when a node is expanded
removes all members of the given list of function calls that are
called by pastry when a node has been processed
returns the connection pooling flag
sets the connection pooling flag
gets the external data source
sets the external data source
gets the dyn locale
sets the dyn locale field of the global site
gets the value of data source change listener
sets the data source change listener attribute of the main frame object
clean up the list
the method code handle code handles the position of a
returns whether member names are the same
removes the logical name from the list
checks if an expression member is in the fun call
resets the generation mode to generate a new expression
returns true if the member is allowed to navigate in the current direction
check if it is possible to navigate to another dimension
create a union of two sets
sets the username to be used for authentication
sets the password for this
returns the base hostname and port
create a urlconnection object and return a url to the base
to set the volume of the player
indicates whether the standby state is displayed during the loading of the object
sets the standby status
returns the mute state
sets the mute state of this track
get the vlc url used to locate the vlc template
this method sets the vlc url
return the update delay in milliseconds
sets the update delay of the physics node
returns the program name
to set the program name
get the name of the next program
to set the next program name
returns the program start time
sets the program start time
returns the next program start time
sets the next service start time
returns true if this dolby transaction is a dolby transaction
to set the current dolby state
returns true if the session is in recording mode
set the recording flag
gets the value of the service reference property
to set the service reference
returns the name of the service
to set the service name
returns the reference attribute of the ejbmethod descriptor object
sets the reference of this file
bref gets the value of this field
the bref to set
set the name of the service
returns the jsonobject that holds the data
set the service reference
sets the date
gets the value of the duration property
gets the value of the genre category property
returns the v pid
sets the genre category
returns the start
sets the start
gets the value of the details property
set the v pid
sets the details
returns the apid
sets the apid
informs the location of the t pid
sets the service name
sets the service reference
sets the t pid
get the unique id of the tsid
sets the channels
set the tsid
get the id of the on
sets the ref
set the node id
get the session id
sets the id
returns the pmt
set the pmt
gets the value of the video format property
sets the video format
get the supported crypt systems supported by this system
setter for property supported crypt systems
get the used crypt systems
set the used crypt systems
get the satellite name
set the satellite name
gets the value of the frequency property
sets the frequency
gets the value of the symbol rate property
sets the symbol rate
returns the polarisation
sets the polarisation
returns the inversion
setter for property inversion
returns the fec
send service name changed event
sets the fec
send a service reference changed event to all registered listeners
returns the signal to noise ratio
set the signal to noise ratio
send a dolby changed event
returns the agc
setter for property agc
send a recording changed event status to all dreambox listeners
gets the value of the ber property
sets the ber of the agent
send a standby changed event status to all registered dreambox listeners
get the lock of the item
set the lock
send a mute changed event to all dreambox listeners
returns the sync
sets the sync
send the next program start time changed event to all dreambox listeners
modulation getter
modulation setter
send a program start time changed event to all dreambox listeners
gets the value of the bandwidth property
send a program name changed event to all dreambox listeners
set the bandwidth
get the constellation
send a program name changed event to all dreambox listeners
setter for property constellation
gets the value of the guard interval property
send an update delay changed event
sets the guard interval
returns the name of the transmission
send a dlcurlchanged event to all dreambox listeners
sets the type of message to send
send a volume changed event
gets the value of the coderatelp property
sets the coderatelp
returns the coderatehp
mutator method for x coderatehp
stops the thread
returns the hierarchyinfo
sets the hierarchyinfo
gets the value of the pcr pid property
sets the pcr pid
get the stream width
set the stream width
getter for property stream height
sets the volume using a constant
setter for property stream height
gets the volume
execute a command
sends a message to the client
create a urlconnection object that represents the location
returns the url for the vlc file
returns the current status of the stream
gets the status of the url
returns the current service epg to be used
gets the stream info object
add a new dreambox listener
check the connection to the server
checks if the client is connected
starts connection to the server
at startup create and show the main frame of the application
traverses the tree printing out the contents of the attachment
returns an initiliazed instance of form component
returns an initiliazed instance of string item component
returns an empty string
get the value of galaxy
creates a swgresource tuple from a dom node
getter for property planet
starts automatic updating of the frame
returns the hashed user password for the specified account
called by the galaxy that the user wants to auto update
set the galaxy
action for the close swg frame
returns the user id of this user
starts the galaxy timer
called when a galaxy is selected
add a save button to the frame
action when the user selects the time zone
create a login child element
set the enabled status of the server unlock server data
returns the swg image album
retrieve a swgstation station for a given station name
add a station to the set of stations of the station
focusses the frame
returns true if the given station exists in the database false otherwise
returns the url of the base of the application
this method removes a stations representation of the given station
this is the swg file so that the client can write its
gets an encrypted text from the option panel
set the directory to output generated class
returns the resource path for the current swgcraft
return current configuration of the web server
this will return the path of the soap request header
returns the name of the linear expression
returns the name of the field
returns the path to the status file
sets the url for the soap endpoint of the web application server
force the server to be initialized
returns the name of this species
gets the mail box
returns a string containing the notes for this event
returns description of the filter
returns the file that contains the universe
returns the swgprofession
make a panel row for a label
returns a short description of this task
sets the note for the result
make the server first row
resolves the object after deserialization
this will add a character to the set of swgcharacter
sets the description of the task
sets the short description
indicates if the swg file exists
returns the universe
return my custom settings
make server panel
tells whether this character can be likely because of a wg file
this method should be called only from the cache
make a second row to the server
returns the swgstation station used for this transport
return the path to the swg in the galaxy server
populate the questionmark xml file with abilities of the questionmark xml file
path to the directory where swg files are stored
throw the exception
populates the modifiers
reads the content of the file
returns true if the given profession is equal to this profession
this method returns the id of the swgcraft
return the name of the current synthesis entity
gets the short name of this trader
creates a panel with the time zone information
get the conversion ratio of this object
returns description of this filter
adds a new tab to the writer
indicates if the path exists
backup the content of a file to the new location
add the specified galaxy
return sw gauctioner data from this auction
remove a swggalaxy
returns the body text of the body
returns the date of the message
returns the content
show help dialog
write a login date to the swgstation
returns true if the given file is equal to this file
repopulate the text in the output area
adds given mail message to the list
returns the list of macros for this command
returns the from part of the message
looks for swgnotes in the given file and returns it
gets the swgmail box
returns the string from which the message came
adds a note to the list of notes
erase the content of the file
this method must be implemented to perform instance substitution during
gets message at index
resolve galaxies by removing all galaxies and creating new ones
returns the path to the swg files
returns a file object representing the content
path to the universe
returns the owner of this character
standard method call made to objects after they are deserialized
perform instance substitution during serialization
remove the mail at the given index in this list
removes swgmail message from list
saves the file to the target
sets the name of the preference
return the number of mails in this collection
returns the subject of the message
returns the date of this
color for items in the list
returns the location of the tag in the parsed xml
gets the mail id
searches the content for a specified line
writes the object to the file
returns the other string
returns the current mail
get the parent directory of this directory
returns the swgplanet that is used to calculate the planet position
price of this product
checks if all mails are contained in the given folder
this method is called during deserialization and is
performs a canonical processing
swgresource interface implementation
makes the list of midlet messages
process an exit folder event
sets the text of the note
copies the file to the target
removes all non z encoded characters from a string
returns true if the given file is equal to this file
return the image that the button was pressed or
returns the path to the album
scales the image to the given size
return a scaled version of the image
returns the type of the image
returns the swg image that is the sub album image
called when this component gains the focus
remove all data files the filter field and the record is
this method ensures that serialization returns the unique instances
looks for folder with given name in this group
copy a file
refreshes the list of swg images in the given directory
this method initializes j menu item
delete all obsolete swga files
custom serialization is needed
creates a new swgmail folder with the given name in the list
copy files to the given target directory
returns the swg image album
deletes a folder with the given name
this method is called when the user changes the focus
write documents to the output file
swgmail pane connection
write the given strings to the output stream
this creates a swgroot object populated with a swgroot object
returns a string containing all of the notes
sets the users notes
sets the main pane to the default
shows the use of the aliases in the right component
resolve the singleton
show the macros swgmacros pane
shows the mail server
check if a new update exists
shows the notes pane
returns the path to swg aide
checks whether this frame is the same as the one from the swg
tree mouse clicked
tree space typed
creates the directory path if it does not exist
unhide all hidden nodes
copies the swgaide class information to the given file
save the current information files
resets the user interface and resets the resource galaxy
gets the notes
get the imported resource
accept filter checks the given resource and returns true if the
tells whether the given resource passes the filter
weighted the given resource
helper method that is called when the activation of the entity is activated
load notes and enable user actions
returns true if the guard is weighted
tells whether the given code g code contains any swg weights
returns the guards logic
returns the modifier for the energy
the guard for the transition
returns the values of the logic block
resets harvester to deed state
logic to deal with the secondary part of the game
returns the current maint modifier
returns the notes for this element
adds a note to the list of notes
return the class of the resource
set the rc value
returns the storage modifier for this algorithm
sets the name of this node
return the current threshold value for this
closes the dialog
sets the threshold for the code timer code
remains the time remains in the given interval
enable disable the global global lookup fields
perform the submit button
when a resource class is selected this method is invoked
cleans all fields
create a new guard
edit the current guard
returns all of the values currently guarded
called every time the threshold of the list is updated
get the galaxy
in addition to the standard write notes button
returns true if the dialog result is ok
returns selected swgresource class from the list
make labels and the text
returns the resource name of the selected resource
creates the blacklist to be able to search for resource class
edits the applied resource
make a row of values
called when a resource class name is selected
edit the selected resource
make and return the north direction vector for the current gazetteer
edit the input fields and the current resource
resets the list of harvesters
called when a type is selected in the combo box
sets the various properties of the gui elements
make the ok and cancel buttons
enables or disables the submit and cancel buttons according to the
method to save harvester
find the class index of the first class that contains the
method to add assignee
returns swgnotes that are added to this station
make a textfield for the given string
get swgresource class from object
make text field label
find out which resource is known
find out what resource we know about
get the swgstation from the selected station
deletes all the entries
resets the gui to its initial state
returns the list selection model
checks if a swg resource is blacklisted or not
resets all the stat fields
delete the entry at the specified row
update the class list
is the class cl
method for handling the action of duplicate items
setups the gui elements for the edit wrapper
export notes to file
write stats fields to given resources content
stat fields editable for the given swgresource class
fill the fields with the values from the statistics
returns the component to be placed in the center of the
make the north component
make the age chooser
toggles to the active state and activates the swgharvester
todo missing method documentation
refreshes this and a power of active wire
make a button for clearing the table
make the button to be pushed down
import notes from file
save the owner and write the current owner
if mouse is pressed show popup menu
convert an integer to a string
create a label for an error
deletes the harvester on a given row
create a historical component
creates a jlabel with the given text and tool tip
if mouse is working a popup select the table
select the current resource
make a load button for showing the note file
get the selected row and update the display
selects the selected row in the table
create a guard for this command
import a file
deletes a row of this table and a delete controller
deletes the swgguard guard
make a submit button to allow the user to submit multi files
edit the selected swgguard
deletes all selected guards
this method is called when a guard in the list is selected
calculate and add the reminder time limit to the keeper
opens guards file open dialog
creates the single panel with the error label
if the mouse is over a popup trigger the guards button
creates a text field
check if a file is readycled since it requires it to be closed
make a write button on the gui
called by max age button
read statistics file
edit monitor notes
handle mouse events
creates and returns a new instance of the harvester dialog
writes the swginventory wrapper to the specified file
imports a file
method to import harvester
this returns null if no planet name available
import a single line into the harvester tab
action on resource class selection
resets the single submit button
show a color chooser button for selecting a color
import owner name
resets all input fields
resets all input fields
tell all of the code values code to update all the text
shows an error dialog with the given message
starts the import
validates and creates a single resource using the list of confices
method for handling the import done button
displays the name of the single resource in the dialog
returns the value for the current filter
creates the export menu item
get the first swg resource from the list or return null if it isnt found
fills the stats display with the games informations
tells if this map is changed since the last galaxy
parse a swgresource statistics object
submits the form before the user actions
creates the import menu item
called when the filter options have changed
creates and returns a combo box for selecting a assignee
apply the filter fields alignments to the current game order
filter the columns columns with their alignments
clears all input fields
callback for the submit done dialog
creates and returns a panel with the right button
checks if a list of guards has alerted
process a selection
make a button that clears the filter fields
sends a new swg fetches the status of the given resource
sends the old value to swgsoaplab service
create a editor for cell row and a table
submit a single item in the galaxy
create the panel for the top
creates a panel with the harvester warnings when specified
creates and returns the dialog owning this component
resets all the tables
write harvester info to the output writer
writes the default header to the specified zawl writer
check for notes
write owner info to wr
writes the notes to the notes file
create a combobox that contains all resources
returns the tooltip text for the guards table row
write the swg guards to the output file
make the filter field
adds the selected swg to the inventory
make the window title
create a jlabel to display in the north
add a menu item and a stock
sends a new swgmutable resource to the output panel
show the list of wrapper wraps
updates the parent panel if the parent is a swgmail resource
called to notify the user of an alarm
fills the given panel with the stat filter fields
display an alert with a message
checks whether or not the galaxy can be freed
handles reading of notes
do exit operation
launches a swginventory manager tab
creates a panel with all the necessary consider capabilities
revive a swg
check if the current harvesters are all
create a panel with the leading and excluding statistics
fonction to write the swg tab
helper method to check
add the inventory to the popup menu
adds a limit to the popup menu
add a revive to the popup menu
replace all occurences of 0 and 1 with a blank
adds a write menu item to the popup menu
bars are added to the swg logbar
write out the current notes to the galaxy
galaxy swgresource set tab
create the interior of the window
writes the given notes to the swginventory file
create a menu item with a tool tip and a action listener
write the notes header
write the details of the selected notes
resets the assignee combo box to empty
resets the panel to its original state
resizes the bottom panel to fit in one step
notes if any of the notes have been backuped
creates the notes backup menu item
focus gained helper
focus the galaxy
this method initializes copy menu item
sets focus to the panels
this method initializes j menu item
called when galaxy are updated
this method initializes j menu item
this method initializes j menu item
creates a copy menu item
changes the current font
action for save as
focus gained or not
action for saving notes
adds new notes to the main tab
this method hides the node that is currently visible
refreshes the main tab with swgnotes
this method initializes j menu item
resize the component in the table
creates undo menu item
searches for a node in this tree and returns it
sets the current focus node
called when node is hidden
this method initializes aliases pane
this method initializes macros pane
if delete is true then delete the selected note
this method initializes j menu item
this method initializes notes pane
shows a confirmation dialog
clear all information from the dialog
save character and time stamp
archives all the auction mails
formats the given names list into a string
this method initializes j menu item
compare two swgplanet availability
shows a warning dialog with ok cancel
focus gained
make the price panel
this method updates the price of the item
create a textfield for filtering
archive all auction mails in folder
show customer table
this method is called when this component gets the focus
this method initializes j menu item
make the tabbed pane containing all the customers and customer table
shows an error message
make the panel with various metrics
this method initializes j menu item
make the metrics view
make right pane
create the vendors panel
filter a string
update customer table
create a filter textfield
updates the items of the trade tab
updates the panel with the current table data
create a panel with the options button
returns the selected archive folders
get the number of days spanned by the current cell
converts a string to an integer
returns the number of items in this container
parses the integer
this will resize the component after the components have been added
returns the name of the price which is returned by
resize all filters in table
returns the total price of a single purchase amount
returns the sales sum of all products
this method is called when the user presses the abort button
this method initializes delete menu item
returns the start date for this user
create the top panel
action listener for saving the file
show a file chooser
creates a new universe
the album selection has changed
if the user clicks on an image popup menu item
if mouse is pressed popup the thumb popup
selects the thumb in the list
import multiple auctions from a file
switches off image display
lazily creates the page
enable disable the gui for image
remove the current frame from the progress bar
displays the image popup menu for the given mouse event
this method initializes import auction mails menu item
create a menu item for setting the properties of an image
publish the progress bar
resize the image menu item
creates an image save as menu item
scan for aliases in the given universe
make item map with the current sales tax
create guard menu item for creating a resource class
purchase mails from the auction
make the image canvas
checks for a set of cards for a given amount of tricks
checks for mails found in the table
make the south panel
checks if there are still stations in a employed table
makes the mapper for the current transaction vendor
sets the html page
makes the south file component
action for saving the notes to csv
reads the price map from a specified file in the current transaction
this method creates a jmenu item with the given disable coloring
reloads all the auction mails
shows a thumbnail popup dialog
this method initializes reload auction mails menu item
invoked when the action is completed
enables or disables all menu items based on the current state of the
write the entity
writes the swg header to the given
returns the textual representation of the date value
returns the text that is represented by the given string
write a submit notes file
adds a new exit callback object to the list of exit objects
call code enable planets code on any currently active planets
checks for a new directory
perform the exit operation
focus gained is called when the options menu item is selected
add a folder to the list of folder paths
update the stat bar
this method initializes j menu item
displays a confirmation dialog to the user with the given title and message
looks up swg tracks with given name
adds an edit menu item to the popup menu
adds a list of components to the menu
gets the swgstation from the user
remove the given menu item from the menu
removes the given menu components from the given list
populates any currently active planet that may be undone
removes all menu items from the menu
does the list of monitor alerted
called when a folder is selected in the folder list
returns the instance of the color chooser
this method initializes folder rename
returns the main tab of the application
called when the user has detected an tab
this method initializes options craft
returns a string representing the given time in seconds
returns the swgschematics manager for this project
change the mail body font
creates the edit menu
removes all the mail body from the pane
create a copy menu item
this method initializes j menu item
resets the current list and the current selection
function to create a panel with the depleted resources
method checks if a row is selected in the mail list
reset the guards list
make a panel containing the middle row
move selected mails to another folder
creates the menu bar
determine if a resource class is selected
creates the options menu and all its children
this method initializes mail save as menu item
initializes the progress bar
this method initializes mail search menu item
this method initializes swgpath dialog
creates the panel with the statless list and the list of statless
returns color stocked to harvested
initialize the dialog for the swg client
shows the popup menu for a user to assignee
initialize the list of paths to promote from a file
method that will make a submit button for unsoleted access unsciates
action called when a assignee is selected
checks for swg paths
called when the user selects the inventory swgschematic
inits the swgpath
called by the user when the notes field is edited
save notes to the current file
returns the tip text for this resource
adds swg lists to the swglist
populates the list of swg items with those that do not have fields
make a currently active upper row that will be active in the
add item to options menu
this function is called when the user clicks on the slider
remove the menu item from the popup menu of this button
show the options swgcraft gui
called when a schematic is selected
this method initializes options menu item
update the selected guards
update the monitors
create the options menu
return true is the notes file is overaged
returns the swgschematic wrapper of the selected row
create a tab that allows the options menu item
saves the new notes to the database
create the options menu
reads the notes file from the planning service
create the tab options item
put text to the statbar
create the tab options item
saves the changes
reads the time line of notes file
saves the list of all items in the given action listener
listener for the save as menu item
asks the registered listener to save the current document
create and return the help menu item
sets the image for the icon
shows a warning message
creates the find menu
shows the about dialog
creates the south panel with the mail body
this method initializes isdroid single menu
creates a menu item that adjusts the amount of resources to display
show swga files display
this method is called when the user selects the tab
makes and returns the panel that contains the north portion of the component
sets the swgcharacter to be used
timer for backup
creates the panel with the north center and north center
sets the enabled status of the mail gui
updates the folders list and the folders list
updates the node that is being launched before
write the swg notes into the tab file
erase the existing notes file
create a row with a upper left corner and filename
write the notes into the tab gracefully
creates the north west component
write the create blacklist resource file
resolves instances being deserialized to the predefined constants
creates a mail header to indicate the date of the file
sets the selected swgprofession in the list
opens the assignee dialog
add a list of elements to a target
helper that lets a user select swgschematic from a particuler circuit
helper function for selecting a schematic from the menu
check if a notes file is blacklisted or not
determines if the user clicked the supported schematic
notify listeners of changes
determines the actual type of a schematic
verify that no character is selected
adds a schem select menu to the popup menu
returns the html for the list of swg tools
shows a jpopup menu for the schem table
helper function to return string of the entered notes
write to file
determines the swgweights
handles the show assignee button
returns the swg packed values
creates a box for the center of the panel
notify all subscribers of the change
make the component centered
action for the select of a schematic
populate the list of depleted resources
if table selection is non null we change the selection to make
populate new resources list
make a label with the given text and tt
populates the statless list
makes and returns an north box for the panel
returns the rectangle of the cell at the given position
populate any currently active planets from the
creates a check box menu item that allows the user to select more schem
paints a cell in the table
prints an error message to swga m gui
creates a menu item with a folding menu item
resets the gui
create a menu item write the list of resource classes to the file
reset the object state
action for assignee define
handle the user choosing the assignee
invoked when a assignee is selected
create a component for the west
processes the mouse event for the favorite list
adjust the widths of the swing
send a swg one status response
determines if the specified schematic list is visible
adds the assignee to a swgschematic tab
create a checkbox that controls the north options great
shows a message dialog that the user will select both a defined
sends a new update list to the backend
make the center of the panel
spinner controls for the north
submits a swgsoap edit request to the global resource
create a checkbox that controls the configuration of the checkboxes
show a message to the user to report an error
makes the west weights component
make the interior of the panel
show the username password dialog
res class handler popup menu
action to filter the supported schematics
removes the selected assignee from a swgschematic tab
select all slots that are selected
action for the notes tab of the selected schematic wrapper
makes and returns a label with a minimum size
sets the location of the swga frame depending on the parameters
set the given resource to be processed
updat swgschematic
sets the fields of the fields to the fields of the supplied swgresource
update the label for all ewar components
creates the organics menu
update the data
updates color for expansions
set the list of classes to be displayed
update statistical text color
creates the border for the selected component
make the default url for swgaide
returns the url of the top element on the stack
sets the value of the node
updates the new list after a change in the new list
get the value of the first element of this list
the value of this node in the tree
returns the value of a cell
returns the value for the cell at row col
converts a value to a string
bypass fb filter
set the list of elements to display
returns the object at the specified index
returns the number of objects in this group
initiate the color limit
returns index in list model of wrapper
called when the user presses the mouse in the
notify all listeners that the tree has changed
get wrapper for the resource with the given name
this method clears the dialog and hides it
returns the typed text
returns a string that can be used to represent the value
helper method for code a constructor sqaures code
calculates the adj cap
calculate the adjacency matrix
adjust the statistics by adding the amount of time
adjust the width of a component
check if this resource has at least one stat swgresource
return the value of a given string as a stat
adds the given swgresource to the storage if it is not already present
adds all swg resources in collection to the storage
returns an element from the specified row
retrieves a swgresource by its id
find swg resource by name in the galaxy list
copies the given string to the system clipboard
looks up swgresource by name and type
returns the index of given swgresource in this list
displays the swg schem area
get swgresource set
sets the elements
get the specified writer
returns the number of bytes that have been read from the server
returns the available by
returns a sublist of the current list by given class
find swg identified by name in the galaxy map
converts the swgresource list to a swgresource list
get a swg resource from its class name
run statistics on the given values
set stats for a given swgresource statistics
returns one of the two identified swgres
returns the age of the computations
writes the objects data to the given stream
returns true if this resource is better than the resource passed in
checks if this item is harvested
whether this is a jtl reference
returns the maximal number of seconds from the last swgplanet
used to determine if the container is space or recycled
compares this object with the specified object for order
adds a category to the category list
returns true if this statistics contains all values of the given resource
adds swgschematic to the list of swgschematic objects
returns true if this component is spawnable
validate the given code value code in the collection of code swgweights
get the resource class
displays the draft swgschematic field
determines if the specified object is contained in the category items
sort the set of files
create a subset of the current set with the given names
creates a swgresource set based on a given swgplanet
this is a cover for code subset code
returns the number of items in this section
returns the rate of the sound in centimeters
returns the bounded weights
this is like
displays the swgschematic in swgschematic field
get a swgcategory by its id
special serialization method
return the category id
displays the amount of shopping
returns the name of the item
returns the type of this schematic
close this stream
returns the id of this schematic
get the horizontal x position
initializes swgschematics manager
writes a list to the swga file
writes a string to the swgaide
write the exc
writes an exc message to the log
reads bytes into a byte array
closes the bin
write a string and a new line
copy the swgaide content to another file
write an exc line with a carriage return
returns the next line of text
returns the current line in the input
initializes swgschematics
gets the version
returns the string in the current line
displays list of used used in swgschematic
get the exception text
get the next line number
closes the dialog and sets the selected color
returns the selected background color
returns the selected foreground color
appends a string to the string buffer
shows the dialog
append a character to the string builder
append the double argument to the string builder
get the soap factory
appends the string representation of the code float code argument to the
appends an integer to the string builder
append a long value
adds labels to the panel for a number of labels
appends the specified object to the end of this string builder
appends the specified string to the end of the line
send a message to the swg
set the namespace prefix
returns the length of the string
appends a newline character
method to insert a line separator
setter of the property tt target name space tt
inserts string before each new line
returns the string builder for this string builder
get the substring of the string from start
returns a substring of the string
returns the tac
add a list of rclabel values to the panel
trim the string
initializes the map of food drink to their corresponding text
writes the state of the property object to the output stream
draws the draft component
adds swgcategory to swgschematic list
method to initialize this object
if the slot is duplicate then return the string
notifies all subscribers of a change
parses the list of categories
returns the string representation of the comp name if it is for the
parses the csv to separate swgcategorys
if slot is optional return the value otherwise return the
add the specified amount to this money
get the resource class
used to write the category into a swgschemator
get the string representation of the data
returns the possibly null data type for the data type
returns the html string for the list of swgexperiment groups
fill the list of groups with all the experiments
called when the line is written to the app
creates a string representation of a draft message
draws the draft res
return the width of the description in html
returns the amount of factorys
finds the dialog for the supported schematics
creates a menu to show more information than the given component
makes the two components to be visible
make the panel at the east
makes a box with the information in the east
creates the component with the notes
creates the find menu
creates a label with the background color
make and return the west
creates a panel with all the gui elements
determines if a specified list of slots are being used
returns swgschematic assignee from the form
cria uma conex o
m todo que la base de datos
get the property 2
execute the command
resets the input of the script
clears the console history
returns the request visible
sets the request visible
returns the number of columns that are displayed
sets the number of columns that should be displayed in the header
displays the current bindings in a string representation
p returns a map of the bean properties as a code map code
find the lowest index in a list of points
see how many bread crumbs there are in the direction
returns the x offset in pixels for the given direction
returns the y offset in pixels for the given direction
get the current y position of the object
this method is called when the user clicks on a bread crumb
calculates the bounding radius of the area
find the lowest index in a list
frees the resources
returns the pool file
set the pool file to use
setter for property content
this method initializes this
this method initializes j menu item
to set the content of the current operation
tests that we can steens the bug
test parsing of lists
fetch the value of this property
renames should be able to rename elements
test read file
bug that there is no parent element for class casts
test of external dtdsubset
test that a document with mixed document type doesnt return a document
returns the list of additional pcdata declarations
returns the external declarations of this type
test the content handler
asserts that two attribute decl instances are equal
asserts that the given element decl is the same as the given one
test if all nodes in the tree have the right parent
test that the branch document is present
method to start the demo
builds the demo xpath query
paints the panel
run the task summary times
process the given document
creates an xmlwriter
processes the given document by writing it to the
this method is called when a document is processed
this method is called when a new document is processed
process the document
this method is called by the run method
processes the given document
creates a new xmlwriter
sorts the given list using the given comparator
removes duplicates from the list
sets the value default
removes all xml attributes from the root element
check for null handlers
load the schema document
returns the element factory for the given qname
method get datatype
builds the schema
called when a child is added
called when a child is removed
called when a complex type element is found in the schema
sets the qname of the attribute
return the xsdatatype data type for a datatype attribute
called when a simple type element has been found
this is called when a schema parser error occurs during parsing
returns if this frame is compressed or not
closes the jar output stream
set the state of the compress flag
returns if overwrite is allowed
set the state of the overwrite flag
returns true if class files are exported
set the state of the export class files option
returns whether the output folders are exported
sets the state of the output folder export option
are generated files exported
writes the given resource to the given destination path
returns true if java files are exported and false otherwise
sets the state for the export java files option
returns whether the source folder hierarchy is used or not
sets the state of the source folder hierarchy flag
returns the absolute location of the jar file or null if the
calculate the crc and the size of the given resource
returns the jar location
opens the given jar builder
sets the jar location
returns true if the manifest is generated
set the state of the manifest generation
this method is used to save widget values in the dialog store so
restores widget values from the saved state
returns if the manifest has been saved
set the save manifest state
update the jar package and description model
opens a file selection dialog that allows the user to browse for the description
returns the entered destination value
checks if the manifest file has been reused
set the state of the reuse manifest flag
answer the string to display in self as the destination type
returns the location of the manifest file
returns the suffix that will be used when creating output files
creates a file resource handle for the file with the given workspace
sets the manifest location
returns an iterator over the currently checked resource groups
returns the code ifile code corresponding to the manifest file
creates a label with the given text
returns the manifest version
create a spacer label and add the extra space between the widgets
sets the version of the manifest
updates the error message if the page is complete
returns the resource in the workspace associated with the given
returns code true code if the manifest tag is used
closes the java plugin
set the state of the manifest attribute
getter for the manifest provider
setter for the manifest provider
returns a boolean indicating whether the passed file handle is
returns true if this package is sealed
sets the seal jar
sets the packages to seal
sets the packages that were removed from the compilation
returns if the description was saved
set the state of the save description flag
returns the status of the operation
returns the resource in the workspace that corresponds to the given
adds a warning to the error list
returns the current value of the simple property description location
creates a jar package
create a manifest with the default
add additional entries to the manifest
sets the location of the description
returns the file in which the description of this
returns the manifest main class
sets the manifest main class
sets the elements
returns the comment
this method initializes sealing group
sets the comment
returns true if errors should be logged
defines whether error output of exec is logged
returns true if warnings should be logged
returns the result of this filter when applied to the
turn on off logging of warnings
are errors exported
sets whether errors that occur during the export process are written
updates the enablements of the export refactorings of this page
adds a new error to the error log
returns true if warnings should be exported
set whether warnings will be exported as well as the warnings
adds a warning to the error dialog
adds a new error to the error list
returns the build if needed
sets the build if needed
creates the jar writer associated with this plugin
creates the jar writer for this project
this method must be called just before this window becomes visible
creates a jar file export runnable
adds a listener for changes to the checked state
creates a jar export runnable
return whether all children of a tree element are checked
return a boolean indicating whether all list elements associated with
creates a new jar description writer
sets the new checked state for all given elements
called when the checked state of a tree item changes
creates a description writer for this jar file
creates a jar description reader
creates this groups list viewer
returns true if this jar file is valid
returns whether the given tree element should be checked
returns true if the manifest for this file is accessible
exports the exported class elements
creates a file resource handle for the file with the given workspace
recursively determines the white checked status of the specified tree element
expands all nodes in the tree
returns true if this class is a valid main class
returns an iterator over all checked items in the tree
give the focus to the destination specification widgets
are directory entries included in the output
returns a set of all checked tree items
returns the number of checked elements
returns an iterator over the files on the classpath
sets whether to include directory entries
get the number of list items
gets the table
returns whether the refactoring only includes structural fields
returns the tree
adds a filter to the tree viewer
returns the default refactoring aware setting
adds the given filter to the list viewer
returns whether this runtime is deprecation aware
logically gray check all ancestors of tree item by ensuring that they
sets the initial checked state for the given element
initializes the jar package from the dialog settings
sets the projects to be used for the refactoring
the code initial check tree item code implementation of this
initializes this dialog
sets whether the new method should be called
creates a folder resource handle for the given folder path
notify all checked state listeners with the given event
determines whether the deprecation messages are being sent
populate the list viewer
sets the descriptors for the refactoring and the proxys
removes the given listener from this reconcile grid
returns whether the given resource is a descendant of this resource
the selection has changed
sets the export structural only attribute of the refactoring object
sets the size of a control
execute the operation
sets the comparator used for sorting the list of tables
sets the root
sets the comparator used to sort the tree viewer
sets the selection state of the given tree element
adds the given tree node to the set of expanded nodes
callback thats invoked when the checked status of an item in the tree
logically un gray check all ancestors of code tree element code if
updates the hierarchy of the given tree element
updates the selection
exports the jar package
returns whether there are any errors associated with the given resource
returns whether the given object is the grey checked tree item
initializes this wizard from the given jar package description
returns whether there are any compile warnings
expands the tree to the given level
removes the given filter from the tree viewer
creates the export options specification widgets
creates a plain label with the given parent and text
return the total number of files in the jar archive
merge the manifest with the other manifest
opens new executable
creates an own manifest for the given jar package
exports the given jar root to the given file
returns the set of packages that are selected for the given jar
exports an input stream to the jar file
reads the jar package from the given file
returns the configured shell
returns the selected file
adds a child node to the current node
closes the output stream
gets the absolute path for this file
add a file to the manifest
sets the default values of the preferences
adds a source to the list of source files
adds a new conflict resolver to the internal list of conflict resolvers
builds the code
attempts to resolve the conflict conflict file by resolving them
packs a jar file and adds entries to this jar container
create a jar file with the content of the
pack jar files
this method sets the file separator in the path
test if there are more elements in the queue
adds the visit classes
create a jar file with the given contents
this method collects all files system elements for each
resolves conflicts by checking if the given file system element is
packs the content of a jar
return a build directory for a temporary build file
iterates through the tree until it finds the next node
get the next sibling in the string tree
find the first item in the string tree that matches the condition
gets the absolute project directory
return a string containing the build directory for temporary files
returns the absolute path of the given file
returns the absolute jar file path of the project
get the classes directory for the current project
returns the main class name
returns the java arguments string
returns the vm arguments as a string
returns the relative path of the given file
returns the absolute path of the given absolute path
copies files recursively
opens the shell
sets the sorter used for sorting the list of files
sets the sorter used by the tree viewer
creates a new jar file writer that writes to the given jar file
exports the jar package
opens new executable
merges manifest from the list to another manifest
convenience method to get the window that owns this actions shell
creates the field editors
create a jar package manifest for the given jar package
create a jar package from the given data
create the manifest for the outer jar file
sets the id of the last event to the given value
check if the transaction touches tungsten database
creates statement that truncates table to be truncated
creates the drop table statement
creates the drop schema statement
create the transaction message for the set statement
extracts the entry from the database for a given event id
get jdbc connection properties
configure the plugin
prepare this plugin for use
releases the resources associated with this plugin
set the log for transactions
close all prepared statements
creates a prepared statement with the given name
delete a prepared statement with the given name
creates a portal statement
returns the postgre sql sql for the given portal name
returns the statement with the given name
returns the next character from this input source
get the command byte
returns the next two bytes in this input stream as an int
get an integer from the byte stream
returns a string from the buffer
returns the string representation of this file
reads a null terminated string from the byte stream
put a character in the byte stream
writes two bytes to the byte stream
writes 4 bytes to the byte stream
put a string into the byte array
put a string into the byte stream
put a null terminated string in the buffer
resets the position of the header
sets the command to be sent to the server
writes the current contents of the buffer to the specified output
get the statement with the current statement state
launches the server thread
tests my sqlconnection handler initialization initialization
tests the connection handler method
test set command and get command
test put int32 and get integer
test put string and get string
test sql with multiple mysql
checks if all files exist
gets the value factory for the specified type
set the value factory for a particular class
register an x o command for later predictive analysis
register an x o command for later predictive analysis
loads an xml document from the given url
loads and returns the configuration object of the given url
load the context from a stream
loads the xml document from the specified input stream
loads context from xml
loads an object from a context
returns a textual description of this error
sets a new pattern for the
returns the number of patterns in this pattern
creates a matcher for the given input
replaces the first occurrence of this matchers pattern in the input with
p returns a string representation of this matcher
generate a alternation of a string by combining all characters
this method composes a string and concatenates the first characters
read next character and check if it matches the
utility method to throw a syntax exception with a string that
looks up a branch and returns the next node that matches the
parses a string and returns a node family
read a control escape sequence number
utility method for parsing octal escape sequences
utility method for parsing hexadecimal escape sequences
utility method for parsing unicode escape sequences
utility method for creating single objects
sets the request value for this download
sets the operation request value for this operation request
sets the cart value for this cart add response
sets the search results map value for this search index
sets the condition value for this similarity lookup request
sets the item value for this list
sets the delivery method value for this product supplier order
sets the similarity type value for this similarity lookup request
sets the errors value for this error list type
sets the shared value for this cart clear
sets the request value for this cart clear
sets the small image value for this item
sets the medium image value for this image set
sets the review value for this customer reviews
sets the large image value for this product
sets the item attributes value for this item
sets the items value for this order
sets the offer summary value for this product
sets the shared value for this item search
sets the request value for this item search
sets the offers value for this item
sets the variation summary value for this product
sets the variations value for this product
sets the customer reviews value for this reviews
sets the list type value for this list search request
sets the editorial reviews value for this item
sets the similar products value for this product
sets the accessories value for this get acl
sets the shared value for this cart add
sets the tracks value for this details
sets the request value for this cart add
sets the browse nodes value for this details
sets the listmania lists value for this listmania list
sets the shared value for this seller lookup
sets the request value for this seller lookup
sets the search inside value for this search result
sets the lists value for this list search response
sets the promotional tag value for this promotional info
sets the shared value for this seller listing search
sets the price value for this product
sets the sale price value for this product offer listing
sets the request value for this seller listing search
sets the ispustore address value for this offer listing
sets the total value for this order item info
sets the subtotal value for this order
sets the tax value for this product
sets the shipping charge value for this order
sets the shared value for this cart get
sets the promotion value for this product
sets the request value for this cart get
sets the shared value for this cart create
sets the request value for this cart create
sets the transaction value for this transaction item
sets the httpheaders value for this operation request
sets the arguments value for this operation request
sets the help response value for this multi operation response
sets the sellers value for this seller lookup response
sets the action value for this cart modify request items item
sets the item search response value for this multi operation response
sets the seller listing value for this seller listings
sets the item lookup response value for this multi operation response
sets the offer value for this order
sets the address value for this contact
sets the list search response value for this multi operation response
sets the list lookup response value for this multi operation response
sets the customer content search response value for this multi operation response
sets the customer content lookup response value for this multi operation response
sets the audience rating value for this item search request
sets the similarity lookup response value for this multi operation response
sets the amazon maximum age value for this item attributes
sets the seller lookup response value for this multi operation response
sets the cart get response value for this multi operation response
sets the cart add response value for this multi operation response
sets the cart create response value for this multi operation response
sets the amazon minimum age value for this item attributes
sets the cart modify response value for this multi operation response
sets the cart clear response value for this multi operation response
sets the transaction lookup response value for this multi operation response
sets the seller listing search response value for this multi operation response
sets the seller listing lookup response value for this multi operation response
sets the browse node lookup response value for this multi operation response
sets the location value for this seller
sets the seller feedback value for this seller profile details
sets the shared value for this transaction lookup
sets the request value for this transaction lookup
sets the children value for this browse node
sets the ancestors value for this browse node
sets the information value for this product
sets the sub total value for this saved for later items
sets the saved for later item value for this saved for later items
sets the shared value for this browse node lookup
sets the request value for this browse node lookup
sets the list type value for this list lookup request
sets the transactions value for this transaction lookup response
sets the unit price value for this product
sets the total price value for this order item info
sets the child transaction items value for this transaction item
sets the excerpt value for this search inside
sets the cart item value for this cart items
sets the id type value for this seller listing lookup request
sets the help value for this multi operation
sets the item search value for this multi operation
sets the height value for this merchant item attributes package dimensions
sets the length value for this merchant item attributes package dimensions
sets the item lookup value for this multi operation
sets the weight value for this merchant item attributes package dimensions
sets the width value for this merchant item attributes package dimensions
sets the list search value for this multi operation
sets the lowest price value for this variation summary
sets the highest price value for this variation summary
sets the lowest sale price value for this variation summary
sets the highest sale price value for this variation summary
sets the list lookup value for this multi operation
sets the customer content search value for this multi operation
sets the shared value for this item lookup
sets the customer content lookup value for this multi operation
sets the request value for this item lookup
sets the similarity lookup value for this multi operation
sets the shared value for this customer content search
sets the seller lookup value for this multi operation
sets the request value for this customer content search
sets the cart get value for this get request
sets the cart add value for this multi operation
sets the list value for this list
sets the items value for this cart create request
sets the cart create value for this multi operation
sets the cart modify value for this multi operation
sets the cart clear value for this multi operation
sets the transaction lookup value for this multi operation
sets the seller listing search value for this multi operation
sets the shared value for this cart modify
sets the list type value for this list
sets the request value for this cart modify
sets the seller listing lookup value for this multi operation
sets the help type value for this help request
sets the browse node lookup value for this multi operation
sets the customers value for this customer content search response
sets the shared value for this list lookup
sets the offer status value for this seller listing search request
sets the request value for this list lookup
sets the items value for this cart add request
sets the totals value for this transaction
sets the transaction items value for this transaction
sets the shipments value for this transaction
sets the ship option value for this seller listing search request
sets the image value for this image set
sets the shared value for this list search
sets the request value for this list search
sets the cart items value for this cart
sets the saved for later items value for this cart
sets the shared value for this customer content lookup
sets the request value for this customer content lookup
sets the list item value for this list
sets the operation information value for this operation information
sets the response group information value for this information
sets the customer value for this order
sets the seller value for this seller listing
sets the browse node value for this browse nodes
sets the help request value for this request
sets the browse node lookup request value for this request
sets the shared value for this similarity lookup
sets the request value for this similarity lookup
sets the id type value for this item lookup request
sets the seller listings value for this seller listing search response
sets the item lookup request value for this request
sets the list search request value for this request
sets the customer content search request value for this request
sets the customer content lookup request value for this request
sets the shared value for this seller listing lookup
sets the batteries value for this item attributes
sets the request value for this seller listing lookup
sets the similarity lookup request value for this request
sets the cart add request value for this request
sets the cart create request value for this request
sets the cart modify request value for this request
sets the cart clear request value for this request
sets the items value for this modify shopping cart modify request
sets the merchant value for this offer
sets the seller listing search request value for this request
sets the offer attributes value for this offer
sets the seller listing lookup request value for this request
sets the offer listing value for this offer
sets the item total value for this cart item
sets the seller lookup request value for this request
sets the shared value for this help
sets the request value for this help
sets the location value for this customer
sets the lowest new price value for this offer summary
sets the packages value for this transaction shipments shipment
sets the lowest used price value for this offer summary
sets the lowest collectible price value for this offer summary
sets the lowest refurbished price value for this offer summary
sets the case diameter value for this currency
sets the case thickness value for this item attributes
sets the item search request value for this request
creates a new persistent object
deletes the given object from the database
todo the purpose for writing this method
p execute an update hql with the given values
set the directory for the book upload of this resource
sets the base url for the image
set the expires time for this context
set compass index directory
sets the continuous shooting speed value for this merchant item attributes
sets the cpuspeed value for this merchant item attributes
sets the creator value for this item attributes
sets the delay between shots value for this merchant item attributes
sets the digital zoom value for this merchant item attributes
sets the display size value for this merchant item attributes
sets the first issue lead time value for this issue type
sets the graphics memory size value for this merchant item attributes
sets the hard disk size value for this merchant item attributes
sets the isoequivalent value for this merchant item attributes
sets the item dimensions value for this item attributes
sets the languages value for this item attributes
sets the list price value for this order
sets the manufacturer maximum age value for this merchant item attributes
sets the manufacturer minimum age value for this merchant item attributes
sets the maximum aperture value for this merchant item attributes
sets the maximum focal length value for this merchant item attributes
sets the maximum high resolution images value for this merchant item attributes
sets the maximum horizontal resolution value for this merchant item attributes
sets the maximum resolution value for this merchant item attributes
sets the maximum shutter speed value for this merchant item attributes
sets the maximum vertical resolution value for this merchant item attributes
sets the maximum weight recommendation value for this merchant item attributes
sets the minimum focal length value for this merchant item attributes
sets the minimum shutter speed value for this merchant item attributes
sets the monitor size value for this merchant item attributes
sets the monitor viewable diagonal size value for this merchant item attributes
sets the optical zoom value for this merchant item attributes
sets the package dimensions value for this item attributes
sets the running time value for this merchant item attributes
sets the secondary cache size value for this merchant item attributes
sets the stone weight value for this merchant item attributes
sets the subscription length value for this merchant item attributes
sets the system bus speed value for this merchant item attributes
sets the system memory size max value for this merchant item attributes
sets the system memory size value for this merchant item attributes
sets the total diamond weight value for this merchant item attributes
sets the total gem weight value for this merchant item attributes
sets the total metal weight value for this merchant item attributes
sets the water resistance depth value for this merchant item attributes
will be called by the main application when the user presses the
at startup create and show the main frame of the application
returns true if the ban has been banned
pushes an item onto the top of this stack
this method is called when a client sends an audio message through
this method will request a move to the specified player
broadcast a string to all players
sends a message to everyone in the game
sets the server
clears the history
gets the latest turn from the user
called when a move is entered
sets the current board
draws the board
method called when a new board is being moved
returns the move that this board contains
this method is called when the game is started
this method is called when a player wants to move
this method is called when the game is over
finds a move for the given board and returns it
initializes the table of white pieces
updates the list of pieces tables
creates the children of this node
returns the ucbvalue value
randomizes all weights
print structure to the print stream
prints the weights of all the layers
prints the weights of all the layers
sets the node that is in the nmilis
selects a node and returns the current node
randomly generates a random move
gets the coordinate at a particular location
forces the winner to the given player
checks if the move is legal
moves the given player from the fast
get a clone of this code btboard code
returns a string representation of the object
get the name of the scheme
get the realm of the current user
get the unique identifier for when invalid credentials are found
returns the value of the named parameter as a string or null if
destroy this stage
sets the address to the specified value
creates and returns a new wicket objects module
removes any component factories from the registered set of components
gets the isis context
return the page class registry
return the specification
returns the adapter that this object is associated with
set the adapter
returns the type of specification from the given memento
lazily creates and returns a new model instance
returns the name of this memento
this method was created in visual age
this method was created by a smart guide
this method was created in visual age
returns the authentication session that is associated with this
returns true if this is an exploration mode
return true if the debug mode is enabled
builds the gui
builds the graphical user interface of the meta model
renders a css class in the header
execute no arg action
returns true if this is an exclusively operator
returns the map control
get the google maps api key
returns a string containing all parameters
starts the game
start the background thread that will wait for all
stops the game
determines if this thread is active
returns the state of the keypad
find the menu item with the given id
sets if this component is visible or not
sets the menu handler for this menu
adds a new menu item to the menu
removes an item from the list
remove all items from the list
selects the first item in the list
selects the next item in the list
selects the previous item in the list
returns the currently selected menu item
draws the background
draws the specified menu item
draws the selected item in the menu
draws the menu
renders a tile onto the screen
returns the map info object
renders the component
runs the test case
runs the test
signals the midlet to terminate and enter the destroyed state
signals the midlet that it has entered the active state
handle commands for this form
override this method to set up any member variables before the test group
set the test reporter
a test beginning
a test group has ended
interface test listener
performs the test
returns the name of the definition being constructed
get the definition value
parse a property definition that is not in the set
kills the ooo process
this method creates a new bootstrap pipe
creates a connection to the specified host and port
this method creates a new random pipe
this method is used to connect to the given pipe
get remote context
back button pressed
build a key from a list of values
initialize the context
sets the sample rate
create a new session
closes the session associated with the ownership
get the session from the pool
shows the view of the tvp
gets the constituent this agent is a member of
sets the constituent this agent is bound to
getter for property xcoor
setter for property x
getter for property ycoor
setter for property y
adds a project observer to the list of known observers
removes an observer
returns the number of rows in the model
returns the number of columns in the model
returns the column name
returns the most specific superclass for all the cell values in the
sets the text of this button
returns true if the cell at row col is editable
shows the property editor for this property
returns the number of rows in the model
determines whether the given coordinates are within the web glyph
set the creator of the session
returns the value at the given row and column
gets the value of creation date
p returns a clone of this code unspecified relation code
returns the index of the cell editor
sets the size of the terrain
sets the bounds of the object
changes the bounds
copy the properties from source to target
clones this relation and sets its properties to those contained
returns a list of the button descriptors for the node
returns a list of the buttons that match the relation
fills the current line to the rectangle
adds a model to the model list and fires a
factory method that creates the table model for the inference graph
returns true if the point x y lies inside the polygon
returns true if a cell is gray
sets winding rule for filling the bezier path
get the text for the add row button
returns an iteration object that defines the boundary of this
removes a model from the model
returns an iteration object that defines the boundary of this
returns a boolean that indicates whether or not the add row dialog should
gets winding rule for filling the bezier path
tells whether this path has been fully explored
moves the iterator to the next segment of the path forwards
returns the text to be inserted in the column header
returns the coordinates and type of the current path segment in
returns the coordinates and type of the current path segment in
returns the model at the specified index
returns the index of the cell editor
returns whether the add column should be visible in the view
gets the value of models
paints the component
returns the index of the cell editor
returns the number of rows in the model
returns the number of columns in this model
sets the strength of this register
gets the constituent at a particular index
returns true if any of the models have been modified since the last
returns the constituent with the given index
returns true if the cell at row col is editable
sets the dirty flag
returns a hash map with all attributes of this object
clone the relation
gets the origin constituent
sets the constituent this mvc refers to
fires model removed
gets the destination constituent
setter for property destination constituent
adds a model observer to the list of observers
paints the url on the graphics
paints the line
fires added event
returns the center x coordinate of this edge
returns the center y of this line
check if the given point is within the web glyph
returns the index of the cell editor
removes a model observer from the list of observers
returns the value at the specified row and column
returns a shallow copy of this conceptual relation
helper method for remove constituent objects to a conceptual relation
this method returns all the button descriptors for the node
returns a array list of button descriptors for the relation concept
factory method that creates the table model for the belvedere table
draws the line
sets the name of this model
gets the guid
set the guid
invoked when an action occurs
returns true if the point is within the bounds of the arrow
get all attributes of this element
sets the host model
override the code set attribute code method of the wrapped
gets the value of draw line
sets whether or not line is drawn between the points
returns the host model
set an attribute to this element
returns the center x coordinate of the robot
returns the y coordinate of the center of the sprite
sets the width of the field
set the creator of the session
set the background color
getter method for back color
set the selection back color
set the text color
set the selected text color
sets the hover back color for the mouse
sets the creation date
returns the font of this text
select this item
deselects this component
sets the strength of this code goods code
calls locate hover on the location of the mouse
change the color of the text
set the border color
set the text to be displayed
checks whether the position is within the bounds of the object
set the strength of the border stroke
check if the position is within web glyph
set the selected border color
sets the color of the border that may be used to paint
selects the border color
sets the dirty flag
deselects this component
enables or disables all the add node buttons
adds all buttons from the given button to the toolbar
changes the border color to hover
paint web glyph
toggles the graph view button
initializes the applet
initializes the applet
returns the text of this element
shows property editor
sets the text of the constituent
gets the cell renderer
returns the number of rows in the model
sets the text of the constituent
returns the value at the given row and column
returns the name of the column at column index
returns the most specific superclass for all the cell values in the column
sets a new url for the constituent
if the focus is lost then update constituent
promotes the border color
sets the new constituent notes and sends a
demotes the border color
sets the creator of the constituent
sets the drag object
this method is called by the graph view component to paint itself
method mouse dragged
gets the value of action command
gets the value of image icon
returns true if there are more elements in the iteration
returns the string representation of this node
sets up the user interface
it sets the project to be edited
set the position of the node on the screen
returns the width of the graph
forces the tree to reload all data from the server
returns the selected constituent
returns the height of the graph
invoked when a mouse button has been pressed on a component
adds a new node to the graph
sets the selected constituent
show the about dialog
this method will promotes the selected constituent to a new constituent
creates the upper panel
creates the bottom panel
the cancel button was pressed
invoked when the mouse button has been clicked pressed
accept all directories and all gif jpg tiff or png files
returns description of filter
accept all directories and all spcified bel extension
description of the filter
demote the selected constituent
this assumes that the table model is not editable
this method is called when the panel needs to be resized
return the table column model for this table
return the table model
insert a node into the model
returns the number of columns in the model
returns the value at the given row and column
set the current table selection to the one with the specified constituent
returns the most specific superclass for all the cell values in the column
enables or disables the delete button depending on the selected table cell
returns the cell renderer for a particular row and column
mouse listener method
mouse listener method
shows the dialog and returns the number of the creation
this method will evaluate the popup if the mouseevent is a popup event
action for the bel homepage
toggles the button and table view
deletes the selected constituent from the current ontology
shows the add model dialog
shows the project properties dialog
shows model properties dialog
shows the new project dialog
shows the constituent in the selection box
creates the center panel
creates the bottom panel with cancel button and next button
returns an iterator over the nodes in this graph
returns an iterator over the relation set
adds a model to the project
creates the model for the action
removes a model from the project
removes the model at the specified index
returns the number of relations of this code concept code
invoked when an action occurs
returns the number of models in the model list
imports the model from the project
get a model by its guid
returns an iterator over all models in the repository
returns the node at the given index
action for properties button
checks if this constituent overlaps another constituent
project properties action performed
this method removes the selected agent
checks whether this constituent overlaps any other constituent according to
returns a string representation of the object
model properties action performed
parses the new bel enumeration
returns the directed adjoining relation that connects given constituent and
returns the object class for the given name
returns an iterator over all the types in this set
adds a new enumeration to the belief base
returns the belief base with the given name
gets the enumerations attribute of the enum type object
gets the property attribute of the elvis registry object
creates a new constituent from this type name
look for adjoining relation with the given constituent and dc
adds a new key pair to this object
get a specific pair by index without casting
clones this object
returns an iterator over the nodes in reverse order
getter for property flags
returns whether the block is visible
returns whether the block is editable
get the type of the object
returns the string representation of this object
sets the enumeration
getter for property enum
the method code get relations code
adds a parent to the list of parents
returns an enumeration of the parents of this node
get the name of the type
gets the value of view type
adds a new attribute to the belief
removes an attribute
returns the belief object that contains the attribute with the given name
collect all the attributes from the given hash map into the
returns true if the class is a subclass of the object
returns a new instance id
notify all observers of a constituent
returns the current card
returns the factory
setter for code host project code
retrieves the list of button descriptors for the node
getter of host
returns a array list of button descriptors for the relation
sets the name of the model
returns the name of the project to be created
sets the edited creator
returns the name of the project creator of the new project
sets the creation date
returns the project creation date
sets the nodes description
start dragging the window
clone the properties from source node to target node
get the project description
copies all properties from one relation to another
this method is called when the tabbed pane changes
sets the name of the project to be created
sets the creator of the project
set the position of the node in the world
clones the relation
gets the origin constituent
set the origin of this entity
returns the destination constituent
sets the destination constituent for this rule
sets the project creation date
drop the model at the specified coordinates
shows the editor
changes the current selected constituent
sets the location of the object
get the x coordinate
get the y coordinate of the vertex
inserts a constituent into a list of constituent objects
set the project description text area
clone the attributes from the new attributes map
inserts a node into the model
adds a new attribute to the belief base
for binding get the value of an attribute of the current context
drops a node from this constituent
get int attribute returns an attribute from the configuration node
returns the name of the model
sets the configuration attribute with the specified name to a new code
sets the text
gets the text
set the url
gets the url
sets the notes
gets the note
returns the creator of the new model
this method will delete the selected constituent from the selected constituent
sets the creator
gets the creator of the image
sets the modifier
gets the modifier
sets the color of the border
removes a constituent from the model
returns the color of the border
returns the line color of the shape
returns the date of the creation of the model
returns the background color of the text
inits the socket
starts listening for incoming connections
broadcast a message to all clients
remove the lock for the given thread from the pool
get the text of the model description
returns the constituent with a guid
get the value of model class
connects to the host
sends serializable data to the server
this method is used to terminate the code processor code such that
returns true if the cell is gray
this method is not implemented and will be used
removes a message listener from the list of message listeners
registers an exception listener
removes the specified exception listener
connect to the server
sends a message to the server
terminates the network
adds a message listener to the network
removes a message listener from the network
adds an exception listener to the network
removes an exception listener from the network
sets the name of the model
adds a message listener to the list of message listeners
removes a message listener from the list of message listeners
adds a listener for exceptions
removes the specified exception listener
notifies all message listeners that a message has been received
notifies the exception listeners
sends a message to the server
terminates the connection
checks if the thread is still running
sets the bel client
catches the exception and performs the garbage collector
changes the creator of the model
sets the date of the creation of the model
this method assumes that the model has all the same constituent constituent
sets the model description to the specified string
updates the view
overriden so that the size of the text field is correct
set the size of the text
set the text of the label
invoked when a component gains the keyboard focus
set constituent when focus is lost
sets the size of the text node
locates the node as hovered by the mouse event
returns the text to be inserted between the column name and
updates the border of the button depending on the hover state
invoked when the mouse button has been clicked pressed and released on
updates the common attributes for all the nodes
the action performed
handle mouse movement events
adds all the toggle buttons from the relation buttons list to the
this method makes the constituent visible
initialize the applet
finds the graph view constituent at the mouse event position
connects to a model
returns the currently selected constituent or null if none selected
shows the constituent object in this panel
inits the application
returns the graph view representing the constituent that is
set the undo marking enabled state
sets the munged mrj version the belvedere4 will be called before the
adds the given undoable event to the undo list and notifies the observers
adds the given event to the undoable list and notifies the observers
handle about action
enable or disable undo tracking
this method loads all common images
if the mouse is dragged we call repaint on the graph
returns the cause of this exception
returns the orientation of the print based on the current page format
returns the string representation of this node
returns the maximum width of the graph
returns the height of the largest graph
returns the number of rows in the model
invoked when a window is in the process of being closed
returns the value at the given row and column
removes the given constituent from the list of
sets the selected item by name
gets cell editor by row and column header
what is the orientation of the print
filter the types by the string
returns true if there are no allowed types
detects whether this constituent is allowed to constituent
checks if the given class is allowed to be added to the list
returns the number of rows in the model
returns the number of columns in the model
returns the row node for the given index
returns a column node
returns the most specific superclass for all the cell values in the column
returns true if the cell at row row col is editable
set the constituent of this store
returns the number of rows in the model
finds the value at the specified row and column
determines if a cell is editable
finds the bel attribute at the given row
sets the data to the new value
set the constituent this panel will use
returns the editor for a cell specified by row and column
shows the add model dialog
creates the model based on the action
creates the center panel
invoked when an action occurs
changes the active constituent
returns the path to the xml file of the model
connects to the bel server
gets the value of the isolation window property
sets the value of the isolation window property
gets the scan window list
gets the value of the mz ml property
sets the value of the mz ml property
returns the selected ion list
sets the value of the scan window list property
returns the index list
sets the value of the index list property
gets the value of the default data processing ref property
sets the value of the selected ion list property
gets the value of the spectrum ref property
return the offset in the index list for this index list
sets the value of the default data processing ref property
sets the value of the index list offset property
gets the value of the activation property
the default data processing
sets the value of the spectrum ref property
returns the checksum file
sets the value of the file checksum property
sets the value of the activation property
sets the default data processing
gets the value of the file content property
create an instance of
sets the value of the file content property
gets the source file list
create an instance of
sets the value of the source file list property
create an instance of
returns the reference to the source file
sets the value of the source file ref property
gets the external spectrum id
get spectrum list gets the list of spectra
create an instance of
sets the value of the external spectrum id property
returns the accession number of the unit
sets the value of the spectrum list property
gets the value of the instrument configuration ref property
create an instance of
sets the value of the unit accession property
sets the value of the instrument configuration ref property
gets the value of the software ref property
get the chromatogram list
sets the value of the software ref property
create an instance of
sets the value of the chromatogram list property
sets the value of the unit name property
create an instance of
returns the source file ref list
gets the value of the unit cv ref property
create an instance of
sets the value of the source file ref list property
get the target list
sets the value of the target list property
gets the value of the default instrument configuration ref property
sets the value of the unit cv ref property
create an instance of
sets the value of the default instrument configuration ref property
returns the precursor of the image
sets the value of the binary property
create an instance of
sets the value of the precursor property
sets the value of the product property
returns the binary data array list
create an instance of
gets the default source file ref attribute of the project object
sets the value of the binary data array list property
gets the value of the cv list property
sets the value of the default source file ref property
checks if the current parameter group was inferred from a referenceable param group
create an instance of
sets the value of the cv list property
returns the file description
gets the value of the array length property
sets the value of the index property
create an instance of
returns the default array length
gets the value of the sample ref property
sets the value of the file description property
returns the list of subcomponents
sets the value of the default array length property
sets the value of the component list property
sets the value of the sample ref property
gets the value of the data processing ref property
get the list of referenceable param groups
sets the value of the data processing ref property
create an instance of
gets the value of the data processing property
sets the value of the referenceable param group list property
sets the value of the array length property
sets the data processing object for this processing context
create an instance of
returns the start time stamp of the event
get the sample list
sets the value of the start time stamp property
gets the value of the scan settings ref property
create an instance of
sets the value of the scan settings ref property
sets the value of the sample list property
create an instance of
gets the software list
gets the value of the id ref property
sets the value of the id ref property
gets the value of the spot id property
gets the value of the cv ref property
create an instance of
sets the value of the software list property
sets the value of the spot id property
gets the time in milliseconds between each scan of the ir
sets the value of the cv ref property
sets the value of the scan time property
gets the scan settings list
create an instance of
sets the value of the scan settings list property
returns the scan list
create an instance of
gets the value of the instrument configuration list property
sets the value of the scan list property
returns the precursor list
sets the value of the instrument configuration list property
sets the value of the precursor list property
gets the value of the data processing list property
create an instance of
sets the value of the data processing list property
sets the value of the product list property
create an instance of
create an instance of
sets the value of the run property
create an instance of
returns the encoded length
create an instance of
create an instance of
sets the value of the encoded length property
create an instance of
create an instance of
create an instance of
set whether the enhanced param group identified by
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
unmarshals from the xml file
create an instance of
create an instance of
returns the version of the mz ml
create an instance of
create an instance of
create an instance of
returns mlaccess number
returns the mlid attribute
returns the number of objects that match the given xpath
returns true if the index list was indexed
checks if the request needs to be uncompressed or not
returns the index list object that is the root of mz ml files
returns a spectrum object that is the root of xml
returns a spectrum object that is the root of spectrum xml
returns a spectrum object that contains scan time and time
returns a spectrum object that is the root of spectrum index
returns a chromatogram object that has the given ref id
get spectrum id from spectrum index
converts a given array of bytes to a string
returns an index object that is the index with the given name
returns true if all bits in the vector are zero
set comment for this member
returns a reversed copy of this vector
returns a copy of the svfvector containing the values between start and end
utility method for comparing two vectors
returns a vector pattern containing the partial pattern
removes the specific header from the given command
throws an error
throws a warning
merge the parameters from another svfparameters object
sets the emulate trstemulated flag
merge parameters from other command object
executes the next count characters
merge two parameters from one to another
executes the next instruction until the given index is reached
merge parameters from another
true if the given action is a
merge parameters from this command to the destination command
true if the i th action has been requested
retrieves the pattern at the specified index
returns the comment for the given index
sets the comment for the given index
returns the parameters of the specified action
gets the parameter at the given index in the inherited list
returns the real parameters of the specified action
add command to the end of the list
insert a new command at a specified row
remove the command at the specified row
set command at index
calculate the effective parameters
set the value of an element
force the primitive value to be forced
returns true if this is a constant
returns true if this timer task is in the delay time
returns true if this is an output stream
returns the absolute index of this row
get the relative index of this relationship
returns the index of the variable in the current expression
returns the first successor
returns the successor of this block
reads a line of text
reads a single line of asterisks from the stream
sets the comment of this member
set the comments
get the current line
determines if this file is at end of file
reads a statement from the stream
sets whether insert spaces should be used for new lines
return true if the statement has been read
returns the partial statement that should be added to the
parses a statement and adds the resulting strings to the internal
sets the value of the force variable at index
closes the connection
resolves all dependencies of this finite domain block
this method returns the frequency of the pulled port
returns true if the server supports svf connections
performs the reset of the bean
sets the trst flag of this link
delays the current thread for a second
sets the trstemulated flag
creates a new tap high level event object
gets the command
returns whether this is clocked
polls for incoming data on the port
process the given event
returns the header pattern
returns the trailer pattern
returns the vector pattern of the words in this match
this method is called when the selected row in the table changes
get a printable object from the header
adds a value to the end of the array
applies the new values to the buffer
update the toolbar with the current file
repaint the specified row
wait some time for the execution to be executed
opens a file
set the length of the image in bits
registers a tabbed panel with the floating palette handler
invoked when a property changes
returns the current viewer editor
returns the current viewer editor
returns the current viewer editor group
sets the current viewer editor group
set the current viewer to the given editor
sets the foreground color for the given editor
this method is called when a group is going to be
this method is called when a new group is loaded
returns the absolute path of the image
called when the gui is closing
sets the size of the font to be displayed
sets whether the default padding is enabled
sets the default character
set the highlight color
returns the maximum length of the label
determines the preferred span for this view along an
ensures that the field is visible in the view position
process focus event
called when the text field gains the focus
invoked when a component loses the keyboard focus
is this state machine a stable state
returns the next state
returns the next state of the game
adds a child node to a parent
update the view of the feed list adding or editing a feed
notification of a task failure
remove a feed from the model
remove a feed
update the file view not overriding the inspection
fires a configuration changed event
create and return a servlet output stream to write the content
finish the response
notify a new notification with the given type and message
inserts the specified element into this delay queue
get a connection from the pool
get a connection to the database using the specified username and password
returns the name of this pool
get the number of times the thread has to wait
returns pool properties
returns the number of currently active tasks
returns the number of idle connections in the pool
abandon a connection
notify connection pool that connection has been suspect
releases the connection back to the pool
get the next interceptor in the chain
set the next interceptor in the chain
compares the method with the given name
sets the interceptor properties
sets the use equals attribute of the antelope panel object
called when the pool is closed
determines if the pooled connection should be closed
allows the mbean to perform any operations needed after having been
allows the mbean to perform any operations needed after having been
allows the mbean to perform any operations it needs before being
allows the mbean to perform any operations it needs before being
create object name
creates a connection pool
creates a data source using the given properties
check if we should abandon the gazetteer
returns a pool properties object containing all the properties
test that all connections which have been idle are released
create a new pooled connection with incremented counter
create the mbean
cancels the current connection and closes the connection pool
if this object is locked from a database then throw an exception
checks if this pool is idle
test idle creates a pool with an idle timeout
reconnect to the database
disconnects this connection from the database
get the timeout value for abandoning the pool
performs connection validate
checks that the given action is valid according to the given
returns the time to release the resources associated with the
release the connection
return the stack trace of this exception
sets the new timestamp
sets the time when this user was last validated
sets pool properties
getter for code discarded code
returns the time when this user last been validated
returns pool properties
lock this resource
this method unlocks the write lock
returns the time when the client was last connected
get the handler
get the release status
resets all statistics
cleans up any resources
returns the timeout value which may be used to wait for a response
returns true if channel id matches the pattern
validate the http request
check if the request is supported
validate the settings
validate the settings
record the cookie in the cookie jar
applies defaults for document
returns the name of the parameter
check if this cache entry is still saveable
set the session to be used for testing
sets the test name
sets the assertion
sets the test strategy
gets the assertion
return the test strategy
sets whether this task should be the first task
sets whether a task is the last task of the execution
set the host name
set the port
controls whether the
set the content of this node
set the magnitude of the star
sets the golden file
set the expect headers
sets the list of unexpected headers
set response match
sets the return code
sets the return code message
sets the request headers from a string
return a deep clone of the given hash map
read a single byte
starts the server
stop the server
return the default http connector
returns the standard service
sets the host
returns the engine
get the server instance
initialize the default realm
enable use of naming support
initialize default values for this web application
mark this content as chunked
set the amount of time to wait for an idle awt event queue
executes the given runnable in the selector thread
sets the timer to the given time
shuts down the output side of the socket
append a range of bytes to this buffer
append a character to the end of the message
resets the state of this object to its initial state
returns the hashcode for this string
deletes the specified character at the specified offset from the
append a char array
append a string buffer
append a string
append a string value
releases the shared memory
releases a shared signal on the next read
called when a signal is received
setter for property value
compares the message bytes to the specified string object
appends the specified char buffer
this will create a space for the buffer to be the specified size
returns the byte buffer that holds the data
returns the hashcode for this string
compares this string to the specified code string code
checks if this string equals another string
tries to look up the first buffer
returns true if the given string starts with the specified value
checks if the string starts with the specified substring
returns true if the message bytes starts with the specified
returns true if this queue has no pending buffers
closes the underlying stream and releases any system resources associated with
sets the target for this ssl channel
read the next byte of data from the bucket
checks for the buffer to handle the input of the socket and if
read a byte buffer
adds a cs to the buffer
appends a range of bytes to the socket
reads a pem key and stores the resulting private key for use by
pushes the current contents of the buffer onto the underlying
callback for when the connected channel is connected
returns a new instance of netconnector
set the data flushed callback
called by the channel manager to notify the other side of the connection
sends the handle flushed callback to the channel
sends the handle received callback
returns the last exception encountered if any
sets the head of this channel
reads a byte of data
read a line from the buffer
returns true if this output stream is open
returns the number of bytes read from the buffer to the given
reset the iterator to the start and end values
decode all bytes
returns the open status
set the debug level for the logger
returns the number of closed nodes
set the bytes to be read
recycle the output buffer
get the number of loops
reset the output stream
stops the selector thread
set the long value
get the entry for add
adds an entry to the map
adds a new entry to the map
gets a header
gets a name buffer by index
gets the value at a given position
adds a value with a given name
set the welcome resources for the application
add a wrapper to the context associated with the path
remove a wrapper from the context map
removes a context
sets whether this connector is compressed or not
create or allocate and return an http channel object
returns a http channel
called before the request is executed
close the socket
out closed is called when the http channel is closed
writes interest in the specified byte array
does the message have a body
the run method for the service
sends the specified message to the server
checks if release is available and throws an exception if not
complete the data writing
checks if the keep alive client is still open
this is called when the receive is finished
releases the connection if it is available
this method is used to release the resources that have been
releases this object
get a buffered reader to read the data
called when the connection is closed
determine if we must drop the connection because of the http status
return the context path
aborts the http channel
return the servlet path
abort the connection
parses the query string and adds the parameters to the existing parameters
parses the post parameters
returns the request uri
host the server will be running on
wraps the given buffer into a c buffer
coyote service which is used to make the request
process the query received from the server
get the tomcat instance
gets the next port number
returns the temporary directory
gets the build directory
gets the access log enabled value for this describe global sobject result
add a delete on tear down
returns a file object representing a parameter for a class
this method sends a ping message to the web server
this method is called by the servlet container when the servlet is
clears the content of this body
gets the value of the name given property
returns the name of the attribute
declare the variable
returns the prefix string
returns the information string of the operation
returns the jsp version required for this component
get the function info for a given function name
set the value of the key
get the value of a parameter
remove a value from this node
returns the error data object associated with the current request
sets the domain
deploy applications for any directories or war files that are found
process a stop event for this host
returns a file object for the given id
get config base
returns true if the given attribute is distributable
returns the condition that must be met
sets the condition that must be true if the
returns the condition if
sets the condition if
gets the session attribute filter
set the session attribute filter
check if session attribute is set
create an access log element implementation which needs header string
handle receive session delta
sets the status line
returns the status line
creates the query string
close the redirector to be redirectored
return true if the single thread model is working
protect against the memory leak caused when the first call to
returns the size of the annotation cache
unpack war setter
encoding option for the file system
ignore files that match
add specified socket and associated pool to the poller
method events
flush the buffer
find out the doc base path to use for this application
recycle the input buffer
read an integer from packet and advance the read position past
read a 32 bits integer from packet and advance the read position past
recycle the processor
flush the message output stream
perform whatever actions are required to flush and close the output
add a song to the song list
index the entire file
performs a new request with the given name and value
performs a query to db
performs a odata client request to be sent
performs a new client request method by querying the server
dump all the headers and body
performs a odata client request of the query
performs a odata client request to query the taxonomy api response
returns true if all headers are sent
request the headers for this request
find a navigation property by name
get the fully qualified type name
returns whether or not to request the body of this message
request the body of this message
find the specified property by name
returns true if the response headers are to be sent
sets the response headers
returns true if the body of the message is to be sent
if the response body is true this method will output the
get the value of service root uri
get the metadata for this edm
decodes an object using the base64 algorithm
returns the key string
returns a key string without the parentheses e
returns the first value of the key
returns the key type of the last parsed value
determine if the property name is allowed to read
determine if the property is writable
returns the value of the property associated with this
sets a property on a target object
test linking to entity
test that connection to entity is available
pasos the given number
returns the subindice
sets the subindice
sets the body attribute of the json object
adds a badge to this json object
adds action localization key
add localization key
adds a sound to this creature
adds the content available
adds an alert to the collection
adds a custom alert to the collection
add a custom dictionary
add a custom dictionary
sets the proxy for the http connection
returns the payload as a string
returns an sslsocket factory for creating push sockets
adds a new device to the list of devices
get a device by its id
remove a device from the list of devices
initialize the connection to client
creates a sslsocket factory with the specified trust managers
initialize the connection to client
returns an sslsocket for pushing this socket
stops the connection
adds a new device to the repository
returns a device identified by its id
removes a device from the registry
returns the feedback ssl socket
get jdbc url
executes a query and returns the result set
launch the maven library
reads the project from pom
extracts a dependency from the pom
add a resource to the project
adds a source project of the given type
get a dependency from the dependency resolver
split the given pattern with this
sets the attribute completion provider
returns a tag library instance for the specified name
create a new model for the given file
returns the key
creates the overview page
creates the organization page
creates the repository page
creates the team page
creates the dependencies page
creates the build page
creates the unit tests page
creates the reports page
creates the source page of the multi page editor
sets the update needed flag
saves the multi page editors document as another file
this is called during startup
notifies all listeners that this entry has been modified
notifies all listeners that have registered interest for
adds style information to the given text presentation
returns the relative path of the given classpath entry
loads maven local home from the preference store
create pom in the project
add the entry to a project
attach the array of dependencies to the project
removes the ignore dependencies of a project
sets the artifact that this task is working on
creates the targets list
removes the target at the specified index
moves the target one position up in the list of targets
moves the target one down in the list of targets
publish an event
returns true if there are pending events
returns the number of elements in this array
returns the path to the file that contains the documentation
adds a string to the list of missing strings
inserts the given string at the specified position in the list
sets the value of one of the fields of this row
returns the string at the specified index
returns the number of attributes
changes the type of an attribute
returns the number of missing values
converts this list to a numeric attribute
convert the attribute to a string
converts a nominal attribute to a nominal attribute
deletes this entity from the database
saves or updates the given entity in the persistence store
sets the current logged owner
method get context
returns the value of the page id property
get the name of the file
returns the size of the content in bytes
get the content type of the data
returns the date and time when the code document code was created
get the creator of the resource
get the url of the resource
returns the comment of the resource
get the users username
returns the content of the element
get the name of the creator of the resource
returns the value of the last modifier name
performs a logout
gets the creation date
returns the date of the last modification
returns the version of the packet
returns the date the file was last modified
returns the modifier of this element
gets the home page attribute of the file search engine object
returns information about the server
returns the value of the i content status i field of the sequence
returns the current state of this object
returns the value of the key property
returns all spaces of the current state
returns the full name of the user
get the email address of the person
returns the value of the pay pal field code lock type code
returns the value of the locked by property
returns the major version of the client
returns the homepage of the application
returns the value of the description attribute for this element
returns the minor version of the servlet api that this servlet
returns a space object for the given space key
returns the patch level of the server
get build id
returns the excerpt of the page content
gets the development build attribute of the add media page object
returns the value of the type attribute for this element
get the base url
returns the value of the pay pal field code owner code
returns the value of the xs namespace attribute for this element
creates a space for the space identified by the workspace key
returns the space string
returns the number of locks held by this lock table
returns the publish date
creates and adds a space to the swizzle
returns the value of the author attribute for this element
get the value of the parent id attribute for this element
removes the space with the specified key
returns all the pages in the specified space
returns a single page
returns a list of page history summary for the given page
returns all swizzle attachments from the current page
returns all the ancestors of a page
returns all the children of the page
returns a list of all the descendants of the given page
returns all the comments for a page
adds a comment to the current session
removes a comment from the current call
stores a new page
returns the content of a page in the workspace
removes a page from the persistence context
returns an attachment for a given page and version
adds an attachment to the swizzle site
removes an attachment to the swizzle server
returns all the blog entries for the specified workspace
returns a single blog entry for the specified page id
stores a new blog entry
returns a list of objects
a method to search a list of objects
returns all the permissions in the space specified by the space key argument
returns all the permissions for a given user
returns a list of permissions for a given page
returns all the space level permissions for the current user
removes all permissions for a group
adds a new user to the database
returns all groups of a user
adds a user to a group
removes a user from a group
removes a group from the database
returns all groups
indicates if a user exists
indicates if a group with a given name exists
edits an existing user
deactivates a user
reactivates a user
returns all active users
sets the user information
returns a user information structure for the given username
changes the old password
changes the password for the user
returns most popular labels in the current conference
returns most popular labels in space for the given workspace key
returns a list of labels that are recently used
returns all labels that are in the space specified by the given key
returns all spaces with the given label
returns all swizzle label content objects having the given label id
returns all swizzle objects for the named label
returns all swizzle objects having the given label
returns all spaces containing the content with the specified label
defines an entry in the swizzle label table
defines a new label with the specified name space key
removes a label from the space specified by the name
called when a new node is identified as being reset
checks that the init problems will be found
called when a new element is identified by the reset method
called when a new update is started
calculates the investment income and tnum of the current timing
calculate the capital appreciation for the specified number of
calculates the amount of loss incurred loss
calculate the source code exposure units and error checks if the parameters
calculate the error if there is one
internal method to start an update with a random value
called for each event in
called when a sequence of calls to update is ended
calculate the exposure units for specified time tnum
return the rate of a given term
calculate the premium rate for the specified record
really start business line update
not implemented in this model
get the calculated rate
return the rate for a given term
the annual rate that is applied to this period
reset the internal state of the object
return the rate for a particular frequency
sets the model parameter as a string
adds init problems to the list of init problems
initialises the model
return the rate of a given term
return the rate for a particular term
checks that there is at least one initialization rate
not supported in this model
do special thing in the model
called when a new update is started
non java doc
returns the rate of interest set for the given term
retrieves the rate for specified time period
does not support special add of child
sets the random number generator
returns the next random number generated by this generator
calculates a random incurred loss rate
check the 0 0 validity of the problem with init problems
returns the last random number generated by this generator
reset the random number generator
method check for init problems
called when a new result is available
get the claims payment proportion
get the accumulated claims made during this period
calculates the number of incurred losses for the specified rnum and tnum
apply the specified timing sofar
returns the amount of cashflows for the specified timing
internal start update called when a new row is to be updated
end of update
ends the update operation for the specified rnum and tnum
get the total realisations
returns the current incurred
returns the current paid
get the number of time periods per realisation
get the number of time periods per year
returns a print writer object that will write the results to the
some special code
check for init problems
gets the time period
returns the value of this glued parameter as a string
clears the tree
deals with child
reset the generator
returns the next double from the random generator
set the payment pattern
clears all children
get the assumed incidence of payments within this and any other
get the proportion of the payment
return the cumulative proportion of the payment
return the remaining proportion of the task
resets all the children of this model bit set
do nothing as this model is not relevant to the tree model
returns the current exposure units
provides the fixed next value that this
set the expense rate pct premium written
add a problem to the log
set the expense rate per exposure unit
set the expense rate pct
resets the result map
test of interest method of class com
returns the current claims paid
returns the number of times a thread has been
get integer result returns the integer result associated with the given result
get the current premiums written
get the current premiums earned
returns a double result for a given result name and time period
test of get proportion method of class payment pattern
get the premiums received
p check whether exposure or exposure patterns are used
get a string result from the cache
the method checks if the model supports addition of some other bit
returns true if this command is already declared in r command
adds a result to the result index
run the rcode without adding it to the output stream
creates a new instance of hide graphics
release all resources
declare the name of the glue class
call the named function in this class with the given arguments
adds a result to the result index
returns a string representation of the object
adds a result to the result index
deal with children
recursive function for total of all children
recursive method to calculate total of the children
counts the number of children
find the child with name or null if none
gets the mix value
gets mixing color
returns the effective radius of the layout circle
sets the edited opacity
returns true if this component has the focus
sets whether blur is enabled or not
get the effective blur radius
p returns the result of the scaling for the specified image
send the client actions to the server
handle the key released event from the text field
invoked when a key has been typed
returns the speed of this entity in x direction
sets the speed of the robot in x direction
returns the robots current y velocity
sets the robots speed in y direction
calculates the current state of this packet
the first object state of the route
returns the next object state
the run method for the networkserver thread
called when the server changes its state
insert an object into the server
insert an object into the server
returns the first object in the list
plays a sound
plays a sound loop
stop the sound
returns the next object in the iteration
sets the volume of the clip
this method is called when the object needs to be updated
sets the nro of the video
sets the pan value
returns the gobject associated with the given id
gets the rolling attribute of the judge object
sets the pitch of the clip in samples
sets the frame nro
assume that the object will be an explosion before inserting it
creates the components
updates the room information with the values from the form
creates and initializes the ui components
updates the room information in the text area
returns the room this player is in
returns the preferred size of the viewport for this component
returns the amount that the scroll bars are supposed to move
returns the amount that the scroll bars should be scaled
returns false to indicate that the width of the viewport does not
returns false to indicate that the height of the viewport does not
get the rectangle of the image
sets the rectangle
set the point
paints the specified rectangle using the specified graphics2 d
sets the current room
returns whether this object has changed since last save
sets the changed flag
returns a room that is in the current direction
returns the direction of the key event
get the preferred size of this component
this method translates a point from point mode to coordinate system
get the original table name
get the title of the file chooser
returns the reverse of this cardinality
get the current upsert status
returns a unique name for this primary key
returns the join condition
returns the table with the given name
returns true if this restriction is ignored
get table by display name
returns the string representation of this timer
sets the xml template
gets the value of the xml template property
get the xml template as a dom document
return the join condition as a sql string
returns the join condition for the role
returns the display name of the given table
returns the condition that is true if this column is a restriction
the name of the data model
get the universal primary key equivalent to the default
returns true if the source restriction is inserted before the destination
returns true if the property is set to insert destination before the
returns the universal primary key
returns true if this restriction is associated with a property
returns the restriction model
append a condition to the existing condition
sets the restriction model
returns the schema that contains this aggregation
transpose this restriction
returns the tag name that is an aggregation tag
get the original schema
the setter for the aggregation schema
returns a string representation of this object
get the database schema
the attribute iterator must be fully qualified if the association ends with a
returns the unqualified name
returns the index of the first character in the dot
return a string containing the list of columns in the table
returns the sql representation of this query
generates the sql for this query
gets the original name
returns the sql representation of this query
returns the sql representation of this query
set the filter expression
gets the value of the xml settings property
creates an sql expression which represents this column
returns the sql representation of this query
sets the xml settings
transposes this transposed state in place
gets whether the data in this column is transposed
for a given association return the string restriction that would
adds a restriction to this query
setter of the property tt entity graph tt
returns a string representation of this object
set the datamodel data model
save xml mapping
appends the comment header
creates a table row with the given content
writes the list of restrictions definitions to the print writer
read the initial data tables
saves the list of restrictions to a file
generates the components table for the given composite
generates the html for a table with a title
returns a string with spaces for indentation
create a link to a domain
link to a table
create a html link to a table
returns the object
sets the object
returns the name of the source
returns the destination name
gets the relationship condition for this association
determine if this association is reversed
returns the association name
remove all the cycles from the graph
check that the aggregated tables can be exported
shutdown the underlying database
hide all the currently selected nodes
unhide hidden panel
render a restriction model
this method initializes j text pane
appends the given text to the output area
defines the actions to be taken when this component is finished
this method initializes load export log
this method initializes load sql log
this method initializes load explain log
updates the menu items
connection to server
display the dialog to open the filter editor for the given table
saves the connection list to the file
edit the connection info
add arguments to a list of arguments for a database connection
repaints the desktop
returns an affine transformation that maps the arrowhead shape
used to refresh the table
sets the plaf
swap the columns at the specified position
creates a list model for the associations list
updates the enable state of the buttons
returns a table model that contains the columns for the current
save the display names for the table
optimizes the layout
save the name of the text field to the name of the file
save a list of table names to a file
saves a list of lines to a file
refreshes the parameters list
refreshes this panel
opens the dialog
reloads the data model
initialize the file chooser
reload all the roots
returns the bounds for zoom box
gets the renderer
returns the color of the given association
internal helper that traverses the association and returns true if
returns whether or not this receiver wants its associations to be displayed
opens closure view and brings it to front
saves this session to file
opens data browser table
restores a session after a file has been saved
renders a table from the association
method to update the sql in the text area
find the restricted association
opens the table
scrolls the specified internal frame to the center of the screen
stores the filter expressions in extraction table
returns true if there is a save in editor that can be performed
selects all cells in the given table
return true if the last row is visible
gets the value of the name entered property
returns parent row browser if limit exceeded
open url and render table
refresh the table
adds a row to the table
shows the shortest path between two tables
sets the total number of rows collected
gets the tool tip text for the specified table
helper method to save the restrictions to a file
this method initializes j text pane
restores the values of the fields in this dialog
checks if the connection dialog has already been opened
sets the database connection dialog
returns the string representation of this cell list
checks if the given line is contained in the line set
execute the given jobs
shutdown all the jobs
removes quotes from identifier if any
writes the current model to disk
creates the type combo box model
restore the selection from the file
create a list cell renderer that will render the type
returns true if the given string is a valid primary key column
writes the contents of the
get the original table name
write the script in a script file
flushes and closes the script file
this is the implementation of the method
returns the prefix to be used for creating the table names
returns the suffix for the create table name
returns the prefix to use for creating the index files
returns the create index suffix
sets the dml table reference prefix to use
sets the prefix that will be used to create the table name
set the suffix for the create table name
sets the prefix to use when creating the index
set the value of create index suffix
hides the given table
returns the string used for the reference prefix for the table
write the script to a script file
returns the prefix to be used for the drop table name
set the value of drop table prefix
renews this connection by executing the script
override this method to return the script to execute
checks whether the given string is the partial body of the template
returns the sql string that will be used in the report
appends an item to the end of the list
returns true if this clause contains no members
closes the visualization
zooms to fit the view to a new size
sets the type replacement map
sets the session temporary table manager
sets the transaction temporary table manager
convert a string to a literal
set the graph
reconnects the transaction
get the format of the script
returns the working folder
returns true iff the comparison process can be completed
returns true if this domain is a sub domain of the given domain
return the string representation of this domain
executes an sql query and returns the number of rows modified
returns the domain that contains the given table or null if none
returns the composite that contains the given table or null if
folder within which the data model is stored
prints a warning message to the standard output stream
reads the sql file and executes it
prints an error message to the standard output
returns the domain tree as a string
read the current row from the given result set
recursively build a domain tree representation of a domain tree
closes the xml document
this will process the start of the xml document
show a table in the table tree
end of a list element
end the document
inserts a column in the specified table with a clob into the database
sets the birthday of subject
executes the sql statement which may be an code long code
returns the total age of the comparison given the current time
checks that all tables in the graph are expanded and the destination
convert a qualified table name to a qualified table name
sets the current age to the given value
rolls back all transactions
for a graph that has just been expanded they can do some sort
checks if the name is valid
returns the total size of the database
filter a specific type name
getter for property introspection schema
internal method to test if an association is unique
setter for introspection schema
return true if the document part contains a document part
two documents are equal if they have the same document elements
gets the data set
checks if the model editor should be saved
deletes the database records
adds a set of entities to the database
zoom the visualization to fit the display so that it fits within
resets the graph editor
returns if the association is visualizable
gets the subject condition
reset the expanded state of the table
unite all open queries to the database using the given entity graph
fix the visual graph
filters the export blocks
returns true if the given table should show the details of the given
deletes all entities from the database given the table
returns the total number of entities in the database given the table
opens a query builder dialog
returns true if the specified table is visible
select table that is used in the graphical view
reads all non traversed dependencies
removes all references to the given table from the database
compare the pk of two table ids
generates a primary key for a table
returns a primary key for a given table and column alias
upk a list of columns in a table
returns the total rowcount
sets the explain
get the universal primary key
this method is called when the server is shut down
sets the root table
set the root item of the selection table
returns a table model that contains the current restriction definitions
creates the subject list
creates the table list model
mark the editor as dirty
returns the code tree model code that is providing the data
updates the sketch text
writes the collected restrictions to the output stream
saves the restrictions to the file
this method refreshes the viewers state according to the changes in the population
expands all the paths in the graph view
shows the reachability of the given table
expands all the paths in the code graph view code
expands all the paths that are visible in the current view
zooms the graph to fit
opens a new column mapper in the sketch
marks the editor as dirty
gets the htree for a given handle
store metric value for the given handle
returns the metric value for the given metric name
removes all metrics for the given handle
method to close the jdbm database
commits all changes to the jdbm database
removes all database records
sets the metric value for the given metric name
set the list of metric descriptors
analyzes all elements of the given metric element container
determine whether the cache is available
calculates the distance between two points on the map
set the metrics view
this method is used to initialize the hashmap of attributes
creates a new row for the table
creates a new row for the table
strange problem with regular expression
this is the entry point method
get all available bars
return the key words for the search result
returns the id of the searchable message component
returns the id of the searchable message group that could not be searched
returns the unique identifier of the message
returns the text to show in the title that can be used to
returns the tagged message tags
returns the id of the tagged message component
returns the id of the message group that this message belongs to
returns the tagged message id
returns the tagged message text
returns the name of this java script class procedure
returns the number of errors
get the named property
returns the adapter connection
returns the error messages generated during parsing
returns the number of warnings
returns the value of the indexed property or not found
returns the class name of this java script class
defines the property by name
get the named property
returns whether the script is compiled
defines the member property by index
sets the value of the named property
sets the value of the indexed property creating it if need be
wraps the given exception into a procedure exception if possible
deletes a variable
gets the data
deletes the element at the specified position in this list optional
returns the class name of an internal types external representation
defines the property by name
returns the prototype of the script
get value of the named property
sets the prototype of the object
returns the value of the indexed property or not found
defines the variable name
returns the parent enclosing scope of the object
indicates if the property value at the specified index is set
set a named property
sets the parent scope of the object
sets the value of the named property creating it if need be
retrieves the default value of this object type
sets the value of the indexed property creating it if need be
sets the value of the indexed property creating it if need be
is there an instance
deletes the specified data item from the data store
delete the named object
deletes the element at the specified position in this list
delete the record at the given index
sets the prototype of the object
sets the parent enclosing scope
sets the prototype of the object
sets the parent scope for the connection
returns the names of the pools
returns a pool with the given name
returns the parameters data
adds a pool to the list of pools
reserve a connection
removes a pool
closes a connection and invalidates the connection pool
removes all pools
evicts the connection
returns the name of this java script class
close this instance
create a new database connection
close the connection
validates an object
returns the name of the series
activates the adapter for the given object
returns the description of the series
passivates an object before its returned to the pool
set the description of the data set
returns the enabled state of this data set
run pool maintenance
sets the data set enabled flag
evict all objects from the pool
checks if a password is already in the database
sets the password of this user
returns true if the caller has access to a particular type
checks if the password hash is set
returns true if the given data matches the regular expression
sets the value of the named property
sets the password hash
check if a built in with the given name exists
sets the value of the indexed property creating it if need be
returns a procedure
returns the name of the ntlm which is associated with this robot
adds a built in procedure
delete the named object
returns the ntlm user
remove a built in
delete the indexed property
sets ntlm user name
returns the prototype of the object
returns the ntlm domain
stores procedure in database
sets the ntlm domain
sets the prototype of the object
verifies if this user has a role
returns the parent enclosing scope of the object
sets the interceptor
sets the roles for the user
returns true if this procedure stack contains the given procedure
returns the height of the stack
sets the parent scope for the object
returns the procedure that appears at the bottom of the stack
returns the procedure that appears at the top of the stack
release all connections in the current connection pool
set the data for this record
returns the name of the command
returns the description of the question
returns the type of the record
gets the value of the bindings property
determines if this context has the given name
returns a linked hash set containing the names of this data object
returns the data store
constructs a new context
returns the type of the procedure
checks if the given method is a matching method of the given type
returns the type name of the given variable
get library being exported
find and return the value associated with a given name
getter for property interceptor
checks if the given object matches the given type
release all resources
this method sets the interceptor that will be used to intercept requests and
returns the description of the procedure with the given name
seal this data structure
returns the call stack
find the data object for name
seals the report head into static data structures from dynamic ones
find local with name in data array
interrupts the thread
returns the number of properties in this set
compares its two arguments for order
compares values of two objects
returns true if the specified path has a file
checks if the file contains data
returns the number of elements in this list
reserves this executor for processing
returns the file object for the given path if it exists or null
find the last modified timestamp for the specified data file
release all resources
indicates whether the specified key is among the properties
gets the directory of the data files of the given type
checks if an index is in the list
returns the current progress of the task
get the file with the given id
returns a map of all files in the project
returns true if this map contains the given value
add a file to the list of files
releases all connections in the pool
remove a file from the list of files
searches for the key of a given value
delete all files in this directory
checks if tracing is enabled
this method is called when the session is bound to the user
gets the index of
will call remove all files on session
logs a message to the configured log file
gets the value of a property
log a message with the given indentation
returns the url of this page
record the fact that this session has been bound to a session
when the session is unbound from the session we are called
returns the element at the specified position in this list
returns true if the current user has access to the system
get the description for command line
returns the bindings
returns true if this is a file upload
returns true if the current user has access to the file
get the description of the measurement
returns the value to which this map maps the specified key
get the description of the prototype
checks if the given method is supported by this
get the description of the measurement
returns the element at the specified position in this list
returns true if there is a session
get the description for command line
get a string associated with the given configuration key
returns true if the response type of this method is no response
gets the description attribute of the file filter filter object
returns the string at the specified index
returns the path of the request
get the description of the measurement
get a boolean associated with the given configuration key
this is used to acquire the url that this http request is
returns the boolean value at the specified index
get the authentication scheme of this request
returns true if this member has access to other members
a description of this test case
returns the value of the named parameter as a string or null if
get the description of the measurement
returns the value of the specified request parameter as a
get the description for command line
returns the data object for the given key
returns the next file on the current folder
gets the description of the filter
get data at the specified index
get the description of the encoding module
get the description of the measurement
returns the current session
get the description of the command
send clear response type no response code
get the description of the measurement
send an authentication request
get the description of the measurement
send data to the client
get the description of the measurement
send a file to the remote host
runs the process
send redirect to client
get the description for command line
send an error response
get the description of the measurement
this can be used to set a http response header to this object
get the description of the measurement
disposes of the operating system resources associated with the current
adds a new value to this simple type
get the description of the measurement
get the description of the measurement
commits the dynamic headers to the response
this method creates a new environment data object
get the description of the prototype
commit static headers to the response
get the description of the measurement
commit the authentication
commits the data to the client
initializes the application
appends the specified int value to the end of the list
removes a value from the property file
commit the redirect to the client
loads the data plugins from the data directory
remove a new element from this sorted list
commit the response to the client
destroy this library
initialize the servlet
destroy all plugins
destroy the physical context
destroy this stage
gets the config
gets the value of data store
creates a data store for the given plugin id
get the plugin with the given id
adds a plugin with the given id
gets the value of environment
check if the request path is in the rapid context
remove a plugin from the store
checks if the specified file is present in the storage
checks if the store contains any data of a certain type
process basic authentication response
finds the file with the specified path
finds the timestamp for the given data type and id
reads the data of the given type and id from the default data store
returns the directory where plugin jars are stored
initialize this plugin
called when blojsom servlet is taken out of service
get the class loader used by this plugin
get the description of the command
initialize this plugin
destruct the plugin
initialize this plugin
de registers the plugin and releases all resources
returns the ip address of the client that sent the request
unloads the specified plugin
activates the connection
returns the base directory of the webapps files
passivates the adapter
destroy a plugin
closes the connection
this method is called by the servlet container when the servlet is destroyed
get the default value for a parameter
commit all changes since the last commit
get a description of the driver and parameters for example
rolls back all changes executed against the database
executes the given sql statement
get the description of the command
executes the given sql statement which may return multiple results
find the call context for the specified thread
executes sql query and returns the first result
find the first context with the specified thread id
get the description of the command
you must have to sort the fields in the sql field order
this method is called when the adapter is activated
passivates this adapter
this method is called when the adapter is closed
find the index of an operator in the sql statement
this method is called after commit of the transaction
this method is called after undo is called
returns a url on the server
returns the http headers
find a column in the sql statement that matches the given string
initialize this plugin
de registers the plugin and releases all resources
get the description of the measurement
bind a value to the prepared statement
get a description of the request parameter
bind the operator in the data value
checks whether the given flag is set or not
bind null into condition
this method is used to determine if the provided value is
condition for sql
returns a string literal representation of the given object
convert a string to a literal
given a number return a string representing the number
convert the list of data into a literal
this is a callback that will allow us
set the focus to the panel
message the chain of chained methods
creates a new dom document from a file
lecteur de fichiers fecha
fecha o do arquivo
set the endpoint address for the specified port name
sets the network market id value for this wsyetki kullanici
sets the home page description value for this job ticket
sets the logo image value for this wsyetki kullanici
sets the pay pal email value for this order type
sets the google merchant id value for this wsyetki kullanici
sets the two cosid value for this signer
sets the header url value for this archive locator
sets the footer url value for this search retrieve request type
sets the inquiry url value for this wsyetki kullanici
sets the thumbnail size value for this wsyetki kullanici
sets the template width value for this job
sets the font size value for this wsyetki kullanici
sets the secondary color value for this application status
sets the tetriary color value for this wsyetki kullanici
sets the background value for this job ticket
setter for property background2
sets the background3 value for this wsyetki kullanici
sets the background image value for this job ticket
sets the product image size value for this search retrieve request type
sets the markets url value for this search result scene ticket
sets the market info url value for this quote data
sets the pages url value for this search result element
sets the mobile no value for this phone return
makes a unique string for the given global string
makes a unique string for the given global length
makes a unique paragraph for every word in the given global global
store a string in the global to store
store the token of a token in global
prints global string to system
store the length of the global in the string global to
adds the prefix to the global variable
adds a suffix to the global suffix set
returns the book id
set the book id
returns true if this set contains no elements
returns the top item off of this stack without removing it
returns the top item off of this stack without removing it
pushes an item onto the top of this stack
returns the one based position of the distance from the top that the
returns the value to which this map maps the specified key
associates the specified value with the specified key in this map
returns a set view of the mappings contained in this map
returns the type of the wrapped object
parses the specified string into a conversion object
returns the class of the field that matches the supplied type
formats a value according to the conversion specification
initialize a map from the given field map
returns an unmodifiable set of the entries
cleans up the variables
returns the field entry for the given key
gets the country
set the css class attribute for the component
sets the id attribute
set the lang attribute
sets the style attribute
sets the title attribute
set alt attribute
set the border attribute
sets the height attribute
sets the width attribute
executes when the tag is finished
test method for
prints the localized url for the current locale
tests that the secure filter does not perform any authentication
returns true if the country for the given locale is set
checks if the value is null or not
returns the context path of the current request
test method for
tests that a template url can be retrieved
test method for
test method for
tests the get resource method
test for method security roles
tests that the security roles for sub resource can be found for sub
tests that the security login is set correctly
test method for
tests the get raw config method
test closing a message
test that a tag can be added to a message
test whet the resource to be loaded as path
test for end tag
regression test for harmony 2237
tests the getter and setter for the subclass value
test that get internationalized config resource correctly returns a configuration resource
tests the getter methods
test method for
tests the getter and setter for a raw value
test method for resource manager config get factory properties
test property values with different factories
tests the get method with a default value
tests the get int method
tests the config
tests the get double method with configuration exception
tests config get double method with default parameter
tests the functionality of get boolean
test method for
tests the get from xml method with a name attribute
test that the custom converters are invoked
tests that an xml element with a property is correctly set
test the get map method
test method for
test method for
tests the get map method when it has a sorted map
tests whether localized attribute is correctly configured
test method for
tests the retrieval of a list of values
begin user doc
initializes the resource factory
tests that configuration exception is thrown if configuration file doesnt exist
get the resource
loads the connection factory properties from the properties file
test the retrieval of a delimited list
returns a string representation of this exception
tests that properties are expanded
returns a string representation of this object
returns the pattern to be used in the test cases
tests that system properties are expanded
test method for
sets the view for the page
sets the value of a view
adds a parameter to the current view
test whether class and test name matches
returns the value of the named attribute or null if not found
handles an error by invoking
test internationalization of map
initializes the servlet context and filter init filter
sets the context path
releases the resources used by the test
handles an error
returns the exception that was raised if any
indicates if this context has an error
tests that the overflow can be created that is not circular
this method releases any resources allocated by the registry
initialize the invocation context
test that the raw data is correctly returned
returns the invocation context
gets the mock request dispatcher
setter for property real path root
mask the given uri in the masked list of dispatchers
sets the value of the auth type property
returns a url to the resource that is mapped to the specified
gets the resource as stream
returns the output string
set the url to the view to be displayed
sets the value of the remote user property
adds a parameter to the view
adds a parameter to the parameters map
this method is called when an error occurs during parsing
handles an error
get the view name
returns the name of the error page that should be used
returns the real path for a given virtual path
returns the redirect url
sets the default view
sets the url of the default error page
encode the next value of the current value of this enumeration
returns the template for the page
returns the security login for the user
gets the security encryption to be used for this user
return an iterator over all parameter names
returns the raw configuration of the application
returns the error message associated with the specified parameter
get the map of all defined configuration names
returns the controller of the controller
get the controller that is being edited
return an iterator over all method names
return the method configuration for the specified method
is this method an initializer
returns the default view name
start the execution of the controller
returns the name of the default error page for this controller
returns the name of the method
adds a parameter that should be set as missing
checks that the default value is valid
the stop method is called when the controller is stopped
get controller configuration
adds all the invalid multi parameter exception objects to the map
returns the detail message string of this throwable
returns the underlying exception that caused this exception
override get to do lazy initialization
adds all invalid params to exception
gets the iterator for the request
initializes the filter
get the value of a parameter
initializes the servlet
initializes the filter
adds a map of invalid parameters to the map
destroys the filter
returns the value of the named initialization parameter or null if the
destroy the filter chain
returns the filter info map
returns the names of the servlets initialization parameters
matches the uri to the pattern
returns the controller of this module
sets the key
initialize the match all patterns
set the resource of the agent
set the basename
process the do end event
this method is called after the jsp engine finished processing
returns the map of init parameters
process the start of this tag
release all allocated resources
returns the class name of the filter for the given filter name
checks the security of the current user
clean up after parsing is complete
returns the resource mapping
initializes the filter class map
set the i18n
cleans up the state after the object is deserialized to the destination
init param map
release all allocated resources
returns the key of this property
print the localized url
sets the key
initialize the list of patterns to match the filter
sets the object
print the localized url
returns true if the country for the given locale is different from
return the resource name for the tag
returns the text of the first child with the specified tag
set the property
set the path to the resource
set accesskey attribute
add a parameter to the command line
set name attribute
releases all allocated resources
derive an extension from the xml element
executes when the request is finished
set the target attribute
the form tag for this component
releases all allocated resources
generate the required input tag and body content
sets the action attribute of the form tag object
sets the type of the property
cleanup any temporary data structures
reset all the fields
get the name of this object
clean up after parsing is complete
set the validations flag
sets the normal pattern
set whether to perform validations or not
set the name for the component
returns the name of the component
sets the error pattern
get the validations flag
sets the page context to error pattern
executes the tag
parses a given list of options
print the label for the field as we are using
get the value of a property
gets the localized value for the attribute
initializes the jsp bean
get the cached request data from the servlet context
executes when the tag is started
cleans up the state after the tag has been parsed
executes when the tag is finished
set accept attribute
sets the type of the component
derive the label from the label attribute
sets the enctype attribute of the form
cleans up the factory
set the method
returns the value of the named parameter as a string or null if
executes when the tag is started
set the property name whose value should be displayed to the user
get all the parameter names
gets the value of property
returns the map of parameters keyed by name
adds a parameter to the parameter map
executes the form
sets the object to be used for rendering the tag
adds an attribute to the element
process the end of this tag
return the url for the action
get the name of the object this factory bean will use for rendering
returns the value of the attribute with the given name
releases all allocated resources
gets the validations attribute of the field bean object
returns an iterator over all the names of all attributes
returns the name of this property
store the default object in the page context
sets the disabled attribute
returns the attribute map
sets the el
sets the object to be displayed by this tag
set maxlength attribute
set the options for this field
print all the attributes
returns the el
p return the result of the last test run
cleanup this iterator
return the result of the tag tag execution
this gets called when the jsp engine encounters the end tag
set size attribute
sets the el
get the value from body content
determines whether last call to
return the result of the tag that was found
find the value to display for the tag
return the options map
cleanup any resources held by this wrapper
the parameter tag is the tag that contains this tag
set the cols attribute
gets the value of collection
evaluate the el expression based on the given expected class
cleans up the state after the application is finished
process the start request
sets the variable name
return the value corresponding to the given expected class
cleans up the state
set rows attribute
returns the value of the property that was found
executes when the tag is started
process the end of this tag
print the parameter values
method called after each evaluation of body
set wrap attribute
process the start tag
p cleans up after an xml schema tree has been parsed
return true if there are more objects
get the parameteretrized tag of the containing element
init iterator for collection
returns true if there is an error message associated with this exception
return the result of the tag execution
cleans up the test
executes when the tag is started
render the beginning of this form
sets the iterator
return the error message
process the do end event
return the test result
gets the iterator
print the error message if there are any errors
cleans up this content handler
process the start tag by creating a new filter
print the details of this h2 block
returns the ordered map stored under the given key
get the raw value of the key
print the error message to the output stream
this method is called to process the text within an element
gets the string value of the configuration property
print the label for the field as this tag
receive notification of the end of an element
returns the value to which this map maps the specified key
returns true if the text is needed for this element
get a map of factories
add the property to the data
returns a map of the properties of the specified resource
derives a property name from the root element
returns the value associated with the given key
adds a resource exception to the chain of chained exceptions
return the chained exception
compares two resource ids for equality
get the properties for this processor for display purposes
parse a string into a date
returns the int value of the given configuration property
formats a date according to the current locale
returns true if this is a simple type
parse the first token of the given string into a character
parse a number from a string
returns a string representation of the value
sets the param details
formats a number
parse the value as a number
parse the string value as a float
parse the string value as a number
parse a date time string into a java
formats a date time
parse the string value as a number
gets the int attribute of the properties file object
parse a string into a date
parse a string into a date
formats a date according to the java
formats a date according to the java
parse the boolean value as a boolean
parses the given string value
formats a value
parse the string value as a code double code
formats a value
parse the string value as an int
parse the string value as a conversion object
formats the given value
returns the double value from the configuration properties
returns a string representation of this table
logs a message at debug level in the context of the specified class
log a message and exception
log a message to the log writer associated with the specified context
log a message
gets the double attribute of the currency handler object
returns the user id
indicates if the current user is in a given role
returns true if this request has been authenticated
returns the authentication scheme of this request or null if there is none
log a message to the servlet context log for this servlet
logout from the system
get the configuration value as a boolean
writes the specified message to the servlet log file
returns the http servlet request
log to system
returns the boolean value associated with the given key
returns the value of a property as a string
return a sorted map of the given key
print the start of the tag
looks up and returns an unmodifiable map of all the keys values
gets the localized attribute of the configuration bean
print the checkbox tag
returns the value of a property of the given object
returns the data collected during the analysis
returns an iterator over all attribute names
return the filter associated with this holder
print a fixed html tag
returns the parent configuration
print a hidden tag for the input type
sets an attribute for this request
print the password tag for the component
adds a property filter
get the raw value of a key
returns the validator
print the select tag
sets the default attribute values
returns the string representation of a given object
returns a map of the sequenced key with the specified length
print lt textarea gt tag
returns the value of a property of the given object
derive a label from the name of the filter
print a text tag
determines if the property is writeable
returns the converter
returns a getter method for the property
returns the setter method of this property or throws a
this method checks the bean class
derives the datatype property from the configuration
returns all line items of this order
get the name of this item
add an item to this order
indicates if this line item has been newly created
indicates whether this record has been newly created
returns code true code if this item is new
get the user id
gets the stories
get the user object for the user who created this web log
checks if the user is authenticated
returns the redirect url
returns the name of this authentication scheme
gets the story
this method is used to log out the user
gets a new user
gets a comment by id
check if the current user has the required roles
gets the other user
getter for property new story
returns the new comment or the preview if preview is true
login a user
registers a new user
logout the user
convenience method which returns a reference to a web log user object
parse a string
sets the reply to id
gets the value of the reply to id property
this method returns a request dispatcher for the given uri
tears down the test environment
returns an example bean instance
this is a method with two parameters
example method to invoke the example model
returns the index of the specified key
opens a scan on the merge scan s1 and p2
process the first scan in the database
returns the number of blocks accessed
processes the next scan
returns the maximum number of records that will be output
get the name of the field
get the value of this constant
returns the number of distinct values for a field
returns a scan that can be used to scan the table
returns the schema
return the table information object for this field
returns the constant value stored in the given field name
positions the range on the first
equality check for group equality
returns true if the next token is a match false otherwise
returns the hash code value for this set
opens a schema and prepares it for parsing
closes both streams
returns the number of blocks required to store information
returns the value of the given field name
return the number of records printed so far
opens a scan on the table
p open the results of the runs contained in the source
retrieve the integer value stored for the specified field name
get the number of distinct values for a field
this can be used to determine how many blocks are accessed
returns the number of blocks that are accessed by this query
place one element before the first
returns the string value stored in the specified field name
returns the number of records that are output
how many records have been output
return the schema for this source
returns the number of distinct values for a field
return true if the given field is present in the current scan
returns the number of distinct values for a field
close both underlying streams
saves the position of two rid
process the first scan
restores the state of the group before first
increment the count
restore the position of the saved position
get the name of the field
returns true if the value is a joinval false otherwise
returns the value of this constant
compare two scans
this will iterate over the aggregation until the next group
closes the stream
returns the file name of the file
returns a constant value from the specified field
get the block number
retrieve the constant for the given field name
returns the integer value stored for the specified field name
get the file channel for a given filename
returns an integer field from the second field
returns the string value stored for the specified field name
add a new plan for select operation
returns a string from the specified field
make a join of the current plan
returns the integer value at the offset
creates a product plan of the given plan and adds it to this
check if a field exists
flush all buffered data for the given transaction
returns the string value at the specified offset of the
returns the number of available bytes in the buffer
writes an integer to the specified offset of the
writes a string to the specified offset of the
returns the block containing this variable
joins this query with the given predicate
return the value of the entry as a java val
moves the cursor to before the first element
opens the project scan
move the iterator forward to the next segment
check if the scan satisfies the criteria for the
calculates the number of terms to be reduction by removing
gets a constant from the structure
returns the schema
select all terms in the schema that match the given schema
advance to the next non satisfied state
applies this predicate to two schemas to each other
return the value of this constant as a constant
returns a scan object for the conditions to select
sets the specified value in the specified field
returns the field name as an code java
evaluate a scan on the value
returns a constant equated in this set of terms with the
returns the number of records that are output by the predicate
whether this code schema code applies to a sch
returns the number of distinct values for the given field name
this returns the schema for this object
returns null if there isnt an equate field
returns the number of terms to reduce from a plan
return a constant representing this expression
return a string representing the field this item is
returns a scan that can be used to scan the table
return true if this schema applies to the given schema
get number of accessed blocks
return true if the given scan satisfies the given condition
returns code true code if the wrapper has been set
get records output
returns the number of distinct values for a field
return the value of the literal as a java
returns the type of the object
opens a scan with two scans
returns this type as a constant
returns the number of blocks accessed
get the field name as a string
returns the number of records written to the output stream
are there more records left to read
evaluate a scan in the database
returns the next int from the current position
indicates whether this field applies to the given schema
returns the next string from the current position
get the next log record
flushes the current log
moves to the next log block
create a plan for a query
adds the specified value to the page at the position denoted by
obtains the lock for the given block
lock the given block if it has any block in the cache
release all locks which were allocated by the cache
returns the size of the given value
commits the current transaction
returns the number of the current lsn
writes an object to the log
rolls back the transaction
writes the log to the log
writes a record to the log
tx number 1
writes the current page to the page buffer
performs a recovery of the database
unpins a buffer
writes a transaction to the log
clear the current page and append it to the log file
writes to the log file
pins a block in the buffer
commits the transaction
clear the current record
writes the transaction to the log
rollbacks the transaction
unpins a value
unpins this block
recovers the transaction log
returns next record to write
returns the table name
returns the integer value stored at the
writes a setint record to the log and returns its lsn
returns the predicate that defines this condition
returns the index name
returns the name of the field
writes a setstring record to the log and returns its lsn
returns the views name
returns the string value stored at the
returns the query definition for the query
return the name of the target field
returns the new value of this expression
rollback transaction operation
stores an integer at the specified offset
do recovery if necessary
match the token delimited string with the given delimiter
does this token match the given constant
returns true if the block is a temporary file
returns a new schema object
stores a string at the specified offset
match a constant against the token
test if the current token matches the given keyword
returns the number of blocks in the specified file
match the token with the given id
eats the next token if the next token is the delimiter
appends a block to the end of the given file
eats a constant
eats a string constant
eats the next token if the next token matches the given keyword
eats the next token if the match wasnt a unique id
closes the page
search for new blocks in the tree
go to next slot
this method creates a new root entry block and inserts it into the
get the rid from the current data object
inserts a directory entry into the btree
delete the current rid
formats the page according to the current format in the record buffer
initializes the puzzle
moves the iterator to the next node
returns the rid of the data contained by this leaf node
inserts a new record in the constant tree
delete a constant dataval
closes the current node
returns the slot with the searchkey
closes the current call of
is this slot full
splits a new block into two separate blocks
returns the value of the data at the given slot
open the iterator
resets the index to the beginning of the list
returns the constant value of this field as a data value
moves the cursor to before the first entry
returns the block number
returns the status of the current record
move to the next element
open the scan
closes the index and the ts
answers the number of blocks that are accessed
use this method to get the number of blocks accessed
move the index of the next element
returns the constant associated with the named field
how many records there are in the output table
set the status of the current record
returns the integer value stored for the specified field name
returns the number of records written to the output stream
returns the string value stored for the specified field name
append a new block to the end of the file
closes the iterator releasing any resources i
returns whether the specified field is present in the current time
returns the number of distinct values for a field
return the child number for a given slot
returns the constant for the given field
initializes initializes code srasaction code with all attributes of this
returns true if there are more elements in the enumeration
insert a new direction constant into the given slot
returns the integer value stored for the given field name
gets the data contained in the block
returns the name of the file
inserts a constant value into the given block
gets the data in a given slot
returns the string value stored in the specified field
deletes a constant value from the given block
returns true if the specified field exists
closes the currently open ts
inserts a leaf in the given slot
returns the offset of the specified field name
add a new field to the structure
returns the record length
add an integer field
delete the record at the given slot
get the block number of the block
add a field to the current row
adds a feature to the field attribute of the schema object
closes the block
returns the number of records in the current transaction
adds all the schema information in the given schema
advance to next page
formats the page according to the given size
returns the integer value stored for the
check if the field is in the list of fields
returns the string value stored for the
close this rp object
stores an integer at the specified field of the current record
returns the type of the field
moves to before first
stores a string at the specified field of the current record
deletes the current record
moves to the next block
returns the length of the specified field
inserts an empty page at the page
gets an integer integer value from the specified field
move the given slot to the given id
returns the string value for the specified field name
this method returns the current slot
sets an integer field in the specified field name
set a string field in the currently supported field
opens a new index schema with a default name
delete this resource
the number of unlockable blocks in the model
inserts the current record somewhere in the current block
returns the number of blocks in the file
get the number of records written to the output stream
returns the number of records written to the output stream
returns the number of distinct values for a field
moves the specified rid to the specified rid
returns the number of distinct values for the output record
creates an index entry with the given name and table name
copy the current temporary table into a new temporary table
returns the rid of the current rid
create a schema
returns the number of blocks accessed
return number of records in output
positions the current record so that a new chunk will be read
move to the next block
returns the number of distinct values of the given field
this method can be called by the scanner when it matches a chunk
close the scan
returns the constant value of the given field name
returns the number of columns in the model
returns the integer value stored in the specified field name
creates a new code remote statement code instance
returns the name of the column at code column index code
closes the transaction
returns the string value stored in the specified field name
returns the type of the column
returns the display size for the specified column
return true if the given field is present in the document
creates and returns a new remote connection
executes the given sql query string
executes an update command
advance to the next page
returns the integer value stored in the specified field name
returns the string value stored in the specified field name
returns the metadata for the remote object
close the connection to the remote server
find a connection from the pool given a url
sets the value of the account id property
gets the value of the recipients property
sets the value of the recipients property
sets the value of the mime message bytes property
gets the value of the get account by email result property
gets the value of the send email result property
sets the value of the get account by email result property
create an instance of
sets the value of the send email result property
create an instance of
gets the value of the get account by id result property
sets the value of the get account by id result property
gets the max number of results
sets the value of the max number of results property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the access code property
sets the value of the access code property
return the result of enqueueing outbound jobs
gets the value of the get available phone numbers result property
gets the value of the get account by phone number result property
gets the value of the set call flow xml result property
sets the value of the get account by phone number result property
sets the value of the enqueue outbound job result property
sets the value of the get available phone numbers result property
sets the value of the set call flow xml result property
get call flow xml
sets the value of the call flow xml property
gets the value of the get mime message result property
gets the value of the get pop3 messages result property
sets the value of the get mime message result property
sets the value of the get pop3 messages result property
sets the value of the get mime message bytes result property
create an instance of
create an instance of
get the account manager id
sets the value of the acct mgr id property
create an instance of
returns the messages xml
create an instance of
sets the value of the messages xml property
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the get account result property
sets the value of the get account result property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
returns the contact xml
create an instance of
sets the value of the contact xml property
create an instance of
create an instance of
create an instance of
sets the value of the folder id property
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the create contact result property
gets the value of the get contact result property
gets the value of the get contacts by modified result property
sets the value of the create contact result property
sets the value of the get contact result property
sets the value of the get contacts by modified result property
gets the value of the create folder result property
sets the value of the create folder result property
returns the folder xml
gets the value of the until property
sets the value of the folder xml property
sets the value of the until property
gets the value of the get events by start result property
gets the value of the delete event result property
sets the value of the get events by start result property
sets the value of the delete event result property
create an instance of
gets the value of the create event result property
create an instance of
sets the value of the create event result property
create an instance of
returns the event xml
create an instance of
sets the value of the event xml property
create an instance of
gets the value of the update event result property
create an instance of
sets the value of the update event result property
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the get calendars result property
gets the value of the get events by modified result property
sets the value of the get calendars result property
create an instance of
sets the value of the get events by modified result property
create an instance of
returns the calendar id
sets the value of the calendar id property
sets the value of the event id property
gets the value of the get packages by reseller id result property
sets the value of the get packages by reseller id result property
gets the value of the get billing groups result property
sets the value of the get billing groups result property
gets the value of the add misc debit and charge result property
gets the value of the poll credit card charge result property
returns the billing interval group id
sets the value of the add misc debit and charge result property
gets the card queue id
sets the value of the poll credit card charge result property
sets the value of the billing interval group id property
sets the value of the cust id property
sets the value of the card queue id property
gets the value of the add misc debit result property
sets the value of the add misc debit result property
gets the value of the get acct mgr by username result property
gets the value of the get accounts by acct mgr id result property
gets the value of the get account by remote info result property
sets the value of the get acct mgr by username result property
sets the value of the get account by remote info result property
sets the value of the get accounts by acct mgr id result property
sets the value of the community id property
gets the value of the get acct mgr by id result property
returns the billing group id for this tax bucket
sets the value of the get acct mgr by id result property
create an instance of
sets the value of the billing group id property
get the remote id
create an instance of
gets the entry type
sets the value of the remote id property
sets the value of the entry type property
gets the product type id value for this product type
create an instance of
sets the value of the product type id property
sets the value of the summary property
create an instance of
sets the value of the amount property
returns the cycle day
create an instance of
sets the value of the cycle day property
gets the value of the get reseller purchase report result property
create an instance of
sets the value of the get reseller purchase report result property
gets the value of the get remote accounts by type result property
gets the value of the get credit cards result property
sets the value of the get remote accounts by type result property
sets the value of the get credit cards result property
create an instance of
sets the value of the card id property
create an instance of
gets the value of the charge credit card result property
sets the value of the charge credit card result property
getter for property start statement id
create an instance of
sets the value of the start statement id property
create an instance of
create an instance of
gets the value of the remote account type id property
sets the value of the remote account type id property
gets the value of the get acct mgr result property
gets the value of the get billing intervals by group id result property
sets the value of the get acct mgr result property
create an instance of
sets the value of the get billing intervals by group id result property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
getter for property login result
sets the value of the login result property
returns the alignment along the x axis
returns the y alignment of this layout inside its container
returns the string representation of this code grid layout code
set the debug flag
set the entry factory to use with this registry
sets the debug flag
closes the stream
gets the record size
skip bytes in the input buffer
marks the current position in this code buffer code
reads a byte from the current tar archive entry
reads bytes from the stream
copies the contents of the current tar archive entry directly into
initialization common to all constructors
determine if an eof has been read
get the current block number
returns the current record number
write a tar buffer block to the archive
close the tar buffer
this method stops the tomcat server
register a war with the container
unregisters a war from the container
calculates the value of the factor for the given parameters
returns the index of the resource with the given name
returns the nth queue wait time
returns the number of jobs on the nth queue for runtime
calculate the job runtime for a given runtime
reads the data from a file
wait time for queue waiting for a certain period of time
returns the maximum fault tolerant of the nth
returns the greater of two numbers
returns the text value of a node
create a xml element containing a pay load to the client
returns true if an error occurred during the processing
calculate the time in milliseconds to submit a job
read the stdout from the sessoin server
returns the time spent waiting in the queue
converts a date format to a minutes format
returns the system info for this class
adds an attribute to this node
converts the attributes to a string suitable for
returns a string representation of this object
generates a new token id
get the unique id of this class
called when a workflow has been submitted
overridable method for processing lines in different ways
gets the value of the officers on duty property
sets the officers on duty
gets the value of the fire men on duty property
sets the fire men on duty
returns the burn center property
sets the burn center property
returns whether this panel has cardiac center
sets the has cardiac center value for this placement
updates the account from the users file
stores the users information to a file
set the command name for this command
generates a new unique id that is unique within the group
getter for the workflow id
returns the status of the operation
sets the status of the algorithm
returns the parent folder
get the root folder of this folder
set the parent of this folder
adds an element to a tree viewer
this method is called upon plug in activation
creates a zip system zs tree and adds it to the task tree
close the given zip item node
cancels all the tasks
sets the word to be edited
makes the given instance managed and persistent
find an entity by id
counts the number of entities
merges the given entity with the current persistence context
remove an entity from the database
persist the given entity
remove the given persistent instance
returns the number of items in the zip file
return the uncompressed size of this zip file
create a new empty map
adds a new item to the given map
create a new empty list
a new empty set is created
adds a new item to the list
adds a new item to the given set
creates a mock object with a default properties
creates a mock object
creates a mock object
all properties for the specified object will be ignored
instantiate the given constructor
creates a directory path
deletes the file
returns a short description of the servlet
calculates the value of the tile type modifier for the current position
calculates the influence of the value of the player
calculates the distance between two points
calculates the value of the tile at the given point
sets the tile type
generates a random tile of the given type
handles the action events generated by the user
draws the value of the potential values on the screen
sets the ratio that the renderer draws the field
calculates the distance between two points
resets the recorded game
move the player in the given direction
updates this code model code
updates the list of players
sets the current player state
called when the agent collides with another
adds an ontology to the current list of owlentities
returns a new session with an anonymous user
returns the session for the given user id
adds an ontology to the current list of ontologies
get the mrraccess interface
gets the id of the local metadata record
load a schema
checks if a parameter with the given name exists
method that returns the type of the current value
returns a new session object
p returns the value of the property
gets the keys of the shared map
get an anonymous session
returns the uri of the repository
checks whether there is a next asset to be read
retrieves the next asset
returns the unique identifier of the shared object
compares the id with the id stored in this object
returns the repository display name
get the id
returns the ontology model that belongs to this model
writes the ontology in the given output stream
returns the last instance of the class
returns the last instance of the class with the given name
creates an owl model from the given input stream
getter for property ont
gets the ns attribute of the elvis ontology object
return the number of sub classes in the current ontology
return the number of individuals in the current population
gets the size of the related ont resource
gets the navigational ontology query
do a query to get the results from loby on the server
returns the size of the collection of ont resources
returns the number of elements in this collection
gets the relation name of a resource
gets the number of individuals
returns the ontology that is attached to this query
method to get the relation name of a related class
adds an interest point to the current session
gets the relation name
adds an interest point to the current session
adds a list of interest points to the current session
removes an interest point from the current session
gets the size of the related resources
gets an ont resource by name
gets the relation name of a resource
checks if the ont resource is present in the model
compare the id with the given one
get the id string for this object
returns the next function in the iteration
check if there is a next function in the iteration
method to update the description of the current user
add the given id to the list of children of this qualifier
check to see if this is a child of another node
check to see if there is another authorization in the current session
returns true if the given ancestor is a descendant of this node
returns the next type
tells whether the underlying iterator has another type
update the expiration date for this authorization
update the description for this authorization
get the name of the function reference for this
remove the given parent from the list of children
get the description of this authorization
update the effective date for this user
returns the next type in the iteration
has next type
change the parent of this node
returns true if the authorization is explicitly set to an explicit
check to see if there are more elements in the iteration
returns code true code if the current session is active now
returns the description of the component
returns the last modified date of the authorization
returns the expiration date for the current request
returns the name of the reference for this component
test of create dated authorization method of class wikipedia
returns the effective date of the authorization
returns true if this user is a parent of a principal
test of get functions method of class com
test of get all user azs method of class authorization
set the configuration properties for this osid
test of get explicit azs method of class scio
test of get explicit azs by func type method of class scio
test of get explicit user azs method of class scio
test of assign osid context method of class com
delete the qualifier passed in
test of assign configuration method of class com
test of get explicit user azs by func type method of class scio
test of get root qualifiers method of class scio
delete the function given by the id passed
test of get qualifier descendants method of class com
test of get qualifier children method of class com
test of delete qualifier method of class scio
test of delete function method of class snap rule
check whether an agent exists in the system
test of agent exists method of class org
test of get function method of class id wrapper
test of get qualifier method of class id wrapper
delete an authorization entry from the user database
test of delete authorization method of class com
test of get explicit user azs for implicit az method of class
test of supports maintenance method of class com
test of supports design method of class com
returns true if the client supports maintenance requests
test of osid version 2
test of is user authorized method of class com
returns true if the currently authenticated user can create a design device
test of get who can do method of class teambob
test of get qualifier types method of class org
test of get qualifier hierarchies method of class de
test of create root qualifier method of class com
create a new osid version 2
test of create qualifier method of class scio
test of create function method of class snap rule
test of create authorization method of class com
test of get function types method of class org
check whether the user is authorized to access this qualifier
test of get osid context method of class com
test of create function type method of class converter
test of create qualifier type method of class scio
returns a cache key for the given function and all roles
this method creates a cache key for the given osid and shared id
compares two persistent nodes for equality
compares two objects for equality
assign a context to this osid
return the display name for this hierarchy
compare the id with the given id
this implementation supports maintenance
test of assign configuration method of class com
test of assign osid context method of class org
get the description for this hierarchy
test of update display name method of class org
test of get display name method of class be
get the description of this hierarchy
tests that deleting a hierarchy
test of update description method of class org
test of supports maintenance method of class classifier
test of osid version method of class org
test of get description method of class saga
test of get osid context method of class org
test of remove node type method of class org
constructs a new mit id object
test of add node type method of class org
get the string representation of this id
get the display name for this hierarchy
compare the id with the given id
test of get node method of class org
test of create node method of class org
test of create root node method of class org
test of get all nodes method of class org
returns true if this hierarchy is a root
test of get node types method of class org
test of allows multiple parents method of class eu
test of allows recursion method of class hierarchy
return true if this hierarchy allows multiple parents
test of get id method of class com
returns true if this hierarchy allows recursion
returns the value of the parameter as an integer
returns true if arg starts with
initializes the mib value
initializes the mib value
initializes this value
creates a mib symbol object identifier object
reads a line from the file
initializes the mib
initializes the mib
checks if the specified type is compatible with this
creates the constraints for a value symbol
initializes the mib with the default values
checks if the specified type is compatible with this
initializes the mib with the default values
checks if the specified type is compatible with this
initializes this symbol with the object identifier value
initializes the mib symbol
loads a mib file
returns a string representation of this node
loads a mib file
unloads a mib
unloads a mib
unloads a mib
schedules a load on the mib module
removes the indent of the given string
replaces tabs t in the string
returns true if the character is a space character
returns the contact information
unloads a mib
opens a loader dialog and loads the mib files
adds all references to the mib type
adds all named numbers as a node value
adds the index mib value as a node value
replaces the executor with a new executor
returns the element at the specified position in the list
push a node onto the stack
pops the last pair from the stack
the main entry method
this method initializes m main panel
returns the script panel
returns the image panel
returns the history text
returns the text area for the input text
this method performs the actual computation of the formula
parses the given expression and builds the ast
this method initializes script tool bar
extract the parenthesis nodes from the neighbouring sequence
saves the current script as a modified script
clears the current script text
load script from a file
save the current script to the file defined by the
save the current script to a file
returns the value of this constant
runs the given script
sets the parameters of this parameter object
parses the given string
returns the cosine of the first argument
returns the value of the sine parameter
returns the largest value of the zdt5 function floor
returns the smallest value of the zdt5 function ceil
reads and evaluates the command line
returns the absolute value of the function
returns the square root of the square root of the
returns the maximum value of the function
read the command and return the result
returns the minimum value of the function
returns a random value between 0 and 1
evaluates the command
print all the values in this store to system
add a script variable to the store
returns the value of a variable in a given scope
looks up a variable with a certain name in the given scope
removes all variables that have been stored in the store
does this script store contain a variable
finds a mathematicament of a variable
sets the children of this node
evaluate the not operator
returns the value of the zdt2 multiplication
returns the division of this number
returns the value of the operator addition
returns the value of the zdt5 function subtract
returns the modulo of the expression
looks up the regex blocks that match the given code string code
returns the value of the zdt5 function greater
returns the value of the zdt5 function greater or equal to
returns the value of the zdt5 function less
looks up the word surrounded by math blocks
returns the value of the zdt5 function less or equal to
returns the not equal operator for two operands
returns the value of the equality operator
extract a macro block from the given string
extracts a string from a string
clears all variables
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
add a parameter to the query
test of extract method of class extractor ast
reads the next byte from the stream
called by dispatch command
connects to a manually closed socket
close the connection
returns the next string from the input buffer
initialize the implementation of this page
closes the connection
loads the policy file at given url
init the implementation
init the implementation
closes this factory
loads the policy file at the given url
called when data is received
notify all listeners that the socket is ready
notify listeners that the socket is connected
notify listeners that the socket was closed
notify all listeners that data has been loaded
notify all listeners that a security error occured
notify listeners that a socket error has occured
adds a listener to be notified when a socket is closed
removes a listener from the list of listeners
connects to the given host and port
disconnects from the server
shuts down the socket
returns true if the connection is ready to receive connections
returns true if the shut down flag is set
returns the number of bytes that can be read from this socket
this method is called when the client is ready to accept a request
called when the connection was successfully established
called when the connection is closed
called when data is loaded
io error event handler
fires an error event when a security error occurs
checks whether the socket object is ready to be sent
checks whether the socket was shutted down or not
forces any buffered output bytes to be written out
writes a string to the socket
reads a boolean
reads a line of text
reads a byte
reads a double
reads a floating point number from the socket
starts the server socket listening
show a message in the message text area
reads an integer from the socket
inits the socket
sends a message to the server
reads a short
reads an unsigned byte from the socket
reads an unsigned int
reads an unsigned 16 bit number from the socket
prints a message to the user
reads a string from the stream
reads a string
reads a string line from the socket
reads a line of text
writes a boolean to the socket
writes a byte to the remote socket
writes the given array of bytes to the output stream
writes a double value to the socket
writes a float to the socket
writes an int to the socket
writes a short to the socket
writes an unsigned int to the client
writes a string to the socket using a character set
write a newline to the output
reads the next byte from the stream
this method is invoked when the response of toc is received
sets the verbose flag
sets the secure
adds a text to this buddy
closes the connection to the client
check if this actor is near another actor
initializes the data
starts a search
get a single public api result for a given count
reorders the position in the list according to the old position
adds a movie at a given position
returns the position of the first disc movie in the list
returns the subsystem status code
get the current filter state
this method initializes j frame
this method initializes j menu
this method initializes j menu1
this method initializes j menu3
this method initializes j menu item
this method initializes j menu item1
this method initializes j radio button menu item
this method initializes j radio button menu item1
this method initializes j check box menu item
writes the header for the tex index file
ensure that specified resource exists
serves a new resource to be added to the repository
serves a zip file and adds it to the list of managed resources
serves a resource and adds it to the list of resources
ensure that the directory is deleted
adds a serializer to the pipeline
computes the result text the minimum number of characters that
this method uses
this method uses the
returns the numbering of the child node
sets the numbering of a child node
adds an entry to the
sets the solution
sets the code
sets the root node that should be displayed in the tree
getter for property tree browser action map
sets the context menu
sets the editable property
merges this node with the given
returns the drag node
sets the model to be used with this page
returns the compound undo manager
make the node specified visible and focus
propagates the selection of numbering dialogs to the numbering context
gets the tree model
gets the value of the current user id property
sets the current user id
loads the given model
gets the metadata for the backing object
this method is called to inform that the children of the given node
change the numbering of the child node
returns the activity state for the given content node
return a validator model for the given content node
returns the selected variant
abort the login process and shutdown the controller
login to the server
returns the node that is being edited
finish a group
sets the presentation name to the specified string
sets whether this event firing undo is on change
called whenever the value of the selection changes
removes the specified content node from the tree
set the help text
sets whether this model is firering undo when the selection changes
sets the current selection and fires a selection change
setup the gui specific effects modifiers
sets whether an event is firering undo event on the selection or not
sets the presentation name to the given string
p invoked after nodes have changed in some way
returns the model of this component
destroys a frame
get the basic service instance
opens the web page previewer if it is available
display a content to a node
schedules a job to be executed on the server side
handles server request events
sets the model
returns the context node of this node
set the context node for this action
update the action states
processes a server request
shows a dialog showing the number of deleted results
dispatches the event
returns the path to the course node
ensure request is served as a resource
ensure that the serve stream is available
finds a resource with a given name
maps the given uri against the current resource path
finds the source for a given resource
this method reads the uri value of a xlink href
uses our own entity resolver
uses the null entity resolver to get the current entity resolver
registers a stream for output
it is called before the hud is run to process the output
returns the number of cache entries in this cache
returns the result of applying this hierarchic constraint
this method returns the path to the given node
sets the base directory
returns the editing strategy for a node type
returns true if the node exists and is a directory
synchronizes the index with the metadata
synchronizes internal index of the metadata
returns the metadata index file
sets the metadata index file
return the filesystem resource manager
set the filesystem resource manager
returns the file object of the store
returns the internal id of this node
sets the internal id
returns the resource path of the inner resource
returns the innermost resource path of this resource
checks if the node path is not null
utility method to ensure that the resource path is not null
returns the resource variant
test that a handbook record is presented in the paper bundle
expect a node validation result which will be a node validation result
test context node browse action
test that node
test the setup method
test of get configured property method of class com
test the get configured string as bad resource uri
test the underlying model to null when the branch model is null
tests renaming a node in the tree
test rename node state
test de serialization of a node
test for the creation of audit fields
test abnode deletion
test for the delete method
test delete last history node
get a key from an array of bytes
load the texture list from the file
add a texture tile to the tile list
returns the type of the user
adds a film to the wishlist
dequeues a given film with the given id in the database
checks whether the given code film id code is queued in the wishlist
returns all queued films for all given users
gets the amount of queued wish lists
check if a user exists in the database
searches all the records for a given film with the given name
searches for all persons in the database by name
searches for a result set using the director
searches all the genres in all db for a genre
gets the layer 1 images
search by award
searches all the film by year
gets the list of images
gets the first node in the list
adds an image to the list
gets the list of images
add an image to the first node
get an iterator over the elements in the list
draws the current scene
returns the title of a movie
loads the images from the given file
loads a cutscene from the given file location
checks if there is a next node in the iteration
draws the world
returns the next node from the list
loads the current state of the menu and sets the background image
returns the genre with the given id
returns the year of a given movie
returns the movie description of the given movie
adds a movie to database
deletes a movie
get the name of a person
get the id of the last person in the database
deletes a person
adds a new award to the db
deletes a award by id
delete a user
add a film performer director to the database
adds the film award
adds award to the db
returns the probability of the given gesture
for debug purposes only
prints out the current centeroids map
sets the default probability for each sequence
compares two arrays if they are equal
returns the default probability for the distribution
returns the probability of the state given the
method button press received
adds a new acceleration event to the data collection
returns the last data stored in this packet
resets the gesturemodel
add a gesture listener to this manager
checks if is recognition init event
indicates if this event is a train init event
checks if the mouse is close
sets the sensivity
sets the button used for training the phone
adds a filter to the list of filters
sets the recognitionbutton
sets the close gesture button
reset all filters
adds a wiimote listener to the list of listeners
adds a gesture listener to the list of listeners
fires an acceleration event
fires a motion start event
fires a motion stop event
fires a button pressed event
fires a button released event
resets the model
print the map
removes the first element of the list
prints out the current centeroids map
prints the current state to the console
the acceleration received
sets the logger to use for outputting
used to set the train button
delegates to the device
sets the close gesture button on the device
add a device listener to this device
adds a gesture listener to the list of listeners
fires an acceleration event
fires a button pressed event
fires a button released event
fires a motion start event
fires a motion stop event
test get description
this tests that a stack trace for the request is fast and
this tests that the queue is not longer request
borrow an object from the pool for the specified key
this will clear the contents of the buffer
get the maximum number of concurrent connections allowed for a pool
get the wait limit
this filter is called at the beginning of the event
run all the reports
called before each request
reads the input and creates the array of values per stream
add a new record into the database
called after the request is executed
destroy the servlet
we avoid code like this
initialize the servlet and get the expected values
destroy the stage
format the duration in hours minutes seconds
this method is called before the http request is executed
this implementation does nothing
creates an inspector for the given parameter
called after the time request is executed
called by the server via the http servlet request
return a report for this probe
create an inspector for this request
the run method for the thread
we avoid code like this
gets the value of the load1 property
returns the load5
put int int int int
gets the value of the load15 property
initializes the filter
closes the logfile
runs the bulk load process
set an attribute for this tag
calculates the load value for the given double expression for the given
compares this principal to the specified object
returns a hash code value for this object
record the fact that a servlet context attribute was replaced
sets the new value of the attribute name
gets the date header attribute of the gifcodec object
return the path information for this request
get remote user
returns the request uri
get the request url
returns the url of this servlet
returns an enumeration of all the names of the attributes
returns an enumeration of all the locales in this bundle
get the parameter names
get the protocol name
returns a request dispatcher object that acts as a wrapper for the
returns the name of the server
returns 80 the server port
set the character encoding
returns the local port to which this socket is bound
returns zero because there is no remote port
sets the t model key
gets the friends
begins the process of finding a new token using the specified
resume this data mappers
this is called after processing
save the token secret in preferences
delete the token secret in preferences
create a workflow process from the source file
consumes the dynamic assignment handler for the given activity
returns a sql representation of this property
set the business time attribute
get net instance by process id and version number
get a bean from the factory by name
returns the description of this task
disables the contributions
enable this service
returns the ratio of all dead units in the robots
return true if all the dead peaks are considered
makes this object relative to the specified point
this returns true if there are more swarms
load the level name from the file
parse a trigger type swarm
load the property from a line
parses a string to an integer
parses a string to a float
add an upgrade to this model
add the given upgrade to the list of upgrades
returns true if any of the components are enabled
returns the upgrade state or null if there is none
toggles the upgrade
test update with no prior
test method for
test method for
test update with all the
set the annotation value by parsing a given string
returns the hash code for this object
returns the hashcode for this object
notification that the servlet context has been
notification that a session has been created
notification that a session has been destroyed
remove a sub feed
fetches all the rel feed items of a feed item
returns a random text to sign
returns a string representation of this object
adds the implementation bean to the bean map
replaces the given implementation bean with the given implementation bean
returns the unique reference id for the given bean
this method marks the connection as ended
returns the current session id
add a bean to the list of beans in use
remove the bean with the specified id from the list
handles the invocation of a method call
marks the connection as started
write a reply to the output stream
called after the connection completed
removes the publish job
reads and returns the correct request
returns the method invocation handler for the given name
write the altrmi request to the output stream
read the next reply from the message stream
registers the given implementation with the factory
get the text to sign for authentication
sets the listener for altrmi connection events
sets the connection pinger for this node
processes a method request with an arguments
returns the invocation handler that actually sends the invocation
set the listener for altrmi connection events
event indicating that a method has been called
this method is called when a method is called
starts the service abended
returns the id of the reference for this factory
p get the published name
returns the type of reply code
externalizes this instance
externalizes this instance
constructor for altrmi callback exception
set the configuration
return the size of the message
write the message to the given output stream
closes the context
sets the from header using the given address
returns a unique name for the mail
verifies that the mail addresses of the recipient list are valid
the main thread of execution for this class
this method is not supported for this implementation
gets the address of the mails in the given mime message
run the james spool manager
writes the specified message to a mailet log file
writes the specified message and exception to a mailet log file
returns a hash code value for this object
writes the specified message to a mailet log file
writes the specified message and exception to a mailet log file
returns the advertisement of the local peer
gets the value of the input pipe property
prints the default coordinates
change the shape list
get the draw zone
changes the mode of the panel
switches between drawing mode
switches to the user mode
switches between rotating and rotating
switch to scale mode
switch to shear mode
this method repaints the tree
repaints the panel
calculates the origin of the window
sets the number of sides of the die
group current selection
intersect the current selection with the current selection
substracts the current selection from the scene graph
creates a new exclusion list
start a new selection union
add a new selection to the selection list
interpolate current selection
clones the current selection
deletes the current selection
removes the current selection from the scene graph
sets the current shape type
display the popup menu for this component
draws the board
sends a move to the server and terminates the job
gets the piece at a given coordinate
called when the user clicks on a game list
this method returns the move that is being played
wait for move to be done
returns true if the thread should be removed from the pool
puts the piece at the given coordinates
removes the piece at the coord
this method converts the coordinates in the format
prints the board to the console
returns a new move that is reverse of this move
prints a piece to standard out
applies a move to the current location
starts the graphical user interface
place the vulcanos in a temporary space
method that returns the message of the error
returns the source of move from
returns the target of this move
put the piece at the location
removes the piece from the location
updates the server board of the given move
applies the given move to the given board
returns true if the two coordinates are equal
get the message of the exception
get the type of the error
checks if a given coordinate is empty
sets the location of the end point of this code line2 d code
prints a piece on the console
returns the piece at the given coordinates
get the location of the point
gets the piece type
determine if this square is red
starts the game
the piece is placed on the board
places vulcanos on the board
places the opponent pieces into their respective pieces
puts a piece at the given coordinates into the given piece
generates a new image
this method is used to check if a piece is more to be placed
returns whether it is turn
changes the turn
return true if this edge is a face
checks if a move exists
determines if the given move is a mid move
checks if a move operation exists
determines whether the given move is an inner move
performs a move
ai turn it is
sets the board of this player
returns the score of all the pieces in the game
returns the current score of the current player
sets the score of the current page
moves the iterator to the next node
returns the head of the list
returns the current node
checks if a move exists
set the current node
set the head as the current one
checks whether a move operation exists
set the current element as head
getter for corner weight
returns the edge weight
getter for property mid weight
getter for property inner weight
add a node to the end of the list
return the node at the given index
returns the number of next nodes
sets position of this match
set the position of this match within the string
returns the board
sets the board
sets the list of next nodes
returns true if the receiver is a leaf
return the largest score among all the nodes in this subtree
return the highest score
tests whether the given token is accepted by this filter
initiate the resource
passing the focus request to the viewers control
process the given number of hits
this method initializes system group
sent when selection occurs in the control
invoked when the mouse button has been double clicked pressed
mouse button was pressed
invoked when a mouse button has been released on a component
this method does nothing
this method is called by the drawable to initiate drawing
called when the display mode of this drawable object changes
changes the alias of a buddy
this method initializes preferences group
this method initializes services tab
imports a node into the storage
called when this bundle is started so the framework can perform the
filter a service event
resolve the target bundle
get a collection of values for a property
add jars in the specified directory
this method generates a synd feed and writes it to the standard output
add a bundle to the manifest
add a new entry to the feed
starts the dispatcher
returns the peer that generated this event
returns the target peer
returns the next line of the file or null if none
sends an event to the time table
test serial instance
loads the registry from the file
stores the registry in the file
get the resource context for the specified type
process the connection
get the customer service
load data from the database
sets the sandi file name to be used in the look and feel
set the class name of the character serializer to use
set the class name of the adaptor to be used for building the
set the class name of the node instance factory
set fixed mode
assign the instance
set local launch configuration
this method is called by the message consumer when a new message is
returns the type of security this service implements
handle request and response
handle request and response
debug output routine
close the session
get the wire security
print debug message if debug flag is true
get the context
returns the implementation wire security
initialize this object
lookup a topic
prints debug text
this method logs an error using the node logger
sets the link for the inbound files
this is where we initialize the form
gets the value of the inbound files link property
this method logs the information using a node logger
gets the inbound files dir
adds a subscriber to a node
sets the outbound files link
method for echoing incoming request
returns the hidden field value
remove a subscriber from a node
gets the outbound files link
returns the boundary of an input line
gets the outbound files dir
retrieves the messageable for the given instance name
get the value of an attribute
this method is called when the user clicks on the find menu item
this method is called when the user clicks on a add button
initailizes the data structure
return the string of the output of the process
returns the string buffer for the output stream
this method is called when the user clicks on a edit menu item
this method is called when a new instance of this class is
removes an instance of the given class from the store
this method returns the map of the parameters
this method is called when the user clicks on a display
cancel a previus user action
returns the config file name
this method is called when the user clicks the delete button
this method is used to filter the text to display in the filter
get the code urender input code instance
allows to edit the selection of the list
get the appropriate output direct
logs the message with the given severity
get the output stream to use for writingrenders
the console directory for inbound files
get the output string to use for the generated ui
track a form
set to true if editing is allowed
inserts the help file before the help file
the console output directory
track a form call
get the name of the node instance
returns the servername
return the messageable node with the given name
returns the file specification of the given file
find a node that can be name
returns the path to the properties file
get inbound files dir
builds the standard mbean class name from the specified
convert the given text to an action
strip the name of the mbean class from the name of the class
builds the standard mbean interface for the given
the outbound files directory
return the standard mbean interface for this class
get the hidden field value
initialize the object i
set the value of the hidden field
returns the logger for the given node instance
indicates if this form is allowed to edit a selected folder
indicates if this form allows editing of read only
returns the deployment prefix
write the postamble to the client
get the instance class enumerator
log the message
build and return a file specification
returns the file specification of the given file
track a form
write the file
write the interface for debugging
write the postamble to the client
do the work of filtering
returns the build file specification string
builds the file specification string using the build driver class
return a new servlet input
find the class doc for the given name
builds the file specification string using the given build file
returns the build file specification string
check if a class is abstract persistent or not
returns the build file specification string
get a new instance of the output stream
writes a log message and the data manager to the given output
to get the output string
returns the build file specification string
returns the file specification of the given file
returns the build file specification string
dump the mapped tables for debugging
returns the form mode for the selected user
get the null for this field
dump the user work log to the output writer
find the class doc for the given name
convert a java type into a database type
initialize form manager
returns the sandhome
gets the sand projects recursive
given an element return the file name
returns title which is the first part of the element index
returns core spec for the element index
returns the link
return the path of the rel root
count the slashes of the given text
returns a string of spaces for indentation
decode selection type to analyze first 3 digits and return
writes the generated documentation link to the output stream
get the mapped struct name for the given struct
writes the javadoc link for the given element index
get the mapped field name for this field
get the mapped field type for this field
get the mapped field relation for this field
get the mapped field for this relationship
get the mapped field name of a child
get the mapped field relation index from a field
detects the file on the filespec and tests if the
adds a feature to the required by attribute of the sand project object
checks if the given field has a required field
removes a required by from the sand project
adds an environment file
returns the spec of the intro file
sets the sand uideployments
adds a new uid
filters a line containing the html nodedoc start and
returns the gen decls
build a link for a node name
add a sand gen declaration to this package
adds a child to the first child in the list of children
remove a child from the child list
removes the child at the given index
check whether this store supports the remember me cookie
write the method definitions to the given stream
name of the field
fired whenever a message is logged
fired after the last target has finished
length of the value
returns the errors
specifies the ok escapes
the directory where all sand files are stored
write the class field
name of the configuration entry
find a project with the given name
describes the type of the property
returns true if the value of this object has changed since
returns the name of the project and directory of this project
write the class dump array method
returns the qualified name of this class
entry name for the executable process
fully qualified name of the class to be generated
source file for the output
source scope for the generated source
the runscope attribute
name of the project
the value of the changed flag
extra option string
class file name
type of this context
impl class to use for the generated classes
gets the generator src dir name attribute of the perforce vcs object
the name of the owner node lookup
remember me flag
the passphrase to be remembered to the user or not
string used forgot password primary key
user name forgot password secondary
maximum time in minutes
prints a line of text to standard output
log the text to system
returns the root project for the build
directory to store files to
add class path
method generate jar exists
sets the build root
dump the search path to the given class loader
convert an array of strings to a path
returns the attribute
sets all the structs of this source file
returns the value of the parameter
validate the fields
sets all the nodes of this graph and also to be a list
returns true if the given message is equivalent to this message
returns the short name of the attribute
sets all the structs and nodes
returns the tools jar name
returns the url of the tools jar
a request has been specified and has to be processed
gets the record hash map
clone this attribute and return a new instance
return the encryptor used to encrypt this filesystem
returns the authentication filter
log the text to system
initializes the collection of objects for the code tree map code
returns the number of
convert a key value to the translation of the given key
to key convert string value to key
checks if there is a project with the same name ignore case
trims the last update
write the class load array method
debug output of the dependency graph for the given project
get the branch disallowed text
returns the reference validation failure
get the bad reference failure text
returns the bad reference prefix
set the directory where generated jar files will be placed
called when a write has been requested
notifies all the readers that there are waiting for all input streams
notify the writers that the oldest personal lock has been changed
sets the directory where the build trigger will be stored
initializes the logger
log a message with a given severity
log a message with the specified log level
logs an error message and information concerning the
find the project with the given name in the build root
get the value of a parameter
find the project in the build root with the given name
remove all cached sources for the class and its sources
returns the project which is a leafmost project of this sand project
get the generator information string
set whether this device supports actions
returns the fully qualified name of the persister class for this data model
returns the data source from the persister
returns true if the given action is supported
returns the unique idmanager class name
track the file writing
returns the converter class name
returns the class name of the perst conv class
disables specified action
delete a file
return a shortened version of the given class name
check if the mode is ok
get user dump auth
debug for matches
an idspecified binding is one where a value is unique
get the source file name
returns the specified unique id for the given attribute
starts the retry process
initializes the object
tracks a file writing
initializes the parser
returns the text after the current token
returns true if there are more tokens
returns the tag map
return the path of the current mode stack
get the source file name without the package declaration
filters a line containing the html nodedoc start and
sets the path of the current mode to the given value
deletes a file
the read only flag is set to true
extracts the source base sand declaration from a message
inits the position of the robot to the given position
this method returns the package name for the given class
returns the position path of the current token
sets the position of the token in the string
errouts a form field with a error
adds a tag to this block
writes the short name array
write the long name of a declaration to the stream
writes the struct messages to the output stream
write the constructor and init section
helper method to write a subtree to an array
gets the mapped field name of the struct class
get the mapped struct name
returns the mapped field name of the given field
get the mapped field name of the instance
gets the mapped field name of the parent class
gets the mapped field name of the field
get the mapped field relation index
check if the screen is secured
writes the declaration of the type declarations to the given array
return the class name of the current form bean or collection
returns true if the current field is valid according to the
returns the parent message of the current message
retrieve the value for an attribute
returns the current object
returns the field at the current position in the array
writes the source of this update on a given stream
retrieves the last position entry
return the index of the current field
move the position up one level
this method evaluates the position of a position sand instance message
resets all forms from a found context
get the low level permission
prints trace information
normalize all references to the message
returns true if the given action is a form manager action
checks if the object is uninitialized
return true if this is a collection view
prints a debug message and then returns the result
this method verifies if there is a subproj file created by this factory
return true if this view is for a collection
get the prompt used for class disambiguation
returns the field validation failure text
returns the prefix used to display fields that are not in the
adds hours to the current date
adds 1 to the current day of the week for holidays
checks if this day is a holiday
returns true if the class is a login message class
inserts the pop up html page
do some cache of authentication each user cache sub cache sub
returns the action handler
returns the delegated authorizer
write messageable info to the given stream
tells whether the sum of the action is recalculated
dumps the toc access
convert the given text to html
convert the text to xml format
convert sand uilink string to anchors
get the name of the associated node
sets the inbound files link
do some cache of authentication each user cache sub class must
get the name of the node
returns the inbound files directory
returns the inbound files link
return the inbound files directory
sets the outbound files link
the link to the outbound files
the outbound files dir
track the current form
gets the outbound files dir
gets the work log
this method is called when the user clicks on a login button
this method will filter the text to display in the filter
given a dirspec file path return the dirspec string
execute in the following order
clone the selected message
convert sanduilinks to uilink css
sets the stats asynchronously
convert a report link to a string
get an instance of the entity
creates a transaction
close a transaction
reload all the entites on the database
starts the creation of a entity and returns a string representation
execute and return the results of the selected query
display list of all search fields
saves the entity
save the currently selected instance
switches to another entity
add a message to the message editform
parse the query string and return the query string
retrieves the safe contents from the specified index
set the directory name
returns the asn1 sequence of all the inner types
generates a human readable representation of the object
this method sets the ip address
adds a purpose to this certificate
sets the key identifier
this method checks if this structure contains a particular purpose
adds a new cert issuer distinguished name
sets the certificate serial number
gets the path len constraints
returns a collection of the oid values that were added to this
sets the state of the ca
generates a human readable representation of the object
adds an extension to this crl
returns true if the option is critical false otherwise
sets the extension value
implemented abstract method from
sets the issuer of the name
sets the date of the next update
sets the next update date time of the
set this update date time from a java
invoked when a window is set to be the active window
invoked when a window is no longer the active window
invoked when a window is changed from a minimized to a normal state
invoked when a window is changed from a normal to a minimized state
invoked the first time a window is made visible
unlocks the door
launches the door agent
launch agent window
launch agent unlock agent
this method is called by the timer when it expires
notifies this agent that a new behaviour has been restarted
returns the bounding box
returns the shape type
length of the record
write a byte array to the array
create a new esrifloat poly
creates a new esrifloat poly
return the number of bytes required to store this
creates a new esrifloat poly
writes an int to the stream
reads lat lon point into an array
code get x code returns the x coordinate of a given
code get y code returns the y coordinate of a given
add a bounding box to this figure
adds an array of points to the polygon
adds the given point to this esripoint
initialize the header of the file
compares this object against the specified object
returns true if this shape is a polygon shape
set whether this shape is a polygon
writes the header to the file
adds a new primitive to the polygon
returns the bounding box
returns the record length in bytes
returns a bounding box for this shape
returns the length of the record
write a byte array to the array output stream
get the shape type
returns a string representation of the object
gets the shape type
write a little endian integer at the given offset
determines whether or not two points are equal
returns the bounding box of the current file
adds a record to the shape file
verifies that the record buffer has at least the specified size
sets the queue size
returns the state of this ap
this method is called when the agent is moving
initializes the space
sets the center of rotation
make a clone of the agent
sets the x y z factor
sets the z factor
suspends the ap
make this code fsmbehaviour code active
sets the minimum radius of a hill
wakes up the thread and makes it sleep for the specified number of
make a state transition from em waiting em to em active em
sets the minimum radius of the sphere default is 1
initiates a state to delete the ap if it was
this method picks an object if present from the internal
this method declares this agent attitude towards object to agent
this method is called when the agent is leaving the graph
this method is called before the move method is invoked
this method is called after the move method is invoked
returns a string representation of this condition
default implementation does nothing
this method is called before the reload method
this method is called after reload of the tree
this method is called before the freeze of the wizard
called after thawing
removes a behaviour from the agent
retrieves the agents service helper
initializes the internal state of the pis instance using the given input stream
this method is used to interrupt the thread
checks if the given string is a package or class or class
remembers a timer for the behaviour
called by the system when a timer times out
notifies this agent that a new behaviour has been restarted
sets the arguments
registers a new code codec code for a given language
looks up a previously registered code codec code
removes a language from the list of available languages
registers an ontology with the engine
returns a previously loaded ontology that has the given name
deregister an ontology
fills the content of this exception with the given list message
extracts the content of the message into a list
start a named agent
called when this is called from the server
makes a copy of the current location
suspends the ap
make this code fsmbehaviour code active
wake up this thread if it is currently running
make a state transition from em waiting em to em active em
initiates a client session for the ap to delete
return the content manager
initialize the class list
returns the most outer sequence that is not a sub sequence
sets the xml configuration file
sets the thread check value for this field
sets the group config
set strict lock sequences
release the resources
throw a hazelcast instance
releases the current session
check if the current thread is allowed to start another thread
this method throws a lock operation exception if the operation is not
this method throws an exception if the operation is not valid
sets the outer sequence lock
sets the inner sequence of this lock
retrieves the value associated with the given key from the pool
send the message
increment the reference counter for this data source
decrement the reference counter for this data source
returns the reference counter
returns true if this object is garbage collected
return the mutex decorator for the given lock key
returns the smtp hostname
the port that will be used when connecting to the smtp
converts the stack trace of the given throwable to a string
converts stack trace elements to a string
tries to unproxy the given object from the source
returns the internet address of the sender of the current xdr data
sets the internet address of the sender of the packet
return the agent id for the mbean server
returns the root of the hierarchy
returns a thread given its id
returns true if two objects are equal
the scheduled executor service
get the quartz scheduler service
job execution vetoed
job to be executed
unregisters as a job listener
returns true if the dialog is done
this method throws a lock operation exception if the operation is not
this method throws a lock operation exception if the
asserts that quartz scheduler has been initialized
set the logger for this factory
sets the execution phase of the method
sets the interpreter to be used by this interpreter manager
sets the exception that caused this exception
setter for property target arguments
sets an environment variable
sets the target return value
sets an environment property
sets the environment properties
return the parameter name loader for this compilation unit
sets the list of the chains for the actual algorithm
setter for property parameter name loader
returns if this peer is locked by any other peer
getter for property strategy name
release the lock
throws an exception if the operation is not active
constructs a new interpreter and starts it
this method throws a lock operation exception if the operation is not
returns the subject of the script node
returns the milliseconds
returns the script node that caused the error
sets the subject of the message
sets the message
converts the time to milliseconds
waits for the task completition
set the logger to use
p implementation of the tt invoke tt method
sets the property name value map
returns the name of the property to set if any
set the reflection helper
get the reflection helper
this method ensures that the bean configuration has been set
returns a new one derived dummy response dto object
get the next token
returns the current symbol
returns true if there was an error in scanning the document
tests the method two
fills the fifo queue by walking the class tree
apply a class filter to a node
adds an argument to the list of arguments
returns the ast that was parsed
set the type value of this parameter
returns the type of the value
returns the parent node of this node
sets the parent node of this node
returns true if this is the root node
checks if is leaf node
adds a child node to the list of child nodes
check whether the server is configured to send recovery messages
set whether or not to send recovery messages
construct the tree from the given input
get concentration log text
sets the logger map
set the log script
method start log session
method end log session
sets the order number of the lock on the file
returns whether the given log level is enabled for logging
this method compares this lock information to another lock information
set the reflection helper
creates a name for the sequence to be used for locking
set string helper
sets the set helper
setter for attributed to partition
returns the cache for the named cache
returns true if this node is the root of a partition tree
return the no cache if it exists or create one if not
set the names of the cache
convert a list of raw dumps to a string
returns the max block wait time
get the max block wait time unit
remove a crawler from the list of crawlers
sends a string to the client
send a string data to the crawler
creates a temporary file
returns the number of milliseconds since january 1 1970 00 00 00 gmt
validate the source
returns true if the given name is a well known type
write an xml schema type declaration to the specified output stream
returns dot net type of the field
return the java type of the field
returns true if the given qname is a well known type
returns a description of the position of the last read operation
returns true if the given qname is well known to the type system
returns true if the given vertices are isomorphic
returns the error
returns the from user
this is used to get the http status code from the server
this is used to get the status message from the server
set the user agent to use for this job
get the content type
gets the file
returns the content of the file as a string
encodes a string into base64
posts the content to the specified file
get the header with the given name
returns the user agent
returns the to user
returns the url to the database
sets basic authentication on the server
add a request header to the store
get the message
returns the client that received this event
checks current users authorization
add request header
adds the given headers to this requests
writes the pid value to the pidoutput stream
writes the pid value to the pidoutput object
returns the pid
reload image from a file
get the preference store
call back funtion of button open
reset the image data and update the image
fit the image onto the canvas
zoom the image on the whole client area
zoom in around the center of client area
zoom out around the center of client area
returns gravity on the surface
criptografa senha
returns the next token in the stream
opens a new connection to the server
disconnect from the dcom
returns true if the client is connected
returns true if the connection is established
disconnects from the remote host
set the logger in built log
this method initializes this
this method initializes j button
this method initializes this
this method initializes j radio button
this method initializes j radio button1
this method initializes j text field
this method initializes j text field1
this method initializes j jmenu bar
this method initializes jogo menu
this method initializes j menu
this method initializes j menu
this method initializes j menu item
this method initializes j menu item2
this method initializes j button enviar chat
this method initializes j ta chat
this method initializes j tf chat
this method initializes j scroll pane
this method initializes j cb palitos mao
updates the current location
draw the position
sets the criteria for the search
converts a number of microdegrees to the number of 1 mus
convenience method for creating a new location overlay
called by the constructor to initialize the object
returns the logging configuration
set whether transactions are tracked in or not
sets the log rollback flag
sets the pretty print sql statements
can all the procedures returned by get procedures be called by the
clears all warnings reported for this code statement code
closes the statement
commits all changes executed against the persistent store
adds the given sql command to the current batch of commmands for this
creates a statement without auto wrap statements
can all the tables returned by get table be selected by the
creates a code statement code object that will generate
cancels this code statement code object if both the dbms and
creates a statement
retrieves the current auto commit state
moves the cursor to the given row number in
clears the batch
a sub space of this connections database may be selected by setting a
does a data definition statement within a transaction force the
retrieves the current holdability of result set objects created
clears all warnings reported for this code statement code object
retrieves the number types and properties of this
retrieves this code connection code objects current transaction isolation level
closes the statement wrapper
is a data definition statement within a transaction ignored
retrieves the first warning reported by calls on this statement
moves the cursor to the front of
executes the given sql statement which may return multiple results
retrieves whether this code statement code object has been closed
retrieves whether this code connection code object is in read only mode
retrieves whether or not a visible row delete can be detected by
cancels the updates made to the current row in this
executes the given sql statement which may return multiple results
this method is not supported
returns a connection that can be used by the driver
todo not implemented yet
creates a callable statement and wraps it in a wrapper
returns the maximum time in seconds that this data source will wait while
retrieves the log writer for this data source
sets the maximum time in seconds that this data source will wait while
sets the log writer for this data source
executes the given sql statement which may return multiple results
creates a callable statement object for calling database stored procedures
did get max row size include longvarchar and longvarbinary
creates a callable statement object for calling database stored procedures
executes the given sql statement which may return multiple results
creates a default code prepared statement code object that will generate
creates a default code prepared statement code object that will generate
executes the given sql statement which may return multiple results
retrieves a code result set code object that contains the attributes
creates a default code prepared statement code object capable
deletes the current row from this code result set code object
adds a set of parameters to this prepared statement object
executes the given sql statement and signals the driver with the
cancels this code statement code object if both the dbms and
creates a default code prepared statement code object capable
empties the batch
creates a default code prepared statement code object capable
returns the best row identifier for a given catalog and table
executes the sql statement in this code prepared statement code object
maps the given code result set code column name to its
executes the given sql statement and signals the driver that the
executes the sql statement in this code prepared statement code object
creates a default code prepared statement code object capable
executes the sql statement in this code prepared statement code object
retrieves the catalog names available in this database
removes the given savepoint object from the current transaction
executes the given sql statement and signals the driver that the
moves the cursor to the first row in this result set object
todo not implemented yet
rolls back all changes performed by the code accept changes code
executes the sql insert update or delete statement
executes the given insert update or delete statement with a single
executes the given sql statement which may be an code insert code
whats the separator between catalog and table name
rollback any changes made to this savepoint
retrieves the value of the designated column in the current row
executes the sql insert update or delete statement
sets the auto commit attribute of the jdbc jdbc connection object
returns the fetch direction
retrieves the fetch direction for this
whats the database vendors preferred term for catalog
this automatically generated method either overrides the implementation
retrieves the value of the designated column in the current row
changes the holdability of code result set code objects
whats the fetch size of this result set
retrieves any auto generated keys created as a result of executing this
retrieves the value of the designated column in the current row
get the privileges of a database column
sets the read only attribute of the sqlbasic dao object
retrieves the maximum number of rows that a
returns the generated keys
creates an unnamed savepoint in the current transaction and
moves to a statements next result
retrieves the value of the designated column in the current row
creates a savepoint with the given name in the current transaction
moves to a statement objects next result
returns the maximum number of bytes allowed
retrieves a description of the tables columns in the given catalog
this method is not supported for this database
retrieves the number of seconds the driver will
todo not implemented yet
sets the designated parameter to the given code java
returns the maximum number of rows that a
retrieves the result set concurrency for code result set code objects
get a result set that contains a cross reference clause
retrieves the value of the designated column in the current row
retrieves the result set holdability for code result set code objects
moves to a statements next result
retrieves the result set type for code result set code objects
retrieves the major version number of this database
moves to this code statement code objects next result deals with
retrieves the minor version number of the underlying database
implements method in interface java
returns the number of seconds the driver will
retrieves the value of the designated column in the current row
sets the escape processing attribute of the csv statement object
indicates the driver and the driver may be used for
whats the name of this database product
returns the result set that this statement is based on
retrieves the value of the designated column in the current row
sets the fetch size
sets the limit for the maximum number of bytes in a column to
returns the result set concurrency for code statement code objects
retrieves the version number of this database product
sets the limit for the maximum number of rows that any
retrieves the value of the designated column in the current row
start generic documentation
retrieves the result set holdability for code result set code objects
whats the databases default transaction isolation level the
retrieves the value of the designated column in the current row
retrieves the result set type for code result set code objects
returns the update count
retrieves the value of the designated column in the current row
returns the first warning reported by calls on this statement
sets the name of the cursor for this statement
retrieves the value of the designated column in the current row
whats this jdbc drivers minor version number
sets escape processing on or off
retrieves the value of the designated column in the current row
gives the driver a hint as to the direction in which the rows
retrieves the name of this jdbc driver
sets the fetch size
sets the limit for the maximum number of bytes in a column to
sets the limit for the maximum number of rows that any
get the exported keys for a specific schema and table
sets the number of seconds the driver will wait for a
retrieves the value of the designated column in the current row
adds the set of parameters to the prepared statement objects
retrieves all the extra characters that can be used in unquoted
retrieves the value of the designated column in the current row
empties the current parameter values immediately
executes the sql statement in this code prepared statement code object
retrieves the value of the designated column in the current row
whats the string used to quote sql identifiers this returns
executes the sql query in this code prepared statement code object
retrieves the value of the designated column in the current row
executes the sql insert update or delete statement
retrieves a description of the tables keys in the given catalog
retrieves the concurrency mode of this code result set code object
retrieves the number types and properties of
get the index information for a database structure
retrieves the number types and properties of this
retrieves the name of the sql cursor used by this result set
sets the designated parameter to the given code array code object
retrieves the major jdbc version number for this driver
retrieves the value of the designated column in the current row
sets the designated parameter to the given input stream which will have
retrieves the value of the designated column in the current row
retrieves the minor jdbc version number for this
sets the designated parameter to the given code java
sets the designated parameter to the given input stream which will have
how many hex characters can you have in an inline binary literal
sets the designated parameter to the given code blob code object
whats the maximum length of a catalog name
sets the designated parameter to the given java code boolean code value
retrieves the value of the designated column in the current row
sets the designated parameter to the given java code byte code value
whats the max length for a character literal
retrieves the value of the designated column in the current row
sets the designated parameter to the given java array of bytes
sets the designated parameter to the given code reader code
whats the limit on column name length
sets the designated parameter to the given code clob code object
retrieves the fetch size for this
whats the maximum number of columns in a group by clause
sets the designated parameter to the given code java
retrieves the value of the designated column in the current row
whats the maximum number of columns allowed in an index
sets the designated parameter to the given java code date code value
retrieves the value of the designated column in the current row
sets the designated parameter to the given java code double code value
retrieves the value of the designated column in the current row
whats the maximum number of columns in an order by clause
retrieves the value of the designated column in the current row
sets the designated parameter to the given java code float code value
whats the maximum number of columns in a select list
retrieves the value of the designated column in the current row
sets the designated parameter to the given java code int code value
retrieves the value of the designated column in the current row
whats the maximum number of columns in a table
sets the designated parameter to the given java code long code value
sets the designated parameter to sql code null code
how many active connections can we have at a time to this database
retrieves the value of the designated column in the current row
sets the designated parameter to sql code null code
retrieves the maximum number of characters that this database allows in a
p sets the value of the designated parameter with the given object
retrieves the value of the designated column in the current row
p sets the value of the designated parameter with the given object
retrieves the maximum number of bytes for an index including all
p gets the value of the designated column in the current row
p sets the value of the designated parameter using the given object
whats the maximum length of a procedure name
sets the designated parameter to the given
retrieves the maximum number of bytes this database allows in
sets the designated parameter to the given java code short code value
sets the designated parameter to the given java code string code value
retrieves the current row number
whats the maximum length allowed for a schema name
sets the designated parameter to the given code java
retrieves the value of the designated column in the current row
sets the designated parameter to the given code java
retrieves the maximum number of characters this database allows in
retrieves the value of the designated column in the current row
sets the designated parameter to the given code java
how many active statements can we have open at one time to this
retrieves the value of the designated column in the current row
sets the designated parameter to the given code java
whats the maximum length of a table name
sets the designated parameter to the given code java
retrieves the value of the designated column in the current row
whats the maximum number of tables in a select statement
retrieves the value of the designated column in the current row
retrieves the maximum number of characters this database allows in
retrieves a comma separated list of math functions available with
retrieves the value of the designated column in the current row
retrieves a description of the tables primary key columns
retrieves the value of the designated column in the current row
retrieves a description of the columns of a database table
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves a description of the procedures available in the database
retrieves the value of the designated column in the current row
whats the database vendors preferred term for procedure
retrieves the type of this code result set code object
get the schema names available in this database
whats the database vendors preferred term for schema
retrieves the value of the designated column in the current row
retrieves the string that can be used to escape wildcard characters
retrieves the value of the designated column in the current row of
gets a comma separated list of all a databases sql keywords
inserts the contents of the insert row into this
retrieves whether the cursor is after the last row in
indicates whether the sqlstate returned by code sqlexception
retrieves whether the cursor is before the first row in
retrieves a comma separated list of string functions available with
retrieves whether the cursor is on the first row of
retrieves whether the cursor is on the last row of
retrieves a description of the tables that are not a subdirectory
moves the cursor to the last row in
retrieves a description of the sub types of this database
moves the cursor to the remembered cursor position usually the
moves the cursor to the insert row
retrieves a comma separated list of system functions available with
moves the cursor down one row from its current position
retrieves table privileges according to the given catalog and table name
moves the cursor to the previous row in this code result set code
retrieves a description of the tables available in the given catalog
refreshes the current row with its most recent value in
retrieves the table types available in this database
moves the cursor a relative number of rows either positive or negative
retrieves a comma separated list of the time and date functions available
method from the table result set interface
method from statement
retrieves a description of all the standard sql types supported by
retrieves whether the current row has been updated
retrieves a description of the table rows
gives the driver a hint as to the direction in which the rows
retrieves the url for this code result set code object
indicates the number of rows suggested to read in one step
retrieves the user name as known to this database
updates the designated column with a code java
updates the designated column with a code java
retrieves a description of the tables version columns
updates the designated column with an ascii stream value
retrieves whether or not a visible row insert can be detected
updates the designated column with an ascii stream value
updates the designated column with a code java
does a catalog appear at the start of a qualified table name
updates the designated column with a code java
updates the designated column with a binary stream value
indicates whether changes to the database have been made to the
updates the designated column with a binary stream value
retrieves whether concatenations between null and non null values
updates the designated column with a code java
are null values sorted at the end regardless of sort order
updates the designated column with a code java
updates the designated column with a code boolean code value
retrieves whether code null code values are sorted at the start regardless
updates the designated column with a code boolean code value
are null values sorted high
updates the designated column with a code byte code value
retrieves whether code null code values are sorted low
updates the designated column with a code byte code value
describe what the method does
updates the designated column with a byte array value
describe what the method does
updates the designated column with a byte array value
retrieves whether updates made by others are visible
updates the designated column with a character stream value
indicates whether a result sets own deletes are visible
updates the designated column with a character stream value
indicates whether a result sets own inserts are visible
updates the designated column with a code java
indicates whether a result sets own updates are visible
updates the designated column with a code java
does the database treat mixed case unquoted sql identifiers as
updates the designated column with a code java
updates the designated column with a code java
does the database treat mixed case quoted sql identifiers as
updates the designated column with a code double code value
does the database treat mixed case unquoted sql identifiers as
updates the designated column with a code double code value
retrieves whether this database treats mixed case quoted sql identifiers as
updates the designated column with a code float code value
does the database treat mixed case unquoted sql identifiers as
updates the designated column with a code float code value
retrieves whether this database treats mixed case quoted sql identifiers as
updates the designated column with an code int code value
is alter table with add column supported
updates the designated column with an code int code value
is alter table with drop column supported
retrieves whether this database supports the ansi92 entry level sql
updates the designated column with a code long code value
retrieves whether this database supports the ansi92 full sql grammar supported
updates the designated column with a code long code value
retrieves whether this database supports the ansi92 intermediate sql grammar supported
sets the designated nullable column in the current row or the
retrieves whether this database supports batch updates
updates the designated column with a code null code value
can a catalog name be used in a data manipulation statement
p updates the designated column with an code object code value
can a catalog name be used in an index definition statement
updates the designated column with an code object code value
updates the designated column with an code object code value
can a catalog name be used in a privilege definition statement
updates the designated column with an code object code value
can a catalog name be used in a procedure call statement
updates the designated column with a code java
can a catalog name be used in a table definition statement
updates the designated column with a code java
updates the underlying database with the new contents of the
retrieves whether this database supports column aliasing
updates the designated column with a code short code value
retrieves whether this database supports the code convert code
updates the designated column with a code short code value
updates the designated column with a code string code value
retrieves whether convert between the given sql types supported
updates the designated column with a code string code value
is the odbc core sql grammar supported
updates the designated column with a code java
updates the designated column with a code java
retrieves whether this database supports correlated subqueries
updates the designated column with a code java
are both data definition and data manipulation statements
updates the designated column with a code java
are only data manipulation statements within a transaction
retrieves whether the last column read had the value of the
if table correlation names are supported are they restricted
are expressions in order by lists supported
is the odbc extended sql grammar supported
are full nested outer joins supported
retrieves whether this database supports get generated keys
retrieves whether this database supports some form of
can a group by clause add columns not in the select provided it
can a group by clause use columns not in the select
retrieves whether this database supports the sql integrity
retrieves whether this database supports specifying a
is there limited support for outer joins this will be true
is the odbc minimum sql grammar supported all jdbc compliant drivers
retrieves whether this database treats mixed case unquoted sql identifiers as
retrieves whether this database treats mixed case quoted sql identifiers as
retrieves whether this database supports getting multiple
retrieves whether this database supports getting multiple
retrieves whether this database supports multiple
retrieves whether this database supports named parameters
can columns be defined as non nullable a jdbc compliant driver always
can cursors remain open across commits
can cursors remain open across rollbacks
can statements remain open across commits
can statements remain open across rollbacks
retrieves whether this database supports using a column that is
is some form of outer join supported
retrieves whether this database supports positioned code delete code
retrieves whether this database supports positioned code update code
retrieves whether this database supports the given result set concurrency
retrieves whether this database supports the given result set holdability
retrieves whether this database supports the given result set type
retrieves whether this database supports savepoints
can a schema name be used in a data manipulation statement
can a schema name be used in an index definition statement
retrieves whether a schema name can be used in a privilege definition statement
retrieves whether a schema name can be used in a procedure call
can a schema name be used in a table definition statement
retrieves whether this database supports code select for update code
retrieves whether this database supports statement pooling
retrieves whether this database supports stored procedure calls
retrieves whether this database supports subqueries in comparison
retrieves whether this database supports subqueries in
are subqueries in in statements supported
retrieves whether this database supports subqueries in quantified
retrieves whether this database supports table correlation names
retrieves whether this database supports the given transaction isolation level
retrieves whether this database supports transactions
retrieves whether this database supports sql code union code
retrieves whether this database supports sql code union all code
indicates whether or not a visible row update can be detected
does the database use a file for each table
does the database store tables in a local file
this method returns a variable with the variable content
gets the value of a string variable
gets the value of a variable
deletes a variable and its content
set the my sql object
sets the content of a variable
sets the content of a variable
checks whether the variable exists in the given section
checks if the variable exists
checks if the section exists
updates the content of a variable
flush the knnode cache
getter for property parent
add a child to this track node
wave environment get accessor
gets the anchors
returns a string that uniquely identifies the output ip address
accept the visitor
accept the visitor
set the view transform and position
setup the lighting
flush the knnode cache
iterates through the connection pool and adds each opened connection to
creates a new sql out parameter object
create a sql row set that wraps the given result set
get the value of the column at the given result set index
get the value of the column at the given index
constructor for the result set supporting sql parameter
get the limit of rows of a table
generate sql with a row set limit
reads uncompressed data into an array of bytes
finishes writing the contents of the zip output stream without closing
sets the zip file comment
generates hibernate configuration
generate jxva properites
generate jxva mvc xml
execute sql query and return first low as row set
dump an object to a string
dumps the object to the given string builder
return a string representation of the object
returns a string representation of the object code o code
clears the state of this node
add a child to this element at the given index
add a child to this node
returns the text of the node at the specified index
returns the type of the given index
writes the xml representation of this object to the given writer
this method will apply the settings on the given statement
handles the given sql statement which should be ignored by the driver
handles the given warning
converts an element to a row
close the result set and the callable statement
puts a line to the model
starts this client
returns the last element in this list
handles events from the various buttons
creates a new instance of the class specified in the arguments
returns the guice
returns the first binding annotation of the specified
getter for result true
initializes the counter x position and counts
sets the duration attribute of the time entry object
returns the total time counted
removes this counter from its timer list
wait for the counters to be set
writes an int into the byte array at the offset given
adds a remote discovery listener to the list of wiimote discovery listeners
removes a remote discovery listener from the list of wiimote discovery listeners
p is apressed
returns true if the b button was pressed
get the remote discoverer
returns true if one of the buttons has been pressed
notify listeners that a wii remote discovery event has occured
returns true if two buttons are pressed
add a wii remote listener to the listeners list
dispatches the event to the listeners
sends message to the server for read calibration mode
sends a command to the server
creates a wii accel event from the given byte buffer
this method initializes this
this method initializes window content pane
this method initializes dir scroll pane
this method initializes dir tree
this method initializes window split pane
this method initializes detail scroll pane
this method initializes detail table
this method initializes icon size combo box
this method initializes refresh button
this method initializes drives combo box
this method initializes tools panel
converts the result image to a png url
converts the result image to a jpeg image icon
gets the can post value for this describe global sobject result
sets the can post
get the callback url
returns the show form
returns the uri of the application
gets the num posts
gets the canvas page url
sets the num posts
sets the uid of the notification
google analytics account id
google analytics account id
creates a comment tag to be used in the generated documentation
test of exec query method of class org
this will scroll to the next page that was clicked on
this will read the messages from the cache
returns the message that is displayed in the status bar
creates a new player
called when the server starts its own turn
highlights the border around the specified cell
paints a hex polygon
returns the cell that is the hex turning
gets all the lists that match a templates
adds a node to the node list
remove a node
adds a column to the current row
remove data from the cache
updates the database
moves the node to the parent of the current node
moves the node towards the parent of the current node
this method is used to execute a select query with a single value
performs a bitwise operation
execute a query on a data object
fill all the nodes in the link table with a given depth
link a range of columns
returns true if this node is of meta data
return the string value of the metadata descriptor
find the data meta of the given type
returns a list of all child nodes of this node which have
returns the first child which has the given link with the given meta
retrieve a node of type data from the parent node
retrieves a node of the specified type in the database
returns the first child node with the given id
returns the value of listening
get the number of connections
roots a debug message to the remote root
debugs the server
roots a debug message to the main application
run the policy request
the run method of the thread which listens for incoming client connections
waits for clients connections and handles them to a new policy server connection
sends the msg to all connected clients
writes the policy to the client
writes a message to the debug window
runs the thread
returns the socket address of the remote host
the main debug method
send a string to client
this method is used to listen for incoming client connections
remove a link from the set of links
m todo to string
returns a hash code value for this object
add a new lexical state to the grammar
returns the token that is associated with the given name
returns the integer value for the given option
returns the value of a boolean option
returns the string value for the specified option
is the given option a valid option
upgrades a value to a boolean class and returns the value
returns the next token from the queue
tests if two strings starts with the case insensitive
returns the number of characters to be consumed in the
returns the current choice ambiguity check
return the other ambiguity check
returns the index of the next generation
return the current debug parser
returns the debug lookahead
return the current state of the debug lexer
returns the current error reporting setting
returns the value of the ignore case flag
returns the user defined lexer
returns the user char stream
returns the current value of the build parser flag
returns the flag indicating if the build lexer should be used
returns if the lexer uses the default parser
returns the sanity check
returns the value of the force la check check flag
returns the cache tokens flag
returns the token factory for this grammar
returns the output directory of this song
performs the validation
returns the boolean value of multi
get the value of node factory
returns the node uses parser
returns the current visitor state
returns the node prefix
returns the visitor exception
gets visitor data type
returns the return type of the visitor
accepts a message
writes a string to the output stream
registers a thread with a client
unregisters a thread from the server
this is a factory method to create outgoing interface objects that
sets the status of the probe to not be considered stale
receives all messages from the client
cleans up all conference calls
connect to the given client
send a message to all clients
adds text to the document
add text to the date label
adds a message to the message window
this method is called when the user clicks the login button
this method is called when the user clicks the login button
check if the text entered is valid
method send returns true if the message is still queued
sets the user name
register a talk thread
moves a client from combo box to list
moves a client to combo box
add a client to the list of available clients
add a client to the to session combo
removes a client from the list
removes a client from the move from list
removes client from the list of clients
adds a client to the list of connected clients
removes a closed talk thread from the list of talk threads
attempts to pass a message
returns the name of the method to be called
return the query string if available
determines if a file parameter may be selected by the user
sets the connect timeout
opens a connection to the given url
returns the mime type of the content of this form
write the given parameters to the given output stream
encodes a string to url encoding the given character set
returns the character set
returns the content type if available
writes the parameters to the output stream
returns the scripting handler for this script
execute an event script
delegates the call to the scripting handler
returns true if the user has accepted the confirmation
returns the text value of this node
returns the attribute value by name
sets an attribute on this node
removes an attribute from the container
creates and returns a scriptable object for this control
sets the application code and version
check if the response code is an error response
this method returns true if the response was generated on the error
returns the user agent
get the value of the first header field with the given name
returns if cookies are accepted or not
sets if the session should accept cookies or not
indicates if the gzip compression is automatically
sets whether or not to accept gzipped responses
returns true if control is read only
returns the auto redirect flag
sets the auto redirect flag
returns true if this is an image button
returns true if the list should be automatically refreshed
perform the action for the button
sets the auto refresh
returns whether this node is hidden
returns the fake
returns true if the button name is valid and false otherwise
sets the listener that will be notified when dns information is available
adds the values to the parameter processor
use this method to set whether or not the uri refers to this
returns the value of the property whose name is given in parameter
reset control to default values
returns the value of an attribute of this element
set an attribute on this element
remove an attribute from this element
toggles the state of the checkbox
returns the authentication scheme
return the value of a authentication parameter
sets the state of the checkbox
this method is called when the user changes the value of the
the java script on change event handler
called when the user clicks on the send button
this method is called when the user clicks on the
submits a get request and returns a response
this is the method that is called when the mouse is released
sends a web request to the client
subclasses can override this method to handle the mouse up event
returns the response that is currently displayed
send the on mouse down event to the button
returns the url of the codebase for this web app
returns the name of the main class of this compilation unit
gets the tt width tt attribute for the tt icon tt tag
override this method to handle the four events when the user clicks
gets the tt height tt attribute for the tt icon tt tag
get the response for a named frame
returns the code archive specification code required by this
returns the value of the named parameter as a string or null if
returns the response that should be sent to the client
creates and returns a scriptable object for this control
submits a get resource request to the browser
returns the value attribute
sets the value attribute
add a cookie to the store
returns the name of the tag
returns the dom node of this container
gets the id
this method stores a cookie in the response
returns the class name of this class or null if not set
gets the name of this action
get the title
this method returns the cookie details for the given cookie name
this method returns the value of a cookie given its name
returns the attribute value by name
set an attribute value
returns the client properties
return the name of this control
removes an attribute from the set
checks if the given attribute name is supported
sets the user agent
return the id of this control
returns the client agent
sets the authorization credentials for a basic authentication scheme for
get the value of a property
set authentication information for user
sets the value of the named configuration property to the given
set the value of a named attribute
clears the proxy server cache
find all cookies that match the given cookie header and recipe
clear all cookies
gets the host name of the proxy server
clicks the form control element
add a cookie to the set of cookies associated with this request
adds a cookie to the response
sets the value of a header field
adds a cookie to the set of cookies associated with this request
returns the value of the specified header field
get all the cookies
sets the value
get the value of the given cookie
although this method should allow the controller to send a change event
get the cookie with the given name
returns true if this cache entry has expired
check if the domain is expired and can be sent to the given
registers a new client listener
get the title of the document
removes a client listener
get the original onload event
returns the external style sheet
register a listener for web window events
get a property from the form
sets the value of the named property creating it if need be
remove a listener for window events
returns the next alert that was issued
pops the next alert from the stack
parse a page of html
adds the cookie if it is valid
sets the dialog responder
returns an audio clip for the specified url
gets the code image code object for the url provided
write the message body
get the applet with the given name
return all applets in current page
opens the specified url in a browser window and displays it
requests that the given url be shown in the browser
returns the value of all current header fields
shows the status message in the status bar
returns the stream for the given key
get the keys of all stream keys
set the input stream for the given key
the cookie jar that contains the cookie attribute
returns the target for this request
check if the given attribute is a cookie attribute
get the name of the frame
return the current frame
returns a dom subtree for the treesubtree
returns the relative page
gets the relative url where to find the report
returns the element that this node represents
toggles the state of this button
returns the htmlpage that this response belongs to
submits this form using the web client from which it was originally obtained
submits a request to the browser
sets the state of this radio button
submits this form using the web client from which it was originally obtained
returns true if this control is a text control
submits this form using the web client from which it was originally obtained
get the method
returns the name of the method to be called
get the action for this link
return true if the given parameter has been defined
a default scripting engine that supports all of the expressions
returns true if this query starts with the given prefix
p do the specified script event script
runs a script
evaluate the given expression against the current script context
get the value of a property
returns the button with the specified id
returns the element at the specified position in this list
set the value of a property
set script engine
extracts a parameter from a string
returns true if this cell editor is active
returns the document base of this resource loader
returns the button with the given name
returns the url of the code base of this application
get the value of a parameter
returns the applets context which is
called when the applet wants to be resized
returns the submit button with the given id
find the closest object to the current context
returns the type of this file
returns the element with the id
creates a new request with the specified button
returns the form found in the page with the specified id
creates a request that hasnt been validated by post method
returns the number of rows in the model
returns true if this parameter is a file
returns the link with the given id
returns the number of columns in the model
returns the text of the specified table cell
get the first value of a parameter
returns the table cell at the given row and column
returns the table cell with the given id
whether a parameter is multi valued
returns the summary associated with this link
get the number of text parameters for the given parameter name
returns true if the named parameter accepts free form text
returns the first form that matches the specified predicate
get web client
return the form found in the page with the specified name
closes the client
gets the value of the opener property
executes the specified url and returns the response
submits a web request and returns a response
this method returns the script that is contained in the given
exclusive flag accessor
returns true if the specified frame exists
get the url relative to the browser
get the response for the named frame
returns the text of this labeled image
creates a noscript element
return the web response
returns the text of this node
clicks the element
delays the current thread for the specified number of milliseconds
not used right mouse button
reset the controls to their initial state
checks if the response is configured to redirect
return the query string if available
sets a header field
returns a dictionary with all the headers
returns the url given by the file newurl
check if the given parameter is a file or a file
returns the target
returns true if the named parameter accepts only characters
returns the query string
set the value of a parameter
checks whether the given parameter is disabled
set the value of a parameter
sets the upload file for the request
sets the image button position
returns true if the named parameter is hidden
checks whether the given parameter is a file parameter
selects a file to upload
sets the uploaded file for the upload
selects a file to upload
returns the name of this configuration
get the first value of a parameter
adds a preset parameter to the form
remove a parameter
returns true if the mime type is encoded
returns the content type for this part
if the request is an http urlconnection then set the method to the
removes a parameter with the given name
write the body of the message
sets a parameter
sets the multiple values of a parameter in this form
sets the value of the specified upload parameter
sets the request parameter with the given name to the given file
toggles the checkbox state
toggles a checkbox
sets the value of a form input field
returns the code base
sets a checkbox state
returns the owner document
open a dom window
closes the connection to the server
the server sends an alert to the client
retrieves an attribute value by name
this method handles all events that are activated by the user
gets the value of the property whose name is given
sets the value of the named property
this method returns a vector with the buttons that are faked to
returns the form parameter with the specified name
returns a map of form parameter values keyed by form controls
this method will return true if the javascript is enabled
associates the response with a web response
enables or disables exceptions being thrown on errors
returns true if exceptions are thrown when the java script code is
returns a message describing the exception
initializes this tag and sets its parent
returns a link anchor for the given child
returns the window containing this document
helper method that handles events for this script node
runs the given script returning the result
this is the method that handles events of the interface
evaluates the given string as an expression
called when a start element has been encountered
returns the first control of this form
get the class name of the scriptable object
prints the current log message to the console
create and return a new get method web request
returns the message of this exception
returns a textual description of the error
returns the message body
completes this request for the given connection
returns the first link that matches the specified text
writes the content of this code multipart message code to the given
returns the number of columns spanned by the cell
returns true if the content type is html
returns the number of rows that this cell spans
gets the value attribute of the button label object
calls the do click sequence method
returns the url of the page
remember the enable state
throws a disabled button exception
returns whether this component is disabled
action for the abstract button
return the first link that matches the name
action for the button
accessor method for the title attribute
gets the method attribute of the put object
resets the form at the specified coordinates
returns the first link that matches the given criteria
convenience method to get the external style sheet
helper method to set alert message
returns the name of the frame
get an image with the given name
get the request to refresh the page
get an image with the given source url
get the value of the property with the given name
get the value of a selection option
set the value of the property with the given name
get an image with the given alt text
gets the value of the mime content length header field
gets the content type of the response
get the character set header
gets the new cookie value
report that there is no match
sets the length of the array
get the text of the response
returns the option at the specified index
returns the input stream
returns the response of a subframe of the named frame if exists
check all the options that are not selected and claim unique
returns a copy of the domain object model associated with this
returns the element with the given id
returns the error message
return the form with the given name
returns a form with the given id
returns the table with the specified predicate and value
returns the first form that matches the specified criteria
returns the link with the given text
returns the names of the servlets initialization parameters
returns the servlet context
return the drivers minor version number
register a servlet
register a servlet class name servlet class name
returns the response from the client that was sent to the server
returns the response for the given url
returns the link with the given name
returns the current http session associated with this request or if there
get a context parameter
set a web application context parameter
returns the real path for a given virtual path if possible otherwise
shuts down the application
returns a new servlet unit client
returns the link with the given id
returns the first link that match the specified criteria
returns the id of this code validity code
returns the time when this session was created measured
returns the last time this session was accessed
invalidates this session and unbinds any objects bound to it
returns an image with a given name
sets an attribute on this code http header code
removes an attribute from this request
returns the servlet context
returns an image with a source image path
sets the log stream
returns the response code returned by the remote http server
returns the message associated with the response
this will return the named header field
returns the http servlet request
returns the servlet response
service the request
returns an image with an alt text
returns the servlet instance for this context
returns the response from the last executed request
calls the code get next text block code method on the
returns the first text block matching the specified criteria
returns the dom
returns the loader to be used by this test suite
returns the default value for this field
get the scriptable object corresponding to this script node
creates a dom scripting handler
adds the cookie
returns true if the response contains the specified header
encode the url
opens a new window
encode the session identifier associated with this response
send a temporary redirect response to the client using the specified
sends an error response to the client using the specified status
sends an error response to the client using the specified status
sets the status code for this response
set a header
sets the value of the specified integer header
sets a response header with the given name and date value
get the character encoding used for the request
sets the content type of the response the server sends to
returns a print writer object that can send character text to the client
set the content length of this response
add a header to the set of headers associated with this request
adds a response header with the given name and integer value
adds a response header with the given name and date value
sets the size of the buffer in bytes for this stream
returns the size of the buffer
return the servlet path
returns the committed
get the value of the specified attribute
return the path info value
flush the buffer and commit this response
get the value of a header as an int
get the value of the specified request header as a string
returns an enumeration of all the header names
returns the part of this requests url that calls the servlet
checks whether the session id specified by this request came in as
returns the session id specified by the client
set the value of a property
sets the proxy server
returns a new invocation for the given request string
creates and returns a new invocation context to invoke the
updates the response and returns the response
click the button
check whether the requested session id is still valid
get the named attribute
get the content length of this body part
constructs a response using the https sourceforge
returns the port this server is connected to
sets the value of a resource
set the named attribute
register a resource to be used by this web application
adds a resource to the list of resources
returns an enumeration of all the attributes names
sets the value of the specified resource
remove the named attribute from this java script object
sets the error message resource
set the send character set
return the servlet input stream associated with this request
java script function onchange
set a character set for a particular named resource
initialize socket input stream
adds a resource header
returns the character encoding used by this code connection code
returns the content type of this response
set the content type header of this part
return the first value of the parameter with the given name or null
get the protocol
returns the protocol and version of this url
returns localhost or local host name
returns localhost if the server is running in the same thread
returns the port number on which the server is listening for requests
return the reader for this request
returns the remote ip address
gets the list of preferred locales
checks if user is in role
returns a code map code of all parameters
process a meta tag
p returns the url from the request
infers the refresh header field
returns a resource object as a result of a get request
returns a resource object as a result of a get request
returns the value of the specified request header as a string
this is used to acquire the reader for the request entity
reads the refresh header
test bug 1843978
test that we can manually send cookies directly after a request
get the http response code
verifies that the provider implementation can be used
test for code ibmjsse provider code
returns the response message
returns the value of the named header field
test the submit button value with a parameter name
test the cookie
test that we can get a cookie that only cookies are returned
tests that cookies rejection with an1533762 error
check if find table size throws an exception
test column number in table
test that a frameset that has a hash source works
tests that referer header is stripped correctly
test the applet within the adirectory
reset the htmlparser factory
check that a cell tag name is properly traversed
test parse content header
this test checks that a request to a url that is always redirected
test if the external stylesheet is set correctly
test for submit button detection
test for anchor
test for the only submit button added in the form
tests the reset button detection
test parsing http gzip gzip
test for method button disabled flag access
test the gzipping
test for unnamed image button
test that we can open the correct window
tests that writing to a simple string is properly written
test the alert method
tests that text is written into the output stream
test that the existence of the method exists
tests the import of attributes
tests the import of text node
this test ensures that import of comments does not change the type
test the import of a cdata section
test import processing instruction
test basic attributes of a node
tests importing an element with additional attributes
tests importing a nselement with namespace attributes
tests copying a new document with children
test that the form is correctly detected
test the submit from form method
tests that the new document is created and created
test submit from button
test that an embedded value is equal to another
tests if the node code node height attribute code has not been
test the creation of a text node
tests that an attribute node can be set with a replacement
test submit using select option attributes
tests that an empty attribute is returned for an undefined value
tests the simple attributes of an element
test that an empty document is ok
test submit radio buttons
tests the correctness of the push button
test empty document title
tests reading the document title
tests modifying and reading of a document title
test that a document element can be added to the root
test that we can set and get the title
tests that the body is correctly returned
should not have any children to a text node
test that the set body method can be called on a body element
returns a resource object that represents the specified method
this tests the get element by id method
test the java script
test insert before a child node
test adding a child element
test remove child from end
redefine the frameset in the head and blue components
tests that the applet element is correctly configured
this tests the specs of a frame containing a base element
tests that writing the default write buffer is empty
this test checks that the frameset in the frameset event is correctly
test for issue https issues
tests that write buffer is updated correctly
test iframe access by frame id
tests that replace child works
tests that write buffer is updated correctly
this test checks the processing of the script frameset
test the pre order iterator method
tests that the write buffer clear method is working
tests the iterator when a predecessor has a mask that has a pre
verify that the html page retrieved from the list of html tags match
verify that the current web conversation matches bold nodes
this method is executed before the test case
test the case structure
test setting the keep case
test lower case
test method for
test method for
check that undefined works
check that when the endless loop is called the root is
creates a file
test with a file specified by content type
test that association does not have an associated filter
tests that the content is committed immediately after flush
tests that named filters are resolved correctly when
test the filter invocation
bug bypass the page load and load after a failed load
note that the response was received
activates the form action from java script action
test the default context name configuration
test that the context name is properly set correctly
parses the given contents into a dom document
test the parsing of red
test that the parameter is override
test for post parameter parsing
test parsing of message body parameters using a encoding
assert that the submit button is disabled
click the submit button
performs java script to toggle enable state of button
test that badly formed message via socket is working correctly
try to get the response
verifies that submitting the login form with the name master results
get a sub node of a node
test for reader with specific charset
test that a request can be disused to indicate the content type
test window event
returns true if the key is defined
throws an unchecked multi map exception
returns the index of the given node in the index tree
returns the gracelet handler for the given path
process the specified url
threadsafe method for getting a
resolves a path to a url
template method for determining if the facelet needs to be refreshed
get the compiler
sets an interceptor feature
returns the underlying gracelet handler for this controller
indicates whether recompile is needed or not
get the name of the source
returns the restore view
resolves the given path against the source path
creates a new gracelet phase listener
remove the compiled duplicate from the given resources
initializes the internal controllers
checks if a controller with the given name exists
creates the libraries required by this tag
executes this phase if the phase is not before or after the current
adds a hook to the library
get facelet factory
returns the view handler associated with this dispatcher
p perform any actions required after the phase of a request
p initialize the collection of extension objects for this
initializes the compiler
cleans up the gracelet context for use
creates an expression that is a source and adds it to the list
creates a new node
set the delegate and resolve strategy
creates and returns a new groovy class loader to use
p return the view state manager for the specified view id
the action has been activated
tests if the current workbench selection is a suitable container to use
this is a callback that will allow us
cleans up all non flushed and non native resources
check that all components in the container are unique
only for debugging
pops validation groups from the validation groups stack
pushes validation groups onto the validation groups stack
removes the current excluded validator id from the stack of excluded validators
pushes the ids of the excluded validator on the stack
remove the current enclosing validator id from the stack
pushes the ids of the enclosing validator on the stack
print an object
print an object and then terminate the line
loads a pdf document from a url
loads a pdf file into this instance
loads a pdf document from an input stream
sets the size of a page
returns the element and setups it
pushes a new node onto the stack
this will associate the parent object factory interceptor with the
interns all registered internal nodes to the given builder
this will invoke the method if you want to apply all attributes
invokes a closure
get the property of the binding
set the property of the binding
threadsafe method for getting a
returns true if the recompile command is needed and false otherwise
returns the name of the source file
creates a new node
call the method with the given key and parameter values
closes the current tag
create a new object of the class
returns the file at the given key path
sets the value of the key to the given value
sets the super delegate
determines if the current gracelet user is allowed to access the
find all handlers for the given directory
registers a filter
installs phase listeners on this code timed element code
installs all the filters
initializes the gracelets environment
adds a phase listener
adds a filter to the extension filter chain
called when the code log entry code is being removed from the
creates a new gracelet binding object using the default binding generator
sets the value of a variable
dynamically invokes the method of the given name
executes the closure
sets the data associated with this entry
adds the contents of a zip file to the list
perform the after phase event
initializes the view
adds a new variable mapper
removes a variable mapper from this expression
find the cache handler for the given path
applies the given render kit to all the libraries added to this
apply the binding library to a list of gracelets
determine if the current request needs to be refreshed
returns the compiling script class
return the request values to apply to this phase
get the process validations for this phase
returns the model values for this phase
returns the gracelet phase closure for this phase
returns the gracelet phase closure for this phase
threadsafe method for controlling execution of
inserts the causes if possible
return the string value of the value
this will call the
builds the view
refine the callback object
returns the default variable context
registers a filter to be applied to this stream
registers a listener to receive events
registers a phase listener with this controller
creates a new gracelets extension object
override the call to return the first parameter
sets the specified render kit as the current render kit
applies the settings from the current set of values to the
apply all rules to the ruleset
ends the current start tag
get the specific class of the controlled object
returns the gracelet builder for the given namespace
render a map
renders the java script
this method is called when evaluating a closure which takes a
generate the facelet handler instance
this method allows to define a closure for the node
overrides pluggin for
prints the context data to a writer if the response is correct
append a string to this eltext object
simulates a node in the tree
creates a new gracelet binding object using the owner
threadsafe method for controlling execution of
recursive method that renders all children of the given component
this method invokes the workflow
adds a new code igracelets view mapper code
adds a listener to the list of listeners
sets up the fixture for example open a network connection
gets the scan of fixture names in this collection
prints this throwable and its backtrace to the specified print stream
prints this throwable and its backtrace to the specified print writer
returns the name of the class without the package name
returns the class name of a class in the classpath
returns the package name of the given classpath
set the test case filter
the sample a does not provide any signatures
the sample to test the build of a sample from a sample
filters stack traces
returns the sum of the rides of all the ride
calculate the penalty sum of all rides
calculates the total amount of total result of the participant call
returns the value of the given parameter
returns the ride object with the requested number
returns the value of the configuration parameter as integer
returns true if the specified ride number is in the ride
adds a participant result to this participant response
sets the nv value of the specified ride
calculates the penalty for a ride
removes the specified participant result from this participant
calculates the result of applying the ride with a penalties
convenience method for getting a hash code
returns the result from the ride as a string
returns the number of rows in the model
returns the value for the cell at column index and row index
returns true if the cell at row index and column index is editable
export results as html
publish the current results to the web browsing file
returns the sum of all penalty points
returns the nv color
compares two participant objects for equality
returns a hash code value for this object
tests the comparison of participant result objects
returns the competition results for the given class id
prints the table
returns the java data type of this field
returns the upn pdata type of this data
p returns the minimum number in this range
p returns the maximum number in this range
override to return the current step
returns true if the listener is to send events
gets the current connection id
return the current value
returns the name of the return argument of this function
gets the state variable for the argument name
gets the connection information for the specified argument name
invokes the service
executes the operation
returns the current value of the attribute
gets the state variable for the specified argument name
executes the operation
gets the upn pstate variable for the argument name
returns the java data type of this type
returns the upn pdata type of this data type
returns true if the listener sends events
returns the java data type of this field
returns the upn pdata type
gets the upn pstate variable for the argument name
returns the current value of the container
returns the current value of the model
returns the current value of the attribute
gets the upn pstate variable for the argument name
gets the sort capabilities object given a argument name
invokes the update method
return the upn pstate variable for the argument name
gets the upn pstate variable for the argument name
get the state variable for the argument name
invoke the update command
executes the operation
gets the upn pstate variable for the argument name
gets the upn pstate variable for the argument name
gets the state variable for the argument name
gets the upn pstate variable for the argument name
gets the upn pstate variable for the argument name
invokes the function
returns the upn pdata type of this object
decides the difference between two dates
output the header of the xml document
write a new element
append an attribute to the last element
write an attribute to the element
read the attributes from the xml file
write text inside a tag
close the stream
writes the last element to the output stream
reports a data verification failure to the user
return a string representation of this principal
compares the specified object with this
p this method is called if the login contexts
adds a palette widget to the panel
add a relationship to this entity
the entry point method called automatically by loading a module
sets the content of the file
get a buffered image
number of nanalyzers
reads the nexus
returns a set of the taxa complement of this taxa
returns the data tree node for the given taxa
returns the bits
set bits to true
get the value of a given bit
write the analysis
unset the bit at index t
set the low value to the given value
clears the tree
sets the taxa set aset to the given set
writes the xml representation of the given
returns the number of tax sets
returns a string representation of the entire buffer
get the number oftrees
returns the number of bits in this
apply the transaction to the supplied document
get the name of a given index
clears the bit set
gets the value of the exclude gaps property
get the number of char sets
returns the maximum value of this bit string
set the name of the ith variable
set whether to exclude gaps in the generated code
returns a string representation of the object
returns the index of the given string or 1 if not found
get the exclude missing value
returns true if the given taxa set is contained in this
returns the number of character partitions in the file
returns the number of datastream that is related to this document
returns the name of tree at index i
sets the number of remaining remaining tokens and attributes for
set whether missing values are counted or not
creates a clone of this format result
clones this taxa set
returns the tax set with the given name
returns the i th flags as a string
get the number of traits this transducer has written
get the exclude non parsimony flag
returns true if i ts i is equal to this
returns a hash code value for this
returns the name of the taxon associated with this taxon
removes a tree from the tree
calculates the size of the split
set whether this format is excluded
clears the state of this row
returns the taxa set with the given name
returns the string associated with the taxon and trait
returns true if the two taxa set are equal
returns code true code if codon1 is excluded
writes the translation data
returns the set of character sets
get the name of a given trait
should codon1 be excluded
returns true if and only if for this taxa instance the same
translates the map by using the translate method
get the set of character partition names
returns code true code if codon2 is excluded
clone the taxa
returns true if the value of the given site is constant
should codon2 output be excluded
sets the number of datastream on the atom that contains the
returns true if the given index is rooted
returns the taxa set names
return true if the site1 and site2 are equal
returns code true code if codon3 compressed is to be included
returns the ith tax label
returns a string representation of the taxa
returns the character set for the given name
should codon3 words be excluded
sets the ith label
getter for property exclude constant
returns the index of the taxon associated with the given string
get the partition with the specified name
gets the size of the specified symbol
sets the exclude constant
returns the ith tax info
sets the identity translation
clears all tax sets and character sets of all taxes
gets the taxa set for this taxon
sets the datatype of this structure element
sets the information for subsequent items of the tax on the
sets the numbered identity for this taxa
returns the ex char
returns the number of rows
write out the taxa
returns the number of columns in the matrix
set the set of ex taxa
returns true if we have any information available
adds the taxa
sets the symbols
adds a tax set to this registry
copy the matrix
returns the transpose of this matrix
sets the exchar
adds a character set to this manager
gets the specified column
returns a string representation of this object
multiply the matrix by a scalar
adds a character set to the character set pool
returns a set of taxa
adds a character partition to the map
returns whether labels must be considered as cross detect
clears the tree
removes tax set with given name
sets the must detect labels
hides the given taxa
removes a character set
write the assumptions to a string
returns the symbols
gets the value of the original taxa property
removes a character part from the character set
sets the taxa that was used to compute this taxon
returns a string representation of the partition with the same
computes the ess of a set of points
returns the index of the label for the given string
getter method for labels
adds a taxon of the given name and label
bars are 1d t 1 5
bar f x
adds information about the taxon
inverse fint u
sets the labels attribute of the generic data source object
checks if the list contains the given labels
constructor with discrete distribution
finds the inverse of the interval u u
returns the maximum label length for subsequent annotations
constructor for poisson distribution
returns the mean value of all samples
get the variance of the samples
return true if the database treats mixed label quoted sql identifiers as
throws unsupported operation exception
returns the mean of all the values
creates a new gamma distribution with a specified alpha value
returns the variance of the distribution
creates a new gamma distribution with the given parameters
sets the value of label quotes
return a string representation of the cdf instance
setter for property respect case
returns the character that this matcher is currently matching
set the match char for this person
gets the gap of this button
set the gap character
getter for property missing
sets the character that is not a valid one
gets the interleave
set whether to include multi line annotations
set whether to use tokens
returns the diploid
checks if this type is unknown
check if the type is a nucleotide type
sets the format
gets the format
getter for property ntax
sets the number of results to which this token is applied
getter method for nchar
sets the internal char weights
returns the weight of the specified character
set the char weights field
returns the label of the specified character
checks if the state is valid
returns the color of a given character
gets the number of word net keywords
this method returns true if the format is a genome type
get a character from a given position in the matrix
set a matrix entry at a given position
replaced a character at the given position with the original one
returns the data in a column for which the
returns a string that represents an ambiguity for the given
looks up a string that was not in the original state
get the number of jobs considered to be locked
check if the given bit is masked
set the mask for this flag
clear the mask
pads a string with spaces to the given length
guess the type of a sequence of characters
restore ambiguity states if any
gets the format switch value attribute of the db column object
return a copy of the taxa
remove the sites that have masked removed because they are sent out
returns a string representation of the taxa
returns the row as a string
this is used to convert the provided character to a string
checks if the given site has states
returns the maximum label length
set the value of com layer
returns the com layer
set the value of mouse control
returns the mouse control
set the value of com layer
returns the com layer controler
set the value of mouse
get mouse controler
returns the swt builder instance for the named builder
creates an swt icon from the given information
returns an swt icon that will be used to represent non leaf nodes
set the command to execute when a cr fires
sets the arrow keys action
sets the action executed when the button is pressed
adds the editing support to table
returns the column view at the given column index
sets the item
displays the first card in the hand
set whether to scroll on append
sets the text of the label
set the form loader
run the application
creates the user interface
returns a darker version of this color
returns true if the window is closing
this method creates a new iwizard model instance
get a command instance for the given script
set the enabled state of a command
sets the enabled flag
adds a command listener
fire the state change event
the run method for this thread
this method always throws an exception since the undo is not supported
closes the form
the run method for the thread
executes the command
enables or disables the task
this method handles error when we do not know what to do
this method starts a new thread that will execute a
sets the form
adds a new variable to the form
adds a button to the group
adds a variable to the form
sets the monospace font name
adds a group listener to the list of listeners
returns an iterator over the variables in this session
removes a listener from the group
construct the object
called on the event dispatching thread not on the worker thread
returns the timeout for this cache
adds a variable loader to the form
unloads the content of this form
calls the code construct code method and sets the
loads the data
returns the value of the selected button
sets the form that is being disposed
returns the form
sets the main frame
dispose the form
loads the module and executes the test
adds a listener to this cell editor
removes the given listener from this cell editor
returns the cell editor
notifies all registered cell editor listeners that the editing process has
adds a property to the list of properties
returns the property at the given index
sets the cell editor
returns the index of the specified property
returns the properties mapping object used to load the column model
returns the title of the specified column
returns the number of properties
add a listener to the list of listeners for the model
remove a listener from the list of listeners
returns the table
returns the value for the cell at column index and row index
adds a listener to the list thats notified each time a change
add multiple rows to this table
sets the rows
run method for the thread
sets the rows of the table
returns the rows of the table
removes all rows from the table
removes the row
returns the object at the given row
notifies listeners that rows have been deleted
notifies listeners that row have been inserted
returns true if this dbi is registered with the given dbi
sets the command state for the no instance selected state
a single instance has been selected
called when an instance is registered
returns current instance of db instance
fires an instance selection change event on the iss
adds an instance selection listener to this environment
removes an instance selection listener
parse the caches information
parses a data info string and returns the array list of strings
add a new tab to the form
returns a list of the columns that are available for use in the
parses the info string into an array list
parses the logs info into a list
return a list of lock infos that are stored in the given
parse the versions information
parses a list of lines to a medium
parses session information
is the autolog enabled
sets the multiplier for the parameters
sets the cache size of the catalog
sets the date time
set the hit rate
set the successfull status
sets the unsuccessfull
sets the content of the container
sets the logical reads
sets the prompt
sets the logical writes
sets the physical reads
sets the physical writes
gets the value of the first log property
gets the last log
returns the log flag
returns the stamp1
returns the timestamp of this event
get the stop date
gets the number of volumes
sets the index of the first log
returns true if this application should be installed as default installation
get the root directory of the installation to be installed
sets the last log
set if this component should be installed as default installation
set the root directory of the installation to be installed
sets the log
gets the database connection
set the page number
gets a plain dbm connection
set the timestamp of the invitation
set the timestamp second
set the stop date
sets the volumes
reload the state of the database
gets the value of the rc property
sets the rc
appends the previous line prefix to the given line
reads a reference
checks if the type is already in set and sets it
this is not used
returns the last name of this publication
gets the first name
returns null if no such address exists
appends a string representation of this object to the given
reads the next line from the file
returns true if the given object is a point and the same
returns a hash code value for this object
appends a string representation of this object to the given
compares this point to another point
deletes the address
returns true if the two ipinfo objects are equal
determine whether the user has whois query
returns a hash code value for the object
set the whois query flag
appends a string representation of this to the given
returns true if the document should automatically be saved
sets the auto save flag
returns the hash code value for this map entry
returns true if the given object is a pos and the same
returns the key of this entry
creates a word object from the given synset
gets the lexicographer file number
sets the lexicographer file name containing this synset
sets up the test fixture
test method for
test method for
test the basic case of the dictionary using a test
test index word
test if the word is in the synset
test if code synset code is a gloss of this word
test method for
test method for
sets up the test fixture
test if the synset is valid
test method for
test method for
test method for
test method for
test method for
test the get pointers method of synset
test method for
test get all dictionary element types method
test get name method
does the given synset contain the given offsets
get the size of the file in bytes
returns the server configuration
starts the listener
close all open sessions and unbinds
parse a complete byte buffer
sets the calendar to a new value
sets the formatter for the number values in this field
parses the source routes command
returns the current entry point
gets the complexity of this class
check if clazz is imported and maybe remove package delimiter from
add the slots in kill to the current set unless there are
intersects this variable set with another
add the slots in gen to the current set unless there are
this does take the instr into account and modifies stack
return instruction in human readable form
checks if this expression contains a matching load that matches the
called by objects that are traversing the nodes of the tree implicitely
called by objects that are traversing the nodes of the tree implicitely
called by objects that are traversing the nodes of the tree implicitely
returns a list of all users in the system
return the corresponding internet address
checks if the password entered matches the stored password
returns an online list of logged in users
login for user
returns the details for the given user
removes the packet when the delete is badrequest
method to logout a user
logs out the user with the given address
returns a packet containing all users
returns a packet whosonline user list
registers a new user
the user details are used to get the packet for the given id
creates a userloggedoff packet
gets the public key pair of the user with the given id
shows the register
shows the login window
shows the main screen
shows the details of the given user
returns the certificate associated with the given id
shows all users
called when the user selects the who is online
connects to the default server
the same as calling show error message string msg
recieve a message from the chat frame
closes the given chat window
returns the user address of the currently logged in user
disconnects from the server
closes the input stream
generate a new client id
sends a chat message to the chat service
returns true if the given key is a legal key
closes the connection to the server
this method is called to reset the server side facade
initialize the connection with the client
is legal key method comment
initializes the chat
sends a message to the chat service
logs out the user
closes the chat
request whos online from the server
changes the screen to login
displays the form to all users
recieves a message
changes the data to the whos online user list
this function changes the register screen
send a message to the chat window
performs an action assigned to the change screen entry point
change the details screen to the details screen
returns the public keys for this message
checks the passwords for the given characters
shows allusers requests and returns a list of allusers
updates the inet socket address with the new private key
returns the users
requests the details of the user with the given id
adds a public key to this certificate
checks if a key is a legal public key
closes the chat service and waits for the thread to exit
close the chat starter
send an encrypted message to the server
get the certificate reply
retrieves details for this packet
this method verifies if the supplied public key is valid
this method initializes j tabbed pane
this method initializes ep message text
this method initializes go directory menu item
this method initializes go files menu item
this method initializes j frame
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes about dialog
this method initializes about content pane
this method initializes j menu item
starts the thread
creates the customer queue the doorman and the barbers
starts the thread
stops the current thread
starts a new process
returns the current active process
start the process
end the process
update statistics after processing
process io request statistics
schedules the io operation to end at the io clock
creates all widgets in the directory
invoked when a mouse button has been released on a component
called when the mouse is pressed
generates the image to be printed
metodo che lancia il forward per la cambio
validates the device descriptor
sets the manufacturer
set the manufacturer id
gets the max power
sets the max power
gets whether pnp is enabled
sets whether the user can provide or not panned to events or not
returns the device descriptor for the process instance
sets the product description
returns true if the wakeup capability of the remote event is propagated
sets if this wakeup call can be remotely pinged or not
get the value of self powered
opens the device
set the self powered flag
get the signature of the first class
closes this index reader
set the signature of the central data collection
get the signature of the second member
sets the signature s2
checks if the handle is open
reset this transformer
returns the use external oscillator
purges the receive buffer
set the value of use external oscillator
are the goals high drive in ios mode
sets whether to high drive in ios mode
purges the transmit buffer from the open ftd2xx layer
get the size of the end point
sets the end point size
start the input task
returns true if pins pull down is enabled
set the timeout for this handler
stop the input processor
enables or disables pull down command
returns true if serial numbering is enabled
sets the serial number enabled
set the write timeout to be used by this writer
getter for property invert txd
setter for property invert txd
is sample received
set whether rxd is inverted
returns the read timeout
returns true if the rts are inverted
the version of the usb
sets whether to invert the rts or not
getter for property invert cts
returns the write timeout in milliseconds
setter for usb version
setter for property invert cts
default to true if the usb version is enabled
returns the invert dtr
sets the flag for inverting dtr
the method set by the usb version listener
set the write timeout
getter for property invert dsr
returns the in end point aisochronous
setter for property invert dsr
sets the in end point aisochronous
getter for property invert dcd
returns the status of the receive queue
setter for property invert dcd
getter for property in end point bisochronous
getter for property invert ri
setter for property in end point bisochronous
setter for property ri
returns the status of the transmit queue
returns the cbus 0
gets the interface afast serial
set the cbus0 parameter
sets the interface afast serial
returns the cbus 1
returns the reset pipe retry count
set the cbus1 parameter
gets the value of the interface afifo property
returns the cbus2 option
set the value of interface afifo
set the cbus2 parameter
returns the cbus 3 argument
gets the value of the interface afifo cpu target property
set the cbus3 parameter
returns the status of this modem
sets the interface afifo cpu target
returns the cbus4 option
set the cbus4 parameter specific
getter for property interface ahigh current
return true if using d2xx drivers
returns the latency timer for this node
if true this is an interface or ahigh current constraint
returns the in end point isochronous
set if use d2xx drivers
setter for property in end point isochronous
getter for property out end point isochronous
setter for property out end point isochronous
gets the value of the interface ause vcp drivers property
read device descriptor
sets the latency timer value
set the interface ause vcp drivers flag
returns the size of the user area
reads one user area of the device
writes a user area to the device
erases the text in the document
gets whether the interface is bfast serial
resets the communications handle to the default device
set the baud rate for the device
this method returns the current bit mode of the node
sets whether the interface is in the serial like
set the divisor for the convolution kernel
gets the value of the interface bfifo property
sets the flow control for the receiver
set if this class is an interface bfifo
sets the state of the dtr
sets the state of the rts
true if the target is an interface bfifo cpu
sets break on
resets bit bang mode to default
sets the interface bfifo cpu target
reload the tree
this method initializes this
getter for property interface bhigh current
set if this is a interface bhigh current
this method initializes j tree
refreshes the data of a code eeprom code
called whenever the value of the selection changes
clears the table
returns true if the interface buse vcp drivers bean is configured
update data from the device to the view
clears the table
this method initializes j scroll pane
return the affected device
set the interface buse vcp drivers flag
set the deadman timeout
this method initializes refresh button
returns the out end point aisochronous
update the table model
this method initializes j tool bar
this method initializes this
this method initializes j table
update the device and its descriptor
sets the out end point aisochronous
clears the table
read one byte from stream
this method initializes j split pane
compares two methods
this method initializes j tabbed pane
getter for property out end point bisochronous
this method initializes this
reads data from the stream
setter for property out end point bisochronous
returns an input stream for the device
returns an output stream for writing to the device
write a byte to the stream
writes data to the output stream
returns the unique id of the port that this node is componeted to
encrypt the value
encrypt a string
returns true if the given value matches the encrypted value
compares the given value with the encrypted value
validates that the given pobject represents a valid data field
return true if the given field is empty
opens a new repository with crud
override this method to create a new crud object
override this method to return a custom callback filter if any
create a proxy wrapper for the given crud
get the conversation factory
get the inner object of the session
logs an exception and aborts when there is an exception
wraps the result
invoke the method on the super class
return the crud
set the system id
this method is used to encode the value of this type
gets the type of this variable
adds a pobject to the cache
sets the value of this entry
get the number of elements in this collection
add the given element to this set
returns a string representation of this object
removes an object from the set
add the given property to this set
sets the set of children
gets the parent of this node
remove the given element from the cache
returns true if this element has content
remove the given property from this set
adds the given code att name code and and returns a
removes this attribute from its owner
adds a new pattribute to the pattribute set
put a new attribute into the
get a pset from the set definition
put a new attribute into the
get a named persistent pvalue value
removes an attribute from the list
populates this object from a map of attribute names
a concise description of the current object
returns the pattribute with given name
returns the expected class
get the class object for the received data
get the unique identifier for this instance
get the existing class
returns a string representation of the object
get the index of the order in the list
returns the class of the value
returns the modifiers of this class
returns true if the property value is persistent
returns the value of the client property
sets this object dirty
create a new pobject with the given id
sets a client property
creates a new pobject of the current instance
adds a new pobject to the cache
removes a pobject from the cache
get the repository to which this task belongs
returns the query that is being processed
add a new p value to the current value
return the inner object of the query expression
returns a string description of the record
changes the order index of this order by an other sorting
changes the order index of the attribute to
sets the current index to the last attribute
positions the current line to the first row
compare two pattribute
tests that two code naked set code s are equal
test method for
returns true if this value store stores the value
tests the constructor with fail reserved name
multi thread read put and remove all test
test that iterator returns a transient attribute
this test reproduces a deadlock in c
test equals and compare
this test reproduces type attribute on condition
test for the access to the fields and fields in a repository
gets a property from the configuration file
creates the lrcrud header
returns a file to the output stream
returns the md5 digest of the message
returns the message digest object
updates the crc32 checksum with the byte b
updates the checksum with the byte b
update the checksum with a portion of a byte array
get the current checksum value
extracts the mods document from the xml document
extracts mods document from dspace
returns a specific applicator that can be used to perform the
override this method to return a different base applicator
returns the xsl name of the current xml document
this function initializes the namespace cache so that the root forms are initialized
returns the namespace uri associated with the given prefix
return the xsl name for the pdf object
returns the first prefix mapped to the specified namespace uri
returns an iterator over all prefixes known to the namespace uri
creates a new jhove result object with default values
returns the jhove metadata node of the jhove application
returns the specific metadata for this node
sets raw jhove data for this node
set the specific metadata for this node
xsl class name
gets the value of the specific metadata other mdtype property
override this method to return a different base applicator
sets the value of specific metadata other mdtype
this method returns the filename of the xsl file
returns the specific metadata type of this message
returns the current template
creates a new transformer
sets the specific metadata type of the metadata to the specified value
this method is called after the children of a node are processed
set parameters for the given transformer
check if the arc files url should be used
validates the file and returns true if it exists
get the base uri of the file
returns the mets document
get the xml node for the any mets metadata
checks that the struct is valid
if the identifier is a constant type then this method returns the
initializes the ids
resolves a uri against the base uri
resolve the uri against the base uri
set the date of last modification to the current date
creates a delete response with the given identifier
this can be used to get the date of the http request header
get the server name
return the http status code for the response
return the status message for the response
returns the date the response was last modified
returns the md5 checksum for this string
get alternate dmd sec array
returns the md5 checksum for the content of this response
returns the default human agent document
get the default software agent document
returns the mets struct map type for the given xml object
get the primary dmd sec type
creates a qname object for the given node
is this profile a subclass of this profile
set the base uri for the evaluation context
set the document for mets queries
sets the package type of the profile
validate the profile of the package type pt
validates the profile containing this smets
returns a new instance of
gets all statements from the statement container that match a given subject
gets all statements of a subj object
gets all statements for a given subject and predicate value object
checks whether a triple exists between a given predicate and a subject
returns the triple source to be parsed
indicates whether there are more statements
returns the next statement in the iteration
returns the value factory used by this builder
this operation is not supported
clear the data in the graph
returns the subject of the statement
returns the triple predicate
returns the object of the statement
executes sparql query against the language of the current language
returns an rdf store for storing the state of the
returns the evaluated value
add all the rows in the given collection to this table
converts a date time value into a date time value format
returns the year of the date
clear the query result builder
evaluates the given value as a
returns the month of the date as a
returns true if the object code o code is in this collection
evaluates the date time value using the date time type
returns true if this collection contains all of the elements in the
evaluates the date as a
two rdf binding sets are equal if their
returns the substring of the string that comes before the
returns a list of variables in the query
returns the substring of the string that comes after the specified
converts a string representing a java primitive value into a value
return true if the query is marked as distinct
converts a string to a boolean
converts a string value into an upper case
returns true if the query result set is empty
converts a string value into a value
converts a string representing a boolean or literal into a value
returns true if the query result is ordered
returns the substring of the inner string that comes before the inner string
evaluates the given values
returns an iterator over this set
remove a row from the sesame result
removes from this row the values of the collection are not removed
removes from this row the elements that are not contained in
returns an iterator over the values of the subj variable
returns the list of variables declared in this subject
returns an iterator over the elements in the list
gets a list of variables of the wrapped variables set
returns true if there is a next row
returns a string description of the set
p return the next
accept a binding set visitor
returns code true code if the iteration has more elements
sets the rdf source for this triple
returns the value of the given variable
returns the list of variables
returns a description of the set of matches for the purpose of
returns the next tuple set row
remove a row from the sesame result
returns the value of the variable in this row
describe the set of results
accept a binding set visitor
makes a new distinct instance
accept a binding set visitor
creates a new rdf binding set with the given variable
projects the given variables to rdf variables
creates an addition logic for the value
add a new binding set
creates an and logic instance for this sparql query
creates the default bound logic for the given data
creates a new
returns the logic for the given variable
creates an expression to represent a division logic
creates an equals logic for the given data
creates and returns the logic for this promotion
defines the logic of the proteins in the specified
creates and returns the logic for ltelogic sodle
defines the logic of the proteins in a lt logic promotion
creates a multiplication logic for the given data
creates an expression which returns true if the
evaluate an rdf binding
creates an or logic
todo this is a little helper to get query logic
creates a plus logic
creates a sparql query for constructing a new sparql query logic
creates a subtraction logic object for the given binary expression
defines the datatype logic of the call
defines a new ask query logic
creates an instance of the logic for this programming function
returns a describe query logic object for a given describe query
clears the debug output
sets the output to a debug listener
creates an tt is irilogic tt expression
debug output of the jpg stream to stderr
prints the debugger to stdout
returns the default value factory of this builder
gets the logic factory used by this parser
sets the logic factory
creates a language logic call expression
evaluates an rdf binding expression against an rdf binding
evaluates an rdf binding
returns the select query logic for the given data
evaluates an rdf binding
cast a string literal to the type
cast a float literal
cast a double literal to this type
cast a decimal literal to the form of this type
creates the language matching logic for the current value
cast an integer literal
cast a literal to a string type
cast a boolean literal to this type
cast an iri with a string type
cast a literal to a string type
creates a filter constraint
evaluates an rdf binding
creates a new same term logic call with the same data
evaluates an rdf expression against a bindings
cast a string literal to a boolean type
casts the given literal to a boolean literal
casts the given literal to a boolean literal
casts the given literal to a boolean literal
casts the given literal to a boolean literal
creates a regex logic for the given data
casts the given
cast a boolean literal to this type
returns a streamed set of constraints that the given data is mapped to
casts the given literal to the type
evaluates an rdf binding expression against a value
evaluates an rdf expression against an rdf binding
gets the specified logic by name
cast a string literal to a value
casts the given literal to a number
casts the given literal to a numeric value
casts the given literal to a number with the given type
gets the group constraint logic
casts the given literal to a numeric value
casts the given
creates a not equals logic for the given data
cast a boolean literal to this type
casts the given uri to a value
casts the given literal to a value with the given type
cast a string to the type represented by this node
returns the effective boolean logic
cast a float literal
casts the given literal to a double value
returns the predicate logic for a triple
casts the given literal to a number with the given type
casts the given literal to a numeric value
casts the given
cast a boolean literal to this type
creates a default value conversion logic
casts the given uri to a value
casts the given literal to a value with the given type
evaluates this expression in an rdf data
casts the given string to an iri
returns a union logic between this and the given constraint logic
casts the given float literal to an iri
creates a numeric promotion logic
casts the given double literal to an iri
casts the given
casts the given integer literal to an iri
casts the given boolean literal to an iri
returns a new value ordering logic
casts the given iri to a value
casts the given literal to an iri
cast a string to a date time
creates a constraint logic for an optional literal
cast a string literal to the type
casts the given value to the type
casts the given literal to a value with the given type
casts the given double literal to a value
cast a string to the type represented by this node
cast a double literal to a value
casts the given
casts the given literal to a value with the given type
casts the given literal to a double type
casts the given integer literal to a value
cast an integer literal
cast a double literal to a value
casts the given literal to a date time value
casts the given
casts the given literal to a double type
casts the given boolean literal to a value
gets the external function logic for the given function name
cast a boolean literal to this type
casts the given literal to a double type
casts the given uri to a value
casts the given uri to an int value
casts the given
casts the given literal to a date time value
casts the given literal to the type
cast a boolean literal to this type
casts the given uri to a value
evaluates an rdf expression against an iri
casts the given literal to the value represented by this object
casts the given literal to a double type
casts the given float literal to an untyped literal
casts the given double literal to an untyped literal
casts the given decimal literal to an untyped literal
evaluates an rdf variable
returns an order expression logic for the given order expression
casts the given integer literal to an untyped literal
order the binding set according to the order
compares two rdf binding objects by their ordering logic
evaluates the given numbers against the given numbers
casts the given boolean literal to an untyped literal
evaluates the integer given by the number and returns an integer
evaluates the given numbers
casts the given iri to an untyped literal
evaluates the given numbers
evaluates the given numbers
evaluates the given numbers
casts the given literal to a value returning a new value
evaluates the given numbers
evaluates the given numbers
returns true if the two dates are equal
registers an external function with this factory
evaluates two strings as code boolean code values
evaluates the predicate returning true if the two values are not
evaluate two booleans
evaluates the expression and returns the result of the result of the evaluation
evaluates the given boolean literal object and returns the result
evaluate the given number
evaluates a double
evaluates a float
evaluate an integer
the method checks whether the two specified strings are equal
evaluates an rdf expression using this bindings
evaluates the less than operation on two values
evaluates the given strings
evaluates the predicate returning true if the two values are equal
evaluates the given bindings
evaluate a boolean value
make a fresh distinct
evaluates the predicate returning true if the two values are equal
gets the range of the resource
promote a given number of non na n values to a new literal
convert an object to a literal
promote a number literal into a float sparql
promote a number literal into a decimal sparql
executes an rdf source
returns a literal with true true or false literal
return the select query logic for this query
converts the given literal to a boolean
converts a string to a sparql 1
adds a triple to the list of triples to be returned
gets the subject expression of the transition
gets the predicate expression of the logic
returns an iterator over the triples in this result set
converts the literal to a label
gets the object expression
returns a string representation of this set of emotion
returns the printable description of this clause
gets the value of parent
creates a streamed triple constraint logic object from data and data
returns the values of this filter
converts a double value into a literal
p add an object to the model
returns a string representation of this object
converts the given literal to a double
converts an integer to a literal
describes the set of rdf
converts the given integer literal to an integer
returns the list of variables
converts a date time into a sparql 1
indicates if the query is em distinct em or not
converts the supplied literal to a date time
is this term a term which is distinct
returns true if the array is empty false otherwise
two variables are equal if the names are the same
converts a float value into a literal
evaluate an rdf binding
adds a binding of a variable
returns a list of all variables
returns the number of elements in this set
converts the given literal to a float
throws unsupported operation exception
returns an iterator over the elements in this set
converts a long value into a literal sparql 1
removes a single instance of the specified element from this
throws an unsupported operation exception
convert the given decimal literal to a long
return the subject of this value
gets the day of the month
removes from this list all the rows that are contained in the given
returns the predicate of this triple
retains only the rows in this table that are contained in the
return the value of the property
returns the graph name of this graph
gets the hour
returns a string representation of the object
description of the method
returns the millisecond value of this duration
returns the next row in this result set
remove the given rdf binding set from this instance
gets the minute
returns the value of the given variable
getter for property months
returns the values of this row
gets the variables attribute of the elvis literal object
gets the time zone
gets the time zone of this code calendar date code object
sets the value of the
returns whether the sentence is normalized
formats an integer to a string
gets the id
evaluate an rdf binding
compares this to another object
returns the hash code of this object
returns the name of the underlying node
accept the visitor
accept the visitor
this is an empty method that does nothing
returns the value of the label property
gets the value of language
returns the datatype of this literal
compares this base literal to the specified object
returns a hash code for this object
returns a string representation of this literal
return the namespace of the document being parsed
return the local name for this namespace
compares this object with the specified object for equality
the overriding of this method should ensure that the objects of this class
returns the base uri
starts the rdf xmlhandler
end the rdf xml document
handles the statement
getter of the manifests
executes the test
adds a statement to the store
starts the rdf test
gets the value of tests
setter for property base uri
parses the given xml input stream and returns the binding set
called when parsing is started
implementation of the interface method
given a namespace prefix return the corresponding namespace
gets the value of data files
gets the value of query file
gets the name of the result file
sets the query file
sets the name of the result file
adds a data file to the list of data files
this method initializes this
this method initializes j progress bar
this method initializes j label status
this method initializes j desktop pane main
this method initializes j tool bar
this method initializes j jmenu bar
this method initializes j button new
this method initializes j button open
this method initializes j button save
this method initializes j button save all
this method initializes j button print
this method initializes j button execute
this method initializes j button pause
this method initializes j button stop
this method initializes this
this method initializes j menu item1
this method initializes j menu item
this method initializes j menu salvar
this method initializes j menu savar como
this method initializes j menu salvar todos
this method initializes j menu imprimir
this method initializes j menu sair
this method initializes j menu projeto
this method initializes j menu executar
this method initializes j split pane editor
this method initializes j menu pause
this method initializes j scroll pane fonte
this method initializes j menu stop
this method initializes j scroll pane table
this method initializes j menu ajuda
this method initializes j menu item
this method initializes j menu sobre
this method initializes j split pane console
this method initializes j text area console
this method initializes j scroll pane console
this method initializes j split pane table
this method initializes j scroll pane symbol
creates the status panel
shows the help text
sets the status label
displays the error
shows a success message
this method updates ta status
split the size of a file by the size of the
this method initializes this
convert the list to a string
convert a list to a string for printing
gets the organization
sets the organization name
sets the reseachers string
returns the organizations researchers as a string
set the keywords string
returns the keywords of this organization as a string
gets the collaboration that was found
sets the link message
transfers user to new page
sets the collaboration that was found
sets the collaboration name
finds the organization with the link
gets the value of researcher
sets the researchers researcher
sets the researchers name
logs the user out by invalidating the session
displays all researchers
sets the types string
handles the user clicking on the find researcher page link
returns the types as a string
set the years of the album
returns the years in a string
sets the outcome types of the project
returns a string in the outcome types of this collaboration
sets the organizations string
returns the organizations in a string
transfers user to new page
handles the user clicking on the find collaboration page link
returns a vector of all the website objects of the database
adds a code text change listener code to the button
removes a code text change listener code from the button
returns a list of actions
gets the sub id for the given str isdn
sets session attributes to the request
get the current page number
returns a list of all the beans in the repository
gets a list of all options for this page
get the current sequence number
get a list of page type
at startup create and show the main frame of the application
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
gets the value of the data table property
sets the data table
p automatically managed component initialization
creates and initializes the components
adds listeners to the buttons and the button boxes
initializes the component
draws quotation circle
deletes all the nodes from the graph
adds a point to the line
removes a point from the list
sets the list of arr point for this object
gets the current selected formation
gets the datecreate
set the date when the task was created
gets the datelastmod
setter for property datelastmod
gets the value of fail
sets the number of the test cases that failed
gets the value of success
sets the success value for this get status response
returns the field names
sets the field names value for this result row
set the rows of this result table to the given list
gets the value of scenario id
sets the scenario id
gets the scenario table
sets the scenario table
gets the app user id
sets the app user id
gets the datasource
sets the datasource
sets the task column
gets the value of taskgroup
sets the row
sets the taskgroup
gets the area
sets the area of the ship
gets the colspan
sets the current language
returns the number of rows in the model
set the number of rows to be displayed in the table
gets the value of taskgroup id
sets the taskgroup id value for this describe sobject result
gets the value of alert
sets the alert text
sets the left or right area of the ship
gets the value of failed queries
getter for property align
sets the align attribute of the xtra scroll bar object
setter for property failed queries
gets the value of success queries
sets the success queries
returns a connection from the pool
tests if given sql has a syntax error
returns the percent of the two numbers
gets the sql exception
getter of the name of the foreign key column
set the name of the foreign key column
set the date for this request
gets the value of foreign key table name
sets the name of the foreign key table
sets the date attribute of the request
datasize number of the token
returns the message tag of this message
parses the request parameter and sets the int value
datasize number of the token in the original file
sets the message tag
sets the datatype
sets the attributes for the request
getter for property digits
gets the value of date from
sets the start date
gets the value of date till
sets the message list
sets the string value to the given value
sets the date till
sets the view
sets the start date
sets the date till attribute of the news article object
getter for property new password confirm
set the new password confirm
sets the column col of the meta table
set the allow equal in value flag
set the list parameter for this object
returns the value of allow equal sign in value
returns the list of all the elements of this collection
sets the delimiters
set the delimiters
get the delimiters that this token is set on
returns the number of elements in this collection
returns true if the string is in the list
returns an enumeration of the elements in this list
returns the vector
method in list
adds a string to the list
parses the string into tokens
gets the value of the platform id property
sets the platform id
returns the reference url
sets the reference url
returns the platform type
sets the platform type
gets the value of the platform location id property
sets the platform location id
gets the value of the new site code property
sets the new site code
gets the value of the is new site property
sets the is new site
gets the value of the platform type id property
sets the platform type id
initializes the servlet
this method is called to refresh the cache
sets the name of class implementing the
adds the object code item code with the given code priority code
clears this multiplicity object
change the key value of a node
delete the node from the heap
inserts a new object into the tree
inserts a new node with the given key into the trie
inserts a new node with the given key into the tree
inserts a new data element into the heap
returns the smallest value in the range
returns the object associated with the node
performs a cascading cut operation
make node y a child of node x
this method paints the simulator
adds a listener to the list of listeners
removes a listener from the list of listeners
returns the title of the video
gets the vendors name
returns the reference value of the resource
returns the version of the application
returns the description of the system
sets the directory context
returns the copyright
set the file context
returns the documents panel
this returns the folder panel
sets the selected file
closes the dialog
sets the status text
clear the progress bar
sets the current progress
sets the wait cursor on the display
invoked when an action occurs
opens the document if its not enabled
invoked when an action occurs
invoked when an action occurs
get the node context
removes the node from the tree
sets the node context
description of the method
gets the root attribute of the jtree object
returns the selected icon
sets the root folder of the file system tree
shows the status bar at the bottom of the splash screen
sets the foreground of the status bar and the cancel button
sets the background of the dialog
shows the splash screen
hide the splash screen
returns the document context
sets the document context
stop the splash
the implementation of the collapse all action called
the implementation of the collapse all action called
the implementation of the close action called
the implementation of the help action called
the implementation of the copy action
returns true if namespaces are shown
shows or hides the namespaces
returns whether the node should show the attributes in the tree
show the attributes of the root node
returns whether this tree is showing the trees values
show or hide the values
returns whether the comments are shown
show or hide the comments
adds an xpath to the list of xpaths
updates the preferences for the viewer
the implementation of the undo action called
the implementation of the preferences action called
closes the dialog
the implementation of the find action called
the implementation of the comment action called
the implementation of the copy action called
returns true if the namespaces should be visible
the implementation of the print action called
the implementation of the unindent action called
the implementation of the paste action called
inits the tag name field
the implementation of the print action called
returns the state of the show attributes check box
sets the values of the search control
the implementation of the find next action called
this returs has the user selected show comments
initializes the panel
the implementation of the goto action called
returns true if the values should be shown
the implementation of the close action called
the implementation of the cut action called
the implementation of the select all action called
the implementation of the tag action called
collapses all the nodes in the tree
prints a document
prints the document to the printer
initializes the gui from the properties
the implementation of the unindent action called
prints a text in the text pane
prints a text to the printer
initialize this page
inits the search field
the implementation of the redo action called
the implementation of the comment action called
the implementation of the help action called
converts all unprintable things to a space
if set to true then line number information will be printed
returns whether to print a line number
if wrap true text is wrapped false otherwise
returns true if the search string is in match case
checks if is wrap text
set whether the search should be case sensitive
if true then the header printed out during the output of each
set the number of spaces to substitute for this editor
get the number of spaces for this editor
returns whether or not to print the header
returns the tag completion flag
set the tag completion property
if the editor contains mixed content then indents the texts
set whether mixed content should be indented
returns whether or not the search direction is down
set the search direction
adds a search string to the list of searches
updates the preferences search with the current list of
returns the state of the validate button
get the jeditor pane holding the text editor for this panel
sets the element
set the data element
invoked when an action occurs
moves the caret to the specified line
swftag types interface
comment currently selected text
validates the xml document
get the string representation of the tab
set the element for this widget
returns the element to be committed
commits the values in this panel
refreshes the content of this editor
closes the service
set the element for this panel
return the number of spaces to use for a tab
sets the element in the address
the implementation of the copy action called
the implementation of the remove address action called
the implementation of the address action called
sets the address to the default address and opens the editor
set the addresses
adds an element to the list
closes all open windows
returns the address at the specified row
removes the address of the element
returns the number of rows in the model
returns the value for the cell at column index and row index
messaged when the document has created an edit the edit is
called when the caret position is updated
invoked when a component gains the keyboard focus
puts the item if it is not there
sets the document to display
invoked when a component loses the keyboard focus
invoked when an action occurs
gets the task title
returns the current version of this plugin
retuns the vendor of the mafeditor or edif port
returns the http www
closes all open viewers
returns the description of the filter
returns the copyright string for this dankert
opens the file
open the node service
opens a service for the given action
opens a service for the given action
returns the icon for the file
open the document
opens a node with the given service
get the name for this file
returns the icon for the node
get the description for this file
opens document if not already opened
add a service context listener
returns the name of the node
remove a service context listener
opens the file with the given arguments
returns the description of this node
disposes this manager
open the given directory
opens the document
opens a service for the given action
opens the directory
adds a service to the set of services
dispose the component
add an action to this context manager
add the given marker to this context
remove a service from the services list
removes an action from the list of actions that this manager manages
add a document context listener
remove the marker from this manager
removes a document context listener
stop the service tracker
start this server as a non daemon
disposes the context
notify all listeners that the services of a change
fires the markers changed event
notify all registered action listeners that the actions of the specified
destroy this component
set the debug flag
set the auto adjustment of the field
returns the jsvgcanvas
shows the given document in the canvas
shows the given document in the viewer
returns the input handler that handles the given url
returns the action associated with the given string
called when the loading of a document was started
called when the loading of a document was completed
called when the loading of a document was cancelled
called when the loading of a document has failed
called when a build started
called when a build was completed
called when a build was cancelled
called when a build failed
called when a onload event dispatch started
called when a onload event dispatch was completed
called when a onload event dispatch was cancelled
called when a onload event dispatch failed
called when a rendering is in its preparing phase
called when a rendering started
called when a rendering was completed
called when a rendering was cancelled
called when a rendering failed
called when a link is activated
called when the manager was started
called when the manager was suspended
called when the manager was resumed
called when the manager was stopped
called when an update started
called when an update was completed
called when an update failed
displays an error message
displays an error resulting from the specified exception
displays a message in the status bar
shows an alert dialog box
shows a prompt dialog box
shows a prompt dialog box
shows a confirmation dialog
returns a customized the pixel unit to millimeters
returns the conversion factor from pixel units to millimeters
returns arial font family name
returns the medium font size in millimeters
returns a lighter font weight
returns a bolder font weight
returns the language of the default locale
returns the user stylesheet uri
returns true if the xmlparser is configured to validate the xml document
returns the media type for this page
returns the alternate style sheet title
opens a link
returns true if the given extension is supported by this
get a security for the script
checks if the script is loaded or not
used for creating external resource security
check if the document is loaded and if so load it
sets the state of the rendering to back
determines if the user can go back to the previous uri
goes forward to the previous uri
returns true if the current visited uri is a head of the
reloads the uri state from the disk
update the uri for the next state after a uri has been visited
updates the state of this manager
returns the word at the specified index
gets the scrambled word at the specified position
returns the number of words in this dictionary
description of the method
gets the value of the trayectorias property
getter for property velocidad
sets the value of the velocidad property
returns the vertical angle of the current point
sets the value of the angulo vertical property
paint the component
revert to previous state
sets the text of this label
add a line of text to the list
removes the line at the given index
draws a text with the given zoom level
returns the number of lines in this text
sets the widget that is used to create this component
set images for the view
sets the visible flag
clears the text
returns true if the mouse is over the button at the given position
sets the value of password
dispatches a mouse pressed event
set the minimum value
set the maximum value
sends a mouse released event to all
set the current value
initializes the window
forwards the key pressed event to all the widgets
sets the fixed property
key pressed callback
sets images for the form
key released event handler
sends the key released event to all widget listeners
sets the alpha channel
draw the label on the screen
sets images used for the calculation
draw the button on the screen
add a window to the list
sets the color to use when rendering
bind this texture as the current open gl context
sets the image to be displayed
sets the focus to the widgets contained in this container
returns whether the event is grabbed or not
gets the display bounds
update the position of the mouse
sets the grabbed state
adds a listener
adds a widget to this container
returns true if the game is in fullscreen mode
loads this texture into the given texture image
this method sets the font tool tip
clone this object
this initializes the loop
set the cursor used to display the image
adds a frame to the list
destroys the current open gl context
sets the zoom factor
removes frame at the given index
sets the update interval
get the character size in bytes
sets the current frame
requests the thread to quit
resets the animation to the beginning
updates the current frame
sets the current open gl color
draws a line using the current color
calculates the tiling values for the texture
set the alpha value
resets the open gl color
draws the animation
destroys the current display
reloads the size of the sprite
removes all frames from this frame manager
returns the image associated with this node
reloads the texture data
sets whether the animation is looping or not
gets the hotspot
returns true if the animation has a loop
sets the width of this component
adds an image to the list
returns an element at a certain index
calculate frames per second
sets the height of this component
find an image with a given filename
draws the sprite onto the screen
draws the image without a hotspot
sets the occupier for this player
clears the occupation of this cell
add a new object to the list of objects
sets the name of this property
sets the state of this component to be walkable
returns the object at the given index
returns whether this cell is currently occupied by a player or not
returns the client
removes the object at the given index
find the index of the object with the given file name
sets the tiles that this factory will use
returns the map
print the information of each frame in the game
sets the tile size
sets the character name
set the width of the board
initializes the instance of open gl runtime
updates the occupier tile of this tile
set the height of the board
add a frame to pic queues
check if a particular key is currently pressed
returns the current tile
returns a clone of this server map
returns the hotspot of this mouse
returns the x coordinate of the hotspot
returns the y coordinate of the hotspot
reloads the image
p set the file name
gets the relative path to the image to be displayed
draws a single square on the image with a specific alpha
creates a copy of this object
draws a specified number of frames in the specified alpha value
set the index of the image to display
clone this object
set the object index
adds animation to the animation list
draw the tile set on the screen
sets the given tiles to the given tile
sets the followed actor for this page
set the occupier of this cell
sets the current tile set
returns the occupier of this tile
getter for the tile set
sets the map to use
sets the object tile set for this row
get the x position of the mouse cursor
adds animation to the animation list
draws the occupier of the tile specified by m x y
returns the object tile set
draws the specified object according to the current drawing order
returns the frame at the given position
creates a copy of this animation
set the position of the drawing
returns the y coordinate of the mouse position
returns the tile at the given coordinates
sets the grid color
draws the specified amount of space in the current frame
set tile occupier for this board
sets the index of the object in the tile array
returns a clone of this object
returns the delta between the last mouse position and the last mouse position
draws the text of the chat
this draws the players name
gets the mouse left button down
sets the font for the chat
insert the text to the chat area
gets the mouse right button down
returns true if the chat text is talking
sets the current animation
checks if the mouse is moved
returns whether or not the control key is currently pressed
get the current animation
returns whether or not the alt key is down
moves the actor in the given direction
checks if moving is active
returns whether or not the shift key is down
forces the window to update
rotates the character by 90 degrees to left
rotates the character right
concentrate the power
shows a message in the user interface
called when this item is hitted by a shield
gets the location of the material
register a query
store the query context
description of the method
print out the current session
initializes the application
reset the main canvas to the default one
set the lom to be displayed
notify all registered lom panels that the lom selection has changed
called when the tree selection changes
reset the camera to its default state
get the value of the currently selected text
set the suggestion
get the lomattribute that this data node represents
description of the method
returns the name of the selected lexical unit
set the lom value
the unique identifier for this class
returns the bounds of the given camera scaled by the given camera
get the bounds of the buffer scaled by the camera
initializes the object instance
returns the help text of this wizard
sets the modified attribute of the editor object
initializes the actions for the different types of activities
update the display with the attributes
sets the query shape to be used to draw the query
set the value of the color property
set the rectangle to be displayed
returns the lom associated with this point
sets the scale used by this stroke
returns the id of the lom
sets the offset for the motion node
update the view of this object
returns the lomattribute
returns the value of the motion node field
sets the pickable flag for this object
sets the value of the is query property
returns true if the given node is the first node in the selection
set the active layer to the default
returns true if the given node is selected
returns the title displayed in the window
sets the lom for this monitor
returns the center point of the specified node
reinitialize this object with the given parent
set material location
initializes the stroke of the object
initializes the object instance
returns the path of the material to be used
creates a point with the given coordinates
show the activity state
creates a point with the given coordinates
returns the lom id of this drag
returns the main canvas of the mapper
returns the lesson mapper
switches to selection mode
get a button with helper
this method was created in visual age
get the material of the given archive file path
constructor for selection handler
returns the name of the material
sets the activity that will be the upper solution
go to the upper layer
updates the zoomto and the previewer of the active layer
returns the currently active code container node code
adds the bounds handles to the node that is selected
returns the previous active layers of this layer
returns the activity that will be displayed in the upper cell of the
returns the path to the archive files
set the path to the archive files
returns the toolbar to be used for manipulating data
returns true if the archive path is changing
returns the path of the old file
returns the local repository for this monitor
returns the canvas that is controlled by this frame
sets the default master
get the desired hypothesis
returns the preview canvas of this mon panel
returns the number of seconds in the teta distribution
removes bounds handles from node
get the default master for this project
returns true if the node is selected
modify all the currently selected lom
go to the upper layer
sets the material
returns the currently active code container node code
determine if the specified node is selectable i
returns the current main canvas of the application
get the total hypothesis for lom
initializes the object instance
adds a node to be selectable in this group
change the current selection by applying the current
returns the preview canvas of this frame
removes node from the list of selectable parents
returns the previous active layers in the active project
sets which node is selectable in this panel
returns the l f object that renders this component
return true if the low thumb is used
return the union of the full bounds of all the children
returns the activity that is currently the upper bound
sets the set of selectable parents
use the current low thumb
returns the selectable parents
use the current high thumb
processes a selection event that has occurred in this node
get the thumb of the specified material
loads the tutorial
this method returns a set of update restrictions for a given lom
load the tutorial from the xml file
reset the caches
get the location of the file
returns true if the event is an option selection event
save the project as a new file
returns true if the node is currently being dragged
saves the active project
make the thumbnail interactive
invoked when the marquee is started for a selected selection event
saves the current project on the database
invoked when the marquee starts to get the selection
modify the material of this relation
if the pressed node is a node then unselect all nodes and
if the pressed node is a node then unselect it
returns the selection handler of the table
indicates if this code metadata set code has any restrictions
initializes the encoding sniffing heuristics table
returns the lmproject that was active
remove the selection handler from the list of selectionables
convert this node into a opaque image
creates a node filter that will filter all nodes that match the specified
set the lmproject for this point
drag the selection rectangle if there is no selection
removes marquee from the selection
shows the activity state
set the lmproject to be used
override this method to get notified when the pressed node is the
set the lmproject that will be used
copy the selected nodes to the clipboard
returns the lmproject object
if a key was pressed delete it
pastes the clipboard content to the current clipboard in the
add a node to the paste of this node
removes from the selection the last element of the selection
returns a boolean indicating whether or not the support for delete key
get the value of the first element of this lom
checks whether the value is in the given lom
this is a convenience method that returns the value for the suggestion
returns a restriction set containing the values of the lom
specifies if the delete action is enabled
returns the value of the xpath field
returns true if the given node is an selectable parent
this creates an xml element from a lomvalue and lomvalue
give a task to the worker
determine if the specified node is a camera layer
detaches the element from its parent
initialize the lom for a given lom
rebuild the related lom buffer
create a comparator for the lom
returns the precision associated with the results of the search
remove the specified document from the repository
return the recall of the mean
remove a document from the index
add a document to the lucene index
reset the index
adds a new document to the index
inserts the specified element into this set if it is not already present
cleans the directory
invoked when the marquee starts
stops the marquee
returns the absolute path for the given url
adds a new button to the group
removes the given button from the group
add a new action to this group
remove a toggle from this state
adds the button model to this group
removes the button model from this group
returns the number of models in the model list
rounds a score
returns the next highest score
returns the rank for the specified c
get the score for the object
uses a heuristic based on the score
un normalized score
initializes the servlet
adds a datastream to the repository
ingests object using parameters stored in config file
modifies the datastream by value
modifies an object
delete a datastream from the repository
purge object from fedora
adds a disseminator to the repository
modifies the disseminator for the repository
purges the disseminator
returns the next buffered objects
checks if there is a session in the session map
adds a disseminator to the repository
modifies the pid in a disseminator
test the creation of ext metadata objects
purges a disseminator from the system
tests the ingesting of a empty object
tests that purge object operation works correctly
tests the purge object method with a successful response
test the get title method
tests that a collection returned from get collection throws exceptions
test get next buffered objects method
authenticates the user
links to view with the title of the table
test view dublin core
tests the get random string method
test parsing of a map
sets the data for this node
creates a repository collection with the given user id
checks if the output path exists and creates it if not
returns the sql query that will be executed
this method returns a vector containing all bdefs read from the map
get all of the mechanisms of a particular pid
removes all metadata fields of a given collection
updates an item in the database
removes an item from the database
removes a collection from the database
removes a user from the database
activates the user
returns a list of data source objects
this method builds a list of sql statements to be executed
closes the connection
executes an update query
return the list of default public collection
converts a list of boolean values to a table
english constructs a collection br
get a list of collections
returns a list of metadata records in a collection
get list of all items in a review
returns true if the user has been defined in the review phase
gets a list of user ids from the user id
get the owner of the specified collection
returns a list of all items in the repository
returns a list of all items in the repository
returns a list of all collections in the system
checks if an user is an authenticated user
get an id of an user from the hash map
get a list of all collaborative collections
get all users ordered in an order file
gets information about a user
creates an entry in the map given in the map file
get all active users older than an isdisabled
help method to check if a given user is a card admin
returns true if there is a feedback in the collection
deletes the thumbnail for the given service
check if the metadata for the ds is an admin metadata
parses a pdf file into a string
parses the given file into a string
filters the result of a query
parses an rtf document into a string
parses the byte array in text form
parse a word document
take care of text between tags check against keyword list for matches if
parses the file and returns the resulting html string
this method will generate a new advanced search
delete index of the selected document
index the item in the repository
updates the index of the item with the given id
return a list of index
returns a list of collection members for the given collection pid
gets the total number of documents
executes a search based on the query
gets all collections
gets all users
gets a user
gets the user id from name
returns a list of all the datastreams that this item should be
sets the user id
sets the interface to invoke with the fedora repository
gets the value of the item pid property
returns the location url
sets the location url
this method sets the data of this message
gets the value of the ds id property
gets the mime type
compare this ds with another ds
compare two items for equality
get next buffered objects for fedora
gets the current user
returns the admin manager
returns the collection mgr
authenticates the user against the web server
utility method to authenticate a user with fedora
update a dublin core in the database
logs out the current user
returns the search manager
gets the icon for the specified mime type
returns the preview
gets the security manager
returns the collab collection mgr
returns a list of all search index objects
remove an item index and its thumbnails
removes an item from repository
toggle the state of the feed back
returns the collection members of the given collection pid
gets an item from the repository
get the datastream from the item pid
get a list of external items
gets the fedora importer
get users collab collections for a user
gets the collection members
get the title of the collection from the pid
returns a list of meta data fields from the database
get users which are not collab collections
get all collections for a user
returns the authenticated status
sets the authenticated status of this session
gets the first name
gets the last name
gets the email
gets the password
gets the disabled state of this task
sets the disabled state of this filter
sets the user name
sets the first name of this user
sets this users last name
sets the email
sets the password
sets the is administrator flag
creates a copy of the user object
sets the admins
set the name of the collection
sets the list of contributors
sets the user pool synchronization
adds an admin
adds a list of new users to the list
checks if the user already exists in the list
returns the map that contains the given user name
removes an admin
adds a contrib to the list of contributors
removes a contribution
sets the collection pid
checks if the collection is a collaborative collection
gets a list of collaborative collections
returns true if the given user is an editor
checks if the feedback process is enabled
remove collection from repository
adds the given object to the given hashtable using the given key
checks if the collection can be added to the collection
checks if the collection can be deleted
checks if the item exists
returns true if the collection can be deleted
sets the database components
checks if an item can be edited
returns true if the collection can be viewed by the repository
end the current session
returns the configured user for the given user id
sets the search manager
returns the current user
returns the dbaccess from the database connector interface
returns the disabled user
sets the security manager
toggle the feedback option of the collection
returns the user that is used to login to the database
checks if the collection is admin
checks if an user is an admin of the item
checks if the collection is an editor of a collection
gets the binding for the dissemination datastream binding
returns the custom meta data map
sets the field name
sets the value of the field
gets the field value
sets the security manager
returns a new search manager
search for the collection object for an item pid
gets the map of fields
get the datastream from the store
sets the value of a field
sets the map of fields
compares this dublin core object with another
adds a datastream to the interface
gets the value of the owner id property
invoked when the collaborative collection button is pressed
returns true if this is a collaborative collection
gets an item in fedora
getter for property pid
setter for property pid
sets the title of the item
sets the owner id
sets the collection pid
sets whether the object is private
sets whether feedback should be enabled or not
returns whether the editor has unsaved changes
returns a list of items to review
gets the username for the given item pid
removes an item from the database
review the item identified by the id parameter
updates the index of a dublin core item
checks if indices exist and creates appropriate index files
creates the directory for the search index
gets the number of documents in the index
deletes the index
delete all documents from the index
deletes a document from the index
returns a list of all documents in the index
updates the index of the given document
searches the database for the query string
returns true if this object represents an admin datastream
recursively delete the directory and all its contents
modifies the given itunes rss feed
copies this object to the supplied object
returns a string representation of the object
sets the current page and updates the ui
sets the position to the first node in the list
sets the font for this view
set the text in the text box
changes the position of the page
sets the first attribute of the words object
this method was created by m
set the position of the page in the presentation
sets the position of the page in the perc
rolls the previous buffer
rolls the next buffer
sets the position of the token in the buffer
sets fg bg colors for view
returns the global line space
set the text of the view
get a property from the midlet context
get a long property
get a property of type string
resets the object to its initial state
set a long property
sets a string property
returns the maximum number of items in feed
sets the maximum number of items in feed
sets the property value for the given name in the buffer
returns the maximum number of words that should be generated in a description
sets the maximum number of words that should be generated in a description
returns the current import url setting
sets the url to import to
returns the current setting for importing users
sets the username to use when importing data
returns a string representation of the object
returns the import password
sets the password used to import files
get whether or not to mark unread items in this playlist
sets whether or not to mark unread items in this playlist
returns the setting for open feed list
sets whether or not feed list is open for this user
copies this object to the supplied feed
returns whether items encoded in settings will be written
sets whether items encoded in the settings will be used
set whether or not text box will be used
sets the current log level
append a new resource to the list
append item to command list
add item to list
returns the index of the selected item in a choice
reads characters into a portion of an array
set the text of the view
returns the settings of the application
set loading finished
returns the description to be shown in the list box
starts the recording of the input stream
remove a reference from the displayable
read a word
halt the video thread if it is not already running then shut it
returns the type action
sets the type action
sets the direction
find the configuration file
search the config file in the system properties file
adds a table to the list
returns true if a table is restricted
checks if a table is authorized to access
constructor for the schema
compares this schema with another schema
creates a new catalog with the given name
constructor for a line table
adds a primary key column to this table
add a value to the table
returns the value for a column
adds a column to the model
returns a string representation of the table
returns true if the column name is in the cache
returns code true code if the given column name is a primary
description of the method
creates a new code jdbc inspector code instance
return an iterator over all the column names
method connect to server
close all connections in this pool
returns the mapping of column names to their corresponding sizes
get all table definitions for the specified schema
constructor for data manager
added by jon
get all naked tables for a schema
returns true if the table has a primary key
get all primary keys for the table
checks if a table is filled
get a table by its name
disconnect this instance
called when a task is created
sets the adjacency matrix value
initializes the help options
returns true if the permutation is the same as the permutation in the
adds a file to the list of input files
run n k steps
returns the name of the task
run a single thread
initializes the input file options
return a new shapes diagram instance
this method is called upon plug in activation
returns the plugins resource bundle
creates the figure used for feedback
maps an object to an edit part
return a ifigure depending on the instance of the current model element
returns the control
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
read the object from the stream
reload this registry from disk
get the class name
get marshaller by class name
serialize an object to the underlying stream
get a marshaller by class name
jndi lookup method
convert the given jndi name to the jndi name to use
fill the statement with the parameters
loads a properties file and returns it as a properties object
unloads all properties
executes the given sql statement which may return multiple results
executes the given sql statement which may return multiple results
executes the given sql statement and signals the driver that the
get a connection from the given data source
registers a listener to receive sensor events
return the mode value
gets the smasecurity object
set the endpoint address for the specified port name
sets the about stock value for this wsyetki kullanici
gets the pips
sets the pips
sets the quote type
returns the down trend color
getter for property artificial
setter for property artificial
returns the close price
sets the close price
getter for property pattern curve width
sets the max price
this method returns the color of the peaks back ground
sets the min price
the color of the peaks
gets the open price value for this item
gets the price header color
sets the open price value for this stock item
getter for property period type
setter for property period type
returns the time index
this method returns the up trend color
returns true if the volume is in the different color
test the data feed connection
set down trend color set color to cc
write a string to the log
returns a statement
sets the value of the
set the pattern curve color field
set the width of the pattern curve
set the color used to color the peaks
set the color of the peaks
set peak legend round color
sets the price header color
set up trend color
checks if the given data feed is an intraday now
returns the masecurity that is used to set the value in the
gets the name of the lead ticker
start the test update work
called by the browser or applet viewer to inform this applet
stops the clock
returns the weight of the make this calculation is using
returns the parameter of the object
returns the weight of the make this is an int
returns the title for this page
returns the weight of the make that is returned by
returns the weight of the make in the last round
gets the parameter attribute of the order manager object
get the low value of the com factor from history
gets the make weight for the method
weight of this item is zero based
this method returns the history length of the given date
get the transactions vector
returns whether the base line is drawn on
returns whether or not to show the company name in the header
returns the log point of the given value
returns the mode
sets the duration
sets the frequency of the note
set the value of scale for this conditions object
determines if the value is in the given category
checks if the value is in the given category
checks if the value is in the given category
checks if the value is in the given category
checks if the value is in the given category
start the server
stops the service
sends command to server
restarts the server
pauses the server
resumes the simulation
set the directories controlled by the poller
set the value of auto move
returns the directory associated to the given directory
set the value of time based
requests the thread to stop
detects if the destination is an original source
returns true if the object has been moved
compares its two arguments for order
returns the event of this base poller
set the directory to use when the poller should move files
returns the regular expression pattern used in this rule
this method computes the value from the given value
sets the home base of this user
sets the current location
sets the destination
auto generated axis2 error handler
auto generated axis2 error handler
moves the vehicle
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
sets the number of smoke detectors
auto generated axis2 error handler
water sprinkler count setter
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
dispatch the engines to the engine
this method should be called whenever the agent monitoring service
sets the location of the object relative to the parent
gets the value at attribute of the main table object
refreshes the table model
add a new smoke detector
add a water sprinkler to the repository
clears all the data from the server
sets the details for the admin
notify all clients that the fire is out message has been sent
sets the admin details
auto generated setter method
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
activates the service
deactivates the service
add water sprinkler to service
deactivates the smoke detector
add a smoke detector
auto generated setter method
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
sets the location of the admin details
auto generated axis2 error handler
auto generated axis2 error handler
fires out processing
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated axis2 error handler
deactivates a smoke detector
notify the school that a new ban has arrived
auto generated axis2 error handler
returns the name of this school
sets the name of the school
gets the value of num students
sets the number of students of the group
returns the shops opening hour
sets the shops opening hour
returns the hour of the connection was closed
sets the shops closing hour
gets the value of fire status checked
sets this object as firing status checked
is this session active
accessor method for x num fire trucks at school
report the number of trucks at school attached to this node
getter for property num smoke detectors
add a new smoke detector to the list of smoke detectors
invoked when the smoke detector is activated
the smoke detector is deactivated
get the number of water sprinklers on this group
add a new vehicle to the pool
this method is called by water to notify that if water sprinkler has been activated
call this method if a new water has been deactivated
set a new admin details at the given location
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
initializes the vehicle
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
updates the device and product descriptors from the device
create a capability exception with a ztex 1
constructor taking a single string argument
this method returns an input stream for a given file name
constructor providing an error message
bitstream exception constructor
constructor for device lost exception
constructor taking a single string argument
create a new already configured exception
constructor for ihx file damaged exception
create a new exception with an error message
constructs a device not supported exception object with the given usb device
create an exception with a particular device and message
get the product id for a particular i
construct a new exception with a given usb device exception message
create a new exception with an invalid firmware exception
convert this packet to a string
create a new exception with an error code
construct a new exception with a device to catch invalid firmware failure
print dat info
constructor used to create an anchor scan bus 1
constructor for firmware upload exception
create a device with a default set of claimed device1
constructs a new exception with no detail message
constructor used to create an anchor scan bus 1
constructor used to create an anchor scan bus 1
destructor for the device manager
prints the device list to the given print stream
returns a string representation of this object
checks if the file is valid
constructor for a non standard ztex1v1
vendor request with command name
constructor for incompatible firmware exception
constructs a new code incompatible firmware exception code without detail message
set the configuration to a new value
real configuration work to set the configuration
returns the claimed state of the specified interface
check if the device is valid
claim an interface
release the specified interface
check if the device at the given index is valid
resets the ez usb device
returns a string representation of the device
checks if the firmware is valid
print the fpga state to a human readable format
get the fpga configuration to use with the device
get the fpga configuration string
reset the fpga object
determine if the device supports the eeprom state
read a byte array from the eeprom
return an integer representation of the eeprom upload
tries to read a dead network to eeprom central server
returns a flash str error message
get the flash ec value
flash memory buffer
flash memory buffer
flash memory buffer
flash memory buffer
returns true if flash is enabled
loads a flash file into the input bitstream
flash the bit stream
flash memory sector from the first free sector
get the size of the stack for debug purposes
get the size of the debug message
returns a string containing an xmega ec error code
xmega str error
get the current xmega state of the device
is xmega enabled
read the flash pages of the device
get the current number of eeprom pages
returns the size of the xmega flash page in bytes
get the size of the eeprom page
reset the device
read nvm read from the device
read a byte buffer from xmega
read a xmega device
read a fuse byte buffer
read a fuse byte
write a byte buffer in xmega
write a xmega eeprom page
write a fuse byte
write the firmware to the device
write a ihx file
create a string representation of the fpga object
returns a string containing the capability information
mac eeprom write
read a byte array of vbo u device
mac eeprom state
read a byte buffer
creates a new connection to the specified ip and port
send a message to the server
returns a hash code value for this remote device
returns true if the given object is an instance of connection
reads from the focus queue and writes them to the socket
create a new input stream monitor
constructor for controller not connected exception
constructor that takes a stream to wrap
constructor for controller not connected exception
creates a new reader
closes the underlying writer
returns the element at the specified position in this list
removes an object from the queue
add a listener to the list of listeners
returns the default value of the enumeration
remove a listener
updates the analog value of the poll component
updates this probe with a new analog value
interrupts the player
sets a property
accept new connections and add them to the client list
sends a message to the server
kill this client
constructor for diagnostics check
creates a new instance of error handler
enable this connection
blinks the leds after a set of leds
disable the value
sets the state of the button
sends the given string to the serial port
returns the string representation of this client id
switch on the led
enables the hud
switches off the led
add a light sensor listener
disables the measurement
this method is used to set the leds to the yellow led
kitt led is used when several days between 0 and 1
sends a light sensor event to all registered light sensor listeners
creates a new instance of main frame
brake the motor
initialize the gui
add your post init code in here
used to move the motor forward
moves the motor reverse according to the given speed
work through all views in the view panel
get the turdlet factory
initializes the turdlet
the run method of the thread
get the turdlet context
this method is called when the persist method is called
sets the done flag to true
set the content type of the response
writes a header line to the output stream
print the given string to the output stream
returns the figure of this as a agent type figure
sets the button figure
returns the label figure
sets the button figure
returns the figure
sets the figure
returns the figure of this as a agent type figure
sets the button figure
returns the figure of this as a wnote figure
sets the figure
returns the figure of this as a agent type figure
sets the button figure
returns the figure of this as a radio figure
sets the figure
installs the desired edit policies for this
returns the model of this as a logic diagram
creates and installs pertinent edit policies
installs edit policies specific to this
creates and installs pertinent edit policies
makes the edit part insensible to changes in the model
returns the model of this as a uisubpart
refreshes the widget of this based on the property
implementation of property change listener interface method
updates the visual aspect of this
attaches the given part along the given edge to this guide
detaches the given part from this guide
get the alignment for a part
get the property descriptors
returns the value of a property of the given object
sets the property with the given id if possible
method add palettes
reads the given configuration element
call when the tree structure has changed
invoke this method if youve modified the tree nodes upon which this
fire a tree structure changed event to all listeners
fire a path changed event to all listeners
get the resource for a given id and media type
set the entered value of a chan name entry
closes the dialog
adds a line to the panel
closes this window
shows this dialog
gets the user option attribute of the select screen message object
shows the dialog
enables the channel button
this method adds a new import to the tree
enables the cursor
creates the logo panel
closes the window
get the current procedure
builds the tool menu
this method updates the components
builds the application menu
builds and returns the help menu
disable the channel menu items
sets the type of this block
compare two channels
enable the cursor menu item
compare channel end type with type
sets the chan name of the robot
this method is used to determine if the direction of this channel
adds an action listener to the preferences menu item
adds an action listener to the exit menu item
adds an action listener to the new menu item
setter for property connected to
sets the name label
adds an action listener to the open menu item
adds a procedure parameter to this procedure block
adds an action listener to the save button
adds a channel to the group
removes the specified channel from the list of channels
adds an action listener to the cursor
add a new variable to the list of variables
adds an action listener to the channel
removes a variable from the list of variables
adds an action listener to the about menu item
adds an action listener to the import menu item
adds the statement
removes the statement
inserts the statement at the specified position
add a proc to the list of procs
removes a process from the list of process
adds an import to this source
removes an import from this source
used to get the x difficulty level
get the value of the y delta field
set the width of this widget
sets the height
deselects all draw blocks
sets the location of the file to be created
sets the location of the file to be created
deletes the selected code block
remove the content of the canvas
enables the menu and programs
add the code block to the code block
sets the content of this code block
enables the cursor tool bar
get the value of a preference
reset the string builder
returns the code block at the given x y location
appends a string to the buffer
returns the content of this response
return the string with the specified indentation level
generates code for this expression
adds the given block to the canvas
converts this import to an empty import
removes a code block from the canvas
reads the file content
set the size of the canvas
create a new puzzle list filter
create history for source
attaches a history model to this view
creates a new puzzle from the given information
sets the date the user was last edited
returns the session associated with this request creating one
sets the date the task was completed
returns the user info of the current user
adds a filter to the list of filters
attaches the given model to this presentation
sets the entry published date
sets the key used for history switch
creates the move room of the given puzzle model
deletes the room from the heyawake model
converts an integer to a string
gets the view
sets the flag to control whether the application should use the direct
switch to create rooms
enables the callback for the popup
switches to the editor room for editing
switches to play state
remove the callback from the control
creates the states
updates the room value
enable text editing callbacks
adds a new room to the game
disable the text editing callbacks
removes the room from the map
this method sets the user info
add a code link group code to this code link group code
checks if the room is valid
adds a default link to the first default group
add a link to a group
finds the index of the room that contains the specified rectangle
gets the link group at index
load current user
checks if the given room area is valid
load puzzle info from persistence manager
modifies a user
create a user info object from the user info fields
load history info from persistence manager
check if apply button is enabled
adds a callback to the call list
finds a room at a given location
removes a callback from the notification list
enables all callbacks for the current profile
removes the callback from the general view
appends any custom parameters to the output
executes the modify call
register a new creator for given type
creates a new puzzle list info object
apply the changes to the user information
build a hyperlink history from the name and parameters
appends the move list to the given list
appends a parameter to the parameters map
appends the parameter list for the custom parameters
executes the cancel operation
returns the puzzle info at the given index
adds a link to the list of links to be automatically linked
set registration status
deletes a puzzle and tutorial from the database
refreshes the list
adds a tab
displays the specified tab
checks if there are more rooms in the rooms list
shows or hides the tab at the specified index
selects the given row relative to the current page
change the style row selected or unselected
delete a puzzle
update the display with new data
sets the value of allow half
adds a callback to the call manager
initializes the form
removes a callback from the list
execute search and call all subscribed search callbacks
executes the cancel operation
adds the callback to the search view
removes the callback from the search view
this method will enable all callbacks for the buttons
removes the click handler registration from the click handler registration
makes the fsm leave the current state
this will exit the current state and exit the application
sets the token factory to be used by this parser
changes the current state
sets the list of puzzle parameters
sets the title of the main panel
sets the title of the main view
check to see if the ok button should be enabled
this method enables disables the login button
the page id has been updated
enables callbacks for the current puzzle
adds the callback
removes callback from the puzzle controller
sets the parameters for a state
removes the callback
enable disable the registration button
sets the parameters for this operation
executes the callback for new puzzle infos
sets the tutorial or tutorial parameters
executes all the callbacks that have been added to the puzzle
enables all callbacks for the puzzle view
set tab visible
changes the standard view
removes the callback for puzzle view
this method removes the left bar from the view
displays standard left panel
switches to the welcome state
gets the welcome token
switches to puzzle list state
gets the main widget size
gets the puzzle list state
sets the parameters for the puzzle
switches to search puzzle
sets the tutorial
genre and size
return the token used to search for a search
switch to new puzzle
returns the history at the given index
gets the puzzle info
checks the key of the current model
get the author username
get the new puzzle token
sets the auto refresh
switch to the edit puzzle state
switch to new tutorial
sets the puzzle key
return the new tutorial token
sets the tutorial puzzle key
reload the current puzzle
switch to load
returns true if the model is in datastore
renames a puzzle
get load puzzle token
deletes the puzzle
register a factory for a given genre
gets the factory for a given genre
publishes puzzle status changes
publishes puzzle after review
appends a move to the list of moves
sends puzzle status to server
visits each child of the game
puzzle status change
sets the previous message
makes the puzzle private
gets the puzzle info
returns the history info for the tutorial
returns the time in milliseconds that this timer was running
sets the grid size
switches to puzzle info
set if the model is in the datastore
switches to the tutorial info state
adds a move to the group
gets the move at the given index
returns the number of moves in this code match code
returns true if the current move contains a move message
switches to the settings
gets the token for settings
switches to admin state
gets the admin token
creates a new model for a given genre
creates a new puzzle model
creates a panel that displays a rating
disables all the widgets in the panel
sets the time
todo missing method documentation
returns the entered time
creates a string for the label for the given percent
this method disconnects this instance from the bridge
connects this connection to another island
disconnects this island from another one
returns the other island
returns true if this connection is connected to the given island
retrieves the location of a given connection
sets the message
updates the zoom and pan values for the current map
create a bridge to move in a puzzle
add a history toolbar to the history view
deletes a bridge from the given model
update the history
remove the history toolbar from the view
adds a new island to the move list
creates a history node move
clear history toolbars
removes a single island from the move list
this method will recreate all nodes in the game
sets the visibility of the history toolbar
returns the bridge which is connected to the given direction
adds a bridge to the move list
connects this bridge to the given bridge in the given direction
disconnects this bridge from the bridge in the given direction
disconnects this bridge from the given bridge
disconnect from a bridge
checks the direction
removes a bridge from a list of movement
convert the given time to a corrisponding node
creates the island of the given puzzle
deletes the island from the given puzzle model
adds a island to the game
converts a node position x to time
show the history of the current view
removing the island from the given move list
converts a node position in x coordinate to a time in time
show the editable history
set the site info
returns the height of the header
hides the history view
load site information from the database
tries to remove a bridge between two given players
removes all listeners
modifies the site
removes a bridge from the bridge list
set the puzzle view
a hook for subclasses to add nodes to the container
this method will enable all callbacks for the application
remove callback from the admin
removes all bridges of the given island from the map
sets the timer that is used to track the movement of the
checks that all locations of a bridge are valid for a bridge
updates the size of the puzzle panel
this method draws a line between two points in the map
resize the puzzle view
returns the index of the move in the history
sets the visibility of the puzzle view
clear usage map
updates the zoom and pan values for this map
gets the value of a island at a given location
displays a message in the message box
updates the history
set the text of the specified string with a specific delay
creates site info object from preferences
clears the message display
computes the average time to a given screen position
checks if apply button is enabled
adds a callback to the list
removes a callback from the list
computes the time to a given screen x coordinate
computes the position of the x axis to display time multiplier
executes the modifications to the registered callbacks
execute the apply
computes the offset in milliseconds from the start of the time bar
execute the reset
executes the cancel operation
change the time marker location based on the given multiplier
change the time of the screen to a given location
converts a bar position in x coordinate to a time in milliseconds
clears the whole world
sets the time of the movement in the history
clears the change flag
returns whether or not the change has been made
checks if the puzzle can edit the given
check if the puzzle can be played
sets the internal enabled attribute of the main frame object
enable disable the action
checks if the user can edit tutorial
returns true if the user can view tutorial
copies the coordinates of another vector
sets the global lock indicator
returns a string representation of this point in the form
sets the global lock and white screen state of this lock
reads the size of the grid
add a callback to be called when this lock is unlocked
initializes the validation by adding a valid validation message
add a callback for one time unlock operations
this method is called when the latch is grabbed
returns true if x is within the valid range
returns true if the given y value is within the bounds
release the lock
returns true if the user has already created an edit history
this method initializes this
locks all tool bars
unlocks all tool windows
initialize the filter
returns true if this lock is held by any thread
adds message to panel and shows message
changes the location of the marker
hides the message panel
sets the value of the bar
checks if the interior of a rectangle overlaps a rectangle
checks if a given cell is contained with this rectangle
clears the states array
sets the given grid size to the given value
adds a list of moves to the move list
checks if this grid impl matches another state
gets the view that is the parent of this sgview
sets the style attribute of the
sets the pixel size
sets the focus
unhilights all nodes and edges
sets the vertices of this polygon
selects all text in the textbox
sets the maximum allowable length of the text box
deletes the lines in a widget
the method sets an edge into the frame
the method sets the left and right vertex of the edge
adds a drawable to the scene
removes a drawable from the scene
remove a cell from the map
updates the widgets size
set the constant for the
remove a single vertex from the draw board
use this to set the relative position of the object
remove a cell from a circle
sets the string to be displayed
set the size offset
creates the widget
sets the new image url
removes the given drawable
removes the drawable with the given name
set the size of the line to be drawn
repositions all drawables in the list
sets the widget
resize a drawable
helper function to convert pixel coordinates to screen coordinates
returns the vertical location of the given pixel in the grid
clears the graph drawables and decoration panel
resizes the screen
get the state of a node
creates the default edit tool
update the highlight
register a callback for this window
deletes a callback from the current rectangle
releases all resources
check if we can draw the given state
returns the parity of a given vector
check if two states are valid
check if the state is valid
creates the default play toolbar
retrieves the state at a given location
creates the default view of the application
set the flag that determines whether this component is enabled
enable disable the edit button
enable disable the play button
enable disable the tool when the window is resized
this method enables disables verification
called when the window is resized
create or edit message dialog depending on history state
starts the global edit mode
starts the editing of the tutorial toolbar
starts the play of the game
starts the view
starts the view
removes a callback from the puzzle
calls save play history on all registered callback
executes all the callbacks that have been saved to the puzzle
executes all the callbacks in the callback list
executes the check solution and saves lock
undo the last move
handles the move event of the mouse
the mouse entered event handling routine
the mouse leaves all the area
create a new message dialog
create a retime dialog
gets the cell size
returns the location of the current cell
adds a callback that is called when a cell is added
adds a callback that is called in the process of vertical edges
add a callback to be called when the user presses the horizontal edge
add a vertex callback component callback
removes a callback from the component
removes a callback from the list of vertical edge callbacks
removes a callback from the list of horizontal edge callbacks
removes a callback that is called when the vertex is no longer available
this is just the handler to add mouse down events
this function adds a handler for mouse up events
this handler is fired when the mouse moves
adds a mouse out handler
the code set relative vertex size code method sets the relative vertex size
setter of the property tt relative edge size tt
this method initializes this
this method initializes this
this method initializes menu
this method initializes j menu
this method initializes menu item options
this method initializes menu item quit
this method initializes this
sets the real path to be the reverse path of the server
returns the number of leaves in this subtree
returns the left child
returns the right child of this node
get the inet address of the given string
get the remote port number
get the local port
invoked when a new search result is available
invoked when a search resulted in no results
invoked when a search failed
invoked when a search finished
invoked when a search started reached a responsible peer
shuts down this storage
implementation of the p2 plistener interface
implementation of the p2 plistener interface
this function gets called when a search result is received
implementation of the p2 plistener interface
refreshes the image
draws the objects
toggle the status of the given
returns the amount of fortfy
add a property change listener
remove a property change listener
add a vetoable change listener to the listener list
remove a vetoable change listener from the listener list
sets the selected state of the item
set the name of the property
returns the bean info for the java bean class
gets the icon
checks if this property is transient
gets the bean that holds the i bowl i
sets current bowl bean
initializes the gui
adds given bean to current set of beans in the service
removes given bean from property management
returns a collection of actions for the given bean
method get beans
add a property change listener
returns all wrapper classes
restores the date to the default value
sets the value of the date property
method get bean count
returns the scroller
implementation of action listener
get the bean at the specified index
invoked when a component gains the keyboard focus
handle focus lost events
sets the result type
checks if the bean is in the list
this method is called when a key is pressed
sets the result value
checks if the given bean is already in the list
sets the editable flag of the textfield
returns a set of all beans of a certain type
find a named bean
find and return the named wrapper
get the wrapper for the given object
gets the selected bean
remove a property change listener
adds a new code bean context listener code to this context
removes a listener to this context
execute the method on the bean with the parameters
generate a unique name for the bean
returns the preferred dimensions for this layout given the components
returns the minimum dimensions needed to layout the components
centers the elements in the specified column if there is any slack
restore the default value of the field
execute the given constructor
sets the object
shows the class
removes the given property change listener from this cell editor
adds a bean to the current list of beans
remove a bean from the current bean set
refreshes the class list
action listener implementation
reads the text field when the user loses the focus
this method is called when a key is pressed
returns the current ancestor of this node
returns the type of this fixed type
get the current type
sets the attributes value to its default value
listen for source
stops listening for property changes from the source
returns the class that is currently selected
set the value of selected class
returns true if the current type is a mutable type
returns the class name for a given class
returns the package name of the given class
returns the list selection mode
sets the selection mode for the list
get the number of rows to display in the list
sets the number of visible rows in the drop down list
check the controls for the list
returns the data class
returns a string representation of this object
this method is called when a check box selection changes
sets the flag indicating that a refresh is needed
add an element to the end of the list
returns the value at the specified index
returns the number of values in this collection
initialize the preference page
configures the shell
called when the input changes
returns the value for the property
modifies the element
returns an unmodifiable list of the foods
returns whether the robot is healthy or not
selection in the workbench has been changed
open the dialog
reset the buffer
add this byte array to this
gets the play head
stops a movie
resets the clip to the first position
plays the sound
clear the stream
adds a code palette listener code to the current edit domain
removes the listener from the tool
this will reset the border point and side of the figure
returns the rectangle that represents the reference figure
returns a command to drop the specified
non javadoc method declared on idialog page
get an error reporter for the receiver
fires a label provider changed event
returns true if any of the given resources are linked
returns true if the selection can be deleted
returns whether the given resources contains any of the given resources
returns the number of selected resources
returns the image data that is not persisted in the cache
get the image data for this image
get the synched image data
get the image data for a given key
set the model provider ids
recreates the resource description
sets the target resources
returns the delete status
sets the resource description
convenience method to get the workspace
get the rule factory for the workspace
computes the scheduling rule needed to create the resource
computes the delete scheduling rule for this operation
mark this row as invalid
handles a key pressed event by invoking the appropriate action
this method computes the execution status of the receiver
computes the undoable status
recomputes the change to be redone status
returns an error status with the given info
returns the status and message for a warning
returns true if any of the resources exist
returns whether any of the resources includes the project
returns the scheduling rule for executing
returns the scheduling rule for executing
returns the scheduling rule for executing
create contents of the window
restart the workspace
prompt for workspace profile
returns the selected profile
notifies this safi workspace that a workspace has been selected
returns true if the given resources are homogenous
returns the listener for button focus
validates the import destination
processes a modify event that occurred in this text cell editor
execute the operation
enable disable all edit policies
the command has been executed so extract extract the needed information
attach all the listeners to the text widget
matches the value
returns true if the given operation provides a create view for
checks if the operation provided provides a diagram view
returns code true code if the operation provided is a create edge view
checks whether the operation provides a node view
create the gui for this page
creates the wizard page with the layout settings
creates the top level control
create the gui for the import
returns the creation method for the given view class and method
returns the semantic class for the given type or null if no
tries to get the semantic element for the given adaptable object
mouse double click
returns the palette viewer for this editor part
creates logic palette tool group
creates misc 8 palette tool group
creates initiators palette tool group
selection in the workbench has been changed
returns true if the node name is filtered
checks if a node name should be filtered
checks if a node name should be filtered
set the outline viewer
initializes the overview page
restores drivers from the default location
loads drivers into the explorer
loads default drivers from the given input stream
removes an alias with the given name
saves the drivers
returns the session for accessing meta data
removes the selection synchronizer from the selection synchronizer
closes all connections and all open connections
returns a unique id for a driver
returns the editor
called internally to set the connection including setting it to null
queues a task to be completed if the given task is already
returns the root database node for the database structure view
unregisters the jdbc driver
allocates a new tab for results
get a connection for the database
removes a user from the connection
add the messages to the editor
sets the driver
enable ok button if ok is set to true
returns the character set used in this object
return the delimiter used to divide the input string into a single string
return true if headers are included in the generated response
returns the flag indicating whether or not to quote text
returns true if spaces should be trimmed
add sql to history
sets the session
filter based on query string
get pref value
enable ok button if ok is set to true
returns the delimiter used to divide the string into a single string
sets up the list of views the user will see by default
clears the parent and all child elements
refreshes all session trees
adds a message to the message window
prints out the tree structure
adds the given field editor to this page
initializes all field editors
called when a tab item is closed
given the name label of an entry return the corresponding value
set the name in the combo widget to match the specified value
closes all result tabs and signals all associated
converts an abstract sqlexecution into its tab item
sets the session
sets the text of the editor
returns the line number that the sql starts on
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b directionality b
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b required b
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the description feature
creates a new adapter for an object of class
this adds a property descriptor for the value feature
creates a new adapter for an object of class
this adds a property descriptor for the skip weeks feature
this adds a property descriptor for the days feature
this adds a property descriptor for the start date feature
this adds a property descriptor for the skip days feature
this adds a property descriptor for the start date feature
creates a new adapter for an object of class
this adds a property descriptor for the mode feature
this adds a property descriptor for the description feature
creates a new adapter for an object of class
this adds a property descriptor for the by index feature
this adds a property descriptor for the skip months feature
this adds a property descriptor for the day index feature
this adds a property descriptor for the day occurence feature
this adds a property descriptor for the day feature
creates a new adapter for an object of class
this adds a property descriptor for the start date feature
creates a new adapter for an object of class
this adds a property descriptor for the name feature
this adds a property descriptor for the start range feature
this adds a property descriptor for the end range feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b required b
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the platform id feature
this adds a property descriptor for the platform dependant feature
this adds a property descriptor for the uuid feature
this adds a property descriptor for the name feature
this adds a property descriptor for the shared saflet script feature
this adds a property descriptor for the shared script scope feature
this adds a property descriptor for the saflet script factory feature
this adds a property descriptor for the script scope factory feature
this adds a property descriptor for the name feature
this adds a property descriptor for the script text feature
this adds a property descriptor for the rhino script feature
this adds a property descriptor for the scope object feature
this adds a property descriptor for the saflet script feature
this adds a property descriptor for the script scope feature
this adds a property descriptor for the global script scope feature
this adds a property descriptor for the connection feature
this adds a property descriptor for the query feature
this adds a property descriptor for the result set name feature
this adds a property descriptor for the scrollable feature
this adds a property descriptor for the inputs feature
this adds a property descriptor for the output parameters feature
this adds a property descriptor for the read only feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the rows updated var feature
this adds a property descriptor for the connection feature
this adds a property descriptor for the sql feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the label text feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the row num feature
this adds a property descriptor for the id feature
this adds a property descriptor for the index feature
this adds a property descriptor for the target feature
this adds a property descriptor for the name feature
this adds a property descriptor for the output type feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the connection feature
this adds a property descriptor for the id feature
this adds a property descriptor for the jdbc connection feature
this adds a property descriptor for the column feature
this adds a property descriptor for the set as datatype feature
this adds a property descriptor for the text feature
this adds a property descriptor for the dynamic value feature
this adds a property descriptor for the type feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the script text feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the column feature
this adds a property descriptor for the set as datatype feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the value feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the label text feature
this adds a property descriptor for the query feature
this adds a property descriptor for the message feature
this adds a property descriptor for the debug level feature
this adds a property descriptor for the name feature
this adds a property descriptor for the boolean expression feature
this adds a property descriptor for the parameter name feature
this adds a property descriptor for the required feature
this adds a property descriptor for the id feature
this adds a property descriptor for the jdbc statement feature
this adds a property descriptor for the variable name feature
this adds a property descriptor for the column feature
this adds a property descriptor for the get as datatype feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the value feature
this adds a property descriptor for the parameter feature
this adds a property descriptor for the param datatype feature
this adds a property descriptor for the query feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the query feature
this adds a property descriptor for the connection feature
this adds a property descriptor for the use cache feature
this adds a property descriptor for the result set feature
this adds a property descriptor for the scrollable feature
this adds a property descriptor for the variable name feature
this adds a property descriptor for the read only feature
this adds a property descriptor for the column feature
this adds a property descriptor for the name feature
this adds a property descriptor for the scroll mode feature
this adds a property descriptor for the jdbcresult set feature
this adds a property descriptor for the get as datatype feature
this adds a property descriptor for the holdability mode feature
this adds a property descriptor for the query feature
this adds a property descriptor for the result set name feature
this adds a property descriptor for the query param feature
this adds a property descriptor for the set as datatype feature
this adds a property descriptor for the value feature
this adds a property descriptor for the exceptions feature
this adds a property descriptor for the parent saflet feature
this adds a property descriptor for the session variables feature
this adds a property descriptor for the name feature
this adds a property descriptor for the version feature
this adds a property descriptor for the description feature
this adds a property descriptor for the finally feature
this adds a property descriptor for the new call1 feature
this adds a property descriptor for the target saflet path feature
this adds a property descriptor for the call name feature
this adds a property descriptor for the target saflet path feature
this adds a property descriptor for the job name prefix feature
this adds a property descriptor for the label text feature
this adds a property descriptor for the cron expression feature
this adds a property descriptor for the start date time feature
this adds a property descriptor for the end date time feature
this adds a property descriptor for the calendar name feature
this adds a property descriptor for the job name feature
this adds a property descriptor for the job name feature
returns command to reorient ereference based link
returns true if this graphics node is an anti alias
sets whether antialiasing should be applied when drawing the image
returns true if the
set to true to maintain aspect ratio
set the preferred size of the image to be displayed
this adds a property descriptor for the firstname feature
this adds a property descriptor for the lastname feature
this adds a property descriptor for the roles feature
this adds a property descriptor for the password feature
returns a rendered version of the image
returns the last rendered image
sets the rendered image to the given rendered image
returns the preferred location of the given figure
this adds a property descriptor for the name feature
this adds a property descriptor for the last modified feature
this adds a property descriptor for the last updated feature
this adds a property descriptor for the id feature
this adds a property descriptor for the created by feature
this adds a property descriptor for the modified by feature
determines the preferred location for the given side
this adds a property descriptor for the description feature
this adds a property descriptor for the enabled feature
this adds a property descriptor for the system feature
this adds a property descriptor for the extension feature
this adds a property descriptor for the bind ip feature
this adds a property descriptor for the entitlements feature
this adds a property descriptor for the code feature
this adds a property descriptor for the subsystem id feature
this adds a property descriptor for the management port feature
this adds a property descriptor for the running feature
this adds a property descriptor for the hostname feature
this adds a property descriptor for the debug feature
this adds a property descriptor for the running feature
this adds a property descriptor for the db port feature
this adds a property descriptor for the query type feature
this adds a property descriptor for the query sql feature
this adds a property descriptor for the catalog feature
this adds a property descriptor for the safi server feature
this adds a property descriptor for the private feature
this adds a property descriptor for the visible safi server ip feature
this adds a property descriptor for the use cache feature
this adds a property descriptor for the scrollable feature
this adds a property descriptor for the read only feature
this adds a property descriptor for the scroll mode feature
this adds a property descriptor for the enabled feature
this adds a property descriptor for the holdability mode feature
this adds a property descriptor for the manager name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the driver class name feature
this adds a property descriptor for the default value feature
this adds a property descriptor for the type feature
this adds a property descriptor for the manager password feature
this adds a property descriptor for the scope feature
this adds a property descriptor for the pooling feature
this adds a property descriptor for the manager port feature
this adds a property descriptor for the example url feature
this adds a property descriptor for the jars feature
this adds a property descriptor for the version id feature
this adds a property descriptor for the default feature
this adds a property descriptor for the prompt directory feature
this adds a property descriptor for the guide url feature
this adds a property descriptor for the platform id feature
this adds a property descriptor for the website url feature
this adds a property descriptor for the default port feature
this adds a property descriptor for the url regex pattern feature
this adds a property descriptor for the data type feature
this adds a property descriptor for the name feature
this adds a property descriptor for the last modified feature
this adds a property descriptor for the last updated feature
this adds a property descriptor for the id feature
this adds a property descriptor for the url feature
this adds a property descriptor for the user feature
this adds a property descriptor for the password feature
this adds a property descriptor for the login timeout feature
this adds a property descriptor for the properties feature
this adds a property descriptor for the transaction mode feature
this adds a property descriptor for the min pool size feature
this adds a property descriptor for the max pool size feature
this adds a property descriptor for the acquire increment feature
this adds a property descriptor for the max idle time feature
set the maximum number of threads to use
sets the bind port
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b required b
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b directionality b
initializes the annotations for b meta property b
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
check if the user can connect to this server
process stdin data is called by the processor when a new byte is
this method is called when data is received from the stderr
this method is called when the channel is closed
execute a command
change the dimensions of the main window
this method is called whenever we reach the end of local data
method start shell
processes a signal
loads a jar file
loads the jar file from a url
reads local resources from jar files class folders jar library
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates figure for this edit part
gets a drag command
returns the command to drop the specified bounds
creates a new adapter for an object of class
returns command to reorient ereference based link
understands if drag drop or orphan request
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
initializes the annotations for b meta property b
tests if the given geometry relation can be used as a predicate
sets the root id for this query
close the statement
find the leaf node with the given id
changes a envelope entry
reads a column of the primary key
generates the sql for the from clause
encodes the filter into a sql writer
this method initializes this
this method initializes schemas scroll pane
this method initializes schemas table
this method initializes tables scroll pane
this method initializes tables table
this method initializes schema text field
this method initializes table text field
this method initializes status text field
this method initializes spatialize button
this method initializes despatialize button
this method initializes build index button
this method initializes geometry combo box
this method initializes srid text field
this method initializes expose pk check box
this method initializes build index progress bar
this method initializes columns scroll pane
this method initializes columns table
this method initializes entries text field
this method initializes version text field
this method initializes algorithm text field
this method initializes building progress bar
this method initializes index scroll pane
this method initializes index tree
this method initializes conn scroll pane
this method initializes draw pane
this method initializes index panel
this method initializes conn table
this method initializes remove conn button
this method initializes conn text field
this method initializes connect button
this method initializes spatialize db button
this method initializes disconnect button
this method initializes despatialize db button
this method initializes h2 button
this method initializes h2 text field
this method initializes derby embed button
this method initializes derby embed text field
this method initializes derby client button
this method initializes derby client text field
this method initializes remove h2 button
this method initializes remove derby embed button
this method initializes remove derby client button
this method initializes log name text field
this method initializes user text field
this method initializes h2 upgrade jar button
this method initializes remove h2 upgrade jar button
this method initializes h2 upgrade jar text field
called when a parameter is changed
this method is called when a toolable exception is thrown
called when the queue is toolable
sets the reduction dao
checks if a given login exists
creates a hotel room
cancels a reservation
creates a hotel with the given parameters
updates the given room
changes the reservation
removes the room with the given id
gets the room object with the given id
gets reservation by reservation id
calculates all credit items for a reservation
adds a new reservation
to know if its on debit or not
adds a hotel to this company
gets the card name section
returns a random integer between 0 and max
gets the overlap area as a simple area
this method is called whenever the mouse moves while over the component
this method is called when the mouse enters the region
toggle visibility of this layer
logs a personal note
fades out the tooltip for the given time
fades the tooltip in the given time
sets the z index
increments the model number of this client
updates the bin contents if needed
adds a new counter to the counter panel
removes a counter from the game
called when the mouse moves
when the mouse moves over the players button
removes a card from the play list
sets the hover flag for a given bin
reset the selected bin index
toggles the graveyard visibility of this session
draws the seven cards on the library
multiplies this hand by the player and returns the result
toggles the visibility of this component
display a personal note to the user
shuffles the session
returns a random integer between 0 and max
removes a card from the play draggable cards in the players hand
reveals a card on the table
places a card at library bottom
reveal the top card of library for execution
returns a random integer between 0 and max
resets the line counter
restart the modules
sets the center pane
this method initializes status bar
this method initializes left status bar
sets the text of the left status bar
sets the right status bar text
set the text of the center of the status bar
returns the id of the page that should be created
returns the name of the page
dispose the page
sets the text of the title label
this method initializes previous page button
this method initializes navigator menu
this method adds menus to the menu bar
shows the first card
shows the next card
shows the previous card
set the button at the given location
shows the last card
initialize the components in this dialog box
add a page to this page container
removes the card panel
returns code true code if windows is the current operating system
returns true if this machine is a 64 bit machine
returns the command to launch the application
logout this message
gets the subject key identifier from the certificate
sets this interface as actual interface
returns the localized language term of the current
returns the localized term of this term
gets the german
returns the english
returns the norwegian
returns the content of the document
sets the content of the message
returns whether this state is folded
sets the folded
returns true if this node is the left node
sets the left node
clones the node
returns the content of the edge
sets the content
returns a copy of the edge
adds components to the panel
adds components to a combo box
saves the file in a different location
opens a file in the gui
convenience function to load icon
returns the actual file
sets the actual file
sets the canvas
remove the canvas from the frame
sets the update menu icon and displays it
updates the gui to reflect the current state of the component
update the view menu
updates the format menu
updates the navigation menu
updates the extras menu
update the help menu
adds the components to the menu bar
returns the menu component
adds a component to this container
adds an action to the action map
adds a component to the menu
returns the action with the given key
get the code jmenu item code that represents the menu item this
update the component
adds components to the panel
save a graph to disk
load the graph from the given file
inits the graph
push the mind map into the list
removes the last element in the list
get the next graph in the list
init the mind map graph and create new mind map graph
create a new mind map
select the node
delete node from the current mind map
fold the node
unfolds the current node i
save the current mind map graph to the file
undo the last change
redo selected node
returns the column height
set the content of the editor
returns the column width
copy the node
paste node from clipboard
throws an code unsupported operation exception code
closes the program
setter for the graph
recalculates the layout of the composite
sets the location of a node
transform the node
sets the visual representation of this edges middle point
setter for graph
redraw the graph
get the component that is the canvas
gets the some content
sets the some content
returns code true code if the given menu item is
executes remote command
sends a request to stop the map sharing session
sets the map shared flag
sets the share map user
adds the given pair to the main list
stops the sharing listener and sets the state to not connected
add the wizard buttons
add a close button to the background
add the decline buttons
returns the servername
get the entered password
returns the map share user name entered by the user
the implementation of the color action called
this method initializes this
this method initializes j okbutton
this method initializes j cancel button
this method initializes this
this method initializes j password field
this method initializes j password field1
this method initializes j okbutton
this method initializes j cancel button
sets the month attribute of the jmonth chooser object
sets the year
sets the date
this method initializes j okbutton
this method initializes j cancel button
folds the node which is the last branch of the node
sets a specific month
requests that the code calendar code containing this
the decoration background is a boolean that specifies whether or not the decoration
change the note text
convert the list to a string
test that whitespace is handled correctly
this test handles an invalid id
registers the container hook with the registration
this method creates the string that contains all plugin classpath elements
calculates the preferred size for the specified panel
get the resource bundle for this application
return the resource bundle
makes xml valid
returns a tree path containing the node identified by the given vector
called whenever this mode is chosen in the program
this method will change the clouds child level
set the state icon in the node
sets all actions enabled or disabled depending on the current state of the
abstract method to create elements of my type factory
abstract method to create elements of my type factory
is invoked when you are dragging over the drop site
this method returns true if any child is folded by any of
returns true if node is a descendant of this node
adds myself to the path vector
saves the document to the given file
writes the content of the map to a writer
performs lock action
called when map is destroyed
reads the content of a file into a string buffer
this method gets called when a bound property is changed
sets the list of patterns
this method is used to create a node hook
returns the base class of the plugin
sets whether the servlet is being shutting down
loads patterns from the given reader
set the single node operation
urgent change this method
setter for property m arrow link
registers a new handler to the action
not supported at this time
override this method to specify a different file filter
the iterative level is the target of the higher iterative level
changes the iterative level
invoked when the node has changed
called whenever this mode is chosen in the program
gets the color for this node
update node by adding nodes to the node selection listeners
attempts to lock the given file
sets the save state of this editor to the given value
returns a url to the file represented by this file resource
invoked when a node is changed
loads a model from a url
loads a model from a file
returns whether directories will be processed recursively or not
set the value of recursive
set the value of text
gets the node color
set the value of node color
gets the value of the node style property
sets the default style for nodes in this graph
getter for the node icon
setter for property node icon
gets the edge color
sets the edge color
returns the default style for edges
sets the default style for edges
gets the value of the edge width property
sets the edge width
get the style pattern used for children
setter for the attribute children style pattern
this interface defines the state of a node when it is registered
save the model
registers a link target
gets the file chooser for the file dialog
gets the name of this dictionary
sets the icon associated with this node
returns the proposal for the file name
returns the code for this code attribute
enables or disables all actions
get the toolbar component
called whenever this mode is chosen in the program
gets the mode tool bar
copy all attributes from this node to another node
returns the controller that is in the mode
updates the selection method
invoked when a mouse button is pressed on a component and then
runs the action with formerly selected items
this method initializes this
this method initializes j okbutton
this method initializes j cancel button
returns the modifier mask for the event
returns a string representation of the object
starts the application
set the folded state of a node
returns the real width of the image
paints the edge in the given graphics context
get the coordinates of this point in the given list
returns the amount of additional cloud heigth
returns true if this is a left hand side of a list
returns a list of node view objects that are children of this node
returns the distance to the nearest node heigth and not the
returns the size of the visible part of the view
select the node as the only one selected node
select the node and his descendants
collects labels from the given node view
this method is called before printing is done
finish printing the tree
returns the map view
return the code mind map code model
this method will check if the map module is already changed
copy all the menu items from the source to the dest
get the common instance of the color chooser
updates the combo box entries
closes the module
set all actions enabled disabled
adds an unsigned byte to the message
subtracts the unsigned byte val from this value
init method for this class
inits the connection
sets the item id
this method is called after every action that needs to be performed
action to do when user clicks on insert row button
handles the initialization of the object
retrieves whether the database has all the required parameters
checks if the item is valid
called once when an item is placed in the map
executes the update command
inits the connection
setter for the target data store property
sets the connection
return the current result set
close the statement and the resultset
executes the sql statement in this code prepared statement code object
initializes the pool manager
quotes a string for post script double quotes
init method called by the constructors to initialise the object
checks for in delete action
executes the delete action
handles the initialization of the current item
executes the insert action
handles the initialization of the current item
initialises instance data source pool manager with properties database
check that the action button is ok
set cache object
checks the action to be performed
checks the action
returns the last error message encountered
sets the key values hash map
get key values returns a hash map containing all key value pairs
sets name of xml file
returns the value of the named field as a string
clears the cache
empty the configuration
adds a string field with the given name and value
refresh the content of the repository
sets a value in the specified field
prints the glossary
prints the glossary
returns the number of key value mappings in this map
gets the string attribute of the elvis registry object
this method is called after the database has been initialized
get the redirection string
returns the value of a cache entry
this method initializes the data source pool
connect to the smtp server
try to connect to the smtp server
returns a short description of the servlet
release the pool
returns a short description of the servlet
get the template mode
set the template mode
returns the search limit for template loading
sets the search limit for template loading
return last modified time of current page
returns the path to the template root
sets the template root
gets the default index
sets the default index
returns the name of the post script execution
returns the name of the default object in the form
sets the name of the default object to be returned by
returns the template search
set the template search
convenience method for sending headers and values to the page
returns the statistics for the connection to the named pool
return html for password page
initialize the data store
redirects the url to the connection manager
called when the servlet is destroyed
set the user name
sets the password
returns the value of a cache entry
sets the maximum number of connections
initializes the pool
sets the initial number of connections per server in the pool
sets the timeout for connections to the server
returns the url of the pool
set the maximum number of connections that the pool will maintain
sets the last time this session was used
returns the user name of the database
sets the current activity
changes the holdability of code result set code objects
shut down the thread pool
wrapped methods from the connection interface
returns the password of the database
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
returns the maximum number of connections
wrapped methods from the connection interface
returns the number of connections in the pool
wrapped methods from the connection interface
wrapped methods from the connection interface
returns the timeout of the connection
wrapped methods from the connection interface
wrapped methods from the connection interface
returns the current limit on the number of connections that this pool
wrapped methods from the connection interface
wrapped methods from the connection interface
returns the time that this pool client will kill its jobs
wrapped methods from the connection interface
wrapped methods from the connection interface
gets the times used
returns the time this session was created
get the time in milliseconds when this lock was last used
returns the connection id
getter for property current activity
retrieves whether this code connection code object has been closed
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
is the connection marked read only
increment the number of times this connection was used
frees the connection
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
wrapped methods from the connection interface
process the start of this tag
save the body content of this tag as the previous tag of the tag
process the do end event
sets the include file to use
process the start of this tag
return resource id for a template and path
sets the name of the field
sets the value of id
returns the current row data status
wrapped methods from the connection interface
sets the value
process the end tag
executes the start tag
sets the show package tag attribute
print message to the screen
sets the name of the variable
save the body content of this tag as the previous tag of the tag
executes when the tag is finished
returns the show package tag
save the body content of the repeat table
set the value of add to glossary
sets the error flag
sets the name space
gets the value of the data store name property
sets the name of the data store
sets the action
returns a string representation of this object
this method is called before the configuration files are loaded
called by the database factory at creation time
sets the data store
sets the cache
returns a string representation of this object
setter for property start row
this method is called when the servlet is no longer needed
sets the number of rows to be displayed in the table
closes the data store
returns the number of rows in the matrix
sets the template loader
set the glossary value for this key
set page info
returns the template loader used by this application
returns the glossary value associated with a key
sets the glossary of this phrases jar
get the total number of rows
returns the glossary that this phrases children had
sets the total rows
set the template
add a new glossary to the glossary list
returns the current row
returns true if the iteration has more elements
store glossary value
returns the value of the no rows flag
returns the glossary value corresponding to the given key
moves to the next row
applies the glossary parser to the given string and returns the result
checks if a field with the given name exists in the current row
prints the glossary
returns the row data
get a field by name
returns the total number of pages being tracked by this track manager
prints the glossary start with the given name
adds a header to the response
executes when the tag is started
process the end of this tag
get the value of a header
get the number of pages cached by this cache
returns the headers
returns true if the header name exists
the maximum number of pages that will be tracked by this
sets the time of the last modification
set the maximum track of this search
returns the string representation of the current value
returns the contents of this document
the max number of pages that will be stored in the cache
returns the length of the contents
append a string to the end of the list
sets the maximum number of urls to be stored
set the error message
returns the refresh interval in milliseconds
resets the contents of this item
set the contents of this entry
set the refresh interval for the page
set the hit count
returns the hit count
get the read time of the last dirty message
sets whether the page has been cached
set the dirty read time of the cache item
returns whether the page has been cached
sets the cached time for this cache entry
gets the cache hash attribute of the page object
increments the hit count
gets the cleared time total
returns the number of cache requests
returns the number of times a request to get an object from the
returns the number of times a cache was cleared
returns the time in millis to start the build
get the maximum track reached
sets the server address that requests will be served by this page
returns the max store reached
gets the name of the page the client is using to request
mutator for the address of the server to use for session sharing
get the is max track reached property
gets the value of the serving client property
returns if the maximum store reached
the maximum number of track turns per turn
internal method for printing statistics
return number of hit instances for given id
return page instance for given id
return total number of urls currently tracked by this crawl uri
this method returns a string representation of this object
sets shelf location
sets date purchased
gets the value of the phys type property
sets the phys type
sets the conceptual object
sets store object
sets times rented
returns true if this stock item is in the stock item
sets the in stock
accessor method returns the qty on hand
sets quantity on hand
sets the reorder point
quantity to order
quantity in the order
quantity on order
gets the emp first name
quantity on order
sets the emp first name
set already in db
theres no need for two creates because we dont need
gets the value of the emp mi property
creates a new membership bo with the default values
theres no need for two creates because we dont need
sets the store id
sets employee mi
sets the conceptual id
gets the value of the emp last name property
sets the last name of employee
gets the emp full name
gets the value of the emp address property
theres no need for two creates because we dont need
sets employee address
gets the value of the emp city property
reads icons by extension
reads the type of the icons in the database
sets the average cost of the product
sets employee city
sets the manufacturer of the product
gets the value of the emp state property
returns the aoi id
sets aoi id
sets employee state
sets the city for the store
sets the category
sets the description of the store
returns whether this object is for a rent object or not
returns the emp zip
sets already in db
sets the state of the store
sets whether object is for rent
sets employee zip code
sets the zip code for the store
gets the full address
theres no need for two creates because we dont need
gets the value of the emp phone property
theres no need for two creates because we dont need
sets employee phone number
updates a print format record in the database
sets the manager id for the store
gets employee bo related to manager
emp soc sec num gets the value of this field
returns the length of the w
sets the length of the w
get the bu size
sets the bu size for this store
return the tx line id
returns the begin date
sets the emp soc sec num
sets begin date
sets the tx line id
sets the enddate
this method returns the revenue source object
gets the value of the hire date property
calculates the total amount of all the orderlines in this line list
sets revenue source for txline
theres no need for two creates because we dont need
gets coupon object
sets hire date
sets coupon object
returns the fire date
sets the transaction id of the customer
sets purchase order that the order line belongs to
getter for line amount
getter for property pototal
sets fire date
sets the total of the customer
sets line amount
gets vendor of the product
theres no need for two creates because we dont need
return the wage rate
sets vendor of customer
sets the order line list
returns the rental id
sets the rental id
sets the wage rate for this store
gets the value of the employee property
sets customer object
sets employee for customer
set the type of the soil
gets the discount taken
set the price of the soil
adds a new interest to the customer
returns the salary of this position
sets the amount of the transaction
sets the discount taken
gets the type rs
sets if the fee is waived
removes the interest at the specified index
theres no need for two creates because we dont need
returns whether the player is damaged
sets type rs
returns the membership id
sets product for the transaction
returns true if the return line command is on false otherwise
sets whether or not the return line should be returned
sets membership id of customer
returns whether this product is new used
sets if this object is new used
returns the sold
sets whether the product has been sold or not
gets the value of position id
sets position id
sets already in db
sets the title of the store
getter for property salary
sets the credit card type
sets the salary for the store
this method is used to create a business object of type photo set
sets the credit card number
updates this photo with a new id
theres no need for two creates because we dont need
credit card exp month getter
inserts a photo with a different date in the database
sets position of object
sets the quantity of the current item
sets the price per commonly quoted unit
gets the x y size property
sets the credit card exp month for this order
set the percent of the progress bar
sets the xy size
returns the print type
visszaadja a conv ser id solelezente
sets the print type
konna o valor del atributo conv ser id
sets the photo type
gets the year of the credit card exp
sets the date out
sets the password for the store
sets the year of the credit card exp
gets the value of the member start date property
validates the password
theres no need for two creates because we dont need
sets product for the transaction
sets the member start date
gets the value of the mf name property
sets the mf name
sets customer id
gets the value of the member expire date property
theres no need for two creates because we dont need
returns the first name of the customer
sets the first name of the customer
sets the member expire date
theres no need for two creates because we dont need
updates the bo in the database
gets the value of the cust mi property
finds all the discount with id equals to id
sets interest list
sets customer mi
returns the customer last name
sets last name of customer
returns the full name of the customer
generate a new manufacturer bo object
theres no need for two creates because we dont need
sets customer phone
theres no need for two creates because we dont need
returns the databse id of the conversion service
calculates subtotal for transaction
sets customer email
the conversion service id is an identifier for the conversion service
set the status of the soil
finds all the conversion service information in the database
returns the customer addr
finds all the conversion service with id equals to id
returns the bu exp date
sets customer address
calculate the trans tax rate
sets the bu exp date
sets the customers city
sets customer state
calculate the total and trans tax for this line
sets the bu size for this store
sets the zip code of the customer
theres no need for two creates because we dont need
gets the memb pwd
gets customer membership
sets customer membership
sets the membershipb password
validate the password
sets vendor id of the vendor specific attribute this
theres no need for two creates because we dont need
sets the name of the store
set already in db
theres no need for two creates because we dont need
string get prod type method
set product type
theres no need for two creates because we dont need
gets the value of the order line id property
sets the conceptual id
sets order line id
sets cost of conversion
gets the conceptual
sets already in db
sets conceptual object
sets the id of the store
getter for property rev src id
set the revenue source id
sets already in db flag
this method should be called to make the object inactive
sets the price of the product
this method is called to calculate the line amount
sets the start date of the customer
sets the date when the item was completed
sets labor hours
theres no need for two creates because we dont need
sets the type of store
sets employee id
sets the file name of the store
sets membership id of customer
gets employee bo
returns the date uploaded
gets coupon id
sets the date uploaded
sets coupon id
sets the extension of the store
sets the pick up date for the item
gets the researcher type
sets the size of the file
sets the type of the source file
set the description of the soil
get the number of set
sets the date of last notice
sets the status of the store
get the value of coup amount
sets the transaction id
sets the coup amount
sets the file type for the store
sets product id
returns the percent of the couping of the current location
sets the coup percentage for the store
sets product for the transaction
returns the transaction date
sets the start date of the backup service
theres no need for two creates because we dont need
sets the contact method
sets the expiration date for the object
sets price per day
sets the replacement price
sets max times rented
sets transaction date
sets transaction date
sets the late fee per day
returns the covered by warranty
sets whether the person is covered by the warranty
get the transaction transaction tax
theres no need for two creates because we dont need
theres no need for two creates because we dont need
theres no need for two creates because we dont need
sets transaction transaction line tax
theres no need for two creates because we dont need
update status in database
theres no need for two creates because we dont need
get the photo set id
set the photo set id
returns the print format id
get the transaction sub total
sets the print format id
sets the quantity of items
finds all the conversion service information in database
returns the bu svc id
set the bu svc id
get the trashed date
returns the cur bu price
set the cur bu price
set the trashed date
sets the trans sub total
reads all files with the given guid
reads all files with the given guid
get the total of all transactions
create a txline with a sale
process a new rental object
sets total transaction
changes the quantity of a sale to a given quantity
sets coupon list
calculate price according to the due date
gets employee bo
sets the employee for the transaction
gets store object
adds a coupon to the tx line
sets store object
calculates the price of the backup transaction
generate an email address for the customer
returns the month difference between two dates
returns the day difference between two dates
generate an email address in the form of a customer
make photo set numbered
returns the date in the format year month day
edit photo set
compares the specified object with this criteria for equality
add a day to the current date
gets a print order object from the database
returns the transaction id of the original transaction
adds a day to the date
this method is used to print the date in the form yyyy mm dd
this method used to get the format object
processes requests for both http code get code and code post code methods
returns a string concatenating the two parameters to day
checks if this date is less than the specified date
gets a photo set
sets the transaction for the original transaction
checks if this object is greater than the given md
processes the transaction by getting the checkout page
returns todays date
process the current request
processes a user request
process the current request
gets the total discount taken
creates a txline with rental
sets the total discount taken
returns the transaction tax rate
sets the transaction transaction rate
load data into the table
gets the value of the trans status property
sets the transaction status
gets the value of the pmt property
sets the payment for this transaction
this is the only one session object
gets store object
sets store id
get customer object
getter for property customer id
sets customer id
theres no need for two creates because we dont need
update the list of selected members
returns the singleton instance
calculates the change of this
theres no need for two creates because we dont need
sets the trans date
setter for property covered by warranty
sets customer object
calculates the total and subtotal fields
initializes the servlet
sends an integer to the server
action interface implementation
loads the theme from the system
adds a directory to the list of directories to search
populate the contact list based on the currently selected account
this method determines whether the parser rules is
clears the list of classes
returns the configuration
returns the jaxrs config object
returns the text service object injected by this text area
sets the name of the jaxrs provider class
sets the additional paths to the text provider
refreshes the content of the current page
closes the statement
attempts to poll all connections from remote hosts
this method is called when the connection is broken
closes the remote connection
setup itunes music
sets up the i tunes
checks if the lock file exists and if not closes it
load all playlists from the iu library and add them to the list
load library from tsracks
subtracts the given vector from this vector
adds the given vector to this vector
gets the itunes
add another vector to this one and return result alters this vector
set this vector to the same values as another vector
sets the vector to this vector
scales this code vector2 code by the given amount
get the string representation of this track
calculates the magnitude of this vector
calculates the magnitude of this vector
normalize this vector
normalize this vector
returns a string representation of this playlist
returns the dot product of this vector and another
scales this vector by s
adds the given vector to this vector
returns the current value of this property
subtracts the given vector from this vector
compares two vectors for equality
sets the value of this property
compares the specified object with this vector4 object for equality
set this vector to the same values as another vector
returns a hash code value for this grid point
returns a hash code value for this grid point
scales this code vector3 code by the given amount
compares the specified object with this pair for equality
sets the current value
returns the current value of the sequence
returns a clone of this vector
adds a task to the list of tasks
returns the cross product of this vector and another vector
removes the pair of tasks from the list
returns the index of the next unique key
add a jar to the class loader
this method sets the timer to 0
normalize this vector
sets the repeat hourly
sets the repeat daily
sets the weekly monthly for repeat repeats
returns true if the given object is a vector3 object
returns a hash code value for this grid point
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
the action has been activated
the resource will be cached
modify the resource cache
this method is used to cache resource information
sets the dir id value for this job ticket
sets the file id value for this file
set the endpoint address for the specified port name
parent directory id
sets the download count
sets the parent dir id
sets the download link value for this wsyetki kullanici
sets the source dir id value for this file directory
returns whether the new folder list is created
sets the source file id value for this file
sets the creates the folders
return true if we should disable upload to anonymous users
sets the removed
set whether or not to disable upload of anonymous users
sets the shared flag
gets the value of the email on upload property
sets the email on upload
returns whether or not to file properties are supported
sets the file properties
returns true if the current element is a moderator element
sets the moderator attribute of the table element object
sets the only public attribute of the project list object
gets the public search value for this multi operation
sets the public search
returns the search
sets the search
gets the value of the subdomain allowed property
sets the value of the subdomain allowed property
sets the subdomain name value for this ws user profile
returns true if the thumb nail is on
sets the thumb nail on
returns the update files
sets the update files
return true if the page is to upload
sets the upload
gets the value of the view mode details property
sets the view mode details
returns whether to view subfolders
sets the view subfolders
gets the web grab attribute of the web service object
set the web grab mode
adds an element to the buffer
adds an array of bytes to the bloom filter
returns true if the specified element is contained within this collection
get the x coordinate
returns the y component of the vector
returns the byte representation of the coord
removes and returns the head of the queue represented by this deque in
pushes an item onto the top of this stack
retrieves but does not remove the head of this queue or returns
adds an item to the head of the queue
creates the priority of the player
build the tree with the best node selected
build a tree that will be played
clears the tree
loads the forbidden cells in a file
scan the matrix for forbidden cells and set them in the structure
resets structure with default values
counts the number of occurences of the given type in the matrix
sets the type of the cell
reverses the direction of the cells
checks if the given coordinates are valid and returns the position of
switches the turn
updates the tree
create the tree component
opens main menu
opens the settings menu
opens a new board
opens a board editor panel
opens a new panel in the frame
resets the cells in the whole matrix
creates and adds the buttons for the game state
set the position of the cell
adds the radio buttons to the group
creates a button with the given name and action listener
sets the selected board
sets the position of the cell
makes a move
sets the position of the nearest circle according to the given coordinates
sets the information of the far circle of the cell with the given
creates a board virtual
activates the image
disable the image lamp
generates the static values for the given type
generates code for the attribute
rejects an alert
ignore an alert
logs out the user
returns the address of the message
compares this contact with the specified contact
this method initializes contact list frame
refreshes the table
create new page
p override attributes set on this tag instance
init method for this filter
process a sep tag
initializes this component
apply the changes to the component
reads the next token from the input stream
return the configuration properties for this publisher
gets the configuration for the specified property
initializes volatile lexer states and lexical states
initializes this component
apply the changes to the component
compares two strings
compares this lrgoto item with the specified lrgoto item
sets the parent tomita node of this node
reclaims the node in the node impl
compares this object with the specified object for order
executes the shift action
returns a string representation of the object
calculates all the
add a node to the list of nodes which can be reclaimated
add the lrgoto item to the goto items set
this is a dummy method
this method is called when the panel is about to be saved
set the model to be edited
apply changes to the model
calculates the follow set for the first word
sets the help button attribute of the main frame object
calculates the follow rule for each production
get class name for look and feel
returns the item that is not selected
returns an unmodifiable list representation of the storage
returns the selected item
sent when the contents of the list has changed in a way
returns the set of non empty elements for the given lr item
singleton map getter
returns true if the given key is mapped in this singleton map
this public method is implementation specific and should be private
this method returns the class of the column in the current table
sets the enabled flag
makes the dialog visible
gives notification that there was an insert into the document
cleans up the splash page
gives notification that a portion of the document has been removed
gives notification that an attribute or set of attributes changed
reads a single character
parse the input stream until one is available and register the
get a human readable name of the encoding
returns the string representation of this unicode value
returns the unicode value
returns true if the unicode value was defined
advance to the next line
adds the given token to the token queue
initializes the sub class
checks if the data type is defined
returns a string representation of this code graph code
sets the datatype and the status of the expression
get the value of rgxvalue
get the name value
this method returns the display value for the type
gets the value of the char ent name item property
get the currently selected entity locator
compares this item to the specified object
performs a binary search for the given key
attempts to find a char entity info instance by name
sets the data model that this panel is editing
when called the preference panel will set its values from the system preference
sets the data model that this component represents
reinitializes the data model with the current preferences
set the data model
apply changes to preferences
sets the data model that this component represents
apply changes to the preferences
this method is called from within the constructor to
when called the preference page will be changed
returns an apply selection object for a given sdd action rm sddaction
returns a string with the given transferable
populate the elements in use
reset this builder to a default state for reuse
indicates whether the data type has been defined
makes a deep copy of this element
updates the key list mapping for an item
returns the current instance of the sddmanager gui
removes items from the item list
returns the sddtype info object for the given type name
returns true if this element has attributes
makes a deep copy of this element
if strict checking is on then we need to do some checks
set the default listener for all attribute types
returns the attribute manager for this data type
returns the template renderer of the type specified
sets the character ent sddmanager
determines if the parent of renderable elements has been rendered
removes a sdd object from the sddobject tree node
removes a sddobject from a tree node and updates all its children
returns the value at the specified index
adds a listener to the list thats notified each time a change
removes a listener from the list thats notified each time a change to
returns whether or not the content of this folder is optional
adds an object to the object tracker
returns true if this field is valid for the given attributes
returns true if char ent was specified for this category
return the char ent validator for this content
returns a clone of this font properties object
returns true if the data type was specified
this is a convenience method that can be used to determine if
set the constant data type
removes an alias group
gets the bwtype
renames an alias group
a code sddelement tree node listener code changed
removes the child update listeners from a given sddelement tree node
sets the text to find by
returns validation config dialog
returns the child of parent at index index in the parents child array
returns the previous sibling of this node in the parents children array
removes all singleton elements from this validator
returns the element that is the only element of this validation result
returns the next sibling of this node in the parents children array
returns a single list of all elements in this complex type
messaged when the user has altered the value for the item identified
returns true if this node is the root node
returns the number of rows in the model
adds a listener for the tree model event posted after the tree changes
returns true if code another node code is a descendant of this node
returns the most specific superclass for all the cell values in the column
it calls apply changes using the model obtained from code apply code
removes a listener previously added with b add tree model listener b
returns true if the cell at row index and column index is editable
returns the value for the cell at code column index code and
determines whether the given element is an eligible element
set the value at the given row and column index
returns a set of all the required attribute names for this
adds a listener to the list that is notified each time a change
removes a listener from the list that is notified each time a change
gets the default configuration
getter for the spell check info
specify a list of comma separated classes to parse
returns the top level validation stack entry on the validation stack
returns whether the spell checking info is cached
returns the spell check info used to generate this spell check
sets the spelling check information
initialize dictionary list with errors
get the configuration properties for this service
returns the configuration property with the given name
check all items in the given dictionary
set the progress updater
returns the child at index child index
kill spell checking process
gets the configuration for the syntax converter
throws unsupported operation exception
returns the index of code child node code in the receivers children
saves the user library
returns the current data that is being parsed
returns the children of the receiver as an code enumeration code
returns the end of the current word in the text
adds a sdd to an existing template
returns the current word position in the text
adds code child code to the receiver at code index code
removes a child node at a given index from this nodes child array
removes code child code from this nodes child array giving it a
not supported for this spell checking
sets the user object
clears all flags that are rendered
removes the receiver from its parent
sets the parent of the receiver to code new parent code
returns the name of the attribute
returns the type of this field
sets the name of this filter clause
sets the number of characters to expand tabs to
returns the tab size from the document or the default if not set
return true if the given name is valid
get the reader for the error text pane
temporarily removes all listeners from document and returns them as an array list
returns the associated file name
returns the path to the associated file
returns the associated tab id
checks whether a associated tab id has been defined
returns true if the associated path is defined
configure the system to work with the current configuration
override this method to apply all changes made in the
closes a configuration dialog if it is a modal dialog
remove a node which has been selected by the user
checks if a property is set
called when a hypertext link is updated
returns the reader
notifies this model that a property has changed
returns the name of the tab file
returns the path to the tabbed pane
adds an sddelement to the supplied element data
adds the top level data to the element
gets the value of the char ent sddmanager property
defines a figure to represent this
convert mouse coordinates to position
change the value player to the given color
changes the value of this object to the specified value
gets the leading player color
sets the battle state
notifies all listeners that a tile has been updated
notifies all subscribers of a turn update player
notifies all subscribers that report has been updated
notifies all subscribers of the state change
returns the tile at the given position
sets the color of the player that owns this tile
returns the winner of the game
sets the battle state
sets the ruleset that this game is using
sets the current state of the game
create a message for the specified key
create a message for the specified key and one parameter
create a message with two parameters
returns the row number
returns the column number
finds ports in the grabber in the port stack
sets the port type
returns the port type
return a string representation of this object
grab the port data from the bus
calculates the barometric pressure in the barometric pressure
sets the port type
calculates the barometric pressure in this
calculates the barometric pressure in kelvin
get the port type of this socket
calculates the barometric pressure in mb
returns the pressure in miliseconds
stop the game
get the pressure of the current cap at the current delaid moment
get the pressure in mb
returns the calibrated slope
get the calibrated offset
set the units for the current time
gets the input voltage of this vuner
returns the voltage of the vacaciones
returns the number of units currently in the current
returns the output voltage of the vad for this sensor
update the update rate of this code gl20 resource shader fragment code
sets the units for the field
return a string representation of the object
returns the update rate of this code gl20 resource shader fragment code
calculates the wind chill
finds sensors on the basis of the sensorhash and returns the
free all the sensor ports
returns the name of the current database table
takes the barometric data and grab the barometric pressure
returns current time grab
p called when the user presses the humidity data
this method will grab the values from the temperature sensors
check if the user wants to quit
sets the name of the current database table
tests the print weather data method
this method initializes this
this method initializes j scroll pane
handles the arrival of a message from the server
this method is called when the client disconnects
this method is called when the connection to the server is closed
notifies the gui that the connection to the server was established
this method initializes this
create new payment method
handle a user statistics request
hides the book
link to catalog
return a message reader for the given user credentials
link to catalog
un book link to genre changed
unbook link to subject changed
hide isbn
review handler review
this method initializes j panel border up
this method initializes j panel border left
this method initializes j panel border right
this method initializes j panel border down
disconnects the user
this handles the book details command
adds empty genre to database
deletes a book
handles the add genre command
publishes a review
adds a subject to the data access
custom handler for delete subject messages
returns the current date in a string format
handler for the delete genre command
returns a message with all reviews
invoked when an action occurs
sends a message to apply the new reviews to apply
this method initializes this
this method initializes j button add new genre
this method initializes j button add new subject
this method initializes j button add new book
this method initializes j button delete genre
this method initializes j button delete subject
this method initializes j button check review
a helper method to save a book
this method initializes this
this method initializes this
this method initializes this
this method initializes this
saves user credentials to the persistent store
this method initializes j panel
this method initializes this
this method initializes this
this method initializes j paneluttons border
prints text in the text area
this method initializes this
this method initializes this
this method initializes j button download
this method initializes this
this method initializes j tabbed pane
this method initializes this
switches to the last opened book view
this method initializes j text field isbn
this method initializes this
this method initializes j panel border left
this method initializes j panel border up
this method initializes j panel border right
this method initializes j panel border down
this method initializes j panel border up
this method initializes this
this method initializes this
this method initializes this
this method initializes this
when the user clicks on the book button check whether he has
this method initializes j text field
this method initializes j button ok
this method initializes this
this method initializes j button periodic reports
this method initializes this
this method initializes this
method get string area date next month
responds to the add action by displaying the reponse
returns a string of the year following the current year
add the specified review value
called whenever the value of the selection changes
remove the specified review value from orm adapter
checks if the list contains the given review value
add the specified persistent object to ormset
add the specified persistent object
remove the specified persistent object from ormset
remove the specified persistent object from ormset
returns true if the given chapter is in this collection
checks if this collection contains a specified book file
responds to chenged review status
this method is for internal use only
add the specified persistent object to ormset
remove the specified persistent object from ormset
this method is used to determine whether a particular value exists
add the specified persistent object
remove the specified persistent object from ormset
returns true if this set contains the specified subject value
add the specified persistent object to ormset
remove the specified persistent object from ormset
return true if this set contains the specified element
add the specified persistent object to ormset
remove the specified persistent object from ormset
this method is used to determine if the specified value is
find the link between the selected genres
find the book link to the selected genre
checks the node type to link
sets the value of the user property
add the specified persistent object to ormset
remove the specified persistent object from ormset
this method is used to determine whether the specified value is
add the specified persistent object to ormset
remove the specified persistent object from ormset
returns true if this collection contains the specified element
adds listeners for the buttons in the catalog managment tab view
adds an action listener to all buttons in this dialog
this method is for internal use only
sets the value of the orm language property
adds a new chapter to the list of chapters
removes the given chapter
remove the last view
returns the chapter at the specified position in this list
removes the chapter at the given index
adds the given chapter at the given index
returns the index of the given chapter or 1 if not found
add the specified persistent object to ormset
remove the existing data from the persistent store
this method is to check if the set contains a certain object
this method creates a new review to check review list
adds a new entry to the list
update the code in the list
returns the number of elements in the code cb list code
set point at index
get the code word at the specified index
removes an element from the list
remove the element at a given index
returns point at the given index
returns the number of points in the list
resets the point list
return the difference between background and background
return the background points of the given pimage
return the foreground points of the given pimage
sets the minimum value of the second norm of the vector
returns the version of this frame
get the beta parameter for this shader
get the first criterion value
get the second minimum value
returns the tm component of the percent valuation percent
callback called on every user connected to the application
end the user session
callback called on every user connected to the application
start the user session
callback called on every user connected to the application
login into the application
callback called on every user connected to the application
callback called on every user disconnected from application
callback called on every user connected to the application
empty implementation to satisfy the build listener interface
responds to a build being started by just remembering the current time
no op implementation
task started this event is ignored
resets the csv cache
method that changes the script
get the url for the class
parses the given classname and returns the name of the dot
replaces the dot with the given classname and windows
returns the file name from the url
returns the directory name from the url
show the head of the table
returns the directory name from the url
print a blank line to the given stream
prints out the help text
get cut command
the test checks the correctness of the parameters
override target to change the properties name
convert url to file
get file path to file
checks if the classpath of the application changed
check if the current application is in janus mode
throws the wizard exception
show the options for testing purposes
show the tools
creates the specified folder
check if the given string is a directory
writes a list of all scaffolding and space configurations to the output stream
return if the key value is a valid key
callback called on every user connected to the application
end a user session
callback called on every user connected to the application
session is ended
checks if the simple class name is a domain class
extract the classes in a list and then process the pojo
creates the all the classes of the model
returns the folder of the specified file
writes the specified file to the destination file
method that creates a new t object
reads an object from the pool
delete the object from the database
convert first capital letter to upper case
return the template configuration
set the number of pages
closes the stream
close the popup
create a report generator form and show it
resolve a string using the i18 n
delete the selected aspects
get the descriptor with the given name
load the desktop descriptor for the given entity
signal that a file has been updated
set the current screen
display the form with the given area
remove the user view from the system
adds a resource to be reloaded when the file is reloaded
get the class info of the class being described by this class file
get the schema class info for the specified entity name
get the schema field by field name
get the schema action for the given class name
return the embedded type
gets the schema event for the given class name and event name
add configuration fields to the list if they are not
add a module to the configuration
add a subclass to the list of sub classes
adds a resource to the listeners
returns true if the resource should be accepted
adds an aspect to the configuration
adds a new configuration to the list
add a new configuration to the configuration map
sets the configuration
add a component to the container
register a component instance
add a new component to the container
add a component instance to the repository
add a component instance to this instance
add a component instance to the factory
get a component by its class name
show the content at a given position
executes the command
defines an attribute within the context of this dyna bean
returns the screen
invokes the before action on each registered action
invoke after an action
returns the current screen
set the default values for a aspect
checks if a component of a certain class exists in the container
get the default value for an aspect
flushes all objects of a class
get the session aspect context
sets the screen
check if a component exist in the web application
create a new controller context
close the current aspect instance
check if a component exists in the local context
return the object of the entity
destroy the resource
loads the file
gets the object from the database using the entity name
search the tree node with the specified child path
called when a field is changed
method that creates an object form association
get the values from the view and validate it
signal to all the listeners that the class loading event has
get the schema object for the current object
returns the view component that contains the given object
return the dyna bean for the specified class
get the form for the given object
get the form for the given class
get the code dyna bean code for the named field
set the component to be displayed
set the value of a component in the local context
returns tt true tt if this collection contains the specified element
returns tt true tt if this collection contains all of the elements
returns the number of elements in this collection
setter of the property tt generator tt
adds a generator to the list of generators
removes a generator from the set of managed generators
returns the technique that is used to create this material
clears the generator
resets the list of class names
returns the transformer which is used by this reader
set the transformer to be used
adds a new import declaration that is needed for this transformation
returns the aspect of this node
set the aspect for this label
sets the unit
get the integration tool
set the integration tool
get the tool that is the parent of the current tool
lib gets the value of this field
set the tool system
set the library name
gets the value of the out property
sets the output file
sets the technique that will be applied to the rendering
returns the unit of this level
sets the unit
set the current tool
returns the bin
sets the bin
generates the document
generates the html code for the given url
returns the fixture for this test case
sets the fixture for this test case
returns the collector
sets the collector object
tests the unit
tests the aspect
tests the tool
test that an aspect is generated correctly
tests that a tool is available
test that aspects are generated correctly
runs all the tests in the given url
test that aspects are generated correctly
returns the platform
set the platform
get the default value of the property
sets the default values of the preferences
returns the browser string
show the head of the hermometer in a human readable form
returns the aspect corresponding to a string
creates a tool from a string representation of a class
returns the file name from the url
returns the directory name from the url
get the directory name from the url
helper function for browser string to browser class
returns a cut of the file content
convert a string into a level constant
convert url to file
get file path for file
creates the specified directory in the file system
is this a directory
returns tt true tt if this set contains no elements
login into the application
deletes all test cases
clean the reports folder
if the generator is not already there clean it
removes a file of graph from property file
show the head of the table
returns the aspect corresponding to a string
adds a tool with the given name to the given class
returns the file name from the url
returns the directory name from the url
returns a cut of this cell
convert a string to a level
converts an array of strings to a string
callback called on every user connected to the application
show the head of the hlaobject
replaces the dot in the given classname with the
returns a cut of the content of the url
callback called on every user connected to the application
show the head of the hermes table
run the test cases and report the results
generates the collection xml from the url
tests the unit case
tests the aspect
check that the correct tool is created for the correct tool
tests the aspect
test that we can generate an aspect
test tool with url
tests that the url is generated correctly
run the unit test
converts class to url
parses a class name and returns the corresponding dot form
returns a screen that can be used to launch the test
callback called on every user connected to the application
logout the user
saves the multi page editors document
returns the validator
get annotation xml file
initializes the table model listener
saves the current properties to the file
opens the editor at the given position
returns the name of this language
creates the element
method that sets the top component of the editor
return the xml tab file object
fills the table model with the data in the specified column
returns the current period
gets the number of periods
returns the total amount of personnel costs in this colony
returns the total subcontracting of the current solution
returns the total number of costs that are not to be considered
returns the total indirect costs
returns the total number of realations for this personnel
returns the total number of demostrations for this service
returns the management costs for this contract
returns the total of others costs for this service
returns the total costs for this ability to enter a point in degrees
returns the maximum indirect cost in direct costs
returns the maximum indirect cost in the
returns the maximum indirect cost in the
returns the maximum indirect cost of an indirect object in the others
the maximum cost in this database from any indirect and others
returns the total amount of allowable eccontribution in rtdinnovation
returns the total amount of allowable eccontribution in demostration
returns the total amount of allowable eccontribution in management
returns the total amount of the allowable eccontribution in others
returns the total of allowable eccontributions
returns the personnel costs in this entry
returns the total costs for a personnel costs for this task
returns the total costs of a personnel costs management
returns the total costs of all people who have to join this activity
returns the number of realers subcontracting rtdinnovation
returns the amount of subcontracting demonstration of the current node
return the subcontracting management of the contract
returns the number of subcontracting others in the contract tree
returns the costs that are not to be realized by other direct
returns the amount of other direct costs for this task
method to get the other direct costs management
returns the total costs of all other people to be answered by
returns the costs that have been generated for this realtime
returns the effective indirect costs for this ability
gets the total costs of an indirect costs
returns the number of indirect costs that are not
returns the costs for the eccontribution resource
returns the total amount of personnel costs in this colony
returns the total number of services running in this context
returns the total number of other direct costs of this person
returns the total indirect costs of this cell to the current
returns the total number of realings for this offering
returns the total number of demostrations for this contract
returns the total amount of management for this contract
returns the total of others for this service
return the maximum indirect cost in direct costs
return the number of allowable eccontribution in rtdinnovation
setter for property bread crump
returns the bread crump
method that performs home operation
method that changes the password of the aspect
get the project for a given acronym
return the innovation of the gene
set the innovation for this entry
returns the persons demonstration
sets the demonstration
get the management
sets the management
returns the picture of the participant
get the other value
sets the amount of the person
sets the other
returns the name of the legal part of the contractor
sets the name of the legal user
sets the participant instance that this instance represents
get the short name of the participant
sets the participant short name
getter for property period
returns the participant wrapper
returns the address of the participant if it is a legal address
sets the period
sets the requested eccontribution
sets the estimated elegible costs attribute of the sladata cvo object
sets the legal address
get the requested eccontribution
sets the value of the grant agreement number property
gets the estimated elegible costs attribute of the sladata cvo object
returns the home page of the participant
sets the home page of the user
get the value of grant agreement number
returns the current legal registration number for the participant
gets the acronym of the project
sets the legal registration number
sets the acronym
returns the place of the registration of the participant if it is a
returns the title of the project
sets the place of registration
sets the title of the project
obtain the date of the registration
returns the value of starting date
sets the date of registration
sets the passthrough number of this users agreement
sets the starting date of the project
returns the users vat number
sets the file type
gets the duration
gets the value of the grant agreement number property
gets the value of the folder path property
sets the participant vat number
sets the duration of the project
returns the canonical string representation of the legal form of the current participant
returns the project abstract
sets the legal form of the user
sets the cm synergy project abstract on which this user is associated
sets the acronym
sets the participant type
returns the call identifier of the project
returns the participant type
sets the call identifier
get the complete path
returns the activity codes
sets the set of projects
sets the title of the help page
sets the participant
sets the activity codes
returns the free keywords of the project
returns the participant
returns the starting date
sets the free keywords
sets the submitted period
sets the project of this folder
sets the starting date
sets the coordinator for this wrapper
returns the period with which this customer has been submitted
returns the coordinator for this participant
returns the list of participants
sets the percent maximun funding rtd
sets the duration
setter for property participant list wrapper
gets the value of the percent maximun funding rtd property
gets the value of the pic property
gets the value of the project abstract property
sets the scientific project contact
return the scientific project contact
sets the id of the product
sets the percent indirect costs
sets the cm synergy project abstract of the company
sets the legal financial contact
getter for property legal name
returns the percent indirect costs
getter for the legal financial contact
getter method of the call identifier
sets the name of the legal entity
sets the registration contact
setter method for the call identifier
returns the registration contact or code null code if no contact was
setter to short name
sets the participant
gets the value of the activity codes property
get the legal address
gets the value of the requested contribution property
sets the legal address
sets the activity codes
sets the requested contribution
returns the home page
sets the costs for this product
sets the home page
returns the free keywords
gets the value of the legal registration number property
sets the free keywords
sets the legal registration number
gets the costs attribute of the user object
gets the value of the place of registration property
sets the coordinator of the participant
sets the place of registration
returns the coordinator
gets the date of registration
sets the costs of the role
returns the financial transfers
sets the date of registration
gets the value of the vat number property
sets the street name
gets the value of the street number property
setter to the property financial transfers
sets the street number
sets the value of the vat number property
sets the account name
set the town name of this address
getter for property postal code
gets the value of the po box property
gets the value of the legal form property
setter to postal code
gets the value of the receipt amount property
setter for po box
sets the attribute heavys i legal form i the attribute to which it is
returns the address of the bank account
sets the participant type
sets the receipt amount
returns the percent maximun funding rtd
sets the bank account address
returns the participant type
get interest generated
set interest generated
sets the contact information for this record
returns the interest amount
returns the bank name
sets the participants of the coordinator
gets the file
sets the file
sets the bank name
sets the period with which this site is submitted
sets the interest amount
sets the eligible costs of this cost record
get the bank branch address
sets the projects
sets the bank branch address
check if the user can read the project
returns the personnel costs in certification
gets the value of the eligible costs property
returns the number format
sets the number format
sets the personnel costs in certification
sets the scientific project contact
get the iban
gets the scientific project contact
set the iban
sets the legal financial contact
returns the bic
gets the legal financial contact
sets the bic
gets the value of the name of auditor certificated on methodology property
sets the registration contact
returns the registration contact
gets the cost of the certificate on methodology of the certificate
checks if the current user can read any project
check if the user can write the project
returns the certificate in finalncial statements flag
gets the value of the name of auditor certificated on financial statements property
gets the cost of the certificate on financial statements
returns the name of authorished person for sinature of financial statement
setter for property form c
gets the form c
method that creates a new t object
return the template configuration
convert this object to an entry
called by server when a response message is received
method that logs in to the system with the specified user password
logout a user
reads a registered user
updates the user information
sets the favourite theme of the user
returns the favourite theme of the user
gets the company category value for this describe global sobject result
sets the company category value for this describe sobject result
returns the entry latitude
sets the entry latitude
returns the longitude of the entry
setter for property entry longitude
compares this entry to another entry
returns the company with the given employee name
removes an employee from the company list
assigns the responsible for the given company to the given user
deletes a company
user is responsible
callback called on every user connected to the application
method that creates a new project which is a copy of the given project
get the html code for the avatar of the specified account
method that performs several operations when shows the object associated to this class
builds the total row of the report grid
set the values for the cells
method that adds an activity
remove the selected activity
method that fills the list of requests with the time spent
method that adds an expense into the table showed
method that creates a new project
method to show gantt
method that adds activities to the report
calculates total number of days in the week for a given list of
method that performs several operations when shows the object associated to this class
method that adds a note to the table showed
method that performs several operations when shows the object associated to this class
method that refreshes the list of notes
method that performs several operations when shows the objects associated to this class
method that adds activities selected into the grid
gets the value of the wadl code property
sets the wadl code
sets the services base url
returns the services base url
get the wsdl as a byte array input stream
method that returns all wadl services available
get the wadl code of a wadl class by name
gets the path wadl id
returns the assembly if the given assembly is an instance of this
creates a wsdl file for the service unit
prints a role link
exports the bpelproject to a folder
creates an import xml node with the given namespace and location
creates a variable element
add the plink from the def to the def
returns the operation by name
returns the first operation in the chain
create a receive element
sets the name of the endpoint
create an invoke node
creates an assign element
gets the value of the plink property
create the reply element for a given operation
sets the definition
logs the path entries for copy files older than the specified revision
get the url for the author
response to json stream
creates the field editors
passing the focus request to the viewers control
returns the code scanner for this configuration
return a scanner for creating plasm partitions
checks if the character c is the start of a word
is the character a word start character
tests if the specified character is part of a word
test if the character is part of a word
this method creates a document for an element
returns the token associated to the given character
this method is called when ok button is pressed in the wizard
the action has been activated
the action has been activated
sets the path to the plasm model
setter for stream listener
adds the given object to the list
returns the stem of the word form of a given word form
returns the stemming result for the given word form
returns the list of grammatical properties associated with this
sets the list of
sets the value of the form property
returns the core of this grammar
sets the core
set the accuracy
compares two analysis results by their accuracy
returns a hash code value for the object
sets the value of the
two analysis result objects are equal if and only if
returns a hash code value for this object
returns the name in the given language code
writes the objects data to the given stream
two analysis results are equal if their grammatical properties are equal
sets the name of the language code
read a double in form object and put it in the stream
returns the description in the given language code
serializes this component to the given stream
returns a string representation of the object
sets the symbol
reads this object from the stream
set the description for the given language code
checks if the unit is certain
writes this object to the given output stream
returns a string representation of this object
returns a collection of strings with all available language codes
reads this object from the given stream
writes this object to the given stream
returns the list of grammatical properties associated with this
reads this object from the given data input stream
returns a hash code value for this object
set the list of grammatical properties
returns true if the given object equals this tag
returns a string representation of this list
returns a collection of strings with all available language codes
compares this object with the specified object for equality
compares this grammatical tag with the specified object for order
sets the example for a given language code
compares this object with the specified object for order
sets the mark of this patch
clears the list of descriptions
returns true if the given object equals this object
returns a collection of all the tags in this picture
writes this object to the given data output stream
returns true if this grammatical properties covers given properties
compares this grammatical category to another
reads this object from the given data input stream
this method is used to initialize the morphology
returns all the
help the gc by dereferencing instance variables
serializes this object to the given stream
checks whether the given tag is present in the grammar
suspends the process
reads this object from the given stream
resumes the stream
writes this object to the given data output stream
returns the supported locales
writes this object to the given data output stream
reads this object from the given data input stream
gets the tagset
returns the value of the named property
set the tagset
returns the words lemma or null if none
returns the result of the lemmatiz which corresponds to the given word form
returns a collection of grammatical categories
sets the properties
string representation of class mark
adds a property to the map
compares this object with the specified object for equality
sets the supported locales
returns a hash code value for this object
adds the given
compares this object with the specified object for order
sets the initialization flag
setter for property child beans
returns true if this group contains grammatical tags that are not
sets the suspended flag
remove the symbol
writes this object to the given output stream
returns a list of all stemmers for a given locale
reads this object from the given stream
remove an name tagged value set
writes this token set to the given data output stream
gets grammatical properties associated with a mark
reads this object from the given data input stream
gets grammatical properties by given id
add all child beans tagged
returns the most accurate stemmer for a given language
returns grammatical properties list for given id
remove a description set with them the value set
gets grammatical properties list from cache
creates a new grammatical category object
creates a new grammatical tag
remove an language from this set
returns a list of all
remove an example from this neuron
get all unknown properties set with them the commodity tagged
get all properties set with them the unknown tag
remove an category from this set
returns the most accurate lemmatizer for the specified locale
returns a lemmatizer for the specified locale
writes this object to the given stream
remove an tag from this object
writes this node to the given writer
returns all the morphological analysers for a locale
compacts this object so that it contains no more than one
test of get symbol method of class parser
test of get stem method of class morphology factory
test of get stems method of class morphology factory
test of get stemming result method of class morphology factory
test of get stemming results method of class morphology factory
test of set tags from mark method of class grammatical properties impl
test of get mark method of class grammatical properties impl
test of get form method of class analysis result impl
test of get tags method of class com
test of set form method of class analysis result impl
test of get accuracy method of class analysis result impl
test of has tag method of class com
test of get tagged tagged value method of class com
add all child beans tagged
returns a list of all generators in the given locale
test of to string method of class com
test of hash code method of class analysis result
test of hash code method of class grammatical category impl
test of equals method of class analysis result
returns the most accurate generator for a given locale
test of get symbol method of class parser
test of get grammatical properties list method of class morphological analysis result impl
returns the fastest generator for a given language
test of get core method of class morphological analysis result impl
test of set core method of class morphological analysis result impl
test of get grammatical morphemes method of class morphological analysis result impl
test of set grammatical morphemes method of class morphological analysis result impl
test of get form method of class morphological analysis result impl
test of to string method of class parser
test of set form method of class morphological analysis result impl
test of hash code method of class grammatical tag impl
create an instance of
test of get accuracy method of class morphological analysis result impl
this method calculates the number of bits used to encode the given value
test of compare to method of class grammatical tag impl
clears the tree
sets the masks to a new mask
given a bit index as a long value returns the value
returns the list of child nodes
sets the list of children
returns the child for the given key
returns the number of children of this node
add a value to the end of the list
add a child to this node
add a value to the end of the list
get the value of a bit as integer
removes all units from the units array
sets the value in given index
allocates the memory used by the item list
sets the bit at the current index to 1
dispose of this data structure
deserializes the state of this object from the given stream
writes the version number and the data to the given output stream
method linked list
reads the record from the data input stream
returns the root of the tree
throws unsupported operation exception
clear the unit array
returns all the words of this node in the tree
this method is not supported
decodes data from the input byte buffer into a java
decodes data from the input character buffer into the output character buffer
legal replacement is a replacement for a token
returns true if the given character can be encoded using this encoding
returns true if the given character sequence can be encoded with this
returns the child node that matches the key
get the charset object for a given name
return an iterator over all the available charsets
returns the number of children of this node
encode a character
makes sure a string is compact
this will decode a byte into a char
adds a child to the receiver
test of size method of class conexion db
get int value method testing
this method is being tested in test get int value
unsupported by this implementation
decodes data from the specified buffer
copies characters from this character array into the destination character array
copies characters from this string into the destination character array
removes the string from the hash
write this constant pool object into the stream including the type byte
reads a changeable byte
get the maximum byte allowed
returns true if this is a compact store
returns the max char
test of new encoder method of class dynamic charset
get whether the user can change this cell
set whether the cells are editable
is this a loose parameter
this will register a new charset to the character set
removes a charset from the cache
test of fast decode to char array method of class dynamic charset
sets the internationalization
this method is called whenever the content of the underlying string buffer
sets the length of the string to the given new length
compacts this string buffer
deserializes this object from the given stream
compares this object to the specified object
compares this string to the specified mutable string object
compares this character sequence against the specified string
test for equality
returns the byte at the specified index
replaces the string at the specified position in this
return the first byte in this string
returns the last byte in the array
returns a new string that is a substring of this string
returns a new string that is a substring of this string
checks if the name starts with the specified prefix
checks if the specified string ends with the specified suffix
get the character at the specified index
checks whether this
checks whether this string matches the given code regex code
appends the string representation of the code string code argument to this
parses a int value
gets the index of the specified character
returns the index within this byte array of the first occurrence of the
searches the string builder to find the first reference to the specified
appends the string representation of the code byte code array
appends the string representation of the code char code argument to
inserts the string representation of the byte at the specified position
inserts the string representation of the code char code
write this array to the given output stream
print this character array
print a blank line to the output stream
reverses the bytes in this string
creates a new projection ct object
creates a vertical ct object with a given name and type
closes the underlying data source
get a dimension from the dimension set
returns the path name
finds a grid by its name
generates the detailed information about the data set
returns true if the given value is between valid range
finds the coordinate axis with the specified name
finds an attribute with a given name in this context
find the coordinate system with the given name
writes a nc ml document
sorts the coordinates
determines if this axis is a z axis
construct a new coordinate transform object
gets the type of transform
find the coordinate element for a given date
finds the parameter with the given name ignores case
makes a name for the specified axes
adds a collection of coordinate transforms to this envelope
adds a coordinate axis to the graph
returns true if the encapsulated data contains a string
get the number of terminal nodes in the cumulative vector
returns the value of this literal
returns the string value of this property
returns the numeric value of this property
factory method for data types
adds new attribute to the entity
read in the array data from the yx file
read zy data from the file
return the description of this search result
return the description of this node or null if none
gets the projection
returns the shape as a string
returns the units as a string
set the values of the data object
returns true if there is a product defined for this envelope
returns the units as a string
sets the values of this factory
returns true if the given variable is complete
is this grid equal to the given object
returns the min value
returns the max value
returns true if the two coordinate systems are equal
return the name of the level at the specified index
returns the name of the time at the given index
returns a string with information about this work unit
registers a class to a convention
augments the given dataset with the data in the file
adds coord axes from gui structure
augments the given dataset with the data in this file
augments the given dataset with the data in the file
constructs coordinates axes
searches the given net cdf dataset for coordinate axis expressions
constructs the coordinate systems
returns the name of the coordinate at the specified index
returns the value of the coordinate at the specified index
checks if parse info for x netcdf bucket is a valid
returns the coordinate edge at the specified index
finds the coordinate element in the specified position
reads a dodsstructure
returns the value of the type of the values of this constant
checks if the attribute is a string
returns the value of this data set
returns the first component of the vector
find all coordinate axes in the net cdf file
checks if the specified variable is within the coordinate axis
returns the first
returns the first structure with the specified short name
read the dods data
returns whether this is an unknown type
returns the first variable with a certain short name
returns the first variable with a certain name
returns the size of this item
returns the short name of the configuration
reads a dodsstructure
returns the index of the data structure
returns the value type of the attribute
returns the length of the attribute
returns the value of the attribute
returns the string value of an attribute
returns the numeric value of an attribute at the specified index
find the dimension index for a given dimension name
returns true if the two attributes are equal
compares this dimension to the specified object
returns an iterator over all attributes of this attributed element
return the attribute with the given name or null if none
finds an attribute with a given name ignoring case
returns true if one of the dimension is unlimited
returns either a java
reads everything from the array
returns the full name of this class member
returns the value from the attribute
get the name and dimensions of the current type
returns true if the two variables are equal
returns a string representation of the object
returns a string representation of the data type
returns the primitive type of this data type
returns the class type either
set whether to fill all attributes
adds a dimension with the given name and size
returns either a java
adds new global attribute
adds new global attribute to the runtime
adds new global attribute to the runtime configuration
adds variable to the schema
scan the code dds code and find the base type in the list
adds new variable attribute
adds new variable attribute
collapse all whitespace in a string
removes whitespace from a string
remove sub from string s
adds new variable attribute
removes a character from a string
extract data from the cache
replace all occurrences of a string with another string
replace all occurrences of a string with another string
checks if a string contains only digits
create everything for the file
writes to the file with the given name
writes variables data to the file
flush all attributes to the file
divide this unit by a unit
preloads a dstring to the array
get the time in seconds
checks if is time unit
checks if the unit is a date or date unit
writes the grid to the file
compares this tag to another
extracts a string from a string of the form bt
replaces missing values in a given grid with the missing values
return the south right point of the rectangle as a lat lon point
return the lower left point of the rectangle
find a variable by name
returns whether or not the dateline is a cross dateline
compares this lat lon rect to another lat lon rect
finds a dimension by name
gets the center of longitude in decimal degrees
determines if a point is contained within this rectangle
returns an iterator over all attributes
read the geotiff file using the filename passed in the constructor
checks if this rectangle is contained in the lat lon rect b
finds an attribute with the given name
searches for a global attribute
finds the value of an attribute of a variable or returns null
set the longitude at which center will be computed
extend the bounding box by the given lat lon rect
return a debug representation for the file
get the longitude at which the center of this grid box is located
write a cdl object to an output stream
returns information about this class
returns a string representation of the object
returns true if this projection point is equal to the given one
returns a string representation of this point
get the eccentricity
set the location of this shape to the given point
get the flattening factor
sets the location of this code point2 d code to the specified
returns the major part of the complex number
returns the minor version number
returns true if this number is infinite
returns code true code if the given point is infinite
converts a lat lon point to projection
returns the minimum point in the projection
returns the max point of the map
convert a point in the lat lon format to a lat lon point
sets the height of this code dimension2 d code object to
are two projection points cross seam
returns the attributes of this class
constructor used to create this object
coordinates are the space seen by the kernel and the space
constructor for bs sphere
returns the hash code value for this object
coordinates are not equal to cell coordinates
should this shape be offset
is the point a lat lon position
this method is called from the property page
get the cross section selector
applies the properties provided by the implementation to the component
returns the stretching flag
returns line drawing at given position
sets the stretching flag
get the default map area
returns whether to change the sides of the die
returns the default map area in the map
gets the parameter value
set the default projection rect
sets the value of the parameter at index
converts a latitude and longitude to the projection point
returns whether or not all of the sensors are notified
set the stations in the table
returns whether this panel should be colored
converts a point in world coordinates to a lat lon point
updates the boxes that displays the new station
this method extends the superclass implementation to
remove this object from the database
builds a textfield for the given command
clear the values of the dialog
override this method to add custom logic before the calculator
returns the index of the current element
handles a change in the position of the current area
get the type of the elements of the jsonarray
returns the index value
increment the digit
sets the index value
sets the position of this index
get the earth location tuple corresponding to the given x y coordinates
sets the 0 dimension of this index
sets the 1 dimensional value of this index
sets the value of two
sets the value of the third dimension
sets the four dimensional value of this index
set the value of 5
set the range and bearing from ellipsoidal result
sets the value of the 6 component of the index
returns the class of the elements of the arrays represented by this
sets the value of the length field
get the type of the elements of the jsonarray
returns the index of the current element
returns the index of the current element
get the legend labels and azimuth
sets the index value
sets the values of elements from the specified array to the
sets the index value
sets the values of elements from the specified array to the
get the latitude of a given text field
get the longitude of a given text field
gets a column of this matrix as a vector
gets a row of this row vector
returns a mavector to a given message from this one
multiply a diagonal matrix by a vector
get the type of the elements of the array
multiply this matrix with the given diagonal elements
returns the index of the current element
sets the value for the current element
returns the class of the elements of the arrays represented by this
return the index of the current element
sets the index value
returns the value of the variable
set the value of the boolean storage operation
creates a new instance of d1
set the value
constructor creates a new d2 int array with a given length
set the value
constructor creates a new integer array with the specified
set the value
constructs a new d4
get the value
set the value
set the value
set the value
constructs a new d5 int array
set the value
sets the value at the specified index
set the value
set the value
set the value
set the value
get the value
set the value
set the value
set the value
set the value
set the starting lat of the ride
set the value
set the value
get the start lat
set the value
returns the integer element at the given position
get the value
set the starting longitude of the link
set the value
factory method for a shape
set the value
set the value
get the longitude at which the first point lies
set the value
constructs a new d6 object
set the value
set the value
copy a number of elements into an array
set the value
set the value
set the ending lat of the ride
set the value
set the value
set the value
set the value
returns the cosine of the vector
returns the dot product of this vector and v
get the end lat
returns the norm of the dictionary
normalizes the matrix while only if a norm is less than 0
return an index iterator for this index
set the value
returns an array of range objects describing the ranges of the
returns the class of the elements of the arrays represented by this
set the value
sets the end lon attribute of the simple node object
returns the class of the elements of the arrays
get the index of the current element
sets the index value
creates a new section for this view
returns the index of the current element
sets the index value
reduces a range of ranges by removing any reduce points
reduces this section to the given range
get the ending lon of this move
set the value
not implemented yet
set the value
returns the class of the elements of the arrays represented by this
dummy method so it doesnt do anything
flips the array
returns the index of the current element
returns the array containing the transposition values of each column
set the value
sets the index value
create an array of each dimension of the view and insert the dimension
gets the start station
this method is used to reduce the view by removing elements
set the value
sets the start station
set the value
reduce the view of a dimension
set the value
gets the end station
set the value
sets the end station
set the value
set the value
set the value
set the value
set the value
sets the value at the specified index
set the value
set the value
set the value
set the value
get the string with the leading slash
returns string at the given index
set the value
returns the string at the position specified
set the char with a string
sets the char at the given index
sets the string atribute index ima
creates an index impl for a shape
compute the size of a shape
computes code overhead code
returns the value of the element
set the value
set the value
set the value
set the value
returns the storage
set the value
get the value
set the value
set the value
whats this jdbc drivers major version number
receive notification of the beginning of a document
method to update all registered trackers to the torrent
method to update the tracker object
updates all feeds from the database
resolves the ip address to a string
make viz files
makes the viz trackers
creates a net cdf file for the net cdf file
receive notification of character data
checks if a tracker is already in the list of torrent trackers
create a new bs torrent tracker object with the default configuration
this method will replace the torrent tracker with another tracker
file to be initialized from file
adds a new torrentfile to the list of torrent trackers
creates a new bs torrent tracker object
adds a new torrentfile to the list of torrent trackers
the constructor initializes the torrent tracker
creates a new code bs torrent tracker code instance
removes all feeds from the project
write to db
checks if the torrent contains a given file
checks if the torrent contains a given url
update the tracker info
gets the value of certainty
updates local database with new data from database
resolves the ip address to a string
reads a torrent from a given file and builds a torrent from it
constructor for a bs torrent file
decode an integer from an input stream
automatically fill in the ip information
gets the string value from the file map
gets the string info attribute of the request object
return a random request time given the time constrains
returns the requested string
returns the requested integer from the request string
show the gui
this will create the loaddialog object
returns the string representation of the current value
used for testing
used internally to create a removed dialog gui
show all the chats
gui resolve all ips
starts the update of the trackers list
sets the text of the tracker status text
sets the text of the peer status label
returns a string representation of this object
sets the torrent feedback text
sets feed text
print a line to the output
prints the error message
returns the element at the specified position in this list
sets the value at the specified index
adds the object to the list
removes the element at the specified position in this list
clear the memory
set the token that this class represents
sets the root of the tree
create a new tree node from a token tree node
returns the value with the given name or null if there is none
sets the descriptor
prints the tree
setter for the type
returns the error list
prints the current indention
getter of the type
returns the sibling of this node
sets the sibling attribute of the tree node object
returns the child at the specified index in the receiver or code null code
sets the child at index
parse a string as a syntax tree
sets this node and its children
print the token details
parse a single syntax tree
return a syntax error message
test if the next token matches the expected token
reads the input of the grammar file and tokenizes it
checks if there are more tokens
sets the tree node that this node belongs to
prints out the response
get the next token from the stream
builds a new node that matches this token
calculates the power of two longs
parses a print statement
test if the next token is a match for the given type
parses an expression list and returns the corresponding tree
parse an assign statement
parses a simple expression
parse a simple expression
factor factor factor
parses a factor
parses a basic number
parses an expression
parses a basic number
this is the entry point method
read base session map data
checks if the session is full
writes the contents of the tree into the given output stream
returns true if the group is empty
returns the next free id for the given index
return the next depth in the xml tree
removes a connection from the list of active connections
removes a user from the connections array list
increments the next user id
appends some text to the output text area
set the size of the view rectangle
returns the session with the given id
set the view center point
pans the map view into a point
sets the left button to the user
keep the rectangle inside the given rectangle
stops the current track
set the object drawn by the map
draws the objects at the given mouse position
returns the int val
get the point
returns the action id
sets the paint used to draw the selected objects
returns the size of the picture
reads the user id string
return the drawn object from the given key
read the input stream and return a net3 int
sets left mouse mode
checks if a point is inside the object
set the rectangle that encloses the current visual node
get the rectangle that encloses the current path
read a point
write an action to the file
called when the selection is drawn
return the object at a given point
writes a generic data element to a stream
reads a generic data object from a stream
changes the context of the current context
sets the paint
update all drawn objects
sets the stroke for this node
set the depth of the navigation
read the color data
clears the selection
check if the user can access this item
returns the access level of the menu item
close the connection
send an im to the server
sets the user id
description of the method
sets the session id
remove the first element of the queue
sets the selection queue
return the key that was previously drawn
returns the edit
sets the edit
returns the current user name
return the message for the exception
redirect output to the output
adds an action to this menu
returns the action at the specified index
inserts an action into the menu at the specified index
returns the main application
invoked when an item has been selected or deselected by the user
removes all actions from this composite action
called when the user clicks the exit button
activates this frame and makes it the active frame in the editor
test for commit
test method for
tests the delete group method
test registry delete
returns the type of the specified property
tests to string
tests the export of a group
test registry property exception string
test registry property exception string
test method for
test method for
test method for
test office help method of class org
test for method get boolean group2
test the styled editor
test of get content type method of class texteditor
test of get input attributes method of class texteditor
test of get text component method of class texteditor
test of is changed method of class texteditor
test of is formatted method of class texteditor
test of is new method of class texteditor
test read method of class file reader
test of set changed method of class texteditor
test of write method of class texteditor
test method for
test writing a string
test of set selection method of class te document
get the content type
test get current paragraph method
test get current run method
test get file extensions method
get input attributes
test get text component
test method for
test method for
test insert method
test is changed method
test method for
test is formatted method
test for int get char array
method test is new
test read and write
test editor action manager
test method for
test method for
test set current paragraph method
test get current run and set current run
test the creation of actions
test write method
tests the create default font face actions method
test menu add item at
test method for
test of remove all items method of class com
test of set caret color method of class teambob
tests that the editor action is activated when the active editor is
test method for
tests the registry get file method
test method for
test method for
test method for
test method for
test the creation of action combo boxes
test method for
test method for
test of add item action method of class com
tests if jwp registry format exception is thrown correctly
test method for
test switched document frame
test for method get item at int
test of action performed method of class com
tests the adding of a file history record to a file
test method for
test method for
test method for
regression test for harmony 2653
test that the add item action works
test method for
test method for
tests get document number
regression test for harmony 2653
test add item
regression test for harmony 2653
test method for
test method for
test for method get groups
test method for
test method for
tests the constructor of colour property sheet
test method for
test get properties
test method for
test getting the registry
test method for
test get status label
test method for
test of main method of class com
test method for
regression test for harmony 2588
test method for
test method for
test method for
test for int get integer array
test method for
test method for
test method for
test method for
test method for
test get keys registry
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test method for
test get object array
test method for
test method for
test method for
tests the get object registry method
test method for
test method for
test get short group2
test method for
test for method get save copy action
test method for
tests get string group2
test method for
test method for
test for string get string array
test method for
test method for
test method for
test method for
test method for
tests the import group registry set
tests the init group registry delete all
test method for
tests that the registry is altered
test method for
tests if is group registry delete all
tests that is property group is deleted all
test of merge registry method of class registry impl
test for method
tests replacing a group
tests revert and revert
tests the set file method
test method for
test for void registry impl int array
test registry impl
test for void registry impl file int array
returns the current value of the throttle
sets the throttle
gets the script path
returns the maximum lag to force a player to use
sets the maximum lag to lag
gets the assertion mode
sets the default assertion mode for the system
query the server for new messages
retrieves the lag to use for the current database
return the version of this magic safe
returns a random name
fetches a random query from the system and returns it as a
checks if the page exists
returns the rendered text of the title in wikitext format wikitext
gets an image
checks if a user exists in the database
returns the user with the given username
this will invoke the user rights on the server
returns the username
returns true if the user is blocked
decode html string
parses the input string and cleans up the
checks every 30 seconds in the current database to see if it is
sets the cookies
grab the cookies from the request header field
log a message
logs url to the logger
converts a timestamp to a calendar
handles object serialization
gets the users first name
returns the attribute type uri
sets the policy url
put user data
generates the oauth request token
get a token that represents the access token for this realm
passes the access token to the server
retrieves this token
get the user id
retrieves this buddys server
get a new user
get a person data
get the friends for a particular user
get friends info
set a new access token
generate the url for the request
generates a url for the request
gets the user app data
get the user specific app data for a given user
load the data for the global application
performs a http request for the given url
clears the data of an array of global app data
stores application data
get the app data for a user
get the app data for a user
clear app data
get the users facebook app data data
get the users facebook data
get the user data for a given user id
get comments by user id
get the indicators for a user
get the users preferences
get all albums for a specific user
get a list of albums for a specific user
retrieves the album data for a given user id
returns the album photo data for a given album id
get the users albums information
returns the users friends each with a single 1
returns the friends list for a given user
get the friends list
get friendship data for a user
retrieves the users mood
get the users moods
get a list of users photos
get the photo data for a given user id
returns the full profile of a user
get the profile for a particular user
get the users status
get status history for user
post the status of a user
post the mood for the user
send a set mood request to the server
set the status of a user
set status of a user
get the friends status for a user
get the users videos
retrieves the user video data for a given video id
gets the activities atom for the input user and integer
get the activity atom for a given user and culture
gets the friends activities atom attribute of the structure generator server object
get friends activities atom
parses a node for ignoring case
parses annots node
sets the if modified since header
sets the if none match header
sets the if unmodified since header
get and save the charset
parses a list node
this method generates byte code for
test of get clazz publisher method of class wikipedia
test method for
this method is being tested by test bind params
test method for
test method for
test method for
get last sql test case
create with arguments
test method for org
test of read list method of class org
test of create method of class sql
test of del method of class conexion db
test of last insert id method of class zdomy sql
test of read method of class sql
test of update method of class sql
test of del method of class sql
test of set quoter method of class sqlhelper
test of remove quoter method of class sqlhelper
test of join fields method of class sqlhelper
test of time format method of class com
test of time format date method of class eu
test of to string method of class jjil
test of to integer method of class org
test of to int string method of class jjil
test of to long method of class jjil
test of to short method of class org
test of to byte method of class org
