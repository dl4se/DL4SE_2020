
************
tgt: public void method_1 ( ) { for ( int i = ( ( var_1 . length ) * int_1 ) - 1 ; i >= 0 ; i -- ) { int var_2 = i / int_1 ; int var_3 = i % int_1 ; byte var_4 = var_1 [ var_2 ] ; int var_5 = ( var_4 > > ( int_1 - ( var_3 + 1 ) ) ) & 1 ; if ( var_5 == 1 ) { var_6 = i ; break ; } } }
[0]: public void method_1 ( ) { for ( int i = ( ( var_1. length ) - 1 ) * int_1 ; i > 0 ; i -- ) { int var_2 = i / int_1 ; int var_3 = i % int_1 ; byte var_4 = var_1 [ var_2 ] ; int var_5 = ( var_4 > > ( int_1 - ( var_3 + 1 ) ) ) & 1 ; if ( var_5 == 1 ) { var_6 = i ; break ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; switch ( type_2 . method_2 ( ) ) { case 1 : { method_3 ( var_1 ) ; break ; } case int_1 : { method_4 ( var_1 ) ; break ; } case int_2 : { method_5 ( var_1 ) ; break ; } default : { method_6 ( var_1 ) ; break ; } } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = type_2. method_2 ( ) ; switch ( var_2 ) { case 1 : { method_3 ( var_1 ) ; break ; } case int_1 : { method_4 ( var_1 ) ; break ; } case int_2 : { method_5 ( var_1 ) ; break ; } default : { method_6 ( var_1 ) ; break ; } } }

************

************
tgt: private java.lang.string method_1 ( ) { int var_1 = java.lang.integer.parseint ( method_2 ( ) . method_3 ( string_1 ) ) ; java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( int i = 1 ; i < var_1 ; i ++ ) { var_2 . append ( i ) ; var_2 . append ( string_2 ) ; var_2 . append ( method_2 ( ) . method_3 ( ( string_3 + i ) ) ) ; var_2 . append ( "\n" ) ; } return var_2 . tostring ( ) ; }
[0]: private java.lang.string method_1 ( ) { int var_1 = java.lang.integer.parseint ( method_2 ( ). method_3 ( string_1 ) ) ; java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( int i = 1 ; i < var_1 ; i ++ ) { var_2. append ( ( ( i + string_2 ) + ( method_2 ( ). method_3 ( ( string_3 + i ) ) ) ) ) ; } return var_2. tostring ( ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) throws type_2 { type_1 var_2 ; try { var_2 = var_3 . method_2 ( var_1 ) ; } catch ( type_3 var_4 ) { type_4 . method_3 ( var_5 , ( string_1 + var_1 ) , var_4 ) ; throw new type_2 ( ( string_1 + var_1 ) , var_4 ) ; } return var_2 ; }
[0]: public type_1 method_1 ( type_1 var_1 ) throws type_2 { type_1 var_2 = null ; try { var_2 = var_3. method_2 ( var_1 ) ; } catch ( type_3 var_4 ) { type_4. method_3 ( var_5, ( string_1 + var_1 ), var_4 ) ; throw new type_2 ( ( string_1 + var_1 ), var_4 ) ; } return var_2 ; }

************

************
tgt: protected int method_1 ( int var_1 ) { var_3 = var_1 ; var_4 = string_2 ; if ( ( ( var_3 ) < 1 ) || ( ( var_3 ) > int_1 ) ) { var_3 = ( var_5 . method_3 ( int_1 ) ) + 1 ; } method_4 ( ) ; method_5 ( method_6 ( var_3 ) ) ; method_7 ( method_8 ( var_3 ) ) ; method_9 ( ) ; return var_3 ; }
[0]: protected int method_1 ( int var_1 ) { var_2. method_2 ( string_1 ) ; var_3 = var_1 ; var_4 = string_2 ; if ( ( ( var_3 ) < 1 ) || ( ( var_3 ) > int_1 ) ) { var_3 = ( var_5. method_3 ( int_1 ) ) + 1 ; } method_4 ( ) ; method_5 ( method_6 ( var_3 ) ) ; method_7 ( method_8 ( var_3 ) ) ; method_9 ( ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) { try { type_1 var_1 = method_2 ( ) ; var_1 . method_3 ( this ) ; var_2 . method_4 ( var_1 . method_6 ( ) , var_1 . method_7 ( ) ) ; } catch ( java.lang.throwable var_3 ) { type_2 . method_8 ( var_4 , string_1 , var_3 ) ; } }
[0]: public void method_1 ( ) { try { type_1 var_1 = method_2 ( ) ; var_1. method_3 ( this ) ; var_2. method_4 ( method_5 ( ). method_6 ( ), var_1. method_7 ( ) ) ; } catch ( java.lang.throwable var_3 ) { type_2. method_8 ( var_4, string_1, var_3 ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return string_2 ; } java.lang.string var_2 = string_2 ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { var_2 += ( var_1 . method_3 ( i ) ) + 1 ; } return var_2 ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { throw method_2 ( string_1 ) ; } java.lang.string var_2 = string_2 ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { var_2 += ( var_1. method_3 ( i ) ) + 1 ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.throwable { type_1 var_1 = type_2 . method_2 ( ) ; try { type_3 < type_4 , type_5 > var_2 = method_3 ( var_1 ) ; var_2 . method_4 ( var_4 ) ; type_6 . assertthat ( var_2 . method_5 ( ) , type_7 . not ( type_7 . method_6 ( ) ) ) ; } finally { var_1 . method_7 ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.throwable { type_1 var_1 = type_2. method_2 ( ) ; try { type_3 < type_4, type_5 > var_2 = var_1. method_3 ( var_3 class, 1, string_1 ) ; var_2. method_4 ( var_4 ) ; type_6. assertthat ( var_2. method_5 ( ), not ( method_6 ( ) ) ) ; } finally { var_1. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_1 var_2 , type_2 item ) { var_3 . method_1 ( var_2 . method_2 ( ) , type_3 . method_3 ( item ) . method_4 ( ) ) ; for ( type_4 var_4 : new java.util.arraylist ( var_3 . method_5 ( ) ) ) { var_4 . method_6 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_1 var_2, type_2 item ) { var_3. method_1 ( var_2. method_2 ( ), type_3. method_3 ( item ). method_4 ( ) ) ; for ( type_4 var_4 : var_3. method_5 ( ) ) { var_4. method_6 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string url = string_1 ; type_1 var_1 = type_2 . method_2 ( this . getclass ( ) . method_3 ( ) , url , null , null , null , null , null , false , false , null , null , null , null , null , null , null ) ; type_3 . assertnotnull ( var_1 ) ; type_4 var_2 = type_5 . method_4 ( ) . method_5 ( var_3 , var_1 , new type_6 ( var_1 ) ) ; type_7 . method_6 ( var_2 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string url = string_1 ; type_1 var_1 = type_2. method_2 ( this. getclass ( ). method_3 ( ), url, null, null, null, null, null, false, false, null, null, null, null, null, null, null, null, null, null, null, null ) ; type_3. assertnotnull ( var_1 ) ; type_4 var_2 = type_5. method_4 ( ). method_5 ( var_3, var_1, new type_6 ( var_1 ) ) ; type_7. method_6 ( var_2 ) ; }

************

************
tgt: public static void method_1 ( java.lang.charsequence var_1 , type_1 var_2 , int start , int end ) { if ( var_1 instanceof type_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 ) ) ; var_3 . method_3 ( type_4 . method_4 ( var_2 ) , start , end , var_4 ) ; } }
[0]: public static java.lang.charsequence method_1 ( java.lang.charsequence var_1, type_1 var_2, int start, int end ) { type_2 var_3 ; if ( var_1 instanceof type_2 ) { var_3 = ( ( type_2 ) ( var_1 ) ) ; } else { var_3 = type_3. method_2 ( var_1 ) ; } var_3. method_3 ( type_4. method_4 ( var_2 ), start, end, var_4 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( var_1 . method_2 ( var_2 ) ) { var_3 = var_1 . method_3 ( var_2 ) ; type_2 var_4 = ( ( type_2 ) ( method_4 ( var_5 ) ) ) ; var_4 . method_5 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( var_2 ) ) { var_3 = var_1. method_3 ( var_2 ) ; type_2 var_4 = ( ( type_2 ) ( method_4 ( var_5 ) ) ) ; var_4. method_5 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( final type_1 var_1 , type_2 response ) { var_2 = var_1 ; method_2 ( var_1 ) ; java.util.list < type_3 > var_3 = new java.util.arraylist < type_3 > ( ) ; for ( type_4 var_4 : var_5 ) { var_3 . add ( var_6 ) ; } method_3 ( var_3 ) ; if ( ( var_7 . size ( ) ) > 0 ) { java.lang.string var_8 = var_7 . get ( 0 ) . url ; method_5 ( var_8 ) ; } }
[0]: public void method_1 ( final type_1 var_1, type_2 response ) { var_2 = var_1 ; method_2 ( var_1 ) ; java.util.list < type_3 > var_3 = new java.util.arraylist < type_3 > ( ) ; for ( type_4 var_4 : var_5 ) { var_3. add ( var_6 ) ; } method_3 ( var_3 ) ; if ( ( var_7. size ( ) ) > 0 ) { java.lang.string var_8 = var_7. get ( 0 ). url ; method_4 ( var_8 ) ; method_5 ( var_8 ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( long var_1 ) throws type_2 { method_3 ( ) ; type_3 var_2 = method_2 ( var_1 ) ; java.lang.string var_3 = string_1 + ( var_2 . getid ( ) ) ; type_4 query = var_4 . method_5 ( var_3 ) ; java.util.list < type_1 > result = query . list ( ) ; method_6 ( ) ; return result ; }
[0]: public java.util.list < type_1 > method_1 ( long var_1 ) throws type_2 { type_3 var_2 = method_2 ( var_1 ) ; method_3 ( ) ; java.lang.string var_3 = string_1 + ( var_2. method_4 ( ) ) ; type_4 query = var_4. method_5 ( var_3 ) ; java.util.list < type_1 > result = query. list ( ) ; method_6 ( ) ; return result ; }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , java.lang.string var_2 ) throws type_3 { try { return method_2 ( var_1 , var_2 ) ; } catch ( type_4 var_3 ) { type_5 var_4 = var_5 ; java.lang.string msg = var_3 . method_3 ( ) . method_4 ( ) ; throw new type_3 ( var_4 , msg , var_3 ) ; } }
[0]: protected type_1 method_1 ( type_2 var_1, java.lang.string var_2 ) throws type_3 { try { return method_2 ( var_1, var_2 ) ; } catch ( type_4 var_3 ) { type_5 var_4 = var_5 ; java.lang.string msg = var_3. method_3 ( ). method_4 ( ) ; throw new type_3 ( var_4, msg, null, var_3, null ) ; } }

************

************
tgt: public byte [ ] method_1 ( int id , int var_1 ) throws type_1 { final type_2 var_2 = type_3 . method_2 ( var_1 , id ) ; if ( ( var_2 == null ) || ( ( var_2 . method_3 ( ) ) == 0 ) ) { throw new type_1 ( ( ( ( string_1 + var_1 ) + string_2 ) + id ) ) ; } try { return var_2 . method_4 ( ) . method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_1 ( var_3 ) ; } }
[0]: public byte [ ] method_1 ( int id, int var_1 ) throws type_1 { final type_2 var_2 = type_3. method_2 ( var_1, id ) ; if ( ( var_2 == null ) || ( ( var_2. method_3 ( ) ) > 0 ) ) { throw new type_1 ( ( ( ( string_1 + var_1 ) + string_2 ) + id ) ) ; } try { return var_2. method_4 ( ). method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_1 ( var_3 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( this ) ; var_2 . method_2 ( var_1 ) ; var_3 . method_2 ( var_1 ) ; var_4 . method_2 ( var_1 ) ; var_5 . method_2 ( var_1 ) ; var_6 . method_2 ( var_1 ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( this ) ; var_2. method_2 ( var_1 ) ; var_3. method_2 ( var_1 ) ; var_4. method_2 ( var_1 ) ; var_5. method_2 ( var_1 ) ; var_6. method_2 ( var_1 ) ; var_7. method_3 ( ). method_4 ( var_1 ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.lang.integer var_2 , java.lang.string var_3 ) { type_1 var_4 = null ; try { var_5 . method_2 ( string_1 , var_2 ) ; if ( var_2 != null ) { var_4 = var_1 . method_3 ( var_2 . tostring ( ) , var_3 ) ; var_5 . method_2 ( string_2 , var_4 . tostring ( ) ) ; } } catch ( java.lang.exception var_6 ) { var_5 . error ( string_3 , var_2 ) ; } return var_4 ; }
[0]: private type_1 method_1 ( type_2 var_1, java.lang.integer var_2, java.lang.string var_3 ) { type_1 var_4 = null ; try { var_5. method_2 ( string_1, var_2 ) ; if ( var_2!= null ) { var_4 = var_1. method_3 ( var_2. tostring ( ) ) ; var_5. method_2 ( string_2, var_4. tostring ( ) ) ; } } catch ( java.lang.exception var_6 ) { var_5. error ( string_3, var_2, var_6 ) ; } return var_4 ; } }

************

************
tgt: public void method_1 ( ) { if ( ( this . var_2 ) != null ) try { var_1 . info ( string_1 ) ; this . var_2 . method_2 ( ) ; var_1 . info ( string_2 ) ; } catch ( final java.io.ioexception var_3 ) { var_1 . error ( var_3 . method_3 ( ) ) ; var_1 . error ( string_3 ) ; } }
[0]: public void method_1 ( ) { try { var_1. info ( string_1 ) ; this. var_2. method_2 ( ) ; var_1. info ( string_2 ) ; } catch ( java.io.ioexception var_3 ) { var_1. error ( var_3. method_3 ( ) ) ; var_1. error ( string_3 ) ; } }

************

************
tgt: private type_1 method_1 ( java.util.list < java.lang.string > var_1 ) { if ( var_1 . isempty ( ) ) { throw new type_2 ( string_1 ) ; } type_1 var_2 = null ; for ( java.lang.string var_3 : var_1 ) { if ( var_2 == null ) { var_2 = new type_3 ( var_3 ) ; } else { final type_1 var_4 = new type_3 ( var_3 ) ; var_2 = var_2 . method_2 ( var_4 ) ; } } return var_2 ; }
[0]: private type_1 method_1 ( java.util.list < java.lang.string > var_1 ) { if ( var_1. isempty ( ) ) { throw new type_2 ( ( string_1 + var_1 ) ) ; } type_1 var_2 = null ; for ( java.lang.string var_3 : var_1 ) { if ( var_2 == null ) { var_2 = new type_3 ( var_3 ) ; } else { final type_1 var_4 = new type_3 ( var_3 ) ; var_2 = var_2. method_2 ( var_4 ) ; } } return var_2 ; }

************

************
tgt: public java.lang.object method_1 ( java.io.inputstream var_1 ) { java.lang.object result = null ; try { type_1 var_2 = new type_1 ( var_1 ) ; var_2 . method_2 ( ) ; result = var_2 . method_3 ( ) ; var_2 . method_4 ( ) ; var_2 . method_5 ( ) ; var_1 . method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_6 ( ) ; } return result ; }
[0]: public java.lang.object method_1 ( java.io.inputstream var_1 ) { java.lang.object result = null ; try { type_1 var_2 = new type_1 ( var_1 ) ; var_2. method_2 ( ) ; result = var_2. method_3 ( ) ; var_2. method_4 ( ) ; var_2. method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_6 ( ) ; } return result ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; java.util.list < type_3 > var_3 = var_4 . method_3 ( ) ; method_4 ( this . var_3 . method_5 ( ) ) . method_6 ( var_3 ) ; var_5 . list ( var_1 ) ; method_7 ( var_1 ) . method_8 ( string_1 , var_3 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( var_2 class ) ; java.util.list < type_3 > var_3 = var_4. method_3 ( ) ; type_2. method_4 ( this. var_3. method_5 ( ) ). method_6 ( var_3 ) ; var_5. list ( var_1 ) ; type_2. method_7 ( var_1 ). method_8 ( string_1, var_3 ) ; }

************

************
tgt: public void add ( type_1 var_1 ) throws type_2 { assert var_1 != null ; if ( ( contains ( var_1 ) ) && ( ! ( var_1 . method_1 ( ) . contains ( var_2 ) ) ) ) { throw new type_2 ( ) ; } var_3 . add ( var_1 ) ; }
[0]: public void add ( type_1 var_1 ) throws type_2 { assert var_1!= null ; if ( contains ( var_1 ) ) { if (! ( var_1. method_1 ( ). contains ( var_2 ) ) ) { throw new type_2 ( ) ; } } var_3. add ( var_1 ) ; var_3. add ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_2 ( var_3 ) ; var_1 . method_3 ( var_4 ) ; var_1 . method_4 ( type_2 . method_5 ( var_5 , info . offset , info . size ) ) ; if ( ( var_7 ) != null ) { var_1 . method_4 ( var_6 ) ; var_1 . method_4 ( var_7 . key ) ; var_1 . method_3 ( var_8 ) ; var_1 . method_6 ( var_9 ) ; var_1 . method_6 ( var_10 ) ; var_1 . method_3 ( var_11 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_1. method_2 ( var_3 ) ; var_1. method_3 ( var_4 ) ; var_1. method_4 ( type_2. method_5 ( var_5, info. offset, info. size ) ) ; var_1. method_4 ( var_6 ) ; var_1. method_4 ( var_7. key ) ; var_1. method_3 ( var_8 ) ; var_1. method_6 ( var_9 ) ; var_1. method_6 ( var_10 ) ; var_1. method_3 ( var_11 ) ; }

************

************
tgt: java.util.list < type_1 > method_1 ( java.lang.string name , java.lang.string var_1 ) { var_2 . info ( string_1 , name , var_1 ) ; type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( name ) ; var_3 . method_3 ( var_1 ) ; var_4 . method_4 ( var_3 , var_5 , var_6 ) ; return var_7 . method_5 ( var_8 ) ; }
[0]: java.util.list < type_1 > method_1 ( java.lang.string name, java.lang.string var_1 ) { var_2. info ( string_1, name, var_1 ) ; type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( name ) ; var_3. method_3 ( var_1 ) ; var_4. method_4 ( var_3, var_5, var_6 ) ; return var_7. method_5 ( ( ( var_8 ) + ( type_2. method_6 ( ( ( name + string_2 ) + var_1 ) ) ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string response ) { super . method_1 ( response ) ; if ( ! ( type_1 . isempty ( response ) ) ) { if ( response . startswith ( string_1 ) ) { var_1 = type_2 . method_2 ( response ) ; if ( null != ( var_2 ) ) { method_3 ( var_2 ) ; } else { type_3 . method_4 ( var_3 , string_2 ) ; method_5 ( ) ; } } } }
[0]: public void method_1 ( java.lang.string response ) { super. method_1 ( response ) ; if (! ( type_1. isempty ( response ) ) ) { if ( response. startswith ( string_1 ) ) { var_1 = type_2. method_2 ( response ) ; if ( ( var_2. size ( ) ) > 0 ) { method_3 ( var_2 ) ; } else { type_3. method_4 ( var_3, string_2 ) ; method_5 ( ) ; } } } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string state = new java.lang.string ( ) ; if ( ( method_1 ( ) ) == true ) state = string_1 ; else state = string_2 ; return ( ( ( ( ( ( ( title ) + string_3 ) + ( var_1 ) ) + string_3 ) + state ) + string_3 ) + ( var_2 . format ( var_3 ) ) ) + "\n" ; }
[0]: public java.lang.string tostring ( ) { java.lang.string state = new java.lang.string ( ) ; if ( ( method_1 ( ) ) == true ) state = string_1 ; else state = string_2 ; return ( ( ( ( ( ( title ) + string_3 ) + ( var_1 ) ) + string_3 ) + state ) + string_3 ) + ( var_2. format ( var_3 ) ) ; }

************

************
tgt: private static < type_1 > void method_1 ( java.util.list < type_1 > var_1 , type_1 var_2 , int var_3 ) { while ( ( var_1 . size ( ) ) <= var_3 ) { var_1 . add ( null ) ; } if ( var_3 >= 0 ) { var_1 . set ( var_3 , var_2 ) ; } }
[0]: private static < type_1 > void method_1 ( java.util.list < type_1 > var_1, type_1 var_2, int var_3 ) { while ( ( var_1. size ( ) ) <= var_3 ) { var_1. add ( null ) ; } if ( var_3 > 0 ) { var_1. set ( var_3, var_2 ) ; } }

************

************
tgt: protected void method_1 ( ) { if ( ( type_1 . method_2 ( ) ) >= ( method_3 ( ) ) ) { type_1 . method_4 ( ( - ( method_3 ( ) ) ) ) ; type_2 var_1 = ( ( type_2 ) ( type_3 . method_5 ( ) . method_6 ( ) . get ( 1 ) ) ) ; type_3 . method_5 ( ) . method_7 ( 1 , new type_2 ( var_1 . method_8 ( ) , var_2 , var_1 . method_9 ( ) , var_3 , false ) ) ; } }
[0]: protected void method_1 ( ) { if ( ( type_1. method_2 ( ) ) >= ( method_3 ( ) ) ) { type_1. method_4 ( ( - ( method_3 ( ) ) ) ) ; type_2 var_1 = ( ( type_2 ) ( type_3. method_5 ( ). method_6 ( ). get ( 1 ) ) ) ; type_3. method_5 ( ). method_7 ( 1, new type_2 ( var_1. method_8 ( ), var_1. method_9 ( ), var_2, var_3, false, false ) ) ; } }

************

************
tgt: public static type_1 get ( type_2 var_1 ) { if ( ! ( var_2 . method_1 ( var_1 . getid ( ) ) ) ) { type_1 var_3 = new type_1 ( var_1 ) ; var_2 . put ( var_1 . getid ( ) , var_3 ) ; } return var_2 . get ( var_1 . getid ( ) ) ; }
[0]: private static type_1 init ( type_2 var_1 ) { if (! ( var_2. method_1 ( var_1. getid ( ) ) ) ) { type_1 var_3 = new type_1 ( var_1 ) ; return var_2. put ( var_1. getid ( ), var_3 ) ; } else { return var_2. get ( var_1. getid ( ) ) ; } }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 , int var_2 , int value , int var_3 ) { java.lang.string var_4 = type_1 . method_2 ( var_2 , var_1 ) ; int count = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { if ( ( java.lang.integer.parseint ( var_4 . substring ( i , ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count >= var_3 ; }
[0]: public static boolean method_1 ( java.lang.string var_1, int var_2, int value, int var_3 ) { java.lang.string var_4 = type_1. method_2 ( var_2, var_1 ) ; int count = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { if ( ( java.lang.integer.parseint ( var_4. substring ( i, ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count == value ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { super . method_1 ( var_1 , var_6 , var_3 ) ; android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; var_6 = ( ( type_4 ) ( var_4 . method_3 ( var_7 ) ) ) ; var_6 . method_4 ( var_3 ) ; var_8 = var_6 . method_5 ( ) ; var_8 . method_6 ( ) . method_7 ( false ) ; var_8 . method_8 ( true ) ; return var_4 ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; var_6 = ( ( type_4 ) ( var_4. method_3 ( var_7 ) ) ) ; var_6. method_4 ( var_3 ) ; var_8 = var_6. method_5 ( ) ; var_8. method_6 ( ). method_7 ( false ) ; var_8. method_8 ( true ) ; return var_4 ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 . method_3 ( type_2 . method_4 ( ) ) ) . method_5 ( var_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3 . method_6 ( string_1 ) ; var_4 . method_7 ( var_3 ) ; type_1 . method_9 ( var_6 , type_1 . method_10 ( 1 ) ) . method_7 ( type_2 . method_4 ( ) , type_2 . method_4 ( ) ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1. method_3 ( type_2. method_4 ( ) ) ). method_5 ( var_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3. method_6 ( string_1 ) ; var_4. method_7 ( var_3, var_5 < java.lang.string > method_8 ( ) ) ; type_1. method_9 ( var_6, type_1. method_10 ( 1 ) ). method_7 ( type_2. method_4 ( ), type_2. method_4 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { int [ ] rows = new int [ var_2 . method_2 ( ) ] ; for ( int i = 0 ; i < ( rows . length ) ; i ++ ) { java.lang.integer j = ( ( java.lang.integer ) ( var_2 . method_3 ( var_2 . method_4 ( i ) , 0 ) ) ) ; rows [ i ] = j ; } type_2 var_3 = new type_2 ( var_4 . method_5 ( ) , rows , rows ) ; var_3 . method_6 ( true ) ; }
[0]: private void method_1 ( type_1 var_1 ) { int [ ] rows = new int [ var_2. method_2 ( ) ] ; for ( int i = 0 ; i < ( rows. length ) ; i ++ ) { rows [ i ] = ( ( java.lang.integer ) ( var_2. method_3 ( var_2. method_4 ( i ), 0 ) ) ) ; } type_2 var_3 = new type_2 ( rows, rows, rows ) ; var_3. method_6 ( true ) ; }

************

************
tgt: public type_1 < java.lang.void > method_1 ( type_2 var_1 , type_3 var_2 ) { if ( var_3 . method_2 ( var_1 ) ) { return new type_1 < java.lang.void > ( var_4 ) ; } var_3 . method_3 ( var_1 ) ; type_4 var_5 = new type_4 ( ) ; var_5 . method_4 ( var_2 . path ( string_2 ) . method_5 ( var_1 . getid ( ) ) . method_6 ( ) ) ; return new type_1 < java.lang.void > ( var_5 , var_6 ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; append ( var_2, var_1, true ) ; var_2. append ( string_1 ) ; if ( ( var_1. method_2 ( ) )!= null ) { for ( type_2 var_3 : var_1. method_2 ( ) ) { append ( var_2, var_3, string_2 ) ; } } var_2. append ( string_1 ) ; return var_2. tostring ( ) ; } return null ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; append ( var_2 , var_1 , false ) ; var_2 . append ( string_1 ) ; if ( ( var_1 . method_2 ( ) ) != null ) { for ( type_2 var_3 : var_1 . method_2 ( ) ) { append ( var_2 , var_3 , string_2 ) ; } } var_2 . append ( string_1 ) ; return var_2 . tostring ( ) ; }
[0]: private void method_1 ( ) { method_2 ( new type_1 ( ) { public void method_3 ( android.view.view view ) { type_2. method_4 ( getactivity ( ), string_1, var_1 ). show ( ) ; } } ) ; method_5 ( new type_3 ( ) ) ; method_6 ( new type_4 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( new type_1 ( ) { public void method_3 ( android.view.view view ) { type_2 . method_4 ( getactivity ( ) , string_1 , var_1 ) . show ( ) ; } } ) ; method_5 ( new type_3 ( ) ) ; method_6 ( new type_4 ( ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { if (! ( var_1. method_2 ( ) ) ) { var_2. settext ( string_1 ) ; } else { type_3 var_3 = new type_3 ( name, var_4, var_1. method_3 ( ). method_4 ( ). method_5 ( ) ) ; type_4 var_5 = new type_4 ( name, var_4, var_1. method_3 ( ). method_4 ( ). method_5 ( ) ) ; method_6 ( var_3, var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { if ( ! ( var_1 . method_2 ( ) ) ) { var_2 . settext ( string_1 ) ; } else { type_3 var_3 = new type_3 ( name , var_4 , var_1 . method_3 ( ) . method_4 ( ) . method_5 ( ) ) ; type_4 var_5 = new type_4 ( string_2 , "0" , "0" , "0" , string_2 ) ; method_6 ( var_3 , var_5 ) ; } }
[0]: private int method_1 ( type_1 var_1 ) { int c = 0 ; for ( java.lang.class <? > t : var_1. method_2 ( ) ) { if ( ( ( ( ( t!= ( var_2 class ) ) && ( t!= ( var_3 class ) ) ) && ( t!= ( var_4 class ) ) ) && ( t!= ( var_5 class ) ) ) && ( t!= ( var_6 class ) ) ) c ++ ; } return c ; }

************

************
tgt: private int method_1 ( type_1 var_1 ) { int c = 0 ; for ( java.lang.class < ? > t : var_1 . method_2 ( ) ) { if ( ( ( ( t != ( var_2 class ) ) && ( t != ( var_3 class ) ) ) && ( t != ( var_4 class ) ) ) && ( t != ( var_6 class ) ) ) c ++ ; } return c ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { var_1. method_2 ( 1 ) ; var_1. method_3 ( type_2. method_4 ( string_1 ). method_5 ( string_2, string_3 ) ) ; type_3 var_2 = method_6 ( var_3 ) ; method_7 ( ). method_8 ( string_4, var_2 ) ; var_1. method_9 ( type_4. method_10 ( int_1 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { context . start ( ) ; var_1 . method_2 ( 1 ) ; var_1 . method_3 ( type_2 . method_4 ( string_1 ) . method_5 ( string_2 , string_3 ) ) ; type_3 var_2 = method_6 ( var_3 ) ; method_7 ( ) . method_8 ( string_4 , var_2 ) ; var_1 . method_9 ( type_4 . method_10 ( int_1 ) ) ; }
[0]: public static boolean method_1 ( type_1 var_1 ) { if (! ( var_2. method_2 ( var_1 ) ) ) return false ; type_2 var_3 = var_2. get ( var_1 ) ; if (! ( var_4. method_1 ( var_5. method_3 ( ) ) ) ) return false ; var_2. remove ( var_1 ) ; return true ; }

************

************
tgt: public static boolean method_1 ( type_1 var_1 ) { if ( ! ( var_2 . method_2 ( var_1 ) ) ) return false ; type_2 var_3 = var_2 . get ( var_1 ) ; if ( ! ( var_4 . method_1 ( var_5 . method_3 ( ) ) ) ) return false ; return true ; }
[0]: public void execute ( ) { int index ; index = ( type_1. method_1 ( var_1, type_2. method_2 ( ). method_3 ( ) ) ) + 1 ; if ( index > ( ( var_1. length ) - 1 ) ) index = ( var_1. length ) - 1 ; type_2. method_2 ( ). method_4 ( var_2 [ index ] ) ; var_3 = true ; var_3 = false ; }

************

************
tgt: protected void execute ( ) { int index ; index = ( type_1 . method_1 ( var_1 , type_2 . method_2 ( ) . method_3 ( ) ) ) + 1 ; if ( index > ( ( var_1 . length ) - 1 ) ) index = ( var_1 . length ) - 1 ; type_2 . method_2 ( ) . method_4 ( var_2 [ ( index ++ ) ] ) ; var_3 = true ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( method_2 ( ) ) { var_1 = null ; if ( ( var_2 )!= null ) var_2. method_3 ( false ) ; if ( ( var_3 )!= null ) var_3. method_3 ( false ) ; type_1. method_4 ( this ). method_5 ( var_4 ) ; if ( ( var_6 )!= null ) var_6. method_7 ( ) ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( method_2 ( ) ) { var_1 = null ; if ( ( var_2 ) != null ) var_2 . method_3 ( false ) ; if ( ( var_3 ) != null ) var_3 . method_3 ( false ) ; type_1 . method_4 ( this ) . method_5 ( var_4 ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( ) ; type_3 var_4 = method_3 ( ). method_4 ( ) ; var_4. replace ( var_5, var_3 ) ; var_4. method_5 ( var_6 ) ; var_4. commit ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( var_1 == null ) { type_2 var_3 = new type_2 ( ) ; type_3 var_4 = method_3 ( ) . method_4 ( ) ; var_4 . add ( var_5 , var_3 ) ; var_4 . method_5 ( var_6 ) ; var_4 . commit ( ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = type_1. method_2 ( method_3 ( ) ) ; var_2 = var_1. method_4 ( ) ; java.util.list < type_2 > var_3 = type_3. method_5 ( var_2 ) ; for ( int i = 0 ; i < 1 ; i ++ ) { type_2 var_4 = var_3. get ( i ) ; method_6 ( var_4 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( method_3 ( ) ) ; var_2 = var_1 . method_4 ( ) ; java.util.list < type_2 > var_3 = type_3 . method_5 ( var_2 ) ; for ( int i = 0 ; i < 1 ; i ++ ) { type_2 var_4 = var_3 . get ( i ) ; method_6 ( var_4 , context ) ; } }
[0]: public type_1 method_1 ( type_2 expr, type_3 var_1 ) { type_4 result = var_2. method_2 ( expr ) ; if ( ( result == null ) || (! ( method_3 ( result, expr ) ) ) ) { return null ; } return method_4 ( var_1, method_5 ( result ), expr ) ; }

************

************
tgt: public type_1 method_1 ( type_2 expr , type_3 var_1 ) { type_4 result = var_2 . method_2 ( expr ) ; if ( ( result == null ) || ( ! ( method_3 ( result , expr ) ) ) ) { return null ; } return method_4 ( var_1 , method_5 ( result , expr ) , expr ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { boolean a = false ; boolean b = false ; boolean c = false ; boolean c = ( ( ( a || b ) || c ) && ( ( (! a ) || b ) || c ) ) && ( ( (! a ) || b ) || c ) ; java.lang.system.out.println ( p ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { boolean a = false ; boolean b = false ; boolean c = true ; boolean p = ( ( ( a || b ) || c ) && ( ( ( ! a ) || b ) || c ) ) && ( ( ( ! a ) || ( ! b ) ) || c ) ; java.lang.system.out.println ( p ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { boolean var_1 = false ; java.lang.string result = null ; try { result = this. var_2. method_2 ( string_1 ) ; } catch ( java.lang.exception var_3 ) { var_1 = true ; } type_1. assertthat ( (! var_1 ) ) ; type_1. assertthat ( result. equals ( string_2 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { boolean var_1 = false ; java.lang.string result = null ; try { this . var_2 . method_2 ( string_1 ) ; } catch ( java.lang.exception var_3 ) { var_1 = true ; } type_1 . assertthat ( ( ! var_1 ) ) ; }
[0]: public static void method_1 ( java.lang.string title, int id ) { var_1. get ( id ). var_2 = true ; if ( title. equals ( string_1 ) ) return ; if ( var_1. method_2 ( id ) ) var_1. get ( id ). method_1 ( title ) ; }

************

************
tgt: static void method_1 ( java.lang.string title , int id ) { if ( var_1 . method_2 ( id ) ) var_1 . get ( id ) . var_2 = true ; if ( title . equals ( string_1 ) ) return ; if ( var_1 . method_2 ( id ) ) var_1 . get ( id ) . method_1 ( title ) ; }
[0]: public static java.lang.string method_1 ( java.io.file var_1 ) { if ( (! ( var_2 ) ) || (! ( var_3. method_2 ( var_1 ) ) ) ) var_3. put ( var_1, type_1. method_3 ( var_1 ) ) ; return var_3. get ( var_1 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.io.file var_1 ) { if ( var_2 ) { if ( ! ( var_3 . method_2 ( var_1 ) ) ) var_3 . put ( var_1 , type_1 . method_3 ( var_1 ) ) ; return var_3 . get ( var_1 ) ; } else { return type_1 . method_3 ( var_1 ) ; } }
[0]: public void method_1 ( ) { java.util.set < type_1 > var_1 = type_2. method_2 ( var_2. method_3 ( ) ) ; if ( var_1!= null ) { method_4 ( ) ; var_3. method_5 ( var_2. method_6 ( ) ) ; var_3. method_7 ( var_1 ) ; } }

************

************
tgt: public int method_1 ( ) { java.util.set < type_1 > var_1 = type_2 . method_2 ( var_2 . method_3 ( ) ) ; method_4 ( ) ; var_3 . method_5 ( var_2 . method_6 ( ) ) ; var_3 . method_7 ( var_1 ) ; return var_3 . size ( ) ; }
[0]: private void method_1 ( ) { android.content.intent var_1 = new android.content.intent ( string_1 ) ; var_1. method_2 ( string_2, string_3 ) ; var_1. method_2 ( string_4, false ) ; try { method_3 ( var_1, var_2 ) ; } catch ( type_1 error ) { method_4 ( var_3 ) ; } }

************

************
tgt: private void method_1 ( ) { android.content.intent var_1 = new android.content.intent ( string_1 ) ; var_1 . method_2 ( string_2 , string_3 ) ; var_1 . method_2 ( string_4 , false ) ; try { method_3 ( var_1 , var_2 ) ; } catch ( type_1 error ) { } }
[0]: private byte [ ] method_1 ( java.lang.string id ) { try { return method_2 ( id ) ; } catch ( java.lang.exception var_1 ) { if ( ( var_1. method_3 ( ) ) instanceof type_1 ) { throw var_1 ; } byte [ ] var_2 = method_4 ( id ) ; if ( var_2!= null ) { return var_2 ; } } throw new type_2 ( var_3 ) ; } }

************

************
tgt: private byte [ ] method_1 ( java.lang.string id ) { try { return method_2 ( id ) ; } catch ( java.lang.exception var_1 ) { if ( ( var_1 . method_3 ( ) ) instanceof type_1 ) { throw var_1 ; } byte [ ] var_2 = method_4 ( id ) ; if ( var_2 != null ) { return var_2 ; } throw new type_2 ( var_3 , var_1 ) ; } }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { var_2 = method_2 ( var_2 ) ; type_1 var_3 = null ; java.lang.string query = string_1 ; try { type_2 var_4 = var_5. method_3 ( query ) ; var_4. method_4 ( 1, var_1 ) ; var_4. method_4 ( int_1, var_2 ) ; var_3 = var_4. method_5 ( ) ; if ( var_3. method_6 ( ) ) { return true ; } } catch ( java.lang.exception var_6 ) { method_7 ( var_6, string_2 ) ; } return false ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { var_2 = method_2 ( var_2 ) ; java.lang.string query = string_1 ; try { type_2 var_4 = var_5 . method_3 ( query ) ; var_4 . method_4 ( 1 , var_1 ) ; var_4 . method_4 ( int_1 , var_2 ) ; type_1 var_3 = var_4 . method_5 ( ) ; if ( var_3 . method_6 ( ) ) { return true ; } } catch ( java.lang.exception var_6 ) { method_7 ( var_6 , string_2 ) ; } return false ; }
[0]: private void method_1 ( ) { boolean var_1 = true ; while ( var_1 ) { int x = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2 ) ) ) ; int y = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_3 ) ) ) ; if ( ( field [ x ] [ y ] ) == 0 ) { var_1 = false ; field [ x ] [ y ] = - int_1 ; } } }

************

************
tgt: private void method_1 ( ) { boolean var_1 = true ; while ( var_1 ) { int x = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2 ) ) ) ; int y = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_3 ) ) ) ; if ( ( field [ x ] [ y ] ) == 0 ) { var_1 = false ; field [ x ] [ y ] = int_1 ; } } }
[0]: public void method_1 ( type_1 var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3. length ) ; var_2 ++ ) { for ( int c = 0 ; c < ( var_3 [ var_2 ]. length ) ; c ++ ) { var_3 [ var_2 ] [ c ]. method_2 ( var_1 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3 . length ) ; var_2 ++ ) { for ( int c = 0 ; c < ( var_3 [ var_2 ] . length ) ; c ++ ) { if ( ( var_3 [ var_2 ] [ c ] ) != null ) var_3 [ var_2 ] [ c ] . method_2 ( var_1 ) ; } } }
[0]: private void method_1 ( type_1 var_1, java.lang.string var ) { if (! ( var_2. method_2 ( var_1 ) ) ) { method_3 ( var, method_4 ( ), method_5 ( method_6 ( ), string_1 ) ) ; { method_7 ( string_2 ) ; method_8 ( ) ; } method_9 ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var ) { if ( ! ( var_2 . method_2 ( var_1 ) ) ) { method_3 ( var , method_4 ( ) , method_5 ( method_6 ( ) , string_1 ) ) ; { method_8 ( ) ; } method_9 ( ) ; } }
[0]: public type_1 method_1 ( java.lang.integer var_1 ) throws type_2 { final java.lang.string var_2 = string_1 ; var_3. method_2 ( ( var_2 + string_2 ) ) ; var_3. method_2 ( ( ( var_2 + string_3 ) + var_1 ) ) ; type_1 var_4 = var_5. method_3 ( var_1 ) ; var_3. method_2 ( ( ( var_2 + string_4 ) + ( var_4 == null ) ) ) ; var_3. method_2 ( ( var_2 + string_5 ) ) ; return var_4 ; }

************

************
tgt: private < type_1 extends type_2 > type_1 method_1 ( java.lang.string var_1 , type_1 var_2 ) { int var_4 = method_2 ( var_1 , string_2 ) ; java.lang.string [ ] var_5 = method_3 ( var_1 , var_4 , string_3 , int_1 ) ; if ( var_5 != null ) { type_3 . method_4 ( var_2 , var_5 [ 1 ] , var_5 [ 0 ] , null ) ; } return method_5 ( var_1 , var_2 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 = method_2 ( var_1 ) ; if ( var_2!= null ) { var_2. method_1 ( ) ; } else { type_2 var_3 = method_3 ( var_1 ) ; if ( var_3!= null ) { return var_3. method_1 ( ) ; } } return true ; } }

************

************
tgt: public type_1 method_1 ( java.lang.integer var_1 ) throws type_2 { final java.lang.string var_2 = string_1 ; var_3 . method_2 ( ( var_2 + string_2 ) ) ; var_3 . method_2 ( ( ( var_2 + string_3 ) + var_1 ) ) ; type_1 var_4 = var_5 . method_3 ( var_1 ) ; var_3 . method_2 ( ( var_2 + string_5 ) ) ; return var_4 ; }
[0]: public type_1 method_1 ( ) { if ( ( ( var_1 )!= null ) && (! ( var_1. method_2 ( ) ) ) ) return null ; else { java.lang.string name = var_1. getname ( ) ; java.lang.string var_2 = var_1. method_3 ( ) ; int var_3 = var_1. method_4 ( ) ; type_2 var_4 = var_1. method_5 ( ) ; return new type_1 ( name, var_2, var_3, var_4 ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 = method_2 ( var_1 ) ; if ( var_2 != null ) { return var_2 . method_1 ( ) ; } else { type_2 var_3 = method_3 ( var_1 ) ; if ( var_3 != null ) { return var_3 . method_1 ( ) ; } else { return true ; } } }
[0]: public static void init ( ) { type_1. init ( ) ; type_2. init ( ) ; type_3. init ( ) ; type_4. init ( ) ; type_5. init ( ) ; type_6. init ( ) ; type_7. init ( ) ; type_8. init ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ! ( var_1 . method_2 ( ) ) ) ) return null ; else { java.lang.string name = var_1 . getname ( ) ; java.lang.string var_2 = var_1 . method_3 ( ) ; int var_3 = var_1 . method_4 ( ) ; type_2 var_4 = var_1 . method_5 ( ) ; return new type_1 ( name , var_2 , var_3 , var_4 ) ; } }
[0]: public void method_1 ( ) { this. target = null ; this. var_1 = null ; this. var_2 = 0 ; this. var_3 = - 1 ; this. var_4. x = 0 ; this. var_4. y = 0 ; this. var_5. x = 0 ; this. var_5. y = 0 ; }

************

************
tgt: public static void init ( ) { type_1 . init ( ) ; type_2 . init ( ) ; type_3 . init ( ) ; type_4 . init ( ) ; type_6 . init ( ) ; type_7 . init ( ) ; type_8 . init ( ) ; }
[0]: public void method_1 ( final type_1 var_1 ) throws java.io.ioexception { if ( type_2. method_2 ( var_2. method_3 ( ) ) ) { for ( final type_3 var_3 : var_2. method_3 ( ). values ( ) ) { final type_4 var_4 = type_5. method_4 ( var_3 ) ; if ( type_2. method_2 ( var_4. method_5 ( ) ) ) { method_6 ( var_4, string_1, var_1 ) ; } } } } }

************

************
tgt: public void method_1 ( ) { this . target = null ; this . var_1 = null ; this . var_2 = 0 ; this . var_3 = - 1 ; this . var_5 . x = 0 ; this . var_5 . y = 0 ; this . var_4 . x = 0 ; this . var_4 . y = 0 ; }
[0]: private void method_1 ( ) { var_1 = new type_1 ( ) ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( true ) ; var_1. method_4 ( false ) ; var_1. method_5 ( true ) ; var_1. method_6 ( false ) ; var_1. method_7 ( int_1 ) ; var_3. method_8 ( var_1 ) ; var_3. method_9 ( ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) throws java.io.ioexception { if ( ! ( type_2 . method_2 ( var_2 . method_3 ( ) ) ) ) return ; for ( final type_3 var_3 : var_2 . method_3 ( ) . values ( ) ) { final type_4 var_4 = type_5 . method_4 ( var_3 ) ; if ( type_2 . method_2 ( var_4 . method_5 ( ) ) ) { method_6 ( var_4 , string_1 , var_1 ) ; } } }
[0]: public boolean method_1 ( type_1 var_1, type_1 var_2 ) { type_2 var_3 = new type_2 ( var_1, var_2 ) ; if (! ( var_4. contains ( var_3 ) ) ) { method_2 ( ). add ( var_3 ) ; return true ; } return false ; }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 ( ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( true ) ; var_1 . method_4 ( true ) ; var_1 . method_5 ( true ) ; var_1 . method_6 ( false ) ; var_3 . method_8 ( var_1 ) ; var_3 . method_9 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string query, java.lang.string... args ) throws type_2 { type_3 var_1 = var_2. method_2 ( query ) ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { var_1. method_3 ( ( i + 1 ), args [ i ] ) ; } return var_1. method_4 ( query ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_1 var_2 ) { type_2 var_3 = new type_2 ( var_1 , var_2 ) ; if ( ! ( var_4 . contains ( var_3 ) ) ) { var_4 . add ( var_3 ) ; return true ; } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_1 ; type_2 var_3 = new type_2 ( float_1, ( - float_2 ) ) ; double var_4 = float_3 ; var_2. method_2 ( type_3. method_3 ( var_3, ( ( float ) ( var_4 ) ) ) ) ; if ( method_4 ( ) ) { method_5 ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string query , java.lang.string ... args ) throws type_2 { type_3 var_1 = var_2 . method_2 ( query ) ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { var_1 . method_3 ( ( i + 1 ) , args [ i ] ) ; } return var_1 . method_4 ( ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.util.list < java.lang.string > var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.string var_3 : var_4. method_2 ( ) ) { for ( java.lang.string var_5 : var_4. get ( var_3 ) ) { if ( var_1. contains ( var_5 ) ) { var_2. add ( new type_1 ( var_6, var_3 ) ) ; break ; } } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_1 ; type_2 var_3 = new type_2 ( float_1 , ( - float_2 ) ) ; var_2 . method_2 ( type_3 . method_3 ( var_3 , ( ( float ) ( float_3 ) ) ) ) ; if ( method_4 ( ) ) { method_5 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { switch ( var_1 ) { case var_2 : var_3 = int_1 ; break ; case var_4 : var_3 = int_2 ; break ; case var_5 : var_3 = int_3 ; break ; case var_6 : var_3 = int_4 ; break ; case var_7 : var_3 = int_5 ; break ; case var_8 : var_3 = int_6 ; break ; case var_9 : var_3 = int_7 ; break ; } this. var_1 = var_1 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.util.list < java.lang.string > var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.string var_3 : var_4 . method_2 ( ) ) { for ( java.lang.string var_5 : var_4 . get ( var_3 ) ) { if ( var_1 . contains ( var_5 ) ) { var_2 . add ( new type_1 ( var_6 , var_3 ) ) ; } } } return var_2 ; }
[0]: public java.lang.string method_1 ( java.util.hashmap < java.lang.string, java.lang.object > var_1 ) { java.lang.stringbuffer buf = new java.lang.stringbuffer ( ) ; try { buf. append ( type_1. method_2 ( var_2. method_3 ( string_1 ), buf ) ) ; return buf. tostring ( ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( ( string_2 + ( var_3. method_4 ( ) ) ) ) ; } return string_3 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 . method_2 ( var_2 [ 1 ] , var_3 ) ; var_1 . method_2 ( var_2 [ 0 ] , ( ( var_3 ) - 1 ) ) ; if ( ( var_3 ) == 1 ) { fail ( string_1 ) ; } assertthat ( var_1 . method_3 ( ) , method_4 ( null ) ) ; }
[0]: public boolean method_1 ( ) { try { java.lang.class. method_2 ( string_1 ) ; var_1 = type_1. method_3 ( ( ( string_2 + ( var_2 ) ) + string_3 ), string_4, string_4 ) ; method_4 ( new type_2 ( string_5, string_6, string_7, string_8, string_5, string_6, string_7, string_8, string_9 ) ) ; type_2 var_3 = method_5 ( string_10 ) ; return true ; } catch ( java.lang.exception var_4 ) { var_4. method_6 ( ) ; java.lang.system.out.println ( string_11 ) ; return false ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) var_3 = null ; switch ( var_1 ) { case var_2 : var_3 = int_1 ; break ; case var_4 : var_3 = int_2 ; break ; case var_5 : var_3 = int_3 ; break ; case var_6 : var_3 = int_4 ; break ; case var_7 : var_3 = int_5 ; break ; case var_8 : var_3 = int_6 ; break ; case var_9 : var_3 = int_7 ; break ; } this . var_1 = var_1 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = var_3. get ( var_1. getname ( ) ) ; java.util.list < java.lang.string > values = new java.util.arraylist < > ( ) ; for ( type_3 var_4 : var_1. method_2 ( ) ) { values. add ( var_4. getname ( ) ) ; } return new type_4 ( var_2, new type_5 ( var_2, values ) ) ; }

************

************
tgt: public java.lang.string method_1 ( java.util.hashmap < java.lang.string , java.lang.object > var_1 ) { java.lang.stringbuffer buf = new java.lang.stringbuffer ( ) ; try { buf . append ( type_1 . method_2 ( var_2 . method_3 ( string_1 ) , var_1 ) ) ; return buf . tostring ( ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( ( string_2 + ( var_3 . method_4 ( ) ) ) ) ; } return string_3 ; }
[0]: public java.util.list < java.lang.string > gettext ( ) { java.util.list < java.lang.string > list ; if ( type_1. getstring ( string_1 ). method_1 ( ) ) { list = type_2. method_2 ( var_1 ) ; } else { list = var_1 ; } list = new java.util.arraylist < > ( list ) ; if ( ( var_2 )!= null ) list. add ( 0, var_2 ) ; return list ; }

************

************
tgt: public boolean method_1 ( ) { try { java.lang.class . method_2 ( string_1 ) ; var_1 = type_1 . method_3 ( ( ( string_2 + ( var_2 ) ) + string_3 ) , string_4 , string_4 ) ; return true ; } catch ( java.lang.exception var_4 ) { var_4 . method_6 ( ) ; java.lang.system.out.println ( string_11 ) ; return false ; } }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { final java.lang.string query = ( ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_4 ) ) + string_4 ) + var_1 ) + string_5 ) + ( var_2 ) ) + ""\n"" ; return query ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = var_3 . get ( var_1 . getname ( ) ) ; java.util.list < java.lang.string > values = new java.util.arraylist < > ( ) ; for ( type_3 var_4 : var_1 . method_2 ( ) ) { values . add ( var_3 . get ( var_4 . getname ( ) ) ) ; } return new type_4 ( var_2 , new type_5 ( var_2 , values ) ) ; }
[0]: protected void method_1 ( java.lang.string name, java.lang.string var_1, java.util.list < java.lang.string > var_2, java.lang.string value, java.lang.string var_3, boolean var_4, int var_5 ) throws type_1 { type_2 var_6 = method_2 ( name, var_1, var_4 ) ; var_6. method_3 ( var_2 ) ; var_6. setvalue ( value ) ; var_6. method_4 ( method_5 ( ) ) ; var_6. method_6 ( var_5 ) ; var_6. method_7 ( var_3 ) ; method_8 ( var_6, var_7, var_4, var_5 ) ; }

************

************
tgt: public java.util.list < java.lang.string > gettext ( ) { java.util.list < java.lang.string > list ; if ( type_1 . getstring ( string_1 ) . method_1 ( "true" ) ) { list = type_2 . method_2 ( var_1 ) ; } else { list = new java.util.arraylist < > ( var_1 ) ; } return list ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_2 result = null ; try { type_3 var_2 = type_3. method_2 ( var_3 class ) ; type_4 var_4 = var_2. method_3 ( ) ; result = ( ( type_2 ) ( var_4. method_4 ( new java.io.file ( var_1 ) ) ) ) ; } catch ( type_5 var_5 ) { var_5. method_5 ( ) ; } return method_6 ( result ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { return ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_4 ) ) + string_4 ) + var_1 ) + string_5 ) + ( var_2 ) ; }
[0]: public int method_1 ( ) { if ( ( ( first )!= null ) && ( ( var_1 )!= null ) ) { return ( first. method_1 ( ) ) + ( var_1. method_1 ( ) ) ; } else { throw new type_1 ( string_1 ) ; } }

************

************
tgt: protected void method_1 ( java.lang.string name , java.lang.string var_1 , java.util.list < java.lang.string > var_2 , java.lang.string value , java.lang.string var_3 , boolean var_4 , int var_5 ) throws type_1 { type_2 var_6 = method_2 ( name , var_1 , var_4 ) ; var_6 . method_3 ( var_2 ) ; var_6 . setvalue ( value ) ; var_6 . method_6 ( var_5 ) ; var_6 . method_7 ( var_3 ) ; method_8 ( var_6 , var_7 , var_4 ) ; }
[0]: public int getint ( int min, int var_1 ) { int var_2 = var_3. method_1 ( ) ; var_3. method_2 ( ) ; if ( ( var_2 < min ) || ( var_2 > var_1 ) ) { var_2 = getint ( min, var_1 ) ; } else { java.lang.system.out.println ( string_2 ) ; } return var_2 ; }

************

************
tgt: public java.lang.string [ ] method_1 ( ) { java.util.list < java.lang.string > names = new java.util.arraylist < java.lang.string > ( ) ; for ( type_1 var_1 : var_2 ) { names . add ( var_1 . getname ( ) ) ; } return names . method_2 ( new java.lang.string [ 0 ] ) ; }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_2 < type_1 >. type_3 var_1 = first ; type_2 < type_1 >. type_3 var_2 = new type_3 ( ) ; var_2. item = item ; var_3 = var_1 ; if ( var_1!= null ) { synchronized ( var_1 ) { var_4 = var_2 ; } } first = var_2 ; ( size ) ++ ; if ( ( size ) == 1 ) { var_5 = first ; } } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 result = null ; try { type_3 var_2 = type_3 . method_2 ( var_3 class ) ; type_4 var_4 = var_2 . method_3 ( ) ; result = ( ( type_2 ) ( var_4 . method_4 ( new java.io.file ( var_1 ) ) ) ) ; java.lang.system.out.println ( result ) ; } catch ( type_5 var_5 ) { var_5 . method_5 ( ) ; } return method_6 ( result ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1, type_1... var_2 ) { type_2 var_3 = new type_2 ( var_1 ). append ( string_1 ) ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { if ( i > 0 ) { var_3. append ( string_2 ) ; } var_3. method_2 ( var_2 [ i ]. method_3 ( ) ) ; } var_3. append ( string_3 ) ; return type_1. method_4 ( var_3. method_5 ( ) ) ; } return null ; }

************

************
tgt: public int method_1 ( ) { if ( ( ( first ) != null ) && ( ( var_1 ) != null ) ) { return ( first . method_1 ( ) ) - ( var_1 . method_1 ( ) ) ; } else { throw new type_1 ( string_1 ) ; } }
[0]: void method_1 ( ) { try { if ( ( java.lang.float. method_2 ( var_1. gettext ( ) ) ) < ( var_2 ) ) method_3 ( var_1, true ) ; else { method_3 ( var_1, false ) ; var_3 = java.lang.float. method_2 ( var_1. gettext ( ) ) ; method_4 ( ) ; } } catch ( type_1 var_4 ) { method_3 ( var_1, true ) ; var_3 = float_1 ; } }

************

************
tgt: public int getint ( int min , int var_1 ) { java.lang.system.out.println ( string_1 ) ; int var_2 = var_3 . method_1 ( ) ; var_3 . method_2 ( ) ; if ( ( var_2 < min ) || ( var_2 > var_1 ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = getint ( min , var_1 ) ; } return var_2 ; }
[0]: private void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3 = var_4 ; var_5 = 0 ; break ; case var_6 : var_3 = var_4 ; var_5 = var_4 ; break ; case var_7 : var_3 = 0 ; var_5 = var_4 ; break ; case var_8 : var_3 = - ( var_4 ) ; var_5 = var_4 ; break ; case var_9 : var_10 = true ; break ; default : throw new type_1 ( ( string_1 + ( var_1 ) ) ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_2 < type_1 > . type_3 var_1 = first ; type_2 < type_1 > . type_3 var_2 = new type_3 ( ) ; var_2 . item = item ; var_3 = var_1 ; if ( var_1 != null ) { var_4 = var_2 ; } first = var_2 ; ( size ) ++ ; if ( ( size ) == 1 ) { var_5 = first ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( var_2 ) ; type_2. method_3 ( var_3, var_4 ) ; type_2. method_2 ( var_5 ) ; type_3. method_4 ( var_6. getid ( ) ) ; var_7. method_5 ( type_4. method_6 ( int_1 ) ) ; var_8. method_7 ( var_1 ) ; type_3. method_4 ( 0 ) ; type_2. method_8 ( var_5 ) ; type_2. method_8 ( var_2 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , type_1 ... var_2 ) { type_2 var_3 = new type_2 ( var_1 ) . append ( string_1 ) ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { if ( i > 0 ) { var_3 . append ( string_2 ) ; } var_3 . append ( var_2 [ i ] . method_3 ( ) ) ; } var_3 . append ( string_3 ) ; return type_1 . method_4 ( var_3 . method_5 ( ) ) ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.integer var_2, java.util.hashset < java.lang.integer > var_3, type_2 < java.lang.integer > var_4 ) { var_3. add ( var_2 ) ; for ( java.lang.integer var_5 : var_1. method_2 ( ). get ( var_2 ) ) { if (! ( var_3. contains ( var_5 ) ) ) { type_3. method_1 ( var_1, var_2, var_3, var_4 ) ; } } var_4. method_3 ( var_2 ) ; }

************

************
tgt: void method_1 ( ) { try { if ( ( java.lang.double . method_2 ( var_1 . gettext ( ) ) ) < ( var_2 ) ) method_3 ( var_1 , true ) ; else { method_3 ( var_1 , false ) ; var_3 = java.lang.double . method_2 ( var_1 . gettext ( ) ) ; method_4 ( ) ; } } catch ( type_1 var_4 ) { method_3 ( var_1 , true ) ; var_3 = float_1 ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 < java.util.hashmap < java.lang.string, type_3 > > t = new type_2 < java.util.hashmap < java.lang.string, type_3 > > ( ) { } ; java.util.hashmap < java.lang.string, type_3 > var_2 = var_1. getvalue ( t ) ; for ( type_3 c : var_2. values ( ) ) { var_3. add ( c. getname ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3 = var_4 ; var_5 = 0 ; break ; case var_6 : var_3 = - ( var_4 ) ; var_5 = var_4 ; break ; case var_7 : var_3 = 0 ; var_5 = var_4 ; break ; case var_8 : var_3 = var_4 ; var_5 = var_4 ; break ; case var_9 : var_10 = true ; break ; default : throw new type_1 ( ( string_1 + ( var_1 ) ) ) ; } }
[0]: public void method_1 ( int index, int var_1, type_1 var_2 ) { type_2 [ ] var_3 = type_2. method_2 ( ) ; if ( var_2. method_3 ( index, var_1 ) ) { if ( var_2. method_4 ( index, var_1 ) ) { this. var_4 [ index ] -= var_1 ; } this. var_4 [ index ] -= var_1 ; } else { java.lang.system.out.println ( string_3 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 ) ; type_2 . method_3 ( var_3 , var_4 ) ; type_2 . method_2 ( var_5 ) ; type_3 . method_4 ( var_6 . getid ( ) ) ; var_8 . method_7 ( var_1 ) ; type_3 . method_4 ( 0 ) ; type_2 . method_8 ( var_5 ) ; type_2 . method_8 ( var_2 ) ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( this. var_1 ) + string_1 ) + ( this. var_2 ) ) + string_1 ) + ( this. var_3 ) ) + string_1 ) + ( this. method_2 ( ) ) ) + string_1 ) + ( this. method_3 ( ) ) ) + string_1 ) + ( this. method_4 ( ) ) ) + string_1 ) ) ; this. method_5 ( ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.integer var_2 , java.util.hashset < java.lang.integer > var_3 , type_2 < java.lang.integer > var_4 ) { var_3 . add ( var_2 ) ; for ( java.lang.integer var_5 : var_1 . method_2 ( ) . get ( var_2 ) ) { if ( ! ( var_3 . contains ( var_5 ) ) ) { type_3 . method_1 ( var_1 , var_5 , var_3 , var_4 ) ; } } var_4 . method_3 ( var_2 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; for ( type_1 msg : var_2 ) { msg. method_3 ( type_2. method_4 ( ). method_5 ( ). method_6 ( msg ) ) ; if (! ( method_7 ( msg ) ) ) { if ( ( method_8 ( ) ) == ( var_3 ) ) var_4 = false ; var_1. add ( msg ) ; } else if ( ( method_8 ( ) ) == ( var_3 ) ) var_4 = true ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 < java.util.hashmap < java.lang.string , type_3 > > t = new type_2 < java.util.hashmap < java.lang.string , type_3 > > ( ) { } ; java.util.hashmap < java.lang.string , type_3 > var_2 = var_1 . getvalue ( t ) ; if ( var_2 == null ) return ; for ( type_3 c : var_2 . values ( ) ) { var_3 . add ( c . getname ( ) ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { if ( var_3!= null ) { var_4 = var_3. method_2 ( var_5 ) ; } type_4 var_6 = method_3 ( ). method_4 ( ) ; type_5 var_7 = new type_5 ( ) ; var_6. replace ( var_8, var_7 ) ; var_6. method_5 ( null ) ; var_6. method_6 ( var_9 ) ; var_6. commit ( ) ; return var_1. method_7 ( var_10, var_2, false ) ; }

************

************
tgt: public void method_1 ( int index , int var_1 , type_1 var_2 ) { type_2 [ ] var_3 = type_2 . method_2 ( ) ; if ( var_2 . method_3 ( index , var_1 ) ) { if ( var_2 . method_4 ( index , var_1 ) ) { java.lang.system.out.println ( ( ( ( string_1 + var_1 ) + string_2 ) + ( var_3 [ index ] . getname ( ) ) ) ) ; this . var_4 [ index ] -= var_1 ; } } else { java.lang.system.out.println ( string_3 ) ; } }
[0]: public static void method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = new type_2 < type_3 > ( var_3 class ) ; var_2. add ( var_1. method_2 ( ) ) ; type_2 < type_1 > var_4 = new type_2 < type_1 > ( var_5 class ) ; var_4. add ( var_1 ) ; var_4. method_3 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . var_1 ) ) + string_1 ) + ( this . var_2 ) ) + string_1 ) + ( this . var_3 ) ) + string_1 ) + ( this . method_2 ( ) ) ) + string_1 ) + ( this . method_3 ( ) ) ) + string_1 ) + ( this . method_4 ( ) ) ) + string_1 ) ) ; this . method_5 ( ) ; }
[0]: public void method_1 ( ) { try { type_1. method_2 ( var_1 ) ; type_2 var_2 = new type_2 ( var_1 ) ; var_2. start ( ) ; type_1. method_3 ( var_3, var_1 ) ; type_1. method_4 ( var_1, var_4 ) ; type_1. method_5 ( var_1 ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; synchronized ( var_2 ) { for ( type_1 msg : var_2 ) { msg . method_3 ( type_2 . method_4 ( ) . method_5 ( ) . method_6 ( msg ) ) ; if ( ! ( method_7 ( msg ) ) ) { if ( ( method_8 ( ) ) == ( var_3 ) ) var_4 = false ; var_1 . add ( msg ) ; } else if ( ( method_8 ( ) ) == ( var_3 ) ) var_4 = true ; } } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( var_3 ) ; return var_2. query ( ( ( string_1 + ( var_4 ) ) + string_2 ), new java.lang.object [ ] { var_1 }, new type_3 ( ) ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { if ( var_3 != null ) { var_4 = var_3 . method_2 ( var_5 ) ; } else { type_4 var_6 = method_3 ( ) . method_4 ( ) ; type_5 var_7 = new type_5 ( ) ; var_6 . replace ( var_8 , var_7 ) ; var_6 . method_5 ( null ) ; var_6 . method_6 ( var_9 ) ; var_6 . commit ( ) ; } return var_1 . method_7 ( var_10 , var_2 , false ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( var_1. method_2 ( ) ) >= 0 ) && ( ( var_1. method_2 ( ) ) <= ( this. method_3 ( ) ) ) ) { if ( var_2 ) { method_4 ( var_1. method_2 ( ) ) ; return ; } if ( var_3 ) { method_5 ( var_1. method_2 ( ) ) ; } } }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = new type_2 < type_3 > ( var_3 class ) ; var_2 . add ( var_1 . method_2 ( ) ) ; var_2 . method_3 ( ) ; type_2 < type_1 > var_4 = new type_2 < type_1 > ( var_5 class ) ; var_4 . add ( var_1 ) ; var_4 . method_3 ( ) ; }
[0]: void method_1 ( ) { type_1. method_2 ( this, ( ( ( ( ( ( string_1 + ( getstring ( var_1 ) ) ) + ( var_2 ) ) + string_2 ) + ( type_2. method_3 ( this ) ) ) + string_2 ) + ( type_3. method_3 ( this ) ) ), var_3 ). show ( ) ; type_4. method_4 ( type_2. method_3 ( this ) ) ; type_4. method_4 ( type_3. method_3 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { try { type_1 . method_2 ( var_1 ) ; type_1 . method_3 ( var_3 , var_1 ) ; type_1 . method_4 ( var_1 , var_4 ) ; type_1 . method_5 ( var_1 ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_6 ( ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; var_2. settext ( var_1. method_3 ( ) ) ; var_3. settext ( var_1. method_4 ( ) ) ; var_4. setvalue ( var_1. method_5 ( ) ) ; var_5. settext ( var_1. method_6 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( var_3 ) ; return var_2 . query ( ( ( string_1 + ( var_4 ) ) + string_2 ) , new java.lang.object [ ] { var_1 } , new type_3 ( ) ) . get ( 0 ) ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > var_1 = var_2. method_2 ( true ) ; if ( ( var_1. size ( ) ) == 1 ) { method_3 ( var_1. get ( 0 ) ) ; } else { method_4 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( var_1 . method_2 ( ) ) >= 0 ) && ( ( var_1 . method_2 ( ) ) <= ( this . method_3 ( ) ) ) ) { if ( var_2 ) { method_4 ( java.lang.math.abs ( var_1 . method_2 ( ) ) ) ; return ; } if ( var_3 ) { method_5 ( var_1 . method_2 ( ) ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { try { synchronized ( var_2 ) { type_3 var_3 ; while ( ( var_3 = method_2 ( var_1 ) ) == ( var_4 ) ) { var_2. method_3 ( ) ; } if ( var_3 == ( var_5 ) ) { method_4 ( var_1 ) ; } } return new type_1 ( var_1 ) ; } catch ( type_4 var_6 ) { throw type_5. method_5 ( var_6 ) ; } } }

************

************
tgt: void method_1 ( ) { type_1 . method_2 ( this , ( ( ( ( ( ( getstring ( var_1 ) ) + ( var_2 ) ) + string_2 ) + ( type_2 . method_3 ( this ) ) ) + string_2 ) + ( type_3 . method_3 ( ) ) ) , var_3 ) . show ( ) ; type_4 . method_4 ( type_2 . method_3 ( this ) ) ; type_4 . method_4 ( type_3 . method_3 ( ) ) ; }
[0]: public void delete ( type_1 var_1, int var_2 ) { if ( ( method_1 ( var_1 ) ) && ( method_2 ( var_1. getid ( ), var_2 ) ) ) { var_3. update ( var_4, new java.lang.object [ ] { var_1. getid ( ) } ) ; } else { throw new type_2 ( ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) ; var_2 . settext ( var_1 . method_3 ( ) ) ; var_3 . settext ( var_1 . method_5 ( ) ) ; var_4 . setvalue ( var_1 . method_4 ( ) ) ; var_5 . settext ( var_1 . method_6 ( ) ) ; }
[0]: private static int method_1 ( int line, type_1 var_1 ) { int var_2 = type_2. method_2 ( var_1 ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= var_2 ) { line = var_2 - 1 ; } return line ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( true ) ; if ( ( var_1 . size ( ) ) == 1 ) { method_3 ( var_1 . get ( 0 ) ) ; } else if ( ! ( var_1 . isempty ( ) ) ) { method_4 ( var_1 ) ; } }
[0]: public void method_1 ( java.io.bufferedwriter var_1, java.util.list < java.lang.string > var_2 ) throws java.io.ioexception { for ( java.lang.string str : var_2 ) { var_1. method_2 ( ( str + string_1 ) ) ; } var_1. method_2 ( ( str + string_1 ) ) ; var_1. method_3 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { try { synchronized ( var_2 ) { type_3 var_3 ; while ( ( var_3 = method_2 ( var_1 ) ) == ( var_4 ) ) { var_2 . method_3 ( ) ; } if ( var_3 == ( var_5 ) ) { method_4 ( var_1 ) ; } return new type_1 ( var_1 , ( var_3 == ( var_5 ) ) ) ; } } catch ( type_4 var_6 ) { throw type_5 . method_5 ( var_6 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_1 ( var_1 ) ; var_3 = new boolean [ this. var_4 ] ; for ( int i = 0 ; i < ( this. var_2. method_2 ( ). length ) ; i ++ ) { this. var_3 [ i ] = this. var_2. method_2 ( ) [ i ]. method_3 ( ) ; } var_2. method_1 ( var_1 ) ; }

************

************
tgt: public void delete ( type_1 var_1 , int var_2 ) { if ( ( method_1 ( var_1 . getid ( ) ) ) && ( method_2 ( var_1 . getid ( ) , var_2 ) ) ) { var_3 . update ( var_4 , new java.lang.object [ ] { var_1 . getid ( ) } ) ; } else { throw new type_2 ( ) ; } }
[0]: private void method_1 ( ) { int var_1 = ( this. var_2. size ( ) ) / int_1 ; if ( ( var_1 % int_1 ) == 1 ) { this. var_3 = this. var_2. get ( var_1 ) ; } else { this. var_3 = ( ( this. var_2. get ( ( var_1 - 1 ) ) ) + ( this. var_2. get ( var_1 ) ) ) / float_1 ; } }

************

************
tgt: private int method_1 ( int line , type_1 var_1 ) { int var_2 = method_2 ( var_1 ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= var_2 ) { line = var_2 - 1 ; } return line ; }
[0]: private type_1 method_1 ( ) throws type_2 { try { if ( ( var_1 ) == null ) { return var_2. method_2 ( ) ; } else { return var_1. method_3 ( ) ; } } catch ( java.lang.throwable var_3 ) { var_4. error ( string_1, var_3 ) ; throw new type_2 ( string_2, var_3 ) ; } }

************

************
tgt: private void method_1 ( java.io.bufferedwriter var_1 , java.util.list < java.lang.string > var_2 ) throws java.io.ioexception { for ( java.lang.string str : var_2 ) { var_1 . method_2 ( ( str + "\n" ) ) ; } var_1 . method_2 ( "\n" ) ; var_1 . method_3 ( ) ; }
[0]: public void method_1 ( ) { if ( ( this. var_1. length ( ) ) == 0 ) { this. var_1 = this. var_2. getid ( ) ; if ( ( this. var_1. length ( ) ) == ( var_3 ) ) { this. var_1 += string_1 ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 . method_1 ( var_1 ) ; var_3 = new boolean [ this . var_4 ] ; for ( int i = 0 ; i < ( this . var_3 . length ) ; i ++ ) { this . var_3 [ i ] = this . var_2 . method_2 ( ) [ i ] . method_3 ( ) ; } }
[0]: public void method_1 ( byte [ ] data, type_1 var_1 ) { if ( ( var_1 == null ) && ( data!= null ) ) { var_2 = new type_2 ( name, var_3, var_4, data ) ; var_2. method_2 ( 1 ) ; var_5. add ( var_2 ) ; method_3 ( ) ; } else { var_2 = new type_2 ( name, var_3, var_4 ) ; var_5. add ( var_2 ) ; method_3 ( ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ! ( this . var_2 . isempty ( ) ) ) { int var_1 = ( this . var_2 . size ( ) ) / int_1 ; if ( ( var_1 % int_1 ) == 1 ) { this . var_3 = this . var_2 . get ( var_1 ) ; } else { this . var_3 = ( ( this . var_2 . get ( ( var_1 - 1 ) ) ) + ( this . var_2 . get ( var_1 ) ) ) / float_1 ; } } }
[0]: public void method_1 ( ) { var_1. method_2 ( string_1 ) ; java.util.iterator var_2 = var_3. method_3 ( ). iterator ( ) ; for ( ; var_2. method_4 ( ) ; ) { type_1 var_4 = ( ( type_1 ) ( var_2. method_5 ( ) ) ) ; ( ( type_2 ) ( var_3. remove ( var_4 ) ) ). method_6 ( ) ; context. method_7 ( var_4 ) ; } var_3. method_8 ( ) ; }

************

************
tgt: private type_1 method_1 ( ) throws type_2 { try { if ( ( var_1 ) == null ) { return var_2 . method_2 ( ) ; } else { return var_1 . method_3 ( ) ; } } catch ( java.lang.exception var_3 ) { java.lang.string msg = string_1 ; var_4 . error ( msg , var_3 ) ; throw new type_2 ( msg , var_3 ) ; } }
[0]: private static type_1 < type_2 > method_1 ( type_3 result ) { type_1 < type_2 > var_1 = type_1. method_2 ( ) ; if ( ( result!= null ) && (! ( result. getboolean ( string_1 ) ) ) ) { type_2 var_2 = type_4. method_3 ( result ) ; var_1 = type_1. method_4 ( var_2 ) ; } return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( this . var_1 . length ( ) ) == 0 ) { this . var_1 = this . var_2 . getid ( ) ; if ( ( this . var_1 . length ( ) ) == ( var_3 ) ) { this . var_1 += string_1 ; } } return this . var_1 . trim ( ) ; }
[0]: public void method_1 ( ) { int var_1 = var_2. length ; for ( int i = 0 ; i < var_1 ; i ++ ) { if ( var_2 [ i ]. equals ( string_1 ) ) { var_3. method_2 ( this ) ; } else if ( var_2 [ i ]. equals ( string_2 ) ) { } else if ( var_2 [ i ]. equals ( string_3 ) ) { } else if ( var_2 [ i ]. equals ( string_4 ) ) { } } } }

************

************
tgt: public void method_1 ( byte [ ] data , type_1 var_1 ) { if ( var_1 == null ) { if ( ( data != null ) && ( ( data . length ) != 0 ) ) { var_2 = new type_2 ( name , var_3 , var_4 , data ) ; var_2 . method_2 ( 1 ) ; var_5 . add ( var_2 ) ; method_3 ( ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3. method_2 ( var_2, string_1 ) ; var_3 = var_1. getcontext ( ) ; type_4 var_4 = new type_4 ( var_3 ) ; var_4. method_3 ( true ) ; var_4. method_4 ( true ) ; var_4. method_5 ( var_3. method_6 ( ). getcolor ( var_5 ) ) ; return new type_5 ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( string_1 ) ; java.util.iterator var_2 = var_3 . method_3 ( ) . iterator ( ) ; for ( ; var_2 . method_4 ( ) ; ) { type_1 var_4 = ( ( type_1 ) ( var_2 . method_5 ( ) ) ) ; ( ( type_2 ) ( var_3 . get ( var_4 ) ) ) . method_6 ( ) ; var_2 . remove ( ) ; context . method_7 ( var_4 ) ; } var_3 . method_8 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { final java.util.collection < type_1 > var_1 = java.util.arrays.aslist ( new type_1 ( string_1, var_2 ) ) ; final java.lang.string var_3 = type_2. method_2 ( int_1 ) ; final java.lang.class <? extends type_3 > var_4 = var_5 class ; final type_4 var_6 = new type_4 ( var_4, var_3 ) ; var_6. method_3 ( var_1 ) ; type_5. assertequals ( var_1, var_6. method_4 ( ) ) ; }

************

************
tgt: static type_1 < type_2 > method_1 ( type_3 result ) { type_1 < type_2 > var_1 = type_1 . method_2 ( ) ; if ( ( result != null ) && ( ! ( result . getboolean ( string_1 , false ) ) ) ) { type_2 var_2 = type_4 . method_3 ( result ) ; var_1 = type_1 . method_4 ( var_2 ) ; } return var_1 ; }
[0]: private java.lang.string method_1 ( char [ ] [ ] array ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < ( array. length ) ; i ++ ) { for ( int j = 0 ; j < ( array [ 0 ]. length ) ; j ++ ) { var_1. append ( array [ i ] [ j ] ) ; } var_1. append ( string_1 ) ; } return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { int var_1 = var_2 . length ; for ( int i = 0 ; i < var_1 ; i ++ ) { if ( var_2 [ i ] . equals ( string_1 ) ) { var_3 . method_2 ( this ) ; } else if ( var_2 [ i ] . equals ( string_2 ) ) { } } }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] names = var_1. split ( string_1 ) ; java.lang.string var_2 = string_2 ; for ( int i = 0 ; i < ( names. length ) ; i ++ ) { if ( i == int_1 ) break ; var_2 += names [ i ]. method_2 ( 0 ) ; } return var_2 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 . method_2 ( var_2 , string_1 ) ; var_3 = var_1 . getcontext ( ) ; type_4 var_4 = new type_4 ( var_3 ) ; var_4 . method_3 ( true ) ; var_4 . method_4 ( true ) ; return new type_5 ( var_4 ) ; }
[0]: public static java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > result = new java.util.arraylist < > ( ) ; result. add ( new type_1 ( string_1, string_2 ) ) ; result. add ( new type_1 ( string_3, string_4 ) ) ; result. add ( new type_1 ( string_5, string_6 ) ) ; return result ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final java.util.collection < type_1 > var_1 = java.util.arrays.aslist ( new type_1 ( string_1 , var_2 ) ) ; final java.lang.string var_3 = type_2 . method_2 ( int_1 ) ; final java.lang.class < ? extends type_3 > var_4 = var_5 class ; final type_4 var_6 = new type_4 ( var_4 , var_3 ) ; var_6 . method_3 ( var_1 ) ; type_5 . assertequals ( new java.util.arraylist ( var_1 ) , new java.util.arraylist ( var_6 . method_4 ( ) ) ) ; }
[0]: private static void method_1 ( type_1 var_1, java.util.map < java.lang.string, java.lang.object > var_2 ) { try ( type_2 context = var_1. method_2 ( ) ) { type_3 var_3 = context. method_3 ( ) ; for ( java.util.map.entry < java.lang.string, java.lang.object > var_4 : var_2. method_4 ( ) ) { var_3. method_5 ( var_4. method_6 ( ) ). method_7 ( var_4. getvalue ( ) ) ; } } }

************

************
tgt: private java.lang.string method_1 ( char [ ] [ ] array ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { for ( int j = 0 ; j < ( array [ 0 ] . length ) ; j ++ ) { var_1 . append ( array [ i ] [ j ] ) ; } var_1 . append ( "\n" ) ; } return var_1 . tostring ( ) ; }
[0]: public java.lang.string tostring ( android.content.context context ) { java.lang.string [ ] values = context. method_1 ( ). method_2 ( var_1 ) ; if ( ( value ) == ( var_2. value ) ) { return values [ ( ( values. length ) - 1 ) ] ; } else { return values [ value ] ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] names = var_1 . split ( string_1 ) ; java.lang.string var_2 = string_2 ; for ( int i = 0 ; i < ( names . length ) ; i ++ ) { if ( i == int_1 ) break ; var_2 += names [ i ] . method_2 ( 0 ) ; } return var_2 . touppercase ( ) ; }
[0]: public void method_1 ( ) { while ( true ) { type_1 var_1 = ( ( type_1 ) ( type_2. method_2 ( ) ) ) ; if ( var_1 == null ) { continue ; } type_3 var_2 = new type_3 ( var_1 ) ; java.lang.thread var_3 = new java.lang.thread ( var_2 ) ; var_3. start ( ) ; } }

************

************
tgt: public static java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > result = new java.util.arraylist < > ( ) ; result . add ( new type_1 ( string_5 , string_6 ) ) ; result . add ( new type_1 ( string_1 , string_2 ) ) ; result . add ( new type_1 ( string_3 , string_4 ) ) ; return result ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { length = ( end. method_2 ( ) ) - ( start. method_2 ( ) ) ; } else if ( ( var_1 ) == ( var_3 ) ) { length = ( end. method_3 ( ) ) - ( start. method_3 ( ) ) ; } }

************

************
tgt: static void method_1 ( type_1 var_1 , java.util.map < java.lang.string , ? > var_2 ) { try ( type_2 context = var_1 . method_2 ( ) ) { type_3 var_3 = context . method_3 ( ) ; for ( java.util.map.entry < java.lang.string , ? > var_4 : var_2 . method_4 ( ) ) { var_3 . method_5 ( var_4 . method_6 ( ) ) . method_7 ( var_4 . getvalue ( ) ) ; } } }
[0]: public void method_1 ( type_1 key, type_2 < type_3 > values, type_4 context ) throws java.io.ioexception, type_5 { double var_1 = 0.0 ; for ( type_3 var_2 : values ) { var_1 += var_2. get ( ) ; } title. set ( string_1 ) ; var_3. set ( java.lang.string. method_2 ( var_1 ) ) ; context. method_3 ( title, var_3 ) ; } }

************

************
tgt: public java.lang.string tostring ( android.content.context context ) { java.lang.string [ ] values = context . method_1 ( ) . method_2 ( var_1 ) ; if ( ( value ) == ( var_2 . value ) ) { return values [ ( ( values . length ) - 1 ) ] ; } else { return values [ ( ( value ) - 1 ) ] ; } }
[0]: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { if ( ( var_2 [ 1 ] ) == int_1 ) { var_3 [ 0 ] = new java.util.date ( ) ; var_4. method_2 ( ) ; var_2 [ 1 ] = 0 ; } ( var_2 [ 1 ] ) ++ ; java.lang.system.out.print ( string_1 ) ; for ( int var_4 : var_2 ) { java.lang.system.out.print ( ( var_4 + string_2 ) ) ; } java.lang.system.out.println ( ) ; return t. method_1 ( var_1 ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( type_2 . method_2 ( ) ) ) ; if ( var_1 != null ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; type_3 var_2 = new type_3 ( var_1 ) ; java.lang.thread var_3 = new java.lang.thread ( var_2 ) ; var_3 . start ( ) ; } }
[0]: private void method_1 ( ) { if ( var_1. method_2 ( false, true ) ) { if ( ( var_2 ) == null ) { var_2 = var_3. method_3 ( var_4, var_5, int_1, var_6 ) ; } else { throw new type_1 ( ( string_1 + string_2 ) ) ; } } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { length = ( ( end . method_2 ( ) ) - ( start . method_2 ( ) ) ) + 1 ; } else if ( ( var_1 ) == ( var_3 ) ) { length = ( ( end . method_3 ( ) ) - ( start . method_3 ( ) ) ) + 1 ; } }
[0]: private void method_1 ( type_1 var_1 ) { java.lang.string var_2 ; java.lang.string var_3 = var_2 = var_1. method_2 ( ) ; int i = 0 ; while ( ( var_4. method_3 ( var_2 ) )!= null ) { i ++ ; var_2 = var_3 + i ; } if ( i > 0 ) { var_1. method_4 ( var_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 key , type_2 < type_3 > values , type_4 context ) throws java.io.ioexception , type_5 { double var_1 = 0.0 ; for ( type_3 var_2 : values ) { var_1 += var_2 . get ( ) ; } title . set ( key ) ; var_3 . set ( java.lang.string . method_2 ( var_1 ) ) ; context . method_3 ( title , var_3 ) ; }
[0]: public static type_1 <? > method_1 ( type_2 id, java.lang.string... keys ) { java.lang.string var_1 = keys [ 0 ] ; java.lang.string var_2 = ( ( keys. length ) == 1 )? keys [ 1 ] : string_1 ; type_3 var_3 = var_4. get ( var_1, var_2 ) ; if ( var_3 == null ) { return null ; } return var_3. method_2 ( id ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { if ( ( var_2 [ 1 ] ) == int_1 ) { var_3 [ 0 ] = new java.util.date ( ) ; var_4 . method_2 ( ) ; var_2 [ 1 ] = 0 ; } ( var_2 [ 1 ] ) ++ ; java.lang.system.out.print ( string_1 ) ; for ( int var_4 : var_2 ) { java.lang.system.out.print ( ( var_4 + string_2 ) ) ; } java.lang.system.out.println ( ) ; return t . method_1 ( var_1 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_2 var_3 = var_4. method_2 ( var_1 ) ; type_3 var_5 = var_6. method_3 ( var_3, var_2 ) ; if ( ( var_3 == null ) || ( var_5 == null ) ) { return type_4. method_4 ( ). method_5 ( ( string_1 + ( var_7 ) ) ) ; } return type_4. method_6 ( ). method_7 ( string_2, var_5 ). method_7 ( string_3, var_1 ). method_8 ( ) ; }

************

************
tgt: private void method_1 ( ) { if ( var_1 . method_2 ( false , true ) ) { if ( ( ( var_2 ) == null ) && ( ( var_5 ) != null ) ) { var_2 = var_3 . method_3 ( var_4 , var_5 , int_1 , var_6 ) ; } else { throw new type_1 ( ( string_1 + string_2 ) ) ; } } }
[0]: public void method_1 ( int var_1 ) { if ( var_1 == 0 ) var_2. method_2 ( true ) ; else if ( var_1 == 1 ) var_3. method_2 ( true ) ; else if ( var_1 == int_1 ) var_4. method_2 ( true ) ; else if ( var_1 == int_2 ) var_5. method_2 ( true ) ; else if ( var_1 == int_3 ) var_6. method_2 ( true ) ; else var_7. method_3 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.string var_2 ; final java.lang.string var_3 = var_1 . method_2 ( ) ; var_2 = var_3 ; int i = 0 ; while ( ( var_4 . method_3 ( var_2 ) ) != null ) { i ++ ; var_2 = var_3 + i ; } if ( i > 0 ) { var_1 . method_4 ( var_2 ) ; } }
[0]: public java.util.iterator < type_1 > method_1 ( ) { java.util.set < type_1 > set = new java.util.hashset < type_1 > ( ) ; for ( type_1 var_1 = var_2. method_2 ( ) ;! ( var_3. isempty ( ) ) ; var_1 = var_2. method_2 ( ) ) { set. add ( var_1 ) ; if ( method_3 ( var_1, var_1. method_4 ( ), var_1. method_5 ( ) ) ) { set. remove ( var_1 ) ; } } return set. iterator ( ) ; }

************

************
tgt: public static type_1 < ? > method_1 ( type_2 id , java.lang.string ... keys ) { java.lang.string var_1 = keys [ 0 ] ; java.lang.string var_2 = ( ( keys . length ) > 1 ) ? keys [ 1 ] : string_1 ; type_3 var_3 = var_4 . get ( var_1 , var_2 ) ; if ( var_3 == null ) { return null ; } return var_3 . method_2 ( id ) ; }
[0]: protected void method_1 ( java.lang.void var_1 ) { var_2. method_2 ( ) ; var_2. method_3 ( var_3 ) ; var_2. method_3 ( var_4 ) ; method_4 ( ) ; var_5 = new type_1 ( this, var_2, var_6, true ) ; var_7. method_5 ( var_5 ) ; var_8. method_6 ( var_9 ) ; super. method_1 ( var_1 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_3 , java.lang.string var_2 ) { type_2 var_1 = var_4 . method_2 ( var_3 ) ; type_3 var_5 = var_6 . method_3 ( var_3 , var_2 ) ; java.lang.system.out.println ( var_1 ) ; if ( ( var_1 == null ) || ( var_5 == null ) ) { return type_4 . method_4 ( ) . method_5 ( ( string_1 + ( var_7 ) ) ) ; } return type_4 . method_6 ( ) . method_7 ( string_2 , var_5 ) . method_7 ( string_3 , var_1 ) . method_8 ( ) ; }
[0]: protected boolean method_1 ( int var_1, int height ) { var_2. method_2 ( var_1, height ) ; method_3 ( ) ; var_3. x = var_1 ; var_3. y = height ; if ( ( var_1 == 0 ) || ( height == 0 ) ) { return false ; } type_1 var_4 = method_4 ( ) ; if ( var_4!= null ) { var_4. method_5 ( var_1, height ) ; } return true ; }

************

************
tgt: public void method_1 ( int var_1 ) { this . var_1 = var_1 ; if ( var_1 == 0 ) var_2 . method_2 ( true ) ; else if ( var_1 == 1 ) var_3 . method_2 ( true ) ; else if ( var_1 == int_1 ) var_4 . method_2 ( true ) ; else if ( var_1 == int_2 ) var_5 . method_2 ( true ) ; else if ( var_1 == int_3 ) var_6 . method_2 ( true ) ; else var_7 . method_3 ( ) ; }
[0]: public static synchronized type_1 method_1 ( java.util.map < java.lang.string, java.lang.string > var_1 ) { if ( ( var_2 ) == null ) { type_2. method_2 ( var_3, null ) ; type_3 var_4 = type_4. method_3 ( var_1 ) ; var_2 = new type_1 ( var_4 ) ; var_5 = type_1. method_4 ( var_1 ) ; var_6 = new type_5 ( type_1. args, var_4 ) ; } return var_2 ; }

************

************
tgt: public java.util.iterator < type_1 > method_1 ( ) { java.util.set < type_1 > set = new java.util.hashset < type_1 > ( ) ; for ( type_1 var_1 = var_2 . method_2 ( ) ; ! ( var_2 . isempty ( ) ) ; var_1 = var_2 . method_2 ( ) ) { set . add ( var_1 ) ; if ( method_3 ( set , var_1 . method_4 ( ) , var_1 . method_5 ( ) ) ) { set . remove ( var_1 ) ; } } return set . iterator ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws java.io.ioexception { java.lang.system.out.println ( string_1 ) ; type_3 var_3 = var_1. method_2 ( false ) ; if ( var_3!= null ) { var_3. method_3 ( ) ; java.lang.system.out.println ( string_2 ) ; var_2. method_4 ( string_3 ) ; } }

************

************
tgt: protected void method_1 ( java.lang.void var_1 ) { var_2 . method_2 ( ) ; method_4 ( var_3 ) ; var_2 . method_3 ( var_3 ) ; method_4 ( var_4 ) ; var_2 . method_3 ( var_4 ) ; var_5 = new type_1 ( this , var_2 , var_6 , true ) ; var_7 . method_5 ( var_5 ) ; var_8 . method_6 ( var_9 ) ; super . method_1 ( var_1 ) ; }
[0]: public void method_1 ( ) { method_2 ( java.lang.string. method_3 ( var_1 ) ) ; method_4 ( java.lang.string. method_3 ( var_2 ) ) ; method_5 ( java.lang.string. method_3 ( var_3 ) ) ; method_6 ( java.lang.string. method_3 ( var_4 ) ) ; method_7 ( java.lang.string. method_3 ( var_5 ) ) ; method_8 ( java.lang.string. method_3 ( var_6 ) ) ; method_9 ( java.lang.string. method_3 ( var_7 ) ) ; }

************

************
tgt: protected boolean method_1 ( int var_1 , int height ) { var_2 . method_2 ( var_1 , height ) ; method_3 ( ) ; var_3 . x = var_1 ; var_3 . y = height ; return ! ( ( var_1 == 0 ) || ( height == 0 ) ) ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_4 ) ) ) { method_2 ( getstring ( var_5 ). tostring ( ) ) ; method_3 ( ) ; return ; } super. method_1 ( var_1, var_2, data ) ; }

************

************
tgt: public static synchronized type_1 method_1 ( java.util.map < java.lang.string , java.lang.string > var_1 ) { if ( ( var_2 ) == null ) { type_2 . method_2 ( var_3 , "true" ) ; type_3 var_4 = type_4 . method_3 ( var_1 ) ; var_5 = type_1 . method_4 ( var_1 ) ; var_2 = new type_1 ( var_4 ) ; var_6 = new type_5 ( type_1 . args , var_4 ) ; } return var_2 ; }
[0]: public void method_1 ( ) { double var_1 = float_1 ; double var_2 = 0.0 ; double var_3 = float_2 ; double var_4 = float_3 ; double var_5 = float_4 ; int var_6 = int_1 ; if ( var_6 > int_2 ) { var_2 = var_3 * ( var_6 - int_2 ) ; } var_2 += var_4 + ( var_5 * var_1 ) ; assertequals ( float_5, var_2, float_6 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) throws java.io.ioexception { java.lang.system.out.println ( string_1 ) ; type_3 var_3 = var_1 . method_2 ( false ) ; if ( var_3 != null ) { var_3 . method_3 ( ) ; java.lang.system.out.println ( string_2 ) ; } var_2 . method_4 ( string_3 ) ; }
[0]: public static void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) throws java.lang.exception { int var_4 = type_1. method_2 ( ). method_3 ( ) ; java.util.hashmap < java.lang.string, type_2 > var_5 = type_3. method_4 ( var_1, var_4 ) ; java.util.hashmap < java.lang.string, type_2 > var_6 = type_3. method_4 ( var_2, var_4 ) ; type_3. method_5 ( var_5, var_6, var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( java.lang.string . method_3 ( var_1 ) ) ; method_4 ( java.lang.string . method_3 ( var_2 ) ) ; method_7 ( java.lang.string . method_3 ( var_5 ) ) ; method_8 ( java.lang.string . method_3 ( var_6 ) ) ; method_9 ( java.lang.string . method_3 ( var_7 ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = method_2 ( ) ; var_3 = method_3 ( ) ; if ( ( this. var_4 )!= null ) { method_4 ( var_1 ) ; } else { method_5 ( ) ; } }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_4 ) ) ) { method_2 ( getstring ( var_5 ) ) ; method_3 ( ) ; return ; } super . method_1 ( var_1 , var_2 , data ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = method_2 ( var_1. method_3 ( ). method_4 ( ) ) ; if ( var_2 == null ) { return null ; } var_3. method_5 ( var_2. method_6 ( ), var_1. method_6 ( ) ) ; var_2. method_7 ( var_1. method_6 ( ) ) ; return method_8 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { double var_1 = float_1 ; double var_2 = 0.0 ; double var_3 = float_2 ; double var_4 = float_3 ; double var_5 = float_4 ; int var_6 = int_1 ; if ( var_6 > int_2 ) { var_2 = var_3 * ( var_6 - int_2 ) ; } var_2 += var_4 ; var_2 += var_5 * var_1 ; assertequals ( float_5 , var_2 , float_6 ) ; }
[0]: public void method_1 ( ) { type_1 < type_2 > var_1 = new type_1 < type_2 > ( ) ; type_2 var_2 = new type_2 ( ) ; var_3. method_1 ( var_2 ). method_2 ( var_1 ) ; var_1. method_3 ( ) ; type_3. method_4 ( var_1 ) ; var_1. method_5 ( var_2 ) ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) throws java.lang.exception { int var_4 = type_1 . method_2 ( ) . method_3 ( ) ; java.util.hashmap < java.lang.string , type_2 > var_5 = type_3 . method_4 ( var_1 , var_4 ) ; java.lang.system.out.println ( var_5 . size ( ) ) ; java.util.hashmap < java.lang.string , type_2 > var_6 = type_3 . method_4 ( var_2 , var_4 ) ; java.lang.system.out.println ( var_6 . size ( ) ) ; type_3 . method_5 ( var_5 , var_6 , var_3 , var_4 ) ; }
[0]: static java.util.arraylist < java.lang.integer > method_1 ( type_1 var_1, java.lang.string var_2 ) { java.util.arraylist < java.lang.integer > var_3 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { if ( var_1. get ( i ). tostring ( ). tolowercase ( ). equals ( var_2 ) ) { var_3. add ( ( i + 1 ) ) ; } } return var_3 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = method_2 ( ) ; var_3 = method_3 ( ) ; if ( ( var_4 ) != null ) { method_4 ( var_1 ) ; } else { method_5 ( ) ; } }
[0]: protected type_1 method_1 ( ) throws type_2 { type_3 var_1 = type_4. method_2 ( ) ; var_1. method_3 ( this. var_2 ) ; var_1. method_4 ( this. var_3 ) ; var_1. method_5 ( this. var_4. method_6 ( ) ) ; type_4 var_5 = null ; var_5 = var_1. method_7 ( ) ; var_5. method_8 ( ) ; return var_5. method_9 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = method_2 ( var_1 . method_3 ( ) . method_4 ( ) ) ; if ( var_2 == null ) { return null ; } var_3 . method_5 ( var_2 . method_6 ( ) , var_1 . method_6 ( ) ) ; return method_8 ( var_2 ) ; }
[0]: public static void method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.io.ioexception { java.io.file var_3 = type_1. get ( var_1, var_2, string_1, string_2 ). method_2 ( ) ; try { if ( var_3. method_3 ( ) ) { type_2. method_4 ( var_3 ) ; } } catch ( java.io.ioexception var_4 ) { type_3. error ( string_3, var_4 ) ; throw var_4 ; } }

************

************
tgt: public void method_1 ( ) { type_1 < type_2 > var_1 = new type_1 < type_2 > ( ) ; type_2 var_2 = new type_2 ( ) ; var_3 . method_1 ( var_2 ) . method_2 ( var_1 ) ; type_3 . method_4 ( var_1 ) ; var_1 . method_5 ( var_2 ) ; }
[0]: public void method_1 ( type_1 <? extends java.lang.boolean > var_1, java.lang.boolean var_2, java.lang.boolean var_3 ) { if ( var_3 ) { if (! ( method_2 ( ). contains ( var_4 ) ) ) method_2 ( ). add ( var_4 ) ; } else { method_2 ( ). method_3 ( ( c ) - > c. equals ( var_4 ) ) ; } }

************

************
tgt: private java.util.arraylist < java.lang.integer > method_1 ( type_1 var_1 , java.lang.string var_2 ) { java.util.arraylist < java.lang.integer > var_3 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { if ( var_1 . get ( i ) . tostring ( ) . tolowercase ( ) . equals ( var_2 ) ) { var_3 . add ( ( i + 1 ) ) ; } } return var_3 ; }
[0]: public java.lang.string method_1 ( java.io.inputstream var_1 ) { try { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1, string_1 ), int_1 ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = null ; while ( ( line = var_2. method_2 ( ) )!= null ) var_3. append ( ( line + ( var_1. method_3 ( ) ) ) ) ; var_4 = var_3. tostring ( ) ; } catch ( java.lang.exception var_5 ) { var_5. method_4 ( ) ; } return var_4 ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 [ ] nodes = ( ( type_1 [ ] ) ( var_1 . values ( ) . method_2 ( new type_1 [ var_1 . size ( ) ] ) ) ) ; assert ( nodes . length ) > 0 ; double var_2 = nodes [ 0 ] . var_3 ; type_1 var_4 = nodes [ 0 ] ; for ( type_1 node : nodes ) { if ( ( var_5 ) > var_2 ) { var_2 = var_5 ; var_4 = node ; } } return var_4 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; if ( ( var_1 == ( var_3 ) ) && ( var_4 ) ) { method_3 ( var_2. method_4 ( ), var_2. method_5 ( ), 0 ) ; return true ; } else if ( ( var_1 == ( var_5 ) ) && ( var_6 ) ) { method_6 ( var_2. method_4 ( ), var_2. method_5 ( ), 1 ) ; return true ; } return false ; }

************

************
tgt: protected type_1 method_1 ( ) throws type_2 { type_3 var_1 = type_4 . method_2 ( ) ; var_1 . method_3 ( this . var_2 ) ; var_1 . method_4 ( this . var_3 ) ; var_1 . method_5 ( this . var_4 . method_6 ( ) ) ; type_4 var_5 = var_1 . method_7 ( ) ; var_5 . method_8 ( ) ; return var_5 . method_9 ( ) ; }
[0]: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_2 : var_3 ) { if ( var_2. gettext ( ). tostring ( ). isempty ( ) ) continue ; type_1 var_4 = new type_1 ( ) ; var_4. settext ( var_2. gettext ( ). tostring ( ) ) ; var_1. add ( var_4 ) ; } return var_1 ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.io.ioexception { java.io.file var_3 = type_1 . get ( var_1 , var_2 , string_1 ) . method_2 ( ) ; try { if ( var_3 . method_3 ( ) ) { type_2 . method_4 ( var_3 ) ; } } catch ( java.io.ioexception var_4 ) { type_3 . error ( string_3 ) ; throw var_4 ; } }
[0]: public static java.lang.string method_1 ( type_1 var_1, java.util.list < type_2 > var_2 ) { java.lang.string type_3 = var_2. get ( var_1. method_2 ( ) ). method_3 ( ) ; if ( type_3. equals ( string_1 ) ) return string_2 ; else if ( type_3. equals ( string_3 ) ) return string_4 ; else if ( type_3. equals ( string_5 ) ) return string_6 ; return string_7 ; }

************

************
tgt: public void method_1 ( type_1 < ? extends java.lang.boolean > var_1 , java.lang.boolean var_2 , java.lang.boolean var_3 ) { if ( var_3 ) { if ( ! ( method_2 ( ) . contains ( var_4 ) ) ) { method_2 ( ) . add ( var_4 ) ; } } else { method_2 ( ) . method_3 ( ( c ) - > c . equals ( var_4 ) ) ; } }
[0]: public static java.util.hashmap < java.lang.string, java.lang.string > method_1 ( type_1 var_1 ) { java.util.hashmap < java.lang.string, java.lang.string > var_2 = null ; try { type_2 f = var_3 class. method_2 ( string_1 ) ; f. method_3 ( true ) ; var_2 = ( ( java.util.hashmap < java.lang.string, java.lang.string > ) ( f. get ( var_1 ) ) ) ; } catch ( java.lang.exception var_4 ) { } return ( var_2. size ( ) ) > 0? var_2 : null ; }

************

************
tgt: public static java.lang.string method_1 ( java.io.inputstream var_1 ) { try { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1 , string_1 ) , int_1 ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = null ; while ( ( line = var_2 . method_2 ( ) ) != null ) var_3 . append ( ( line + "\n" ) ) ; var_1 . method_3 ( ) ; var_4 = var_3 . tostring ( ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_4 ( ) ; } return var_4 ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( (! ( var_2 ) ) && ( ( ( type_1. method_2 ( ) ) - ( var_3 ) ) < int_1 ) ) return ; var_2 = false ; var_3 = type_1. method_2 ( ) ; super. method_1 ( var_1 ) ; this. method_3 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( ) ; if ( ( var_1 == ( var_3 ) ) && ( var_4 ) ) { return method_3 ( var_2 . method_4 ( ) , var_2 . method_5 ( ) , 0 ) ; } else if ( ( var_1 == ( var_5 ) ) && ( var_6 ) ) { return method_6 ( var_2 . method_4 ( ) , var_2 . method_5 ( ) , 1 ) ; } return false ; }
[0]: protected boolean method_1 ( int index, type_1 item ) { android.content.intent var_1 = new android.content.intent ( var_2, var_3 class ) ; type_2 var_4 = new type_2 ( ) ; var_4. method_2 ( string_1, ( ( type_3 ) ( item ) ). getid ( ) ) ; var_1. method_3 ( var_4 ) ; var_2. method_4 ( var_1 ) ; return true ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_2 : var_3 ) { if ( var_2 . gettext ( ) . tostring ( ) . trim ( ) . isempty ( ) ) continue ; type_1 var_4 = new type_1 ( ) ; var_4 . settext ( var_2 . gettext ( ) . tostring ( ) ) ; var_1 . add ( var_4 ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( state. method_1 ( var_1 ) ) { method_2 ( ) ; if ( method_3 ( ). method_4 ( ) ) method_3 ( ). method_5 ( ) ; type_2. method_6 ( ). method_7 ( ) ; type_2. method_6 ( ). method_8 ( ). start ( ) ; var_2. execute ( ) ; } }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 , java.util.list < type_2 > var_2 ) { java.lang.string type_3 = var_2 . get ( ( ( var_1 . method_2 ( ) ) - 1 ) ) . method_3 ( ) ; if ( type_3 . equals ( string_1 ) ) return string_2 ; else if ( type_3 . equals ( string_3 ) ) return string_4 ; else if ( type_3 . equals ( string_5 ) ) return string_6 ; return string_7 ; }
[0]: public int method_1 ( java.lang.string var_1, boolean var_2 ) { type_1 key = new type_1 ( string_1 ) ; type_2 var_3 = type_3. method_2 ( key ) ; type_4 var_4 ; if ( var_2 == true ) { var_4 = type_3. method_3 ( ) ; } else if ( var_2 == false ) { var_4 = type_3. method_4 ( ) ; } type_2 var_5 = var_6. method_5 ( var_4, var_7 ) ; int var_8 = 0 ; return var_8 ; }

************

************
tgt: public static java.util.hashmap < java.lang.string , java.lang.string > method_1 ( type_1 var_1 ) { try { type_2 f = var_3 class . method_2 ( string_1 ) ; f . method_3 ( true ) ; java.util.hashmap < java.lang.string , java.lang.string > var_2 = ( ( java.util.hashmap < java.lang.string , java.lang.string > ) ( f . get ( var_1 ) ) ) ; if ( ( var_2 != null ) && ( ( var_2 . size ( ) ) > 0 ) ) return var_2 ; } catch ( java.lang.exception var_4 ) { } return null ; }
[0]: public int method_1 ( ) { int var_1 = method_2 ( ) ; if ( var_1 <= int_1 ) { return int_1 ; } else if ( var_1 < int_2 ) { return int_2 ; } else if ( var_1 < int_3 ) { return int_3 ; } else if ( var_1 < int_4 ) { return int_4 ; } else if ( var_1 < int_5 ) { return int_5 ; } else { return int_5 ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( ! ( var_2 ) ) || ( ( ( type_1 . method_2 ( ) ) - ( var_3 ) ) < int_1 ) ) return ; var_2 = false ; var_3 = type_1 . method_2 ( ) ; super . method_1 ( var_1 ) ; this . method_3 ( var_1 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, long var_2, int var_3, int var_4, java.lang.string var_5 ) { type_1 var_6 = this. method_2 ( ) ; type_2 var_7 = new type_2 ( ) ; var_7. put ( var_8, var_1 ) ; var_7. put ( var_9, var_2 ) ; var_7. put ( var_10, var_3 ) ; long var_11 = var_6. method_3 ( var_12, null, var_7 ) ; return var_11!= ( - 1 ) ; }

************

************
tgt: protected boolean method_1 ( int index , type_1 item ) { if ( item instanceof type_3 ) { android.content.intent var_1 = new android.content.intent ( var_2 , var_3 class ) ; type_2 var_4 = new type_2 ( ) ; var_4 . method_2 ( string_1 , ( ( type_3 ) ( item ) ) . getid ( ) ) ; var_1 . method_3 ( var_4 ) ; var_2 . method_4 ( var_1 ) ; } return true ; }
[0]: public static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2, type_3 { type_4 var_2 = new type_4 ( var_1 ) ; java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( result. size ( ) ) ; i ++ ) { result. add ( type_5. method_2 ( var_2. method_3 ( i ) ) ) ; } return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( state . method_1 ( var_1 ) ) { method_2 ( ) ; if ( method_3 ( ) . method_4 ( ) ) method_3 ( ) . method_5 ( ) ; type_2 . method_6 ( ) . method_7 ( ) ; var_2 . execute ( ) ; type_2 . method_6 ( ) . method_8 ( ) . start ( ) ; } }
[0]: private type_1 method_1 ( ) { type_2 var_1 = var_2. method_2 ( string_1 ) ; if ( method_3 ( ) ) { java.lang.string var_3 = ( ( method_4 ( ) ) == ( var_4 ) )? string_2 : ( method_4 ( ) ) == ( var_5 )? string_3 : string_4 ; var_1. method_5 ( var_3 ) ; ( var_6 ) ++ ; var_1. method_6 ( string_5, ( ( method_7 ( ) ) + string_6 ) ) ; return var_1 ; } ( var_6 ) ++ ; return null ; }

************

************
tgt: public int method_1 ( java.lang.string var_1 , boolean var_2 ) { type_1 key = new type_1 ( string_1 ) ; type_2 var_7 = type_3 . method_2 ( key ) ; type_4 var_4 = type_3 . method_3 ( ) ; if ( var_2 == true ) { var_4 = type_3 . method_3 ( ) ; } else if ( var_2 == false ) { var_4 = type_3 . method_4 ( ) ; } type_2 var_5 = var_6 . method_5 ( var_4 , var_7 ) ; int var_8 = 0 ; return var_8 ; }
[0]: private float method_1 ( float x, float y, type_1 var_1, float var_2 ) { float n = 0 ; float var_3 = 1 ; float var_4 = 1 ; for ( int i = 0 ; i < ( var_5 ) ; i ++ ) { n += var_3 * ( var_1. method_2 ( ( ( var_2 * var_4 ) * x ), ( ( var_2 * var_4 ) * y ) ) ) ; var_3 /= int_1 ; var_4 += int_1 ; } return n ; } return 0 ; }

************

************
tgt: public int method_1 ( ) { int var_1 = method_2 ( ) ; if ( var_1 < int_1 ) { return int_1 ; } else if ( var_1 < int_2 ) { return int_2 ; } else if ( var_1 < int_3 ) { return int_3 ; } else if ( var_1 < int_4 ) { return int_4 ; } else if ( var_1 < int_5 ) { return int_5 ; } else { return int_5 ; } }
[0]: public void method_1 ( ) { while ( ( var_1 ) < int_1 ) { var_1 = counter ; counter += 1 ; try { java.lang.thread. method_2 ( int_2 ) ; } catch ( type_1 var_2 ) { var_2. method_3 ( ) ; } var_3. method_4 ( new type_2 ( ) { public void method_1 ( ) { var_4. method_5 ( var_1 ) ; } } ) ; } if ( ( var_1 ) >= int_1 ) return ; } }

************

************
tgt: boolean method_1 ( java.lang.string var_1 , long var_2 , int var_3 ) { type_1 var_6 = this . method_2 ( ) ; type_2 var_7 = new type_2 ( ) ; var_7 . put ( var_8 , var_1 ) ; var_7 . put ( var_9 , var_2 ) ; var_7 . put ( var_10 , var_3 ) ; long var_11 = var_6 . method_3 ( var_12 , null , var_7 ) ; return var_11 != ( - 1 ) ; }
[0]: private static void method_1 ( ) { java.lang.string response = null ; try { response = type_1. method_2 ( type_1. method_3 ( ) ) ; } catch ( java.io.ioexception var_1 ) { type_2. method_4 ( var_2, var_1. method_5 ( ) ) ; return ; } type_2. method_6 ( var_2, response ) ; try { type_1. method_7 ( response ) ; } catch ( type_3 var_1 ) { type_2. method_4 ( var_2, var_1. method_5 ( ) ) ; } }

************

************
tgt: public static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 , type_3 { type_4 var_2 = new type_4 ( var_1 ) ; java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_2 . length ( ) ) ; i ++ ) { result . add ( type_5 . method_2 ( var_2 . method_3 ( i ) ) ) ; } return result ; }
[0]: private java.lang.string method_1 ( ) { if ( this. var_1 ) { java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) var_2 += ( var_4 [ i ] ) + string_2 ; return var_2 ; } else return string_3 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_2 . method_3 ( var_1 . method_4 ( ) ) . method_5 ( string_1 ) ; type_3 . assertthat ( new type_4 ( ) . method_6 ( var_1 ) . method_7 ( var_3 ) ) . method_8 ( true ) ; }
[0]: private void method_1 ( java.lang.string [ ] var_1 ) { int var_2 = java.lang.integer.parseint ( var_1 [ int_1 ] ) ; int var_3 = java.lang.integer.parseint ( var_1 [ 1 ] ) ; int var_4 = java.lang.integer.parseint ( var_1 [ 0 ] ) ; var_5 = ( ( ( int_2 - var_2 ) + ( int_2 * ( int_3 - var_3 ) ) ) + ( ( int_4 - var_4 ) * int_5 ) ) * int_6 ; }

************

************
tgt: private type_1 method_1 ( ) { type_2 var_1 = var_2 . method_2 ( string_1 ) ; if ( method_3 ( ) ) { java.lang.string var_3 = ( ( method_4 ( ) ) == ( var_4 ) ) ? string_2 : ( method_4 ( ) ) == ( var_5 ) ? string_3 : string_4 ; var_1 . method_5 ( var_3 ) ; ( var_6 ) ++ ; return var_1 ; } ( var_6 ) ++ ; return null ; }
[0]: public static int method_1 ( type_1 var_1, type_2 var_2, int var_3 ) { int var_4 = 0 ; for ( int y = 0 ; y < ( var_2. method_2 ( ) ) ; y ++ ) { int var_5 = var_2. method_3 ( y ) ; int var_6 = var_1. method_3 ( ( y + var_3 ) ) ; if ( ( var_5 + var_6 ) == ( var_7 ) ) { var_4 ++ ; } } return var_4 ; }

************

************
tgt: private float method_1 ( float x , float y , type_1 var_1 , float var_2 ) { float n = 0 ; float var_3 = 1 ; float var_4 = 1 ; for ( int i = 0 ; i < ( var_5 ) ; i ++ ) { n += var_3 * ( var_1 . method_2 ( ( var_4 * x ) , ( var_4 * y ) ) ) ; var_3 /= int_1 ; var_4 += int_1 ; } return n ; }
[0]: protected java.util.list < type_1 > method_1 ( ) { return var_1 < type_1 > method_2 ( new type_2 ( ), new type_3 ( string_1, method_3 ( ), var_2 ), new type_4 ( ), new type_5 ( ), new type_6 ( ), new type_7 ( var_3 ), new type_8 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( ( var_1 ) < int_1 ) { var_1 = counter ; counter += 1 ; try { java.lang.thread . method_2 ( int_2 ) ; } catch ( type_1 var_2 ) { var_2 . method_3 ( ) ; } var_3 . method_4 ( new type_2 ( ) { public void method_1 ( ) { var_4 . method_5 ( var_1 ) ; } } ) ; } }
[0]: public void method_1 ( java.lang.integer i ) { float var_1 = type_1. min ( var_2. method_2 ( ), int_1 ) ; var_3. method_3 ( new type_2 ( var_1, 1.0f ) ) ; float var_4 = var_2. method_4 ( ) ; var_3. method_5 ( ) ; var_3. method_6 ( new type_2 ( ( ( var_1 / ( var_2. method_2 ( ) ) ) * var_4 ), float_1 ), var_3. method_7 ( ). method_8 ( ). getvalue ( ) ) ; }

************

************
tgt: private static void method_1 ( java.lang.string url ) { java.lang.string response = null ; try { response = type_1 . method_2 ( type_1 . method_3 ( url ) ) ; } catch ( java.io.ioexception var_1 ) { type_2 . method_4 ( var_2 , var_1 . method_5 ( ) ) ; return ; } type_2 . method_6 ( var_2 , response ) ; try { type_1 . method_7 ( response ) ; } catch ( type_3 var_1 ) { type_2 . method_4 ( var_2 , var_1 . method_5 ( ) ) ; } }
[0]: void method_1 ( type_1 var_1, type_1 var_2, type_2 var_3, java.lang.string var_4 ) { var_3. method_2 ( var_5 ) ; var_1. method_3 ( type_3. getcolor ( method_4 ( ), var_6 ) ) ; if ( var_2!= null ) { var_2. settext ( var_4 ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { if ( this . var_1 ) { java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) var_2 += ( var_4 [ i ] ) + string_2 ; return var_2 ; } else return string_3 ; }
[0]: void method_1 ( type_1 < type_2, type_3 > var_1, java.lang.object... args ) { if ( ( args [ 1 ] ) == ( type_4 ) ) { var_2. method_2 ( ) ; } else { var_2. method_3 ( ) ; } super. method_1 ( var_1 ) ; }

************

************
tgt: private void method_1 ( java.lang.string [ ] var_1 ) { int var_2 = java.lang.integer.parseint ( var_1 [ int_1 ] ) ; int var_3 = ( java.lang.integer.parseint ( var_1 [ 1 ] ) ) % int_3 ; var_5 = ( ( int_2 - var_2 ) + ( int_2 * ( int_2 - var_3 ) ) ) * int_6 ; }
[0]: public void method_1 ( type_1 item ) { if ( this. method_2 ( item ) ) throw new type_2 ( ) ; if ( ( var_1 ) == null ) { var_1 = new type_3 ( ) ; var_1. item = item ; var_2 = var_1 ; } else { var_3 = new type_3 ( ) ; var_4 = var_1 ; var_1 = var_3 ; var_1. item = item ; } count += 1 ; }

************

************
tgt: public static int method_1 ( type_1 var_1 , type_2 var_2 , int var_3 ) { int var_4 = 0 ; for ( int y = 0 ; y < ( var_2 . method_2 ( ) ) ; y ++ ) { int var_5 = var_2 . method_3 ( y ) ; int var_6 = var_1 . method_3 ( ( y + var_3 ) ) ; if ( ( var_5 + var_6 ) >= ( var_7 ) ) { var_4 ++ ; } } return var_4 ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) == null ) { method_2 ( ) ; } else { if ( ( var_2 )!= ( var_1. method_3 ( ) ) ) { method_2 ( ) ; var_2 = var_1. method_3 ( ) ; } } super. method_1 ( ) ; } }

************

************
tgt: protected java.util.list < type_1 > method_1 ( ) { return var_1 < type_1 > method_2 ( new type_2 ( ) , new type_8 ( ) , new type_3 ( string_1 , method_3 ( ) , var_2 ) , new type_4 ( ) , new type_5 ( ) , new type_6 ( ) , new type_7 ( var_3 ) , new type_8 ( ) ) ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( ) ; type_2. method_2 ( var_2. method_3 ( type_3. method_4 ( ), type_3. method_5 ( ), type_3. method_5 ( ) ) ). method_6 ( type_4. method_7 ( new java.lang.string [ ] { string_1, string_2, string_3 } ) ) ; }

************

************
tgt: public void method_1 ( java.lang.integer i ) { float var_1 = type_1 . min ( var_2 . method_2 ( ) , int_1 ) ; var_3 . method_3 ( new type_2 ( var_2 . method_2 ( ) , 1.0f ) ) ; float var_4 = var_2 . method_4 ( ) ; var_3 . method_5 ( ) ; var_3 . method_6 ( new type_2 ( ( ( var_1 / ( var_2 . method_2 ( ) ) ) * var_4 ) , float_1 ) , var_3 . method_7 ( ) . method_8 ( ) . getvalue ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if (! ( method_2 ( ) ) ) { throw new type_2 ( string_1 ) ; } else if (! ( ( var_1. intvalue ( ) ) > 0 ) ) { throw new type_3 ( string_2 ) ; } else { this. var_1 = new type_1 ( var_1 ) ; } }

************

************
tgt: void method_1 ( type_1 var_1 , type_1 var_2 , type_2 var_3 , java.lang.string var_4 ) { var_3 . method_2 ( var_5 ) ; var_1 . method_3 ( type_3 . getcolor ( method_4 ( ) , var_6 ) ) ; if ( ( var_2 != null ) && ( ! ( var_4 . isempty ( ) ) ) ) { var_2 . settext ( var_4 ) ; } }
[0]: public static void method_1 ( java.io.file var_1, java.io.file var_2 ) throws java.io.ioexception { java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( var_2 ) ; type_1 var_4 = new type_1 ( var_3 ) ; type_2. method_2 ( string_1, var_1, var_4 ) ; var_4. method_3 ( ) ; var_4. method_4 ( ) ; }

************

************
tgt: void method_1 ( type_1 < type_2 , type_3 > var_1 , java.lang.object ... args ) { if ( type_4 . equals ( args [ 1 ] ) ) { var_2 . method_2 ( ) ; } else { var_2 . method_3 ( ) ; } super . method_1 ( var_1 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = new type_2 ( this ) ; var_4 = ( ( type_3 ) ( method_3 ( var_5 ) ) ) ; var_6 = ( ( type_4 ) ( method_3 ( var_7 ) ) ) ; var_6. method_4 ( new type_5 ( this ) ) ; var_6. method_5 ( new type_6 ( var_3. method_6 ( ), this ) ) ; var_3. method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 item ) { if ( this . method_2 ( item ) ) throw new java.lang.nullpointerexception ( ) ; if ( ( var_1 ) == null ) { var_1 = new type_3 ( ) ; var_1 . item = item ; var_2 = var_1 ; } else { var_3 = new type_3 ( ) ; var_4 = var_1 ; var_1 = var_3 ; var_1 . item = item ; } count += 1 ; }
[0]: public static java.util.map < java.lang.string, java.lang.object > method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.io.ioexception { java.lang.stringbuffer url = new java.lang.stringbuffer ( var_3 ). append ( var_1 ). append ( var_2 ) ; java.net.url var_4 = new java.net.url ( url. tostring ( ) ) ; java.lang.string var_5 = type_1. method_2 ( var_4 ) ; java.util.map < java.lang.string, java.lang.object > var_6 = type_1. method_3 ( var_5 ) ; return var_6 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , string_2 , int_1 ) ; type_2 var_2 = var_3 . method_2 ( var_1 , var_4 class ) ; assertequals ( var_2 . method_3 ( ) , var_1 . getname ( ) ) ; assertequals ( var_2 . method_4 ( ) , var_1 . method_5 ( ) ) ; assertequals ( var_2 . method_6 ( ) , var_1 . method_6 ( ) ) ; }
[0]: public static double method_1 ( final double var_1, final double var_2, final double var_3 ) { double var_4 = 0 ; if ( var_3!= 0 ) { var_4 = ( var_1 - var_2 ) / var_3 ; } else { var_4 = 0 ; } return var_4 ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_2 ) == null ) || ( ( ( var_1 ) != null ) && ( ! ( var_2 . equals ( var_1 . method_3 ( ) ) ) ) ) ) { method_2 ( ) ; var_2 = var_1 . method_3 ( ) ; } super . method_1 ( ) ; }
[0]: private void method_1 ( ) { var_1 = new type_1 ( 0, float_1, float_2, ( - float_3 ), float_4, float_5, float_6 ) ; var_2 = new type_1 ( 1, float_7, 0, 0, 0, 0, float_8 ) ; var_3 = new type_1 ( int_1, float_7, float_9, ( - float_10 ), float_11, float_12, float_13 ) ; method_2 ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( ) ; type_2 . method_2 ( var_2 . method_3 ( type_3 . method_5 ( ) , type_3 . method_4 ( ) ) ) . method_6 ( new java.lang.string [ ] { string_1 , string_2 , string_3 } ) ; }
[0]: public type_1 select ( ) { int var_1 = - 1 ; do { var_1 = var_2. select ( ) ; } while ( var_1 < 0 ) ; while ( type_2. method_1 ( ) ) { } type_1 var_3 = null ; if ( var_1 == 0 ) { var_3 = new type_3 ( ) ; } if ( var_1 == 1 ) { type_4. method_2 ( ( int_1 * int_2 ) ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ! ( ( method_2 ( ) ) && ( ( var_1 . intvalue ( ) ) > 0 ) ) ) { throw new type_2 ( string_1 ) ; } else if ( ! ( ( var_1 . intvalue ( ) ) > 0 ) ) { throw new type_3 ( string_2 ) ; } else { this . var_1 = new type_1 ( var_1 ) ; } }
[0]: public static java.lang.string method_1 ( ) { java.lang.string var_1 ; try { type_1 var_2 = type_1. method_2 ( ) ; type_2 var_3 = var_2. method_3 ( ) ; var_1 = var_3. tostring ( ) ; var_1 = var_1. replaceall ( string_1, string_2 ) ; } catch ( java.lang.throwable t ) { } return var_1 ; }

************

************
tgt: public static void method_1 ( java.io.file var_1 , java.io.file var_2 ) throws java.io.ioexception { java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( var_2 ) ; type_1 var_4 = new type_1 ( var_3 ) ; type_2 . method_2 ( string_1 , var_1 , var_4 ) ; var_4 . method_3 ( ) ; var_4 . method_4 ( ) ; var_3 . method_3 ( ) ; var_3 . method_4 ( ) ; }
[0]: private void method_1 ( ) { type_1. method_2 ( ) ; if ( ( var_1 ) instanceof type_2 ) { ( ( type_2 ) ( var_1 ) ). method_3 ( ) ; } var_2. method_4 ( ) ; if ( ( var_3 )!= null ) { var_3. method_4 ( ) ; } type_3. method_5 ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = new type_2 ( this ) ; var_4 = ( ( type_3 ) ( method_3 ( var_5 ) ) ) ; var_6 = ( ( type_4 ) ( method_3 ( var_7 ) ) ) ; var_6 . method_4 ( new type_5 ( this ) ) ; var_6 . method_5 ( new type_6 ( var_3 . method_6 ( ) , this ) ) ; }
[0]: private void method_1 ( ) { if ( var_1. method_2 ( ). method_3 ( var_2. method_2 ( ) ) ) { var_1 = null ; for ( type_1 var_3 : var_4 ) { if ( ( var_3. method_4 ( ) ) >= int_1 ) { var_3. method_5 ( var_5 ) ; var_3. method_6 ( var_6 ) ; } else if ( ( var_7 ) <= int_2 ) { type_2. method_7 ( ) ; var_2. method_8 ( int_3 ) ; } else { var_8 += int_4 ; } } } } }

************

************
tgt: public static java.util.map < java.lang.string , java.lang.object > method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.io.ioexception { java.lang.stringbuilder url = new java.lang.stringbuilder ( var_3 ) . append ( var_1 ) . append ( var_2 ) ; java.net.url var_4 = new java.net.url ( url . tostring ( ) ) ; java.lang.string var_5 = type_1 . method_2 ( var_4 ) ; return type_1 . method_3 ( var_5 ) ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1. i ( var_1, string_1 ) ; android.widget.button var_2 = ( ( android.widget.button ) ( var_3. method_2 ( var_4 ) ) ) ; var_2. method_3 ( new type_2 ( ) { public void method_4 ( android.view.view var_5 ) { type_1. i ( var_1, string_2 ) ; var_6. method_5 ( ) ; } } ) ; }

************

************
tgt: public static double method_1 ( final double var_1 , final double var_2 , final double var_3 ) { double var_4 ; if ( var_3 != 0 ) { var_4 = ( var_1 - var_2 ) / var_3 ; } else { var_4 = 0 ; } return var_4 ; }
[0]: public static type_1 method_1 ( java.lang.string label ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( label ) ; var_1. add ( var_2 ) ; type_3 text = new type_3 ( ) ; var_1. add ( text ) ; return var_1 ; }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 ( 0 , float_1 , float_2 , ( - float_3 ) , float_4 , float_5 , float_6 ) ; var_2 = new type_1 ( 1 , float_7 , 0 , 0 , 0 , 0 , float_8 ) ; var_3 = new type_1 ( int_1 , float_7 , float_9 , ( - float_10 ) , float_11 , float_12 , float_13 ) ; }
[0]: public void method_1 ( java.lang.string id ) { type_1 var_1 = var_2. get ( id ) ; if ( var_2. method_2 ( var_1. method_3 ( ) ) ) { type_1 var_3 = var_2. remove ( var_1. method_3 ( ) ) ; for ( type_1 p : var_1. method_4 ( ) ) { p. method_5 ( var_3 ) ; } var_4. add ( var_3 ) ; this. method_6 ( var_3 ) ; } } }

************

************
tgt: public type_1 select ( ) { int var_1 = - 1 ; do { var_1 = var_2 . select ( ) ; } while ( var_1 < 0 ) ; while ( type_2 . method_1 ( ) ) { } type_1 var_3 = null ; if ( var_1 == 0 ) { var_3 = new type_3 ( ) ; } if ( var_1 == 1 ) { } return var_3 ; }
[0]: public void method_1 ( type_1 event ) { if ( ( var_1 )!= null ) { int id = java.lang.integer.parseint ( var_1 ) ; var_2. method_2 ( id, var_3, var_4 ) ; var_5. method_2 ( id, var_6. getid ( ) ) ; } }

************

************
tgt: public static java.lang.string method_1 ( ) { java.lang.string var_1 = null ; type_1 var_2 = type_1 . method_2 ( ) ; type_2 var_3 = var_2 . method_3 ( ) ; var_1 = var_3 . tostring ( ) ; var_1 = var_1 . replaceall ( string_1 , string_2 ) ; return var_1 ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, int var_4, int var_5 ) throws type_1 { if ( ( ( var_6 ) ++ ) > 0 ) { super. method_1 ( var_1, var_2, var_3, var_4, var_5 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( ) ; if ( ( var_1 ) instanceof type_2 ) { ( ( type_2 ) ( var_1 ) ) . method_3 ( ) ; } var_2 . method_4 ( ) ; var_2 = null ; if ( ( var_3 ) != null ) { var_3 . method_4 ( ) ; var_3 = null ; } type_3 . method_5 ( ) ; }
[0]: public void method_1 ( type_1 < type_2 > response ) { type_2 result = response. method_2 ( ) ; if ( ( string_1. equals ( result. method_3 ( ) ) ) && (! ( string_2. method_4 ( result. method_5 ( ) ) ) ) ) { if ( var_1!= null ) { var_1. method_6 ( true ) ; } } }

************

************
tgt: private void method_1 ( ) { if ( var_1 . method_2 ( ) . method_3 ( var_2 . method_2 ( ) ) ) { var_1 = null ; for ( type_1 var_3 : var_4 ) { if ( ( var_3 . method_4 ( ) ) >= int_1 ) { var_3 . method_5 ( var_5 ) ; var_3 . method_6 ( var_6 ) ; } else if ( ( var_7 ) < int_3 ) { type_2 . method_7 ( ) ; var_2 . method_8 ( int_3 ) ; } else { var_8 += int_4 ; } } } }
[0]: public void method_1 ( ) { type_1 message = new type_1 ( string_1, string_2 ) ; var_1. method_2 ( message ) ; java.util.list < type_1 > var_2 = var_1. method_3 ( string_1 ) ; assertnotnull ( var_2 ) ; method_4 ( var_2. isempty ( ) ) ; assertequals ( 1, var_2. size ( ) ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; type_1 . i ( var_1 , string_1 ) ; android.widget.button var_2 = ( ( android.widget.button ) ( var_3 . method_2 ( var_4 ) ) ) ; var_2 . setenabled ( false ) ; var_2 . method_3 ( new type_2 ( ) { public void method_4 ( android.view.view var_5 ) { type_1 . i ( var_1 , string_2 ) ; var_6 . method_5 ( ) ; } } ) ; }
[0]: public void method_1 ( android.view.view view ) { android.content.intent var_1 = new android.content.intent ( var_2, var_3 class ) ; var_1. method_2 ( var_4, var_5. id ) ; var_1. method_2 ( var_6, type_1. method_3 ( var_2 ) ) ; var_1. method_2 ( var_7, var_8 ) ; var_2. method_4 ( var_1 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string label , int length ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( label ) ; var_1 . add ( var_2 ) ; type_3 text = new type_3 ( length ) ; var_1 . add ( text ) ; return var_1 ; }
[0]: public int count ( ) throws type_1 { type_2 var_1 = method_1 ( ) ; if ( var_1 == null ) { throw new type_1 ( string_1 ) ; } int count = 0 ; if ( var_1. method_2 ( ) ) count = var_1. getint ( 1 ) ; method_3 ( var_1 ) ; return count ; }

************

************
tgt: public void method_1 ( java.lang.string id ) { type_1 var_1 = var_2 . get ( id ) ; if ( ( var_1 != null ) && ( var_2 . method_2 ( var_1 . method_3 ( ) ) ) ) { type_1 var_3 = var_2 . remove ( var_1 . method_3 ( ) ) ; for ( type_1 p : var_1 . method_4 ( ) ) { p . method_5 ( var_3 ) ; } var_4 . add ( var_3 ) ; this . method_6 ( var_3 ) ; } }
[0]: private void method_1 ( ) { type_1. method_2 ( ) ; if ( var_1. equals ( getstring ( var_2 ) ) ) { java.lang.string var_3 = type_2. method_3 ( ). method_4 ( ) ; type_1. method_5 ( var_4, this ) ; type_2. method_3 ( ). method_6 ( var_3 ) ; method_7 ( ) ; } else if ( var_1. equals ( getstring ( var_5 ) ) ) { type_1. method_8 ( this ) ; } else { method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( var_1 ) != null ) { int id = java.lang.integer.parseint ( var_1 ) ; var_5 . method_2 ( id , var_6 . getid ( ) ) ; var_2 . method_2 ( id , var_3 , var_4 ) ; } }
[0]: public void init ( ) { method_1 ( ) ; var_1. start ( ) ; var_2. start ( ) ; method_2 ( var_3 ) ; method_2 ( var_4 ) ; method_2 ( var_4 ) ; synchronized ( var_1 ) { var_1. method_3 ( ) ; } var_5. method_4 ( ) ; }

************

************
tgt: void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , long var_4 , int var_5 ) throws type_1 { if ( ( ( var_6 ) ++ ) > 0 ) { super . method_1 ( var_1 , var_2 , var_3 , var_4 , var_5 ) ; } }
[0]: public static java.lang.string method_1 ( long var_1, int var_2, int var_3 ) { java.util.scanner var_4 = new java.util.scanner ( var_5 ) ; java.lang.system.out.println ( string_1 ) ; java.lang.string var_6 = var_4. method_2 ( ) ; if ( var_6 == string_2 ) { if ( var_2 == var_3 ) { return string_3 ; } else { return string_4 ; } } else if ( var_6 == string_5 ) { if ( var_1 == var_3 ) { return string_3 ; } else { return string_6 ; } } } }

************

************
tgt: public void method_1 ( type_1 < type_2 > response ) { type_2 result = response . method_2 ( ) ; if ( string_1 . equals ( result . method_3 ( ) ) ) { if ( string_2 . method_4 ( result . method_5 ( ) ) ) { if ( var_1 != null ) { var_1 . method_6 ( false ) ; } } else { if ( var_1 != null ) { var_1 . method_6 ( true ) ; } } } }
[0]: protected void method_1 ( java.lang.string var_1, java.lang.string var_2, int status, byte [ ] value ) { android.content.intent intent = new android.content.intent ( var_3 ) ; intent. method_2 ( var_4, var_1 ) ; intent. method_2 ( var_5, var_2 ) ; intent. method_2 ( var_6, status ) ; intent. method_2 ( var_7, value ) ; method_3 ( intent ) ; method_4 ( var_1, var_8, true ) ; }

************

************
tgt: public void method_1 ( ) { type_1 message = new type_1 ( string_1 , string_2 ) ; var_1 . method_2 ( message ) ; java.util.list < type_1 > var_2 = var_1 . method_3 ( string_1 ) ; assertnotnull ( var_2 ) ; method_4 ( var_2 . isempty ( ) ) ; assertequals ( 1 , var_2 . size ( ) ) ; assertequals ( 1 , var_2 . size ( ) ) ; }
[0]: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : var_3 ) { var_1. add ( new type_1 ( var_2, method_2 ( var_2 ) ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view view ) { android.content.intent var_1 = new android.content.intent ( var_2 , var_3 class ) ; var_1 . method_2 ( var_4 , var_5 . id ) ; var_1 . method_2 ( var_6 , type_1 . method_3 ( var_2 ) ) ; var_1 . method_2 ( var_7 , true ) ; var_2 . method_4 ( var_1 ) ; }
[0]: protected void method_1 ( ) throws java.lang.exception { var_1 = ( ( type_1 ) ( method_2 ( ). get ( var_2 class. getname ( ) ) ) ) ; var_1. method_3 ( this ) ; type_2 var_3 = method_2 ( ). method_4 ( ) ; method_5 ( new type_3 ( ) ) ; var_4 = new type_4 ( var_1. method_6 ( ), var_3 ) ; add ( var_4, var_5 ) ; var_6. method_7 ( string_1 ) ; }

************

************
tgt: int count ( ) throws type_1 { type_2 var_1 = null ; int count = 0 ; try { var_1 = method_1 ( ) ; if ( var_1 == null ) { throw new type_1 ( string_1 ) ; } if ( var_1 . method_2 ( ) ) count = var_1 . getint ( 1 ) ; } finally { method_3 ( var_1 ) ; } return count ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; final java.util.list < type_2 > var_2 = var_3. method_2 ( var_1 ) ; java.util.list < type_3 > var_4 = new java.util.arraylist < type_3 > ( ) { { add ( new type_3 ( ) ) ; } } ; var_3. method_3 ( var_4 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( ) ; if ( var_1 . equals ( getstring ( var_2 ) ) ) { java.lang.string var_3 = type_2 . method_3 ( ) . method_4 ( ) ; type_1 . method_5 ( var_4 , this ) ; type_2 . method_3 ( ) . method_6 ( var_3 ) ; method_7 ( ) ; } else if ( var_1 . equals ( getstring ( var_5 ) ) ) { type_1 . method_8 ( this ) ; } else { type_1 . start ( this ) ; method_7 ( ) ; } }
[0]: private type_1 method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { type_1 result = new type_1 ( ) ; int value = var_1. method_2 ( ) ; var_2 = method_3 ( value ) ; while ( ( value = var_1. method_2 ( ) )!= ( - 1 ) ) { if ( method_3 ( value ) ) { ( var_3 ) -- ; } } return result ; }

************

************
tgt: public void init ( ) { method_1 ( ) ; var_1 . start ( ) ; var_2 . start ( ) ; method_2 ( var_3 ) ; method_2 ( var_4 ) ; synchronized ( var_1 ) { var_1 . method_3 ( ) ; } var_5 . method_4 ( ) ; }
[0]: private int method_1 ( int position, type_1 var_1 ) { switch ( var_1 ) { case var_2 : case var_3 : return ( ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ) + ( ( int ) ( float_1 * ( var_4 ) ) ) ; case var_5 : return ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ; default : return ( method_2 ( position ) ) * ( var_4 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( long var_1 , int var_2 , int var_3 ) { java.util.scanner var_4 = new java.util.scanner ( var_5 ) ; java.lang.system.out.println ( string_1 ) ; java.lang.string var_6 = var_4 . method_2 ( ) ; if ( var_6 == string_2 ) { if ( var_2 == var_3 ) { return string_3 ; } else { return string_4 ; } } else if ( var_6 == string_5 ) { if ( var_1 == var_3 ) { return string_3 ; } else { return string_6 ; } } return null ; }
[0]: protected void init ( ) { type_1. method_1 ( new type_2 ( this, 1, var_1 ), string_1 ) ; type_1. method_1 ( new type_2 ( this, 1, var_2 ), string_2 ) ; type_1. method_1 ( new type_2 ( this, 1, var_3 ), string_3 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , int status , byte [ ] value ) { android.content.intent intent = new android.content.intent ( var_3 ) ; intent . method_2 ( var_4 , var_1 ) ; intent . method_2 ( var_5 , var_2 ) ; intent . method_2 ( var_6 , status ) ; intent . method_2 ( var_7 , value ) ; method_3 ( intent ) ; method_4 ( var_1 , var_8 , true ) ; }
[0]: public static void method_1 ( ) { java.lang.string var_1 = var_2. get ( string_1 ) ; var_1 = string_2 ; java.lang.string var_3 = ( string_3 + var_1 ) + string_4 ; java.util.list < type_1 > var_4 = type_2. method_2 ( ). method_3 ( var_3 ). method_4 ( ) ; method_5 ( var_4 ) ; }

************

************
tgt: private java.util.hashmap < java.lang.string , type_1 > method_1 ( ) { java.util.hashmap < java.lang.string , type_1 > var_1 = new java.util.hashmap < > ( ) ; for ( java.lang.string var_2 : var_3 ) { var_1 . put ( var_2 , new type_1 ( var_2 , method_2 ( var_2 ) ) ) ; } return var_1 ; }
[0]: public void method_1 ( android.view.view view ) { java.lang.string var_1 = ( ( type_1 ) ( view ) ). gettext ( ). tostring ( ) ; if ( var_1. equals ( getstring ( var_2 ) ) ) { var_3. show ( ) ; var_4. method_2 ( ) ; } if ( var_1. equals ( getstring ( var_5 ) ) ) { } }

************

************
tgt: protected void method_1 ( ) throws java.lang.exception { var_1 = ( ( type_1 ) ( method_2 ( ) . get ( var_2 class . getname ( ) ) ) ) ; var_1 . method_3 ( this ) ; method_5 ( new type_3 ( ) ) ; var_4 = new type_4 ( method_2 ( ) ) ; add ( var_4 , var_5 ) ; var_6 . method_7 ( string_1 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = method_2 ( ) ; java.lang.system.out.println ( string_2 ) ; type_3 p = new type_3 ( method_2 ( ) ) ; java.lang.system.out.println ( string_3 ) ; boolean var_3 = var_4. method_3 ( ). equals ( string_4 ) ; type_1 var_5 = var_6. method_4 ( new type_4 ( var_2, p. x, p. y, var_3 ) ) ; return var_5 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; final java.util.list < type_2 > var_2 = var_3 . method_2 ( var_1 , false ) ; java.util.list < type_3 > var_4 = new java.util.arraylist < type_3 > ( ) { { add ( new type_3 ( ) ) ; } } ; var_3 . method_3 ( var_4 ) ; }
[0]: public void method_1 ( ) { if ( ( var_1. gettext ( ). length ( ) ) > 0 ) { if ( ( var_2. method_2 ( ). length ) > 0 ) { java.lang.string [ ] var_3 = var_2. method_2 ( ) ; var_2. method_3 ( new type_1 ( var_1. gettext ( ), var_3 ) ) ; } else { var_2. method_3 ( new type_1 ( var_1. gettext ( ), true ) ) ; } var_1. settext ( string_1 ) ; } } }

************

************
tgt: private type_1 method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { type_1 result = new type_1 ( ) ; var_3 = - 1 ; int value = var_1 . method_2 ( ) ; var_2 = method_3 ( value ) ; while ( ( value = var_1 . method_2 ( ) ) != ( - 1 ) ) { if ( method_3 ( value ) ) { ( var_3 ) -- ; } } return result ; }
[0]: private void method_1 ( ) { try { type_1 var_1 = type_2. method_2 ( var_2 ) ; type_3 var_3 = type_4. method_3 ( var_1 ) ; type_5 var_4 = new type_5 ( this, true, var_3 ) ; var_4. method_4 ( this ) ; var_4. method_5 ( true ) ; } catch ( type_6 var_5 ) { type_7. method_6 ( var_5. method_7 ( ) ) ; type_8. method_8 ( this, type_9. method_9 ( var_6, var_5. method_10 ( ) ), string_1, var_7 ) ; } }

************

************
tgt: public int method_1 ( int position , type_1 var_1 ) { switch ( var_1 ) { case var_2 : case var_3 : return ( ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ) + ( ( int ) ( float_1 * ( var_4 ) ) ) ; case var_5 : return ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ; default : return ( method_2 ( position ) ) * ( var_4 ) ; } }
[0]: public int method_1 ( int x, int [ ] data, int start, int end ) { if ( end > start ) for ( int i = start ; i < end ; i ++ ) if ( ( data [ i ] ) == x ) return i ; return - 1 ; }

************

************
tgt: protected void init ( ) { type_1 . method_1 ( new type_2 ( this , 1 , var_1 ) , string_1 ) ; type_1 . method_1 ( new type_2 ( this , 1 , var_2 ) , string_3 ) ; type_1 . method_1 ( new type_2 ( this , 1 , var_3 ) , string_2 ) ; }
[0]: public void method_1 ( type_1 < type_2 > node ) { if ( node == ( var_1 ) ) { return ; } method_1 ( var_2 ) ; java.lang.system.out.print ( ( ( ( ( ( ( ( var_3 ) == ( var_4 )? string_1 : string_2 ) + string_3 ) + ( node. key ) ) + string_4 ) + ( var_5. key ) ) + string_4 ) + ( var_6 ) ) ) ; method_1 ( var_6 ) ; }

************

************
tgt: public static void method_1 ( ) { java.lang.string var_1 = var_2 . get ( string_1 ) ; java.lang.string var_3 = ( string_3 + var_1 ) + string_4 ; java.util.list < type_1 > var_4 = type_2 . method_2 ( ) . method_3 ( var_3 ) . method_4 ( ) ; method_5 ( var_4 ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1 { int index = type_2. method_2 ( method_3 ( ) ) ; int var_2 = java.lang.integer. method_4 ( type_3. words ( var_1, 1, index, 1 ) ) ; java.lang.string var_3 = type_2. method_5 ( ) ; method_6 ( char_1, var_2 ). method_7 ( var_3 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( android.view.view view ) { java.lang.string var_1 = ( ( type_1 ) ( view ) ) . gettext ( ) . tostring ( ) ; if ( var_1 . equals ( getstring ( var_2 ) ) ) { var_3 . show ( ) ; var_4 . method_2 ( ) ; } }
[0]: private void method_1 ( ) { double param = ( ( double ) ( var_1 ) ) / ( ( double ) ( var_2 ) ) ; for ( type_1 size : type_1. values ( ) ) { if ( ( param > ( ( size. method_2 ( ) ) - float_1 ) ) && ( param < ( ( size. method_2 ( ) ) + float_1 ) ) ) { method_3 ( size. method_4 ( ), size. method_5 ( ) ) ; } } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = method_2 ( ) ; java.lang.system.out.println ( string_2 ) ; type_3 p = new type_3 ( method_2 ( ) ) ; java.lang.system.out.println ( string_3 ) ; boolean var_3 = var_4 . method_3 ( ) . equals ( string_4 ) ; type_1 var_5 = var_6 . method_4 ( new type_4 ( var_2 , p . x , p . y , var_3 ) ) ; java.lang.system.out.println ( var_5 . tostring ( ) ) ; return var_5 ; }
[0]: private void method_1 ( ) { int count = 0 ; var_1 = 0 ; for ( var_1 = 0 ; ( var_1 ) < ( var_2. length ) ; ( var_1 ) ++ ) { count += var_2 [ var_1 ] ; if ( count >= ( var_3 ) ) { break ; } } for ( var_4 = var_1 ; ( var_4 ) < ( var_2. length ) ; ( var_4 ) ++ ) { count += var_2 [ var_4 ] ; if ( count >= ( var_5 ) ) { break ; } } } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . gettext ( ) . length ( ) ) > 0 ) { if ( ( var_2 . method_2 ( ) ) != null ) { java.lang.string [ ] var_3 = var_2 . method_2 ( ) ; var_2 . method_3 ( new type_1 ( var_1 . gettext ( ) , var_3 ) ) ; } else { var_2 . method_3 ( new type_1 ( var_1 . gettext ( ) , true ) ) ; } var_1 . settext ( string_1 ) ; } }
[0]: private void method_1 ( type_1 p, java.lang.string id, java.lang.string name, java.lang.string name, java.lang.string var_1, int step, type_2 b ) { var_2 = p ; var_3 = id ; var_4 = name ; var_5 = var_1 ; var_6 = step ; if ( b!= null ) { var_7. add ( b ) ; var_6 += 1 ; } if ( ( var_6 ) <= int_1 ) p. method_2 ( method_3 ( ( string_1 + ( var_6 ) ) ) ) ; else method_4 ( ) ; }

************

************
tgt: private void method_1 ( ) { try { type_1 var_1 = type_2 . method_2 ( var_2 ) ; type_3 var_3 = type_4 . method_3 ( var_1 ) ; type_5 var_4 = new type_5 ( this , false , var_3 ) ; var_4 . method_4 ( this ) ; var_4 . method_5 ( true ) ; } catch ( type_6 var_5 ) { type_7 . method_6 ( var_5 . method_7 ( ) ) ; type_8 . method_8 ( this , type_9 . method_9 ( var_6 , var_5 . method_10 ( ) ) , string_1 , var_7 ) ; } }
[0]: public void method_1 ( ) { var_1 = type_1. method_2 ( ) ; var_1. start ( ) ; var_2 = type_2. method_2 ( ) ; var_3 = type_3. method_2 ( ) ; var_4 = new type_4 ( var_5 ) ; var_6 = new type_5 ( ) ; var_7. add ( var_3 ) ; var_7. add ( var_2 ) ; var_7. add ( var_6 ) ; }

************

************
tgt: public int method_1 ( int x , int [ ] data , int start , int end ) { if ( end > start ) for ( int i = start ; i <= end ; i ++ ) if ( ( data [ i ] ) == x ) return i ; return - 1 ; }
[0]: protected void method_1 ( type_1 var_1, type_2 var_2, type_3 context ) throws java.io.ioexception, type_4 { java.lang.string var_3 = var_2. tostring ( ) ; java.io.inputstream var_4 = type_5. method_2 ( var_3 ) ; java.util.hashset < java.lang.string > var_5 = this. method_3 ( var_4 ). iterator ( ) ; for ( java.lang.string var_6 = var_5. method_4 ( ) ; var_5. method_5 ( ) ; var_6 = var_5. method_4 ( ) ) { context. method_6 ( var_6, var_1, var_5. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 > node ) { if ( node != null ) { method_1 ( var_2 ) ; java.lang.system.out.print ( ( ( ( ( ( ( ( var_3 ) == ( var_4 ) ? string_1 : string_2 ) + string_3 ) + ( node . key ) ) + string_4 ) + ( var_5 . key ) ) + "\n" ) ) ; method_1 ( var_6 ) ; } }
[0]: public static type_1 method_1 ( java.lang.string path, double var_1, double var_2, double var_3, double var_4, double var_5 ) { type_1 context = type_2. method_2 ( var_1, var_2, var_3, var_4, var_5 ) ; try { context. method_3 ( path ) ; } catch ( java.io.ioexception var_6 ) { var_6. method_4 ( ) ; } return context ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1 { int index = type_2 . method_2 ( method_3 ( ) ) ; int var_2 = java.lang.integer . method_4 ( type_3 . words ( var_1 , 1 , index , index ) ) ; java.lang.string var_3 = type_2 . method_5 ( ) ; method_6 ( char_1 , var_2 ) . method_7 ( var_3 ) ; return "0" ; }
[0]: public boolean method_1 ( type_1 var_1, int var_2 ) { if ( var_2!= 1 ) return false ; type_1 var_3 = var_1. method_2 ( var_4 ) ; if ( ( var_5 )!= null ) var_5. method_3 ( ) ; var_5 = var_6 new type_2 ( var_3, var_3, ( 1 < < int_1 ) ) ; var_7 = var_3 ; var_8 = true ; var_9 = var_10. method_4 ( var_11 ) ; return true ; }

************

************
tgt: private void method_1 ( ) { double param = ( ( double ) ( var_1 ) ) / ( ( double ) ( var_2 ) ) ; for ( type_1 size : type_1 . values ( ) ) { if ( ( param > ( ( size . method_2 ( ) ) - float_1 ) ) && ( param < ( ( size . method_2 ( ) ) + float_1 ) ) ) { method_3 ( size . method_4 ( ) , size . method_5 ( ) ) ; break ; } } }
[0]: protected void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { android.content.intent intent = new android.content.intent ( this, var_3 class ) ; intent. method_2 ( var_4, var_5 ) ; intent. method_2 ( var_6, var_7 ) ; intent. method_2 ( var_8, var_1 ) ; intent. method_2 ( var_9, var_2 ) ; method_3 ( intent ) ; }

************

************
tgt: private void method_1 ( ) { int count = 0 ; var_1 = 0 ; for ( var_1 = 0 ; ( ( var_1 ) < ( var_2 . length ) ) && ( count < ( var_3 ) ) ; ( var_1 ) ++ ) { count += var_2 [ var_1 ] ; } for ( var_4 = var_1 ; ( ( var_4 ) < ( var_2 . length ) ) && ( count < ( var_5 ) ) ; ( var_4 ) ++ ) { count += var_2 [ var_4 ] ; } }
[0]: public static java.lang.string method_1 ( java.lang.string url, java.lang.string parameters, java.util.map < java.lang.string, java.lang.string > var_1, java.lang.string var_2 ) throws java.io.ioexception { try { type_1 response = type_2. method_2 ( url, parameters, var_1, var_2 ) ; return type_2. method_3 ( response ) ; } catch ( java.io.ioexception var_3 ) { java.lang.string var_4 = java.lang.string.format ( string_1, url, parameters ) ; var_3. method_4 ( ) ; throw var_3 ; } }

************

************
tgt: public void method_1 ( type_1 p , java.lang.string id , java.lang.string name , java.lang.string var_1 , int step , type_2 b ) { var_2 = p ; var_3 = id ; var_4 = name ; var_5 = var_1 ; var_6 = step ; if ( b != null ) { var_7 . add ( b ) ; var_6 += 1 ; } if ( ( var_6 ) <= int_1 ) p . method_2 ( method_3 ( ( string_1 + ( var_6 ) ) ) ) ; else method_4 ( ) ; }
[0]: public static java.util.calendar method_1 ( int var_1, int var_2, int var_3 ) { java.util.calendar var_4 = java.util.calendar.getinstance ( ) ; var_4. set ( var_5, var_3 ) ; var_4. set ( var_6, ( var_2 - 1 ) ) ; var_4. set ( var_7, var_1 ) ; var_4. gettime ( ) ; return var_4 ; }

************

************
tgt: public void method_1 ( ) { var_1 = type_1 . method_2 ( ) ; var_1 . start ( ) ; var_2 = type_2 . method_2 ( ) ; var_3 = type_3 . method_2 ( ) ; var_4 = new type_4 ( var_5 ) ; var_6 = new type_5 ( ) ; var_7 . add ( var_3 ) ; var_7 . add ( var_2 ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, java.util.list < type_3 > var_3, type_4 var_4 ) { try { type_5 var_5 = var_1. method_2 ( ) ; var_5. method_3 ( string_1, item ) ; var_5. method_3 ( string_2, var_4 ) ; var_2. method_4 ( string_3 ) ; } catch ( java.io.ioexception var_6 ) { } }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 var_2 , type_3 context ) throws java.io.ioexception , type_4 { java.lang.string var_3 = var_2 . tostring ( ) ; java.io.inputstream var_4 = method_2 ( var_3 ) ; java.util.hashset < java.lang.string > var_5 = method_3 ( var_4 ) . iterator ( ) ; for ( java.lang.string var_6 = var_5 . method_4 ( ) ; var_5 . method_5 ( ) ; var_6 = var_5 . method_4 ( ) ) { context . method_6 ( new type_2 ( var_6 ) , null ) ; } }
[0]: public void method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = method_2 ( ) ; method_3 ( new java.util.arraylist < java.lang.string > ( ) ) ; for ( java.lang.string str : type_1. method_4 ( ). method_5 ( var_1 ) ) { type_2. method_4 ( ). method_6 ( this, str, false ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string path , float var_1 , float var_2 , float var_3 , float var_4 , float var_5 ) { type_1 context = type_2 . method_2 ( var_1 , var_2 , var_3 , var_4 , var_5 ) ; try { context . method_3 ( path ) ; } catch ( java.io.ioexception var_6 ) { var_6 . method_4 ( ) ; } return context ; }
[0]: public void update ( ) throws java.io.ioexception { var_1. method_1 ( string_1 ) ; response. method_1 ( string_2 ) ; if ( var_2. equals ( var_3 ) ) { response. method_2 ( ). method_3 ( var_4 ) ; } else { response. method_2 ( ). method_3 ( string_3 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int var_2 ) { if ( var_2 != 1 ) return false ; if ( ( var_9 ) != null ) var_9 . remove ( ) ; type_1 var_3 = var_1 . method_2 ( var_4 ) ; if ( ( var_5 ) != null ) var_5 . method_3 ( ) ; var_5 = var_6 new type_2 ( var_3 , var_3 , ( 1 < < int_1 ) ) ; var_7 = var_3 ; var_8 = true ; var_9 = var_10 . method_4 ( var_11 ) ; return true ; }
[0]: public static void method_1 ( int var_1, int value ) { if ( ( var_2 ) == null ) { var_2 = new int [ ] { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ; } var_2 [ var_1 ] = value ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 , int var_2 ) { android.content.intent intent = new android.content.intent ( this , var_3 class ) ; intent . method_2 ( var_4 , var_5 ) ; intent . method_2 ( var_6 , var_7 ) ; intent . method_2 ( var_8 , var_1 ) ; intent . method_2 ( var_9 , var_2 ) ; method_3 ( intent ) ; }
[0]: private void method_1 ( ) throws java.lang.exception { java.io.inputstream var_1 = getclass ( ). method_2 ( ). method_3 ( var_2 ) ; java.util.properties var_3 = new java.util.properties ( ) ; var_3. method_4 ( var_1 ) ; var_4 = var_3. method_5 ( string_1 ) ; var_5 = var_3. method_5 ( string_2 ) ; var_6 = var_3. method_5 ( string_3 ) ; var_7 = ( ( ( ( var_4 ) + string_4 ) + ( var_5 ) ) + string_4 ) + ( var_6 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string url , java.lang.string parameters , java.util.map < java.lang.string , java.lang.string > var_1 , java.lang.string var_2 ) throws java.io.ioexception { try { type_1 response = type_2 . method_2 ( url , parameters , var_1 , var_2 ) ; return type_2 . method_3 ( response ) ; } catch ( java.io.ioexception var_3 ) { java.lang.string var_4 = java.lang.string.format ( string_1 , url , parameters ) ; throw var_3 ; } }
[0]: private void method_1 ( ) { var_1 = type_1. method_2 ( var_2, var_3 ) ; var_4 = type_1. method_2 ( var_5, var_3 ) ; var_6 = type_1. method_2 ( var_7, var_8 ) ; var_9 = type_1. method_3 ( var_10, var_8 ) ; var_11 = type_1. method_4 ( ( ( short ) ( 1 ) ), var_8 ) ; var_12 = true ; }

************

************
tgt: public static java.util.calendar method_1 ( int var_1 , int var_2 , int var_3 ) { java.util.calendar var_4 = java.util.calendar.getinstance ( ) ; var_4 . set ( var_5 , var_3 ) ; var_4 . set ( var_6 , var_2 ) ; var_4 . set ( var_7 , var_1 ) ; var_4 . gettime ( ) ; return var_4 ; }
[0]: private type_1 method_1 ( final java.lang.string var_1, final type_2 var_2, final java.lang.integer var_3, final java.lang.boolean var_4 ) { var_5. put ( 0, int_1 ) ; final type_3 var_6 = new type_3 ( int_2, var_3, new type_4 ( string_1 ), null, null, null, var_7, var_8, var_9, var_4 ) ; final type_1 var_10 = new type_1 ( var_1, null, var_11, var_6, var_2, null, null ) ; var_10. method_2 ( var_12 ) ; return var_10 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 , java.util.list < type_3 > var_3 , type_4 var_4 ) { try { type_5 var_5 = var_1 . method_2 ( ) ; var_5 . method_3 ( string_1 , var_3 ) ; var_5 . method_3 ( string_2 , var_4 ) ; var_2 . method_4 ( string_3 ) ; } catch ( java.io.ioexception var_6 ) { } }
[0]: private void method_1 ( ) { java.util.regex.matcher var_1 = var_2. method_2 ( var_3 ) ; java.lang.string var_4 = string_1 ; while ( var_1. method_3 ( ) ) { var_4 = var_1. method_4 ( ) ; if ( ( (! ( type_1. contains ( var_4 ) ) ) && ( type_2. method_5 ( var_4 ) ) ) && ( method_6 ( var_4 ) ) ) { type_1. add ( var_4 ) ; } } }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = method_2 ( ) ; method_3 ( new java.util.arraylist < java.lang.string > ( ) ) ; for ( java.lang.string str : type_1 . method_4 ( ) . method_5 ( var_1 ) ) { type_2 . method_4 ( ) . method_6 ( this , str , false , true , false ) ; } }
[0]: protected void method_1 ( java.lang.boolean b ) { super. method_1 ( b ) ; if ( b ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } } else { type_1. method_3 ( getactivity ( ), var_2, var_3 ). show ( ) ; } }

************

************
tgt: public void update ( ) throws java.io.ioexception { var_1 . method_1 ( string_1 ) ; response . method_1 ( string_2 ) ; if ( var_2 . equals ( var_3 ) ) { java.lang.system.out.println ( var_4 ) ; response . method_2 ( ) . method_3 ( var_4 ) ; } else { response . method_2 ( ) . method_3 ( var_4 ) ; } }
[0]: public boolean delete ( type_1 key ) { method_1 ( ) ; final long var_1 = method_2 ( ) ; final type_2 var_2 = method_3 ( key, var_1, false ) ; if ( var_2 == null ) { method_4 ( var_2 ) ; var_3. remove ( key, var_1 ) ; } else { return ( method_5 ( key, var_2, var_1 ) )!= null ; } return false ; }

************

************
tgt: public static void method_1 ( int var_1 , int value ) { if ( ( var_2 ) == null ) { var_2 = new int [ ] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ; } var_2 [ var_1 ] = value ; }
[0]: public type_1 method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( var_3, type_2. method_3 ( new type_3 ( string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1, string_1 ) ) ) ; return type_1. method_4 ( var_1 ). build ( ) ; }

************

************
tgt: private void method_1 ( ) throws java.lang.exception { try ( java.io.inputstream var_1 = getclass ( ) . method_2 ( ) . method_3 ( var_2 ) ) { java.util.properties var_3 = new java.util.properties ( ) ; var_3 . method_4 ( var_1 ) ; var_4 = var_3 . method_5 ( string_1 ) ; var_5 = var_3 . method_5 ( string_2 ) ; var_6 = var_3 . method_5 ( string_3 ) ; var_7 = ( ( ( ( var_4 ) + string_4 ) + ( var_5 ) ) + string_4 ) + ( var_6 ) ; } }
[0]: public void remove ( java.lang.string key ) { type_1 var_1 = var_2. remove ( key ) ; if ( ( ( var_1. gettype ( ). method_1 ( ) ) == ( var_3 ) ) && (! ( key. contains ( string_1 ) ) ) ) { ( var_4 ) -- ; } }

************

************
tgt: private void method_1 ( ) { var_4 = type_1 . method_2 ( var_5 , var_3 ) ; var_6 = type_1 . method_2 ( var_7 , var_8 ) ; var_9 = type_1 . method_3 ( var_10 , var_8 ) ; var_11 = type_1 . method_4 ( ( ( short ) ( 1 ) ) , var_8 ) ; var_12 = true ; }
[0]: public java.lang.string [ ] method_1 ( java.lang.string [ ] var_1, int var_2 ) { java.lang.string [ ] result = new java.lang.string [ ( var_1. length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result. length ) ; i ++ ) { if ( i == var_2 ) { tmp = 1 ; } else { result [ i ] = var_1 [ ( i + tmp ) ] ; } } return result ; }

************

************
tgt: private type_1 method_1 ( final java.lang.string var_1 , final type_2 var_2 , final java.lang.integer var_3 , final java.lang.boolean var_4 ) { var_5 . put ( 0 , 0 ) ; final type_3 var_6 = new type_3 ( int_2 , var_3 , new type_4 ( string_1 ) , null , null , null , var_7 , var_8 , var_9 , var_4 ) ; final type_1 var_10 = new type_1 ( var_1 , null , var_11 , var_6 , var_2 , null , null ) ; var_10 . method_2 ( var_12 ) ; return var_10 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( method_3 ( var_2 ) ) ; type_3. method_4 ( ) ; java.lang.string token = type_2. method_5 ( ) ; if ( token. equals ( string_1 ) ) { } else { type_2. method_6 ( ) ; } type_4. method_7 ( method_8 ( ) ) ; method_9 ( var_3 ) ; method_10 ( ) ; method_11 ( ) ; var_4 = new type_5 ( this ) ; }

************

************
tgt: private void method_1 ( ) { java.util.regex.matcher var_1 = var_2 . method_2 ( var_3 ) ; java.lang.string var_4 = string_1 ; while ( var_1 . method_3 ( ) ) { var_4 = var_1 . method_4 ( 1 ) ; if ( ( ( ! ( type_1 . contains ( var_4 ) ) ) && ( ! ( type_2 . method_5 ( var_4 ) ) ) ) && ( method_6 ( var_4 ) ) ) { type_1 . add ( var_4 ) ; } } }
[0]: protected void method_1 ( java.lang.void var_1 ) { if ( var_2 [ 0 ] ) { android.content.intent intent = new android.content.intent ( this, var_3 class ) ; method_3 ( intent ) ; type_1. message ( this, ( string_1 + ( type_2. method_4 ( ). getid ( ) ) ) ) ; } else { type_1. message ( this, string_2 ) ; } }

************

************
tgt: protected void method_1 ( java.lang.boolean b ) { super . method_1 ( b ) ; if ( b ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; } } else { type_1 . method_3 ( context , var_2 , var_3 ) . show ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( var_1 == null ) { android.content.intent intent = getintent ( ) ; if ( intent. method_2 ( var_2, false ) ) { method_3 ( var_3, null ) ; } else { method_3 ( ( ( java.lang.string ) ( null ) ), null ) ; } } else { type_2. method_4 ( var_4, string_1 ) ; } }

************

************
tgt: public boolean delete ( type_1 key ) { method_1 ( ) ; final long var_1 = method_2 ( ) ; final type_2 var_2 = method_3 ( key , var_1 , false ) ; if ( var_2 == null ) { var_3 . remove ( key , var_1 ) ; } else { return ( method_5 ( key , var_2 , var_1 ) ) != null ; } return false ; }
[0]: protected java.lang.boolean execute ( java.lang.object... args ) { try { var_1. method_1 ( var_2, string_1, var_3 ). method_2 ( var_4 ). execute ( ). method_3 ( ) ; return true ; } catch ( java.lang.exception var_5 ) { var_6. error ( string_2, var_5 ) ; return false ; } }

************

************
tgt: public type_1 method_1 ( ) { java.lang.string var_1 = var_2 . method_2 ( var_3 , type_2 . method_3 ( new type_3 ( string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , string_1 , false , true , false ) ) ) ; return type_1 . method_4 ( var_1 ) . build ( ) ; }
[0]: public boolean method_1 ( type_1 item ) { super. method_1 ( item ) ; switch ( item. method_2 ( ) ) { case var_1 : java.lang.string [ ] var_2 = method_3 ( ). method_4 ( var_3 ) ; type_2 var_4 = new type_2 ( getactivity ( ), var_2, this ) ; var_4. method_5 ( null ). show ( ) ; break ; } return true ; }

************

************
tgt: public void remove ( java.lang.string key ) { type_1 var_1 = var_2 . remove ( key ) ; if ( ( ( var_1 != null ) && ( ( var_1 . gettype ( ) . method_1 ( ) ) == ( var_3 ) ) ) && ( ! ( key . contains ( string_1 ) ) ) ) { ( var_4 ) -- ; } }
[0]: public boolean method_1 ( ) { if ( var_1. method_2 ( ) ) { var_1. method_3 ( ). method_1 ( ) ; var_1. method_4 ( ) ; var_1. method_5 ( ) ; if ( ( var_1. method_6 ( ) )!= null ) { var_1. method_6 ( ). method_7 ( var_1, var_1. method_8 ( ), var_1. method_2 ( ) ) ; } return true ; } return false ; }

************

************
tgt: public java.lang.string [ ] method_1 ( java.lang.string [ ] var_1 , int var_2 ) { java.lang.string [ ] result = new java.lang.string [ ( var_1 . length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result . length ) ; i ++ ) { if ( i == var_2 ) { tmp = 1 ; } result [ i ] = var_1 [ ( i + tmp ) ] ; } return result ; }
[0]: private void method_1 ( ) { method_2 ( ) ; -- ( var_1 ) ; if ( ( var_1 ) < 0 ) { var_1 = 0 ; } else { method_3 ( ) ; method_4 ( ) ; if ( method_5 ( ) ) { return ; } if ( ( var_2 )!= null ) { var_2. method_6 ( 0 ) ; var_2. method_7 ( var_1 ) ; } } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 . method_2 ( method_3 ( var_2 ) ) ; java.lang.string token = type_2 . method_5 ( ) ; if ( token . equals ( string_1 ) ) { } else { type_2 . method_6 ( ) ; } type_4 . method_7 ( method_8 ( ) ) ; method_9 ( var_3 ) ; method_10 ( ) ; method_11 ( ) ; var_4 = new type_5 ( this ) ; }
[0]: private void method_1 ( ) { int [ ] [ ] var_1 = method_2 ( ) ; if ( ( var_1. length ) > 0 ) { java.util.random var_2 = new java.util.random ( ) ; int var_3 = var_2. method_3 ( var_1. length ) ; int var_4 = var_1 [ var_3 ] [ 1 ] ; int var_5 = var_1 [ var_3 ] [ int_1 ] ; var_6 [ var_4 ] [ var_5 ] = method_4 ( ) ; } else { var_6 [ 0 ] = 0 ; } }

************

************
tgt: protected void method_1 ( java.lang.void var_1 ) { if ( var_2 [ 0 ] ) { method_2 ( ) ; android.content.intent intent = new android.content.intent ( this , var_3 class ) ; method_3 ( intent ) ; type_1 . message ( this , string_1 ) ; } else { type_1 . message ( this , string_2 ) ; } }
[0]: protected java.lang.object method_1 ( java.lang.object args ) throws java.lang.exception { java.lang.string [ ] var_1 = ( ( java.lang.string [ ] ) ( args ) ) ; int var_2 = java.lang.integer. method_2 ( var_1 [ 0 ] ) ; int var_3 = java.lang.integer. method_2 ( var_1 [ 1 ] ) ; int var_4 = java.lang.integer. method_2 ( var_1 [ int_1 ] ) ; return method_3 ( var_2, var_3, var_4 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( var_1 == null ) { android.content.intent intent = getintent ( ) ; if ( intent . method_2 ( var_2 , false ) ) { method_3 ( var_3 , null , true ) ; } else { method_3 ( ( ( java.lang.string ) ( null ) ) , null ) ; } } else { type_2 . method_4 ( var_4 , string_1 ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 ; var_1 = var_2. gettext ( ). tolowercase ( ) ; for ( int var_3 = 0 ; var_3 < int_1 ; var_3 ++ ) { if ( var_1. equals ( ( string_1 + ( var_4 [ var_3 ] ) ) ) ) { var_5 [ var_3 ] = var_6 ; } } var_7. method_2 ( new type_1 ( var_8, var_9, var_10 ), new type_1 ( var_5, 1, int_1 ) ) ; }

************

************
tgt: protected java.lang.boolean execute ( java.lang.object ... args ) throws java.lang.exception { try { var_1 . method_1 ( var_2 , string_1 , var_3 ) . method_2 ( var_4 ) . execute ( ) . method_3 ( ) ; return true ; } catch ( java.lang.exception var_5 ) { throw new java.lang.exception ( string_2 , var_5 ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { try { var_1. method_2 ( 0 ). method_3 ( ) ; while ( ( var_1. method_4 ( ) )!= null ) { java.lang.thread. method_5 ( int_1 ) ; } } catch ( type_1 var_2 ) { var_2. method_6 ( ) ; } catch ( java.lang.nullpointerexception var_2 ) { java.lang.system.exit ( 0 ) ; } catch ( java.lang.exception var_2 ) { var_2. method_6 ( ) ; } } } }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : java.lang.string [ ] var_2 = method_3 ( ) . method_4 ( var_3 ) ; type_2 var_4 = new type_2 ( getactivity ( ) , var_2 , this ) ; var_4 . method_5 ( null ) . show ( ) ; break ; } return super . method_1 ( item ) ; }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) throw new java.lang.nullpointerexception ( string_1 ) ; type_2 < type_1 >. type_3 add = new type_3 ( item ) ; if ( isempty ( ) ) { var_1 = var_2 = add ; } else { var_3 = var_2 ; var_4 = add ; var_2 = add ; } ( var_5 ) ++ ; }

************

************
tgt: public boolean method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_1 . method_3 ( ) . method_1 ( ) ; var_1 . method_4 ( ) ; var_1 . method_5 ( ) ; if ( ( var_1 . method_6 ( ) ) != null ) { var_1 . method_6 ( ) . method_7 ( var_1 , var_1 . method_3 ( ) . method_8 ( ) , var_1 . method_3 ( ) . method_2 ( ) ) ; } return true ; } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { java.io.file file = new java.io.file ( ( ( ( type_2. method_2 ( var_2 ). method_3 ( ) ) + ( var_3 ) ) + ( var_1. method_4 ( ) ) ) ) ; method_5 ( ( ( file. method_6 ( ) ) && (! ( var_4. method_7 ( var_5 ) ) ) ), false ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { boolean var_3 = true ; if ( var_3 && ( var_1 != ( var_2 . method_2 ( ) ) ) ) { var_2 . method_3 ( var_1 ) ; var_1 . method_4 ( var_2 ) ; } else { } }
[0]: protected void method_1 ( int index ) { if ( method_2 ( ) ) throw new type_1 ( string_1 ) ; else if ( isempty ( ) ) { return ; } else if ( index > ( var_1 ) ) { return ; } else { for ( int i = var_1 ; i > index ; i -- ) { var_2 [ i ] = var_2 [ ( i - 1 ) ] ; } } }

************

************
tgt: private void method_1 ( ) { -- ( var_1 ) ; if ( ( var_1 ) < 0 ) { var_1 = 0 ; } else { if ( method_5 ( ) ) { return ; } if ( ( var_2 ) != null ) { var_2 . method_6 ( 0 ) ; var_2 . method_7 ( var_1 ) ; } } }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = method_2 ( var_2 ) ; type_3 var_3 = method_3 ( string_1 ) ; var_3. method_4 ( 1 ) ; var_3. method_5 ( method_6 ( var_1 ) ) ; method_7 ( ). method_8 ( string_2, var_1 ) ; var_3. method_9 ( type_4. method_10 ( int_1 ) ) ; }

************

************
tgt: private void method_1 ( ) { int [ ] [ ] var_1 = method_2 ( ) ; if ( ( var_1 . length ) > 0 ) { java.util.random var_2 = new java.util.random ( ) ; int var_3 = var_2 . method_3 ( var_1 . length ) ; int var_4 = var_1 [ var_3 ] [ 0 ] ; int var_5 = var_1 [ var_3 ] [ 1 ] ; var_6 [ var_4 ] [ var_5 ] = method_4 ( ) ; } }
[0]: public int method_1 ( type_1 path ) throws java.io.ioexception { try { var_1. method_2 ( var_1. open ( path ), true ) ; return 0 ; } catch ( java.lang.exception var_2 ) { var_2. method_3 ( ) ; java.lang.system.out.println ( ( ( string_1 + path ) + string_3 ) ) ; return - 1 ; } }

************

************
tgt: public java.lang.object method_1 ( java.lang.object args ) throws java.lang.exception { java.lang.string [ ] var_1 = ( ( java.lang.string [ ] ) ( args ) ) ; int var_2 = java.lang.integer . method_2 ( var_1 [ 0 ] ) ; int var_3 = java.lang.integer . method_2 ( var_1 [ 1 ] ) ; int var_4 = java.lang.integer . method_2 ( var_1 [ int_1 ] ) ; return type_1 . method_3 ( var_2 , var_3 , var_4 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( 0, float_1, float_1, new java.util.hashmap < > ( ) ) ; var_2. method_2 ( new type_3 ( 0, int_1, float_2, float_2, int_2, true, new java.util.arraylist < > ( ) ) ) ; type_4. assertequals ( int_3, var_1. method_3 ( null, var_2 ), var_3 ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 ; var_1 = var_2 . gettext ( ) . tolowercase ( ) ; for ( int var_3 = 0 ; var_3 < int_1 ; var_3 ++ ) { if ( var_1 . equals ( ( string_1 + ( var_4 [ var_3 ] ) ) ) ) { var_5 [ var_3 ] = var_6 ; } } var_7 . method_2 ( new type_1 ( var_8 , 1 , var_8 . length ) , new type_1 ( var_5 , 1 , var_5 . length ) ) ; }
[0]: public boolean method_1 ( int var_1, type_1 var_2 ) { if ( ( this. method_2 ( var_2 ) )!= ( - 1 ) ) return false ; java.lang.integer [ ] var_3 = this. method_3 ( var_2 ) ; if ( java.util.arrays.aslist ( var_3 ). contains ( var_1 ) ) return true ; else return false ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { try { var_1 . method_2 ( 0 ) . method_3 ( ) ; } catch ( type_1 var_2 ) { var_2 . method_6 ( ) ; } catch ( java.lang.nullpointerexception var_2 ) { java.lang.system.exit ( 0 ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_6 ( ) ; } } }
[0]: public void execute ( java.lang.string [ ] args ) throws type_1, type_2 { type_3 var_1 = method_1 ( args ) ; try { method_2 ( var_1. method_3 ( ). get ( 0 ) ) ; } catch ( type_2 var_2 ) { throw var_2 ; } catch ( java.lang.throwable var_3 ) { throw new type_1 ( ( string_1 + ( var_3. method_4 ( ) ) ), new type_4 ( var_3 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) throw new java.lang.nullpointerexception ( string_1 ) ; type_2 < type_1 > . type_3 add = new type_3 ( item ) ; if ( isempty ( ) ) { var_1 = add ; var_2 = add ; } else { var_3 = var_2 ; var_4 = add ; var_2 = add ; } ( var_5 ) ++ ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( ( type_2. method_2 ( var_1 ) ) || ( type_2. method_2 ( var_2 ) ) ) return var_3 ; type_3 var_4 = type_4. method_3 ( var_2 ) ; var_4. put ( string_1, type_5. get ( var_1 ) ) ; type_6. add ( var_4 ) ; return var_5 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { java.io.file file = new java.io.file ( ( ( ( type_2 . method_2 ( var_2 ) . method_3 ( ) ) + ( var_3 ) ) + ( var_1 . method_4 ( ) ) ) ) ; method_5 ( ( ( file . method_6 ( ) ) && ( ! ( var_4 . method_7 ( var_5 ) ) ) ) , false ) ; } }
[0]: public void method_1 ( android.view.view var_1, type_1 var_2 ) { if (! ( var_3. isempty ( ) ) ) { android.view.view out = var_3. method_2 ( ) ; if ( ( var_4 )!= null ) { var_4. method_3 ( var_1, out ) ; } var_2. method_1 ( out, var_1 ) ; } var_3. method_4 ( var_1 ) ; var_5. method_4 ( var_2 ) ; }

************

************
tgt: protected void method_1 ( int index ) { if ( method_2 ( ) ) throw new type_1 ( string_1 ) ; else if ( isempty ( ) ) { return ; } else if ( index > ( var_1 ) ) { return ; } else { for ( int i = var_1 ; i >= index ; i -- ) { var_2 [ ( i + 1 ) ] = var_2 [ i ] ; } } }
[0]: public void method_1 ( type_1 var_1, int position ) { type_2 var_2 = data. get ( position ) ; type_1 var_3 = ( ( type_1 ) ( var_1 ) ) ; var_3. method_2 ( var_2. name ) ; method_3 ( var_3 ) ; type_3. method_4 ( context ). method_5 ( var_4. get ( 0 ). url ). method_6 ( var_5 ). method_7 ( var_3. method_8 ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { context . start ( ) ; type_2 var_1 = method_2 ( var_2 ) ; type_3 var_3 = method_3 ( string_1 ) ; var_3 . method_4 ( 1 ) ; var_3 . method_5 ( method_6 ( var_1 ) ) ; method_7 ( ) . method_8 ( string_2 , var_1 ) ; var_3 . method_9 ( type_4 . method_10 ( int_1 ) ) ; }
[0]: private void method_1 ( ) { for ( type_1 var_1 : var_2 ) { var_1. update ( this ) ; } for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_2. get ( i ). var_3 ) { var_2. get ( i ). end ( this ) ; var_2. remove ( i ) ; i -- ; } } }

************

************
tgt: public int method_1 ( type_1 path ) throws java.io.ioexception { try { var_1 . method_1 ( var_1 . open ( path ) ) ; java.lang.system.out.println ( ( ( string_1 + path ) + string_2 ) ) ; return 0 ; } catch ( java.lang.exception var_2 ) { var_2 . method_3 ( ) ; java.lang.system.out.println ( ( ( string_1 + path ) + string_3 ) ) ; return - 1 ; } }
[0]: public int put ( final type_1 list ) throws java.lang.nullpointerexception { if ( list == null ) throw new java.lang.nullpointerexception ( ) ; final int result = this. var_1. size ( ) ; this. var_1. add ( result, list ) ; return result ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( 0 , float_1 , float_1 , null , new java.util.hashmap < > ( ) ) ; var_2 . method_2 ( new type_3 ( 0 , int_1 , float_2 , float_2 , int_2 , true , new java.util.arraylist < > ( ) ) ) ; type_4 . assertequals ( int_3 , var_1 . method_3 ( null , var_2 ) , var_3 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { java.util.map < java.lang.string, java.lang.double > var_1 = type_2. method_2 ( type_2. method_3 ( var_2 ) ) ; java.util.map < java.lang.string, java.lang.double > var_3 = type_2. method_2 ( type_2. method_3 ( var_4 ) ) ; type_3. assertequals ( var_1, var_5 ) ; type_3. assertequals ( var_3, var_6 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , type_1 var_2 ) { if ( ( this . method_2 ( var_2 ) ) != ( - 1 ) ) return false ; java.lang.integer [ ] var_3 = this . method_3 ( var_2 ) ; if ( var_3 == null ) return false ; if ( java.util.arrays.aslist ( var_3 ) . contains ( var_1 ) ) return true ; else return false ; }
[0]: public int method_1 ( int var_1 ) { int var_2 ; if ( ( var_1 > 0 ) || ( var_1 < int_1 ) ) { var_2 = this. var_3 ; } else { var_2 = ( this. var_3 ) - var_1 ; } return var_2 < 0? 0 : var_2 ; }

************

************
tgt: public void execute ( java.lang.string [ ] args ) throws type_1 , type_2 { type_3 var_1 = method_1 ( args ) ; try { method_2 ( var_1 . method_3 ( ) . get ( 0 ) ) ; } catch ( type_2 | type_1 var_2 ) { throw var_2 ; } catch ( java.lang.throwable var_3 ) { throw new type_1 ( var_3 . method_4 ( ) , new type_4 ( var_3 ) ) ; } }
[0]: public void method_1 ( int var_1, int message, int var_2 ) { if ( ( ( var_3 )!= null ) && ( ( var_4 )!= null ) ) { var_5. settext ( var_1 ) ; var_4. settext ( message ) ; var_6. method_2 ( var_2 ) ; var_6. method_3 ( var_7 ) ; var_8. method_3 ( var_9 ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( ( type_2 . method_2 ( var_1 ) ) || ( type_2 . method_2 ( var_2 ) ) ) return var_3 ; type_3 var_4 = type_4 . method_3 ( var_2 ) ; var_4 . put ( string_1 , type_5 . get ( var_1 ) . getid ( ) ) ; type_6 . add ( var_4 ) ; return var_5 ; }
[0]: public static void method_1 ( final type_1 var_1, final type_2 var_2 ) { final type_3 var_3 = new type_3 ( var_1. method_2 ( ), var_1. getdata ( ) ) ; type_4. method_3 ( type_5. method_4 ( var_2 ), var_3, string_1, var_4, new type_6 ( true ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 , type_1 var_2 ) { if ( ! ( var_3 . isempty ( ) ) ) { android.view.view out = var_3 . method_2 ( ) ; if ( ( var_4 ) != null ) { var_4 . method_3 ( var_1 , out ) ; } var_2 . method_1 ( out , var_1 ) ; var_5 . method_4 ( var_2 ) ; } var_3 . method_4 ( var_1 ) ; }
[0]: protected java.lang.long method_1 ( type_1 [ ] var_1 ) { int count = var_1. length ; long var_2 = 0 ; for ( int i = count - 1 ; i >= 0 ; i -- ) { var_2 += var_3. method_2 ( var_1 [ i ] ) ; java.lang.integer var_4 = ( ( int ) ( ( i / ( ( float ) ( count ) ) ) * int_1 ) ) ; method_3 ( var_4 ) ; if ( method_4 ( ) ) break ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { type_2 var_2 = data . get ( position ) ; var_1 . method_2 ( var_2 . name ) ; method_3 ( var_1 ) ; type_3 . method_4 ( context ) . method_5 ( var_4 . get ( 0 ) . url ) . method_6 ( var_5 ) . method_7 ( var_1 . method_8 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { try { var_3. method_2 ( var_3. method_3 ( var_4 ). get ( position ). method_4 ( ) ) ; } catch ( type_2 var_5 ) { type_3. method_5 ( context, var_6, var_7 ). show ( ) ; } catch ( type_4 var_5 ) { var_5. method_6 ( ) ; } method_7 ( ) ; var_1. method_8 ( ) ; }

************

************
tgt: private void method_1 ( ) { for ( int i = ( var_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) { var_2 . get ( i ) . update ( this ) ; } for ( int i = ( var_2 . size ( ) ) - 1 ; i >= 0 ; i -- ) { if ( var_2 . get ( i ) . var_3 ) { var_2 . get ( i ) . end ( this ) ; var_2 . remove ( i ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) < 1 ) { method_3 ( var_1 ) ; } if ( ( var_1. method_4 ( ) ) == true ) { method_5 ( var_1 ) ; } if ( ( var_1. method_6 ( ) ) == true ) { method_7 ( var_1 ) ; } if ( ( ( var_1. method_8 ( ) ) == true ) && ( ( var_1. method_9 ( ) ) < 1 ) ) { method_10 ( var_1 ) ; } }

************

************
tgt: protected int put ( final type_1 list ) throws java.lang.nullpointerexception { if ( list == null ) throw new java.lang.nullpointerexception ( ) ; final int result = this . var_1 . size ( ) ; this . var_1 . add ( result , list ) ; return result ; }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1, type_2, type_3, type_4, type_5 { type_6. method_1 ( string_1, int_1 ) ; type_6. method_2 ( string_2, string_1, string_3 ) ; java.lang.system.out.println ( string_4 ) ; java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; while ( true ) { java.lang.string str = var_1. method_3 ( ) ; type_6. method_4 ( str ) ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , type_1 { java.util.map < java.lang.string , java.lang.double > var_1 = type_2 . method_2 ( type_2 . method_3 ( var_2 ) ) ; java.util.map < java.lang.string , java.lang.double > var_3 = type_2 . method_2 ( type_2 . method_3 ( var_4 ) ) ; type_3 . assertequals ( var_5 , var_1 ) ; type_3 . assertequals ( var_6 , var_3 ) ; }
[0]: public static java.lang.object [ ] method_1 ( int length, long [ ] values ) { long [ ] var_1 ; if ( ( values. length ) == length ) { var_1 = values ; } else { var_1 = new long [ length ] ; type_1. method_2 ( values, 0, var_1, 0, values. length ) ; } return type_2. method_3 ( var_1 ). method_4 ( ). method_5 ( ) ; }

************

************
tgt: public int method_1 ( int var_1 ) { int var_2 ; if ( ( var_1 > 0 ) && ( var_1 < int_1 ) ) { var_2 = this . var_3 ; } else { var_2 = ( this . var_3 ) - var_1 ; } return var_2 < 0 ? 0 : var_2 ; }
[0]: private void method_1 ( ) throws type_1 { boolean var_1 ; try { var_1 = ( ( var_2 ) == null ) || ( var_2. method_2 ( ) ) ; } catch ( type_1 var_3 ) { var_1 = true ; } if ( var_1 ) { try { method_3 ( ) ; } catch ( type_1 var_3 ) { if ( ( ( var_2 ) == null ) || ( var_2. method_2 ( ) ) ) { method_3 ( ) ; } } } }

************

************
tgt: public void method_1 ( int var_1 , int message , int var_2 ) { if ( ( ( var_3 ) != null ) && ( ( var_4 ) != null ) ) { var_5 . settext ( var_1 ) ; var_4 . settext ( message ) ; var_6 . method_2 ( var_2 ) ; var_4 . method_3 ( var_7 ) ; var_6 . method_3 ( var_7 ) ; var_8 . method_3 ( var_9 ) ; } }
[0]: public int method_1 ( ) { if ( ( var_1 ) >= int_1 ) { var_2. method_2 ( type_1. method_3 ( ) ) ; } int var_3 = 0 ; for ( final type_2 var_4 : var_5 ) { var_3 += var_4. method_1 ( var_2 ) ; ( var_1 ) ++ ; } return var_3 ; }

************

************
tgt: public static void method_1 ( final type_1 var_1 , final type_2 var_2 ) { final type_3 var_3 = new type_3 ( var_1 . method_2 ( ) , var_1 . getdata ( ) ) ; type_5 . method_3 ( type_5 . method_4 ( var_2 ) , var_3 , string_1 , var_4 ) ; }
[0]: public void method_1 ( final long [ ] data, boolean length ) { int var_1 = ( data. length ) * ( var_2 ) ; if ( length ) method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_3. method_4 ( data, var_4, null, ( ( var_5 ) + ( position ) ), var_1 ) ; position += var_1 ; end = ( ( position ) > ( end ) )? position : end ; }

************

************
tgt: protected java.lang.long method_1 ( type_1 [ ] var_1 ) { int count = var_1 . length ; long var_2 = 0 ; for ( int i = 0 ; i < count ; i ++ ) { var_2 += var_3 . method_2 ( var_1 [ i ] ) ; java.lang.integer var_4 = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * int_1 ) ) ; method_3 ( var_4 ) ; if ( method_4 ( ) ) break ; } return var_2 ; }
[0]: java.util.hashset < type_1 > method_1 ( ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; var_1. add ( this ) ; if (! ( method_2 ( ). method_3 ( ) ) ) for ( type_1 var_2 : method_4 ( ). method_5 ( ) ) var_1. method_6 ( var_2. method_1 ( ) ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { try { var_3 . method_2 ( var_3 . method_3 ( var_4 ) . get ( position ) . method_4 ( ) ) ; } catch ( type_2 var_5 ) { var_5 . method_6 ( ) ; } catch ( type_4 var_5 ) { var_5 . method_6 ( ) ; } method_7 ( ) ; var_1 . method_8 ( ) ; }
[0]: public type_1 method_1 ( ) { while ( ( var_1 ) < ( var_2. length ) ) { java.lang.string var_3 = null ; if (! ( var_2 [ var_1 ]. method_2 ( ) ) ) var_3 = var_2 [ var_1 ]. getname ( ) ; java.lang.string var_4 = var_3 ; return new type_1 ( var_2 [ ( ( var_1 ) ++ ) ]. method_3 ( ), var_3, var_4 ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) < 1 ) { method_3 ( var_1 ) ; } if ( ( var_1 . method_4 ( ) ) == true ) { method_5 ( var_1 ) ; } if ( ( var_1 . method_6 ( ) ) == true ) { method_7 ( var_1 ) ; } if ( ( ( var_1 . method_8 ( ) ) == true ) && ( ( var_1 . method_9 ( ) ) <= 1 ) ) { method_10 ( var_1 ) ; } }
[0]: public void method_1 ( ) { try { method_2 ( data. tostring ( ) ) ; type_1. method_3 ( var_1, ( string_1 + ( data. tostring ( ) ) ) ) ; } catch ( java.lang.exception var_2 ) { var_2. method_4 ( ) ; } finally { try { if ( var_3. method_5 ( ) ) { var_3. method_6 ( ) ; } } catch ( java.lang.exception var_4 ) { } } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 , type_2 , type_3 , type_4 , type_5 { java.lang.system.out.println ( string_4 ) ; java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; while ( true ) { java.lang.string str = var_1 . method_3 ( ) ; type_6 . method_4 ( str ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) return true ; boolean var_2 = true ; for ( type_2 var_3 : var_1. method_2 ( ). method_3 ( ). method_4 ( ). method_5 ( ) ) { if ( ( var_3. getid ( ) ) == ( var_4. getid ( ) ) ) { var_2 = false ; break ; } } return var_2 ; }

************

************
tgt: static java.lang.object [ ] method_1 ( int length , long [ ] values ) { long [ ] var_1 ; if ( ( values . length ) == length ) { var_1 = values ; } else { var_1 = new long [ length ] ; type_1 . method_2 ( values , 0 , var_1 , 0 , var_1 . length ) ; } return type_2 . method_3 ( var_1 ) . method_4 ( ) . method_5 ( ) ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 < type_4 > var_2 ) { if ( var_1 instanceof type_5 ) { type_5 var_3 = ( ( type_5 ) ( var_1 ) ) ; return method_2 ( var_3, var_2. method_3 ( 0 ) ) ; } else { type_6 var_4 = ( ( type_6 ) ( var_1 ) ) ; return method_4 ( var_4, var_2. method_5 ( ), var_2. method_3 ( 0 ) ) ; } }

************

************
tgt: private void method_1 ( ) throws type_1 { boolean var_1 ; try { var_1 = ( ( var_2 ) == null ) || ( var_2 . method_2 ( ) ) ; } catch ( type_1 var_3 ) { var_1 = true ; } if ( var_1 ) { method_3 ( ) ; } }
[0]: type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; var_1. method_2 ( string_1 ) ; var_1. method_3 ( var_1. method_4 ( ). method_5 ( type_2. method_6 ( ) ) ) ; var_1. method_7 ( new type_3 ( var_1. method_8 ( ). var_2, method_9 ( ). method_8 ( ). height ) ) ; } return var_1 ; }

************

************
tgt: public int method_1 ( ) { if ( ( var_1 ) >= int_1 ) { var_2 . method_2 ( type_1 . method_3 ( ) ) ; var_1 = 0 ; } int var_3 = 0 ; for ( final type_2 var_4 : var_5 ) { var_3 += var_4 . method_1 ( var_2 ) ; ( var_1 ) ++ ; } return var_3 ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = null ; java.lang.string var_3 = var_4. method_2 ( string_1 ) ; type_3 query = method_3 ( ). method_4 ( ). method_5 ( var_3 ) ; query. method_6 ( string_2, var_1. method_7 ( ) ) ; query. method_6 ( string_3, var_1. method_7 ( ) ) ; query. method_8 ( int_1 ) ; var_2 = ( ( java.util.list < type_1 > ) ( query. list ( ) ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( final long [ ] data , boolean length ) { int var_1 = data . length ; if ( length ) method_2 ( var_1 ) ; var_1 *= var_2 ; method_3 ( ( ( position ) + var_1 ) ) ; var_3 . method_4 ( data , var_4 , null , ( ( var_5 ) + ( position ) ) , var_1 ) ; position += var_1 ; end = ( ( position ) > ( end ) ) ? position : end ; }
[0]: public static boolean method_1 ( final java.lang.string string ) { java.util.set < type_1 > set = new java.util.hashset < > ( ) ; for ( int i = 0 ; i < ( string. length ( ) ) ; i ++ ) { int var_1 = set. size ( ) ; set. add ( string. method_2 ( i ) ) ; if ( ( set. size ( ) ) == var_1 ) { return false ; } } return true ; }

************

************
tgt: java.util.hashset < type_1 > method_1 ( ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; var_1 . add ( this ) ; if ( ! ( method_2 ( ) . method_3 ( ) ) ) for ( type_1 var_2 : method_2 ( ) . method_5 ( ) ) var_1 . method_6 ( var_2 . method_1 ( ) ) ; return var_1 ; }
[0]: private double method_1 ( ) { return ( ( double ) ( type_1. method_2 ( ( ( ( ( double ) ( this. method_3 ( ) ) ) * ( ( double ) ( this. method_4 ( ) ) ) ) / int_1 ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { while ( ( var_1 ) < ( var_2 . length ) ) { java.lang.string var_3 = null ; if ( ! ( var_2 [ var_1 ] . method_2 ( ) ) ) { var_3 = var_2 [ var_1 ] . getname ( ) ; java.lang.string var_4 = var_3 ; return new type_1 ( var_2 [ ( ( var_1 ) ++ ) ] . method_3 ( ) , var_3 , var_4 ) ; } ( var_1 ) ++ ; } return null ; }
[0]: private type_1 method_1 ( java.lang.string name, boolean var_1 ) { java.lang.string var_2 = method_2 ( name ) ; if ( var_2 == null ) return null ; type_2 var_3 = var_4. method_3 ( var_2 ) ; if ( ( var_3. method_4 ( 0 ) ) == ( var_5 ) ) { return method_5 ( var_2, var_3 ) ; } else { return method_6 ( var_2, var_3, var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { try { method_2 ( data . tostring ( ) ) ; type_1 . method_3 ( var_1 , ( string_1 + ( data . tostring ( ) ) ) ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_4 ( ) ; } finally { try { if ( var_3 . method_5 ( ) ) { var_3 . method_6 ( ) ; var_3 = null ; } } catch ( java.lang.exception var_4 ) { } } }
[0]: public java.lang.string method_1 ( ) throws java.lang.exception { try { var_1 = method_2 ( ) ; var_2. commit ( ) ; } catch ( type_1 var_3 ) { if ( ( var_2 )!= null ) { var_2. method_3 ( ) ; } var_3. method_4 ( ) ; } finally { var_4. method_5 ( ) ; } return var_5 ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) return true ; boolean var_2 = true ; for ( type_2 var_3 : var_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) . method_5 ( ) ) { if ( var_3 . getid ( ) . equals ( var_4 . getid ( ) ) ) { var_2 = false ; break ; } } return var_2 ; }
[0]: public void method_1 ( ) { java.util.date var_1 = new java.util.date ( ) ; java.util.date var_2 = new java.util.date ( ) ; type_1 var_3 = new type_1 ( var_1, var_2, new type_2 < type_3 > ( ) ) ; assertequals ( var_3. method_1 ( ), new type_2 < type_3 > ( ) ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 < type_4 > var_2 ) { if ( var_1 instanceof type_5 ) { type_5 var_3 = ( ( type_5 ) ( var_1 ) ) ; return method_2 ( var_3 , var_2 . method_3 ( 0 ) ) ; } else if ( var_1 instanceof type_6 ) { type_6 var_4 = ( ( type_6 ) ( var_1 ) ) ; return method_4 ( var_4 , var_2 . method_5 ( ) ) ; } else { return null ; } }
[0]: public type_1 method_1 ( int var_1 ) { type_1 var_2 = new type_1 ( string_1 ) ; java.util.list < type_2 > var_3 = var_4. method_2 ( var_1 ) ; if (! ( var_3. isempty ( ) ) ) { type_2 var_5 = var_3. get ( 0 ) ; var_6. method_3 ( var_5 ) ; var_2. method_5 ( string_2, var_5 ) ; } else { java.lang.system.out.println ( string_3 ) ; } return var_2 ; }

************

************
tgt: type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; var_1 . method_3 ( var_1 . method_4 ( ) . method_5 ( type_2 . method_6 ( ) ) ) ; var_1 . method_7 ( new type_3 ( var_1 . method_8 ( ) . var_2 , method_9 ( ) . method_8 ( ) . height ) ) ; } return var_1 ; }
[0]: protected type_1 method_1 ( type_2 var_1, type_1 var_2 ) throws java.lang.exception { long var_3 = type_3. method_2 ( var_2. getvalue ( string_1, null ) ) ; if ( var_3 > 0 ) { type_4 var_4 = var_5. method_3 ( var_1. method_4 ( ) ) ; type_5 var_6 = var_4. method_5 ( ) ; method_6 ( var_1, var_2, string_1, var_7 class, var_6. method_7 ( ) ) ; } return var_2 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = null ; java.lang.string var_3 = var_4 . method_2 ( string_1 ) ; type_3 query = method_3 ( ) . method_4 ( ) . method_5 ( var_3 ) ; query . method_6 ( string_2 , var_1 . method_7 ( ) ) ; query . method_6 ( string_3 , var_1 . method_7 ( ) ) ; var_2 = ( ( java.util.list < type_1 > ) ( query . list ( ) ) ) ; return var_2 ; }
[0]: public type_1 get ( int i ) { if ( ( size ( ) ) <= i ) throw new type_2 ( string_1 ) ; type_3 < type_1 > var_1 = var_2 ; while ( i > 0 ) { var_1 = var_1. method_1 ( ) ; i -- ; } return var_1. method_2 ( ) ; }

************

************
tgt: public static boolean method_1 ( final java.lang.string string ) { java.util.set < type_1 > set = new java.util.hashset < > ( ) ; for ( int i = 0 ; i < ( string . length ( ) ) ; i ++ ) { set . add ( string . method_2 ( i ) ) ; } return ( set . size ( ) ) == ( string . length ( ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) { this. var_2. method_2 ( ) ; this. var_3. method_3 ( ). method_4 ( ) ; this. var_3. method_5 ( ) ; this. var_4. method_4 ( ) ; this. var_5. method_4 ( ) ; type_2. method_6 ( ). method_7 ( new type_3 ( var_1, this. var_6, this. var_7 ) ) ; for ( type_4 var_8 : this. var_6 ) { var_8. method_8 ( ) ; } }

************

************
tgt: public int method_1 ( ) { return ( ( int ) ( type_1 . method_2 ( ( ( ( ( double ) ( this . method_3 ( ) ) ) * ( ( double ) ( this . method_4 ( ) ) ) ) / int_1 ) ) ) ) ; }
[0]: public java.lang.object method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string answer ; var_3 = new type_1 ( ) ; java.lang.object answer ; try { answer = ( string_1 + ( var_3. method_1 ( var_1, var_2 ). method_2 ( ) ) ) + string_2 ; } catch ( java.lang.exception var_4 ) { answer = var_4 ; } return answer ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string name , boolean var_1 ) { java.lang.string var_2 = method_2 ( name ) ; if ( var_2 == null ) return null ; type_2 var_3 = var_4 . method_3 ( var_2 ) ; if ( ( var_3 . method_4 ( 0 ) ) == ( var_5 ) ) { return method_5 ( var_2 , var_3 ) ; } else { return method_6 ( var_2 , var_3 , var_1 ) ; } }
[0]: public void start ( ) { type_1. method_1 ( var_1, string_1 ) ; if ( ( var_2 ) && ( ( var_3 )!= null ) ) { var_3. start ( ) ; } else if ( ( var_4 )!= null ) { var_4. method_2 ( true ) ; } method_3 ( var_5 ) ; }

************

************
tgt: public java.lang.string method_1 ( ) throws java.lang.exception { try { var_1 = method_2 ( ) ; var_2 . commit ( ) ; } catch ( type_1 var_3 ) { if ( ( var_2 ) != null ) { var_2 . method_3 ( ) ; } var_3 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_4 ( ) ; } finally { var_4 . method_5 ( ) ; } return var_5 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws type_3 { this. var_2 = var_1. method_2 ( var_3 ) ; this. var_4 = var_1. getstring ( var_5 ) ; this. var_6 = var_1. getstring ( var_7 ) ; this. var_8 = var_1. getstring ( var_9 ) ; this. var_10 = var_1. getstring ( var_11 ) ; return this ; }

************

************
tgt: void method_1 ( ) { java.util.date var_1 = java.util.calendar . gettime ( ) ; java.util.date var_2 = java.util.calendar . gettime ( ) ; type_1 var_3 = new type_1 ( var_1 , var_2 , new type_2 < type_3 > ( ) ) ; assertequals ( var_3 . method_1 ( ) , new type_2 < type_3 > ( ) ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { type_3 var_2 = type_4. method_2 ( 1, var_3 ). method_3 ( string_1 ). method_4 ( string_2 ). build ( ) ; type_5 result = var_4. query ( var_2, var_5 class ) ; if ( ( result. method_5 ( ) )!= null ) throw new type_2 ( result. method_5 ( ) ) ; return result. method_6 ( ). method_7 ( ) ; }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_1 var_2 = new type_1 ( string_1 ) ; java.util.list < type_2 > var_3 = var_4 . method_2 ( var_1 ) ; if ( ! ( var_3 . isempty ( ) ) ) { type_2 var_5 = var_3 . get ( 0 ) ; var_2 . method_5 ( string_2 , var_5 ) ; } else { java.lang.system.out.println ( string_3 ) ; } return var_2 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( this ) ; var_1. method_2 ( string_1 ) ; var_1. method_3 ( string_2, null ) ; var_1. method_4 ( false ) ; var_1. method_5 ( ) ; var_1. show ( ) ; }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , type_1 var_2 ) throws java.lang.exception { type_4 var_4 = var_5 . method_3 ( var_1 . method_4 ( ) ) ; type_5 var_6 = var_4 . method_5 ( ) ; method_6 ( var_1 , var_2 , string_1 , var_7 class , var_6 . method_7 ( ) ) ; return var_2 ; }
[0]: private int method_1 ( ) { int var_1 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2. length ) ) ) ; while ( var_2 [ var_1 ] ) { var_1 ++ ; if ( var_1 > ( var_2. length ) ) var_1 = 0 ; } var_2 [ var_1 ] = true ; return var_1 ; }

************

************
tgt: public type_1 get ( int index ) { if ( ( size ( ) ) <= index ) throw new type_2 ( string_1 ) ; type_3 < type_1 > var_1 = var_2 ; while ( index > 0 ) { var_1 = var_1 . method_1 ( ) ; index -- ; } return var_1 . getdata ( ) ; }
[0]: void add ( double var_1, boolean var_2 ) { for ( int i = 0 ; i < ( var_3. length ) ; i ++ ) { if ( var_1 >= ( var_3 [ i ] ) ) { ( var_4 [ i ] ) ++ ; var_5 [ i ] += ( var_2 )? 1.0 : 0.0 ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { this . var_2 . method_2 ( ) ; this . var_3 . method_3 ( ) . method_4 ( ) ; this . var_3 . method_5 ( ) ; this . var_4 . method_4 ( ) ; this . var_5 . method_4 ( ) ; type_2 . method_6 ( ) . method_7 ( new type_3 ( var_1 , this . var_6 , this . var_7 ) ) ; }
[0]: public void method_1 ( type_1 method ) { java.lang.class <? > [ ] var_1 = method. method_2 ( ) ; type_2 var_2 = method. method_3 ( var_3 class ) ; if ( var_2!= null ) { java.lang.class <? > var_4 = var_1 [ 0 ] ; java.lang.string key = var_4. getname ( ) ; type_3 var_5 = var_2. method_4 ( ) ; method_5 ( key, var_6 ) ; } }

************

************
tgt: public java.lang.object method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { var_3 = new type_1 ( ) ; java.lang.object answer ; try { answer = ( string_1 + ( var_3 . method_1 ( var_1 , var_2 ) . method_2 ( ) ) ) + string_2 ; } catch ( java.lang.exception var_4 ) { answer = var_4 ; } return answer ; }
[0]: public final type_1 method_1 ( ) { try { method_2 ( ). method_3 ( var_1 ) ; return var_2 ; } catch ( final type_2 var_3 ) { type_3. method_4 ( var_3. method_5 ( ), var_3 ) ; return var_2 ; } finally { method_2 ( ). method_6 ( var_1 ) ; } }

************

************
tgt: public void start ( ) { type_1 . method_1 ( var_1 , string_1 ) ; if ( ( var_2 ) && ( ( var_3 ) != null ) ) { var_3 . start ( ) ; } else if ( ( var_4 ) != null ) { var_4 . method_2 ( true ) ; } }
[0]: public static < type_1 > void method_1 ( type_1 var_1, java.lang.class < type_1 > var_2, type_2 var_3, java.lang.string var_4 ) throws type_3 { type_4 var_5 = type_4. method_2 ( var_2 ) ; type_5 var_6 = var_5. method_3 ( ) ; var_6. method_4 ( var_7, var_4 ) ; var_6. method_4 ( var_8, true ) ; var_6. method_5 ( var_1, var_3 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws type_3 { this . var_4 = var_1 . getstring ( var_5 ) ; this . var_6 = var_1 . getstring ( var_7 ) ; this . var_8 = var_1 . getstring ( var_9 ) ; this . var_10 = var_1 . getstring ( var_11 ) ; return this ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) == var_1 ) { return ; } method_2 ( ) ; type_1 var_3 = var_4. method_3 ( ) ; while ( var_3!= var_1 ) { var_3 = var_4. method_3 ( ) ; } method_4 ( var_3 ) ; var_5. method_5 ( new type_3 ( this, var_3 ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { type_3 var_2 = type_4 . method_2 ( 1 , var_3 ) . method_3 ( string_1 ) . method_4 ( var_1 ) . build ( ) ; type_5 result = var_4 . query ( var_2 , var_5 class ) ; if ( ( result . method_5 ( ) ) != null ) throw new type_2 ( result . method_5 ( ) ) ; return result . method_6 ( ) . method_7 ( ) ; }
[0]: public static type_1 method_1 ( java.lang.string path, type_2 var_1 ) throws java.io.ioexception { type_1 var_2 = type_3. method_2 ( path, var_1, var_3 class ) ; if ( ( var_2. method_3 ( ). method_4 ( ) )!= null ) { var_2. method_3 ( ). method_5 ( type_3. method_6 ( path, var_1 ) ) ; } return var_2 ; }

************

************
tgt: public static void method_1 ( android.content.context c ) { type_1 var_1 = new type_1 ( c ) ; var_1 . method_2 ( string_1 ) ; var_1 . method_3 ( string_2 , null ) ; var_1 . method_4 ( false ) ; var_1 . method_5 ( ) ; var_1 . show ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { int var_2 = java.lang.integer.parseint ( var_1. substring ( 0, int_1 ) ) ; int var_3 = java.lang.integer.parseint ( var_1. substring ( int_2, int_3 ) ) ; int var_4 = java.lang.integer.parseint ( var_1. substring ( int_4 ) ) ; java.util.calendar c = java.util.calendar.getinstance ( ) ; c. set ( var_4, var_3, var_2 ) ; this. var_1 = c ; }

************

************
tgt: private int method_1 ( ) { int var_1 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2 . length ) ) ) ; while ( var_2 [ var_1 ] ) { var_1 ++ ; if ( var_1 >= ( var_2 . length ) ) var_1 = 0 ; } var_2 [ var_1 ] = true ; return var_1 ; }
[0]: private void method_1 ( ) { var_1 = var_2. getvalue ( ) ; if ( ( var_3. getvalue ( ) )!= null ) { try { method_2 ( var_4, var_1 ) ; } catch ( type_1 var_5 ) { java.util.logging.logger.getlogger ( var_6 class. getname ( ) ). method_3 ( var_7, null, var_5 ) ; } } }

************

************
tgt: void add ( double var_1 , boolean var_2 ) { for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { if ( var_1 >= ( var_3 [ i ] ) ) { var_4 [ i ] += ( var_2 ) ? 0.0 : 1.0 ; var_5 [ i ] += ( var_2 ) ? 1.0 : 0.0 ; } } }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { if ( ( var_3 ) >= 0 ) { try { boolean var_4 = var_5. method_2 ( ) ; if ( ( var_6. getboolean ( var_7 ) )!= var_4 ) { var_6. put ( var_7, var_4 ) ; if (! ( var_8 ) ) { var_9. method_3 ( var_6 ) ; } } } catch ( type_2 var_10 ) { } } } }

************

************
tgt: public void method_1 ( type_1 method ) { java.lang.class < ? > [ ] var_1 = method . method_2 ( ) ; type_2 var_2 = method . method_3 ( var_3 class ) ; if ( var_2 != null ) { java.lang.class < ? > var_4 = var_1 [ 0 ] ; java.lang.string key = var_4 . getname ( ) ; method_5 ( key , var_6 ) ; } }
[0]: private synchronized void method_1 ( ) { var_1 = var_2. first ( ) ; var_3 = new type_1 ( ) { public void method_2 ( ) { method_3 ( ) ; } } ; long var_4 = var_5. method_4 ( ). method_5 ( ) ; long var_6 = new type_2 ( ). method_4 ( ). method_5 ( ) ; long var_7 = type_3. method_6 ( 0, ( var_4 - var_6 ) ) ; var_8. method_7 ( var_3, int_1 ) ; } }

************

************
tgt: public final type_1 method_1 ( ) { try { method_2 ( ) . method_3 ( var_1 ) ; return var_2 ; } catch ( final type_2 var_3 ) { type_3 . error ( var_3 . method_5 ( ) , var_3 ) ; return var_2 ; } finally { method_2 ( ) . method_6 ( var_1 ) ; } }
[0]: private java.util.collection < type_1 > method_1 ( type_1 n ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; for ( type_1 var_2 : n. method_2 ( ) ) { var_1. method_3 ( method_1 ( var_2 ) ) ; } return var_1 ; }

************

************
tgt: public static < type_1 > void method_1 ( type_1 var_1 , type_2 var_3 , java.lang.string var_4 ) throws type_3 { type_4 var_5 = type_4 . method_2 ( var_1 . getclass ( ) ) ; type_5 var_6 = var_5 . method_3 ( ) ; var_6 . method_4 ( var_7 , var_4 ) ; var_6 . method_4 ( var_8 , true ) ; var_6 . method_5 ( var_1 , var_3 ) ; }
[0]: public void method_1 ( ) throws java.lang.classnotfoundexception, type_1 { java.lang.system.out.println ( string_1 ) ; int var_1 = var_2. method_2 ( ) ; if ( ( var_1 <= int_1 ) && ( var_1 > 0 ) ) { java.lang.system.out.println ( string_2 ) ; method_3 ( var_1 ) ; } else { java.lang.system.out.println ( string_3 ) ; method_1 ( ) ; } }

************

************
tgt: public void method_1 ( boolean var_1 ) { this . var_1 = var_1 ; if ( ! ( name . contains ( string_1 ) ) ) { try { var_2 . method_2 ( ( var_1 ? 1 : 0 ) ) ; } catch ( type_1 var_3 ) { type_2 . method_3 ( var_3 ) ; } } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; java.lang.string var_2 = string_2 ; long var_3 = int_1 ; java.lang.string var_4 = null ; try { var_4 = var_5. method_2 ( var_1, var_3, var_2 ) ; var_6. info ( string_3, var_4 ) ; } catch ( type_1 var_7 ) { var_6. error ( string_4, var_7. method_3 ( ), var_7 ) ; } var_6. info ( string_5, var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) == var_1 ) { return ; } method_2 ( ) ; type_1 var_3 = var_4 . method_3 ( ) ; while ( ! ( var_3 . equals ( var_1 ) ) ) { var_3 = var_4 . method_3 ( ) ; } method_4 ( var_3 ) ; var_5 . method_5 ( new type_3 ( this , var_3 ) ) ; }
[0]: private synchronized void method_1 ( type_1 var_1, type_2 var_2 ) { java.util.map < type_3, java.util.set < type_4 > > var_3 = method_2 ( var_4 ) ; for ( java.util.map.entry < type_3, java.util.set < type_4 > > var_5 : var_3. method_3 ( ) ) { type_3 var_6 = var_5. method_4 ( ) ; java.util.set < type_4 > var_7 = var_5. getvalue ( ) ; method_5 ( var_6, var_7, var_1, var_2 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string path , type_2 var_1 ) throws java.io.ioexception { type_1 var_2 = type_3 . method_2 ( path , var_1 , var_3 class ) ; if ( ( var_2 . method_3 ( ) . method_4 ( ) ) != null ) { var_2 . method_3 ( ) . method_5 ( type_3 . method_6 ( var_2 . method_3 ( ) . method_4 ( ) , var_1 ) ) ; } return var_2 ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_1. size ( ) ) == 0 ) ) { java.lang.system.out.println ( string_1 ) ; } else { java.lang.system.out.println ( string_2 ) ; for ( type_1 n : var_1 ) n. method_2 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { int var_2 = java.lang.integer.parseint ( var_1 . substring ( 0 , int_1 ) ) ; int var_3 = ( java.lang.integer.parseint ( var_1 . substring ( int_2 , int_3 ) ) ) - 1 ; int var_4 = java.lang.integer.parseint ( var_1 . substring ( int_4 ) ) ; java.util.calendar c = java.util.calendar.getinstance ( ) ; c . set ( var_4 , var_3 , var_2 ) ; this . var_1 = c ; }
[0]: public void method_1 ( float var_1 ) { this. var_1 = var_1 ; if ( ( this. var_2 )!= ( var_3 ) ) { var_4 = ( ( float ) ( ( ( ( float_1 / ( ( var_5 ) / int_1 ) ) / ( var_6 ) ) * float_2 ) * ( 1 - ( var_7? var_1 : 0 ) ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 = var_2 . getvalue ( ) ; if ( ( ( var_3 . getvalue ( ) ) != null ) && ( ( var_1 ) != null ) ) { try { method_2 ( var_4 , var_1 ) ; } catch ( type_1 var_5 ) { java.util.logging.logger.getlogger ( var_6 class . getname ( ) ) . method_3 ( var_7 , null , var_5 ) ; } } }
[0]: public static int method_1 ( int var_1, int var_2, int var_3 ) { if ( var_2 == 0 ) return 1 ; if ( var_2 == 1 ) return var_1 ; final int var_4 = type_1. method_2 ( var_1, ( var_2 / int_1 ) ) ; if ( ( var_2 % int_1 ) == 0 ) return ( var_4 * var_4 ) % var_3 ; else return ( ( ( var_4 * var_4 ) % var_3 ) * var_1 ) % var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { if ( ( ( var_3 ) >= 0 ) && ( ( var_6 ) != null ) ) { try { boolean var_4 = var_5 . method_2 ( ) ; if ( ( var_6 . getboolean ( var_7 ) ) != var_4 ) { var_6 . put ( var_7 , var_4 ) ; if ( ! ( var_8 ) ) { var_9 . method_3 ( var_6 ) ; } } } catch ( type_2 var_10 ) { } } }
[0]: public void method_1 ( java.lang.throwable var_1 ) { assert var_2. method_2 ( ). method_3 ( ) ; if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_1 var_3 = var_4 ; if ( var_3 == null ) { return ; } type_2. method_4 ( var_3. msg ) ; type_3 var_5 = var_6 ; type_4. method_5 ( var_5, var_1 ) ; method_6 ( var_3 ) ; }

************

************
tgt: private synchronized void method_1 ( ) { var_1 = var_2 . first ( ) ; var_3 = new type_1 ( ) { public void method_2 ( ) { method_3 ( ) ; } } ; long var_4 = var_5 . method_4 ( ) . method_5 ( ) ; long var_6 = new type_2 ( ) . method_4 ( ) . method_5 ( ) ; long var_7 = type_3 . method_6 ( 0 , ( var_4 - var_6 ) ) ; var_8 . method_7 ( var_3 , var_7 ) ; }
[0]: public static java.lang.string [ ] method_1 ( java.lang.string... values ) { java.lang.string [ ] var_1 = new java.lang.string [ values. length ] ; for ( int i = 0 ; i < ( values. length ) ; i ++ ) { try { var_1 [ i ] = ( ( java.lang.integer.parseint ( values [ i ] ) ) / ( int_1 * int_1 ) ) + string_1 ; } catch ( type_1 var_2 ) { var_2. method_2 ( ) ; } } return var_1 ; }

************

************
tgt: private java.util.collection < type_1 > method_1 ( type_1 n ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; for ( type_1 var_2 : n . method_2 ( ) ) { var_1 . add ( var_2 ) ; var_1 . method_3 ( method_1 ( var_2 ) ) ; } return var_1 ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2 = ( ( type_2 ) ( var_1. method_2 ( var_3 ) ) ) ; var_4 = ( ( type_3 ) ( type_4. method_3 ( var_2 ) ) ) ; if ( ( var_4 )!= null ) { method_4 ( var_4 ) ; } else { var_4 = method_5 ( ) ; var_2 = type_4. method_6 ( var_4 ) ; } } }

************

************
tgt: public void method_1 ( ) throws java.lang.classnotfoundexception , type_1 { java.lang.system.out.print ( string_1 ) ; int var_1 = var_2 . method_2 ( ) ; if ( ( var_1 <= int_1 ) && ( var_1 > 0 ) ) { java.lang.system.out.println ( string_2 ) ; method_3 ( var_1 ) ; } else { java.lang.system.out.println ( string_3 ) ; method_1 ( ) ; } }
[0]: private java.util.set < type_1 > method_1 ( type_2 var_1, type_1 var_2 ) { java.util.set < type_1 > var_3 = new java.util.hashset ( var_1. method_2 ( var_2 ) ) ; for ( type_1 c : var_1. method_3 ( var_2 ) ) { for ( type_1 p : var_1. method_4 ( c ) ) { var_3. add ( p ) ; } } return var_3 ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; java.lang.string var_2 = string_2 ; long var_3 = int_1 ; java.lang.string var_4 = null ; try { var_4 = var_5 . method_2 ( var_1 , var_3 , var_2 ) ; var_6 . info ( string_3 , var_4 ) ; } catch ( type_1 var_7 ) { var_6 . error ( string_4 , var_7 . method_3 ( ) , var_7 ) ; } }
[0]: private boolean method_1 ( type_1 args, final type_2 var_1 ) { java.lang.string var_2 = args. method_2 ( 0, string_1 ) ; java.lang.string var_3 = args. method_2 ( 1, null ) ; if ( type_3. isempty ( var_2 ) ) { this. error ( var_1, string_2 ) ; return false ; } var_4. method_3 ( var_2, var_3 ) ; var_1. method_4 ( ) ; return true ; }

************

************
tgt: private synchronized void method_1 ( type_1 var_1 , type_2 var_2 ) { java.util.map < type_3 , java.util.set < type_4 > > var_3 ; synchronized ( var_4 ) { var_3 = method_2 ( var_4 ) ; } for ( java.util.map.entry < type_3 , java.util.set < type_4 > > var_5 : var_3 . method_3 ( ) ) { type_3 var_6 = var_5 . method_4 ( ) ; java.util.set < type_4 > var_7 = var_5 . getvalue ( ) ; method_5 ( var_6 , var_7 , var_1 , var_2 ) ; } }
[0]: public void method_1 ( ) { if (! ( args. method_2 ( 0 ) ) ) { java.lang.string var_1 = args. get ( 0 ) ; int var_2 = var_3 ; if ( var_4. equals ( string_1 ) ) { var_2 = var_5 ; } else if ( var_4. equals ( string_2 ) ) { var_2 = var_6 ; } var_7. getactivity ( ). method_3 ( ). method_4 ( var_2 ) ; } else { var_8. error ( string_3 ) ; } var_8. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == char_1 ) { var_2 += float_1 * ( ( var_3 ) / int_1 ) ; var_3 -= float_2 ; if ( ( var_3 ) < 0 ) { var_1 = char_2 ; var_4 = var_2 ; var_2 = 0.0f ; var_3 = var_5 ; } } }
[0]: public void method_1 ( ) { assertequals ( string_1, type_1. method_2 ( type_2 ). tostring ( ) ) ; assertequals ( string_2, type_3. tostring ( ) ) ; assertequals ( string_3, type_4. tostring ( ) ) ; assertequals ( string_4, type_2. tostring ( ) ) ; assertequals ( string_2, type_3. tostring ( ) ) ; assertequals ( string_2, type_3. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_1 . size ( ) ) == 0 ) ) { java.lang.system.out.println ( string_1 ) ; } else { java.lang.system.out.println ( string_2 ) ; for ( type_1 n : var_1 . values ( ) ) n . method_2 ( ) ; } }
[0]: public void method_1 ( int position ) { type_1 var_1 = var_2. get ( position ) ; var_3. method_2 ( position ) ; var_4. remove ( position ) ; var_3. method_3 ( ) ; var_1. method_4 ( new type_2 ( ) { public void method_5 ( type_3 var_5 ) { if ( var_5 == null ) { method_6 ( string_1 ) ; } else { var_5. method_7 ( ) ; method_6 ( string_2 ) ; } } } ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { var_1 = ( var_1 < 0 ) ? 0 : var_1 > 1 ? 1 : var_1 ; this . var_1 = var_1 ; if ( ( this . var_2 ) != ( var_3 ) ) { var_4 = ( ( float ) ( ( ( ( float_1 / ( ( var_5 ) / int_1 ) ) / ( var_6 ) ) * float_2 ) * ( 1 - ( var_7 ? var_1 : 0 ) ) ) ) ; } }
[0]: public java.lang.object method_1 ( type_1 var_1, type_2 < java.lang.string, java.lang.integer > var_2, type_3 var_3 ) { java.lang.string var_4 = var_1. getid ( ) ; type_4 value = var_3. get ( var_2. get ( var_4 ). intvalue ( ) ) ; return method_1 ( var_1, value ) ; }

************

************
tgt: public static int method_1 ( int var_1 , int var_2 , int var_3 ) { if ( var_2 == 0 ) return 1 ; if ( var_2 == 1 ) return var_1 ; final int var_4 = type_1 . method_1 ( var_1 , ( var_2 / int_1 ) , var_3 ) ; if ( ( var_2 % int_1 ) == 0 ) return ( var_4 * var_4 ) % var_3 ; else return ( ( ( var_4 * var_4 ) % var_3 ) * var_1 ) % var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_1 [ ] temp = new type_1 [ ( var_2. length ) + 1 ] ; type_2. method_2 ( var_2, 0, temp, 0, var_2. length ) ; temp [ ( ( var_2. length ) + 1 ) ] = var_1 ; var_2 = temp ; }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 ) { assert var_2 . method_2 ( ) . method_3 ( ) ; if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_1 var_3 = var_4 ; if ( var_3 == null ) { return ; } type_2 . method_4 ( var_3 . msg ) ; type_3 var_5 = var_6 ; type_4 . method_5 ( var_5 , var_1 ) ; method_6 ( var_3 , true ) ; }
[0]: private void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { java.lang.string message = ( ( string_1 + ( var_2 ) ) + string_2 ) + i ; var_3. method_2 ( message ) ; type_1. method_3 ( ) ; } var_4. method_4 ( ) ; }

************

************
tgt: public static java.lang.string [ ] method_1 ( java.lang.string ... values ) { java.lang.string [ ] var_1 = new java.lang.string [ values . length ] ; for ( int i = 0 ; i < ( values . length ) ; i ++ ) { try { var_1 [ i ] = ( ( java.lang.integer.parseint ( values [ i ] . trim ( ) ) ) / ( int_1 * int_1 ) ) + string_1 ; } catch ( type_1 var_2 ) { var_2 . method_2 ( ) ; } } return var_1 ; }
[0]: public void method_1 ( long var_1 ) { int var_2 = ( ( int ) ( var_1 ) ) / int_1 ; int var_3 = ( ( ( int ) ( var_1 ) ) / int_2 ) % int_3 ; java.lang.string time = ( ( java.lang.integer.tostring ( var_2 ) ) + string_1 ) + ( java.lang.string.format ( string_2, var_3 ) ) ; var_4. settext ( time ) ; var_5 = var_1 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { var_2 = ( ( type_2 ) ( var_1 . method_2 ( var_3 ) ) ) ; var_4 = ( ( type_3 ) ( type_4 . method_3 ( var_2 ) ) ) ; if ( ( var_4 ) != null ) { method_4 ( var_4 ) ; } } if ( ( var_4 ) == null ) { var_4 = method_5 ( ) ; var_2 = type_4 . method_6 ( var_4 ) ; } }
[0]: public void method_1 ( ) { final type_1 results = var_1. method_2 ( string_1 ) ; new type_2 ( method_3 ( ), int_1 ). method_4 ( string_2 ). method_5 ( type_3. method_6 ( results. method_7 ( ), string_3 ) ) ; var_2. method_8 ( ) ; final int var_3 = type_4. method_9 ( results. method_7 ( ). gettext ( ), string_4 ) ; type_5. method_10 ( string_5, var_3, type_6. method_11 ( 1 ) ) ; }

************

************
tgt: private java.util.set < type_1 > method_1 ( type_2 var_1 , type_1 var_2 ) { java.util.set < type_1 > var_3 = new java.util.hashset ( var_1 . method_2 ( var_2 ) ) ; for ( type_1 c : var_1 . method_3 ( var_2 ) ) { for ( type_1 p : var_1 . method_4 ( c ) ) { if ( p != c ) { var_3 . add ( p ) ; } } } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; this. var_2 = var_1. method_2 ( string_1 ) ; this. var_3 = var_1. method_2 ( string_2 ) ; this. var_4 = new type_2 ( ( ( type_1 ) ( var_1. method_3 ( string_3 ) ) ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 args , final type_2 var_1 ) { java.lang.string var_2 = args . method_2 ( 0 , string_1 ) ; if ( type_3 . isempty ( var_2 ) ) { this . error ( var_1 , string_2 ) ; return false ; } var_4 . method_3 ( var_2 , null ) ; var_1 . method_4 ( ) ; return true ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) throws java.lang.exception { boolean var_2 = true ; try { java.util.list < java.lang.string > var_3 = var_4. method_2 ( ) ; if ( ( var_3. size ( ) ) > 0 ) { var_2 = false ; for ( java.lang.string var_5 : var_3 ) { if ( var_5. method_3 ( var_1 ) ) { var_2 = true ; break ; } } } } catch ( java.lang.exception var_6 ) { throw var_6 ; } return var_2 ; } }

************

************
tgt: public void method_1 ( ) { int var_2 = var_3 ; if ( var_1 . equals ( string_1 ) ) { var_2 = var_5 ; } else if ( var_1 . equals ( string_2 ) ) { var_2 = var_6 ; } var_7 . getactivity ( ) . method_3 ( ) . method_4 ( var_2 ) ; var_8 . method_5 ( ) ; }
[0]: public void method_1 ( type_1 handle ) { type_2 var_1 = ( ( type_2 ) ( handle ) ) ; type_3 msg = var_1. method_2 ( ) ; java.lang.string var_2 = msg. method_3 ( ). getname ( ) ; type_4 var_3 = var_4. method_4 ( ) ; var_3. method_5 ( ) ; msg. method_6 ( var_3 ) ; var_3. method_7 ( ) ; var_4. method_1 ( var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( ) { assertequals ( string_1 , method_2 ( type_2 ) . tostring ( ) ) ; assertequals ( string_2 , type_3 . tostring ( ) ) ; assertequals ( string_3 , type_4 . tostring ( ) ) ; assertequals ( string_4 , type_2 . tostring ( ) ) ; assertequals ( string_2 , type_3 . tostring ( ) ) ; }
[0]: public java.lang.string method_1 ( ) { int var_1 = ( ( int ) ( ( var_2 ) / int_1 ) ) ; int var_3 = ( ( int ) ( ( ( var_2 ) / ( int_1 * int_2 ) ) % int_2 ) ) ; int var_4 = ( ( int ) ( ( ( var_2 ) / ( ( int_1 * int_2 ) * int_2 ) ) % int_3 ) ) ; return java.lang.string.format ( string_1, var_4, var_3, var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { var_3 . method_2 ( position ) ; var_4 . remove ( position ) ; var_3 . method_3 ( ) ; var_1 . method_4 ( new type_2 ( ) { public void method_5 ( type_3 var_5 ) { if ( var_5 == null ) { method_6 ( string_1 ) ; } else { var_5 . method_7 ( ) ; method_6 ( string_2 ) ; } } } ) ; method_8 ( ) ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : if ( type_2. method_3 ( this ) ) { var_2. show ( ) ; android.content.intent intent = new android.content.intent ( this, var_3 class ) ; method_4 ( intent ) ; } break ; } return true ; } }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 , type_2 < java.lang.string , java.lang.integer > var_2 , type_3 var_3 ) { java.lang.string var_4 = var_1 . getid ( ) ; type_4 value ; value = var_3 . get ( var_2 . get ( var_4 ) . intvalue ( ) ) ; return method_1 ( var_1 , value ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception { if ( ( ( var_2 ) == null ) || ( ( ( type_3. method_2 ( ) ) - ( var_3 ) ) > ( var_4 ) ) ) { var_2 = method_3 ( var_1, var_5, string_1 ) ; var_6 = new java.util.date ( ). gettime ( ) ; } method_4 ( var_2 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_1 [ ] temp = new type_1 [ ( var_2 . length ) + 1 ] ; type_2 . method_2 ( var_2 , 0 , temp , 0 , var_2 . length ) ; temp [ var_2 . length ] = var_1 ; var_2 = temp ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_3 = var_2. method_2 ( ) ; try { var_4 = var_5. method_3 ( ( ( type_3 ) ( var_4 ) ), var_3. method_4 ( ), var_3. method_5 ( ) ) ; } catch ( java.io.ioexception var_6 ) { java.util.logging.logger.getlogger ( var_7 class. getname ( ) ). method_6 ( var_8, null, var_6 ) ; } method_7 ( ) ; }

************

************
tgt: private void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { java.lang.string message = ( ( string_1 + ( var_2 ) ) + string_2 ) + i ; if ( ( i + 1 ) == ( var_1 ) ) { var_3 . method_2 ( message , var_4 ) ; } else { var_3 . method_2 ( message ) ; } type_1 . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 ; long var_3 ; method_2 ( true ) ; var_2 = var_1. method_3 ( ) ; var_3 = var_2. getid ( ) ; if ( var_3 >= ( var_4 ) ) { var_4 = var_3 + 1 ; } if ( var_3 < ( var_5 ) ) { var_5 = var_3 + 1 ; } var_6. add ( var_2 ) ; method_4 ( false ) ; }

************

************
tgt: public void method_1 ( long var_1 ) { if ( ( var_1 % int_2 ) == 0 ) { int var_2 = ( ( int ) ( var_1 ) ) / int_1 ; int var_3 = ( ( ( int ) ( var_1 ) ) / int_2 ) % int_3 ; java.lang.string time = ( ( java.lang.integer.tostring ( var_2 ) ) + string_1 ) + ( java.lang.string.format ( string_2 , var_3 ) ) ; var_4 . settext ( time ) ; } var_5 = var_1 ; }
[0]: public void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { response. method_2 ( var_2 ) ; var_1. method_3 ( var_3, string_1 ) ; type_4 view = var_1. method_4 ( var_4 ) ; view. method_5 ( var_1, response ) ; }

************

************
tgt: public void method_1 ( ) { final type_1 results = var_1 . method_2 ( string_1 ) ; new type_2 ( method_3 ( ) , int_1 ) . method_4 ( string_2 ) . method_5 ( type_3 . method_6 ( results . method_7 ( ) , string_3 ) ) ; var_2 . method_8 ( ) ; final int var_3 = type_4 . method_9 ( results . method_7 ( ) . gettext ( ) , string_4 ) ; method_10 ( string_5 , var_3 , type_6 . method_11 ( 1 ) ) ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1, java.util.list < java.lang.integer > var_2 ) { java.util.collections.sort ( var_2 ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { for ( type_1 var_3 : var_1 ) { if ( ( var_3. method_2 ( ) ) == ( var_2. get ( i ) ) ) { var_3. method_3 ( ( i + 1 ) ) ; break ; } } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; this . var_2 = var_1 . method_2 ( string_1 ) ; this . var_3 = var_1 . method_2 ( string_2 ) ; if ( ( var_1 . method_3 ( string_3 ) ) != null ) this . var_4 = new type_2 ( ( ( type_1 ) ( var_1 . method_3 ( string_3 ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_1 ( string_1, var_2 class ) ; var_1. method_1 ( string_2, var_3 class ) ; var_1. method_1 ( string_3, var_4 class ) ; var_1. method_1 ( string_4, var_5 class ) ; var_1. method_1 ( string_5, var_6 class ) ; var_1. method_1 ( string_6, var_7 class ) ; var_1. method_1 ( string_7, var_6 class ) ; var_1. method_1 ( string_8, var_8 class ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) throws java.lang.exception { boolean var_2 = false ; try { java.util.list < java.lang.string > var_3 = var_4 . method_2 ( ) ; if ( ( var_3 . size ( ) ) > 0 ) { for ( java.lang.string var_5 : var_3 ) { if ( var_5 . method_3 ( var_1 ) ) { var_2 = true ; break ; } } } } catch ( java.lang.exception var_6 ) { throw var_6 ; } return var_2 ; }
[0]: private int method_1 ( ) { if ( ( this. var_1 ) <= ( var_2 ) ) return this. var_1 ; else if ( ( this. var_1 ) >= ( ( var_3 ) - ( var_2 ) ) ) return ( this. var_1 ) - ( var_2 ) ; else return var_2 ; }

************

************
tgt: public void method_1 ( type_1 handle ) { type_2 var_1 = ( ( type_2 ) ( handle ) ) ; type_3 msg = var_1 . method_2 ( ) ; java.lang.string var_2 = msg . method_3 ( ) . getname ( ) ; type_4 var_3 = var_4 . method_4 ( ) ; if ( var_3 != null ) { var_3 . method_5 ( ) ; msg . method_6 ( var_3 ) ; var_3 . method_7 ( ) ; } var_4 . method_1 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { var_3. method_2 ( ) ; var_2 = false ; var_4. settext ( string_1 ) ; } else { var_3. method_3 ( ) ; var_2 = true ; var_4. settext ( string_2 ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { int var_1 = ( ( int ) ( ( ( var_2 ) / int_1 ) % int_2 ) ) ; int var_3 = ( ( int ) ( ( ( var_2 ) / ( int_1 * int_2 ) ) % int_2 ) ) ; int var_4 = ( ( int ) ( ( ( var_2 ) / ( ( int_1 * int_2 ) * int_2 ) ) % int_3 ) ) ; return java.lang.string.format ( string_1 , var_4 , var_3 , var_1 ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { int var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ). method_3 ( ) ; if ( var_3 == ( var_5 ) ) { var_6 = 1 ; } else if ( var_3 == ( var_7 ) ) { var_6 = int_1 ; } var_8. method_4 ( var_6 ) ; method_5 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : if ( type_2 . method_3 ( this ) ) { var_2 . show ( ) ; android.content.intent intent = new android.content.intent ( this , var_3 class ) ; method_4 ( intent ) ; return true ; } break ; } return super . method_1 ( item ) ; }
[0]: private void method_1 ( ) { var_1. get ( 0 ). method_2 ( var_2 ) ; var_1. get ( 1 ). method_2 ( var_3 ) ; var_1. get ( int_1 ). method_2 ( var_4 ) ; var_1. get ( int_2 ). method_2 ( var_5 ) ; var_1. get ( int_1 ). method_2 ( var_4 ) ; var_1. get ( int_2 ). method_2 ( var_5 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : break ; case var_3 : break ; case var_4 : android.content.intent var_5 = new android.content.intent ( method_2 ( ) , var_6 class ) ; method_3 ( var_5 ) ; break ; case var_7 : android.content.intent var_8 = new android.content.intent ( method_2 ( ) , var_9 class ) ; method_3 ( var_8 ) ; break ; } }
[0]: public type_1 method_1 ( int var_1 ) { var_1 = int_1 ; if ( ( ( ( var_2 )!= null ) && ( 1 <= var_1 ) ) && ( 1 <= ( var_2. size ( ) ) ) ) { return var_2. get ( ( var_1 - 1 ) ) ; } return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception { if ( ( ( var_2 ) == null ) || ( ( ( type_3 . method_2 ( ) ) - ( var_6 ) ) > ( var_4 ) ) ) { var_2 = method_3 ( var_1 , var_5 , string_1 ) ; var_6 = new java.util.date ( ) . gettime ( ) ; } method_4 ( var_2 ) ; return var_2 ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; for ( type_1 var_2 : var_3. values ( ) ) { long var_4 = var_2. method_3 ( ) ; if ( var_4 > 0 ) { java.lang.system.out.println ( string_1 ) ; } if ( var_4 == 0 ) { continue ; } java.lang.string var_5 = var_2. method_4 ( ) ; var_1. put ( var_4, var_5 ) ; var_1. method_5 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_3 = var_2 . method_2 ( ) ; try { if ( ( var_4 ) != null ) var_4 = var_5 . method_3 ( ( ( type_3 ) ( var_4 ) ) , var_3 . method_4 ( ) , var_3 . method_5 ( ) ) ; } catch ( java.io.ioexception var_6 ) { java.util.logging.logger.getlogger ( var_7 class . getname ( ) ) . method_6 ( var_8 , null , var_6 ) ; } method_7 ( ) ; }
[0]: public int method_1 ( ) { var_1. method_2 ( ) ; try { for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { if ( ( var_2 [ i ] ) == null ) { return i ; } } return int_1 ; } finally { var_1. method_3 ( ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 ; long var_3 ; method_2 ( true ) ; var_2 = var_1 . method_3 ( ) ; var_3 = var_2 . getid ( ) ; if ( var_3 >= ( var_4 ) ) { var_4 = var_3 + 1 ; } if ( var_3 < ( var_5 ) ) { var_5 = var_3 ; } var_6 . add ( var_2 ) ; method_4 ( false ) ; }
[0]: public void method_1 ( final type_1 < type_2 > var_1 ) throws type_3 { if ( this. var_2. method_2 ( ). method_3 ( ) ) { this. var_2. method_2 ( ). method_1 ( var_1 ) ; } else if (! ( this. var_2. isempty ( ) ) ) { type_4 < type_2 > var_3 = this. var_2. method_4 ( ) ; var_3. method_5 ( ) ; this. method_1 ( var_1 ) ; } else { throw new type_3 ( string_1 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { response . method_2 ( var_2 ) ; var_1 . method_3 ( var_3 , string_1 ) ; type_4 view = var_1 . method_4 ( var_4 ) ; view . method_5 ( var_1 , response ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string var_2 ) { if ( var_1 == null ) return string_1 ; switch ( var_2 ) { case string_2 : return var_3. method_2 ( var_1. method_3 ( ) ) ; case string_3 : java.lang.string var_4 = var_3. method_2 ( var_1. method_3 ( ) ) ; if (! ( var_4. isempty ( ) ) ) return type_2. method_4 ( var_4 ) ; return var_4 ; default : return null ; } } }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 , java.util.list < java.lang.integer > var_2 ) { java.util.collections.sort ( var_2 ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { for ( type_1 var_3 : var_1 ) { if ( var_3 . method_2 ( ) . equals ( var_2 . get ( i ) ) ) { var_3 . method_3 ( ( i + 1 ) ) ; } } } }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_1 = null ; return ; } try { if ( ( var_2 )!= null ) { var_2. method_1 ( ) ; var_2 = null ; } } catch ( final java.lang.nullpointerexception var_3 ) { } catch ( final java.lang.throwable var_3 ) { java.lang.system.err.println ( var_3. method_2 ( ) ) ; } super. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_1 ( string_1 , var_2 class ) ; var_1 . method_1 ( string_2 , var_3 class ) ; var_1 . method_1 ( string_3 , var_4 class ) ; var_1 . method_1 ( string_4 , var_5 class ) ; var_1 . method_1 ( string_6 , var_7 class ) ; var_1 . method_1 ( string_7 , var_6 class ) ; var_1 . method_1 ( string_8 , var_8 class ) ; }
[0]: private boolean method_1 ( java.lang.string var_1, java.lang.string classname ) { type_1 var_2 = new type_1 ( classname, var_1, false ) ; type_2 var_3 = type_3. method_2 ( var_2 ) ; var_3. method_3 ( ) ; type_4 var_4 = var_3. method_4 ( ) ; if ( var_4. method_5 ( ) ) { info = method_6 ( var_4, var_2 ) ; return false ; } return true ; }

************

************
tgt: private int method_1 ( ) { if ( ( this . var_1 ) <= ( var_2 ) ) return this . var_1 ; else if ( ( this . var_1 ) >= ( ( var_3 ) - ( var_2 ) ) ) return ( var_3 ) - ( this . var_1 ) ; else return var_2 ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1. method_2 ( ) ) ) ; int var_4 = var_3. method_3 ( ) ; if ( var_4 == ( ( var_5. method_4 ( ) ) - 1 ) ) { var_6. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { var_3 . method_2 ( ) ; var_2 = false ; var_4 . settext ( string_2 ) ; } else { var_3 . method_3 ( ) ; var_2 = true ; var_4 . settext ( string_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this. method_2 ( ) ; var_2. remove ( var_1 ) ; this. set ( new type_2 ( this. getname ( ), this. method_3 ( ), var_2, this. method_4 ( ), this. method_5 ( ), this. method_6 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { int var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) . method_3 ( ) ; if ( var_3 == ( var_5 ) ) { var_6 = 1 ; } else if ( var_3 == ( var_7 ) ) { var_6 = int_1 ; } method_5 ( var_6 ) ; }
[0]: public void method_1 ( java.lang.string out ) { try { java.lang.string [ ] tmp = out. split ( string_1 ) ; java.lang.string format = tmp [ ( ( tmp. length ) - 1 ) ] ; type_1. method_1 ( var_1, format, new java.io.file ( out ) ) ; } catch ( java.lang.exception var_2 ) { type_2. method_2 ( null, string_2, string_3, var_3 ) ; } }

************

************
tgt: protected void method_1 ( ) { var_1 . get ( 0 ) . method_2 ( var_2 ) ; var_1 . get ( 1 ) . method_2 ( var_3 ) ; var_1 . get ( int_1 ) . method_2 ( var_4 ) ; var_1 . get ( int_2 ) . method_2 ( var_5 ) ; }
[0]: public void init ( ) throws java.io.ioexception, type_1, type_2 { if (! ( var_1 ) ) { var_1 = true ; type_3. start ( ) ; while ( ( type_3. method_1 ( ). method_2 ( ) ) <= 0 ) { java.lang.thread. method_3 ( int_1 ) ; } } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { if ( ( ( ( var_2 ) != null ) && ( 1 <= var_1 ) ) && ( 1 <= ( var_2 . size ( ) ) ) ) { return var_2 . get ( ( var_1 - 1 ) ) ; } return null ; }
[0]: public static void method_1 ( double [ ] [ ] var_1 ) { int var_2 = var_1. length ; int var_3 = var_1 [ 0 ]. length ; for ( int i = 0 ; i < var_2 ; i ++ ) { for ( int j = 0 ; j < var_3 ; j ++ ) { java.lang.system.out.print ( ( ( var_1 [ i ] [ j ] ) + string_2 ) ) ; } } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; for ( type_1 var_2 : var_3 . values ( ) ) { long var_4 = var_2 . method_3 ( ) ; if ( var_4 == 0 ) { continue ; } java.lang.string var_5 = var_2 . method_4 ( ) ; var_1 . put ( var_4 , var_5 ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; method_2 ( ). method_3 ( ) ; var_1. method_4 ( true ) ; for ( int i = 0 ; i < ( var_1. method_5 ( ) ) ; i ++ ) { for ( int j = 0 ; j < ( i + 1 ) ; j ++ ) { var_1. method_6 ( var_2. method_7 ( ), i ) ; } } var_1. method_4 ( false ) ; var_3. method_8 ( ) ; }

************

************
tgt: public int method_1 ( ) { var_1 . method_2 ( ) ; try { for ( int i = 0 ; i < int_1 ; i ++ ) { if ( ( var_2 [ i ] ) == null ) { return i ; } } return int_1 ; } finally { var_1 . method_3 ( ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string [ ] var_1 ) { java.lang.string var_2 = var_3. get ( var_1 [ 0 ] ) ; java.lang.string var_4 = method_2 ( var_1 [ 1 ] ) ; java.lang.string var_5 = method_2 ( var_1 [ int_1 ] ) ; java.lang.string var_6 = method_2 ( var_1 [ int_2 ] ) ; java.lang.string format = string_1 ; java.lang.string var_7 = string_2 ; return ( ( ( ( var_2 + format ) + var_5 ) + var_4 ) + var_6 ) + var_7 ; }

************

************
tgt: public void method_1 ( final type_1 < type_2 > var_1 ) throws type_3 { if ( ! ( this . var_2 . isempty ( ) ) ) { if ( this . var_2 . method_2 ( ) . method_3 ( ) ) { this . var_2 . method_2 ( ) . method_1 ( var_1 ) ; } else { type_4 < type_2 > var_3 = this . var_2 . method_4 ( ) ; var_3 . method_5 ( ) ; this . method_1 ( var_1 ) ; } } else { throw new type_3 ( string_1 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.classnotfoundexception { type_1 var_1 = null ; type_2 var_2 = null ; type_3 var_3 ; java.lang.thread var_4 ; int var_5 = int_1 ; while ( true ) { try { var_1 = new type_1 ( var_5 ) ; var_2 = var_1. method_1 ( ) ; var_3 = new type_3 ( var_2 ) ; var_4 = new java.lang.thread ( var_3 ) ; var_4. start ( ) ; } catch ( java.io.ioexception var_6 ) { } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( var_1 == null ) return string_1 ; switch ( var_2 ) { case string_2 : return var_3 . method_2 ( var_1 . getname ( ) ) ; case string_3 : java.lang.string var_4 = var_3 . method_2 ( var_1 . getname ( ) ) ; if ( ! ( var_4 . isempty ( ) ) ) return type_2 . method_4 ( var_4 ) ; return var_4 ; default : return null ; } }
[0]: protected void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2 = var_1. method_2 ( string_1 ) ; } else { type_1 var_3 = getintent ( ). method_3 ( ) ; var_4 = var_3. getboolean ( string_2 ) ; var_2 = var_3. method_2 ( string_1 ) ; } var_2 = var_3. method_2 ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { var_1 = null ; return ; } try { var_2 . method_1 ( ) ; } catch ( final java.lang.nullpointerexception var_3 ) { } catch ( final java.lang.throwable var_3 ) { java.lang.system.err.println ( var_3 . method_2 ( ) ) ; } super . method_1 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( var_2 ) ; var_2. method_2 ( int_1, int_2 ) ; var_2. method_2 ( 1, int_2 ) ; type_2 var_3 = var_2. method_1 ( int_1 ) ; type_3. asserttrue ( string_1, ( ( var_3. method_3 ( ) ) == 1 ) ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string classname ) { type_1 var_2 = new type_1 ( classname , var_1 , false ) ; type_2 var_3 = type_3 . method_2 ( var_2 ) ; var_3 . method_3 ( ) ; type_4 var_4 = var_3 . method_4 ( ) ; if ( var_4 . method_5 ( ) ) { info = method_6 ( var_4 , var_2 ) ; return false ; } return true ; }
[0]: public static void method_1 ( ) throws java.io.ioexception { for ( type_1 var_1 : var_2 ) { java.lang.system.out.println ( var_1. method_2 ( ) ) ; } java.io.filewriter var_3 = new java.io.filewriter ( new java.io.file ( string_1 ), false ) ; for ( type_1 var_4 : var_2 ) { java.lang.string var_5 = ( var_4. tostring ( ) ) + ( var_5. tostring ( ) ) ; var_3. append ( var_5 ) ; } var_3. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 . method_2 ( ) ) ) ; int var_4 = var_3 . method_3 ( ) ; if ( var_4 == ( ( var_5 . method_4 ( ) ) - 1 ) ) { var_6 . method_5 ( var_4 ) ; } }
[0]: public static double method_1 ( double [ ] var_1, double [ ] var_2 ) { double var_3 = 1 / ( var_1. length ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_3 += java.lang.math.pow ( ( ( var_1 [ i ] ) - ( var_2 [ i ] ) ), int_1 ) ; } return type_1. method_2 ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this . method_2 ( ) ; var_2 . remove ( var_1 ) ; this . update ( new type_2 ( this . getname ( ) , this . method_3 ( ) , var_2 , this . method_4 ( ) , this . method_5 ( ) , this . method_6 ( ) ) ) ; }
[0]: public void method_1 ( final int index ) { var_1 = true ; if ( index > ( - 1 ) ) { method_2 ( ). select ( index ) ; } else { method_2 ( ). method_3 ( method_2 ( ). method_4 ( ) ) ; } var_1 = false ; if (! ( method_2 ( ). method_5 ( ) ) ) { method_6 ( method_2 ( ). gettext ( ) ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string out ) throws java.io.ioexception { java.lang.string [ ] tmp = out . split ( string_1 ) ; java.lang.string format = tmp [ ( ( tmp . length ) - 1 ) ] ; type_1 . method_1 ( var_1 , format , new java.io.file ( out ) ) ; }
[0]: public void method_1 ( android.view.view view ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, java.lang.string. method_3 ( var_2 ) ) ; switch ( view. getid ( ) ) { case var_3 : android.content.intent var_4 = new android.content.intent ( this, var_5 class ) ; var_4. method_4 ( var_1 ) ; method_5 ( var_4 ) ; break ; } }

************

************
tgt: public static void init ( ) throws java.io.ioexception , type_1 , type_2 { if ( ! ( var_1 ) ) { var_1 = true ; type_3 . start ( ) ; while ( ( type_3 . method_1 ( ) . method_2 ( ) ) <= 0 ) { java.lang.thread . method_3 ( 1 ) ; } } }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = var_4. method_2 ( var_1. getname ( ) ) ; if ( var_3!= null ) { var_2. method_3 ( var_5, var_3 ) ; return var_6 ; } else { var_2. method_3 ( var_7, ( ( string_1 + ( var_1. getname ( ) ) ) + string_2 ) ) ; return var_8 ; } }

************

************
tgt: public static void method_1 ( double [ ] result ) { java.lang.system.out.println ( string_1 ) ; for ( int i = 0 ; i < ( result . length ) ; i ++ ) { java.lang.system.out.print ( ( ( result [ i ] ) + string_2 ) ) ; } }
[0]: private java.util.list < java.lang.class > getclass ( java.lang.class var_1, java.util.list < java.lang.class > var_2 ) { if ( ( var_1. method_1 ( ) )!= null ) { if ( var_3 class. equals ( var_1. method_1 ( ). getname ( ) ) ) { return var_2 ; } else { var_2. add ( var_1. method_1 ( ) ) ; return getclass ( var_1. method_1 ( ), var_2 ) ; } } return var_2 ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; var_2 . method_3 ( ) ; var_1 . method_4 ( true ) ; for ( int i = 0 ; i < ( var_1 . method_5 ( ) ) ; i ++ ) { for ( int j = 0 ; j < ( i + 1 ) ; j ++ ) { var_1 . method_6 ( var_2 . method_7 ( ) , i ) ; } } var_1 . method_4 ( false ) ; var_3 . method_8 ( ) ; }
[0]: private void method_1 ( java.lang.exception var_1 ) { if ( var_2 ) { type_1 < type_2 > var_3 = method_2 ( 0 ) ; type_2 var_4 = var_3. method_3 ( ) ; var_4. method_4 ( 0, var_1. method_5 ( ) ) ; try { var_3. method_6 ( var_4 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_7 ( ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string [ ] var_1 ) { java.lang.string var_2 = var_3 . get ( var_1 [ 0 ] ) ; java.lang.string var_6 = method_2 ( var_1 [ 1 ] ) ; java.lang.string var_5 = method_2 ( var_1 [ int_1 ] ) ; java.lang.string var_4 = method_2 ( var_1 [ int_2 ] ) ; java.lang.string format = string_1 ; java.lang.string var_7 = string_2 ; return ( ( ( ( var_2 + format ) + var_4 ) + var_5 ) + var_6 ) + var_7 ; }
[0]: public static boolean method_1 ( java.lang.string key ) { if ( key == null ) return false ; else if ( var_1. method_2 ( key ) ) return type_1. method_3 ( ). method_4 ( var_1. get ( key ) ) ; else if ( ( key. length ( ) ) > 0 ) return var_2. method_1 ( key. method_5 ( 0 ) ) ; return false ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception , java.lang.classnotfoundexception { type_1 var_1 = null ; type_2 var_2 = null ; type_3 var_3 ; java.lang.thread var_4 ; int var_5 = int_1 ; var_1 = new type_1 ( var_5 ) ; while ( true ) { try { var_2 = var_1 . method_1 ( ) ; var_3 = new type_3 ( var_2 ) ; var_4 = new java.lang.thread ( var_3 ) ; var_4 . start ( ) ; } catch ( java.io.ioexception var_6 ) { } } }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { int i = 0 ; int var_1 = int_1 ; while ( ( i ++ ) < var_1 ) { type_2 var_2 = var_3. method_2 ( ) ; type_3 var_4 = new type_3 ( var_2, var_5, var_6 ) ; java.lang.thread t = new java.lang.thread ( var_4 ) ; t. start ( ) ; var_7. info ( ( string_1 + ( t. getid ( ) ) ) ) ; } return this ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { var_2 = var_1 . method_2 ( string_1 ) ; var_4 = var_1 . getboolean ( string_2 , false ) ; } else { type_1 var_3 = getintent ( ) . method_3 ( ) ; var_4 = var_3 . getboolean ( string_2 ) ; var_2 = var_3 . method_2 ( string_1 ) ; } }
[0]: public void method_1 ( ) { var_1 = new float [ var_2 ] [ ( var_3 ) * ( var_4 ) ] ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) var_1 [ i ] = method_2 ( ) ; var_5 = 1 ; type_1. method_3 ( new type_2 ( var_6, null ) ) ; type_1. method_3 ( new type_2 ( var_7, new java.lang.string [ ] { string_1 } ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( var_2 ) ; var_2 . method_2 ( int_1 , int_2 ) ; var_2 . method_2 ( 1 , int_2 ) ; type_2 var_3 = var_2 . method_1 ( int_1 ) ; type_3 . assertequals ( string_1 , 1 , var_3 . method_3 ( ) ) ; }
[0]: public java.io.file method_1 ( java.lang.string var_1, boolean var_2 ) { if ( var_1. method_2 ( var_3 ) ) { var_1 = type_1. method_3 ( var_1 ) ; } java.io.file var_4 = ( var_2 )? new java.io.file ( method_1 ( ), var_1 ) : new java.io.file ( var_5, var_1 ) ; return var_4 ; }

************

************
tgt: public static void method_1 ( ) throws java.io.ioexception { java.io.filewriter var_3 = new java.io.filewriter ( new java.io.file ( string_1 ) , false ) ; for ( type_1 var_4 : var_2 ) { java.lang.string var_5 = ( var_4 . tostring ( ) ) + "\n" ; var_3 . append ( var_5 ) ; } var_3 . method_1 ( ) ; }
[0]: public void method_1 ( ) throws type_1, type_2, type_3 { type_4 p = type_4. method_2 ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) ) ; type_5 result = ( ( type_5 ) ( p. execute ( ) ) ) ; type_6. assertequals ( type_5. method_3 ( java.lang.long. method_3 ( var_1 ) ). method_4 ( type_5. method_3 ( java.lang.long. method_3 ( var_2 ) ) ), result ) ; }

************

************
tgt: public static double method_1 ( double [ ] var_1 , double [ ] var_2 ) { double var_3 = 0.0 ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_3 += java.lang.math.pow ( ( ( var_1 [ i ] ) - ( var_2 [ i ] ) ) , int_1 ) ; } return type_1 . method_2 ( ( var_3 / ( var_1 . length ) ) ) ; }
[0]: public static void method_1 ( type_1 target, type_2 view, int var_1, type_3 var_2 ) { for ( type_2 var_3 : new type_2 ( 0, 0, target. method_2 ( ), target. method_3 ( ) ). method_4 ( var_1 ) ) { type_4. method_5 ( new type_5 ( var_3, view, var_2 ) ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; method_3 ( var_1 . method_4 ( ) ) . method_5 ( int_1 ) ; type_3 var_3 = new type_4 ( ) . build ( ) ; var_3 . method_6 ( var_1 ) ; type_5 . assertequals ( int_2 , var_3 . method_7 ( ) ) ; }
[0]: public int method_1 ( android.content.intent intent, int var_1, int var_2 ) { int var_3 = var_4 ; if ( intent == null ) { return var_3 ; } int var_5 = intent. method_2 ( var_6, 0 ) ; if ( var_7 [ var_5 ] ) { type_1. method_3 ( string_1 ) ; return var_3 ; } var_7 [ var_5 ] = true ; method_4 ( var_5 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( final int index ) { var_1 = true ; if ( index > ( - 1 ) ) { method_2 ( ) . select ( index ) ; } else { method_2 ( ) . method_3 ( method_2 ( ) . method_4 ( ) ) ; } var_1 = false ; if ( ! ( method_2 ( ) . method_5 ( ) ) ) { method_6 ( method_2 ( ) . gettext ( ) , index ) ; } }
[0]: public boolean method_1 ( int index, type_1 var_1 ) { if ( ( method_2 ( index ) )!= null ) { return false ; } try { this. var_2 [ index ] = var_1 ; var_1. method_3 ( this ) ; return true ; } catch ( java.lang.exception var_3 ) { return false ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( string_1 , java.lang.string . method_3 ( var_2 ) ) ; android.content.intent var_4 = new android.content.intent ( this , var_5 class ) ; var_4 . method_4 ( var_1 ) ; method_5 ( var_4 ) ; }
[0]: public void method_1 ( java.io.file file, type_1 var_1 ) { type_2 var_2 = new type_2 ( file, var_3. method_2 ( ), var_3. getstring ( string_1 ), var_3. getstring ( string_2 ), var_3. getint ( string_3 ), var_3. method_3 ( string_4 ), var_3. method_3 ( string_5 ), var_3. method_3 ( string_6 ) ) ; var_4. add ( var_2 ) ; var_5. method_4 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { if ( ( var_1 == null ) || ( ( var_1 . getname ( ) ) == null ) ) { return var_8 ; } type_3 var_3 = var_4 . method_2 ( var_1 . getname ( ) ) ; if ( var_3 != null ) { var_2 . method_3 ( var_5 , var_3 ) ; return var_6 ; } else { var_2 . method_3 ( var_7 , ( ( string_1 + ( var_1 . getname ( ) ) ) + string_2 ) ) ; return var_8 ; } }
[0]: private void method_1 ( type_1 args, type_2 var_1 ) throws type_3 { type_4. method_2 ( string_1, string_2 ) ; final java.lang.string var_2 = args. getstring ( 0 ) ; type_4. method_2 ( string_1, ( string_3 + var_2 ) ) ; if ( var_2!= null ) { var_3. put ( var_2, var_1 ) ; } else { var_4 = var_1 ; } type_5. method_1 ( var_5. getactivity ( ), var_2 ) ; }

************

************
tgt: private java.util.list < java.lang.class > getclass ( java.lang.class var_1 , java.util.list < java.lang.class > var_2 ) { if ( ( var_1 . method_1 ( ) ) != null ) { if ( var_3 class . getname ( ) . equals ( var_1 . method_1 ( ) . getname ( ) ) ) { return var_2 ; } else { var_2 . add ( var_1 . method_1 ( ) ) ; return getclass ( var_1 . method_1 ( ) , var_2 ) ; } } return var_2 ; }
[0]: public java.lang.boolean method_1 ( final type_1 var_1 ) { boolean var_2 = false ; boolean var_3 = var_1. method_2 ( ) ; if (! var_3 ) { var_2 = false ; } else { type_2 var_4 = var_1. method_3 ( ) ; boolean var_5 = var_4. method_4 ( ) ; var_2 = var_5 ; } return java.lang.boolean. method_5 ( var_2 ) ; }

************

************
tgt: private void method_1 ( java.lang.string error ) { if ( var_2 ) { type_1 < type_2 > var_3 = method_2 ( 0 ) ; type_2 var_4 = var_3 . method_3 ( ) ; var_4 . method_4 ( 0 , error ) ; try { var_3 . method_6 ( var_4 ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_7 ( ) ; } } }
[0]: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : var_3 ) { type_1 var_4 = method_2 ( var_2 ) ; if ( var_4!= null ) { var_1. add ( method_2 ( var_2 ) ) ; } } return var_1 ; }

************

************
tgt: public static boolean method_1 ( java.lang.string key ) { if ( ( key == null ) || ( ( var_1 ) == null ) ) return false ; else if ( var_1 . method_2 ( key ) ) return type_1 . method_3 ( ) . method_4 ( var_1 . get ( key ) ) ; else if ( ( key . length ( ) ) > 0 ) return var_2 . method_1 ( key . method_5 ( 0 ) ) ; return false ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { this. source = var_2. data ; this. index = var_3 ; this. var_4 = var_3 ; this. var_5 = var_1. method_2 ( ) ; this. var_6 = 0 ; this. var_7 = this. var_5 ; return this ; }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { int i = 0 ; int var_1 = int_1 ; byte id = 1 ; while ( ( i ++ ) < var_1 ) { type_2 var_2 = var_3 . method_2 ( ) ; id ++ ; type_3 var_4 = new type_3 ( var_2 , var_5 , var_6 , id ) ; java.lang.thread t = new java.lang.thread ( var_4 ) ; t . start ( ) ; var_7 . info ( ( string_1 + ( t . getid ( ) ) ) ) ; } return this ; }
[0]: protected java.util.arraylist < java.lang.string > method_1 ( byte [ ]... var_1 ) { java.util.list < type_1 > results = var_2. method_2 ( new type_2 ( var_3 ) ) ; if ( ( results. size ( ) ) > 0 ) { for ( type_3 var_4 : results. get ( 0 ). method_3 ( ) ) { var_5. add ( var_4. getname ( ) ) ; } } return var_5 ; }

************

************
tgt: public void method_1 ( ) { var_1 = new float [ var_2 ] [ ( var_3 ) * ( var_4 ) ] ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) var_1 [ i ] = method_2 ( ) ; var_5 = 1 ; type_1 . method_3 ( new type_2 ( var_6 ) ) ; type_1 . method_3 ( new type_2 ( var_7 , new java.lang.string [ ] { string_1 } ) ) ; }
[0]: protected void method_1 ( int var_1, double var_2, double var_3 ) { if ( ( ( this ) instanceof type_1 ) && ( ( var_4 )!= null ) ) { type_1 var_5 = var_6. method_2 ( var_1 ) ; if ( var_5 == null ) return ; this. var_7 = var_8 ; } else this. var_7 = new type_2 ( ) ; this. var_7. method_3 ( var_2, var_3 ) ; this. var_7 = var_5 ; }

************

************
tgt: public java.io.file method_1 ( java.lang.string var_1 , boolean var_2 ) { java.lang.string name = var_1 ; if ( var_1 . method_2 ( var_3 ) ) { name = type_1 . method_3 ( var_1 ) ; } return var_2 ? new java.io.file ( method_1 ( ) , name ) : new java.io.file ( var_5 , name ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int i, long var_2 ) { type_2 var_3 = var_4. get ( i ) ; android.content.intent var_5 = new android.content.intent ( this, var_6 class ) ; var_5. method_2 ( string_1, var_3. method_3 ( ) ) ; var_5. method_2 ( string_2, var_3. method_4 ( ) ) ; method_5 ( var_5 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 , type_3 { type_4 p = type_4 . method_2 ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) ) ; java.lang.system.out.println ( p ) ; type_5 result = ( ( type_5 ) ( p . execute ( ) ) ) ; type_6 . assertequals ( type_5 . method_3 ( var_1 ) . method_4 ( type_5 . method_3 ( var_2 ) ) , result ) ; }
[0]: public void method_1 ( type_1 var_1 ) { while ( method_2 ( var_1 ) ) { type_1 x = new type_1 ( var_1 ) ; int var_2 = method_3 ( x ) ; x. method_4 ( var_2 ) ; method_5 ( x ) ; } if ( ( var_3 ) == ( - 1 ) ) { var_3 = 1 ; add ( var_1 ) ; } }

************

************
tgt: public static void method_1 ( type_1 target , type_2 view , int var_1 , type_3 var_2 ) { for ( type_2 var_3 : new type_2 ( 0 , 0 , target . method_2 ( ) , target . method_3 ( ) ) . method_4 ( var_1 ) ) { type_4 . method_5 ( new type_5 ( var_3 , view , var_2 , null ) ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { java.lang.string var_4 = null ; if ( type_2. method_2 ( ) ) { var_4 = type_2. method_3 ( var_1 ) ; } else { var_4 = var_1 ; } return new type_1 ( var_4, var_2, var_3 ) ; }

************

************
tgt: public int method_1 ( android.content.intent intent , int var_1 , int var_2 ) { int var_3 = var_4 ; if ( intent == null ) { return var_3 ; } int var_5 = intent . method_2 ( var_6 , 0 ) ; if ( ( ( var_7 [ var_5 ] ) != null ) && ( var_7 [ var_5 ] ) ) { type_1 . method_3 ( string_1 ) ; return var_3 ; } var_7 [ var_5 ] = true ; method_4 ( var_5 ) ; return var_3 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; try { method_2 ( ) ; var_1. method_3 ( false ) ; } catch ( java.lang.nullpointerexception var_2 ) { var_2. method_4 ( ) ; } catch ( java.lang.exception var_3 ) { type_1. method_5 ( string_1, ( string_2 + ( var_3. method_6 ( ) ) ) ) ; } }

************

************
tgt: public boolean method_1 ( int index , type_1 var_1 ) { if ( ( method_2 ( index ) ) != null ) { return false ; } try { if ( var_1 != null ) { this . var_2 [ index ] = var_1 ; var_1 . method_3 ( this ) ; return true ; } else { return false ; } } catch ( java.lang.exception var_3 ) { return false ; } }
[0]: protected void method_1 ( float var_1, int var_2 ) { float var_3 = type_1. method_2 ( var_1 ) ; float var_4 = ( var_2 > 0 )? ( this. var_5 ) / ( int_1 / var_2 ) : 0 ; this. var_6 = type_1. method_3 ( this. var_6, type_1. method_4 ( var_3, ( - var_4 ), var_4 ) ) ; }

************

************
tgt: public void method_1 ( java.io.file file , type_1 var_1 ) { type_2 var_2 = new type_2 ( file , var_3 . method_2 ( ) , var_3 . getstring ( string_1 ) , var_3 . method_3 ( string_2 ) , var_3 . getint ( string_3 ) , var_3 . method_3 ( string_4 ) , var_3 . method_3 ( string_5 ) , var_3 . method_3 ( string_6 ) ) ; if ( ! ( var_4 . contains ( var_2 ) ) ) { var_4 . add ( var_2 ) ; var_5 . method_4 ( ) ; } }
[0]: void method_1 ( ) { for ( type_1 element : var_1 ) { java.lang.system.out.println ( ( ( ( ( ( ( ( ( ( ( ( ( element. date ) + string_1 ) + ( var_2 ) ) + string_1 ) + ( var_3 ) ) + string_1 ) + ( var_4 ) ) + string_1 ) + ( var_5 ) ) + string_1 ) + ( var_6 ) ) + string_1 ) + ( var_7 ) ) ) ; } }

************

************
tgt: private void method_1 ( type_1 args , type_2 var_1 ) throws type_3 { final java.lang.string var_2 = args . getstring ( 0 ) ; if ( var_2 != null ) { var_3 . put ( var_2 , var_1 ) ; } else { var_4 = var_1 ; } type_5 . method_1 ( var_5 . getactivity ( ) , var_2 ) ; }
[0]: protected type_1 method_1 ( java.lang.string [ ] value ) throws type_2 { this. var_1 = true ; if ( ( value!= null ) && ( ( value. length ) > 0 ) ) { this. var_2 = this. var_3. method_2 ( value [ 0 ] ) ; return this. var_2 ; } else { return null ; } }

************

************
tgt: public java.lang.boolean method_1 ( final type_1 var_1 ) { boolean var_2 = false ; boolean var_3 = var_1 . method_2 ( ) ; if ( ! var_3 ) { var_2 = false ; } else { type_2 var_4 = var_1 . method_3 ( ) ; boolean var_5 = false ; if ( var_4 != null ) { var_5 = var_4 . method_4 ( ) ; } var_2 = var_5 ; } return java.lang.boolean . method_5 ( var_2 ) ; }
[0]: private double method_1 ( type_1 state ) { if ( state == ( var_1 ) ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_4. method_2 ( ) ; java.lang.system.out.println ( state ) ; double var_5 = var_2. method_3 ( var_3 ) ; java.lang.system.out.println ( var_5 ) ; return var_5 ; } else { return 0.0 ; } }

************

************
tgt: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : var_3 ) { type_1 var_4 = method_2 ( var_2 ) ; if ( var_4 != null ) { var_1 . add ( var_4 ) ; } } return var_1 ; }
[0]: public type_1 method_1 ( type_2 arg, java.lang.long var_1 ) { type_2 var_2 = method_2 ( arg ) ; if ( var_2!= null ) { if ( var_1!= null ) { method_3 ( var_1, var_2. getid ( ) ) ; } java.util.map < java.lang.long, type_3 > var_3 = var_4. getdata ( var_2 ) ; var_2. method_4 ( var_3 ) ; return var_2. method_5 ( ) ; } return null ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { this . source = var_2 . data ; this . index = var_3 ; this . var_4 = var_3 ; this . var_5 = var_1 . method_2 ( ) ; this . var_6 = 0 ; this . var_7 = ( this . index ) + ( this . var_5 ) ; return this ; }
[0]: public static void method_1 ( android.content.context context ) { var_1 = type_1. method_2 ( context ) ; if ( var_2 ) { var_3 = var_1. method_3 ( ) ; var_3. method_4 ( string_1, false ) ; var_3. method_5 ( ) ; var_4. method_6 ( ) ; } }

************

************
tgt: protected java.util.arraylist < java.lang.string > method_1 ( byte [ ] ... var_1 ) { java.util.list < type_1 > results = var_2 . method_2 ( new type_2 ( var_3 ) ) ; if ( ( results . size ( ) ) != 0 ) { for ( type_3 var_4 : results . get ( 0 ) . method_3 ( ) ) { var_5 . add ( var_4 . getname ( ) ) ; } return var_5 ; } else { return null ; } }
[0]: public boolean method_1 ( java.lang.string name, java.lang.string var_1, java.lang.string var_2 ) { if ( var_3. method_2 ( ) ) { if ( ( var_3. get ( ). method_3 ( ) ) == ( var_4 ) ) { type_1 var_5 = new type_1 ( name, var_1, var_2 ) ; return this. var_6. method_4 ( var_5 ) ; } } return false ; } return true ; }

************

************
tgt: protected void method_1 ( int var_1 , double var_2 , double var_3 ) { if ( ( ( this ) instanceof type_1 ) && ( ( var_4 ) != null ) ) { type_1 var_5 = var_6 . method_2 ( var_1 ) ; if ( var_5 != null ) this . var_7 = var_8 ; } if ( ( this . var_7 ) == null ) this . var_7 = new type_2 ( ) ; this . var_7 . method_3 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = type_1. method_2 ( ). method_3 ( ). method_4 ( var_2, var_3 ). method_5 ( var_4 ). method_6 ( ). method_7 ( var_5 ). method_8 ( ). method_9 ( int_1 ). method_10 ( var_6 ). method_11 ( ). response ( ). method_12 ( ) ; java.lang.long var_7 = type_2. method_13 ( var_1 ). method_14 ( string_1 ) ; type_3. assertnotnull ( var_7 ) ; type_4. method_15 ( var_8, var_7 ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int i , long var_2 ) { type_2 var_3 = var_4 . get ( i ) ; android.content.intent var_5 = new android.content.intent ( this , var_6 class ) ; var_5 . method_2 ( "id" , id ) ; var_5 . method_2 ( string_1 , var_3 . method_3 ( ) ) ; var_5 . method_2 ( string_2 , var_3 . method_4 ( ) ) ; method_5 ( var_5 ) ; }
[0]: public void method_1 ( ) { try { java.util.iterator var_1 = var_2. method_2 ( ). iterator ( ) ; while ( var_1. method_3 ( ) ) { java.util.map.entry var_3 = ( ( java.util.map.entry ) ( var_1. method_4 ( ) ) ) ; var_4. method_5 ( ( ( ( ( string_1 + ( var_3. getvalue ( ) ) ) + string_2 ) + ( var_3. method_6 ( ) ) ) + string_3 ) ) ; } } catch ( type_1 var_5 ) { var_5. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { while ( method_2 ( var_1 ) ) { type_1 x = new type_1 ( var_1 ) ; int var_2 = method_3 ( x ) ; x . method_4 ( var_2 ) ; method_5 ( x ) ; } if ( ( var_3 ) == ( - 1 ) ) { add ( var_1 ) ; var_3 = 1 ; } }
[0]: private java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { type_1 var_2 = new type_2 ( var_1, string_1 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_2 ) ; java.lang.stringbuilder var_4 = new java.lang.stringbuilder ( ) ; while ( ( buffer = var_3. method_2 ( ) )!= null ) { var_4. append ( buffer ). append ( "\n1 ) ; } var_3. method_3 ( ) ; var_2. method_3 ( ) ; return var_4. tostring ( ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { java.lang.string var_4 = var_1 ; if ( var_1 != null ) { if ( type_2 . method_2 ( ) ) { var_4 = type_2 . method_3 ( var_1 ) ; } else if ( var_1 != null ) { var_4 = var_1 ; } } return new type_1 ( var_4 , var_2 , var_3 ) ; }
[0]: private synchronized void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( this ). method_2 ( var_2, new type_2 ( ). method_3 ( var_3 ). method_3 ( var_4 ). method_3 ( var_5 ). build ( ) ). method_4 ( this ). method_5 ( this, this ). build ( ) ; } }

************

************
tgt: public void method_1 ( ) { try { method_2 ( ) ; var_1 . method_3 ( false ) ; } catch ( java.lang.nullpointerexception var_2 ) { var_2 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { type_1 . method_5 ( string_1 , ( string_2 + ( var_3 . method_6 ( ) ) ) ) ; } super . method_1 ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == var_1 ) { var_2. method_2 ( true ) ; } else { var_3. method_3 ( var_1 ) ; type_1 var_4 = var_2 ; var_2 = var_1 ; if ( var_4!= null ) { var_4. method_2 ( false ) ; } var_1. method_2 ( true ) ; method_4 ( ) ; } }

************

************
tgt: protected void method_1 ( float var_1 , int var_2 ) { float var_3 = type_1 . method_2 ( var_1 ) ; float var_4 = ( var_2 > 0 ) ? ( ( this . var_5 ) / int_1 ) * var_2 : 0 ; this . var_6 = type_1 . method_3 ( this . var_6 , type_1 . method_4 ( var_3 , ( - var_4 ) , var_4 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( type_2. method_2 ( var_1. method_3 ( ) ) ) { int var_2 = var_1. method_4 ( ). get ( 0 ). method_5 ( ) ; int var_3 = 0 ; for ( type_3 var_4 : var_1. method_3 ( ) ) { var_3 = ( var_2 * ( var_4. method_6 ( ) ) ) / int_1 ; var_4. method_7 ( var_3 ) ; } } }

************

************
tgt: void method_1 ( ) { for ( type_1 element : var_1 ) { java.lang.system.out.println ( ( ( ( ( ( ( ( ( ( ( ( element . date ) + string_1 ) + ( var_2 ) ) + string_1 ) + ( var_3 ) ) + string_1 ) + ( var_4 ) ) + string_1 ) + ( var_5 ) ) + string_1 ) + ( var_6 ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. method_2 ( var_2, string_1 ) ; type_2 var_3 = type_2. method_3 ( var_1. getcontext ( ), string_2, var_4 ) ; var_3. show ( ) ; android.content.intent i = new android.content.intent ( var_1. getcontext ( ), var_5 class ) ; i. method_4 ( string_3, var_6. gettext ( ). tostring ( ) ) ; var_1. getcontext ( ). method_5 ( i ) ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string [ ] value ) throws type_2 { this . var_1 = true ; if ( ( value != null ) && ( ( value . length ) > 0 ) ) { this . var_2 = this . var_3 . method_2 ( value [ 0 ] ) ; return this . var_2 ; } else { this . var_2 = null ; return null ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. method_2 ( ) ; android.content.intent var_2 = new android.content.intent ( this, var_3 class ) ; var_2. method_3 ( var_4 ) ; var_2. method_3 ( var_5 ) ; var_2. method_3 ( var_6 ) ; method_4 ( var_2 ) ; method_5 ( ) ; }

************

************
tgt: private double method_1 ( type_1 state ) { java.lang.system.out.println ( state ) ; if ( state == ( var_1 ) ) { type_2 var_2 = new type_2 ( ) ; java.lang.system.out.println ( state ) ; type_3 var_3 = var_4 . method_2 ( ) ; java.lang.system.out.println ( state ) ; double var_5 = var_2 . method_3 ( var_3 ) ; java.lang.system.out.println ( var_5 ) ; return var_5 ; } else { return 0 ; } }
[0]: public boolean add ( type_1 var_1 ) { java.lang.string name = var_1. getname ( ) ; if ( var_1. method_1 ( ) ) name += string_1 ; else if ( var_1. method_2 ( ) ) throw new type_2 ( var_1. tostring ( ) ) ; else if ( string_2. equals ( name ) ) name = string_3 ; if ( ( this. var_2. get ( name ) )!= null ) return false ; this. var_2. put ( name, var_1 ) ; return true ; }

************

************
tgt: public type_1 method_1 ( type_2 arg , java.lang.long var_1 ) { type_2 var_2 = method_2 ( arg ) ; if ( var_2 != null ) { if ( var_1 != null ) { method_3 ( var_1 , var_2 . getid ( ) ) ; } java.util.map < java.lang.long , type_3 > var_3 = var_4 . getdata ( var_2 , true ) ; var_2 . method_4 ( var_3 ) ; return var_2 . method_5 ( ) ; } return null ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( var_3, var_4. string class ) ; if ( ( var_1!= null ) && ( var_1. equals ( var_5 ) ) ) { method_3 ( ) ; } else { method_4 ( ) ; } }

************

************
tgt: public static void method_1 ( android.content.context context ) { var_1 = type_1 . method_2 ( context ) ; if ( var_2 ) { var_3 = var_1 . method_3 ( ) ; var_3 . method_4 ( string_1 , false ) ; var_3 . method_5 ( ) ; var_4 . method_6 ( ) ; var_2 = false ; } }
[0]: public void method_1 ( int response, java.lang.exception var_1 ) { if ( response == ( var_2 ) ) { var_3. method_2 ( ). method_3 ( this ) ; } if ( ( listener ( ) )!= null ) listener ( ). method_4 ( ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string name ) { if ( var_3 . method_2 ( ) ) { if ( ( var_3 . get ( ) . method_3 ( ) ) == ( var_4 ) ) { type_1 var_5 = new type_1 ( var_1 , var_2 , name ) ; return this . var_6 . method_4 ( var_5 ) ; } } return false ; }
[0]: public void init ( ) { type_1. init ( ) ; var_1 = new type_2 ( this ) ; var_1. method_1 ( var_2 ) ; var_3 = new type_3 ( ) ; android.widget.linearlayout var_4 = new android.widget.linearlayout ( this ) ; method_2 ( var_4 ) ; var_4. method_3 ( var_5 ) ; type_4 var_6 = new type_4 ( this ) ; var_4. method_4 ( var_6, var_7 ) ; var_4. method_4 ( method_5 ( ), var_8 ) ; var_4. method_4 ( method_6 ( ), var_7 ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = type_1 . method_2 ( ) . method_3 ( ) . method_4 ( var_2 , var_3 ) . method_5 ( var_4 ) . method_6 ( ) . method_7 ( var_5 ) . method_8 ( ) . method_9 ( int_1 ) . method_10 ( var_6 ) . method_11 ( ) . response ( ) . method_12 ( ) ; java.lang.long var_7 = type_2 . method_13 ( var_1 ) . method_14 ( string_1 ) ; type_3 . assertnotnull ( var_7 ) ; method_15 ( var_8 , var_7 ) ; }
[0]: public boolean method_1 ( double diff ) { var_1 += diff ; if ( ( var_2 )!= null ) { var_3 += diff ; } if ( ( ( var_1 ) > ( var_4 ) ) || ( ( var_1 ) < ( var_5 ) ) ) { var_6 = false ; } else { var_6 = false ; } return var_6 ; }

************

************
tgt: public void method_1 ( ) { try { for ( java.util.map.entry var_3 : var_2 . method_2 ( ) ) { var_4 . execute ( ( ( ( ( string_1 + ( var_3 . getvalue ( ) ) ) + string_2 ) + ( var_3 . method_6 ( ) ) ) + string_3 ) ) ; } } catch ( type_1 var_5 ) { var_5 . method_7 ( ) ; } }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, android.view.view var_3 ) { if ( var_3 instanceof type_3 ) { if ( ( var_3. method_2 ( ) ) > 0 ) { var_2. show ( ) ; } else { var_2. method_3 ( ) ; } } return true ; }

************

************
tgt: private java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { type_1 var_2 = new type_2 ( var_1 , string_1 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_2 ) ; java.lang.stringbuilder var_4 = new java.lang.stringbuilder ( ) ; java.lang.string buffer ; while ( ( buffer = var_3 . method_2 ( ) ) != null ) { var_4 . append ( buffer ) . append ( "\n" ) ; } var_1 . method_3 ( ) ; var_3 . method_3 ( ) ; var_2 . method_3 ( ) ; return var_4 . tostring ( ) ; }
[0]: public static java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; var_1. add ( type_2. method_2 ( var_2, false, true ) ) ; var_1. add ( type_2. method_2 ( var_3, false, true ) ) ; var_1. add ( type_2. method_2 ( var_4, false, true ) ) ; return var_1 ; }

************

************
tgt: private synchronized void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( this ) . method_2 ( var_2 , new type_2 ( ) . method_3 ( var_3 ) . build ( ) ) . method_4 ( this ) . method_5 ( this , this ) . build ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { if ( var_4. get ( i ) ) var_2 += string_2 ; else var_2 += string_3 ; var_2 += var_3. get ( i ). tostring ( ) ; } type_2. info ( var_2 ) ; method_3 ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { var_3 . method_3 ( var_1 ) ; if ( ( var_2 ) == var_1 ) { var_2 . method_2 ( true ) ; } else { type_1 var_4 = var_2 ; var_2 = var_1 ; if ( var_4 != null ) { var_4 . method_2 ( false ) ; } var_1 . method_2 ( true ) ; method_4 ( ) ; method_5 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( ) ; var_2 = new type_3 ( ) ; var_2. start ( ) ; var_3. method_3 ( var_2 ) ; method_4 ( ) ; var_4. method_5 ( var_2. getid ( ), this. method_6 ( string_1, var_5 ) ) ; type_2. method_2 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( type_2 . method_2 ( var_1 . method_3 ( ) ) ) { int var_2 = var_1 . method_4 ( ) . get ( 0 ) . method_5 ( ) ; float var_3 = 0 ; for ( type_3 var_4 : var_1 . method_3 ( ) ) { var_3 = ( var_2 * ( var_4 . method_6 ( ) ) ) / int_1 ; var_4 . method_7 ( var_3 ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { int var_2 = ( ( int ) ( java.lang.math.round ( ( ( ( var_1. method_2 ( ) ) - ( var_3 ) ) / ( var_4 ) ) ) ) ) ; int c = ( ( int ) ( java.lang.math.round ( ( ( ( var_1. method_3 ( ) ) - ( var_5 ) ) / ( var_4 ) ) ) ) ) ; return var_6 [ ( ( var_2 * ( var_7 ) ) + c ) ] ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { android.content.intent i = new android.content.intent ( var_1 . getcontext ( ) , var_5 class ) ; i . method_4 ( string_3 , var_6 . gettext ( ) . tostring ( ) ) ; var_1 . getcontext ( ) . method_5 ( i ) ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { var_1. method_2 ( var_2 ) ; type_1 var_3 = getintent ( ). method_3 ( ) ; if ( var_3!= null ) { java.lang.string var_4 = var_3. getstring ( string_1 ) ; if ( ( var_4!= null ) && ( var_4. equals ( string_2 ) ) ) { method_4 ( new android.content.intent ( this, var_5 class ) ) ; } else { type_2. method_5 ( this, string_3, var_6 ). show ( ) ; } } } }

************

************
tgt: private void method_2 ( ) { type_1 . method_2 ( ) ; android.content.intent var_2 = new android.content.intent ( this , var_3 class ) ; var_2 . method_3 ( var_4 ) ; var_2 . method_3 ( var_5 ) ; var_2 . method_3 ( var_6 ) ; method_4 ( var_2 ) ; method_5 ( ) ; }
[0]: public static void method_1 ( ) { try { var_1 = new type_1 ( string_1 ) ; java.lang.string var_2 = var_1. getstring ( string_2 ) ; if ( var_2. equals ( string_3 ) ) { var_3 = true ; } if ( var_2. equals ( string_4 ) ) { var_3 = false ; } } catch ( type_2 var_4 ) { var_4. method_2 ( ) ; } }

************

************
tgt: public boolean add ( type_1 var_1 ) { java.lang.string name = var_1 . getname ( ) ; if ( var_1 . method_1 ( ) ) name += string_1 ; else if ( var_1 . method_2 ( ) ) throw new type_2 ( var_1 . tostring ( ) ) ; else if ( string_2 . equals ( name ) ) name = string_3 ; if ( ( this . var_2 . get ( name ) ) != null ) return false ; return this . var_2 . put ( name , var_1 ) ; }
[0]: public static java.util.date method_1 ( java.lang.string str ) { type_1 format = new type_1 ( string_1 ) ; java.util.date date = null ; try { date = format. method_2 ( str ) ; } catch ( java.lang.exception var_1 ) { var_2. error ( var_1. method_3 ( ) ) ; date = type_2. method_4 ( string_2 ) ; } return date ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = var_2 . method_2 ( var_3 , var_4 . string class ) ; if ( ( var_1 != null ) && ( var_1 . equals ( var_5 ) ) ) { method_4 ( ) ; } else { method_3 ( ) ; } }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 ; try { java.lang.double [ ] var_3 = var_4. method_2 ( var_1. method_3 ( ). method_3 ( ) ) ; var_2 = new type_1 ( var_3 [ 0 ], var_3 [ 1 ] ) ; } catch ( java.lang.exception var_5 ) { throw new type_3 ( ( string_1 + ( var_1. method_3 ( ). method_3 ( ) ) ), var_5 ) ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 b ) { type_2 var_1 = type_3 . method_2 ( b . method_3 ( ) , var_2 , var_3 , var_4 ) ; type_2 . method_4 ( b . method_3 ( ) , var_1 , var_5 ) ; if ( ( var_5 . length ( ) ) <= ( var_6 ) ) return true ; return false ; }
[0]: public void method_1 ( ) { var_1 = type_1. method_2 ( var_2 ) ; byte [ ] var_3 = new byte [ int_1 ] ; type_2. method_3 ( var_3 ). put ( var_2, 0, int_1 ) ; var_1 = type_1. method_2 ( var_3 ) ; }

************

************
tgt: public void method_1 ( int response , java.lang.exception var_1 ) { if ( response == ( var_2 ) ) { var_3 . method_2 ( ) . method_3 ( this ) ; } else { if ( ( listener ( ) ) != null ) listener ( ) . method_4 ( ) ; } }
[0]: private boolean method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1. method_2 ( string_1 ) ; if ( ( var_2!= null ) && ( ( var_2. trim ( ). length ( ) ) > 0 ) ) { return java.lang.boolean. method_3 ( var_2 ) ; } return false ; }

************

************
tgt: public void init ( ) { type_1 . init ( ) ; var_1 = new type_2 ( this ) ; var_1 . method_1 ( var_2 ) ; var_3 = new type_3 ( this ) ; android.widget.linearlayout var_4 = new android.widget.linearlayout ( this ) ; method_2 ( var_4 ) ; var_4 . method_3 ( var_5 ) ; type_4 var_6 = new type_4 ( this ) ; var_4 . method_4 ( var_6 , var_7 ) ; var_4 . method_4 ( method_5 ( ) , var_8 ) ; var_4 . method_4 ( method_6 ( ) , var_7 ) ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { type_2. method_2 ( var_2, ( string_1 + ( var_1. size ( ) ) ) ) ; if ( ( var_1. size ( ) ) == 0 ) { type_3. method_3 ( this, string_2, var_3 ). show ( ) ; return ; } var_4 = var_1 ; var_5. method_4 ( new type_4 ( method_5 ( ), var_1 ) ) ; }

************

************
tgt: public boolean method_1 ( double diff ) { var_1 += diff ; if ( ( var_2 ) != null ) { var_3 += diff ; } if ( ( ( var_1 ) > ( var_4 ) ) || ( ( var_1 ) < ( var_5 ) ) ) { var_6 = false ; } else { var_6 = true ; } return var_6 ; }
[0]: private void method_1 ( ) { var_1 = new type_1 < type_2 > ( ) ; try { var_1. add ( type_3. method_2 ( var_2 ) ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( var_3. method_3 ( ) ) ; } try { var_1. add ( type_3. method_2 ( var_4 ) ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( var_3. method_3 ( ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , android.view.view var_3 ) { if ( var_3 instanceof type_3 ) { if ( ( var_3 . method_2 ( ) ) >= 0 ) { var_2 . show ( ) ; } else { var_2 . method_3 ( ) ; } } return true ; }
[0]: public void method_1 ( android.content.context context, boolean var_1 ) { this. var_1 = var_1 ; java.util.arraylist < type_1 > list = new java.util.arraylist < type_1 > ( ) ; if ( type_2. getboolean ( context. getstring ( var_2 ), false ) ) { type_3 p = new type_3 ( context ) ; list = p. method_2 ( context, var_1 ) ; } else { list. method_3 ( type_4. method_2 ( context, var_1 ) ) ; } var_3 = list ; method_4 ( context ) ; }

************

************
tgt: static java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; var_1 . add ( type_2 . method_2 ( var_2 , false , true , false ) ) ; var_1 . add ( type_2 . method_2 ( var_3 , false , true , false ) ) ; var_1 . add ( type_2 . method_2 ( var_4 , false , true , false ) ) ; return var_1 ; }
[0]: public boolean method_1 ( java.lang.string var_1, type_1 query, type_1 var_2 ) { type_2 var_3 = var_4. method_2 ( var_1 ) ; var_2. put ( var_5, query. get ( var_5 ) ) ; var_2. put ( var_6, var_7. format ( new java.util.date ( ) ) ) ; var_2. remove ( var_8 ) ; try { var_3. update ( query, var_2 ) ; } catch ( type_3 var_9 ) { return false ; } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { if ( var_4 . get ( i ) ) var_2 += string_2 ; else var_2 += string_3 ; var_2 += var_3 . get ( i ) . tostring ( ) ; } method_3 ( ) ; }
[0]: public void method_1 ( ) { var_1. settext ( var_2 ) ; var_3. setenabled ( true ) ; var_4. setenabled ( true ) ; var_5. setenabled ( true ) ; var_6. setenabled ( true ) ; method_2 ( ) ; method_3 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = new type_3 ( ) ; var_2 . start ( ) ; var_3 . method_3 ( var_2 ) ; method_4 ( ) ; var_4 . method_5 ( var_2 . getid ( ) , this . method_6 ( string_1 , var_5 ) ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { int var_2 = type_1. method_2 ( var_1 ) ; type_2 var_3 ; if ( var_4. method_3 ( var_2 ) ) { java.util.arraylist < type_2 > var_5 = var_4. method_4 ( ) ; var_3 = var_5. get ( var_2 ) ; } else { var_3 = null ; } var_6 = new type_3 ( var_4, var_3 ) ; var_6. execute ( ) ; var_6. method_5 ( ) ; java.lang.string response = var_6. method_6 ( ) ; return response ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { int var_2 = ( ( int ) ( ( ( var_1 . method_2 ( ) ) - ( var_3 ) ) / ( var_4 ) ) ) ; int c = ( ( int ) ( ( ( var_1 . method_3 ( ) ) - ( var_5 ) ) / ( var_4 ) ) ) ; return var_6 [ ( ( var_2 * ( var_7 ) ) + c ) ] ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { try { type_2 < type_1 > var_2 = var_3. method_2 ( var_4, var_5 class ) ; var_2. method_3 ( string_1, var_1 ) ; return var_2. method_4 ( ) ; } catch ( type_3 var_6 ) { var_7. info ( string_2, var_1 ) ; return null ; } catch ( type_4 var_8 ) { var_7. error ( string_3, var_1, var_8 ) ; throw var_8 ; } }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { var_1 . method_2 ( var_2 ) ; method_4 ( new android.content.intent ( this , var_5 class ) ) ; type_1 var_3 = getintent ( ) . method_3 ( ) ; if ( var_3 != null ) { java.lang.string var_4 = var_3 . getstring ( string_1 ) ; if ( ( var_4 != null ) && ( var_4 . equals ( string_2 ) ) ) { } else { type_2 . method_5 ( this , string_3 , var_6 ) . show ( ) ; } } }
[0]: public void method_1 ( ) throws java.io.ioexception { var_1 = false ; var_2. method_2 ( ) ; var_2. method_3 ( ) ; var_2. method_4 ( ) ; java.io.file var_3 = new java.io.file ( type_1. method_5 ( null, var_4 ). method_6 ( ) ) ; java.io.file var_5 = new java.io.file ( type_1. method_5 ( null, var_6 ). method_6 ( ) ) ; method_7 ( var_3, var_5 ) ; }

************

************
tgt: public static void method_1 ( ) { try { var_1 = new type_1 ( string_1 ) ; java.lang.string var_2 = var_1 . getstring ( string_2 ) ; if ( var_2 . equals ( string_3 ) ) { var_3 = true ; } else if ( var_2 . equals ( string_4 ) ) { var_3 = false ; } } catch ( type_2 var_4 ) { var_4 . method_2 ( ) ; } }
[0]: public type_1 method_1 ( type_1... var_1 ) { if ( var_1!= null ) { for ( type_1 var_2 : var_1 ) { if ( ( this. var_2 ) == null ) { this. var_2 = new java.util.linkedlist < > ( ) ; } this. var_2. add ( var_2 ) ; } } return ( ( type_1 ) ( this ) ) ; } return null ; }

************

************
tgt: public static java.util.date method_1 ( java.lang.string str ) { type_1 format = new type_1 ( string_1 ) ; java.util.date date = null ; try { date = format . method_2 ( str ) ; } catch ( java.lang.exception var_1 ) { var_2 . error ( var_1 . method_3 ( ) ) ; date = type_2 . method_1 ( string_2 ) ; } return date ; }
[0]: public < type_1 extends type_2 <? > > type_1 method_1 ( java.lang.class < type_1 > var_1 ) { for ( final type_2 <? > var_2 : var_3. values ( ) ) { if ( var_1. method_2 ( var_2 ) ) { return ( ( type_1 ) ( var_2 ) ) ; } } throw new type_3 ( ( string_1 + var_1 ) ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 ; try { java.lang.double [ ] var_3 = var_4 . method_2 ( var_1 . method_3 ( ) . method_3 ( ) ) ; var_2 = new type_1 ( var_3 [ 1 ] , var_3 [ 0 ] ) ; } catch ( java.lang.exception var_5 ) { throw new type_3 ( ( string_1 + ( var_1 . method_3 ( ) . method_3 ( ) ) ) ) ; } return var_2 ; }
[0]: public static void main ( java.lang.string [ ] args ) { long var_1 = type_1. method_1 ( ) ; type_2. method_2 ( ) ; type_2. method_3 ( ) ; type_2. method_4 ( ) ; long var_2 = type_1. method_1 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( ( ( string_2 + ( var_2 - var_1 ) ) + string_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_2 ) != null ) { var_1 = type_1 . method_2 ( var_2 ) ; byte [ ] var_3 = new byte [ int_1 ] ; type_2 . method_3 ( var_3 ) . put ( var_2 , 0 , int_1 ) ; var_1 = type_1 . method_2 ( var_3 ) ; } }
[0]: private java.util.arraylist < java.lang.double > method_1 ( java.util.arraylist < type_1 > var_1 ) { java.util.arraylist < java.lang.double > values = new java.util.arraylist < java.lang.double > ( ) ; for ( type_1 t : var_1 ) { values. add ( java.lang.double. method_2 ( t. gettext ( ). tostring ( ) ) ) ; } return values ; }

************

************
tgt: protected boolean method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( string_1 ) ; if ( ( var_2 != null ) && ( ( var_2 . trim ( ) . length ( ) ) > 0 ) ) { return java.lang.boolean . method_3 ( var_2 ) ; } return false ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.lang.exception { type_2. method_2 ( string_1 ) ; super. method_1 ( var_1 ) ; type_3 var_2 = var_3. get ( method_3 ( var_1. method_4 ( ) ) ) ; if ( null == var_2 ) { var_1. method_5 ( ) ; return ; } remove ( var_1. method_4 ( ) ) ; method_6 ( var_2 ) ; var_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { type_2 . method_2 ( var_2 , ( string_1 + ( var_1 . size ( ) ) ) ) ; if ( ( var_1 . size ( ) ) == 0 ) { type_3 . method_3 ( this , string_2 , var_3 ) . show ( ) ; } var_4 = var_1 ; var_5 . method_4 ( new type_4 ( method_5 ( ) , var_1 ) ) ; }
[0]: public type_1 method_1 ( ) { int iterator = ( array. length ) - 1 ; while ( ( array [ iterator ] ) == null ) { iterator -- ; } type_1 var_1 = array [ iterator ] ; array [ iterator ] = null ; return var_1 ; }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 < type_2 > ( ) ; try { var_1 . add ( type_3 . method_2 ( var_2 ) ) ; } catch ( java.lang.exception var_3 ) { } try { var_1 . add ( type_3 . method_2 ( var_4 ) ) ; } catch ( java.lang.exception var_3 ) { } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string msg ) { android.content.intent var_2 = new android.content.intent ( var_3, var_4 class ). method_2 ( var_5 ) ; var_2. method_3 ( string_1, var_1 ) ; var_2. method_3 ( string_2, msg ) ; var_2. method_2 ( var_5 ) ; method_4 ( var_2 ) ; }

************

************
tgt: public void method_1 ( android.content.context context , boolean var_1 ) { this . var_1 = var_1 ; java.util.arraylist < type_1 > list ; type_3 p = new type_3 ( context ) ; list = p . method_2 ( context , var_1 ) ; var_3 = list ; method_4 ( context ) ; }
[0]: public int method_1 ( int index, short var_1 ) { int var_2 = index ; type_1 var_3 = set. get ( var_2 ) ; int var_4 = - 1 ; int var_5 = 0 ; if ( var_3. method_2 ( ). method_3 ( ) ) return - 1 ; var_5 = method_4 ( var_2 ) ; return method_5 ( var_5, var_1 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , type_1 query , type_1 var_2 ) { type_2 var_3 = var_4 . method_2 ( var_1 ) ; var_2 . put ( var_5 , query . get ( var_5 ) ) ; var_2 . put ( var_6 , new java.util.date ( ) ) ; var_2 . remove ( var_8 ) ; try { var_3 . update ( query , var_2 ) ; } catch ( type_3 var_9 ) { return false ; } return true ; }
[0]: public static void method_1 ( ) { final type_1 < type_2 < type_3 > > var_1 = var_2 ; if ( var_1!= null ) var_1. get ( ). method_2 ( ) ; final type_1 < type_3 > var_3 = var_4 ; if ( var_3!= null ) var_3. set ( null ) ; final type_4 var_5 = var_6 ; if ( var_5!= null ) var_5. set ( null ) ; }

************

************
tgt: private void show ( java.lang.string var_2 ) { var_1 . settext ( var_2 ) ; var_3 . setenabled ( true ) ; var_4 . setenabled ( true ) ; var_5 . setenabled ( true ) ; var_6 . setenabled ( true ) ; method_2 ( ) ; method_3 ( ) ; }
[0]: private static void put ( java.lang.class <? extends type_1 > var_1, type_2 state, type_3 var_2, int id ) { int var_3 = type_4. method_1 ( state, var_2, id ) ; type_5. put ( var_1, var_3 ) ; type_6. put ( var_3, var_1 ) ; if ( var_2 == ( var_4 ) ) { type_7. put ( var_1, type_8. get ( var_1 ) ) ; } }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string var_1 ) { int var_2 = type_1 . method_2 ( var_1 , true ) ; type_2 var_3 ; if ( var_4 . method_3 ( var_2 ) ) { java.util.arraylist < type_2 > var_5 = var_4 . method_4 ( ) ; var_3 = var_5 . get ( var_2 ) ; } else { var_3 = null ; } var_6 = new type_3 ( var_4 , var_3 ) ; var_6 . execute ( ) ; var_6 . method_5 ( ) ; java.lang.string response = var_6 . method_6 ( ) ; return response ; }
[0]: public void method_1 ( ) { boolean var_1 = false ; type_1 var_2 = type_2. method_2 ( type_3. method_3 ( ). method_4 ( type_3. method_5 ( var_3 ) ), var_4. method_6 ( ), var_5 ) ; for ( type_4 t : var_2 ) { var_1 = true ; if (! ( t. get ( var_6 ). var_7. contains ( t. get ( var_3 ). var_8 ) ) ) type_5. fail ( ) ; } if (! var_1 ) type_5. fail ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { try { type_2 < type_1 > var_2 = var_3 . method_2 ( var_4 , var_5 class ) ; var_2 . method_3 ( string_1 , var_1 ) ; return var_2 . method_4 ( ) ; } catch ( type_3 var_6 ) { return null ; } catch ( type_4 var_8 ) { var_7 . error ( string_3 , var_1 , var_8 ) ; throw var_8 ; } }
[0]: public type_1 method_1 ( java.util.date start ) { type_2. method_2 ( start, string_1 ) ; type_2. method_3 ( ( ( var_1 ) == null ), string_2 ) ; this. var_2 = start. gettime ( ) ; type_2. method_3 ( ( ( var_2 ) <= ( type_3. method_4 ( ) ) ), string_3 ) ; return ( ( type_1 ) ( this ) ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { int var_2 = - 1 ; type_2 p = var_1 . method_2 ( ) ; type_3 var_3 = var_4 . method_3 ( var_4 . method_4 ( ) ) ; var_2 = ( ( p . y ) / ( var_3 . method_5 ( ) ) ) + 1 ; return var_2 ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ). gettext ( ). tostring ( ) ; android.content.intent var_4 ; switch ( var_1. getid ( ) ) { case var_5 : type_2 var_4 = new android.content.intent ( this, var_6 class ) ; var_4. method_3 ( string_1, var_2 ) ; method_4 ( var_4 ) ; break ; case var_7 : break ; case var_7 : break ; default : break ; } } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 = false ; if ( ( var_2 ) == null ) return ; var_2 . method_2 ( ) ; var_2 . method_3 ( ) ; var_2 . method_4 ( ) ; java.io.file var_3 = new java.io.file ( type_1 . method_5 ( null , var_4 ) . method_6 ( ) ) ; java.io.file var_5 = new java.io.file ( type_1 . method_5 ( null , var_6 ) . method_6 ( ) ) ; method_7 ( var_3 , var_5 ) ; }
[0]: public java.io.inputstream method_1 ( java.lang.string var_1 ) throws type_1 { type_2 file = ( ( type_2 ) ( method_2 ( var_1 ) ) ) ; if (! ( file. method_3 ( ) ) ) throw new type_1 ( var_1 ) ; if ( file. method_4 ( ) ) { throw new type_1 ( ( ( string_1 + file ) + string_2 ) ) ; } return new type_3 ( file, data, var_2 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 ... var_1 ) { if ( var_1 != null ) { for ( type_1 var_2 : var_1 ) { if ( var_2 == null ) continue ; if ( ( this . var_2 ) == null ) { this . var_2 = new java.util.linkedlist < > ( ) ; } this . var_2 . add ( var_2 ) ; } } return ( ( type_1 ) ( this ) ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { android.content.intent intent ; switch ( position ) { case 0 : intent = new android.content.intent ( this, var_2 class ) ; method_2 ( intent ) ; break ; case 1 : intent = new android.content.intent ( this, var_3 class ) ; method_2 ( intent ) ; break ; case int_1 : intent = new android.content.intent ( this, var_4 class ) ; method_2 ( intent ) ; break ; } }

************

************
tgt: public < type_1 extends type_2 < ? > > type_1 method_1 ( java.lang.class < type_1 > var_1 ) { for ( final type_2 < ? > var_2 : var_3 . values ( ) ) { if ( var_1 . method_2 ( var_2 ) ) { return ( ( type_1 ) ( var_2 ) ) ; } } return null ; }
[0]: private void method_1 ( java.lang.string [ ] var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; ++ i ) { data. method_2 ( new type_1 ( var_3, ( ( long ) ( i ) ), string_1, string_2, string_1, var_1 ) ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { long var_1 = type_1 . method_1 ( ) ; type_2 . method_2 ( ) ; type_2 . method_3 ( ) ; type_2 . method_4 ( ) ; long var_2 = type_1 . method_1 ( ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( ( ( string_2 + ( var_2 - var_1 ) ) + string_3 ) ) ; }
[0]: public void method_1 ( ) { try ( type_1 var_1 = var_2. open ( ) ) { java.lang.string var_3 = string_1 ; var_1. method_2 ( var_3 ). method_3 ( ""name"", this. name ). method_3 ( string_2, this. var_4 ). method_4 ( ). method_5 ( ) ; } }

************

************
tgt: private java.util.arraylist < java.lang.double > method_1 ( java.util.arraylist < type_1 > var_1 ) { java.util.arraylist < java.lang.double > values = new java.util.arraylist < java.lang.double > ( ) ; for ( type_1 t : var_1 ) { if ( ( t . gettext ( ) ) != null ) { values . add ( java.lang.double . method_2 ( t . gettext ( ) . tostring ( ) ) ) ; } else { return null ; } } return values ; }
[0]: public java.lang.object method_1 ( type_1 context, type_2 var_1, java.lang.string var_2 ) { type_3 var_3 = type_1. method_2 ( ). method_3 ( ) ; type_4 var_4 = ( ( type_4 ) ( type_1. method_2 ( ). method_4 ( ). method_5 ( ). getvalue ( var_3, null, string_1 ) ) ) ; for ( type_5 var_5 : var_4. method_6 ( ) ) { if ( ( var_5. getid ( ) ) == ( java.lang.integer.parseint ( var_2 ) ) ) return var_5 ; } return null ; }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = source . method_2 ( string_1 ) . text ( ) . replaceall ( string_2 , string_3 ) ; if ( ( var_1 . length ( ) ) == 0 ) { var_2 . method_3 ( null ) ; } else { var_2 . method_3 ( java.lang.integer.parseint ( var_1 ) ) ; } }
[0]: public void method_1 ( ) { switch ( var_1 ) { case 1 : if ( ( counter ) == ( var_2 ) ) { var_3 = false ; var_1 = - 1 ; } break ; case int_1 : if ( ( counter ) == ( var_2 ) ) { var_4 = var_5 ; var_1 = - 1 ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.lang.exception { super . method_1 ( var_1 ) ; type_3 var_2 = var_3 . get ( method_3 ( var_1 . method_4 ( ) ) ) ; if ( null == var_2 ) { var_1 . method_5 ( ) ; return ; } remove ( var_1 . method_4 ( ) ) ; method_6 ( var_2 ) ; var_1 . method_5 ( ) ; }
[0]: private long method_1 ( int i ) { type_1 date = new type_2 ( ) ; if ( method_2 ( i ) ) { date = var_1. get ( i ). get ( var_2 ) ; } else { date = var_1. get ( i ). get ( var_3 ) ; } if ( date. method_3 ( ) ) { return ( ( type_3 ) ( date ) ). getvalue ( ). gettime ( ). gettime ( ) ; } throw new type_4 ( string_1 ) ; }

************

************
tgt: public type_1 method_1 ( ) { int iterator = ( array . length ) - 1 ; while ( ( iterator > 0 ) && ( ( array [ iterator ] ) == null ) ) { iterator -- ; } type_1 var_1 = array [ iterator ] ; array [ iterator ] = null ; return var_1 ; }
[0]: public boolean method_1 ( long var_1, long value ) { return method_2 ( ( ) - > { if ( ( var_2. method_3 ( ( ( offset ) + ( var_3 ) ) ) ) == var_1 ) { var_2. append ( ( ( offset ) + ( var_3 ) ), value, int_1 ) ; return true ; } return false ; } ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . assertthat ( type_2 . method_2 ( ( ( var_1 ) - ( ( ( ( int_1 * int_2 ) * int_3 ) * int_4 ) * int_4 ) ) , var_1 , false , getcontext ( ) ) , type_3 . method_3 ( method_4 ( var_3 , int_1 ) ) ) ; }
[0]: public void method_1 ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( method_2 ( ). method_3 ( var_2 ) ) ) ; if ( ( ( var_1!= null ) && ( ( event. method_4 ( ) ) == ( var_1. method_4 ( ) ) ) ) && ( ( event. method_5 ( ) ) == ( var_1. method_6 ( ) ) ) ) { var_1. method_7 ( event. method_8 ( ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string msg ) { android.content.intent var_2 = new android.content.intent ( var_3 , var_4 class ) ; var_2 . method_3 ( string_1 , var_1 ) ; var_2 . method_3 ( string_2 , msg ) ; var_2 . method_2 ( var_5 ) ; method_4 ( var_2 ) ; }
[0]: public void start ( type_1 var_1 ) throws java.io.ioexception { if ( var_2 ) { throw new type_2 ( ) ; } try { var_3. start ( ) ; var_3. method_1 ( var_4, var_5 ) ; var_3. method_2 ( new type_3 ( var_6 ) ) ; var_7. start ( ) ; var_7. method_3 ( var_8, var_1, var_4, var_5 ) ; var_2 = true ; } catch ( java.io.ioexception var_9 ) { throw var_9 ; } }

************

************
tgt: public int method_1 ( int index , short var_1 ) { int var_2 = index ; type_1 var_3 = set . get ( var_2 ) ; int var_5 = 0 ; if ( var_3 . method_2 ( ) . method_3 ( ) ) return - 1 ; var_5 = method_4 ( var_2 ) ; return method_5 ( var_5 , var_1 ) ; }
[0]: public void method_1 ( final java.lang.string var_1, final java.lang.integer var_2 ) { method_2 ( ( ( ( ( ( ( string_1 + ( type_1. method_3 ( ). var_3 ) ) + string_2 ) + var_2 ) + string_3 ) + var_1 ) + string_4 ) ) ; var_4. get ( var_1 ). method_1 ( ) ; }

************

************
tgt: public static void method_1 ( ) { final type_1 < type_2 < type_3 > > var_1 = var_2 ; if ( var_1 != null ) var_1 . get ( ) . method_2 ( ) ; final type_1 < type_3 > var_3 = var_4 ; if ( var_3 != null ) var_3 . remove ( ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, android.view.view var_3, android.view.view target, int var_4 ) { if ( super. method_1 ( var_1, var_2, var_3, target, var_4 ) ) { method_2 ( var_2 ) ; var_5 = var_2. method_3 ( ) ; var_6. method_4 ( ) ; return true ; } else { return false ; } }

************

************
tgt: private static void put ( java.lang.class < ? extends type_1 > var_1 , type_2 state , type_3 var_2 , int id ) { int var_3 = type_4 . method_1 ( state , var_2 , id ) ; type_6 . put ( var_1 , var_3 ) ; if ( var_2 == ( var_4 ) ) { type_5 . put ( var_3 , var_1 ) ; type_7 . put ( var_1 , type_8 . get ( var_1 ) ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( var_3 class, new type_4 ( ) ) ; try { var_2. method_3 ( var_4, var_5 ) ; var_6 = true ; } catch ( type_5 var_7 ) { type_6. handle ( var_7 ) ; return ; } var_8 = var_2 ; type_7. method_4 ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) { boolean var_1 = false ; type_1 var_2 = type_2 . method_2 ( type_3 . method_3 ( ) . method_4 ( type_3 . method_5 ( var_3 ) ) , var_4 . method_6 ( ) , var_5 ) ; for ( type_4 t : var_2 ) { var_1 = true ; if ( ! ( t . get ( var_6 ) . var_7 . contains ( t . get ( var_3 ) ) ) ) type_5 . fail ( ) ; } if ( ! var_1 ) type_5 . fail ( ) ; }
[0]: public boolean method_1 ( int var_1 ) { for ( type_1 var_2 : type_2. method_2 ( this ) ) { if ( ( var_3. method_3 ( var_2 ) )!= ( var_4 ) ) { if ( ( method_4 ( var_2 ). var_5 ) >= var_1 ) { return true ; } } } return false ; }

************

************
tgt: public type_1 method_1 ( java.util.date start ) { type_2 . method_2 ( start , string_1 ) ; type_2 . method_3 ( ( ( var_1 ) == null ) , string_2 ) ; this . var_2 = start . gettime ( ) ; return ( ( type_1 ) ( this ) ) ; }
[0]: private boolean method_1 ( java.util.calendar var_1, type_1 var_2 ) { int var_3 = java.lang.integer.parseint ( var_2. getstring ( string_1 ) ) ; int var_4 = java.lang.integer.parseint ( var_2. getstring ( string_2 ) ) ; return ( ( var_1. get ( var_5 ) ) == var_3 ) && ( ( var_1. get ( var_6 ) ) == var_4 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) . gettext ( ) . tostring ( ) ; android.content.intent var_4 ; switch ( var_1 . getid ( ) ) { case var_5 : var_4 = new android.content.intent ( this , var_6 class ) ; var_4 . method_3 ( string_1 , var_2 ) ; method_4 ( var_4 ) ; break ; case var_7 : break ; default : break ; } }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. method_2 ( var_1, var_2 ) ; if ( var_1. equals ( var_3. method_3 ( ) ) ) { type_2. method_4 ( string_1, var_1, var_2 ) ; throw new type_3 ( string_2 ) ; } if (! ( type_4. equals ( var_3. method_5 ( ) ) ) ) { type_2. method_4 ( string_3, var_2 ) ; throw new type_5 ( string_4 ) ; } }

************

************
tgt: public java.io.inputstream method_1 ( java.lang.string var_1 ) throws type_1 { type_2 file = ( ( type_2 ) ( method_2 ( var_1 ) ) ) ; if ( ! ( file . method_3 ( ) ) ) throw new type_1 ( var_1 ) ; if ( file . method_4 ( ) ) { throw new type_1 ( ( ( string_1 + file ) + string_2 ) ) ; } return new type_3 ( file , data ) ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; type_1. i ( string_1, string_2 ) ; if (! ( var_1 ) ) { method_2 ( ) ; if ( ( var_2 )!= null ) { var_2. method_1 ( ) ; } var_3. method_3 ( new type_2 ( var_4 ) ) ; var_5. method_1 ( ) ; var_1 = true ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { android.content.intent intent ; switch ( position ) { case 0 : intent = new android.content.intent ( this , var_2 class ) ; method_2 ( intent ) ; break ; case 1 : intent = new android.content.intent ( this , var_3 class ) ; method_2 ( intent ) ; break ; } }
[0]: protected void method_1 ( ) { try { java.net.url url = new type_1 ( ). method_2 ( var_1 ). method_3 ( ( var_2. gettext ( ). tostring ( ). equals ( string_1 )? var_3 : var_2. gettext ( ). tostring ( ) ) ). method_4 ( var_4 ). build ( ) ; method_1 ( url ) ; } catch ( type_2 var_5 ) { type_3. method_5 ( string_2, string_3 ) ; var_5. method_6 ( ) ; } }

************

************
tgt: private void method_1 ( java.lang.string [ ] var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; ++ i ) { data . method_2 ( new type_1 ( var_3 , ( ( long ) ( i ) ) , string_1 , string_2 , string_1 , null ) ) ; } }
[0]: public java.lang.boolean method_1 ( ) { if ( ( ( this. var_1 ) == null ) || (! ( method_2 ( ) ) ) ) { return false ; } type_1 var_2 = this. var_1. method_3 ( this. var_3 ) ; if ( var_2 == null ) { return false ; } return! ( var_2. method_4 ( ). isempty ( ) ) ; }

************

************
tgt: public void method_1 ( ) { try ( type_1 var_1 = var_2 . open ( ) ) { java.lang.string var_3 = string_1 ; this . id = ( ( int ) ( var_1 . method_2 ( var_3 , true ) . method_3 ( "name" , this . name ) . method_3 ( string_2 , this . var_4 ) . method_4 ( ) . method_5 ( ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : if ( var_3 ) method_2 ( var_1 ) ; break ; case var_4 : if ( var_3 ) method_3 ( var_1 ) ; break ; case var_5 : if ( var_3 ) method_4 ( var_1 ) ; break ; case var_6 : if ( var_3 ) { method_5 ( var_1 ) ; } break ; } } }

************

************
tgt: public java.lang.object method_1 ( type_1 context , type_2 var_1 , java.lang.string var_2 ) { type_3 var_3 = type_1 . method_2 ( ) . method_3 ( ) ; type_4 var_4 = ( ( type_4 ) ( type_1 . method_2 ( ) . method_4 ( ) . method_5 ( ) . getvalue ( var_3 , null , string_1 ) ) ) ; for ( type_5 var_5 : var_4 . method_6 ( ) ) { if ( var_5 . getid ( ) . equals ( java.lang.integer.parseint ( var_2 ) ) ) { return var_5 ; } } return null ; }
[0]: public void method_1 ( ) { if (! ( getconfig ( ). contains ( string_1 ) ) ) { var_1. info ( string_2 ) ; getconfig ( ). method_2 ( string_3, int_1 ) ; getconfig ( ). method_2 ( string_4, int_2 ) ; getconfig ( ). method_3 ( ). method_4 ( true ) ; method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { switch ( var_1 ) { case 1 : if ( ( counter ) == ( var_2 ) ) { var_3 = false ; var_1 = - 1 ; } break ; case int_1 : if ( ( counter ) == ( var_2 ) ) { var_4 = var_5 ; var_1 = - 1 ; } break ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) && (! ( var_3 ) ) ) { method_2 ( ) ; target. method_3 ( ) ; int x = var_1. method_4 ( ) ; int y = var_1. method_5 ( ) ; for ( type_2 var_4 : var_5 ) { if ( var_4. method_6 ( var_6, var_7, x, y ) ) { target. add ( var_4 ) ; var_4. method_7 ( ) ; } } method_8 ( ) ; } }

************

************
tgt: private long method_1 ( int i ) { type_1 date = null ; if ( method_2 ( i ) ) { date = var_1 . get ( i ) . get ( var_2 ) ; } else { date = var_1 . get ( i ) . get ( var_3 ) ; } if ( date . method_3 ( ) ) { return ( ( type_3 ) ( date ) ) . getvalue ( ) . gettime ( ) . gettime ( ) ; } throw new type_4 ( string_1 ) ; }
[0]: public void method_1 ( int error ) { type_1. method_2 ( var_1, ( string_1 + ( type_2. method_3 ( error ) ) ) ) ; type_1. method_2 ( var_1, ( string_2 + ( id ) ) ) ; type_3 view = type_2. method_4 ( id ) ; view. method_5 ( var_2 ) ; type_2. method_6 ( ). method_7 ( view ) ; type_2. method_6 ( ). method_8 ( ) ; type_2. method_9 ( string_3, new java.lang.object [ ] { id } ) ; }

************

************
tgt: public boolean method_1 ( long var_1 , long value ) { return method_2 ( ( ) - > { if ( ( var_2 . method_3 ( ( ( offset ) + ( var_3 ) ) ) ) == var_1 ) { var_2 . append ( ( ( offset ) + ( var_3 ) ) , value ) ; return true ; } return false ; } ) ; }
[0]: public type_1 method_1 ( type_2 var_1, java.lang.string label, type_3 var_2, type_4 var_3 ) { java.lang.string query = type_5. method_2 ( var_3. method_3 ( null, var_4, null ) ). method_4 ( ( ) - > new type_6 ( java.lang.string.format ( string_1, var_4, var_2. method_5 ( ) ) ) ) ; type_7 var_5 = method_6 ( query ) ; return new type_8 ( var_1, ( ( type_9 ) ( var_2 ) ), query, var_5, var_6 ). label ( label ). build ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( method_2 ( ) . method_3 ( var_2 ) ) ) ; if ( ( ( var_1 != null ) && ( ( event . method_4 ( ) . id ( ) ) == ( var_1 . method_4 ( ) . id ( ) ) ) ) && ( ( event . method_5 ( ) ) == ( var_1 . method_6 ( ) ) ) ) { var_1 . method_7 ( event . method_8 ( ) ) ; } }
[0]: private static java.lang.boolean method_1 ( type_1 var_1, java.lang.string line ) { java.lang.boolean var_2 = false ; line. trim ( ) ; line. replace ( string_1, string_2 ) ; if ( ( line. method_2 ( string_3 ) ) && ( ( line. length ( ) ) == int_1 ) ) { var_1. method_3 ( type_2. method_4 ( line ) ) ; var_2 = true ; } else { var_1. method_5 ( ( ( string_4 + line ) + string_5 ) ) ; var_2 = false ; } return var_2 ; }

************

************
tgt: public void start ( type_1 var_1 ) throws java.io.ioexception { if ( var_2 ) { throw new type_2 ( ) ; } try { var_7 . start ( ) ; var_7 . method_2 ( new type_3 ( var_6 ) ) ; var_7 . method_3 ( var_8 , var_1 , var_4 , var_5 ) ; var_2 = true ; } catch ( java.io.ioexception var_9 ) { throw var_9 ; } }
[0]: private void method_1 ( final type_1 var_1 ) throws type_2 { type_3. method_2 ( string_1 ) ; try { var_2. method_3 ( method_4 ( var_2. method_5 ( ), var_1 ) ) ; } catch ( final type_4 var_3 ) { throw new type_2 ( string_2, var_3 ) ; } }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , final java.lang.integer var_2 ) { method_2 ( ( ( ( ( ( ( string_1 + ( type_1 . method_3 ( ) . var_3 ) ) + string_2 ) + var_2 ) + string_3 ) + var_1 ) + string_4 ) ) ; var_4 . get ( var_1 . tolowercase ( ) ) . method_1 ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) < ( var_3 ) ) { ( var_2 ) ++ ; } else { var_2 = var_4 ; } type_1. method_2 ( string_1, java.lang.string. method_3 ( var_2 ) ) ; var_5. settext ( ( string_2 + ( java.lang.string. method_3 ( var_2 ) ) ) ) ; var_6 = var_7 ; var_8. settext ( ( string_3 + ( java.lang.string. method_3 ( var_6 ) ) ) ) ; new type_2 ( ). execute ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , android.view.view var_3 , android.view.view target , int var_4 , int type ) { if ( super . method_1 ( var_1 , var_2 , var_3 , target , var_4 , type ) ) { method_2 ( var_2 ) ; var_5 = var_2 . method_3 ( ) ; var_6 . method_4 ( ) ; return true ; } else { return false ; } }
[0]: public type_1 < java.lang.string, java.lang.string > method_1 ( ) { return new type_1 < java.lang.string, java.lang.string > ( ) { { put ( var_1, java.lang.string. method_2 ( var_2 ) ) ; put ( var_3, java.lang.string. method_2 ( var_4 ) ) ; } } ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( var_3 class , new type_4 ( ) ) ; try { var_2 . method_3 ( var_4 , var_5 ) ; } catch ( type_5 var_7 ) { type_6 . handle ( var_7 ) ; return ; } var_8 = var_2 ; type_7 . method_4 ( string_1 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, string_2 ) ; var_1. method_2 ( string_3, string_4 ) ; var_1. method_2 ( string_5, int_1 ) ; type_2 var_2 = this. var_3. get ( ) ; var_2. delete ( string_6, new type_3 ( var_1 ), false ). assertequals ( int_2 ) ; method_3 ( 1 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { for ( type_1 var_2 : type_2 . method_2 ( this ) ) { if ( ( ( var_3 . method_3 ( var_2 ) ) != ( var_4 ) ) && ( ( method_4 ( var_2 ) . var_5 ) >= var_1 ) ) { return true ; } } }
[0]: public void method_1 ( type_1 event ) { if (! ( ( event. method_2 ( ) ) instanceof type_2 ) ) return ; type_2 var_1 = ( ( type_2 ) ( event. method_3 ( ) ) ) ; if (! ( type_3. method_4 ( var_1 ) ) ) return ; var_2. method_5 ( var_1. getname ( ) ). method_6 ( string_1, type_4. method_7 ( event. method_8 ( ) ) ) ; }

************

************
tgt: private boolean method_1 ( java.util.calendar var_1 , type_1 var_2 ) { int var_3 = var_2 . getint ( string_1 ) ; int var_4 = var_2 . getint ( string_2 ) ; return ( ( var_1 . get ( var_5 ) ) == var_3 ) && ( ( var_1 . get ( var_6 ) ) == var_4 ) ; }
[0]: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; var_2 = type_2. method_2 ( ) ; var_3 = type_3. method_2 ( ) ; java.lang.string var_4 = type_4. method_3 ( ) ; java.lang.string var_5 = type_5. method_3 ( ) ; var_6 = type_6. method_4 ( var_5 ). getvalue ( ) ; var_1. method_5 ( var_4 ) ; } return var_1 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 , var_2 ) ; if ( ! ( var_1 . equals ( var_3 . method_3 ( ) ) ) ) { type_2 . method_4 ( string_1 , var_1 , var_2 ) ; throw new type_3 ( string_2 ) ; } if ( ! ( type_4 . equals ( var_3 . method_5 ( ) ) ) ) { type_2 . method_4 ( string_3 , var_2 ) ; throw new type_5 ( string_4 ) ; } }
[0]: protected java.util.list < type_1 > method_1 ( java.lang.void... params ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; try { if (! ( query. equals ( var_2 ) ) ) { var_1 = method_2 ( var_3 ) ; } else { query = type_2. method_3 ( query, string_1 ) ; var_1 = method_2 ( ( ( var_4 ) + ( query ) ) ) ; } } catch ( type_3 var_5 ) { var_5. method_4 ( ) ; } return var_1 ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 . i ( string_1 , string_2 ) ; if ( ! ( var_1 ) ) { var_1 = true ; method_2 ( ) ; if ( ( var_2 ) != null ) { var_2 . method_1 ( ) ; } var_3 . method_3 ( new type_2 ( var_4 ) ) ; var_5 . method_1 ( ) ; } }
[0]: private boolean method_1 ( java.lang.string [ ] var_1 ) { if ( var_1 [ 1 ]. method_2 ( string_1 ) ) { if ( var_1 [ 1 ]. contains ( string_2 ) ) { return true ; } else { return false ; } } else { return true ; } }

************

************
tgt: public int method_1 ( ) { type_1 var_1 = new type_1 ( ) ; while ( ! ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( this . method_4 ( var_1 , var_1 . method_5 ( ) ) ) ; } return var_1 . method_6 ( ) ; }
[0]: public static void method_1 ( ) { var_1. settext ( java.lang.string.format ( type_1. method_2 ( ), string_1, var_2 ) ) ; var_3. settext ( java.lang.string.format ( type_1. method_2 ( ), string_2, var_4 ) ) ; var_5. settext ( java.lang.string.format ( type_1. method_2 ( ), string_3, var_6 ) ) ; }

************

************
tgt: protected void method_1 ( ) { try { java.net.url url = new type_1 ( ) . method_2 ( var_1 ) . method_3 ( ( var_2 . gettext ( ) . tostring ( ) . trim ( ) . equals ( string_1 ) ? var_3 : var_2 . gettext ( ) . tostring ( ) . trim ( ) ) ) . build ( ) ; method_1 ( url ) ; } catch ( type_2 var_5 ) { type_3 . method_5 ( string_2 , string_3 ) ; var_5 . method_6 ( ) ; } }
[0]: private static type_1 method_1 ( final java.lang.string var_1, final java.lang.string var_2, final java.io.file var_3 ) throws type_2, java.io.ioexception, java.lang.classnotfoundexception, type_3 { type_1 var_4 = new type_1 ( var_3, var_5 ) ; try { var_4. method_2 ( ) ; type_4. method_3 ( var_1, var_2, var_3 ) ; return new type_1 ( var_3, var_6, var_7 ) ; } finally { } }

************

************
tgt: public java.lang.boolean method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ! ( method_2 ( ) ) ) ) { return false ; } type_1 var_2 = var_1 . method_3 ( this . var_3 ) ; if ( var_2 == null ) { return false ; } return ! ( var_2 . method_4 ( ) . isempty ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. method_2 ( getcontext ( ), var_1 ) ; if ( var_2 ) method_3 ( ) ; android.content.intent intent = new android.content.intent ( getcontext ( ), var_3 class ) ; intent. method_4 ( string_1, var_4. get ( type_2. method_5 ( ) ). method_6 ( ) ) ; method_7 ( intent ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : if ( var_3 ) method_2 ( var_1 , true ) ; break ; case var_4 : if ( var_3 ) method_3 ( var_1 ) ; break ; case var_5 : if ( var_3 ) method_4 ( var_1 ) ; break ; case var_6 : if ( var_3 ) { method_5 ( var_1 ) ; } break ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3. gettext ( ) ; if ( var_2. equals ( var_4 ) ) { var_5. method_2 ( string_1 ) ; } else { var_5. method_2 ( ( string_2 + var_2 ) ) ; method_3 ( var_4, var_2 ) ; var_6. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ! ( getconfig ( ) . contains ( string_1 ) ) ) { var_1 . info ( string_2 ) ; getconfig ( ) . method_2 ( string_3 , int_1 ) ; getconfig ( ) . method_2 ( string_4 , int_2 ) ; getconfig ( ) . set ( string_3 , int_1 ) ; getconfig ( ) . method_2 ( string_4 , int_2 ) ; getconfig ( ) . method_3 ( ) . method_4 ( true ) ; method_5 ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { int var_1 = ( method_2 ( ) ) / ( var_2 ) ; java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( var_1 ) ; for ( int i = 0 ; i <= var_1 ; i += var_2 ) { type_1 value = method_3 ( i ) ; if (! ( value. isempty ( ) ) ) { result. add ( value ) ; } } return result ; }

************

************
tgt: public type_1 method_1 ( type_2 id , java.lang.string name , java.lang.string var_1 , int x , int y , int var_2 , type_3 var_3 , type_4 var_4 ) { this . id = id ; var_5 = new type_5 ( x , y ) ; var_6 = new type_6 ( var_2 , var_3 ) ; var_7 = new type_7 ( var_4 ) ; return new type_1 ( id , name , var_1 , var_5 , var_6 , var_7 ) ; }
[0]: public boolean add ( final type_1 t ) { if ( ( size ) == 0 ) { first = new type_2 < > ( t, null, null ) ; } else if ( ( size ) == 1 ) { var_1 = new type_2 < > ( t, first, null ) ; var_2 = var_1 ; } else { type_2 < type_1 > var_3 = var_1 ; var_4 = new type_2 < > ( t, var_3, null ) ; ( size ) ++ ; return true ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int x ; int y ; if ( ( var_2 ) && ( ! ( var_3 ) ) ) { method_2 ( ) ; target . method_3 ( ) ; x = var_1 . method_4 ( ) ; y = var_1 . method_5 ( ) ; for ( type_2 var_4 : var_5 ) { if ( var_4 . method_6 ( var_6 , var_7 , x , y ) ) { target . add ( var_4 ) ; var_4 . method_7 ( ) ; } } method_8 ( ) ; } }
[0]: public void method_1 ( ) { type_1 < java.lang.string > var_1 = var_2. method_2 ( string_1 ) ; var_3. method_3 ( var_4 class ) ; var_3. method_4 ( type_2. method_5 ( string_2, var_1. tostring ( ) ) ) ; var_2. method_6 ( string_2 ) ; }

************

************
tgt: public void method_1 ( int error ) { type_1 . method_2 ( var_1 , string_3 ) ; type_1 . method_2 ( var_1 , ( string_2 + ( id ) ) ) ; type_3 view = type_2 . method_4 ( id ) ; view . method_5 ( var_2 ) ; type_2 . method_6 ( ) . method_7 ( view ) ; type_2 . method_6 ( ) . method_8 ( ) ; type_2 . method_9 ( string_3 , new java.lang.object [ ] { id } ) ; }
[0]: protected synchronized void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; var_2. method_3 ( var_1 ) ; var_2. method_4 ( ). method_5 ( ) ; var_2. method_6 ( ) ; var_2. method_4 ( ). commit ( ) ; var_2. method_7 ( var_1 ) ; var_2. method_8 ( ) ; type_4. method_9 ( string_1, string_2, ( ( ( var_1. getid ( ) ) + string_3 ) + ( var_1. method_10 ( ) ) ) ) ; method_11 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.string label , type_3 var_2 , type_4 var_3 ) { java.lang.string query = type_5 . method_2 ( var_3 . method_3 ( var_1 , var_4 , null ) ) . method_4 ( ( ) - > new type_6 ( java.lang.string.format ( string_1 , var_4 , var_2 . method_5 ( ) ) ) ) ; type_7 var_5 = method_6 ( query ) ; return new type_8 ( var_1 , ( ( type_9 ) ( var_2 ) ) , query , var_5 , var_6 ) . label ( label ) . build ( ) ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( new type_2 ( null, new type_3 ( string_1, string_2 ) ) ) ; var_2. method_3 ( new type_2 ( null, new type_3 ( string_1, string_2 ) ) ) ; var_1. add ( var_2 ) ; type_4. method_4 ( var_3. method_5 ( var_1, true, true ) ) ; }

************

************
tgt: private static java.lang.boolean method_1 ( type_1 var_1 , java.lang.string line ) { java.lang.boolean var_2 = false ; if ( ( line . method_2 ( string_3 ) ) && ( ( line . length ( ) ) == int_1 ) ) { var_1 . method_3 ( type_2 . method_4 ( line ) ) ; var_2 = true ; } else { var_1 . method_5 ( ( ( string_4 + line ) + string_5 ) ) ; var_2 = false ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2 ) throws java.io.ioexception, type_2 { type_3 < java.lang.string > var_3 = type_3. method_2 ( var_4. string class ) ; method_3 ( var_1 ). method_4 ( method_5 ( ), var_3. method_6 ( ), method_5 ( ) ) ; type_4 path = type_5. get ( var_2 ) ; java.lang.string var_5 = new java.lang.string ( type_6. method_7 ( path ) ) ; type_7. assertequals ( var_3. getvalue ( ), var_5 ) ; }

************

************
tgt: private void method_1 ( final type_1 var_1 ) throws type_2 { type_3 . method_2 ( string_1 ) ; try { this . var_2 . method_3 ( this . method_4 ( var_2 . method_5 ( ) , var_1 ) ) ; } catch ( final type_4 var_3 ) { throw new type_2 ( string_2 , var_3 ) ; } }
[0]: public static java.lang.string method_1 ( java.lang.string path ) { java.lang.string var_1 ; java.lang.string var_2 ; var_1 = path. substring ( 0, path. method_2 ( string_1 ) ) ; var_2 = path. substring ( path. method_2 ( string_1 ) ) ; var_1 = var_1. replaceall ( string_2, string_3 ) ; return var_1. method_3 ( var_2 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) < ( var_3 ) ) { ( var_2 ) ++ ; } else { var_2 = var_4 ; } type_1 . method_2 ( string_1 , java.lang.string . method_3 ( var_2 ) ) ; var_6 = var_7 ; new type_2 ( ) . execute ( ) ; }
[0]: protected static java.lang.string method_1 ( java.util.map < java.lang.string, type_1 > var_1, java.lang.string var_2 ) { java.lang.string var_3 = string_1 ; if ( ( var_2. length ( ) ) > 1 ) { var_3 = var_2. substring ( 0, int_1 ) ; } else { return null ; } type_1 var_4 = var_1. get ( var_3. touppercase ( ) ) ; if ( var_4 == null ) { return null ; } return var_4. tostring ( ) ; }

************

************
tgt: public type_1 < java.lang.string , java.lang.string > method_1 ( ) { return new type_1 < java.lang.string , java.lang.string > ( ) { { put ( var_3 , java.lang.string . method_2 ( var_4 ) ) ; put ( var_1 , java.lang.string . method_2 ( var_2 ) ) ; } } ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1. assertequals ( false, type_2. method_2 ( int_1 ) ) ; type_1. assertequals ( false, type_2. method_2 ( int_2 ) ) ; type_1. assertequals ( true, type_2. method_2 ( int_3 ) ) ; type_1. assertequals ( false, type_2. method_2 ( int_4 ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( "id" , 1 ) ; var_1 . method_2 ( string_1 , string_2 ) ; var_1 . method_2 ( string_3 , string_4 ) ; var_1 . method_2 ( string_5 , int_1 ) ; type_2 var_2 = this . var_3 . get ( ) ; var_2 . delete ( string_6 , new type_3 ( var_1 ) ) . assertequals ( int_2 ) ; method_3 ( 1 ) ; }
[0]: public void method_1 ( type_1 var_1, int id ) { int var_2 = type_2. method_2 ( var_3, string_1 ) ; method_3 ( var_3, a. getid ( ), var_2, var_4, type_2. method_4 ( var_5, var_3, var_6. gettext ( ). tostring ( ). trim ( ), var_7 ), var_8, true ) ; var_9. method_5 ( ) ; var_3. method_6 ( ) ; type_3. method_7 ( var_5, string_2, var_8, null, var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ! ( ( event . method_2 ( ) ) instanceof type_2 ) ) return ; type_2 var_1 = ( ( type_2 ) ( event . method_2 ( ) ) ) ; if ( ! ( type_3 . method_4 ( var_1 ) ) ) return ; var_2 . method_5 ( var_1 . getname ( ) ) . method_6 ( string_1 , type_4 . method_7 ( event . method_8 ( ) ) ) ; }
[0]: public type_1 query ( final java.lang.string value ) { query = var_1. method_1 ( ). method_2 ( this, value, 0, ( - 1 ) ) ; if ( ( query ) == null ) { throw new type_2 ( ( string_1 + value ) ) ; } var_2 = null ; return this ; }

************

************
tgt: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; var_3 = type_3 . method_2 ( ) ; java.lang.string var_4 = type_4 . method_3 ( ) ; java.lang.string var_5 = type_5 . method_3 ( ) ; var_6 = type_6 . method_4 ( var_5 ) . getvalue ( ) ; var_1 . method_5 ( var_4 ) ; } return var_1 ; }
[0]: public void method_1 ( java.util.arraylist < type_1 > result ) { if ( result!= null ) { if ( ( result. size ( ) ) < int_1 ) { var_1. method_2 ( ) ; var_2 = false ; } else var_1. method_3 ( ) ; if ( var_3 ) { var_4. method_4 ( ) ; var_5. method_5 ( false ) ; } if ( var_6 ) { var_4 = result ; var_6 = false ; } else var_4. method_6 ( result ) ; method_7 ( ) ; } } }

************

************
tgt: protected java.util.list < type_1 > method_1 ( java.lang.void ... params ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; try { if ( query . equals ( var_3 ) ) { var_1 = method_2 ( var_3 ) ; } else { query = type_2 . method_3 ( query , string_1 ) ; var_1 = method_2 ( ( ( var_4 ) + ( query ) ) ) ; } } catch ( type_3 var_5 ) { var_5 . method_4 ( ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3. getstring ( string_1 ) ; int var_4 = var_3. getint ( string_1 ) ; if ( var_2!= null ) { type_2 var_5 = new type_2 ( var_2, var_4 ) ; var_6. get ( var_7 ). add ( var_5 ) ; var_8. get ( var_7 ). method_2 ( ) ; } }

************

************
tgt: private boolean method_1 ( java.lang.string [ ] var_1 ) { if ( ( var_1 [ 1 ] . method_2 ( string_1 ) ) && ( ! ( var_1 [ 1 ] . contains ( "0" ) ) ) ) { if ( var_1 [ 1 ] . contains ( string_2 ) ) { return true ; } else { java.lang.system.out.println ( string_3 ) ; return false ; } } else { return true ; } }
[0]: public static int method_1 ( type_1 var_1 ) { int sum = int_1 ; int var_2 = var_1. method_2 ( ) ; if ( var_2 == 1 ) { sum = int_2 ; } else if ( var_2 == int_3 ) { sum = - int_4 ; } else if ( var_2 == ( - 1 ) ) { } return sum ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( 0 ) . gettext ( ) ; int var_3 = java.lang.integer.parseint ( var_1 . method_2 ( int_1 ) . gettext ( ) ) ; java.util.arraylist var_4 = new java.util.arraylist ( ) ; var_4 . add ( var_2 ) ; var_4 . add ( var_3 ) ; return var_4 ; }
[0]: public void method_1 ( ) { if ( type_1. method_2 ( getactivity ( ) ) ) { type_2. method_3 ( string_1, ( string_2 + ( var_1 ) ) ) ; method_4 ( var_2 [ var_1 ], true ) ; } else { type_3. method_5 ( getactivity ( ), method_6 ( ). getstring ( var_3 ), var_4 ). show ( ) ; var_5. method_7 ( false ) ; } }

************

************
tgt: public static void method_1 ( ) { if ( ( var_2 ) > 0.0 ) { var_1 . settext ( java.lang.string.format ( type_1 . method_2 ( ) , string_1 , var_2 ) ) ; } else { var_2 = 0.0 ; var_1 . settext ( java.lang.string.format ( type_1 . method_2 ( ) , string_1 , var_2 ) ) ; } var_3 . settext ( java.lang.string.format ( type_1 . method_2 ( ) , string_2 , var_4 ) ) ; var_5 . settext ( java.lang.string.format ( type_1 . method_2 ( ) , string_3 , var_6 ) ) ; }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { int var_4 ; var_1. method_2 ( var_2 ) ; var_4 = var_3. method_3 ( ). method_4 ( ). method_5 ( var_3, new type_4 ( var_2 ), ( 1 * int_1 ) ) ; if ( var_4 == ( - 1 ) ) { type_5. method_6 ( string_1, var_3 ) ; } }

************

************
tgt: private static type_1 method_1 ( final java.lang.string var_1 , final java.lang.string var_2 , final java.io.file var_3 ) throws type_2 , java.io.ioexception , java.lang.classnotfoundexception , type_3 { type_1 var_4 = new type_1 ( var_3 , var_5 ) ; var_4 . method_2 ( ) ; type_4 . method_3 ( var_1 , var_2 , var_3 ) ; return new type_1 ( var_3 , var_6 , var_7 ) ; }
[0]: public java.util.list < java.lang.object [ ] > method_1 ( java.lang.string var_1, java.util.list < java.lang.string > var_2, java.lang.class var_3 ) { if ( ( var_4 ) == null ) { var_4 = var_5. method_2 ( ) ; var_4. method_3 ( ) ; } type_1 var_6 = var_4. method_4 ( var_1 ). method_5 ( var_3 ) ; for ( java.lang.string var_7 : var_2 ) { var_6. method_6 ( var_7 ) ; } return var_6. list ( ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 . method_2 ( getcontext ( ) , var_1 ) ; if ( var_2 ) { var_2 = false ; method_3 ( ) ; } android.content.intent intent = new android.content.intent ( getcontext ( ) , var_3 class ) ; intent . method_4 ( string_1 , var_4 . get ( type_2 . method_5 ( ) ) . method_6 ( ) ) ; method_7 ( intent ) ; }
[0]: public double method_1 ( final int var_1, final int var_2 ) { double result = var_3 [ var_1 ] [ var_2 ] ; for ( int k = 0 ; k <= ( var_2 - 1 ) ; k ++ ) { result -= ( var_4 [ var_1 ] [ k ] ) * ( var_4 [ var_2 ] [ k ] ) ; } return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_3 . gettext ( ) ; if ( var_2 . equals ( var_4 ) ) { var_5 . method_2 ( string_1 ) ; } else { var_5 . method_2 ( ( string_2 + ( var_2 ) ) ) ; method_3 ( var_4 , var_2 ) ; var_6 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 event ) { var_1 = var_2. method_2 ( event ). method_3 ( ) ; var_3. method_4 ( java.lang.integer.parseint ( var_2. gettext ( var_1, 0 ) ) ) ; var_3. method_5 ( var_2. gettext ( var_1, 1 ) ) ; var_3. method_6 ( java.lang.integer.parseint ( var_2. gettext ( var_1, int_1 ) ) ) ; method_7 ( java.lang.integer.parseint ( var_2. gettext ( var_1, 0 ) ) ) ; var_4. method_8 ( new type_1 ( ) { } ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( ) ; for ( int i = 0 ; i < ( method_2 ( ) ) ; i += var_2 ) { type_1 value = method_3 ( i ) ; if ( ! ( value . isempty ( ) ) ) { result . add ( value ) ; } } return result ; }
[0]: private type_1 < type_2 > method_1 ( final java.lang.string data ) { final type_3 var_1 = var_2. method_2 ( ) ; final type_4 < type_2 > var_3 = var_1. method_3 ( var_4 class ) ; final type_5 < type_2 > var_5 = var_3. method_4 ( var_4 class ) ; var_3. method_5 ( var_1. method_6 ( var_5. get ( string_1 ), data ) ) ; final type_1 < type_2 > var_6 = var_2. method_3 ( var_3 ) ; return var_6 ; }

************

************
tgt: public boolean add ( final type_1 t ) { if ( ( size ) == 0 ) { first = new type_2 < > ( t , null , null ) ; } else if ( ( size ) == 1 ) { var_2 = new type_2 < > ( t , first , null ) ; var_1 = var_2 ; } else { var_4 = new type_2 < > ( t , var_1 , null ) ; var_1 = var_4 ; } ( size ) ++ ; return true ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ). method_6 ( true ) ; type_3 var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; android.content.intent var_7 = getintent ( ) ; java.lang.string var_8 = var_7. method_7 ( string_1 ) ; var_5. settext ( var_8 ) ; method_8 ( var_8 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.string > var_1 = var_2 . method_2 ( string_1 ) ; var_3 . method_3 ( var_4 class ) ; var_3 . method_4 ( type_2 . method_5 ( string_2 , var_1 . getid ( ) , var_1 . getvalue ( ) , var_2 . getname ( ) ) ) ; var_2 . method_6 ( string_2 ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string name ) throws java.lang.exception { java.lang.string filename = type_1. method_2 ( name ) ; asserttrue ( new java.io.file ( filename ). method_3 ( ) ) ; type_2 var_1 = new type_2 ( ) ; type_3 var_2 = var_1. method_4 ( filename ) ; return var_2. method_5 ( ) ; }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( ) ; var_2 . method_3 ( var_1 ) ; var_2 . method_4 ( ) . method_5 ( ) ; var_2 . method_6 ( ) ; var_2 . method_4 ( ) . commit ( ) ; var_2 . method_7 ( var_1 ) ; var_2 . method_8 ( ) ; type_4 . method_9 ( string_1 , string_2 , ( ( ( var_1 . getid ( ) ) + string_3 ) + ( var_1 . method_10 ( ) ) ) ) ; method_11 ( ) ; }
[0]: public static void remove ( int index ) { type_1 var_1 = var_2 ; type_1 var_3 = var_2. method_1 ( ). method_1 ( ) ; for ( int x = 0 ; x < index ; x ++ ) { var_1 = var_1. method_1 ( ) ; var_3 = var_3. method_1 ( ) ; } var_1. method_2 ( var_3 ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( new type_2 ( null , new type_3 ( string_1 , string_2 ) ) ) ; var_2 . method_3 ( new type_2 ( null , new type_3 ( string_1 , string_2 ) ) ) ; var_1 . add ( var_2 ) ; method_4 ( var_3 . method_5 ( var_1 , true , true ) ) ; }
[0]: public void method_1 ( final type_1 var_1 ) { if (! ( var_2. method_2 ( ) ) ) { type_2. method_3 ( ( string_1 + ( var_1. getname ( ) ) ), var_2 ) ; } var_2. method_4 ( var_1. method_5 ( ) ) ; final boolean var_3 = java.lang.boolean. method_6 ( type_3. method_7 ( var_4 ) ) ; synchronized ( var_5 ) { if ( var_3 ) { type_4. method_8 ( true ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 ) throws java.io.ioexception , type_2 { type_3 < java.lang.string > var_3 = type_3 . method_2 ( var_4 . string class ) ; method_3 ( var_1 ) . method_4 ( var_3 . method_6 ( ) , method_5 ( ) , method_5 ( ) ) ; type_4 path = type_5 . get ( var_2 ) ; java.lang.string var_5 = new java.lang.string ( type_6 . method_7 ( path ) ) ; type_7 . assertequals ( var_3 . getvalue ( ) , var_5 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; var_1. add ( new type_1 ( string_1, this. var_2 ) ) ; var_1. method_3 ( ) ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { java.lang.system.out.print ( ( ( var_3. get ( i ) ) + ( this. var_2 ) ) ) ; var_1. add ( new type_1 ( var_3. get ( i ), this. var_2 ) ) ; var_1. method_3 ( ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string path ) { java.lang.string var_1 ; java.lang.string var_2 ; if ( ( path . method_2 ( string_1 ) ) > 0 ) { var_1 = path . substring ( 0 , path . method_2 ( string_1 ) ) ; var_2 = path . substring ( path . method_2 ( string_1 ) ) ; var_1 = var_1 . replaceall ( string_2 , string_3 ) ; return var_1 . method_3 ( var_2 ) ; } return path ; }
[0]: public java.lang.string method_1 ( java.lang.string date, char var_1 ) { type_1 var_2 = new type_1 ( ) ; switch ( var_1 ) { case char_1 : return var_2. method_2 ( date ) ; case char_2 : return var_2. method_3 ( date ) ; case char_3 : return var_2. method_4 ( date ) ; default : return date ; } }

************

************
tgt: protected static java.lang.string method_1 ( java.util.map < java.lang.string , type_1 > var_1 , java.lang.string var_2 ) { java.lang.string var_3 = string_1 ; if ( ( var_2 . length ( ) ) > 1 ) { var_3 = var_2 . substring ( 0 , int_1 ) ; } else { return null ; } type_1 var_4 = var_1 . get ( var_3 . touppercase ( ) ) ; if ( var_4 == null ) { return null ; } else { return var_4 . tostring ( ) ; } }
[0]: public void method_1 ( ) { if ( ( name. equals ( names [ 0 ] ) ) && ( var_1. equals ( string_1 ) ) ) { method_2 ( ) ; } if (! ( name. equals ( names [ 0 ] ) ) ) { type_1. settext ( string_2 ) ; } else { type_1. settext ( string_3 ) ; var_2. settext ( string_4 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . assertequals ( false , method_2 ( int_1 ) ) ; type_1 . assertequals ( false , method_2 ( int_2 ) ) ; type_1 . assertequals ( true , method_2 ( int_3 ) ) ; type_1 . assertequals ( false , method_2 ( int_4 ) ) ; }
[0]: public type_1 < java.lang.boolean > method_1 ( java.util.collection <? > c ) { if ( c. isempty ( ) ) { return type_2. method_2 ( false ) ; } java.util.list < java.lang.object > args = new java.util.arraylist < java.lang.object > ( ( ( c. size ( ) ) + 1 ) ) ; args. add ( getname ( ) ) ; args. method_3 ( c ) ; return var_1. method_4 ( getname ( ), var_2, var_3, c. method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int id ) { int var_2 = type_2 . method_2 ( var_3 , string_1 ) ; method_3 ( var_3 , a . getid ( ) , var_2 , var_4 , type_2 . method_4 ( var_5 , var_3 , var_6 . gettext ( ) . tostring ( ) . trim ( ) , var_7 ) , var_8 , false ) ; var_9 . method_5 ( ) ; var_3 . method_6 ( ) ; type_3 . method_7 ( var_5 , string_2 , var_8 , null , var_2 ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( getactivity ( ). method_2 ( var_2 ) ) ) ; type_2 var_3 = new type_2 ( getactivity ( ), true ) ; type_3 var_4 = new type_3 ( getactivity ( ) ) ; var_4. method_3 ( var_5, var_3 ) ; method_4 ( ) ; var_1. method_5 ( false ) ; }

************

************
tgt: public type_1 query ( final java.lang.string value ) { if ( value == null ) { query = null ; } else { query = var_1 . method_1 ( ) . method_2 ( this , value , 0 , ( - 1 ) ) ; } var_2 = null ; return this ; }
[0]: public java.util.list < type_1 > method_1 ( ) { if ( ( ( var_1 )!= null ) && ( ( var_2 )!= null ) ) return var_3. method_2 ( query, var_4. tostring ( ) ) ; else if ( ( var_2 )!= null ) return var_3. method_2 ( query, var_4. tostring ( ) ) ; else return var_3. method_2 ( query, var_4. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > result ) { if ( result != null ) { if ( ( result . size ( ) ) < int_1 ) { var_1 . method_2 ( ) ; var_2 = false ; } else var_1 . method_3 ( ) ; if ( var_3 ) { var_4 . method_4 ( ) ; var_5 . method_5 ( false ) ; var_3 = false ; } if ( var_6 ) { var_4 = result ; var_6 = false ; } else var_4 . method_6 ( result ) ; method_7 ( ) ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { type_1 result = null ; for ( int i = 0 ; ( i < ( this. var_2. length ) ) && ( result == null ) ; i ++ ) { if ( var_2 [ i ]. equals ( var_1 ) ) { result = var_2 [ i ] ; } } return result ; } else { return null ; } } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3 . getstring ( "type" ) ; int var_4 = var_3 . getint ( string_1 ) ; if ( ( var_2 != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { type_2 var_5 = new type_2 ( var_2 , var_4 ) ; var_6 . get ( var_7 ) . add ( var_5 ) ; var_8 . get ( var_7 ) . method_2 ( ) ; } }
[0]: public void method_1 ( final type_1 var_1 ) { if ( (! ( method_2 ( ) ) ) || ( var_1. method_2 ( ) ) ) { return ; } final type_2 var_2 = type_3. method_3 ( ). method_4 ( var_3, var_4 class ) ; var_2. method_5 ( method_6 ( ), var_1. method_6 ( ) ) ; var_2. method_7 ( ) ; }

************

************
tgt: public static int method_1 ( type_1 var_1 ) { int sum = int_1 ; int var_2 = var_1 . method_2 ( ) ; if ( var_2 == 1 ) { sum = int_2 ; } else if ( var_2 == int_3 ) { sum = - int_2 ; } else if ( var_2 == ( - 1 ) ) { } return sum ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = type_2. method_2 ( string_1, string_2 ) ; type_3 var_2 = new type_3 ( string_3, string_4 ) ; type_4. method_3 ( ). method_4 ( ). method_5 ( ). method_6 ( var_1, 0, var_2 ) ; }

************

************
tgt: public void method_1 ( ) { if ( type_1 . method_2 ( getactivity ( ) ) ) { type_2 . method_3 ( string_1 , ( string_2 + var_1 ) ) ; method_4 ( var_2 [ var_1 ] , true ) ; } else { type_3 . method_5 ( getactivity ( ) , method_6 ( ) . getstring ( var_3 ) , var_4 ) . show ( ) ; var_5 . method_7 ( false ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( var_1. starttime ( ) ) ; method_3 ( java.lang.long. tostring ( var_1. method_4 ( ) ) ) ; method_5 ( java.lang.long. tostring ( var_1. method_6 ( ) ) ) ; method_7 ( java.lang.integer.tostring ( var_1. method_8 ( ) ) ) ; method_9 ( var_1. method_10 ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . method_2 ( false ) ; var_1 . method_3 ( null , var_2 ) ; java.util.list < type_1 > var_3 = var_2 . method_4 ( ) ; assertnotnull ( var_3 ) ; method_5 ( var_3 . contains ( var_1 ) ) ; }
[0]: public void method_1 ( ) { java.util.list < type_2 > var_5 = var_2. method_2 ( var_3 class ). method_3 ( string_1, var_4. id ). method_4 ( ). method_5 ( ) ; assertnotnull ( var_5 ) ; assertequals ( int_1, var_5. size ( ) ) ; assertequals ( var_4, var_5. get ( 0 ) ) ; assertequals ( var_6, var_5. get ( 1 ) ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { int var_4 ; var_1 . method_2 ( var_2 ) ; var_4 = var_3 . method_3 ( ) . method_4 ( ) . method_5 ( var_3 , new type_4 ( var_2 ) , 1 ) ; if ( var_4 == ( - 1 ) ) { type_5 . method_6 ( string_1 , var_3 ) ; } }
[0]: public double method_1 ( ) { final double var_1 = ( ( ( double ) ( var_2 ) ) / ( ( double ) ( var_3 ) ) ) - ( - ( ( method_2 ( ) ) * ( method_2 ( ) ) ) ) ; return var_1 ; }

************

************
tgt: public java.util.list method_1 ( java.lang.string var_1 , java.util.list < java.lang.string > var_2 , java.lang.class var_3 ) { java.util.list < java.lang.object [ ] > result = new java.util.arraylist < java.lang.object [ ] > ( ) ; if ( ( var_4 ) == null ) { var_4 = var_5 . method_2 ( ) ; var_4 . method_3 ( ) ; } type_1 var_6 = var_4 . method_4 ( var_1 ) . method_5 ( var_3 ) ; for ( java.lang.string var_7 : var_2 ) { var_6 . method_6 ( var_7 ) ; } return var_6 . list ( ) ; }
[0]: public void method_1 ( double var_1, type_1 var_2, type_2 type ) { double var_3 = 0.0 ; if ( type. equals ( var_4 ) ) { var_3 = type_3. method_2 ( var_1, method_3 ( var_5 ), method_3 ( var_6 ) ) ; } else if ( type. equals ( var_7 ) ) { var_3 = type_3. method_2 ( var_1, method_3 ( var_8 ), method_3 ( var_6 ) ) ; } else { var_3 = var_1 ; } method_4 ( var_3 ) ; }

************

************
tgt: public double method_1 ( final int var_1 , final int var_2 ) { double result = var_3 [ var_1 ] [ var_2 ] ; for ( int k = 0 ; k <= ( var_2 - 1 ) ; k ++ ) { result -= ( var_3 [ var_1 ] [ k ] ) * ( var_3 [ var_2 ] [ k ] ) ; } return result ; }
[0]: public type_1 method_1 ( type_2 key, type_3 value ) throws type_4 { type_1 node = this ; keys. add ( key ) ; values. add ( new java.util.arraylist < type_3 > ( java.util.arrays.aslist ( value ) ) ) ; ++ ( var_1 ) ; if ( type_5. method_2 ( ) ) { node = type_5. method_3 ( ) ; } return node ; }

************

************
tgt: public void method_1 ( type_1 event ) { var_1 = var_2 . method_2 ( event ) . method_3 ( ) ; var_3 . method_4 ( java.lang.integer.parseint ( var_2 . gettext ( var_1 , 0 ) ) ) ; var_3 . method_5 ( var_2 . gettext ( var_1 , 1 ) ) ; method_7 ( java.lang.integer.parseint ( var_2 . gettext ( var_1 , 0 ) ) ) ; var_4 . method_8 ( new type_1 ( ) { } ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) { for ( type_2 var_3 : type_2. values ( ) ) { if ( var_2 == var_3 ) { return ( var_4 [ var_1. method_2 ( ) ] [ var_1. method_3 ( ) ]. method_4 ( var_3 ) )!= ( var_5 ) ; } } return false ; }

************

************
tgt: private type_1 < type_2 > method_1 ( final java.lang.string data ) { final type_3 var_1 = var_2 . method_2 ( ) ; final type_4 < type_2 > var_3 = var_1 . method_3 ( var_4 class ) ; final type_5 < type_2 > var_5 = var_3 . method_4 ( var_4 class ) ; var_3 . method_5 ( var_1 . method_6 ( var_5 . get ( string_1 ) , data ) ) ; return var_2 . method_3 ( var_3 ) ; }
[0]: private void method_1 ( ) { this. method_2 ( ) ; while ( (! ( var_1. method_3 ( ) ) ) && (! ( var_1. method_4 ( ) ) ) ) { var_2 [ var_3 ]. method_5 ( var_1 ) ; this. method_2 ( ) ; var_3 = ( ( var_3 ) + 1 ) % int_1 ; } this. method_6 ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ) . method_6 ( true ) ; }
[0]: public void init ( type_1 var_1 ) throws type_2 { this. var_1 = var_1 ; this. var_1. method_1 ( ) ; this. var_2 = ( ( type_3 ) ( type_4. get ( ). method_2 ( this. var_1. method_3 ( ) ) ) ) ; if ( ( this. var_2 ) == null ) { this. var_2 = new type_5 ( ) ; } this. var_1 = var_1 ; }

************

************
tgt: private static java.lang.string method_1 ( final java.lang.string name ) throws java.lang.exception { asserttrue ( new java.io.file ( name ) . method_3 ( ) ) ; type_2 var_1 = new type_2 ( ) ; type_3 var_2 = var_1 . method_4 ( name ) ; return var_2 . method_5 ( ) ; }
[0]: public void method_1 ( ) { try { if (! ( var_1. method_2 ( ). isempty ( ) ) ) { method_3 ( ) ; method_4 ( ) ; var_2. method_5 ( var_3, var_4 ) ; } else { type_1. method_6 ( getactivity ( ), string_1, var_5 ). show ( ) ; } } catch ( java.lang.exception var_6 ) { var_7. method_7 ( var_8, var_9, var_6 ) ; } var_10. method_8 ( false ) ; } }

************

************
tgt: public static void remove ( int index ) { type_1 var_1 = var_2 ; type_1 var_3 = var_2 . method_1 ( ) ; for ( int x = 1 ; x < index ; x ++ ) { var_1 = var_1 . method_1 ( ) ; var_3 = var_3 . method_1 ( ) ; } var_1 . method_2 ( var_1 . method_1 ( ) . method_1 ( ) ) ; var_3 . method_2 ( null ) ; }
[0]: public void method_1 ( ) { if ( ( method_2 ( ) )!= null ) { method_3 ( ( ( ( var_1 / ( method_2 ( ). method_4 ( ) ) ) * int_1 ) / int_2 ) ) ; } method_5 ( ( ( ( ( ( ( float ) ( var_2 ) ) / float_1 ) / float_2 ) / int_1 ) * ( var_3 ) ) ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { type_2 . method_3 ( ( string_1 + ( var_1 . getname ( ) ) ) , var_2 ) ; } var_2 . method_4 ( var_1 . method_5 ( ) ) ; final boolean var_3 = java.lang.boolean . method_6 ( type_3 . method_7 ( var_4 ) ) ; if ( var_3 ) { type_4 . method_8 ( true ) ; } }
[0]: public void method_1 ( float var_1 ) { update ( var_1 ) ; var_2. method_2 ( 0.0f, 0.0f, 0.0f, 1.0f ) ; var_2. method_3 ( var_3 ) ; var_4. method_4 ( var_5 ) ; var_6. method_5 ( var_7 ) ; var_8. method_1 ( ) ; if ( var_9 ) var_10. method_1 ( var_11, var_5 ) ; var_12. method_6 ( var_4 ) ; var_6. method_1 ( ) ; var_4. method_4 ( var_13. method_7 ( ). var_14 ) ; var_13. method_6 ( ) ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; var_1 . add ( new type_1 ( string_1 , this . var_2 ) ) ; var_1 . method_3 ( ) ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { var_1 . add ( new type_1 ( var_3 . get ( i ) , this . var_2 ) ) ; var_1 . method_3 ( ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { var_1. data = new java.util.arraylist < > ( ) ; var_2. add ( string_1 ) ; var_2. add ( string_1 ) ; type_1 var_3 = null ; try { var_3 = new type_1 ( var_1. data, int_1 ) ; java.lang.system.out.println ( var_3. method_2 ( ) ) ; } catch ( type_2 var_4 ) { var_4. method_1 ( ) ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { if ( ! ( var_1 . isempty ( ) ) ) { type_1 var_2 = new type_1 ( var_3 , var_4 ) ; var_5 . add ( var_1 ) ; var_6 . put ( var_1 , var_2 ) ; var_7 . method_2 ( ) . add ( var_1 ) ; var_7 . setvalue ( var_1 ) ; var_8 . method_3 ( ) . add ( 0 , var_2 ) ; var_9 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view var_2, int position, long id ) { type_2 var_3 ; if ( var_4 ) { var_3 = var_5. get ( position ) ; } else { var_3 = var_6. get ( position ) ; } java.lang.string message = string_1 + ( var_3. method_2 ( ) ) ; android.content.intent i = new android.content.intent ( this, var_7 class ) ; i. method_3 ( string_2, var_3 ) ; method_4 ( i ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string date , char var_1 ) { switch ( var_1 ) { case char_1 : return this . method_2 ( date ) ; case char_2 : return this . method_3 ( date ) ; case char_3 : return this . method_4 ( date ) ; default : return date ; } }
[0]: private static java.util.properties method_1 ( type_1 var_1 ) { java.util.properties var_2 = new java.util.properties ( ) ; java.util.list var_3 = var_1. method_2 ( ) ; for ( java.lang.object var_4 : var_3 ) { type_1 var_5 = ( ( type_1 ) ( var_4 ) ) ; var_2. method_3 ( var_5. method_4 ( var_6 ), var_5. method_4 ( var_7 ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) { if ( ( name . equals ( names [ 0 ] ) ) && ( var_1 . equals ( string_1 ) ) ) { method_2 ( ) ; return ; } if ( ! ( name . equals ( names [ 0 ] ) ) ) { type_1 . settext ( string_2 ) ; } else { type_1 . settext ( string_3 ) ; var_2 . settext ( string_4 ) ; } return ; }
[0]: public void method_1 ( type_1 view, int var_1 ) { switch ( var_1 ) { case var_2 : if ( ( view. method_2 ( ) ) == ( ( view. method_3 ( ) ) - 1 ) ) { type_2. method_4 ( var_3, string_1 ) ; ( var_4 ) ++ ; var_5 = ( var_6 ) + ( method_5 ( var_4 ) ) ; getdata ( ) ; } break ; } } }

************

************
tgt: public type_1 < java.lang.boolean > method_1 ( java.util.collection < ? > c ) { if ( c . isempty ( ) ) { return type_2 . method_2 ( false ) ; } java.util.list < java.lang.object > args = new java.util.arraylist < java.lang.object > ( ( ( c . size ( ) ) + 1 ) ) ; args . add ( getname ( ) ) ; args . method_3 ( c ) ; return var_1 . method_4 ( getname ( ) , var_2 , var_3 , args . method_5 ( ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { int var_2 = - 1 ; try { var_2 = java.lang.integer.parseint ( var_1 ) ; var_3 = type_1. method_2 ( var_2 ) ; var_3. method_3 ( ) ; this. method_4 ( string_1, ( string_2 + var_1 ) ) ; } catch ( type_2 var_4 ) { method_5 ( var_5, string_3 ) ; } catch ( type_3 var_6 ) { method_5 ( var_5, string_4 ) ; } catch ( type_3 var_6 ) { method_5 ( var_5, string_5 ) ; } }

************

************
tgt: private void method_1 ( ) { type_2 var_3 = new type_2 ( getactivity ( ) , true ) ; type_3 var_4 = new type_3 ( getactivity ( ) ) ; var_4 . method_3 ( var_5 , var_3 ) ; method_4 ( ) ; this . var_1 . method_5 ( false ) ; }
[0]: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 node : var_2. method_2 ( ) ) { if (! ( var_3. contains ( node ) ) ) { var_1. add ( node ) ; } } return var_1 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { if ( ( ( var_1 ) != null ) && ( ( var_2 ) != null ) ) return var_3 . method_2 ( query , var_4 . tostring ( ) , var_2 ) ; else if ( ( var_2 ) != null ) return var_3 . method_2 ( query , var_4 . tostring ( ) , var_2 ) ; else return var_3 . method_2 ( query , var_4 . tostring ( ) , var_2 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( this. id ) == ( var_2 ) ) || ( ( this. id ) == ( var_3 ) ) ) || ( ( this. var_4 ) && ( ( this. var_5 ) < ( ( var_6 ) - 1 ) ) ) ) || ( (! ( this. var_4 ) ) && ( ( this. var_5 ) <= ( var_6 ) ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_1 [ ] var_2 = this . var_2 ; if ( ( var_2 . length ) > 0 ) { type_1 result = null ; for ( int i = 0 ; ( i < ( var_2 . length ) ) && ( result == null ) ; i ++ ) { if ( var_2 [ i ] . equals ( var_1 ) ) { result = var_2 [ i ] ; } } return result ; } else { return null ; } }
[0]: public type_1 method_1 ( int var_1, int var_2, int var_3, java.lang.string var_4, java.lang.string var_5, java.lang.string var_6, java.lang.string var_7, java.lang.string token ) { return var_8. method_2 ( var_1, var_2, var_3, var_4, var_5, var_6, var_7, token ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { if ( ! ( method_2 ( ) ) ) { return ; } final type_2 var_2 = type_3 . method_3 ( ) . method_4 ( var_3 , var_4 class ) ; var_2 . method_5 ( method_6 ( ) , var_1 . method_6 ( ) ) ; var_2 . method_7 ( ) ; }
[0]: public type_1 method_1 ( char var_1 ) { if ( (! ( this. var_2 ) ) || ( var_1!= char_1 ) ) { this. var_2 = ( this. var_2 ) || ( var_1!= char_1 ) ; this. state += var_1 ; } return this ; }

************

************
tgt: public void init ( ) { super . init ( ) ; type_1 var_1 = type_2 . method_2 ( string_1 , string_2 ) ; type_3 var_2 = new type_3 ( string_3 , string_4 ) ; type_4 . method_3 ( ) . method_4 ( ) . method_5 ( ) . method_6 ( var_1 , 0 , var_2 ) ; }
[0]: public void method_1 ( ) { boolean status = true ; for ( int index : var_1. method_2 ( ) ) { if ( var_2. method_3 ( ). get ( index ). method_4 ( ) ) { status = false ; } } if ( ( status && ( ( var_3 ) == ( - 1 ) ) ) && ( ( var_4 ) == ( - 1 ) ) ) { method_5 ( false ) ; var_5. method_6 ( var_1. method_7 ( ) ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( var_1 . starttime ( ) ) ; method_3 ( var_1 . method_4 ( ) ) ; method_5 ( var_1 . method_6 ( ) ) ; method_7 ( java.lang.integer.tostring ( var_1 . method_8 ( ) ) ) ; method_9 ( var_1 . method_10 ( ) ) ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. split ( string_1 ) ; java.lang.string var_3 = var_2 [ 0 ] ; java.lang.string var_4 = var_2 [ 1 ] ; java.lang.string var_5 = var_2 [ int_1 ] ; return ( ( ( var_3 + string_2 ) + var_4 ) + string_2 ) + var_5 ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_2 > var_5 = var_2 . method_2 ( var_3 class ) . method_3 ( string_1 , var_4 . id ) . method_4 ( "id" ) . method_5 ( ) ; assertnotnull ( var_5 ) ; assertequals ( int_1 , var_5 . size ( ) ) ; assertequals ( var_4 , var_5 . get ( 0 ) ) ; assertequals ( var_6 , var_5 . get ( 1 ) ) ; }
[0]: private static long method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; long var_3 = 0 ; while (! var_2 ) { try { java.lang.system.out.print ( var_1 ) ; java.lang.string x = var_4. method_2 ( ) ; var_3 = type_1. method_3 ( x ) ; var_2 = true ; } catch ( type_2 var_5 ) { java.lang.system.out.println ( string_1 ) ; var_2 = false ; } } return var_3 ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( ( size ) == ( var_1 . length ) ) { method_2 ( ( int_1 * ( var_1 . length ) ) ) ; } var_1 [ ( ( var_2 ) ++ ) ] = item ; ( size ) ++ ; if ( ( var_2 ) == ( var_1 . length ) ) var_2 = 0 ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view view = var_1. method_2 ( var_4, var_2, false ) ; var_5 = ( ( type_4 ) ( view. method_3 ( var_6 ) ) ) ; var_7 = ( ( type_4 ) ( view. method_3 ( var_8 ) ) ) ; var_9 = ( ( type_4 ) ( view. method_3 ( var_10 ) ) ) ; var_11 = ( ( type_4 ) ( view. method_3 ( var_12 ) ) ) ; return view ; }

************

************
tgt: public double method_1 ( ) { return ( ( ( double ) ( var_2 ) ) / ( ( double ) ( var_3 ) ) ) - ( - ( ( ( double ) ( method_2 ( ) ) ) * ( ( double ) ( method_2 ( ) ) ) ) ) ; }
[0]: public int method_1 ( ) { return new type_1 ( ). append ( var_1 ). append ( var_2 ). append ( var_3 ). append ( var_4 ). append ( var_5 ). append ( var_6 ). append ( var_7 ). append ( var_8 ). append ( var_9 ). method_2 ( ) ; }

************

************
tgt: public void method_1 ( double var_1 , type_2 type ) { double var_3 = 0.0 ; if ( type . equals ( var_4 ) ) { var_3 = type_3 . method_2 ( var_1 , method_3 ( var_5 ) , method_3 ( var_6 ) ) ; } else if ( type . equals ( var_7 ) ) { var_3 = type_3 . method_2 ( var_1 , method_3 ( var_8 ) , method_3 ( var_6 ) ) ; } else { var_3 = var_1 ; } method_4 ( var_3 ) ; }
[0]: private type_1 method_1 ( type_2 context, type_3 var_1, type_4 var_2 ) { type_1 var_3 = var_1. method_2 ( ). method_3 ( ) ; if ( var_2. method_4 ( ) ) { context. method_5 ( var_1. method_6 ( var_3 ) ) ; } else if ( var_2. method_7 ( ) ) { context. method_5 ( var_3 ) ; } return var_3 ; }

************

************
tgt: public type_1 method_1 ( type_2 key , type_3 value ) throws type_4 { type_1 node = null ; keys . add ( key ) ; values . add ( new java.util.arraylist < type_3 > ( java.util.arrays.aslist ( value ) ) ) ; ++ ( var_1 ) ; if ( type_5 . method_2 ( ) ) { node = type_5 . method_3 ( ) ; } return node ; }
[0]: private void method_1 ( java.lang.string var_1 ) { if ( ( var_2 )!= null ) { var_2. append ( var_1 ) ; int start = var_2. gettext ( ). tostring ( ). method_2 ( var_1 ) ; int var_3 = var_2. gettext ( ). length ( ) ; var_2. method_3 ( start, var_3 ) ; } else type_1. method_4 ( var_4, string_1 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) { for ( type_2 var_3 : type_2 . values ( ) ) { if ( var_2 == var_3 ) { return ( var_4 [ var_1 . method_2 ( ) ] [ var_1 . method_3 ( ) ] . method_4 ( var_3 ) ) != null ; } } return false ; }
[0]: private void method_1 ( ) { method_2 ( ) ; java.lang.string text = method_3 ( method_4 ( ), var_1 ) ; var_2 = text!= null ; if ( method_5 ( ) ) { } var_3. method_6 ( ) ; var_3. add ( var_4 ) ; if ( method_7 ( text ) ) { var_5. add ( var_6 ) ; var_3. add ( var_5 ) ; type_1. method_8 ( string_1 ) ; } var_7. method_6 ( ) ; var_7. add ( var_3 ) ; } }

************

************
tgt: private void method_1 ( ) { this . method_2 ( ) ; do { var_2 [ var_3 ] . method_5 ( var_1 ) ; this . method_2 ( ) ; var_3 = ( ( var_3 ) + 1 ) % int_1 ; } while ( ( ! ( var_1 . method_3 ( ) ) ) && ( ! ( var_1 . method_4 ( ) ) ) ) ; this . method_6 ( ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( float_1, float_2 ) ; var_2. method_2 ( true ) ; var_2. method_3 ( type_2. method_4 ( var_1, int_1 ) ) ; java.util.list < type_3 > var_4 = new type_4 ( ). method_6 ( ) ; for ( type_3 var_5 : var_4 ) { var_2. method_7 ( var_5 ). i = var_6 ; } }

************

************
tgt: public void init ( type_1 var_1 ) throws type_2 { this . var_1 = var_1 ; this . var_1 . method_1 ( ) ; if ( ( this . var_1 . method_3 ( ) ) != null ) { this . var_2 = ( ( type_3 ) ( type_4 . get ( ) . method_2 ( this . var_1 . method_3 ( ) ) ) ) ; if ( ( this . var_2 ) == null ) { this . var_2 = new type_5 ( ) ; } } }
[0]: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = new type_1 ( new type_2 ( ) ) ; type_3 var_2 = new type_3 ( string_1 ) ; asserttrue ( var_1. method_2 ( var_2 ) ) ; assertequals ( var_2, var_1. method_3 ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( ) { try { if ( ! ( var_1 . method_2 ( ) . isempty ( ) ) ) { method_4 ( ) ; var_2 . method_5 ( var_3 , var_4 ) ; } else { type_1 . method_6 ( getactivity ( ) , string_1 , var_5 ) . show ( ) ; } } catch ( java.lang.exception var_6 ) { var_7 . method_7 ( var_8 , var_9 , var_6 ) ; } var_10 . method_8 ( false ) ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.integer id ) { type_2 var_1 = var_2. method_2 ( id. method_3 ( ) ) ; if ( var_1 == null ) { return new type_1 < type_2 > ( var_3 ) ; } return new type_1 < type_2 > ( var_1, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( method_2 ( ) ) != null ) { method_3 ( ( ( ( var_1 / ( ( float ) ( method_2 ( ) . method_4 ( ) ) ) ) * int_1 ) / int_2 ) ) ; } method_5 ( ( ( ( ( ( ( float ) ( var_2 ) ) / float_1 ) / float_2 ) / int_1 ) * ( var_3 ) ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { java.util.map < type_3, type_4 > var_2 = new java.util.hashmap < type_3, type_4 > ( ) ; for ( type_2 var_3 : var_1 ) { type_5. method_2 ( ( var_3 instanceof type_6 ) ) ; type_6 var_4 = ( ( type_6 ) ( var_3 ) ) ; var_2. put ( var_4. method_3 ( ), new type_4 ( var_4. method_4 ( ). getvalue ( ), null ) ) ; } var_5. method_5 ( var_2 ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { update ( var_1 ) ; var_2 . method_2 ( 0.0f , 0.0f , 0.0f , 1.0f ) ; var_2 . method_3 ( var_3 ) ; var_4 . method_4 ( var_5 ) ; var_6 . method_5 ( var_7 ) ; if ( var_9 ) var_10 . method_1 ( var_11 , var_5 ) ; var_6 . method_1 ( ) ; var_4 . method_4 ( var_13 . method_7 ( ) . var_14 ) ; var_13 . method_6 ( ) ; }
[0]: public void method_1 ( java.util.list < type_1 > results ) { method_2 ( ) ; var_1. method_3 ( ) ; if ( ( results == null ) || ( results. isempty ( ) ) ) { method_4 ( false ) ; var_2 = null ; type_2. method_5 ( this, var_3, var_4 ). show ( ) ; return ; } else { method_6 ( ( ( java.util.arraylist < type_1 > ) ( results ) ) ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { var_1 . data = new java.util.arraylist < > ( ) ; var_2 . add ( string_1 ) ; var_2 . add ( string_1 ) ; type_1 var_3 = null ; try { var_3 = new type_1 ( var_1 . data ) ; } catch ( type_2 var_4 ) { var_4 . method_1 ( ) ; } java.lang.system.out.println ( var_3 . method_2 ( ) ) ; }
[0]: public boolean method_1 ( type_1 item ) { int var_1 = item. method_2 ( ) ; if ( var_1 == ( var_2 ) ) { android.content.context context = this ; android.content.intent var_3 = new android.content.intent ( context, var_4 class ) ; method_3 ( var_3 ) ; } if ( var_1 == ( var_5 ) ) { } if ( ( var_6 ) == ( var_7 ) ) { android.content.intent var_8 = new android.content.intent ( method_4 ( ), var_9 class ) ; method_3 ( var_8 ) ; } return super. method_1 ( item ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view var_2 , int position , long id ) { type_2 var_3 ; if ( var_4 ) { var_3 = var_5 . get ( position ) ; } else { var_3 = var_6 . get ( position ) ; } android.content.intent i = new android.content.intent ( this , var_7 class ) ; i . method_3 ( string_2 , var_3 ) ; method_4 ( i ) ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.integer var_3 ) { type_3 var_4 = type_3. method_2 ( var_1 ) ; if (! ( var_5. method_3 ( var_4, method_4 ( ) ) ) ) { return new type_1 < type_2 > ( string_1, string_2, null ) ; } return var_6. method_1 ( type_3. method_2 ( var_2 ), method_5 ( ). method_6 ( ), var_3 ) ; }

************

************
tgt: private static java.util.properties method_1 ( type_1 var_1 ) { java.util.properties var_2 = new java.util.properties ( ) ; if ( var_1 != null ) { java.util.list var_3 = var_1 . method_2 ( ) ; for ( java.lang.object var_4 : var_3 ) { type_1 var_5 = ( ( type_1 ) ( var_4 ) ) ; var_2 . method_3 ( var_5 . method_4 ( var_6 ) , var_5 . method_4 ( var_7 ) ) ; } } return var_2 ; }
[0]: private type_1 method_1 ( ) { type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( true ) ; try { type_3 var_2 = var_1. build ( string_1 ) ; return var_2. method_3 ( ) ; } catch ( type_4 var_3 ) { var_3. method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_4 ( ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 view , int var_1 ) { switch ( var_1 ) { case var_2 : if ( ( view . method_2 ( ) ) == ( ( view . method_3 ( ) ) - 1 ) ) { ( var_4 ) ++ ; var_5 = ( var_6 ) + ( method_5 ( var_4 ) ) ; getdata ( ) ; } break ; } }
[0]: protected type_1 method_1 ( ) { if ( ( var_1 ) && ( type_2. method_2 ( ) ) ) return type_1. method_3 ( ( ( ( type_2. method_4 ( ). method_5 ( ) ) + string_1 ) + ( var_2. method_6 ( ) ) ) ) ; return var_2. method_1 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { int var_2 = - 1 ; try { var_2 = java.lang.integer.parseint ( var_1 ) ; var_3 = type_1 . method_2 ( var_2 ) ; var_3 . method_3 ( ) ; this . method_4 ( string_1 , ( string_2 + var_1 ) ) ; } catch ( type_2 var_4 ) { method_5 ( var_5 , string_3 ) ; } catch ( type_3 var_6 ) { method_5 ( var_5 , string_4 ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) throws java.io.ioexception { type_1 var_3 = new type_1 ( var_1. method_2 ( ) ) ; type_4 var_4 ; type_5 var_5 = new type_6 ( var_1 ) ; var_4 = var_6. method_3 ( var_5 ) ; for ( type_7 var_7 = var_4. method_4 ( ) ; var_7!= null ; var_7 = var_4. method_4 ( ) ) { var_3. set ( var_4. method_5 ( ) ) ; } return var_3 ; }

************

************
tgt: private void method_1 ( java.lang.integer date ) { type_1 var_1 = this . method_2 ( ) ; java.lang.string var_2 = ( ( ( ( ( ( ( ( string_1 + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) + date ) + string_4 ) + ( var_5 ) ) + string_5 ) + date ; var_1 . method_4 ( var_2 ) ; }
[0]: private float method_1 ( java.lang.double var_1, java.lang.double var_2 ) { type_1 var_3 = type_2. method_2 ( ) ; if ( var_3 == null ) { return - 1 ; } type_1 var_4 = method_3 ( var_1, var_2 ) ; float var_5 = ( var_3. method_4 ( var_4 ) ) / int_1 ; return new type_3 ( var_5 ). method_5 ( 1, var_6 ). method_6 ( ) ; }

************

************
tgt: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 node : var_2 . method_2 ( ) ) { if ( ! ( path . contains ( node ) ) ) { var_1 . add ( node ) ; } } return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { switch ( var_1. method_2 ( ) ) { case var_2 : method_3 ( new android.content.intent ( this, var_3 class ) ) ; return true ; case var_4 : method_3 ( new android.content.intent ( this, var_5 class ) ) ; return true ; case var_6 : type_2 var_7 = type_3. method_4 ( var_8, var_9, string_1, var_10 ) ; var_7. show ( method_5 ( ), string_2 ) ; return true ; default : return super. method_1 ( var_1 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( this . id ) == ( var_2 ) ) || ( ( this . id ) == ( var_3 ) ) ) || ( ( this . var_4 ) && ( ( this . var_5 ) < ( var_6 ) ) ) ) || ( ( ! ( this . var_4 ) ) && ( ( this . var_5 ) <= ( var_6 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( ( var_2 )!= null ) { var_1. method_2 ( string_1, var_2 ) ; var_1. method_3 ( string_2, var_3 ) ; var_1. method_4 ( string_3, position ) ; } if ( ( ( var_4 )!= null ) && ( var_4. method_5 ( ) ) ) { var_1. method_6 ( string_4, var_5 ) ; } }

************

************
tgt: public type_1 method_2 ( int var_1 , int var_2 , int var_3 , java.lang.string var_4 , java.lang.string var_5 , java.lang.string var_6 , java.lang.string var_7 , java.lang.string token ) { return var_8 . method_2 ( var_1 , var_2 , var_3 , var_4 , var_5 , var_6 , var_7 , token ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; var_2. method_2 ( ) ; var_1. method_3 ( var_3, var_4 ) ; var_2. method_3 ( var_4, 1 ) ; for ( int i = 0 ; i < ( var_4 ) ; i ++ ) { var_1. set ( ( int_1 * i ), i, 1.0 ) ; var_2. set ( i, 1, 1.0 ) ; } }

************

************
tgt: public type_1 method_1 ( char var_1 ) { if ( ( ! ( this . var_2 ) ) || ( var_1 != char_1 ) ) { this . var_2 = ( this . var_2 ) || ( var_1 == char_1 ) ; this . state += var_1 ; } return this ; }
[0]: public void method_1 ( ) { type_1 var_1 = this. method_2 ( ) ; for ( int i = 0 ; i < ( var_1. method_3 ( ) ) ; i ++ ) { java.util.vector < type_2 > var_2 = new java.util.vector < > ( ) ; for ( int j = 0 ; j < ( var_1. method_4 ( ) ) ; j ++ ) var_2. add ( null ) ; var_3. add ( var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { boolean status = true ; for ( int index : var_1 . method_2 ( ) ) { if ( var_2 . method_3 ( ) . get ( index ) . method_4 ( ) ) { status = false ; } } if ( ( status && ( ( var_3 ) == ( - 1 ) ) ) && ( ( var_4 ) == ( - 1 ) ) ) { var_5 . method_6 ( var_1 . method_7 ( ) ) ; } }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { java.lang.string text = var_2. method_2 ( position ) ; android.content.intent var_3 = new android.content.intent ( getcontext ( ), var_4 class ). method_3 ( var_5, text ) ; method_4 ( var_3 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1 . split ( string_1 ) ; java.lang.string var_5 = var_2 [ 0 ] ; java.lang.string var_4 = var_2 [ 1 ] ; java.lang.string var_3 = var_2 [ int_1 ] ; return ( ( ( var_3 + string_2 ) + var_4 ) + string_2 ) + var_5 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { int var_2 = getdata ( this. var_2, var_1 ) ; int var_3 = getdata ( this. var_3, var_1 ) ; switch ( this. var_4 ) { case var_5 : return var_2 < var_3 ; case var_6 : return var_2 > var_3 ; case var_7 : return var_2 <= var_3 ; case var_8 : return var_2 >= var_3 ; case var_9 : return var_2 == var_3 ; default : return false ; } }

************

************
tgt: private static long method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; long var_3 = 0 ; while ( ! var_2 ) { try { java.lang.system.out.print ( var_1 ) ; java.lang.string x = var_4 . method_2 ( ) ; var_3 = type_1 . method_3 ( x ) ; var_2 = true ; } catch ( type_2 var_5 ) { java.lang.system.out.println ( string_1 ) ; var_2 = false ; } } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = var_3. getvalue ( ) ; java.lang.string var_4 = var_5. gettext ( ) ; if ( ( var_4. length ( ) ) > int_1 ) { var_4 = ( method_2 ( var_2 ) ) + ( var_4. substring ( ( ( var_4. length ( ) ) - int_1 ) ) ) ; } else { var_4 = ( method_2 ( var_2 ) ) + var_4 ; } method_3 ( var_2, var_4 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { view = var_1 . method_2 ( var_4 , var_2 , false ) ; var_5 = ( ( type_4 ) ( view . method_3 ( var_6 ) ) ) ; var_7 = ( ( type_4 ) ( view . method_3 ( var_8 ) ) ) ; var_9 = ( ( type_4 ) ( view . method_3 ( var_10 ) ) ) ; var_11 = ( ( type_4 ) ( view . method_3 ( var_12 ) ) ) ; return view ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.string data, java.lang.string title, java.io.file var_2 ) { type_2. method_2 ( var_1 ). method_3 ( string_1 ). method_4 ( string_2 ). method_5 ( title ). method_6 ( type_3. method_7 ( var_1, ( ( var_3 ) + string_3 ), var_2 ) ). settext ( data ). method_8 ( string_4 ). method_9 ( ) ; }

************

************
tgt: public int method_1 ( ) { return new type_1 ( ) . append ( var_1 ) . append ( var_2 ) . append ( var_3 ) . append ( var_4 ) . append ( var_5 ) . append ( var_6 ) . append ( var_7 ) . method_2 ( ) ; }
[0]: public boolean method_1 ( ) { if ( this. method_2 ( ) ) { var_1 [ ( ( var_2 ) + 1 ) ]. method_3 ( ) ; var_1 [ ( ( var_2 ) + 1 ) ]. method_3 ( ) ; return true ; } return false ; }

************

************
tgt: private type_1 method_1 ( type_2 context , type_3 var_1 , type_4 var_2 ) { type_1 var_3 = var_1 . method_2 ( ) . method_3 ( ) ; if ( var_2 . method_4 ( ) ) { var_3 = var_1 . method_6 ( var_3 ) ; context . method_5 ( var_3 ) ; } else if ( var_2 . method_7 ( ) ) { context . method_5 ( var_3 ) ; } return var_3 ; }
[0]: public boolean method_1 ( type_1 state, type_2 var_1, type_3 var_2, type_4 var_3 ) { type_5 var_4 = method_2 ( var_1, var_2 ) ; if ( ( var_4!= null ) && ( ( var_4. method_3 ( ) ) == null ) ) return false ; return super. method_1 ( state, var_1, var_2, var_3 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { if ( ( var_2 ) != null ) { var_2 . append ( var_1 ) ; int start = ( var_2 . gettext ( ) . length ( ) ) - ( var_1 . length ( ) ) ; int var_3 = var_2 . gettext ( ) . length ( ) ; var_2 . method_3 ( start , var_3 ) ; } else type_1 . method_4 ( var_4 , string_1 ) ; }
[0]: protected void update ( float var_1 ) { type_1 var_2 = var_3. method_1 ( ) ; type_2 var_4 = new type_2 ( ) ; var_4. method_2 ( var_2. method_3 ( ), var_2. method_4 ( ), var_2. method_5 ( ) ) ; var_5. method_6 ( var_4 ) ; if ( ( var_6 )!= null ) { var_6. method_7 ( ) ; } var_7. update ( var_1 ) ; super. update ( var_1 ) ; }

************

************
tgt: private void method_1 ( ) { method_2 ( ) ; java.lang.string text = method_3 ( method_4 ( ) , var_1 ) ; var_2 = text != null ; var_7 . method_6 ( ) ; if ( method_5 ( ) ) { var_3 . method_6 ( ) ; var_3 . add ( var_4 ) ; } if ( method_7 ( text ) ) { var_5 . add ( var_6 ) ; var_3 . add ( var_5 ) ; } var_7 . add ( var_3 ) ; }
[0]: public void method_1 ( ) { for ( int i = int_1 ; i < ( this. var_1. length ) ; i -- ) { if ( ( this. var_1 [ i ] )!= null ) { method_2 ( int_2 ) ; this. var_1 [ i ] = null ; return ; } } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( float_1 , float_2 ) ; var_2 . method_2 ( true ) ; var_2 . method_3 ( type_2 . method_4 ( var_1 , int_1 ) ) ; type_3 var_3 = new type_3 ( ) . title ( string_1 ) . method_5 ( string_2 ) . position ( var_1 ) ; java.util.list < type_3 > var_4 = new type_4 ( ) . method_6 ( ) ; for ( type_3 var_5 : var_4 ) { var_2 . method_7 ( var_5 ) ; } }
[0]: public static java.lang.string method_1 ( boolean var_1 ) { return ( var_2 ) == null? string_1 : ( var_3 ) == null? var_2. gettext ( var_4 ). tostring ( ) :! var_1? var_3. title : ( ( var_2. gettext ( var_5 ) ) + string_2 ) + ( var_3. title ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = new type_1 ( new type_2 ( ) ) ; type_3 var_2 = new type_3 ( string_1 ) ; asserttrue ( var_1 . method_2 ( string_1 ) ) ; assertequals ( var_2 , var_1 . method_3 ( string_1 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = new type_1 ( ) ; var_2 = method_2 ( var_3 class ) ; method_3 ( var_2. method_4 ( method_5 ( var_4 class ) ) ). method_6 ( new type_3 ( ) ) ; method_3 ( var_2. method_7 ( method_5 ( var_4 class ), method_5 ( var_5 class ) ) ). method_6 ( true ) ; var_6 = method_2 ( var_7 class ) ; var_8 = new type_4 ( string_1, var_6, var_2 ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.integer id ) { java.lang.system.out.println ( ( string_1 + id ) ) ; type_2 var_1 = var_2 . method_2 ( id ) ; if ( var_1 == null ) { java.lang.system.out.println ( ( ( string_2 + id ) + string_3 ) ) ; return new type_1 < type_2 > ( var_3 ) ; } return new type_1 < type_2 > ( var_1 , var_4 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( int_1 ) ; type_2. assertthat ( var_1, type_3. method_3 ( var_3 ) ) ; type_4 var_4 = var_2. method_4 ( int_1, var_5, var_6, var_1 ) ; type_2. assertthat ( var_4, type_3. method_5 ( ) ) ; type_2. assertthat ( var_4, type_3. method_5 ( ) ) ; type_2. assertthat ( var_4. method_6 ( ), type_3. not ( string_1 ) ) ; type_2. assertthat ( var_4. method_7 ( ), type_3. not ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { java.util.map < type_3 , type_4 > var_2 = new java.util.hashmap < type_3 , type_4 > ( ) ; for ( type_2 var_3 : var_1 ) { type_5 . method_2 ( ( var_3 instanceof type_6 ) ) ; type_6 var_4 = ( ( type_6 ) ( var_3 ) ) ; var_2 . put ( var_4 . method_3 ( ) , new type_4 ( var_4 . method_4 ( ) . getvalue ( ) ) ) ; } var_5 . method_5 ( var_2 ) ; }
[0]: public java.lang.string method_1 ( int var_1 ) { type_1. method_2 ( var_2, ( ( ( ( string_1 + ( method_3 ( var_1 ) ) ) + string_2 ) + var_1 ) + string_3 ) ) ; return type_2. method_4 ( method_3 ( var_1 ) ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > results ) { method_2 ( ) ; var_1 . method_3 ( ) ; if ( ( results == null ) || ( results . isempty ( ) ) ) { method_4 ( false ) ; var_2 = null ; type_2 . method_5 ( this , var_3 , var_4 ) . show ( ) ; return ; } else { method_6 ( results ) ; } }
[0]: public boolean method_1 ( double [ ] var_1, double [ ] var_2, type_1 var_3 ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( java.lang.math.abs ( ( ( var_1 [ i ] ) - ( var_2 [ i ] ) ) ) ) > int_1 ) return false ; } return true ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { int var_1 = item . method_2 ( ) ; if ( var_1 == ( var_2 ) ) { android.content.context context = this ; android.content.intent var_3 = new android.content.intent ( context , var_4 class ) ; method_3 ( var_3 ) ; } if ( var_1 == ( var_5 ) ) { } if ( var_1 == ( var_7 ) ) { android.content.intent var_8 = new android.content.intent ( method_4 ( ) , var_9 class ) ; method_3 ( var_8 ) ; } return super . method_1 ( item ) ; }
[0]: public void method_1 ( ) { int var_1 = 0 ; for ( type_1 [ ] i : var_2. method_2 ( ) ) { for ( type_1 j : i ) { if ( j. method_3 ( ) ) { ++ var_1 ; } } } assertequals ( var_3, var_1 ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.integer var_3 ) { type_3 var_4 = type_3 . method_2 ( var_1 ) ; if ( ! ( var_5 . method_3 ( var_4 , method_4 ( ) ) ) ) { return new type_1 < type_2 > ( string_1 , string_2 , null ) ; } return var_6 . method_1 ( type_3 . method_2 ( var_2 ) , method_4 ( ) , var_3 ) ; }
[0]: private boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string [ ] var_3 = var_2. split ( string_1 ) ; for ( int i = 0 ; i < ( var_3. length ) ; i ++ ) { if ( var_1. contains ( var_3 [ i ] ) ) { return true ; } } return false ; }

************

************
tgt: private type_1 method_1 ( java.lang.string filename ) { type_2 var_1 = new type_2 ( ) ; var_1 . method_2 ( true ) ; try { type_3 var_2 = var_1 . build ( filename ) ; return var_2 . method_3 ( ) ; } catch ( type_4 var_3 ) { var_3 . method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_4 ( ) ; } return null ; }
[0]: private void method_1 ( java.lang.string var_1, java.lang.integer var_2 ) throws java.io.ioexception { try { var_3 = new type_1 ( var_1, var_2 ) ; var_3. method_2 ( true ) ; var_4 = new java.io.bufferedreader ( new type_2 ( var_3. method_3 ( ), string_1 ) ) ; out = new type_3 ( var_3. method_4 ( ), string_1 ) ; } catch ( java.io.ioexception var_5 ) { method_5 ( ) ; } }

************

************
tgt: protected type_1 method_1 ( ) { if ( ( var_1 ) && ( type_2 . method_2 ( ) ) ) { return type_1 . method_3 ( ( ( ( type_2 . method_4 ( ) . method_5 ( ) ) + string_1 ) + ( var_2 . method_6 ( false ) ) ) ) ; } return var_2 . method_1 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { try { type_2 var_2 = var_1. method_2 ( ) ; var_1. method_1 ( ) ; var_2. method_1 ( ) ; } catch ( type_3 var_3 ) { var_4. method_3 ( var_5, string_1, var_3 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception { type_1 var_3 = new type_1 ( var_1 . method_2 ( ) ) ; type_4 var_4 ; type_5 var_5 = new type_6 ( var_1 ) ; var_4 = var_6 . method_3 ( var_5 ) ; for ( type_7 var_7 = var_4 . method_4 ( ) ; var_7 != null ; var_7 = var_4 . method_4 ( ) ) { var_3 . set ( var_4 . method_5 ( ) ) ; } return var_3 ; }
[0]: public static void method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; java.lang.system.out.println ( ( string_1 + string_2 ) ) ; int var_3 ; java.lang.system.out.println ( string_3 ) ; int var_4 = var_1. method_2 ( ) ; var_3 = var_4 % int_1 ; if ( var_3 == 0 ) { java.lang.system.out.println ( string_4 ) ; } else { java.lang.system.out.println ( string_5 ) ; } java.lang.system.out.println ( string_6 ) ; var_1. method_3 ( ) ; } }

************

************
tgt: private float method_1 ( java.lang.double var_1 , java.lang.double var_2 ) { type_1 var_3 = type_2 . method_2 ( ) ; type_1 var_4 = method_3 ( var_1 , var_2 ) ; float var_5 = ( var_3 . method_4 ( var_4 ) ) / int_1 ; return new type_3 ( var_5 ) . method_5 ( 1 , var_6 ) . method_6 ( ) ; }
[0]: protected static java.lang.string method_1 ( java.lang.string filename ) throws type_1 { if (! ( filename. method_2 ( var_1 ) ) ) throw new type_1 ( var_2 ) ; if ( filename. startswith ( string_1 ) ) throw new type_1 ( var_2 ) ; java.lang.string var_3 = filename. substring ( 0, filename. method_3 ( string_1 ) ) ; return var_3. replace ( string_2, string_3 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { switch ( var_1 . method_2 ( ) ) { case var_2 : method_3 ( new android.content.intent ( this , var_3 class ) ) ; return true ; case var_4 : method_3 ( new android.content.intent ( this , var_5 class ) ) ; return true ; default : return super . method_1 ( var_1 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( var_3 ) ; if ( var_4 ) { var_3. method_3 ( ) ; var_1. method_3 ( ) ; } else { var_3. method_4 ( ) ; var_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_2 ) != null ) { var_1 . method_2 ( string_1 , var_2 ) ; var_1 . method_3 ( string_2 , var_3 ) ; var_1 . method_4 ( string_3 , position ) ; } if ( ( var_4 ) != null ) { var_1 . method_6 ( string_4 , var_5 ) ; } }
[0]: public type_1 build ( ) { if (! ( type_1. method_1 ( context ). equals ( var_1 ) ) ) { type_1. method_2 ( context ) ; } type_1 var_2 = new type_1 ( context ) ; var_2. method_3 ( var_3 ) ; var_2. method_4 ( var_1 ) ; var_4 = var_2 ; var_5. method_5 ( context ) ; return var_2 ; }

************

************
tgt: private void method_1 ( ) { for ( int i = 0 ; i < ( var_4 ) ; i ++ ) { var_1 . set ( ( int_1 * i ) , i , 1.0 ) ; var_2 . set ( i , 0 , 1.0 ) ; } }
[0]: private void method_1 ( int var_1 ) { for ( type_1 var_2 : var_3 ) { type_2 [ ] var_4 = var_5 ; var_5 = type_3. method_2 ( var_4, var_1, new type_4 [ ( var_4. length ) - 1 ] ) ; if ( ( var_6 ) > var_1 ) ( var_6 ) -- ; } var_7. method_3 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = this . method_2 ( ) ; var_3 . method_1 ( ) ; for ( int i = 0 ; i < ( var_1 . method_3 ( ) ) ; i ++ ) { java.util.vector < type_2 > var_2 = new java.util.vector < > ( ) ; for ( int j = 0 ; j < ( var_1 . method_4 ( ) ) ; j ++ ) var_2 . add ( null ) ; var_3 . add ( var_2 ) ; } }
[0]: public type_1 get ( int id, int var_1 ) { java.util.list < type_1 > var_2 = var_3. method_1 ( var_4, var_5 class ). method_2 ( 1, var_1 ). method_2 ( int_1, id ). method_3 ( ) ; if (! ( var_2. isempty ( ) ) ) { if ( ( var_2. get ( 0 ). method_4 ( ). getid ( ) ) == var_1 ) { return var_2. get ( 0 ) ; } else return null ; } return null ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { java.lang.string text = var_2 . method_2 ( position ) ; android.content.intent var_3 = new android.content.intent ( getactivity ( ) , var_4 class ) . method_3 ( var_5 , text ) ; method_4 ( var_3 ) ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; method_3 ( var_4 ) ; method_4 ( ) ; method_5 ( var_4 ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; return var_4 ; }

************

************
tgt: boolean method_1 ( type_1 var_1 , int id ) { int var_2 = getdata ( this . var_2 , var_1 , id ) ; int var_3 = getdata ( this . var_3 , var_1 , id ) ; switch ( this . var_4 ) { case var_5 : return var_2 < var_3 ; case var_6 : return var_2 > var_3 ; case var_7 : return var_2 <= var_3 ; case var_8 : return var_2 >= var_3 ; case var_9 : return var_2 == var_3 ; default : return false ; } }
[0]: public void method_1 ( ) { var_1 = true ; var_2. method_2 ( var_3, context ) ; if ( ( ( type ) == ( var_4 ) ) || ( ( type ) == ( var_5 ) ) ) { var_2. method_2 ( var_6, null ) ; } var_2. method_2 ( var_7, 0 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int var_2 = var_3 . getvalue ( ) ; java.lang.string var_4 = var_5 . gettext ( ) ; if ( ( var_4 . length ( ) ) > int_1 ) { var_4 = ( method_2 ( var_2 ) ) + ( var_4 . substring ( ( ( var_4 . length ( ) ) - int_1 ) ) ) ; } else { var_4 = ( method_2 ( var_2 ) ) + var_4 ; } method_3 ( var_2 , var_4 , true ) ; }
[0]: public java.util.list < type_1 > method_1 ( ) throws type_2 { java.util.list < type_3 > result = null ; try { result = var_1. method_2 ( ) ; return var_2. method_3 ( result, var_3 class ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( var_4, method_4 ( var_5, ( ( var_6 ) + string_1 ) ) ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.string data , java.lang.string title , java.io.file var_2 ) { type_2 . method_2 ( var_1 ) . method_3 ( string_1 ) . method_4 ( string_2 ) . method_5 ( title ) . method_6 ( type_3 . method_7 ( var_1 , ( ( var_3 ) + string_3 ) , var_2 ) ) . settext ( data ) . method_9 ( ) ; }
[0]: public static boolean method_1 ( java.lang.string path, type_1 var_1 ) throws type_2 { try { type_3 var_2 = type_4. method_2 ( ) ; if ( var_2 == null ) { return false ; } else { var_2. method_3 ( ) ; var_2. put ( path, var_1 ) ; var_2. method_4 ( ) ; return true ; } } catch ( type_5 var_3 ) { throw new type_2 ( ( string_1 + ( var_3. method_5 ( ) ) ), var_3 ) ; } }

************

************
tgt: public boolean method_1 ( ) { if ( this . method_2 ( ) ) { var_1 [ ( ( ( var_2 ) + 1 ) % ( var_1 . length ) ) ] . method_3 ( ) ; var_1 [ ( ( ( var_2 ) + 1 ) % ( var_1 . length ) ) ] . method_3 ( ) ; java.lang.system.out.println ( string_1 ) ; return true ; } return false ; }
[0]: public void method_1 ( type_1 var_1, boolean var_2, boolean var_3 ) { if (! ( var_2 || var_3 ) ) { var_1. method_2 ( var_4 ) ; } type_2 var_5 = new type_2 ( var_6, var_7, var_8, var_9, var_1, var_2, var_3 ) ; var_5. method_3 ( ) ; method_4 ( var_5 ) ; java.lang.system.out.println ( ( string_1 + ( var_4 ) ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 state , type_2 var_1 , type_3 var_2 , type_4 var_3 ) { type_5 var_4 = method_2 ( var_1 , var_2 ) ; if ( ( var_4 != null ) && ( var_4 . method_3 ( ) . isempty ( ) ) ) return false ; return super . method_1 ( state , var_1 , var_2 , var_3 ) ; }
[0]: static boolean method_1 ( type_1 var_1, int var_2 ) { java.util.list < type_2 > out = type_3. method_2 ( var_1, var_2, var_2, var_2 ) ; if (! ( out. isempty ( ) ) ) { for ( type_2 var_3 : out ) { if ( var_3 instanceof type_4 ) { type_4 var_4 = ( ( type_4 ) ( var_3 ) ) ; if ( var_4 instanceof type_5 ) { return true ; } } } } return false ; } return true ; }

************

************
tgt: protected void update ( float var_1 ) { type_1 var_2 = var_3 . method_1 ( ) ; type_2 var_4 = new type_2 ( ) ; var_4 . method_2 ( var_2 . method_3 ( ) , var_2 . method_4 ( ) , var_2 . method_5 ( ) ) ; var_5 . method_6 ( var_4 ) ; var_7 . update ( var_1 ) ; super . update ( var_1 ) ; if ( ( var_6 ) != null ) { var_6 . method_7 ( ) ; } }
[0]: public type_1 method_1 ( ) { type_1 obj = new type_1 ( ) ; obj. put ( string_1, var_1 ) ; obj. put ( string_2, var_2 ) ; obj. put ( string_3, var_3 ) ; obj. put ( string_4, var_4 ) ; obj. put ( string_5, var_5 ) ; obj. put ( string_6, var_6 ) ; obj. put ( string_7, string_7 ) ; return obj ; }

************

************
tgt: public void method_1 ( ) { for ( int i = int_1 ; i >= 0 ; i -- ) { if ( ( this . var_1 [ i ] ) != null ) { method_2 ( int_2 ) ; this . var_1 [ i ] = null ; return ; } } }
[0]: public boolean method_1 ( android.view.view var_1 ) { if (! ( var_1. method_2 ( ) ) ) return false ; if ( ( var_2 )!= ( var_3 ) ) return false ; if ( (! ( var_4. method_3 ( ) ) ) || ( var_4. method_4 ( ). method_5 ( ) ) ) return false ; return (! ( var_4. method_6 ( ) ) ) && ( method_7 ( var_1 ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( android.content.context context , boolean var_1 ) { return context == null ? string_1 : ( var_3 ) == null ? context . gettext ( var_4 ) . tostring ( ) : ! var_1 ? var_3 . title : ( ( context . gettext ( var_5 ) ) + string_2 ) + ( var_3 . title ) ; }
[0]: private void method_1 ( java.lang.string var_1, type_1 var_2 ) { java.util.list < type_1 > var_3 = this. var_4. get ( var_1 ) ; if ( var_3 == null ) { var_3 = new java.util.arraylist < > ( ) ; this. var_4. put ( var_1, var_3 ) ; } var_3. add ( var_2 ) ; this. var_4. put ( var_1, var_3 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = new type_1 ( ) ; var_2 = method_2 ( var_3 class ) ; method_3 ( var_2 . method_4 ( type_2 . method_5 ( var_4 class ) ) ) . method_6 ( true ) ; method_3 ( var_2 . method_7 ( type_2 . method_5 ( var_4 class ) , type_2 . method_5 ( var_5 class ) ) ) . method_6 ( true ) ; var_6 = method_2 ( var_7 class ) ; var_8 = new type_4 ( string_1 , var_6 , var_2 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { method_2 ( string_1, method_3 ( string_2 ), method_4 ( method_5 ( string_3, string_4 ), string_5 ) ) ; method_2 ( string_6, method_3 ( string_7 ), method_4 ( method_5 ( string_4, string_8 ), string_9 ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( int_1 ) ; type_2 . assertthat ( var_1 , type_3 . method_3 ( var_3 ) ) ; type_4 var_4 = var_2 . method_4 ( int_1 , var_5 , var_6 , var_1 ) ; type_2 . assertthat ( var_4 , type_3 . method_5 ( ) ) ; type_2 . assertthat ( var_4 . method_6 ( ) , type_3 . method_5 ( ) ) ; type_2 . assertthat ( var_4 . method_7 ( ) , type_3 . method_5 ( ) ) ; }
[0]: public void method_1 ( ) { method_2 ( ). method_3 ( false ) ; type_1 var_1 = new type_2 ( type_3. method_4 ( this ), string_1, var_2 ). method_5 ( ) ; method_6 ( var_1 ) ; type_4. method_7 ( ). method_8 ( ) ; }

************

************
tgt: private void method_1 ( java.lang.throwable var_1 ) throws java.lang.exception { type_1 method = var_2 class . method_2 ( string_1 ) ; java.lang.object var_3 = new type_2 ( var_1 ) ; new type_3 ( var_3 , method ) . method_3 ( var_4 , null ) ; fail ( string_2 ) ; }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { if (! ( var_1 ) ) method_2 ( ) ; type_2. method_3 ( string_1 ) ; java.lang.string var_2 = type_3. method_1 ( var_3 ) ; type_2. method_3 ( var_2 ) ; int i = java.lang.integer.parseint ( var_2. substring ( 0, var_2. method_4 ( string_2 ) ) ) ; var_2 = var_2. substring ( ( ( var_2. method_4 ( string_2 ) ) + 1 ) ) ; type_1 var_4 = new type_1 ( file, i ) ; return var_4 ; }

************

************
tgt: public java.lang.string method_1 ( int var_1 ) { type_1 . method_2 ( var_2 , ( ( ( ( string_1 + ( method_3 ( var_1 ) ) ) + string_2 ) + var_1 ) + string_3 ) ) ; return type_2 . method_4 ( method_3 ( var_1 ) ) . tolowercase ( ) ; }
[0]: private static boolean method_1 ( ) { synchronized ( var_1 ) { if ( var_2 ) return true ; try { var_1. method_2 ( var_3 ) ; } catch ( type_1 var_4 ) { var_5. info ( var_4. method_3 ( ) ) ; } } return var_2 ; } }

************

************
tgt: public boolean method_1 ( double [ ] var_1 , double [ ] var_2 , type_1 var_3 ) { if ( ( var_1 == null ) || ( var_2 == null ) ) return true ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( java.lang.math.abs ( ( ( var_1 [ i ] ) - ( var_2 [ i ] ) ) ) ) > int_1 ) return false ; } return true ; }
[0]: private void method_1 ( java.lang.string type, int number ) { for ( int i = 0 ; i < number ; i ++ ) { method_2 ( ) ; ( ( java.util.list < type_1 > ) ( var_1 ) ). add ( type_2. method_3 ( type, method_4 ( ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { int var_1 = 0 ; for ( type_1 [ ] i : var_2 . method_2 ( ) ) { for ( type_1 j : i ) { if ( ( j != null ) && ( j . method_3 ( ) ) ) { ++ var_1 ; } } } assertequals ( var_3 , var_1 ) ; }
[0]: private static boolean method_1 ( type_1 [ ] var_1 ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ]. name ) == ( var_2 ) ) { return true ; } } return false ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string [ ] var_3 = var_2 . split ( string_1 ) ; for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { if ( ( var_1 != null ) && ( var_1 . contains ( var_3 [ i ] ) ) ) { return true ; } } return false ; }
[0]: public double method_1 ( final double time ) { final int var_1 = var_2. method_2 ( time ) ; final int index = ( var_1 < 0 )? - var_1 : var_1 ; final double var_3 = ( var_4. get ( index ) ) - ( var_2. get ( index ) ) ; assert var_3 >= 0 ; return var_3 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.integer var_2 ) throws java.io.ioexception { try { var_3 = new type_1 ( var_1 , var_2 ) ; var_3 . method_2 ( false ) ; var_4 = new java.io.bufferedreader ( new type_2 ( var_3 . method_3 ( ) , string_1 ) ) ; out = new type_3 ( var_3 . method_4 ( ) , string_1 ) ; } catch ( java.io.ioexception var_5 ) { method_5 ( ) ; } }
[0]: public void method_1 ( ) { try { var_1 = new type_1 ( var_2 ). method_2 ( ) ; method_3 ( ) ; var_3 = true ; method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { type_2. method_5 ( string_1, var_4. tostring ( ) ) ; } }

************

************
tgt: private static void method_1 ( type_1 var_1 ) { try { if ( var_1 == null ) { return ; } type_2 var_2 = var_1 . method_2 ( ) ; var_1 . method_1 ( ) ; var_2 . method_1 ( ) ; } catch ( type_3 var_3 ) { var_4 . method_3 ( var_5 , string_1 , var_3 ) ; } }
[0]: public void method_1 ( ) { type_1 < java.lang.integer > var_1 = new type_1 ( int_1, new java.util.random ( ) ) ; var_1. add ( new java.lang.integer ( int_2 ) ) ; var_1. add ( new java.lang.integer ( int_3 ) ) ; var_1. add ( new java.lang.integer ( int_4 ) ) ; var_1. add ( new java.lang.integer ( int_5 ) ) ; type_2. method_2 ( var_1. contains ( new java.lang.integer ( int_6 ) ) ) ; }

************

************
tgt: public static void method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; java.lang.system.out.println ( ( string_1 + string_2 ) ) ; int var_3 ; java.lang.system.out.println ( string_3 ) ; int var_4 = var_1 . method_2 ( ) ; var_3 = var_4 % int_1 ; if ( var_3 == 0 ) { java.lang.system.out.println ( string_4 ) ; } else { java.lang.system.out.println ( string_5 ) ; } java.lang.system.out.println ( string_6 ) ; }
[0]: public type_1 method_1 ( type_1 var_1, java.lang.string var_2 ) { type_2 var_3 = var_4. method_2 ( var_2 ) ; if ( ( var_1. method_3 ( ) )!= null ) { if ( ( var_3 == null ) || (! ( type_3. equals ( var_1. method_3 ( ). getid ( ), var_3. getid ( ) ) ) ) ) { throw new type_4 ( string_1 ) ; } } var_1. method_4 ( var_3 ) ; return var_5. method_5 ( var_1 ) ; } return null ; }

************

************
tgt: protected static java.lang.string method_1 ( java.lang.string filename ) throws type_1 { if ( ( ! ( filename . method_2 ( var_1 ) ) ) || ( filename . startswith ( string_1 ) ) ) throw new type_1 ( var_2 ) ; java.lang.string var_3 = filename . substring ( 0 , filename . method_3 ( string_1 ) ) ; return var_3 . replaceall ( string_2 , string_3 ) ; }
[0]: protected void method_1 ( java.lang.object element ) { type_1 var_1 = type_2. method_2 ( element ) ; if ( ( var_1!= null ) && (! ( var_2. contains ( var_1 ) ) ) ) { if ( ( var_3 )!= null ) { var_1. method_3 ( var_3 ) ; } var_2. add ( var_1 ) ; } else { var_2. remove ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( var_3 ) ; if ( var_4 ) { var_3 . method_4 ( ) ; var_1 . method_5 ( ) ; } else { var_3 . method_3 ( ) ; var_1 . method_3 ( ) ; } }
[0]: private void method_1 ( type_1 n ) { if ( n. method_2 ( ). method_3 ( ) ) { return ; } if ( ( var_1. method_4 ( n ) )!= ( var_2 ) ) { var_1. method_5 ( n ) ; var_3. method_6 ( ) ; } else { var_3. method_7 ( type_2. method_8 ( var_4, var_5, string_1 ) ) ; } }

************

************
tgt: public type_1 build ( ) { if ( ! ( var_1 . equals ( type_1 . method_1 ( context ) ) ) ) { type_1 . method_2 ( context ) ; } type_1 var_2 = new type_1 ( context ) ; var_2 . method_3 ( var_3 ) ; var_2 . method_4 ( var_1 ) ; var_4 = var_2 ; var_5 . method_5 ( context ) ; return var_2 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( type_2. method_2 ( ) ) ; type_3. assertthat ( var_1. method_3 ( new type_4 ( ) ), method_4 ( int_1 ) ) ; type_3. assertthat ( var_1. method_5 ( string_1 ), method_6 ( string_1 ) ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { for ( type_1 var_2 : var_3 ) { type_2 [ ] var_4 = var_5 ; var_5 = type_3 . method_2 ( var_4 , var_1 , new type_4 [ ( var_4 . length ) - 1 ] ) ; if ( ( var_6 ) > var_1 ) ( var_6 ) -- ; else if ( ( var_6 ) >= ( var_5 . length ) ) var_6 = ( var_5 . length ) - 1 ; } var_7 . method_3 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_2. put ( 1, new type_1 ( string_2 ) ) ; var_2. put ( int_1, new type_1 ( string_3 ) ) ; var_2. put ( int_2, var_1 ) ; type_2. asserttrue ( var_2. method_2 ( var_1 ) ) ; }

************

************
tgt: public type_1 get ( int id , int var_1 ) { java.util.list < type_1 > var_2 = var_3 . method_1 ( var_4 , var_5 class ) . method_2 ( 1 , var_1 ) . method_2 ( int_1 , id ) . method_3 ( ) ; if ( ! ( var_2 . isempty ( ) ) ) { if ( ( var_2 . get ( 0 ) . method_4 ( ) . getid ( ) ) == var_1 ) { return var_2 . get ( 0 ) ; } else return null ; } else return null ; }
[0]: public static type_1 method_1 ( ) { type_2 < type_3 > var_1 = type_2. method_2 ( var_2 class ). method_3 ( ) ; java.lang.string var_3 = type_4. method_4 ( ) ; type_5. method_5 ( ) ; return method_6 ( var_4. method_7 ( var_1, var_3 ) ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; method_3 ( var_4 ) ; method_4 ( ) ; method_5 ( ) ; method_7 ( ) ; method_8 ( ) ; return var_4 ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : this. method_3 ( ) ; return true ; case var_2 : method_4 ( ) ; return true ; default : return super. method_1 ( item ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = true ; var_2 . method_2 ( var_3 , context ) ; if ( ( ( type ) == ( var_4 ) ) || ( ( type ) == ( var_5 ) ) ) { var_2 . method_2 ( var_6 , null ) ; } var_2 . method_2 ( var_7 , ( - 1 ) ) ; }
[0]: public type_1 method_1 ( final type_2 var_1 ) { final type_1 var_2 = var_1. method_2 ( ) ; if ( var_2. equals ( var_3 ) ) { return var_3 ; } if ( var_1. method_3 ( ). equals ( string_1 ) ) { return var_3 ; } return null ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) throws type_2 { try { return var_2 . method_3 ( var_1 . method_2 ( ) , var_3 class ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( var_4 , method_4 ( var_5 , ( ( var_6 ) + string_1 ) ) ) ; } }
[0]: public type_1 start ( ) { if ( this. method_1 ( ) ) { return this ; } if ( ( ( ( var_1 )!= null ) && ( this. method_2 ( ) ) ) && ( type_2. equals ( var_1. method_3 ( ) ) ) ) { var_2. method_4 ( var_1, string_1, string_2, var_3 ) ; var_4. method_5 ( var_5, var_1, null ) ; } return this ; }

************

************
tgt: public static boolean method_1 ( java.lang.string path , type_1 var_1 ) throws type_2 { try { type_3 var_2 = type_4 . method_2 ( ) ; var_2 . method_3 ( ) ; var_2 . put ( path , var_1 ) ; var_2 . method_4 ( ) ; return true ; } catch ( type_5 var_3 ) { throw new type_2 ( ( string_1 + ( var_3 . method_5 ( ) ) ) , var_3 ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; if ( ( var_2. method_3 ( var_3 class, var_1 ) )!= null ) { java.lang.system.out.println ( string_1 ) ; return var_2. method_3 ( var_3 class, var_1 ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 , boolean var_3 ) { if ( ! ( var_2 || var_3 ) ) { var_1 . method_2 ( var_4 ) ; } type_2 var_5 = new type_2 ( var_6 , var_7 , var_8 , var_9 , var_1 , var_2 , var_3 ) ; var_5 . method_3 ( ) ; method_4 ( var_5 ) ; }
[0]: public void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2. method_2 ( ). method_3 ( ) ) ) ; java.lang.system.out.println ( string_1 ) ; type_2 var_3 = new type_2 ( this. var_4, this. var_5, this. var_6, this. var_1 ) ; type_3 var_7 = new type_3 ( var_3 ) ; var_7. start ( ) ; }

************

************
tgt: static boolean method_1 ( type_1 var_1 , int var_2 ) { try { java.util.list < type_2 > out = type_3 . method_2 ( var_1 , var_2 , var_2 , var_2 ) ; if ( ! ( out . isempty ( ) ) ) { for ( type_2 var_3 : out ) { if ( var_3 instanceof type_4 ) { type_4 var_4 = ( ( type_4 ) ( var_3 ) ) ; if ( var_4 instanceof type_5 ) { return true ; } } } } } catch ( java.lang.exception var_3 ) { } return false ; }
[0]: public boolean method_1 ( ) { java.lang.system.out.println ( ( ( string_1 + ( var_1 ) ) + string_2 ) ) ; java.io.inputstream var_2 = null ; var_2 = getclass ( ). method_2 ( ). method_3 ( var_1 ) ; try { this. var_3. method_4 ( var_2 ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( ( ( string_3 + ( var_1 ) ) + string_2 ) ) ; var_4. method_5 ( ) ; return false ; } return true ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 obj = new type_1 ( ) ; obj . put ( string_1 , var_1 ) ; obj . put ( string_2 , var_2 ) ; obj . put ( string_3 , var_3 ) ; obj . put ( string_4 , var_4 ) ; obj . put ( string_5 , var_5 ) ; obj . put ( string_6 , var_6 . tostring ( ) ) ; obj . put ( "type" , string_7 ) ; return obj ; }
[0]: private void method_1 ( ) { var_1 = int_1 * int_2 ; var_2 = true ; var_3. add ( var_4 class ) ; var_3. add ( var_5 class ) ; var_3. add ( var_6 class ) ; var_7 = var_8 ; type_1 var_9 = new type_1 ( method_2 ( ) ) ; var_9. method_3 ( var_10 ) ; var_9. method_4 ( ( int_3 * int_2 ) ) ; type_2. init ( method_2 ( ), var_11, var_12 ) ; type_3. method_5 ( method_2 ( ), var_12 ) ; }

************

************
tgt: public boolean method_1 ( android.view.view var_1 ) { if ( ! ( var_1 . method_2 ( ) ) ) return false ; if ( ( var_2 ) != ( var_3 ) ) return false ; if ( ( ! ( var_4 . method_3 ( ) ) ) || ( var_4 . method_4 ( ) . method_5 ( ) ) ) return false ; return method_7 ( var_1 ) ; }
[0]: protected type_1 method_1 ( type_1 var_1 ) { type_2. add ( java.lang.thread. method_2 ( ) ) ; if (! ( var_2. get ( ) ) ) { synchronized ( var_2 ) { if (! ( var_2. get ( ) ) ) { new type_3 ( ). start ( ) ; var_2. set ( true ) ; } } } type_4. method_3 ( ). method_4 ( new type_5 ( java.lang.thread. method_2 ( ) ) ) ; return var_1 ; } return null ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , type_1 var_2 ) { if ( ( this . var_4 ) != null ) { java.util.list < type_1 > var_3 = this . var_4 . get ( var_1 ) ; if ( var_3 == null ) { var_3 = new java.util.arraylist < > ( ) ; this . var_4 . put ( var_1 , var_3 ) ; } var_3 . add ( var_2 ) ; } }
[0]: private java.lang.string method_1 ( type_1 position ) { if ( ( position. method_2 ( ). method_3 ( var_1 ) ) && ( ( java.lang.boolean ) ( position. method_2 ( ). get ( var_1 ) ) ) ) { return string_1 ; } else if ( ( position. method_4 ( ) ) < 1.0 ) { return string_2 ; } else { return string_3 ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { method_2 ( string_1 , method_3 ( string_2 ) , method_4 ( method_5 ( string_4 , string_8 ) , string_5 ) ) ; method_2 ( string_6 , method_3 ( string_7 ) , method_4 ( method_5 ( string_4 , string_8 ) , string_9 ) ) ; }
[0]: public int method_1 ( int [ ] var_1 ) { int var_2 = ( ( ( var_1. length ) + 1 ) * ( ( var_1. length ) + int_1 ) ) / int_1 ; int var_3 = 0 ; for ( int i : var_1 ) { var_3 += i ; } return var_2 - var_3 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( ) . method_3 ( false ) ; type_4 . method_7 ( ) . method_8 ( ) ; type_1 var_1 = new type_2 ( type_3 . method_4 ( this ) , string_1 , var_2 ) . method_5 ( ) ; method_6 ( var_1 ) ; }
[0]: public java.lang.object execute ( type_1 event ) throws type_2 { if ( type_3. method_1 ( ) ) { this. var_1 = new java.util.arraylist < type_4 > ( ) ; this. method_2 ( ) ; } else { type_5 var_2 = new type_5 ( type_6. method_3 ( ), string_1, null, string_2, var_3, new java.lang.string [ ] { string_3 }, 0 ) ; var_2. open ( ) ; } return null ; }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { if ( ! ( var_1 ) ) method_2 ( ) ; java.lang.string var_2 = type_3 . method_1 ( var_3 ) ; int i = java.lang.integer.parseint ( var_2 . substring ( 0 , var_2 . method_4 ( string_2 ) ) ) ; var_2 = var_2 . substring ( ( ( var_2 . method_4 ( string_2 ) ) + 1 ) ) ; type_1 var_4 = new type_1 ( file , i ) ; return var_4 ; }
[0]: private boolean method_1 ( type_1 var_1, boolean add ) { return ( var_1!= null ) && ( method_2 ( add, var_1. method_3 ( ), var_1. method_4 ( ), null, null, var_1. method_5 ( ), null, null, null, var_1, null, null ) ) ; }

************

************
tgt: protected static boolean method_1 ( ) { synchronized ( var_1 ) { if ( var_2 ) return true ; try { var_1 . method_2 ( var_3 ) ; } catch ( type_1 var_4 ) { var_5 . info ( var_4 . method_3 ( ) ) ; } } return var_2 ; }
[0]: public void method_1 ( ) throws java.lang.throwable { type_1 var_1 = type_2. method_2 ( ) ; try { type_3 < type_4, type_5 > var_2 = var_1. method_3 ( var_3 class, 1, string_1 ) ; var_2. method_4 ( var_4 ) ; var_2. method_5 ( ). method_6 ( ) ; var_2. method_7 ( ) ; } finally { var_1. method_6 ( ) ; } }

************

************
tgt: private void method_1 ( java.lang.string type , int number ) { for ( int i = 0 ; i < number ; i ++ ) { method_2 ( ) ; ( ( java.util.list < type_1 > ) ( var_1 ) ) . add ( type_2 . method_3 ( type , method_4 ( ) ) ) ; } method_2 ( ) ; }
[0]: public type_1 add ( type_1 var_1 ) { try { var_2 = type_2. method_1 ( method_2 ( ). method_3 ( ) ) ; var_2. method_4 ( var_1 ) ; var_2. method_5 ( ) ; var_2. method_6 ( ) ; return var_1 ; } catch ( java.lang.exception var_3 ) { return null ; } }

************

************
tgt: private static boolean method_1 ( type_1 [ ] var_1 ) { for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( var_1 [ i ] . name . equals ( var_2 ) ) { return true ; } } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { try { if ( ( ( ( type_2 ) ( var_1. method_2 ( ) ) ). method_3 ( ) ) == null ) { var_2 = true ; if ( var_1. method_4 ( 0 ). tostring ( ). equals ( string_1 ) ) var_3. method_5 ( ( ( var_1. method_4 ( 0 ). tostring ( ) ) + string_2 ) ) ; } } catch ( java.io.ioexception var_4 ) { var_4. method_6 ( ) ; } }

************

************
tgt: public double method_1 ( final double time ) { final int var_1 = var_2 . method_2 ( time ) ; final int index = ( var_1 < 0 ) ? ( - var_1 ) - 1 : var_1 ; final double var_3 = ( var_4 . get ( index ) ) - ( var_2 . get ( index ) ) ; assert var_3 >= 0 ; return var_3 ; }
[0]: private static type_1 method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = type_4. method_2 ( var_1. method_3 ( ), var_2 ) ; if ( var_3!= null ) { for ( type_1 var_4 : var_3. method_4 ( ) ) { if ( var_4. method_5 ( ). getid ( ). equals ( var_1. method_5 ( ). getid ( ) ) ) { return var_4 ; } } } return null ; } return null ; }

************

************
tgt: public void method_1 ( ) { try { var_3 = true ; var_1 = new type_1 ( var_2 ) . method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { type_2 . method_5 ( string_1 , var_4 . tostring ( ) ) ; } }
[0]: public int method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return 0 ; } int var_3 = var_1. method_2 ( ) ; if ( var_3 >= 0 ) { return var_2. get ( var_1. method_2 ( ) ) ; } else { return 0 ; } }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.integer > var_1 = new type_1 ( int_1 ) ; var_1 . add ( new java.lang.integer ( int_2 ) ) ; var_1 . add ( new java.lang.integer ( int_3 ) ) ; var_1 . add ( new java.lang.integer ( int_4 ) ) ; var_1 . add ( new java.lang.integer ( int_5 ) ) ; type_2 . method_2 ( var_1 . contains ( new java.lang.integer ( int_6 ) ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string url ) { if ( type_2. isempty ( url ) ) { return null ; } type_1 var_1 = type_1. method_2 ( url ) ; if ( ( ( var_1. method_3 ( ) ) == null ) || ( ( var_1. method_4 ( ) ) == null ) ) { return null ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , java.lang.string var_2 ) { type_2 var_3 = var_4 . method_2 ( var_2 ) ; if ( ( ( var_1 . method_3 ( ) ) != null ) && ( ! ( type_3 . equals ( var_1 . method_3 ( ) . getid ( ) , var_3 . getid ( ) ) ) ) ) { throw new type_4 ( string_1 ) ; } var_1 . method_4 ( var_3 ) ; return var_5 . method_5 ( var_1 ) ; }
[0]: public void method_1 ( ) throws type_1 { while (! ( var_1. method_2 ( ) ) ) { final type_2 var_2 = var_1. method_3 ( ) ; final type_3 var_3 = var_2. getcontext ( ). method_4 ( var_2. method_5 ( ), var_2. method_6 ( ) ) ; if ( var_3 == null ) { throw new type_1 ( var_2, var_4, ( string_1 + ( var_2. method_5 ( ). method_7 ( ) ) ) ) ; } var_2. method_8 ( var_3 ) ; } } }

************

************
tgt: protected void method_1 ( java.lang.object element ) { type_1 var_1 = type_2 . method_2 ( element ) ; if ( ( var_1 != null ) && ( ! ( var_2 . contains ( var_1 ) ) ) ) { var_1 . method_3 ( var_3 ) ; var_2 . add ( var_1 ) ; } }
[0]: public type_1 method_1 ( ) { java.util.logging.logger.getlogger ( string_1 ). method_2 ( var_1 ) ; type_2 var_2 = new type_2 ( ) ; var_2. method_3 ( false ) ; var_2. method_4 ( false ) ; var_2. method_5 ( string_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3. method_6 ( var_2 ) ; var_3. method_7 ( string_3 ) ; var_3. method_8 ( method_9 ( ) ) ; var_3. method_10 ( ) ; return var_3. method_11 ( ) ; }

************

************
tgt: private void method_1 ( type_1 n ) { if ( n . method_2 ( ) . method_3 ( ) ) { return ; } if ( ( var_1 . method_4 ( n ) ) != ( var_2 ) ) { var_1 . method_5 ( n ) ; var_3 . method_6 ( ) ; } else { var_3 . method_7 ( type_2 . method_8 ( n , var_5 , string_1 ) ) ; } }
[0]: public synchronized boolean open ( ) { if ( method_1 ( ) ) return true ; boolean open ; open = var_1. open ( var_2 ) ; if ( open ) { var_1. set ( int_1, int_2 ) ; type_1. method_2 ( this ) ; } return open ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( type_2 . method_2 ( ) ) ; assertthat ( var_1 . method_3 ( new type_4 ( ) ) , method_4 ( int_1 ) ) ; assertthat ( var_1 . method_5 ( string_1 ) , method_6 ( string_1 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { try { var_2 = true ; if ( var_3 ) { var_4. method_2 ( string_1 ) ; } var_4. method_2 ( ( ( ( ( var_1. method_3 ( ). gettext ( ) ) + string_2 ) + ( var_1. method_4 ( 0 ). gettext ( ) ) ) + string_3 ) ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_2 . put ( 1 , new type_1 ( string_2 ) ) ; var_2 . put ( int_1 , new type_1 ( string_3 ) ) ; var_2 . put ( int_2 , var_1 ) ; asserttrue ( var_2 . method_2 ( var_1 ) ) ; }
[0]: private static boolean method_1 ( java.lang.string path, java.lang.string [ ] var_1 ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( path. tolowercase ( ). method_2 ( var_1 [ i ] ) ) { return true ; } } return false ; }

************

************
tgt: public static type_1 method_1 ( ) { type_2 < type_3 > var_1 = type_2 . method_2 ( var_2 class ) ; java.lang.string var_3 = type_4 . method_4 ( ) ; type_5 . method_5 ( ) ; return method_6 ( var_4 . method_7 ( var_1 , var_3 ) ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { var_2. method_2 ( string_1 ) ; type_3. method_3 ( var_1. method_4 ( ), string_2 ) ; type_3. method_3 ( var_1. method_5 ( ), string_3 ) ; if ( ( var_1. getid ( ) )!= null ) { return var_3. method_6 ( var_1 ) ; } return var_3. method_7 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : method_3 ( ) ; return true ; case var_2 : method_4 ( ) ; method_3 ( ) ; return true ; default : return super . method_1 ( item ) ; } }
[0]: public type_1 method_1 ( int var_1, type_1 var_2, boolean var_3 ) { int index = method_2 ( var_1 ) ; type_2 var_4 = method_3 ( index ) ; var_1 = method_4 ( index ) ; return var_4. method_1 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 ) { final type_1 var_2 = var_1 . method_2 ( ) ; if ( var_2 . equals ( var_3 ) ) { return var_3 ; } if ( var_1 . method_3 ( ) . startswith ( string_1 ) ) { return var_3 ; } return null ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2. method_2 ( this, ( string_1 + ( var_1. tostring ( ) ) ), var_2 ). show ( ) ; type_3. i ( var_3, ( string_2 + ( var_1. tostring ( ) ) ) ) ; type_4. method_3 ( var_1. method_4 ( ), var_1. getname ( ), var_1. method_5 ( ), var_1. method_6 ( ), this ) ; method_7 ( ) ; }

************

************
tgt: public type_1 start ( ) { if ( this . method_1 ( ) ) { return this ; } if ( ( ( var_1 ) != null ) && ( type_2 . equals ( var_1 . method_3 ( ) ) ) ) { var_2 . method_4 ( var_1 , string_1 , string_2 , var_3 ) ; var_4 . method_5 ( var_5 , var_1 , null ) ; } return this ; }
[0]: public type_1 method_1 ( java.util.list < type_2 > var_1, java.util.list < type_3 > time, type_4 var_2 ) throws type_5, type_6 { var_3 = ( ( type_7 ) ( new type_7 ( var_4 ). method_2 ( ) ) ) ; return var_3. method_3 ( var_4. method_4 ( ), var_4. method_5 ( ). method_6 ( ), time, null, var_2 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = type_3 . method_2 ( ) ; if ( ( var_2 . method_3 ( var_3 class , var_1 ) ) == null ) { java.lang.system.out.println ( string_1 ) ; return null ; } return var_2 . method_3 ( var_3 class , var_1 ) ; }
[0]: public boolean method_1 ( ) { boolean var_1 ; this. var_2. method_2 ( ). method_3 ( ) ; if ( ( this. var_3 ) == 0 ) { var_1 = false ; } else { long var_4 = type_1. method_4 ( ) ; long var_5 = var_4 - ( this. var_6 ) ; var_1 = var_5 >= ( ( this. var_3 ) - ( var_7 ) ) ; } this. var_2. method_2 ( ). method_5 ( ) ; return var_1 ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { var_1 = ( ( type_1 ) ( var_2 . method_2 ( ) . method_3 ( ) ) ) ; java.lang.system.out.println ( string_1 ) ; type_2 var_3 = new type_2 ( this . var_4 , this . var_5 , this . var_6 , this . var_1 ) ; type_3 var_7 = new type_3 ( var_3 ) ; var_7 . start ( ) ; } }
[0]: private java.lang.exception method_1 ( java.lang.string var_1, java.lang.string var_2 ) { try { type_1 var_3 = new type_1 ( var_4. method_2 ( ), var_1, true ) ; var_3. method_3 ( var_2 ) ; var_3. method_4 ( true ) ; var_3. method_5 ( ) ; } catch ( java.lang.exception var_5 ) { return var_5 ; } return null ; }

************

************
tgt: public boolean method_1 ( ) { java.lang.system.out.println ( ( ( string_1 + ( var_1 ) ) + string_2 ) ) ; var_3 = new java.util.properties ( ) ; java.io.inputstream var_2 = null ; var_2 = getclass ( ) . method_2 ( ) . method_3 ( var_1 ) ; try { this . var_3 . method_4 ( var_2 ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( ( ( string_3 + ( var_1 ) ) + string_2 ) ) ; var_4 . method_5 ( ) ; return false ; } return true ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_2 ( ) ; try { var_1. method_1 ( type_3. method_2 ( new java.io.file ( string_1 ) ) ) ; var_1. method_3 ( new java.io.file ( string_2 ) ) ; } catch ( type_4 var_2 ) { var_2. method_4 ( ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 = int_1 * int_2 ; var_2 = false ; var_3 . add ( var_4 class ) ; var_3 . add ( var_5 class ) ; var_3 . add ( var_6 class ) ; var_7 = var_8 ; type_1 var_9 = new type_1 ( method_2 ( ) ) ; var_9 . method_3 ( var_10 ) ; var_9 . method_4 ( ( int_3 * int_2 ) ) ; type_2 . init ( method_2 ( ) , var_11 , var_12 ) ; type_3 . method_5 ( method_2 ( ) , var_12 ) ; }
[0]: private void method_1 ( ) { type_1 msg = new type_1 ( ) ; msg. method_2 ( ) ; msg. method_3 ( ) ; msg. method_4 ( ) ; msg. method_5 ( ) ; msg. method_6 ( ) ; type_2 i = new type_2 ( string_1 ) ; i. method_7 ( string_2, msg. method_8 ( ) ) ; type_3. method_9 ( this ). method_10 ( i ) ; }

************

************
tgt: protected type_1 method_1 ( type_1 var_1 ) { type_2 . add ( java.lang.thread . method_2 ( ) ) ; if ( ! ( var_2 . get ( ) ) ) { synchronized ( this ) { if ( ! ( var_2 . get ( ) ) ) { new type_3 ( ) . start ( ) ; var_2 . set ( true ) ; } } } type_4 . method_3 ( ) . method_4 ( new type_5 ( java.lang.thread . method_2 ( ) ) ) ; return var_1 ; }
[0]: public boolean method_1 ( type_1 item ) { boolean var_1 = true ; switch ( item. method_2 ( ) ) { case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( var_4 ) ; break ; case var_5 : method_5 ( var_4 ) ; break ; default : var_1 = super. method_1 ( item ) ; } return var_1 ; }

************

************
tgt: private java.lang.string method_1 ( type_1 position ) { if ( position . method_2 ( ) . method_3 ( var_1 ) ) { return string_1 ; } else if ( ( position . method_4 ( ) ) < 1.0 ) { return string_2 ; } else { return string_3 ; } }
[0]: public void method_1 ( final char [ ] var_1, final int start, final int length ) throws type_1 { final java.lang.string text = new java.lang.string ( var_1 ). substring ( start, ( start + length ) ) ; type_2. method_2 ( string_1, text ) ; final java.lang.string var_2 = text. trim ( ) ; if (! ( var_2. isempty ( ) ) ) { type_2. info ( string_2, var_2 ) ; this. var_3. method_3 ( var_2 ) ; } }

************

************
tgt: public int method_1 ( int [ ] var_1 ) { long var_2 = ( ( ( var_1 . length ) + 1 ) * ( ( var_1 . length ) + int_1 ) ) / int_1 ; long var_3 = 0 ; for ( int i : var_1 ) { var_3 = var_3 + ( new java.lang.long ( i ) ) ; } return new java.lang.long ( ( var_2 - var_3 ) ) . intvalue ( ) ; }
[0]: private java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; java.util.set < type_3 > var_3 = var_1. method_2 ( ) ; for ( type_3 var_4 : var_3 ) { try { type_1 var_5 = type_4. method_3 ( var_4 ) ; var_2. add ( var_5 ) ; } catch ( type_5 var_6 ) { var_7. method_4 ( var_6. method_5 ( ), var_6 ) ; } } return var_2 ; }

************

************
tgt: private static java.util.list < type_1 > method_1 ( int count ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { var_1 . add ( new type_1 ( ) . method_2 ( java.lang.string.format ( string_1 , i ) ) . method_3 ( java.lang.string.format ( string_2 , i ) ) . method_4 ( java.lang.string.format ( string_3 , i ) ) ) ; } return var_1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1. add ( ( ( type_1 ) ( var_2 ) ). method_2 ( ) ) ; var_3. method_3 ( var_4, var_1 ) ; }

************

************
tgt: public java.lang.object execute ( type_1 event ) throws type_2 { if ( type_3 . method_1 ( ) ) { this . var_1 = new java.util.arraylist < type_4 > ( ) ; method_2 ( ) ; } else { type_5 var_2 = new type_5 ( type_6 . method_3 ( ) , string_1 , null , string_2 , var_3 , new java.lang.string [ ] { string_3 } , 0 ) ; var_2 . open ( ) ; } return null ; }
[0]: public synchronized void method_1 ( type_1 var_1 ) { var_2 = var_1 ; if ( ( var_1. equals ( var_3 ) ) || ( var_1. equals ( var_4 ) ) ) method_2 ( true ) ; else if ( var_1. equals ( var_5 ) ) method_2 ( false ) ; }

************

************
tgt: private java.lang.long method_1 ( type_1 var_1 , boolean add ) { if ( var_1 != null ) { return method_2 ( add , var_1 . method_3 ( ) , var_1 . method_4 ( ) , null , null , var_1 . method_5 ( ) , null , null , null , var_1 , null ) ; } else { return null ; } }
[0]: private static type_1 method_1 ( type_1 var_1, type_1 var_2, type_2 format ) { java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_2 ; if ( var_1. method_2 ( var_3 ) ) { var_2. put ( string_3, type_3. method_3 ( var_1. method_4 ( var_3 ) ) ) ; } if ( var_1. method_2 ( var_4 ) ) { var_2. put ( string_4, type_3. method_3 ( var_1. method_4 ( var_4 ) ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.throwable { type_1 var_1 = type_2 . method_2 ( ) ; try { type_3 < type_4 , type_5 > var_2 = method_3 ( var_1 ) ; var_2 . method_4 ( var_4 ) ; var_2 . method_5 ( ) . method_6 ( ) ; var_2 . method_7 ( ) ; } finally { var_1 . method_6 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( this ) ; android.content.intent intent ; if ( method_3 ( ) ) intent = new android.content.intent ( this, var_2 class ) ; else intent = new android.content.intent ( this, var_3 class ) ; method_4 ( intent ) ; method_5 ( ) ; }

************

************
tgt: public type_1 add ( type_1 var_1 ) { try { var_2 = type_2 . method_1 ( method_2 ( ) . method_3 ( ) ) ; var_1 = var_2 . method_4 ( var_1 ) ; var_2 . method_5 ( ) ; var_2 . method_6 ( ) ; return var_1 ; } catch ( java.lang.exception var_3 ) { return null ; } }
[0]: private java.lang.string getvalue ( int i, int j ) { if ( i == j ) { return string_1 ; } else { return getvalue ( i, j, var_1. get ( new type_1 ( var_2. get ( i ), var_2. get ( j ) ) ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { var_2 = true ; if ( ( ( ( type_2 ) ( var_1 . method_2 ( ) ) ) . method_3 ( ) ) == null ) { if ( var_1 . method_4 ( 0 ) . tostring ( ) . equals ( string_1 ) ) var_3 . method_5 ( ( ( var_1 . method_4 ( 0 ) . tostring ( ) ) + string_2 ) ) ; } } catch ( java.io.ioexception var_4 ) { var_4 . method_6 ( ) ; } }
[0]: protected type_1 method_1 ( type_2 node, java.util.map < java.lang.string, java.lang.double > var_1 ) { double var_2 = 0 ; double var_3 = method_2 ( node ) ; if ( var_1. method_3 ( node. method_4 ( ) ) ) { var_2 = var_1. get ( node. method_4 ( ) ) ; } type_1 var_4 = new type_1 ( node. method_4 ( ), var_2, var_3 ) ; var_5. put ( node, var_4 ) ; return var_4 ; }

************

************
tgt: protected static type_1 method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = type_4 . method_2 ( var_1 . method_3 ( ) , var_2 ) ; if ( var_3 != null ) { for ( type_1 var_4 : var_3 . method_4 ( ) ) { if ( var_4 . method_5 ( ) . getid ( ) . equals ( var_1 . method_5 ( ) . getid ( ) ) ) { return var_4 ; } } } return null ; }
[0]: public void method_1 ( ) { while (! ( var_1 ) ) { while ( ( ( var_2. size ( ) ) == 0 ) || ( var_3 ) ) { try { java.lang.thread. method_2 ( int_1 ) ; } catch ( type_1 var_4 ) { var_4. method_3 ( ) ; } } var_5 = new type_2 ( var_2. method_4 ( ) ) ; var_5. method_5 ( ) ; var_3 = true ; var_5. method_6 ( ( ) - > { var_3 = false ; } ) ; } } }

************

************
tgt: public int method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return 0 ; } int var_3 = var_1 . method_2 ( ) ; if ( ( var_3 >= 0 ) && ( var_3 < ( var_2 . size ( ) ) ) ) { return var_2 . get ( var_3 ) ; } else { return 0 ; } }
[0]: public static java.net.url method_1 ( ) { type_1 var_1 = type_1. method_2 ( var_2 ). method_3 ( ). method_4 ( var_3, var_4 ). method_4 ( var_5, var_6 ). method_4 ( var_7, var_8 ). build ( ) ; java.net.url url = null ; try { url = new java.net.url ( var_1. tostring ( ) ) ; return url ; } catch ( type_2 var_9 ) { var_9. method_5 ( ) ; } return url ; }

************

************
tgt: static type_1 method_1 ( java.lang.string url ) { if ( type_2 . isempty ( url ) ) { return null ; } type_1 var_1 = type_1 . method_2 ( url ) ; if ( ( type_2 . isempty ( var_1 . method_4 ( ) ) ) || ( type_2 . isempty ( var_1 . method_3 ( ) ) ) ) { return null ; } return var_1 ; }
[0]: private void method_1 ( ) { type_1 args = method_2 ( ) ; java.lang.string key = ( ( java.lang.string ) ( args. method_3 ( ). method_4 ( ) [ 0 ] ) ) ; switch ( key ) { case string_1 : date = ( ( java.lang.string ) ( args. get ( key ) ) ) ; break ; case string_2 : var_2 = true ; break ; case string_3 : var_3 = true ; default : var_3 = true ; } } }

************

************
tgt: public void method_1 ( ) throws type_1 { while ( ! ( var_1 . isempty ( ) ) ) { final type_2 var_2 = var_1 . method_3 ( ) ; final type_3 var_3 = var_2 . getcontext ( ) . method_4 ( var_2 . method_5 ( ) , var_2 . method_6 ( ) ) ; if ( var_3 == null ) { throw new type_1 ( var_2 , var_4 , ( string_1 + ( var_2 . method_5 ( ) . method_7 ( ) ) ) ) ; } else { var_2 . method_8 ( var_3 ) ; } } }
[0]: public type_1 < type_2 > method_1 ( int id, type_3 args ) { java.lang.string var_1 = method_2 ( ) ; if ( var_1. equals ( getactivity ( ). getstring ( var_2 ) ) ) { var_1 = ( var_3 ) + string_1 ; } return new type_4 ( getactivity ( ), var_4, null, null, null, var_1 ) ; }

************

************
tgt: public type_1 method_1 ( ) { java.util.logging.logger.getlogger ( string_1 ) . method_2 ( var_1 ) ; type_2 var_2 = new type_2 ( ) ; var_2 . method_3 ( true ) ; var_2 . method_4 ( false ) ; var_2 . method_5 ( string_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3 . method_6 ( var_2 ) ; var_3 . method_7 ( string_3 ) ; var_3 . method_8 ( method_9 ( ) ) ; var_3 . method_10 ( ) ; return var_3 . method_11 ( ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( var_3 class ) ; type_4 var_4 = var_2. method_3 ( var_2. method_4 ( ) ) ; type_5 var_5 = var_1. method_5 ( true ) ; var_5. method_6 ( var_6, var_4. method_7 ( ) ) ; return var_4. method_8 ( ) ; }

************

************
tgt: public synchronized boolean open ( ) { if ( method_1 ( ) ) return true ; final boolean open = var_1 . open ( var_2 ) ; if ( open ) { var_1 . set ( int_1 , int_2 ) ; type_1 . method_2 ( this ) ; } return open ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { type_1 item = new type_1 ( var_2. get ( i ) ) ; item. method_3 ( string_1 ) ; item. method_4 ( string_2 ) ; var_1. add ( item ) ; } if ( ( var_2. size ( ) ) > ( var_3 ) ) { var_4. method_5 ( var_5, var_6 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { var_2 = true ; if ( var_3 ) { var_4 . method_2 ( string_1 ) ; } var_4 . method_2 ( ( ( var_1 . method_3 ( ) . gettext ( ) ) + string_2 ) ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_5 ( ) ; } }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2, type_2 var_3, type_3 var_4, type_3 status, type_4 var_5 ) { type_5 var_6 = var_1. method_2 ( var_7 ) ; type_6 var_8 = type_7. method_3 ( var_1, var_3, var_2, status, var_4, var_5 ) ; var_6. method_4 ( var_8 ) ; var_1. method_5 ( var_6 ) ; }

************

************
tgt: private static boolean method_1 ( java.lang.string path , java.lang.string [ ] var_1 ) { if ( path == null ) { return false ; } for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( path . tolowercase ( ) . method_2 ( var_1 [ i ] ) ) { return true ; } } return false ; }
[0]: public static java.lang.string method_1 ( java.lang.string value ) { value = value. trim ( ) ; if ( value. startswith ( string_1 ) ) { value = value. substring ( 1 ) ; } if ( value. method_2 ( string_1 ) ) { value = value. substring ( 0, ( ( value. length ( ) ) - 1 ) ) ; } return value ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { type_3 . method_3 ( var_1 . method_4 ( ) , string_2 ) ; type_3 . method_3 ( var_1 . method_5 ( ) , string_3 ) ; if ( ( var_1 . getid ( ) ) != null ) { return var_3 . method_6 ( var_1 ) ; } return var_3 . method_7 ( var_1 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; java.util.list < type_2 > results = var_2. query ( var_1 ) ; assertequals ( results. size ( ), int_1 ) ; for ( type_2 result : results ) { java.lang.string value = result. field ( ) ; assertequals ( value. length ( ), int_2 ) ; } }

************

************
tgt: public type_1 method_1 ( int var_1 , type_1 var_2 , boolean var_3 ) { int index = method_2 ( var_1 ) ; type_2 var_4 = method_3 ( index ) ; var_1 = method_4 ( var_1 , index ) ; return var_4 . method_1 ( var_1 , var_2 , var_3 ) ; }
[0]: private void method_1 ( type_1 var_1, boolean var_2 ) { if (! ( this. var_3. contains ( var_1 ) ) ) { var_4 = this ; var_5 = this. var_3. size ( ) ; this. var_3. add ( var_1 ) ; var_1. method_2 ( ) ; if ( var_2 ) { new type_2 ( var_1 ). method_2 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_3 . i ( var_3 , ( string_2 + ( var_1 . tostring ( ) ) ) ) ; type_4 . method_3 ( var_1 . method_4 ( ) , var_1 . getname ( ) , var_1 . method_5 ( ) , var_1 . method_6 ( ) , this ) ; method_7 ( ) ; }
[0]: public final type_1 < type_2 > method_1 ( java.lang.string var_1 ) { java.util.list < type_2 > var_2 ; try { var_2 = var_3. method_2 ( new type_2 ( string_1, string_1, string_1, var_1 ) ) ; if ( var_2. isempty ( ) ) { throw new type_3 ( 0 ) ; } } catch ( type_4 var_4 ) { return new type_1 ( var_5 ) ; } return new type_1 ( var_2. get ( 0 ), var_6 ) ; }

************

************
tgt: public type_1 method_1 ( java.util.list < type_2 > var_1 , java.util.list < type_3 > time , type_4 var_2 ) throws type_5 , type_6 { var_3 = ( ( type_7 ) ( new type_7 ( var_4 ) . method_2 ( ) ) ) ; return var_3 . method_3 ( var_4 . method_4 ( ) , var_4 . method_5 ( ) . method_6 ( ) , time , var_1 , var_2 ) ; }
[0]: private java.lang.stringbuilder method_1 ( java.lang.string var_1, java.lang.object message ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; type_1 format = new type_1 ( var_3 ) ; java.lang.string time = format. format ( new java.util.date ( ) ) ; var_2. append ( time ) ; var_2. append ( string_1 ) ; var_2. append ( var_1 ) ; var_2. append ( string_1 ) ; var_2. append ( method_2 ( ) ) ; var_2. append ( string_2 ) ; var_2. append ( message. tostring ( ) ) ; return var_2 ; }

************

************
tgt: public boolean method_1 ( ) { boolean var_1 ; this . var_2 . method_2 ( ) . method_3 ( ) ; if ( ( this . var_3 ) < 0 ) { var_1 = false ; } else { long var_4 = type_1 . method_4 ( ) ; long var_5 = var_4 - ( this . var_6 ) ; var_1 = var_5 >= ( ( this . var_3 ) - ( var_7 ) ) ; } this . var_2 . method_2 ( ) . method_5 ( ) ; return var_1 ; }
[0]: public static type_1 open ( ) { try { java.lang.class. method_1 ( string_1 ) ; var_1. c = type_2. method_2 ( string_2 ) ; var_2. method_3 ( false ) ; java.lang.system.out.println ( string_3 ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( ( ( ( var_3. getclass ( ). getname ( ) ) + string_4 ) + ( var_3. method_4 ( ) ) ) ) ; java.lang.system.exit ( 0 ) ; } return var_1. c ; }

************

************
tgt: private java.lang.exception method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { boolean result ; type_1 var_3 = null ; try { var_3 = new type_1 ( var_4 . method_2 ( ) , var_1 , true ) ; var_3 . method_3 ( var_2 ) ; var_3 . method_4 ( true ) ; } catch ( java.lang.exception var_5 ) { return var_5 ; } finally { if ( var_3 != null ) { var_3 . method_5 ( ) ; } } return null ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( ) ; java.lang.string var_3 = var_1. method_3 ( ) ; type_3. method_4 ( var_3, string_1 ) ; if ( ( var_3. length ( ) ) < int_1 ) { throw new type_4 ( string_2 ) ; } method_5 ( ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_2 ( ) ; try { var_1 . method_1 ( type_3 . method_2 ( new java.io.file ( string_1 ) ) ) ; var_1 . method_3 ( new java.io.file ( string_2 ) ) ; } catch ( type_4 var_2 ) { var_2 . method_4 ( ) ; } catch ( java.io.ioexception var_2 ) { var_2 . method_4 ( ) ; } }
[0]: public type_1 method_1 ( ) { java.util.logging.logger.getlogger ( string_1 ). method_2 ( var_1 ) ; type_2 var_2 = new type_2 ( ) ; var_2. method_3 ( true ) ; var_2. method_4 ( false ) ; var_2. method_5 ( string_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3. method_6 ( var_2 ) ; var_3. method_7 ( string_3 ) ; var_3. method_8 ( method_9 ( ) ) ; var_3. method_10 ( ) ; return var_3. method_11 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 msg = new type_1 ( ) ; msg . method_2 ( ) ; msg . method_3 ( ) ; msg . method_4 ( ) ; msg . method_6 ( ) ; type_2 i = new type_2 ( string_1 ) ; i . method_7 ( string_2 , msg . method_8 ( ) ) ; type_3 . method_9 ( this ) . method_10 ( i ) ; }
[0]: public boolean method_1 ( java.lang.string [ ] var_1 ) { var_2 = true ; long var_3 = int_1 ; if ( ( ( type_1. method_2 ( ) ) - ( var_4 ) ) < var_3 ) { if ( method_3 ( var_1 ) ) return false ; method_4 ( string_1, ( ( java.lang.object [ ] ) ( var_1 ) ) ) ; if ( ( var_5 )!= null ) { var_6 = true ; var_5. method_5 ( ) ; } return true ; } var_4 = type_1. method_2 ( ) ; return false ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { boolean var_1 = true ; switch ( item . method_2 ( ) ) { case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( var_4 ) ; break ; case var_5 : method_5 ( var_4 ) ; break ; default : var_1 = super . method_1 ( item ) ; break ; } return var_1 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1. method_2 ( ) ; var_1. method_1 ( ) ; var_2. method_1 ( ) ; var_3. method_1 ( ) ; var_4. method_1 ( ) ; var_5. method_1 ( ) ; var_6. method_1 ( ) ; }

************

************
tgt: public void method_1 ( final char [ ] var_1 , final int start , final int length ) throws type_1 { final java.lang.string text = new java.lang.string ( var_1 ) . substring ( start , ( start + length ) ) ; type_2 . method_2 ( string_1 , text ) ; final java.lang.string var_2 = text . trim ( ) ; type_2 . info ( string_2 , var_2 ) ; this . var_3 . method_3 ( var_2 ) ; }
[0]: public type_1 get ( java.lang.string key ) { type_1 var_1 = method_1 ( key ) ; if ( var_1 == null ) { var_1 = method_2 ( key ) ; if ( var_1!= null ) { if (! ( type_2. method_3 ( var_1 ) ) ) { var_2. put ( var_1. method_4 ( ), var_1 ) ; } else { return null ; } } } return var_1 ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; java.util.set < type_3 > var_3 = var_1 . method_2 ( ) ; for ( type_3 var_4 : var_3 ) { try { type_1 var_5 = type_4 . method_3 ( var_4 ) ; if ( var_5 != null ) { var_2 . add ( var_5 ) ; } } catch ( type_5 var_6 ) { var_7 . method_4 ( var_6 . method_5 ( ) ) ; } } return var_2 ; }
[0]: public void method_1 ( type_1 event ) { if ( ( ( start ) == 0 ) || (! ( var_1 ) ) ) return ; var_2. update ( var_3, var_4, 0 ) ; var_2. method_2 ( var_3, var_4 ) ; var_5. method_3 ( false ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1 . add ( ( ( type_1 ) ( var_2 ) ) . method_2 ( ) ) ; var_3 . method_3 ( var_4 , var_1 , null ) ; }
[0]: public void method_1 ( ) { try { method_2 ( var_1 ) ; method_3 ( ) ; } catch ( type_1 var_2 ) { var_2. method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_4. error ( ( string_1 + ( var_1 ) ), var_3 ) ; } }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 ) { var_2 = var_1 ; if ( var_1 != null ) { if ( ( var_1 . equals ( var_3 ) ) || ( var_1 . equals ( var_4 ) ) ) method_2 ( true ) ; else if ( var_1 . equals ( var_5 ) ) method_2 ( false ) ; } else { method_2 ( false ) ; } }
[0]: private void method_1 ( ) { if ( method_2 ( ) ) { int var_1 = method_3 ( ) ; int sum = 0 ; for ( type_1 var_2 : var_3. method_4 ( 1, var_3. size ( ) ) ) { sum += var_2. getvalue ( ) ; } var_3. get ( 0 ). setvalue ( java.lang.math.round ( ( sum / var_1 ) ) ) ; } else { var_3. get ( 0 ). setvalue ( java.lang.math.round ( ( sum / var_1 ) ) ) ; } } }

************

************
tgt: private static type_1 method_1 ( type_1 var_1 , type_1 var_2 , type_2 format ) { java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_2 ; if ( var_1 . method_2 ( var_3 ) ) { var_2 . put ( string_3 , format . format ( type_3 . method_3 ( var_1 . method_4 ( var_3 ) ) ) ) ; } if ( var_1 . method_2 ( var_4 ) ) { var_2 . put ( string_4 , format . format ( type_3 . method_3 ( var_1 . method_4 ( var_4 ) ) ) ) ; } return var_2 ; }
[0]: private type_1 method_1 ( type_1 f ) throws type_2 { f = new type_3 ( ). method_1 ( f ) ; f = new type_4 ( ). method_1 ( f ) ; f = new type_5 ( ). method_1 ( f ) ; f = new type_6 ( ). method_1 ( f ) ; f = new type_7 ( ). method_1 ( f ) ; f = new type_8 ( ). method_1 ( f ) ; f = new type_9 ( ). method_1 ( f ) ; return f ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; android.content.intent intent ; if ( method_3 ( ) ) intent = new android.content.intent ( this , var_2 class ) ; else intent = new android.content.intent ( this , var_3 class ) ; method_4 ( intent ) ; method_5 ( ) ; }
[0]: public float method_1 ( type_1 node, type_1 var_1 ) { type_2 start = new type_2 ( node. method_2 ( ), node. method_3 ( ) ) ; type_2 end = new type_2 ( var_1. method_2 ( ), node. method_3 ( ) ) ; return start. method_4 ( end ) ; }

************

************
tgt: private java.lang.string getvalue ( int i , int j ) { if ( i == j ) { return string_1 ; } else { return getvalue ( var_1 . get ( new type_1 ( var_2 . get ( i ) , var_2 . get ( j ) ) ) ) ; } }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { int var_2 = var_1. remove ( 0 ). method_2 ( ). getint ( ) ; if ( var_2!= ( var_3 ) ) { type_2. method_3 ( var_4, string_1 ) ; } java.util.list < type_1 > var_5 = var_1. remove ( 0 ). method_4 ( ) ; for ( type_1 var_6 : var_5 ) { path. add ( var_6. method_2 ( ). getint ( ) ) ; } }

************

************
tgt: protected type_1 method_1 ( type_2 node , java.util.map < java.lang.string , java.lang.double > var_1 ) { double var_2 = 0 ; double var_3 = method_2 ( node ) ; if ( var_1 . method_3 ( node . method_4 ( ) ) ) { var_2 = var_1 . get ( node . method_4 ( ) ) ; } type_1 var_4 = new type_1 ( node . method_4 ( ) , var_2 , var_3 ) ; return var_4 ; }
[0]: public static boolean method_1 ( ) { java.util.list < type_1 > var_1 = new type_2 ( ). method_2 ( ) ; if ( var_1!= null ) { var_2. method_3 ( var_1 ) ; } var_1 = new type_3 ( ). method_2 ( ) ; if ( var_1!= null ) { var_2. method_3 ( var_1 ) ; } return true ; }

************

************
tgt: public void method_1 ( ) { while ( ! ( var_1 ) ) { if ( ( ( var_2 . size ( ) ) == 0 ) || ( var_3 ) ) { try { java.lang.thread . method_2 ( int_1 ) ; } catch ( type_1 var_4 ) { var_4 . method_3 ( ) ; } } else { var_5 = new type_2 ( var_2 . method_4 ( ) ) ; var_5 . method_5 ( ) ; var_3 = true ; var_5 . method_6 ( ( ) - > { var_3 = false ; } ) ; } } }
[0]: public static double [ ] method_1 ( ) { var_1 [ 0 ] = var_2. method_2 ( int_1 ) ; var_1 [ 1 ] = var_2. method_2 ( 1 ) ; var_1 [ int_1 ] = var_2. method_2 ( int_2 ) ; var_1 = type_1. method_3 ( var_1 ) ; return var_1 ; }

************

************
tgt: public static java.net.url method_1 ( ) { type_1 var_1 = type_1 . method_2 ( var_2 ) . method_3 ( ) . method_4 ( var_3 , var_4 ) . method_4 ( var_5 , var_6 ) . method_4 ( var_7 , var_8 ) . build ( ) ; java.net.url url = null ; try { url = new java.net.url ( var_1 . tostring ( ) ) ; } catch ( type_2 var_9 ) { var_9 . method_5 ( ) ; } return url ; }
[0]: private void method_1 ( type_1 var_1 ) { var_1. method_2 ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_4 ) ) + string_4 ) + ( var_5 ) ) + string_5 ) + ( var_6 ) ) + string_6 ) + ( var_7 ) ) + string_7 ) + ( var_8 ) ) + string_8 ) ) ; }

************

************
tgt: private void method_1 ( ) { type_1 args = method_2 ( ) ; java.lang.string key = ( ( java.lang.string ) ( args . method_3 ( ) . method_4 ( ) [ 0 ] ) ) ; switch ( key ) { case string_1 : var_1 = true ; date = ( ( java.lang.string ) ( args . get ( key ) ) ) ; break ; case string_2 : var_2 = true ; break ; case string_3 : var_3 = true ; break ; default : var_3 = true ; } }
[0]: private < type_1 > type_1 get ( java.lang.class < type_1 > var_1, java.util.set < java.lang.class <? > > var_2 ) { if ( var_3. method_1 ( var_1 ) ) { return var_1. method_2 ( var_3. get ( var_1 ) ) ; } var_2 = new java.util.hashset < > ( var_2 ) ; type_2 < type_1 > context = new type_2 ( this, var_4, var_1 ) ; type_1 var_5 = method_3 ( context, var_2 ) ; method_4 ( var_1, var_5 ) ; return var_5 ; }

************

************
tgt: public type_1 < type_2 > method_1 ( int id , type_3 args ) { java.lang.string var_1 = method_2 ( ) ; if ( var_1 == null ) { var_1 = ( var_3 ) + string_1 ; } if ( var_1 . equals ( getactivity ( ) . getstring ( var_2 ) ) ) { var_1 = ( var_3 ) + string_1 ; } return new type_4 ( getactivity ( ) , var_4 , null , null , null , var_1 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.util.map < java.lang.string, type_3 > var_2 = method_2 ( ) ; for ( type_3 var_3 : var_2. values ( ) ) { type_2 key = var_3. method_3 ( ) ; if ( var_1. equals ( key ) ) { var_3. remove ( ) ; return var_3. method_4 ( ) ; } } return null ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( var_3 class ) ; type_4 var_4 = var_2 . method_3 ( var_2 . method_4 ( ) ) ; type_5 var_5 = var_1 . method_5 ( ) ; var_5 . method_6 ( var_6 , var_4 . method_7 ( ) ) ; return var_4 . method_8 ( ) ; }
[0]: public static int method_1 ( java.lang.string [ ] args ) throws type_1, java.lang.nullpointerexception { type_2 var_1 = new type_2 ( args ) ; type_3 var_2 = new type_4 ( var_1 ) ; type_5. method_2 ( var_2 ) ; var_2 = null ; var_1 = null ; return 0 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { type_1 item = new type_1 ( var_2 . get ( i ) ) ; item . method_3 ( string_1 ) ; item . method_4 ( string_2 ) ; var_1 . add ( item ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ( ) ) < int_1 ) { java.lang.system.out.println ( string_1 ) ; } type_1 var_1 = new type_1 ( args [ 0 ] ) ; var_2. method_1 ( type_2. method_2 ( type_3. method_3 ( type_3. method_3 ( args [ 1 ]. method_4 ( 0 ) ) ) ) ; }

************

************
tgt: public void method_1 ( java.util.hashmap < java.lang.string , java.lang.string > var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { var_3 . append ( var_2 . get ( i ) . method_2 ( var_1 ) ) ; } }
[0]: public void method_1 ( long var_1 ) { java.lang.string var_2 = java.lang.string.format ( string_1, ( var_1 % int_1 ) ) ; java.lang.string min = java.lang.string.format ( string_1, ( var_1 / int_1 ) ) ; var_3 = ( min + string_2 ) + var_2 ; var_4. settext ( var_3 ) ; var_5. method_2 ( ( ( int ) ( ( var_1 * int_2 ) / ( var_6 ) ) ) ) ; }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_2 var_2 , type_2 var_3 , type_3 var_4 , type_3 status , type_4 var_5 ) { type_5 var_6 = var_1 . method_2 ( var_7 ) ; type_6 var_8 = type_7 . method_3 ( var_1 , var_3 , var_2 , status , var_4 , var_5 ) ; var_6 . method_4 ( var_8 ) ; var_1 . method_5 ( var_6 ) ; }
[0]: private java.lang.string method_1 ( java.lang.string str ) { java.lang.string var_1 = string_1 ; int var_2 = str. length ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_1 += str. method_2 ( str. method_2 ( ( ( var_2 - 1 ) - i ) ) ) ; } return var_1 ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string value ) { if ( value == null ) { return null ; } value = value . trim ( ) ; if ( value . startswith ( string_1 ) ) { value = value . substring ( 1 ) ; } if ( value . method_2 ( string_1 ) ) { value = value . substring ( 0 , ( ( value . length ( ) ) - 1 ) ) ; } return value ; }
[0]: private static double operation ( char op, double var_1, double var_2 ) { switch ( op ) { case char_1 : return var_2 + var_1 ; case char_2 : return var_2 - var_1 ; case char_3 : return var_2 * var_1 ; case char_4 : if ( var_2 == 0 ) throw new type_1 ( string_1 ) ; return var_2 / var_1 ; case char_5 : return java.lang.math.pow ( var_2, var_1 ) ; } return 0 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; java.util.list < type_2 > results = var_2 . query ( var_1 ) ; org.testng.assert.assertequals ( results . size ( ) , int_1 ) ; for ( type_2 result : results ) { java.lang.string value = result . field ( "name" ) ; org.testng.assert.assertequals ( value . length ( ) , int_2 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) == true ) { var_3. method_2 ( ( ( string_1 + ( var_4 ) ) + string_2 ) ). method_3 ( string_3 ). setvalue ( false ) ; var_3. method_2 ( string_4 ). method_3 ( var_4 ). method_4 ( ) ; var_2 = false ; } else { type_1. method_5 ( method_6 ( ), string_5, var_5 ). show ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , boolean var_2 ) { if ( ! ( this . var_3 . contains ( var_1 ) ) ) { var_4 = this ; var_5 = this . var_3 . size ( ) ; this . var_3 . add ( var_1 ) ; if ( var_2 && ( ( this . id ) != null ) ) { var_1 . method_2 ( ) ; new type_2 ( var_1 ) . method_2 ( ) ; } } }
[0]: private void method_1 ( int position ) { if ( position == ( var_1 ) ) { android.content.intent intent = new android.content.intent ( this, var_2 class ) ; method_2 ( intent ) ; return ; } else { method_3 ( new type_1 ( ) ) ; var_3. method_4 ( position, true ) ; method_5 ( var_4 [ position ] ) ; var_5. method_6 ( var_3 ) ; } }

************

************
tgt: public final type_1 < type_2 > method_1 ( java.lang.string var_1 ) { java.util.list < type_2 > var_2 ; try { var_2 = var_3 . method_2 ( new type_2 ( null , null , null , var_1 ) ) ; if ( var_2 . isempty ( ) ) { throw new type_3 ( 0 ) ; } } catch ( type_4 var_4 ) { return new type_1 ( var_5 ) ; } return new type_1 ( var_2 . get ( 0 ) , var_6 ) ; }
[0]: public type_1 method_1 ( type_1... args ) { for ( type_1 source : args ) { for ( java.lang.string key : source. method_2 ( ) ) { put ( key, source. get ( key ) ) ; } } return this ; } }

************

************
tgt: private java.lang.stringbuilder method_1 ( java.lang.string var_1 , java.lang.object message ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; type_1 format = new type_1 ( var_3 ) ; java.lang.string time = format . format ( new java.util.date ( ) ) ; var_2 . append ( time ) ; var_2 . append ( string_1 ) ; var_2 . append ( var_1 ) ; var_2 . append ( string_1 ) ; var_2 . append ( method_2 ( ) ) ; var_2 . append ( string_2 ) ; var_2 . append ( message ) ; return var_2 ; }
[0]: public void method_1 ( ) { type_1 k = method_1 ( ) ; java.util.arraylist < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2. add ( method_2 ( ) ) ; } k. method_3 ( var_2 ) ; assert var_3 = ( method_4 ( ) ) == int_1 ; java.util.set < type_2 > var_4 = new java.util.hashset < type_2 > ( var_2 ) ; assertequals ( k. method_5 ( ), var_4 ) ; }

************

************
tgt: public static type_1 open ( ) { type_1 c = null ; try { java.lang.class . method_1 ( string_1 ) ; c = type_2 . method_2 ( string_2 ) ; c . method_3 ( false ) ; java.lang.system.out.println ( string_3 ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( ( ( ( var_3 . getclass ( ) . getname ( ) ) + string_4 ) + ( var_3 . method_4 ( ) ) ) ) ; java.lang.system.exit ( 0 ) ; } return c ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : method_3 ( new android.content.intent ( this, var_2 class ) ) ; return true ; case var_3 : method_4 ( ) ; return true ; case var_4 : method_3 ( new android.content.intent ( this, var_5 class ) ) ; return true ; case var_6 : method_3 ( new android.content.intent ( this, var_7 class ) ) ; return true ; } return super. method_1 ( item ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.string var_3 = var_1 . method_3 ( ) ; type_3 . method_4 ( var_3 , string_1 ) ; if ( ( var_3 . length ( ) ) < int_1 ) { throw new type_4 ( string_2 ) ; } method_5 ( ) ; }
[0]: public void method_1 ( type_1 token, type_2 response ) { var_1 = token ; type_3 var_2 = new type_3 ( var_3. getid ( ), type_4. method_2 ( var_4. method_3 ( ) ), type_4. method_4 ( var_5. method_3 ( ) ), type_4. method_5 ( type. method_3 ( ) ), type_4. method_6 ( var_6. method_3 ( ) ) ) ; var_7. method_7 ( token. tostring ( ), var_2, var_8 ) ; }

************

************
tgt: public type_1 method_1 ( ) { java.util.logging.logger.getlogger ( string_1 ) . method_2 ( var_1 ) ; type_2 var_2 = new type_2 ( ) ; var_2 . method_3 ( false ) ; var_2 . method_4 ( false ) ; var_2 . method_5 ( string_2 ) ; type_3 var_3 = new type_3 ( ) ; var_3 . method_6 ( var_2 ) ; var_3 . method_7 ( string_3 ) ; var_3 . method_8 ( method_9 ( ) ) ; var_3 . method_10 ( ) ; return var_3 . method_11 ( ) ; }
[0]: public type_1 method_1 ( int var_1, int var_2, int var_3 ) { return new type_1 ( ( ( method_2 ( ) ) + var_1 ), ( ( method_3 ( ) ) + var_2 ), ( ( method_4 ( ) ) + var_3 ) ) ; }

************

************
tgt: boolean method_1 ( java.lang.string [ ] var_1 ) { var_2 = true ; long var_3 = int_1 ; if ( ( ( type_1 . method_2 ( ) ) - ( var_4 ) ) < var_3 ) { var_6 = true ; if ( method_3 ( var_1 ) ) return false ; method_4 ( string_1 , ( ( java.lang.object [ ] ) ( var_1 ) ) ) ; if ( ( var_5 ) != null ) { var_5 . method_5 ( ) ; } return true ; } var_4 = type_1 . method_2 ( ) ; return false ; }
[0]: public void method_1 ( int id ) { if ( id!= 0 ) { type_1 var_1 = var_2. method_2 ( id ) ; if ( var_1. method_3 ( ) ) { var_1. method_4 ( false ) ; var_1. method_5 ( null ) ; } else { var_1. method_4 ( true ) ; var_1. method_5 ( new java.util.date ( ) ) ; } var_1. method_6 ( new java.util.date ( ) ) ; var_2. update ( var_1 ) ; } } }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_6 . method_1 ( ) ; type_1 . method_2 ( ) ; var_2 . method_1 ( ) ; var_3 . method_1 ( ) ; var_4 . method_1 ( ) ; var_5 . method_1 ( ) ; var_1 . method_1 ( ) ; }
[0]: private type_1 <? > method_1 ( java.lang.string var_1, int var_2, int var_3, java.lang.string var_4, type_2 var_5, int [ ] var_6 ) { return new type_3 ( var_1, var_2, var_3, var_4, var_5, var_6, var_7, method_2 ( ), var_8, var_9, var_10, var_11, var_8, var_12, var_13, var_14, var_15, var_16 ) ; }

************

************
tgt: public type_1 get ( java.lang.string key ) { type_1 var_1 = method_1 ( key ) ; if ( var_1 == null ) { var_1 = method_2 ( key ) ; if ( var_1 != null ) { if ( ! ( type_2 . method_3 ( var_1 ) ) ) { this . put ( var_1 ) ; } else { return null ; } } } return var_1 ; }
[0]: public void method_1 ( final type_1 var_1, int position ) { java.lang.string var_2 = var_3. get ( position ) ; if ( position == 0 ) { var_4. method_2 ( var_5 ) ; } else { if ( type_2. method_3 ( var_2 ) ) { type_3 var_6 = ( ( type_3 ) ( method_4 ( var_2 ) ) ) ; type_4. method_5 ( var_5 ). method_6 ( var_7 ). method_7 ( var_6 ). method_8 ( var_4 ) ; } } var_8. settext ( var_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( ( start ) == 0 ) || ( ! ( var_1 ) ) ) return ; var_2 . update ( var_3 , var_4 , 0 ) ; var_5 . method_3 ( false ) ; var_2 . method_2 ( var_3 , var_4 ) ; method_4 ( ) ; }
[0]: public void method_1 ( type_1 var_1, int format, int var_2, int var_3 ) { if ( ( this. var_1. method_2 ( ) ) == null ) { return ; } try { var_4. method_3 ( ) ; var_4. method_4 ( this. var_1 ) ; var_4. method_5 ( ) ; } catch ( java.lang.exception var_5 ) { type_2. method_6 ( string_1, ( string_2 + ( var_5. method_7 ( ) ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { try { method_3 ( ) ; method_2 ( var_1 ) ; } catch ( type_1 var_2 ) { var_2 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_4 . error ( ( string_1 + ( var_1 ) ) , var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.util.linkedlist < java.lang.long > var_2 = type_2. method_2 ( type_3. method_3 ( ), string_1 ) ; if ( ( var_2!= null ) && ( ( var_2. size ( ) ) > 0 ) ) { new type_4 ( var_2 ). execute ( ) ; } }

************

************
tgt: private void method_1 ( ) { if ( method_2 ( ) ) { int sum = 0 ; for ( type_1 var_2 : var_3 . method_4 ( 1 , var_3 . size ( ) ) ) { sum += var_2 . getvalue ( ) ; } var_3 . get ( 0 ) . setvalue ( sum ) ; } }
[0]: public android.view.view getview ( int position, android.view.view var_1, type_1 var_2 ) { android.view.view view = super. getview ( position, var_1, var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_1 ( var_4 ) ) ) ; type_2 var_5 = ( ( type_2 ) ( method_1 ( var_6 ) ) ) ; var_3. settext ( var_7. get ( position ). getname ( ) ) ; var_5. settext ( var_7. get ( position ). method_2 ( ) ) ; return view ; }

************

************
tgt: private type_1 method_1 ( type_1 f ) throws type_2 { f = new type_4 ( ) . method_1 ( f ) ; f = new type_5 ( ) . method_1 ( f ) ; f = new type_6 ( ) . method_1 ( f ) ; f = new type_7 ( ) . method_1 ( f ) ; f = new type_8 ( ) . method_1 ( f ) ; f = new type_3 ( ) . method_1 ( f ) ; f = new type_9 ( ) . method_1 ( f ) ; return f ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = method_2 ( string_1, 0 ) ; var_3 = var_2. getint ( string_2, int_1 ) ; type_3 var_4 = ( ( type_3 ) ( method_3 ( var_5 ) ) ) ; var_4. settext ( ( string_3 + ( var_3 ) ) ) ; var_1. method_4 ( this ) ; }

************

************
tgt: public float method_1 ( type_1 node , type_1 var_1 ) { type_2 start = new type_2 ( node . method_2 ( ) , node . method_3 ( ) ) ; type_2 end = new type_2 ( var_1 . method_2 ( ) , var_1 . method_3 ( ) ) ; return start . method_4 ( end ) ; }
[0]: public boolean method_1 ( type_1 var_1, float var_2, float var_3 ) { if ( var_1. method_2 ( ) ) { if ( method_3 ( ) ) { method_4 ( 1 ) ; } } if ( var_1. method_5 ( ) ) { if ( method_3 ( ) ) { method_4 ( 0 ) ; method_6 ( true ) ; } } return true ; } return false ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { int var_2 = var_1 . remove ( 0 ) . method_2 ( ) . getint ( ) ; if ( var_2 != ( var_3 ) ) { type_2 . method_3 ( var_4 , string_1 ) ; } path = var_1 . remove ( 0 ) . tostring ( ) ; }
[0]: public void method_1 ( android.view.view view ) { android.widget.linearlayout var_1 = ( ( android.widget.linearlayout ) ( method_2 ( var_2 ) ) ) ; if ( ( var_1. method_3 ( ) ) == ( var_3 ) ) var_1. method_4 ( var_4 ) ; else { var_1. method_4 ( var_5 ) ; type_1 var_6 = ( ( type_1 ) ( method_2 ( var_7 ) ) ) ; var_6. method_5 ( ) ; type_1 var_8 = ( ( type_1 ) ( method_2 ( var_9 ) ) ) ; var_8. method_5 ( ) ; } }

************

************
tgt: public static boolean method_1 ( ) { var_2 = new java.util.linkedlist < type_1 > ( ) ; java.util.list < type_1 > var_1 = new type_2 ( ) . method_2 ( ) ; if ( var_1 != null ) { var_2 . method_3 ( var_1 ) ; } var_1 = new type_3 ( ) . method_2 ( ) ; if ( var_1 != null ) { var_2 . method_3 ( var_1 ) ; } return true ; }
[0]: public void method_1 ( ) throws java.lang.exception { super. method_1 ( ) ; var_1 = type_1. method_2 ( string_1, null, string_2 ) ; var_2 = type_1. method_2 ( string_3, null, string_2 ) ; var_3 = type_1. method_2 ( string_4, var_1. getid ( ), string_2 ) ; }

************

************
tgt: public static double [ ] method_1 ( ) { var_1 [ 0 ] = var_2 . method_2 ( 1 ) ; var_1 [ 1 ] = - ( var_2 . method_2 ( 0 ) ) ; var_1 [ int_1 ] = var_2 . method_2 ( int_1 ) ; var_1 = type_1 . method_3 ( var_1 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 obj, int var_1 ) { if ( ( var_1 - 1 ) < ( var_2 ) ) { ( var_2 ) ++ ; method_2 ( true ) ; method_3 ( ( var_1 - 1 ), true ) ; array [ ( var_1 - 1 ) ] = obj ; } else { throw new type_2 ( string_1 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . method_2 ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_6 ) ) + string_6 ) + ( var_7 ) ) + string_7 ) + ( var_8 ) ) + string_8 ) ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_1 var_1 ) { java.util.linkedlist < type_1 > var_2 = new java.util.linkedlist < type_1 > ( ) ; for ( java.util.list < java.lang.string > var_3 : var_4 ) { for ( java.lang.string var_5 : var_3 ) { if ( ( var_1. method_2 ( ) ) == var_5 ) { var_2. add ( new type_1 ( var_6. get ( var_4. method_3 ( var_3 ) ) ) ) ; } } } return var_2 ; }

************

************
tgt: private < type_1 > type_1 get ( java.lang.class < type_1 > var_1 , java.util.set < java.lang.class < ? > > var_2 ) { if ( var_3 . method_1 ( var_1 ) ) { return var_1 . method_2 ( var_3 . get ( var_1 ) ) ; } type_2 < type_1 > context = new type_2 ( this , var_4 , var_1 ) ; type_1 var_5 = method_3 ( context , new java.util.hashset < > ( var_2 ) ) ; method_4 ( var_1 , var_5 ) ; return var_5 ; }
[0]: public void method_1 ( ) { var_1. get ( 0 ). method_2 ( var_2 ) ; method_3 ( ) ; java.lang.system.out.println ( string_1 ) ; var_3. method_4 ( var_4 ) ; java.lang.system.out.println ( string_2 ) ; var_1. get ( 0 ). method_2 ( var_5 ) ; method_3 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.util.map < java.lang.string , type_3 > var_2 = method_2 ( ) ; for ( type_3 var_3 : var_2 . values ( ) ) { type_2 key = var_3 . method_3 ( ) ; if ( var_1 . equals ( key ) ) { type_1 token = var_3 . method_4 ( ) ; var_3 . remove ( ) ; return token ; } } return null ; }
[0]: public static java.lang.object method_1 ( type_1 method, java.lang.object var_1, java.lang.object... args ) { try { boolean a =! ( method. method_2 ( ) ) ; if (! ( method. method_2 ( ) ) ) { method. method_3 ( true ) ; } java.lang.object obj = method. method_4 ( var_1, args ) ; if ( a ) { method. method_3 ( false ) ; } return obj ; } catch ( java.lang.exception var_2 ) { var_2. method_5 ( ) ; return null ; } } }

************

************
tgt: public static int method_1 ( java.lang.string [ ] args ) throws type_1 , java.lang.nullpointerexception { type_2 var_1 = new type_2 ( args ) ; type_4 var_2 = new type_4 ( var_1 ) ; type_5 . method_2 ( var_2 ) ; var_2 = null ; var_1 = null ; return 0 ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, java.lang.string message ) { java.lang.string var_2 = null ; try { type_1 var_3 = type_1. method_2 ( string_1 ) ; type_2 var_4 = new type_2 ( var_1. method_3 ( ), string_1 ) ; var_3. init ( var_4 ) ; var_2 = new java.lang.string ( type_3. method_4 ( var_3. method_5 ( message. method_3 ( ) ), var_5 ) ) ; } catch ( java.lang.exception var_6 ) { type_4. method_6 ( var_7, string_2, var_6 ) ; } return var_2 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) < int_1 ) { java.lang.system.out.println ( string_1 ) ; } type_1 var_1 = new type_1 ( args [ 0 ] ) ; var_2 . method_1 ( type_2 . method_2 ( type_3 . method_3 ( args [ 1 ] . method_4 ( 0 ) ) ) ) ; }
[0]: public static type_1 method_1 ( byte [ ] var_1, byte [ ] var_2, type_2 var_3 ) throws type_3 { type_1 var_4 = new type_1 ( ) ; var_4. method_2 ( var_1 ) ; var_4. method_3 ( var_2 ) ; var_4. method_4 ( type_4. method_5 ( ) ) ; var_4. method_6 ( var_3 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( long var_1 ) { java.lang.string var_2 = java.lang.string.format ( string_1 , ( ( var_1 / int_2 ) % int_1 ) ) ; java.lang.string min = java.lang.string.format ( string_1 , ( ( var_1 / int_2 ) / int_1 ) ) ; var_3 = ( min + string_2 ) + var_2 ; var_4 . settext ( var_3 ) ; var_5 . method_2 ( ( ( int ) ( ( var_1 * int_2 ) / ( var_6 ) ) ) ) ; }
[0]: public java.lang.integer method_1 ( java.lang.integer var_1 ) { if ( var_1 == null ) return null ; if ( var_2. isempty ( ) ) { for ( type_1 var_3 : var_4 ) { if ( ( var_3. method_2 ( ). getid ( ). intvalue ( ) ) == ( var_1. intvalue ( ) ) ) return var_3. method_3 ( ) ; } return null ; } return null ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string str ) { java.lang.string var_1 = string_1 ; int var_2 = str . length ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_1 += str . method_2 ( ( ( var_2 - 1 ) - i ) ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { try { try { var_2. method_2 ( var_3, var_1, string_1, type_2. tostring ( ) ) ; } catch ( java.lang.exception var_4 ) { type_3. method_3 ( string_2, var_4 ) ; } } catch ( java.lang.exception var_4 ) { type_3. method_3 ( string_3, var_4 ) ; } }

************

************
tgt: private static double operation ( char op , double var_1 , double var_2 ) { switch ( op ) { case char_1 : return var_2 + var_1 ; case char_2 : return var_2 - var_1 ; case char_3 : return var_2 * var_1 ; case char_4 : if ( var_1 == 0 ) throw new type_1 ( string_1 ) ; return var_2 / var_1 ; case char_5 : return java.lang.math.pow ( var_2 , var_1 ) ; } return 0 ; }
[0]: public type_1 method_1 ( ) { if ( ( var_1 ) == null ) { synchronized ( this ) { if ( ( var_1 ) == null ) { var_1 = new type_2 ( ) ; type_3 var_2 = var_3. method_2 ( var_4 class ) ; var_1. method_3 ( var_2 ) ; var_1. method_4 ( var_5 ) ; var_1. method_5 ( var_6 ) ; } } } return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_3 . method_2 ( ( ( string_1 + ( var_4 ) ) + string_2 ) ) . method_3 ( string_3 ) . setvalue ( false ) ; var_3 . method_2 ( string_4 ) . method_3 ( var_4 ) . method_4 ( ) ; var_2 = false ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { try { type_1. method_2 ( f. method_3 ( ), var_1. method_4 ( ), var_2 ) ; return true ; } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } return false ; }

************

************
tgt: private void method_1 ( int position ) { if ( position == ( var_1 ) ) { android.content.intent intent = new android.content.intent ( this , var_2 class ) ; method_2 ( intent ) ; return ; } else { method_3 ( new type_1 ( ) ) ; var_3 . method_4 ( position , true ) ; var_5 . method_6 ( var_3 ) ; } }
[0]: public void method_1 ( ) { this. var_1 = new type_1 ( this. var_2 ) ; this. var_1. method_2 ( 0 ) ; this. var_1. method_3 ( false ) ; this. var_1. method_4 ( true ) ; final type_2 var_3 = new type_2 ( this. var_1 ) ; var_3. method_5 ( new type_3 ( var_4 ) ) ; this. add ( var_3, var_5 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 ... args ) { for ( type_1 source : args ) { if ( source != null ) { for ( java.lang.string key : source . method_2 ( ) ) { if ( ! ( method_3 ( key ) ) ) { put ( key , source . get ( key ) ) ; } } } } return this ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2 ) method_2 ( ) ; method_3 ( var_1 ) ; method_4 ( var_1 ) ; if (! ( var_3 ) ) { switch ( var_4 ) { case 1 : method_5 ( var_1 ) ; break ; } } if ( var_5 ) { var_6. method_6 ( var_1 ) ; var_7. method_7 ( false ) ; } method_8 ( var_1 ) ; } }

************

************
tgt: var_1 ( ) { type_1 k = method_1 ( ) ; java.util.arraylist < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2 . add ( method_2 ( ) ) ; } k . method_3 ( var_2 ) ; asserttrue ( ( var_3 = ( method_4 ( ) ) == int_1 ) ) ; java.util.set < type_2 > var_4 = new java.util.hashset < type_2 > ( var_2 ) ; assertequals ( k . method_5 ( ) , var_4 ) ; }
[0]: public final void method_1 ( type_1 item, int var_1 ) { int var_2 = var_3. method_2 ( item ) ; type_2. method_3 ( var_3, var_2, var_1 ) ; type_3. method_4 ( var_2, var_1 ) ; if ( ( var_4 )!= null ) { var_4. method_5 ( this, var_2, var_1 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : method_3 ( new android.content.intent ( this , var_2 class ) ) ; return true ; case var_4 : method_3 ( new android.content.intent ( this , var_5 class ) ) ; return true ; case var_6 : method_3 ( new android.content.intent ( this , var_7 class ) ) ; return true ; } return super . method_1 ( item ) ; }
[0]: private static long method_1 ( long var_1, long var_2 ) { if ( var_2 > int_1 ) { double var_3 = var_1 / ( type_1. method_2 ( var_2 ) ) ; return type_1. method_3 ( var_3 ) ; } else if ( var_2 < int_1 ) { double var_3 = var_1 * ( type_1. method_2 ( var_2 ) ) ; return type_1. method_3 ( var_3 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 token , type_2 response ) { var_1 = token ; type_3 var_2 = new type_3 ( type_4 . method_2 ( var_4 . method_3 ( ) ) , type_4 . method_4 ( var_5 . method_3 ( ) ) , type_4 . method_5 ( type . method_3 ( ) ) , type_4 . method_6 ( var_6 . method_3 ( ) ) ) ; var_7 . method_7 ( token . tostring ( ) , var_2 , var_8 ) ; }
[0]: private void method_1 ( ) { java.lang.integer var_1 = var_2. method_2 ( ) ; if ( ( var_1!= null ) && (! ( ( var_1 >= 1 ) && ( var_1 <= ( var_3 ) ) ) ) ) { method_3 ( string_1 ) ; return ; } var_4 = var_1 - 1 ; method_4 ( var_4 ) ; method_5 ( ) ; }

************

************
tgt: public type_1 add ( int var_1 , int var_2 , int var_3 ) { return new type_1 ( ( ( method_2 ( ) ) + var_1 ) , ( ( method_3 ( ) ) + var_2 ) , ( ( method_4 ( ) ) + var_3 ) ) ; }
[0]: public type_1 method_1 ( long var_1, int var_2, type_2 context, type_3 var_3, type_4 var_4 ) throws java.lang.exception { java.util.calendar var_5 = type_5. method_2 ( var_2, 1, 1 ) ; type_6 var_6 = var_7. method_3 ( var_8 class, var_1 ) ; if ( var_6 == null ) return type_1. status ( var_9 ). method_4 ( ( string_1 + var_1 ) ). build ( ) ; return method_5 ( var_3, var_4, context, var_6, type_5. method_6 ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( int id ) { if ( id != 0 ) { type_1 var_1 = var_2 . method_2 ( id ) ; if ( var_1 != null ) { if ( var_1 . method_3 ( ) ) { var_1 . method_4 ( false ) ; var_1 . method_5 ( null ) ; } else { var_1 . method_4 ( true ) ; var_1 . method_5 ( new java.util.date ( ) ) ; } var_1 . method_6 ( new java.util.date ( ) ) ; var_2 . update ( var_1 ) ; } } }
[0]: public synchronized boolean method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; type_3 var_3 = var_1. method_3 ( ) ; if ( var_2 == null ) { return false ; } type_2 var_4 = type_2. method_4 ( var_3, var_2 ) ; if ( var_4 == null ) { return false ; } if (! ( method_5 ( var_4 ) ) ) { return false ; } return true ; }

************

************
tgt: private type_1 < ? > method_1 ( java.lang.string var_1 , int var_2 , int var_3 , java.lang.string var_4 , type_2 var_5 , int [ ] var_6 ) { return new type_3 ( var_1 , var_2 , var_3 , var_4 , var_5 , var_6 , var_7 , method_2 ( ) , var_8 , var_9 , var_10 , var_11 , var_8 , var_12 , var_13 , var_14 , var_15 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1. method_2 ( string_1 ) ; java.lang.string var_2 = type_1. method_2 ( string_2 ) ; var_3 = new type_2 ( var_1, var_2 ) ; token = var_3. method_3 ( string_3, string_4, string_5 ) ; }

************

************
tgt: private static void method_1 ( type_1 var_1 ) { java.util.list < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( type_2 var_3 : var_4 ) { if ( ( var_1 . method_2 ( var_3 ) ) < ( var_5 ) ) { var_2 . add ( var_3 ) ; } } var_4 . method_3 ( var_2 ) ; }
[0]: public type_1 < type_2 > method_1 ( type_2 var_1 ) throws java.lang.exception { java.util.list < type_2 > var_2 = var_3. getvalue ( ) ; var_2. add ( var_1 ) ; var_3. method_2 ( var_2 ) ; type_3 var_4 = method_3 ( var_5 ) ; var_4. method_4 ( ). add ( var_1 ) ; var_6. remove ( var_4 ) ; var_6. add ( 0, var_4 ) ; var_7. method_2 ( var_6 ) ; return type_4. method_5 ( var_1 ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , int position ) { java.lang.string var_2 = var_3 . get ( position ) ; if ( position == 0 ) { var_4 . method_2 ( var_5 ) ; } else { if ( type_2 . method_3 ( var_2 ) ) { type_3 var_6 = ( ( type_3 ) ( method_4 ( var_2 ) ) ) ; type_4 . method_5 ( var_5 ) . method_7 ( var_6 ) . method_8 ( var_4 ) ; } } var_8 . settext ( var_2 ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( ) ) { if ( ( var_2. size ( ) ) == 0 ) { method_3 ( ) ; } else { for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { var_2. get ( i ). method_1 ( var_3. method_4 ( i ) ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 , int format , int var_2 , int var_3 ) { if ( ( this . var_1 . method_2 ( ) ) == null ) { return ; } try { var_4 . method_3 ( ) ; var_4 . method_4 ( var_1 ) ; var_4 . method_5 ( ) ; } catch ( java.lang.exception var_5 ) { type_2 . method_6 ( string_1 , ( string_2 + ( var_5 . method_7 ( ) ) ) ) ; } }
[0]: private double method_1 ( double p ) { if ( ( p == 0 ) || ( p == 1 ) ) { return 1 ; } else { return ( ( ( - p ) * ( type_1. method_2 ( p ) ) ) / ( type_1. method_2 ( int_1 ) ) ) - ( ( ( 1 - p ) * ( type_1. method_2 ( ( 1 - p ) ) ) ) / ( type_1. method_2 ( int_1 ) ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.linkedlist < java.lang.long > var_2 = new java.util.linkedlist < java.lang.long > ( ) ; var_2 = type_2 . method_2 ( type_3 . method_3 ( ) , string_1 ) ; if ( ! ( var_2 . isempty ( ) ) ) { new type_4 ( var_2 ) . execute ( ) ; } }
[0]: public void handle ( type_1 var_1 ) { java.lang.string text = string_1 ; java.lang.string var_2 = var_1. method_1 ( ). tostring ( ) ; switch ( var_2 ) { case string_2 : text = string_3 ; break ; case string_4 : text = string_5 ; break ; case string_6 : text = string_7 ; break ; } java.lang.system.out.println ( text ) ; var_3. method_2 ( ). method_3 ( ). settext ( text ) ; }

************

************
tgt: public android.view.view getview ( int position , android.view.view var_1 , type_1 var_2 ) { android.view.view view = super . getview ( position , var_1 , var_2 ) ; type_2 var_3 = ( ( type_2 ) ( view . method_1 ( var_4 ) ) ) ; type_2 var_5 = ( ( type_2 ) ( view . method_1 ( var_6 ) ) ) ; var_3 . settext ( var_7 . get ( position ) . getname ( ) ) ; var_5 . settext ( var_7 . get ( position ) . method_2 ( ) ) ; return view ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; type_2 var_3 = new type_2 ( ) ; type_1 result = null ; try { result = var_3. method_3 ( var_2, var_4 class ) ; java.lang.system.out.println ( result. method_4 ( ). method_5 ( ). method_6 ( ) ) ; java.lang.system.out.println ( result. method_4 ( ). method_7 ( ). method_8 ( ) ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_9 ( ) ; result = null ; } return result ; }

************

************
tgt: public void method_1 ( ) { type_2 var_2 = method_2 ( string_1 , 0 ) ; var_3 = var_2 . getint ( string_2 , int_1 ) ; type_3 var_4 = ( ( type_3 ) ( method_3 ( var_5 ) ) ) ; var_4 . settext ( ( string_3 + ( var_3 ) ) ) ; var_1 . method_4 ( this ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( var_2. gettext ( ). tostring ( ) ) ; var_1. method_3 ( var_3. gettext ( ). tostring ( ) ) ; if ( ( var_4 )!= null ) { var_1. method_4 ( var_4. getid ( ) ) ; } else { var_1. method_4 ( null ) ; } if ( method_5 ( ) ) { method_6 ( ) ; method_7 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , float var_2 , float var_3 ) { if ( var_1 . method_2 ( ) ) { method_4 ( 1 ) ; } if ( var_1 . method_5 ( ) ) { method_4 ( 0 ) ; method_6 ( false ) ; } return true ; }
[0]: public android.view.view getview ( int position, android.view.view var_1, type_1 var_2 ) { final type_2 field = method_1 ( position ) ; type_3 var_3 = type_4. method_2 ( getcontext ( ), field ) ; if ( var_1 == null ) { var_1 = var_3. method_3 ( ) ; } var_3. setvalue ( ) ; var_3. method_4 ( ) ; return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view view ) { android.widget.linearlayout var_1 = ( ( android.widget.linearlayout ) ( method_2 ( var_2 ) ) ) ; if ( ( var_1 . method_3 ( ) ) == ( var_3 ) ) var_1 . method_4 ( var_4 ) ; else { var_1 . method_4 ( var_5 ) ; type_1 var_6 = ( ( type_1 ) ( method_2 ( var_9 ) ) ) ; var_6 . method_5 ( ) ; type_1 var_8 = ( ( type_1 ) ( method_2 ( var_9 ) ) ) ; var_8 . method_5 ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 build = method_2 ( var_1 class ) ; type_2 var_2 = method_3 ( null ) ; method_4 ( build, var_2 ) ; type_3. assertthat ( new type_4 ( ). method_5 ( build, method_6 ( float_1 ), true, null, null ), type_5. method_7 ( true ) ) ; method_8 ( var_2 ). method_9 ( new type_6 ( int_1, true, method_10 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { super . method_1 ( ) ; var_1 = type_1 . method_2 ( string_1 , null , string_2 ) ; var_2 = type_1 . method_2 ( string_3 , null , string_2 ) ; var_3 = type_1 . method_2 ( string_4 , var_1 , string_2 ) ; }
[0]: private type_1 method_1 ( int i ) { java.util.list < double [ ] > list = new java.util.arraylist < > ( ) ; for ( double [ ] var_1 : values ) { double [ ] var_2 = method_2 ( var_1, i ) ; list. add ( var_2 ) ; } try { java.lang.double var_3 = method_3 ( var_4 [ i ] ) ; return type_1. method_4 ( list, name, var_3 ) ; } catch ( type_2 var_5 ) { return type_1. method_5 ( name ) ; } }

************

************
tgt: public type_1 remove ( int var_1 ) { var_1 = var_1 - 1 ; if ( ( ( var_1 < ( var_2 ) ) && ( var_1 >= 0 ) ) && ( ! ( isempty ( ) ) ) ) { type_1 obj = array [ var_1 ] ; ( var_2 ) -- ; method_2 ( false ) ; method_3 ( var_1 , false ) ; return obj ; } else { throw new type_2 ( string_1 ) ; } }
[0]: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; java.lang.string values = string_1 ; for ( int x = 0 ; x < ( var_2 ) ; x ++ ) { var_1 += ( type_1. method_1 ( var_3 [ x ] ) ) + string_2 ; values += ( type_1. getvalue ( var_3 [ x ] ) ) + string_2 ; } return ( ( var_1 + ( var_2 ) ) + values ) + string_2 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_1 var_5 ) { java.util.list < type_1 > var_2 = new java.util.linkedlist < type_1 > ( ) ; for ( int i = 0 ; i < ( var_6 . size ( ) ) ; i ++ ) { if ( var_4 . contains ( var_5 ) ) { var_2 . add ( new type_1 ( var_6 . get ( i ) ) ) ; } } return var_2 ; }
[0]: public void method_1 ( ) { type_1. method_2 ( this ) ; method_3 ( var_1 ) ; method_4 ( ). method_5 ( true ) ; method_4 ( ). method_6 ( false ) ; var_1. method_7 ( new type_2 ( ) { public void method_8 ( android.view.view var_2 ) { android.content.intent intent = new android.content.intent ( var_2. getcontext ( ), var_3 class ) ; method_9 ( intent ) ; } } ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . get ( 0 ) . method_2 ( var_2 ) ; java.lang.system.out.println ( string_1 ) ; method_3 ( ) ; var_3 . method_4 ( var_4 ) ; java.lang.system.out.println ( string_2 ) ; var_1 . get ( 0 ) . method_2 ( var_5 ) ; method_3 ( ) ; }
[0]: public type_1 method_1 ( ) throws java.lang.exception { type. method_1 ( ) ; if (! ( size. method_1 ( ). equals ( new type_2 ( var_1 ) ) ) ) { throw new java.lang.exception ( string_1 ) ; } var_2 = new type_3 ( type ) ; return new type_1 ( var_2, null, null ) ; }

************

************
tgt: public java.lang.object method_1 ( type_1 method , java.lang.object var_1 , java.lang.object ... args ) { try { boolean a = ! ( method . method_2 ( ) ) ; if ( ! ( method . method_2 ( ) ) ) { method . method_3 ( true ) ; } java.lang.object obj = method . method_4 ( var_1 , args ) ; if ( a ) { method . method_3 ( false ) ; } return obj ; } catch ( java.lang.exception var_2 ) { var_2 . method_5 ( ) ; return null ; } }
[0]: public static java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 = string_1 ; try { if ( ( var_3 ) == ( var_1. method_2 ( ) ) ) { var_2 = string_1 + ( ( long ) ( var_1. method_3 ( ) ) ) ; } else { var_2 = var_1. tostring ( ) ; } } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } return var_2 ; }

************

************
tgt: public static java.lang.string method_1 ( byte [ ] var_1 , java.lang.string message ) { java.lang.string var_2 = null ; try { type_1 var_3 = type_1 . method_2 ( string_1 ) ; type_2 var_4 = new type_2 ( var_1 , string_1 ) ; var_3 . init ( var_4 ) ; var_2 = new java.lang.string ( type_3 . method_4 ( var_3 . method_5 ( message . method_3 ( ) ) , var_5 ) ) ; } catch ( java.lang.exception var_6 ) { type_4 . method_6 ( var_7 , string_2 , var_6 ) ; } return var_2 ; }
[0]: private void method_1 ( final java.lang.long var_1, final java.lang.string message ) { type_1 var_2 = var_3. method_2 ( ) ; java.lang.string key = method_3 ( ) ; java.util.hashmap < java.lang.string, java.lang.string > state = new java.util.hashmap < > ( ) ; state. put ( string_1, message ) ; var_2. method_4 ( key, state ) ; }

************

************
tgt: private static type_1 method_1 ( byte [ ] var_1 , byte [ ] var_2 , type_2 var_3 ) throws type_3 { type_1 var_4 = new type_1 ( ) ; var_4 . method_2 ( var_1 ) ; var_4 . method_3 ( var_2 ) ; var_4 . method_4 ( type_4 . method_5 ( ) ) ; var_4 . method_6 ( var_3 ) ; return var_4 ; }
[0]: public java.lang.string method_1 ( java.lang.string text ) { java.lang.string var_1 = text ; while ( ( var_1. startswith ( string_1 ) ) || ( var_1. startswith ( string_1 ) ) ) var_1 = var_1. substring ( 1 ) ; while ( ( var_1. method_2 ( string_1 ) ) || ( var_1. startswith ( string_1 ) ) ) var_1 = var_1. substring ( 0, ( ( var_1. length ( ) ) - 1 ) ) ; return var_1 ; }

************

************
tgt: public type_1 method_3 ( java.lang.integer var_1 ) { if ( var_1 == null ) return null ; for ( type_1 var_3 : var_4 ) { if ( ( var_3 . method_2 ( ) . getid ( ) . intvalue ( ) ) == ( var_1 . intvalue ( ) ) ) return var_3 ; } return null ; }
[0]: private void method_1 ( int i, int j ) { if ( j < ( ( n ) - 1 ) ) { int var_1 = method_2 ( i, j ) ; if ( method_3 ( var_1 ) ) { var_2. method_4 ( var_1, method_2 ( i, j ) ) ; } } }

************

************
tgt: public void method_1 ( java.util.collection < type_1 > var_1 ) { java.lang.string var_2 = var_3 . method_2 ( false , false ) ; for ( java.lang.string line : message ) { for ( type_2 target : var_1 ) { target . method_4 ( var_2 . method_3 ( line ) ) ; } } }
[0]: public void method_1 ( type_1 [ ] var_1 ) { var_2 = var_1 ; if ( ( var_1. length ) == 0 ) { var_3 = true ; var_2 = new type_1 [ ] { null } ; } type_2 var_4 = new type_2 ( getactivity ( ), var_2 ) ; method_2 ( var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { try { var_2 . method_2 ( var_3 , var_1 , string_1 , type_2 . tostring ( ) ) ; } catch ( java.lang.exception var_4 ) { type_3 . method_3 ( ( string_2 + var_4 ) ) ; } } catch ( java.lang.exception var_4 ) { type_3 . method_3 ( ( string_3 + var_4 ) ) ; } }
[0]: public void method_1 ( final java.lang.float var_1 ) { if ( var_1 <= 0.0 ) { type_1. method_2 ( listener, null ) ; } else { float var_2 = ( ( float ) ( var_1 - float_1 ) ) ; if ( var_2 < 0.0 ) var_2 = ( ( float ) ( 0.0 ) ) ; method_3 ( var_2, listener ) ; type_1. method_2 ( listener, null ) ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( ( var_1 ) == null ) { synchronized ( this ) { if ( ( var_1 ) == null ) { type_2 temp = new type_2 ( ) ; type_3 var_2 = var_3 . method_2 ( var_4 class ) ; temp . method_3 ( var_2 ) ; temp . method_4 ( var_5 ) ; temp . method_5 ( var_6 ) ; var_1 = temp ; } } } return var_1 ; }
[0]: public static type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( var_1. getid ( ) ) ; var_2. method_3 ( var_1. method_4 ( ) ) ; var_2. method_5 ( var_1. gettype ( ). method_6 ( ) ) ; var_2. method_7 ( var_1. method_8 ( ) ) ; var_2. method_9 ( var_1. method_10 ( ) ) ; var_2. method_11 ( var_1. method_12 ( ) ) ; return var_2 ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { try { type_1 . method_2 ( this . f . method_3 ( ) , var_1 . method_4 ( ) , var_2 ) ; return true ; } catch ( java.io.ioexception var_3 ) { var_3 . method_5 ( ) ; } return false ; }
[0]: private type_1 method_1 ( type_2 type, type_1 var_1 ) { type_3 < type_1 > var_2 = var_3. method_2 ( type ) ; if ( var_2. method_3 ( ) ) { var_3. delete ( var_2. get ( ) ) ; } var_3. method_4 ( var_1 ) ; type_4. put ( type, var_1 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( ) { this . var_1 = new type_1 ( this . var_2 ) ; this . var_1 . method_2 ( 0 ) ; this . var_1 . method_3 ( false ) ; this . var_1 . method_4 ( false ) ; final type_2 var_3 = new type_2 ( this . var_1 ) ; var_3 . method_5 ( new type_3 ( var_4 ) ) ; this . add ( var_3 , var_5 ) ; }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = this. var_2 ; if ( var_1 == null ) { return ; } synchronized ( var_1. method_2 ( ) ) { if ( ( ( this. var_3 ) && ( method_3 ( ) ) ) && (! ( this. var_4 ) ) ) { method_4 ( ) ; this. var_4 = true ; this. var_2. method_5 ( this ) ; return ; } method_6 ( true, true ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) method_2 ( ) ; method_3 ( var_1 ) ; if ( ! ( var_3 ) ) { switch ( var_4 ) { case 1 : method_5 ( var_1 ) ; break ; } } if ( var_5 ) { var_6 . method_6 ( var_1 ) ; var_7 . method_7 ( false ) ; } method_8 ( var_1 ) ; }
[0]: public void method_1 ( ) { java.util.date date = new java.util.date ( ) ; date = type_1. method_2 ( date ) ; java.util.date var_1 = type_1. method_2 ( date ) ; java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2. method_3 ( var_1 ) ; type_2. assertequals ( var_2. get ( var_3 ), 0 ) ; }

************

************
tgt: public final void method_1 ( type_1 item , int var_1 ) { int var_2 = var_3 . method_2 ( item ) ; var_3 . remove ( var_2 ) ; var_3 . add ( var_1 , item ) ; type_3 . method_4 ( var_2 , var_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_5 ( this , var_2 , var_1 ) ; } }
[0]: public void execute ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { switch ( var_1. method_1 ( i ) ) { case var_2 : case var_3 : method_2 ( var_1. method_1 ( i ) ) ; break ; case var_4 : case var_5 : method_3 ( var_1. method_1 ( i ) ) ; break ; } } }

************

************
tgt: private static long method_1 ( long var_1 , long var_2 ) { if ( var_2 > int_1 ) { double var_3 = ( type_1 . method_2 ( var_1 ) ) / ( type_1 . method_2 ( var_2 ) ) ; return type_1 . method_3 ( var_3 ) ; } else if ( var_2 < int_1 ) { double var_3 = ( type_1 . method_2 ( var_1 ) ) * ( type_1 . method_2 ( var_2 ) ) ; return type_1 . method_3 ( var_3 ) ; } return var_1 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4 ) { type_1 var_5 = new type_1 ( ) ; var_5. method_2 ( var_1 ) ; var_5. method_3 ( var_2 ) ; var_5. method_4 ( var_3 ) ; type_2 var_6 = new type_2 ( type_3. method_5 ( ) ) ; var_5. method_6 ( var_6 ) ; if ( var_4!= null ) { var_5. method_7 ( var_4 ) ; } var_7. method_8 ( var_5 ) ; return string_1 ; }

************

************
tgt: private void method_1 ( ) { java.lang.integer var_1 = var_2 . method_2 ( ) ; if ( var_1 == null ) { return ; } if ( ( var_1 != null ) && ( ! ( ( var_1 >= 1 ) && ( var_1 <= ( var_3 ) ) ) ) ) { method_3 ( string_1 ) ; return ; } var_4 = var_1 - 1 ; method_4 ( var_4 ) ; method_5 ( ) ; }
[0]: public void remove ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = null ; try { var_3 = var_2. method_1 ( var_1. getclass ( ) ) ; var_3. delete ( var_1 ) ; } catch ( type_4 var_4 ) { var_4. method_2 ( ) ; } finally { if ( var_3!= null ) { var_2. method_3 ( ) ; var_3 = null ; } } } }

************

************
tgt: public type_1 method_1 ( long var_1 , int var_2 ) throws java.lang.exception { java.util.calendar var_5 = type_5 . method_2 ( var_2 , 1 , 1 ) ; type_6 var_6 = var_7 . method_3 ( var_8 class , var_1 ) ; if ( var_6 == null ) return type_1 . status ( var_9 ) . method_4 ( ( string_1 + var_1 ) ) . build ( ) ; return method_5 ( var_6 , type_5 . method_6 ( var_5 ) ) ; }
[0]: public void method_1 ( ) { assert var_1. method_2 ( ) ; if ( ( var_2 )!= null ) { if ( ( ( var_3 ) == ( var_4 ) ) && ( ( var_5 ) == ( var_6 ) ) ) { method_3 ( var_7. method_4 ( ) ) ; } else { method_5 ( var_8 ) ; } } method_6 ( ) ; } }

************

************
tgt: public synchronized boolean method_1 ( type_1 var_1 ) { type_3 var_3 = var_1 . method_3 ( ) ; type_2 var_2 = var_1 . method_2 ( ) ; if ( var_2 == null ) { return false ; } type_2 var_4 = type_2 . method_4 ( var_3 , var_2 ) ; if ( var_4 == null ) { return false ; } if ( ! ( method_5 ( var_4 ) ) ) { return false ; } return true ; }
[0]: private type_1 < java.lang.integer > method_1 ( ) { type_1 < java.lang.integer > var_1 ; if ( ( type_2. method_2 ( ) )!= null ) { var_1 = type_3. method_3 ( ) ; for ( int i = 0 ; i < ( type_2. method_2 ( ). method_4 ( ). length ) ; i ++ ) { var_1. add ( i ) ; } } else { var_1 = type_3. method_3 ( 0 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1 . method_2 ( string_1 ) ; java.lang.string var_2 = type_1 . method_2 ( string_2 ) ; var_3 = new type_2 ( var_1 , var_2 ) ; token = var_3 . method_3 ( var_1 , var_2 , string_5 ) ; }
[0]: public void method_1 ( java.lang.string var_1, int [ ] var_2 ) throws type_1, java.io.ioexception { java.util.list < type_2 > var_3 = new type_3 ( ). method_2 ( new type_4 ( var_1 ), string_1 ) ; method_3 ( var_2, var_3 ) ; type_5. assertequals ( var_1, method_4 ( var_3 ) ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( type_2 var_1 ) throws java.lang.exception { type_3 var_4 = method_3 ( var_5 ) ; var_4 . method_4 ( ) . add ( var_1 ) ; var_6 . remove ( var_4 ) ; var_6 . add ( 0 , var_4 ) ; var_7 . method_2 ( var_6 ) ; java.util.list < type_2 > var_2 = var_3 . getvalue ( ) ; var_2 . add ( var_1 ) ; var_3 . method_2 ( var_2 ) ; return type_4 . method_5 ( var_1 ) ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string url = null ; try { url = var_1. method_2 ( var_2 ) ; } catch ( type_1 var_3 ) { type_2. method_3 ( ( ( string_1 + ( var_4 ) ) + ( var_3. method_4 ( ) ) ), var_3 ) ; return url ; } catch ( java.lang.exception var_3 ) { type_2. method_3 ( ( ( string_2 + ( var_4 ) ) + ( var_3. method_4 ( ) ) ), var_3 ) ; } return url ; }

************

************
tgt: void method_1 ( ) { if ( var_1 . method_2 ( ) ) { if ( ( ( var_2 ) == null ) || ( ( var_2 . size ( ) ) == 0 ) ) { method_3 ( ) ; } else { for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { var_2 . get ( i ) . method_1 ( var_3 . method_4 ( i ) ) ; } } } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; this. var_2 = var_1. getboolean ( string_1 ) ; this. var_3 = var_1. getboolean ( string_2 ) ; if ( var_2 ) { var_4 = int_1 * ( var_5 ) ; } this. var_6. method_2 ( var_4 ) ; }

************

************
tgt: private double method_1 ( double p ) { if ( ( p == 0 ) || ( p == 1 ) ) { return 1 ; } else { return ( ( - p ) * ( ( type_1 . method_2 ( p ) ) / ( type_1 . method_2 ( int_1 ) ) ) ) - ( ( 1 - p ) * ( ( type_1 . method_2 ( ( 1 - p ) ) ) / ( type_1 . method_2 ( int_1 ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { if (! ( method_2 ( var_1 ). contains ( var_2 ) ) ) { java.lang.string var_3 = var_4. method_3 ( string_1 ) ; method_4 ( ). method_5 ( var_1, var_2, var_3 ) ; } }

************

************
tgt: public void handle ( type_1 var_1 ) { java.lang.string text = string_1 ; java.lang.string var_2 = var_1 . method_1 ( ) . tostring ( ) ; switch ( var_2 ) { case string_2 : text = string_3 ; break ; case string_4 : text = string_5 ; break ; case string_6 : text = string_7 ; break ; default : break ; } java.lang.system.out.println ( text ) ; var_3 . method_2 ( ) . method_3 ( ) . settext ( text ) ; }
[0]: private void method_1 ( int var_1, final int var_2 ) { type_1 var_3 = new type_1 ( ) { public void method_2 ( ) { method_3 ( var_2, int_1 ) ; } } ; var_4. method_4 ( var_3, type_2. method_5 ( var_1 ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; type_2 var_3 = new type_2 ( ) ; type_1 result = null ; try { result = var_3 . method_3 ( var_2 , var_4 class ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_9 ( ) ; result = null ; } return result ; }
[0]: public void method_1 ( type_1 name ) { if ( ( ( this. name )!= null ) && (! ( this. name. equals ( name ) ) ) ) { if ( name!= null ) { name. method_2 ( ). remove ( this ) ; } } this. name = name ; this. name. method_2 ( ). add ( this ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( ( var_1 ) == 0 ) && ( ( var_2 ) == 0 ) ) { type_2 var_3 = event . method_2 ( ) . get ( 0 ) ; var_1 = var_3 . method_3 ( ) ; var_2 = var_3 . method_4 ( ) ; } }
[0]: public void method_1 ( final type_1 var_1, final int var_2 ) { var_1. method_2 ( new type_2 ( ) { public type_3 method_3 ( type_1 var_1 ) { boolean var_3 = var_4 this. method_3 ( var_1 ) ; if ( (! var_3 ) && ( ( var_1. method_4 ( ) ) > var_2 ) ) { return var_5 ; } else { return var_6 ; } } } ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( var_2 . gettext ( ) . tostring ( ) . trim ( ) ) ; var_1 . method_3 ( var_3 . gettext ( ) . tostring ( ) . trim ( ) ) ; if ( ( var_4 ) != null ) { var_1 . method_4 ( var_4 . getid ( ) ) ; } else { var_1 . method_4 ( null ) ; } if ( method_5 ( ) ) { method_6 ( ) ; method_7 ( ) ; } }
[0]: private boolean method_1 ( type_1 var_1 ) { type_2. set ( var_1. method_2 ( ) ) ; type_3 var_2 = type_4. method_3 ( ) ; boolean contains = true ; try { type_1 item = var_2. method_4 ( var_3 class, var_1. method_5 ( ) ) ; if ( item == null ) { contains = false ; } } finally { var_2. method_6 ( ) ; } return contains ; }

************

************
tgt: public android.view.view getview ( int position , android.view.view var_1 , type_1 var_2 ) { final type_2 field = method_1 ( position ) ; type_3 var_3 = type_4 . method_2 ( getcontext ( ) , field ) ; var_3 . setvalue ( ) ; var_3 . method_4 ( ) ; return var_3 . method_3 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_2 instanceof type_3 ) { var_1. method_2 ( ( ( type_3 ) ( var_2 ) ). var_3 ) ; var_4. method_3 ( var_1 ) ; } if ( var_2 instanceof type_4 ) { var_1. method_4 ( ( ( type_4 ) ( var_2 ) ). name ) ; var_4. method_3 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 build = method_2 ( var_1 class ) ; type_2 var_2 = method_3 ( null ) ; method_4 ( build , var_2 ) ; type_3 . assertthat ( new type_4 ( ) . method_5 ( build , method_6 ( float_1 ) , true , null , null , null ) , type_5 . method_7 ( true ) ) ; method_8 ( var_2 ) . method_9 ( new type_6 ( int_1 , true , method_10 ( ) ) ) ; }
[0]: public void init ( ) { var_1. method_1 ( string_1 ) ; try { var_1. info ( string_2, method_2 ( ), var_2 ) ; java.util.properties var_3 = new java.util.properties ( ) ; var_1. info ( string_3, method_2 ( ) ) ; } catch ( java.lang.exception var_4 ) { var_1. error ( string_4, var_4 ) ; if ( var_4 instanceof type_1 ) { throw ( ( type_1 ) ( var_4 ) ) ; } throw new type_1 ( var_4 ) ; } }

************

************
tgt: private type_1 method_1 ( int i ) { java.util.list < double [ ] > list = new java.util.arraylist < > ( ) ; for ( double [ ] var_1 : values ) { double [ ] var_2 = method_2 ( var_1 , i ) ; list . add ( var_2 ) ; } java.lang.double var_3 = method_3 ( var_4 [ i ] ) ; return type_1 . method_4 ( list , name , var_3 ) ; }
[0]: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return var_1 ; case int_1 : return var_2 ; case 1 : if ( ( var_3 )!= null ) { return var_3 ; } return var_3 = new type_2 ( ) ; case int_2 : return var_4 ; default : return new type_3 ( ) ; } } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; java.lang.string values = string_1 ; for ( int x = 0 ; x <= ( var_2 ) ; x ++ ) { var_1 += ( type_1 . method_1 ( var_3 [ x ] ) ) + string_2 ; values += ( type_1 . getvalue ( var_3 [ x ] ) ) + string_2 ; } return ( ( var_1 + "\n" ) + values ) + "\n" ; }
[0]: private static void method_1 ( type_1 var_1, type_2 <? > var_2 ) throws type_3, java.io.ioexception { byte [ ] var_3 = var_2. method_2 ( ) ; if ( var_3!= null ) { var_1. method_3 ( true ) ; var_1. method_4 ( var_4, var_2. method_5 ( ) ) ; type_4 out = new type_4 ( var_1. method_6 ( ) ) ; out.write ( var_3 ) ; out. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( this ) ; method_3 ( var_1 ) ; if ( ( method_4 ( ) ) != null ) { method_4 ( ) . method_5 ( true ) ; method_4 ( ) . method_6 ( false ) ; } var_1 . method_7 ( new type_2 ( ) { public void method_8 ( android.view.view var_2 ) { android.content.intent intent = new android.content.intent ( var_2 . getcontext ( ) , var_3 class ) ; method_9 ( intent ) ; } } ) ; }
[0]: public type_1 method_1 ( double var_1 ) { if ( var_1 == 0.0 ) { return new type_1 ( size ) ; } type_1 result = new type_1 ( size ) ; for ( int i : var_2 ) { result. set ( i, ( ( data [ i ] ) * var_1 ) ) ; } return result ; }

************

************
tgt: public type_1 method_1 ( ) throws java.lang.exception { type . method_1 ( ) ; if ( ! ( size . method_1 ( ) . type . equals ( new type_2 ( var_1 ) ) ) ) { throw new java.lang.exception ( string_1 ) ; } var_2 = new type_3 ( type ) ; return new type_1 ( var_2 , null ) ; }
[0]: public void method_1 ( ) { try { type_1 var_1 = this. method_2 ( ). method_3 ( var_2 ) ; var_3. method_4 ( var_1, this ) ; } catch ( type_2 var_4 ) { var_5. method_5 ( var_6, var_4. method_6 ( ), var_4 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 = string_1 ; try { if ( ( var_3 ) == ( var_1 . method_2 ( ) ) ) { var_2 = string_1 + ( ( long ) ( var_1 . method_3 ( ) ) ) ; } else { var_2 = var_1 . tostring ( ) ; } } catch ( java.lang.exception var_4 ) { } return var_2 ; }
[0]: private type_1 < type_2 > method_1 ( ) { java.util.list < type_2 > var_1 = new java.util.arraylist < > ( ) ; for ( int y = 0 ; y < ( var_2. method_2 ( ) ) ; y ++ ) { for ( int x = 0 ; x < ( var_2. method_3 ( ) ) ; x ++ ) { var_1. add ( new type_2 ( y, x, ( - 1 ) ) ) ; } } return var_1 ; }

************

************
tgt: private void method_1 ( final java.lang.long var_1 ) { type_1 var_2 = var_3 . method_2 ( ) ; java.lang.string key = method_3 ( ) ; java.util.hashmap < java.lang.string , java.lang.string > state = new java.util.hashmap < > ( ) ; state . put ( string_1 , java.lang.long . tostring ( var_1 ) ) ; var_2 . method_4 ( key , state ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { if ( ( args.length )!= int_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 0 ) ; } type_1. init ( args ) ; type_2. method_1 ( var_1, string_3, var_2, var_3, var_4 ) ; type_2. method_2 ( var_2 ) ; type_1. method_3 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string text ) { java.lang.string var_1 = text ; while ( ( var_1 . startswith ( string_1 ) ) || ( var_1 . startswith ( "\t" ) ) ) var_1 = var_1 . substring ( 1 ) ; while ( ( var_1 . method_2 ( string_1 ) ) || ( var_1 . method_2 ( "\t" ) ) ) var_1 = var_1 . substring ( 0 , ( ( var_1 . length ( ) ) - 1 ) ) ; return var_1 ; }
[0]: public static java.util.date method_1 ( java.lang.class var_1 ) { if ( ( type_1. method_2 ( var_1 ) ) == 0 ) { return null ; } type_2 var_2 = type_3. method_3 ( ). method_4 ( ) ; type_4 var_3 = ( ( type_4 ) ( var_2. method_5 ( var_1 ). method_6 ( type_5. method_7 ( string_1 ) ). method_8 ( ) ) ) ; var_2. method_9 ( ) ; return new java.util.date ( var_3. gettime ( ) ) ; }

************

************
tgt: private void method_1 ( int i , int j ) { if ( j < ( n ) ) { int var_1 = method_2 ( i , ( j + 1 ) ) ; if ( method_3 ( var_1 ) ) { var_2 . method_4 ( var_1 , method_2 ( i , j ) ) ; } } }
[0]: private java.lang.string method_1 ( java.lang.string name ) { type_1 var_1 = new type_1 ( name ) ; java.lang.string var_2 = string_1 ; try { type_2 var_3 = new type_2 ( var_1. method_2 ( ) ) ; java.lang.string line ; while ( ( line = var_3. method_3 ( ) )!= null ) var_2 += line ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 [ ] var_1 ) { var_2 = var_1 ; if ( ( var_1 . length ) == 0 ) { var_3 = true ; var_2 = new type_1 [ ] { null } ; } else { var_3 = false ; } type_2 var_4 = new type_2 ( getactivity ( ) , var_2 ) ; method_2 ( var_4 ) ; }
[0]: public void method_1 ( int index, type_1 var_1 ) { if ( ( index == ( - int_1 ) ) || ( ( var_2 [ index ] ) == null ) ) return ; if ( ( var_2 [ index ] ) == var_1 ) { var_2 [ index ] = null ; method_2 ( var_3 [ index ], var_1 ) ; for ( int i = 0 ; i < int_2 ; i ++ ) { method_1 ( var_4 [ ( ( int_2 * index ) + i ) ], var_1 ) ; } } }

************

************
tgt: public void method_1 ( final java.lang.float var_1 ) { if ( var_1 >= 1.0 ) { type_1 . method_2 ( listener , null ) ; } else { float var_2 = ( ( float ) ( var_1 + float_1 ) ) ; if ( var_2 > 1.0 ) var_2 = ( ( float ) ( 1.0 ) ) ; method_3 ( var_2 , listener ) ; type_1 . method_2 ( listener , null ) ; } }
[0]: public void method_1 ( double x ) { double var_1 = x ; for ( int i = 0 ; i < ( this. var_2 ) ; i ++ ) { var_1 = var_1 * x ; } this. var_3 = ( this. var_4 ) + var_1 ; if (! ( method_2 ( ) ) ) { method_1 ( x ) ; } else { return ; } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( var_1 . getid ( ) ) ; var_2 . method_3 ( var_1 . method_4 ( ) ) ; var_2 . method_5 ( var_1 . gettype ( ) . name ( ) ) ; var_2 . method_7 ( var_1 . method_8 ( ) ) ; var_2 . method_9 ( var_1 . method_10 ( ) ) ; var_2 . method_11 ( var_1 . method_12 ( ) ) ; return var_2 ; }
[0]: public void execute ( ) { type_1. method_1 ( var_1. id ) ; if ( var_2 ) { type_2. method_2 ( ). method_3 ( var_3, var_1, var_4. title, var_5 ) ; type_3. method_4 ( var_1. id, var_3. name, var_5 ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 type , type_1 var_1 ) { type_3 < type_1 > var_2 = var_3 . method_2 ( type ) ; if ( var_2 . method_3 ( ) ) { type_4 . put ( type , var_2 . get ( ) ) ; return var_2 . get ( ) ; } else { var_3 . method_4 ( var_1 ) ; type_4 . put ( type , var_1 ) ; return var_1 ; } }
[0]: private void fail ( final java.lang.throwable t ) { var_1. method_1 ( string_1 ) ; synchronized ( this ) { var_1. method_1 ( string_2 ) ; if (! ( var_2 ) ) { var_2 = true ; if ( ( var_3 )!= null ) { var_3. method_2 ( true ) ; } method_3 ( t ) ; } } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = this . var_2 ; if ( var_1 == null ) { return ; } synchronized ( var_1 . method_2 ( ) ) { if ( ( ( this . var_3 ) && ( method_3 ( ) ) ) && ( ! ( this . var_4 ) ) ) { method_4 ( ) ; this . var_4 = true ; this . var_2 . method_5 ( this ) ; return ; } this . var_4 = false ; method_6 ( true , true ) ; } }
[0]: protected void method_1 ( type_1 t, boolean var_1 ) { super. method_1 ( t, var_1 ) ; if ( t!= null ) { settext ( t. method_2 ( ). substring ( type_2. method_3 ( ). length ( ) ) ) ; } else { settext ( string_3 ) ; settext ( string_4 ) ; } }

************

************
tgt: public void method_1 ( ) { java.util.date date = new java.util.date ( ) ; java.util.date var_1 = type_1 . method_2 ( date ) ; java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2 . method_3 ( var_1 ) ; type_2 . assertequals ( var_2 . get ( var_3 ) , 0 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1, var_2 ) ; method_3 ( var_3 ) ; method_4 ( var_4, var_3 ) ; assertnotnull ( string_1, method_5 ( var_1 ) ) ; method_2 ( var_1, var_5 ) ; method_6 ( string_2, method_5 ( var_1 ) ) ; }

************

************
tgt: public void execute ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { switch ( var_1 . method_1 ( i ) ) { case var_2 : case var_3 : if ( ! ( method_2 ( var_1 . method_1 ( i ) ) ) ) { return ; } break ; case var_4 : case var_5 : method_3 ( var_1 . method_1 ( i ) ) ; break ; } } }
[0]: java.lang.long method_1 ( type_1 < java.lang.integer > var_1, type_2 operation ) { if ( operation == null ) { method_2 ( var_1 ) ; } else if ( operation. equals ( var_2 ) ) { return method_3 ( var_1 ) ; } else if ( operation. equals ( var_3 ) ) { return method_4 ( var_1 ) ; } else if ( operation. equals ( var_4 ) ) { return method_5 ( var_1 ) ; } return 0l ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 ) { type_1 var_5 = new type_1 ( ) ; var_5 . method_2 ( var_1 ) ; var_5 . method_3 ( var_2 ) ; var_5 . method_4 ( var_3 ) ; if ( var_4 != null ) { var_5 . method_7 ( var_4 ) ; } var_7 . method_8 ( var_5 ) ; return string_1 ; }
[0]: public static int method_1 ( ) { int var_1 = var_2. method_2 ( ) ; if ( ( var_2. method_2 ( ) ) == 0 ) { return var_3. getid ( ) ; } else if ( ( var_2. method_2 ( ) ) == 1 ) { return var_4. getid ( ) ; } else if ( ( var_2. method_2 ( ) ) == int_1 ) { return var_5. getid ( ) ; } return 0 ; }

************

************
tgt: public void remove ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = null ; try { var_3 = var_2 . method_1 ( var_1 . getclass ( ) ) ; var_3 . delete ( var_1 ) ; } catch ( type_4 var_4 ) { var_4 . method_2 ( ) ; } finally { if ( var_3 != null ) { var_2 . method_3 ( ) ; var_2 = null ; } } }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1, type_2 { var_1 = new type_3 ( var_2, var_3. method_2 ( ). method_3 ( ). tostring ( ) ) ; var_4. settext ( var_5 ) ; type_4. method_4 ( ). var_6. put ( string_1, type_5. method_5 ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( ) { assert var_1 . method_2 ( ) ; if ( ( var_2 ) != null ) { if ( ( ( var_3 ) == ( var_4 ) ) && ( ( var_5 ) == ( var_6 ) ) ) { method_3 ( var_7 . method_4 ( ) ) ; } else { method_5 ( var_8 ) ; } } else { method_6 ( ) ; } }
[0]: public boolean equals ( java.lang.object obj ) { if ( obj == null ) { return false ; } if ( ( getclass ( ) )!= ( obj. getclass ( ) ) ) { return false ; } final type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( this. var_2 )!= ( var_3 ) ) { return false ; } if (! ( type_2. equals ( this. var_4, var_5 ) ) ) { return false ; } return true ; }

************

************
tgt: private type_1 < java.lang.integer > method_1 ( ) { type_1 < java.lang.integer > var_1 ; if ( ( type_2 . method_2 ( ) ) != null ) { var_1 = type_3 . method_3 ( ) ; for ( int i = 0 ; i < ( type_2 . method_2 ( ) . method_4 ( ) . length ) ; i ++ ) { java.lang.system.out.println ( i ) ; var_1 . add ( i ) ; } } else { var_1 = type_3 . method_3 ( 0 ) ; } return var_1 ; }
[0]: public boolean method_1 ( final type_1 var_1 ) { if ( ( var_2. method_2 ( ) ) || ( var_3. method_2 ( ) ) ) { return false ; } return ( type_1. method_3 ( var_4 ) ) || ( type_1. method_3 ( var_5 ) ) ; }

************

************
tgt: public java.util.list < type_2 > method_1 ( java.lang.string var_1 , int [ ] var_2 ) throws type_1 , java.io.ioexception { java.util.list < type_2 > var_3 = new type_3 ( ) . method_2 ( new type_4 ( var_1 ) , string_1 ) ; method_3 ( var_2 , var_3 ) ; type_5 . assertequals ( var_1 , method_4 ( var_3 ) ) ; return var_3 ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { var_3. info ( string_1, var_1 ) ; java.util.date date = new java.util.date ( ) ; type_3 var_4 = type_3. method_2 ( var_5, var_5, var_1 ) ; java.lang.string var_6 = var_4. format ( date ) ; var_2. method_3 ( string_2, var_6 ) ; return string_3 ; }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string url = null ; try { url = var_1 . method_2 ( var_2 ) ; } catch ( type_1 var_3 ) { type_2 . method_3 ( ( ( string_1 + ( var_4 ) ) + ( var_3 . method_4 ( ) ) ) , var_3 ) ; return url ; } catch ( java.lang.exception var_3 ) { type_2 . error ( ( ( string_2 + ( var_4 ) ) + ( var_3 . method_4 ( ) ) ) , var_3 ) ; } return url ; }
[0]: public void method_1 ( int position ) { switch ( position ) { case 0 : method_2 ( var_1 ). method_3 ( var_2 ) ; var_3. method_3 ( var_4 ) ; break ; case 1 : method_2 ( var_1 ). method_3 ( var_4 ) ; var_3. method_3 ( var_2 ) ; method_4 ( ) ; break ; case int_1 : type_1. method_5 ( this, string_1, var_5 ). show ( ) ; break ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; this . var_2 = var_1 . getboolean ( string_1 ) ; this . var_3 = var_1 . getboolean ( string_2 ) ; if ( var_2 ) { var_4 = int_1 * ( var_5 ) ; } else var_4 = var_5 ; this . var_6 . method_2 ( var_4 ) ; }
[0]: public boolean method_1 ( int var_1, int var_2, long var_3, boolean var_4 ) { long var_5 = type_1. method_2 ( var_1, var_2 ) ; if ( method_3 ( ) ) { java.lang.long result = ( var_4 )? var_6. put ( var_3, var_5 ) : var_6. remove ( var_3 ) ; return result!= null ; } else { return var_4? var_7. add ( var_5 ) : var_7. remove ( var_5 ) ; } }

************

************
tgt: void method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( ! ( method_2 ( var_1 ) . contains ( var_2 ) ) ) { java.lang.string var_3 = var_4 . method_3 ( string_1 ) ; method_4 ( ) . method_5 ( var_1 , var_2 , string_1 , var_3 ) ; } }
[0]: public boolean method_1 ( type_1 item ) { int id = item. method_2 ( ) ; switch ( id ) { case var_1 : type_2. method_3 ( string_1, type_3. method_4 ( this ) ) ; type_3. method_5 ( this ) ; return true ; } if ( id == ( var_2 ) ) { return true ; } return super. method_1 ( item ) ; }

************

************
tgt: private void method_1 ( int var_1 , final int var_2 ) { if ( var_1 > 0 ) { type_1 var_3 = new type_1 ( ) { public void method_2 ( ) { method_3 ( var_2 , int_1 ) ; } } ; var_4 . method_4 ( var_3 , type_2 . method_5 ( var_1 ) ) ; } else method_3 ( var_2 , int_1 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) )!= ( method_2 ( ) ) ) { return false ; } if ( ( var_1. method_3 ( ) ) > ( this. method_3 ( ) ) ) { return false ; } return true ; }

************

************
tgt: public void method_1 ( type_1 name ) { if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name ) ) ) ) { this . name . method_2 ( ) . remove ( this ) ; } if ( ( name != null ) && ( ! ( name . equals ( this . name ) ) ) ) { name . method_2 ( ) . add ( this ) ; } this . name = name ; }
[0]: public synchronized void method_1 ( int var_1, java.lang.string message ) { try { type_1 var_2 = var_3. method_2 ( ) ; type_2 var_4 = var_5 [ var_1 ] ; var_2. method_3 ( var_2. method_4 ( ), message, var_4 ) ; var_2. method_3 ( var_2. method_4 ( ), message, var_4 ) ; } catch ( type_3 var_6 ) { java.lang.system.err.println ( var_6 ) ; } }

************

************
tgt: public void method_1 ( final type_1 var_1 , final int var_2 ) { if ( this . method_3 ( var_1 ) ) { return ; } var_1 . method_2 ( new type_2 ( ) { public type_3 method_3 ( type_1 var_1 ) { boolean var_3 = var_4 this . method_3 ( var_1 ) ; if ( ( ! var_3 ) && ( ( var_1 . method_4 ( ) ) > var_2 ) ) { return var_5 ; } else { return var_3 ? var_6 : var_7 ; } } } ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { var_1 = new java.util.arraylist < > ( ) ; type_1. method_2 ( new java.io.file ( var_2 ) ) ; var_3 = new type_2 ( var_2 ) ; var_4 = new type_3 ( new type_4 ( var_5 ), new type_5 ( var_5 ), new type_6 ( var_5 ), var_3, var_6 ) ; var_7 = new type_7 ( var_8, string_1, var_1 ) ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { type_2 . set ( var_1 . method_2 ( ) ) ; type_3 var_2 = type_4 . method_3 ( ) ; boolean contains = true ; try { type_1 item = var_2 . method_4 ( var_3 class , var_1 . method_5 ( ) ) ; if ( item == null ) { contains = false ; } } finally { } return contains ; }
[0]: public void method_1 ( ) { method_2 ( false ) ; this. var_1 = new java.util.linkedlist < type_1 > ( ) ; this. var_2 = new java.util.arraylist ( ) ; this. var_3 = null ; this. var_4 = null ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; var_5 = false ; var_6 = new type_2 ( int_1, int_2, false ) ; method_9 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 instanceof type_3 ) { var_1 . method_2 ( ( ( type_3 ) ( var_2 ) ) . getcolor ( ) ) ; var_4 . method_3 ( var_1 ) ; } if ( var_2 instanceof type_4 ) { var_1 . method_4 ( ( ( type_4 ) ( var_2 ) ) . name ) ; var_4 . method_3 ( var_1 ) ; } }
[0]: public void init ( ) { var_1 = new type_1 ( this, string_1, var_2 ) ; var_3 = new type_1 ( this, string_2 ) ; var_4 = new type_1 ( this, string_3 ) ; this. var_5. method_1 ( var_6, var_7, var_8, this. var_1 ) ; this. var_5. method_2 ( var_9, var_7, this. var_3 ) ; this. var_5. method_2 ( var_10, var_7, this. var_4 ) ; }

************

************
tgt: public void init ( ) { var_1 . info ( string_1 ) ; try { var_1 . info ( string_2 , method_2 ( ) , var_2 ) ; java.util.properties var_3 = new java.util.properties ( ) ; var_1 . info ( string_3 , method_2 ( ) ) ; } catch ( java.lang.exception var_4 ) { var_1 . error ( string_4 , var_4 ) ; if ( var_4 instanceof type_1 ) { throw ( ( type_1 ) ( var_4 ) ) ; } throw new type_1 ( var_4 ) ; } }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 ; java.lang.string message = string_1 + var_1 ; var_2 = type_1. method_2 ( null, message ) ; var_3. setvalue ( int_1 ) ; java.lang.system.out.println ( ( string_2 + var_1 ) ) ; java.lang.system.out.println ( ( string_3 + var_2 ) ) ; return var_2 ; }

************

************
tgt: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return var_1 ; case 1 : if ( ( var_3 ) != null ) { return var_3 ; } return var_3 = new type_2 ( ) ; case int_1 : return var_2 ; case int_2 : return var_4 ; default : return new type_3 ( ) ; } }
[0]: public int method_1 ( int position ) { if ( method_2 ( position ) ) { if ( ( var_1 ) == ( var_2 ) ) { var_1 = var_3 ; } } if ( ( ( method_3 ( position ) ) || ( method_4 ( position ) ) ) || ( method_2 ( position ) ) ) { return var_4. method_5 ( ) ; } if ( var_5!= null ) { return var_5. method_1 ( position ) ; } return 1 ; } }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_2 < ? > var_2 ) throws type_3 , java.io.ioexception { byte [ ] var_3 = var_2 . method_2 ( ) ; var_1 . method_4 ( var_4 , var_2 . method_5 ( ) ) ; if ( var_3 != null ) { var_1 . method_3 ( true ) ; type_4 out = new type_4 ( var_1 . method_6 ( ) ) ; out.write ( var_3 ) ; out . method_7 ( ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { int var_2 = type_2. getcolor ( method_2 ( ), var_3 ) ; if ( ( var_4 ) >= ( var_5 ) ) { type_3 var_6 = method_3 ( ) ; var_6. method_4 ( var_7 ) ; var_6. method_5 ( var_1. method_6 ( var_2 ) ) ; } }

************

************
tgt: public type_1 method_1 ( double var_1 ) { if ( var_1 == 0.0 ) { return new type_1 ( size ) ; } type_1 result = new type_1 ( size ) ; for ( int i : var_2 ) { result . set ( i , ( ( get ( i ) ) * var_1 ) ) ; } return result ; }
[0]: public java.util.set < type_1 > method_1 ( type_1 source ) { if ( source == ( var_1 ) ) { return type_2. method_2 ( source, var_2 ) ; } else if ( source == ( var_2 ) ) { return type_3. method_3 ( ) ; } else { return type_3. method_4 ( source ) ; } }

************

************
tgt: public void method_1 ( ) { try { if ( ( this . method_2 ( ) ) != null ) { type_1 var_1 = this . method_2 ( ) . method_3 ( var_2 ) ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; var_3 . method_4 ( var_1 , this ) ; } } catch ( type_2 var_4 ) { var_5 . method_5 ( var_6 , var_4 . method_6 ( ) , var_4 ) ; } }
[0]: private void method_1 ( type_1 var_1, boolean var_2, java.lang.string var_3 ) throws type_2 { var_4 = new type_3 ( var_5, 0, null ) ; type_4 var_6 = new type_5 ( var_1, var_2, var_3, var_7 ) ; method_2 ( var_1 ) ; var_4. method_3 ( var_8, var_9 ) ; var_4. method_3 ( var_9, var_10 ) ; method_4 ( var_4 ) ; }

************

************
tgt: private type_1 < type_2 > method_1 ( ) { java.util.list < type_2 > var_1 = new java.util.arraylist < > ( ) ; for ( int y = 0 ; y < ( var_2 . method_3 ( ) ) ; y ++ ) { for ( int x = 0 ; x < ( var_2 . method_2 ( ) ) ; x ++ ) { var_1 . add ( new type_2 ( y , x , ( - 1 ) ) ) ; } } return var_1 ; }
[0]: public void method_1 ( ) { var_1 = int_1 ; if ( ( ( var_2 )!= 1 ) || ( var_3. isempty ( ) ) ) { type_1 var_4 = method_2 ( ) ; var_3. method_3 ( ) ; var_3 = method_4 ( this. method_5 ( ), this. method_6 ( ), var_4. method_5 ( ), var_4. method_6 ( ) ) ; } method_7 ( var_3 ) ; var_2 = 1 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) != int_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 0 ) ; } type_1 . init ( args ) ; type_2 . method_1 ( var_1 , string_3 , var_2 , var_3 , var_4 ) ; type_1 . method_3 ( ) ; }
[0]: public type_1 method_1 ( type_1 source ) { int y = int_1 ; int x = 0 ; type_1 result = type_1. method_2 ( source, x, y, source. method_3 ( ), ( ( ( source. method_4 ( ) ) * int_2 ) / int_3 ) ) ; if ( result!= source ) { source. method_5 ( ) ; } return result ; }

************

************
tgt: public static java.util.date method_1 ( java.lang.class var_1 ) throws java.lang.nullpointerexception { type_2 var_2 = type_3 . method_3 ( ) . method_4 ( ) ; type_4 var_3 = ( ( type_4 ) ( var_2 . method_5 ( var_1 ) . method_6 ( type_5 . method_7 ( string_1 ) ) . method_8 ( ) ) ) ; var_2 . method_9 ( ) ; return new java.util.date ( var_3 . gettime ( ) ) ; }
[0]: public static void method_1 ( ) { var_1 = new type_1 ( ) ; var_1. method_2 ( var_2 ) ; var_1. method_2 ( var_3 ) ; var_1. method_3 ( var_2 ) ; var_1. method_3 ( var_3 ) ; var_1. method_4 ( var_2, string_1 ) ; var_1. method_4 ( var_3, string_2 ) ; var_1. method_5 ( var_3, string_3 ) ; var_1. method_6 ( var_2, var_3 ) ; var_1. method_7 ( var_2 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string name ) { type_1 var_1 = new type_1 ( name ) ; java.lang.string var_2 = string_1 ; try { type_2 var_3 = new type_2 ( var_1 . method_2 ( ) ) ; java.lang.string line ; while ( ( line = var_3 . method_3 ( ) ) != null ) var_2 += line + "\n" ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 event ) { var_1 = new java.io.file ( event. method_2 ( ), string_1 ) ; if (! ( var_2. method_3 ( ) ) ) var_2. method_4 ( ) ; var_3 = new java.io.file ( event. method_2 ( ), string_2 ) ; if (! ( var_3. method_3 ( ) ) ) var_3. method_4 ( ) ; var_4 = event. method_5 ( ) ; type_2. method_1 ( event ) ; }

************

************
tgt: public void method_1 ( int index , type_1 var_1 ) { if ( ( index < 0 ) || ( ( var_2 [ index ] ) == null ) ) return ; if ( ( var_2 [ index ] ) == var_1 ) { var_2 [ index ] = null ; method_2 ( var_3 [ index ] , var_1 ) ; for ( int i = 0 ; i < int_2 ; i ++ ) { method_1 ( var_4 [ ( ( int_2 * index ) + i ) ] , var_1 ) ; } } }
[0]: public void method_1 ( type_1 var_1, int position, java.lang.object var_2 ) { super. method_1 ( var_1, position, var_2 ) ; if ( ( ( ( method_2 ( ) )!= var_2 ) && ( var_2!= null ) ) && ( var_2 instanceof type_2 ) ) { var_3 = ( ( type_2 ) ( var_2 ) ) ; if (! ( var_4 ) ) { if ( var_3. method_3 ( ) ) { var_3. method_4 ( ) ; } } } } }

************

************
tgt: public void method_1 ( double x ) { double var_1 = x ; for ( int i = 0 ; i < ( this . var_2 ) ; i ++ ) { var_1 = var_1 * x ; } this . var_3 = ( this . var_4 ) + var_1 ; ( this . var_2 ) ++ ; if ( ! ( method_2 ( ) ) ) { method_1 ( x ) ; } else { return ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = type_2. method_2 ( ) ; var_2. method_3 ( var_3 ) ; var_2. method_4 ( int_1 ) ; if ( ( ( var_4 ) >= int_2 ) && ( ( type_3. method_5 ( method_6 ( ), var_5 ) ) == ( var_6 ) ) ) { type_4. method_7 ( var_7, var_2, this ) ; } }

************

************
tgt: public void execute ( ) { if ( var_2 ) { type_1 . method_1 ( var_1 . id ) ; type_2 . method_2 ( ) . method_3 ( var_3 , var_1 , var_4 . title , var_5 ) ; } type_3 . method_4 ( var_1 . id , var_3 . name , var_5 ) ; }
[0]: public boolean execute ( type_1 context ) { for ( type_2 var_1 : type_3. method_1 ( context. method_2 ( ) ). method_3 ( ) ) { type_4 var_2 = type_5. method_1 ( var_1 ). method_4 ( var_3 ). method_5 ( ). method_6 ( ) ; var_2. method_7 ( type_6. method_1 ( ). method_8 ( ) ) ; return true ; } return false ; }

************

************
tgt: private void fail ( final java.lang.throwable t ) { synchronized ( this ) { if ( ! ( var_2 ) ) { var_2 = true ; if ( ( var_3 ) != null ) { var_3 . method_2 ( true ) ; } method_3 ( t ) ; } } }
[0]: private type_1 method_1 ( int message ) { type_1 var_1 = null ; for ( java.util.map.entry < type_2, type_1 > var_2 : var_3. method_2 ( ) ) { type_1 value = var_2. getvalue ( ) ; if ( ( value. message ) == message ) { var_1 = value ; } } return var_1 ; }

************

************
tgt: protected void method_1 ( type_1 t , boolean var_1 ) { super . method_1 ( t , var_1 ) ; if ( t != null ) { settext ( t . method_2 ( ) . substring ( type_2 . method_3 ( ) . length ( ) ) ) ; } else { settext ( string_4 ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; type_2 var_2 = new type_2 ( ) ; var_3 = ( ( type_3 ) ( this. method_3 ( var_4 ) ) ) ; java.lang.string var_5 = var_3. method_4 ( var_2, true ) ; var_6 = var_3. method_5 ( var_5 ) ; method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1 , var_5 ) ; method_3 ( var_3 ) ; method_4 ( var_4 , var_3 ) ; assertnotnull ( string_1 , method_5 ( var_1 ) ) ; method_2 ( var_1 , var_5 ) ; method_6 ( string_2 , method_5 ( var_1 ) ) ; }
[0]: protected void method_1 ( ) { type_1 var_1 = method_2 ( ) ; var_1. method_3 ( true ) ; var_1. method_4 ( type_2. get ( ). method_5 ( ) ) ; var_1. method_6 ( var_2 ) ; var_1. method_7 ( false ) ; var_1. method_8 ( ) ; var_1. method_9 ( ) ; }

************

************
tgt: java.lang.long method_1 ( type_1 < java.lang.integer > var_1 , type_2 operation ) { if ( operation == null ) { return method_2 ( var_1 ) ; } else if ( operation . equals ( var_2 ) ) { return method_3 ( var_1 ) ; } else if ( operation . equals ( var_3 ) ) { return method_4 ( var_1 ) ; } else if ( operation . equals ( var_4 ) ) { return method_5 ( var_1 ) ; } java.lang.system.out.println ( string_1 ) ; return 0l ; }
[0]: public boolean method_1 ( boolean var_1, java.lang.string var_2, int var_3, int var_4 ) { if ( ( var_3 <= ( var_5. size ( ) ) ) && ( var_4 <= ( var_5. size ( ) ) ) ) { var_5. get ( var_3 ). getvalue ( ). add ( new type_1 ( var_1, var_2, var_3, var_4 ) ) ; return true ; } return false ; }

************

************
tgt: public static int method_1 ( ) { if ( ( var_2 . method_2 ( ) ) == 0 ) { return var_3 . getid ( ) ; } else if ( ( var_2 . method_2 ( ) ) == 1 ) { return var_4 . getid ( ) ; } else if ( ( var_2 . method_2 ( ) ) == int_1 ) { return var_5 . getid ( ) ; } return 0 ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, type_3 var_3, type_4 var_4, type_5 var_5 ) { if ( ( ( double ) ( var_3. method_2 ( var_2, var_4 ) ) )!= 0.0 ) { var_1. method_3 ( 1, var_5 ) ; } return true ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , type_1 , type_2 { if ( ( var_3 . method_2 ( ) . method_3 ( ) ) != null ) { var_1 = new type_3 ( var_2 , var_3 . method_2 ( ) . method_3 ( ) . tostring ( ) ) ; var_4 . settext ( var_5 ) ; type_4 . method_4 ( ) . var_6 . put ( string_1 , type_5 . method_5 ( string_1 ) ) ; } }
[0]: public void method_1 ( java.lang.string [ ] args ) { if ( ( args.length )!= 1 ) { view. method_2 ( new java.lang.string [ ] { string_1, string_2 } ) ; return ; } type_1. c string ; var_1 = args [ 0 ] ; java.io.file var_2 = null ; java.lang.string [ ] var_3 ; try { var_2 = new java.io.file ( var_1 ) ; var_3 = var_2. list ( ) ; view. method_3 ( var_3 ) ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj == null ) { return false ; } if ( ( getclass ( ) ) != ( obj . getclass ( ) ) ) { return false ; } final type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( this . var_2 ) != ( var_3 ) ) { return false ; } if ( ! ( this . var_4 . equals ( var_5 ) ) ) { return false ; } return true ; }
[0]: public static void method_1 ( android.content.context context ) { type_1 var_1 = context. method_2 ( string_1, var_2 ) ; type_2 var_3 = var_1. method_3 ( ) ; var_4. method_4 ( ) ; var_3. method_5 ( string_2, var_5 ) ; var_3. method_5 ( string_3, var_6 ) ; var_3. method_6 ( string_4, var_7 ) ; var_3. method_7 ( ) ; }

************

************
tgt: boolean method_1 ( final type_1 var_1 ) { if ( ( var_2 . method_2 ( ) ) || ( var_3 . method_2 ( ) ) ) { return false ; } if ( ( ! ( var_4 . method_1 ( ) ) ) || ( ! ( var_5 . method_1 ( ) ) ) ) { return false ; } return ( type_1 . method_3 ( var_4 ) ) || ( type_1 . method_3 ( var_5 ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { int var_2 = response. method_2 ( ) ; java.util.list < type_4 > var_3 = response. method_3 ( ). method_4 ( ) ; var_4. method_5 ( new type_5 ( var_3 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { java.util.date date = new java.util.date ( ) ; type_3 var_4 = type_3 . method_2 ( var_5 , var_5 , var_1 ) ; java.lang.string var_6 = var_4 . format ( date ) ; var_2 . method_3 ( string_2 , var_6 ) ; return string_3 ; }
[0]: private void method_1 ( ) { java.lang.string type = gettype ( ) ; if ( ( method_2 ( ). gettype ( ) )!= null ) { type += string_1 + ( method_2 ( ). gettype ( ) ) ; if ( ( method_2 ( ). method_3 ( ) )!= null ) { type += string_1 + ( method_2 ( ). method_3 ( ) ) ; } method_4 ( type ) ; } }

************

************
tgt: public void method_1 ( int position ) { switch ( position ) { case 0 : method_2 ( var_1 ) . method_3 ( var_2 ) ; var_3 . method_3 ( var_4 ) ; break ; case 1 : method_2 ( var_1 ) . method_3 ( var_4 ) ; var_3 . method_3 ( var_2 ) ; method_4 ( ) ; break ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; var_1. method_1 ( var_2 class ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( var_1. method_2 ( new java.io.file ( string_2 ) ) ) ; java.lang.system.out.println ( string_3 ) ; java.lang.system.out.println ( var_1. method_3 ( new type_2 ( string_4, java.util.arrays.aslist ( new type_3 ( int_1, int_2 ), new type_3 ( int_3, int_4 ) ) ) ) ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 , long var_3 , boolean var_4 ) { long var_5 = type_1 . method_2 ( var_1 , var_2 ) ; if ( method_3 ( ) ) { java.lang.long result = ( var_4 ) ? var_6 . put ( var_3 , var_5 ) : var_6 . remove ( var_3 ) ; return result != null ; } else { return var_4 ? ! ( var_7 . add ( var_5 ) ) : var_7 . remove ( var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) throws java.lang.exception { int status = type_4. method_2 ( var_2, string_1 ) ; java.lang.string var_4 = type_4. getstring ( var_2, string_2 ) ; type_5 var_5 = type_6. method_3 ( var_2, var_4 ) ; var_5. setvalue ( string_1, java.lang.string. method_4 ( status ) ) ; var_5. method_5 ( ) ; type_7. add ( var_2, string_3 ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { int id = item . method_2 ( ) ; switch ( id ) { case var_1 : type_2 . method_3 ( string_1 , type_3 . method_4 ( this ) ) ; type_3 . method_5 ( this ) ; return true ; case var_2 : return true ; } return super . method_1 ( item ) ; }
[0]: private type_1 method_1 ( int index ) throws type_2 { int var_1 = 0 ; type_1 var_2 = var_3 ; while ( ( ( var_4 )!= null ) && ( var_1 < index ) ) { ++ var_1 ; var_2 = var_4 ; } if ( var_2 == null ) { throw new type_2 ( ( string_1 + index ) ) ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) != ( method_2 ( ) ) ) { return false ; } if ( ( var_1 . method_3 ( ) ) < ( this . method_3 ( ) ) ) { return false ; } return true ; }
[0]: public void start ( java.lang.string var_1 ) { type_1. method_1 ( var_1 ) ; var_2 = new type_2 ( var_3, var_4, var_5 ) ; var_6 = new type_3 ( var_1, var_2 ) ; type_4. method_2 ( var_4 ) ; var_6. method_3 ( ) ; method_4 ( ) ; }

************

************
tgt: public synchronized void method_1 ( int var_1 , java.lang.string message ) { try { type_1 var_2 = var_3 . method_2 ( ) ; var_2 . method_3 ( var_2 . method_4 ( ) , message , var_5 [ var_1 ] ) ; } catch ( type_3 var_6 ) { java.lang.system.err.println ( var_6 ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1, final java.lang.string var_2 ) { java.util.list < type_2 > var_3 = var_4. method_2 ( ) ; java.util.list < type_3 > var_5 = var_6. method_3 ( var_2 ) ; var_1. put ( string_1, new type_4 ( var_5, var_3 ) ) ; return string_2 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 = new java.util.arraylist < > ( ) ; type_1 . method_2 ( new java.io.file ( var_2 ) ) ; var_3 = new type_2 ( var_2 ) ; var_4 = new type_3 ( new type_4 ( var_5 ) , new type_5 ( var_5 ) , new type_6 ( var_5 ) , var_3 ) ; var_7 = new type_7 ( var_8 , string_1 , var_1 ) ; }
[0]: public long method_1 ( long position ) { long var_1 = var_2 ; if ( method_2 ( ) ) { for ( type_1 var_3 : var_4. method_3 ( ) ) { if ( ( var_3. method_4 ( ) ) > position ) { var_1 = var_3. method_4 ( ) ; break ; } } } return var_1 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( false ) ; this . var_1 = new java.util.arraylist ( ) ; this . var_2 = new java.util.arraylist ( ) ; this . var_3 = null ; this . var_4 = null ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; var_5 = false ; var_6 = new type_2 ( int_1 , int_2 , false ) ; method_9 ( ) ; }
[0]: public void method_1 ( ) { if ( method_2 ( ) ) { var_1. method_3 ( var_2 ) ; var_2. method_4 ( ) ; } ( var_3 ) ++ ; end = - 1 ; var_4 = ( var_1. isempty ( ) ) && ( var_5. isempty ( ) ) ; var_1. method_3 ( var_2 ) ; }

************

************
tgt: public void init ( ) { var_1 = new type_1 ( this , string_1 , var_2 ) ; var_3 = new type_1 ( this , string_2 ) ; var_4 = new type_1 ( this , string_3 , var_2 ) ; this . var_5 . method_1 ( var_6 , var_7 , var_8 , this . var_1 ) ; this . var_5 . method_2 ( var_9 , var_7 , this . var_3 ) ; this . var_5 . method_2 ( var_10 , var_7 , this . var_4 ) ; }
[0]: private type_1 method_1 ( ) { if ( ( method_2 ( ). method_3 ( ). length ) == 0 ) return var_1 ; type_2 var_2 = method_2 ( ). method_3 ( ) [ 0 ] ; type_1 var_3 = var_2. get ( 0 ) ; if ( var_3. method_4 ( ) ) return var_1 ; return var_3 ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = null ; java.lang.string message = string_1 + var_1 ; var_2 = type_1 . method_2 ( null , message ) ; var_3 . setvalue ( int_1 ) ; java.lang.system.out.println ( ( string_2 + var_1 ) ) ; java.lang.system.out.println ( ( string_3 + var_2 ) ) ; return var_2 ; }
[0]: private void method_1 ( ) { boolean var_1 = method_2 ( ). method_3 ( ) ; if ( var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_3. method_4 ( var_4 ) ) ) ; var_5. method_5 ( var_2, true ) ; } else { method_6 ( ) ; } }

************

************
tgt: public int method_1 ( int position ) { if ( ( ( method_3 ( position ) ) || ( method_4 ( position ) ) ) || ( method_2 ( position ) ) ) { return var_4 . method_5 ( ) ; } if ( var_5 != null ) { return var_5 . method_1 ( position ) ; } return 1 ; }
[0]: public void method_1 ( double var_1 ) { double sum = ( var_2 ) + ( ( var_3 ) / float_1 ) ; sum -= var_1 ; var_2 = ( ( int ) ( sum ) ) ; var_3 = ( ( int ) ( ( sum - ( var_2 ) ) * int_1 ) ) ; }

************

************
tgt: private void method_5 ( type_1 var_1 ) { int var_2 = type_2 . getcolor ( method_2 ( ) , var_3 ) ; if ( ( var_4 ) >= ( var_5 ) ) { type_3 var_6 = method_3 ( ) ; var_6 . method_4 ( var_7 ) ; var_6 . method_5 ( var_1 . method_6 ( var_2 ) ) ; } }
[0]: public void method_1 ( ) { final type_1 var_1 = new type_1 ( java.lang.thread. method_2 ( ). getid ( ), var_2, var_3, var_4 ) ; var_1. method_3 ( var_5, var_6. get ( ), ( ( type_2. method_4 ( ) ) + var_7 ) ) ; var_6. update ( var_8. method_5 ( ) ) ; }

************

************
tgt: public java.util.set < type_1 > method_1 ( type_1 source ) { if ( source . equals ( var_1 ) ) { return type_2 . method_2 ( source , var_2 ) ; } else if ( source . equals ( var_2 ) ) { return type_3 . method_3 ( ) ; } else { return type_3 . method_4 ( source ) ; } }
[0]: public void init ( java.lang.string var_1, int var_2, int var_3, type_1 < java.lang.string > var_4 ) throws java.io.ioexception { type_2 var_5 = new type_2 ( ) ; var_5. method_1 ( new type_3 ( var_3 ) ) ; var_5. method_2 ( new type_3 ( var_1, var_2 ) ) ; this. out = new type_4 ( var_5. method_3 ( ) ) ; type_5 var_6 = new type_6 ( var_5. method_4 ( ), var_4, var_7 ) ; new java.lang.thread ( var_6 ). start ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , boolean var_2 , java.lang.string var_3 ) throws type_2 { var_4 = new type_3 ( var_5 , 0 , null ) ; method_2 ( var_1 ) ; var_4 . method_3 ( var_8 , var_9 ) ; var_4 . method_3 ( var_9 , var_10 ) ; method_4 ( var_4 ) ; }
[0]: public final void method_1 ( int var_1 ) { if ( var_1 <= 0 ) { throw new type_1 ( string_1 ) ; } this. var_1 = var_1 ; var_2 = int_1 / ( ( double ) ( var_1 ) ) ; var_3. method_2 ( ). method_3 ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = int_1 ; if ( ( ( var_2 ) != 1 ) || ( var_3 . isempty ( ) ) ) { type_1 var_4 = method_2 ( ) ; var_3 . method_3 ( ) ; if ( var_4 != null ) { var_3 = method_4 ( this . method_5 ( ) , this . method_6 ( ) , var_4 . method_5 ( ) , var_4 . method_6 ( ) ) ; } } method_7 ( var_3 ) ; var_2 = 1 ; }
[0]: public static synchronized void method_1 ( ) throws java.io.ioexception { java.io.file var_1 = type_1. method_2 ( ( ( type_2. method_3 ( ) ) + ( var_2 ) ) ) ; try ( java.io.fileoutputstream out = new java.io.fileoutputstream ( var_1 ) ) { var_3. method_4 ( out, string_1 ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 source ) { int y = ( source . method_4 ( ) ) / int_3 ; int x = 0 ; type_1 result = type_1 . method_2 ( source , x , y , source . method_3 ( ) , ( ( ( source . method_4 ( ) ) * int_2 ) / int_3 ) ) ; if ( result != source ) { source . method_5 ( ) ; } return result ; }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1. method_3 ( ) ). method_4 ( true ) ; method_2 ( var_2. method_5 ( method_6 ( var_3 class ), method_6 ( var_3 class ), method_6 ( var_3 class ), method_6 ( var_3 class ), method_6 ( var_3 class ) ) ). method_4 ( true ) ; var_4. method_7 ( ) ; var_4. method_8 ( ) ; assertequals ( var_5, var_4. method_9 ( ) ) ; }

************

************
tgt: public static void method_1 ( ) { var_1 = new type_1 ( ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_2 ( var_3 ) ; var_1 . method_4 ( var_2 , string_1 ) ; var_1 . method_4 ( var_3 , string_2 ) ; var_1 . method_5 ( var_3 , string_3 ) ; var_1 . method_6 ( var_2 , var_3 ) ; var_1 . method_7 ( var_2 ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { type_4 var_4 = type_4. get ( var_3 ) ; if ( var_4. method_2 ( ) ) { if (! ( var_5 ) ) var_3. method_3 ( new type_5 ( string_1 ) ) ; } else { if (! ( var_5 ) ) { if (! ( var_6 ) ) ( var_7 ) -- ; var_4. method_4 ( ) ; type_6. method_5 ( ) ; } } return var_1 ; } return null ; }

************

************
tgt: public void method_1 ( type_1 event ) { var_2 = new java.io.file ( event . method_2 ( ) , string_1 ) ; if ( ! ( var_2 . method_3 ( ) ) ) var_2 . method_4 ( ) ; var_3 = new java.io.file ( event . method_2 ( ) , string_2 ) ; if ( ! ( var_3 . method_3 ( ) ) ) var_3 . method_4 ( ) ; var_4 = event . method_5 ( ) ; type_2 . method_1 ( event ) ; }
[0]: public java.util.list < type_1 > method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_3 : var_4. method_2 ( java.lang.integer. method_3 ( var_1 ) ) ) { var_2. method_4 ( method_5 ( var_1, var_3 ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position , java.lang.object var_2 ) { super . method_1 ( var_1 , position , var_2 ) ; if ( ( ( ( method_2 ( ) ) != var_2 ) && ( var_2 != null ) ) && ( var_2 instanceof type_2 ) ) { var_3 = ( ( type_2 ) ( var_2 ) ) ; if ( ! ( var_4 ) ) { if ( var_3 . method_3 ( ) ) { var_3 . method_4 ( true ) ; } } } }
[0]: public static type_1 method_1 ( java.lang.string var_1, java.util.properties var_2 ) { type_1 var_3 = var_4. get ( var_1 ) ; if ( var_3 == null ) { var_3 = new type_1 ( var_2 ) ; type_1 var_5 = var_4. method_2 ( var_1, var_3 ) ; if ( var_3!= var_5 ) { var_3. method_3 ( ) ; } return var_5 ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = type_2 . method_2 ( ) ; var_2 . method_3 ( var_3 ) ; var_2 . method_4 ( int_1 ) ; if ( ( type_3 . method_5 ( method_6 ( ) , var_5 ) ) == ( var_6 ) ) { type_4 . method_7 ( var_7 , var_2 , this ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_3 = null ; if ( var_4. method_2 ( var_5 ) ) { var_3 = type_5. method_3 ( ). method_4 ( ). get ( var_1. method_5 ( ) ). method_6 ( ) ; } return var_3 ; }

************

************
tgt: public boolean execute ( type_1 context ) { for ( type_2 var_1 : type_3 . method_1 ( context . method_2 ( ) ) . method_3 ( ) ) { type_4 var_2 = type_5 . method_1 ( var_1 ) . method_4 ( var_3 ) . method_5 ( ) . method_6 ( ) ; var_2 . method_7 ( type_6 . method_1 ( ) . method_8 ( ) . tostring ( ) ) ; } return true ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2 ) { if ( ( ( var_3 ) == int_1 ) || ( ( ( var_4 )!= 0 ) && ( ( var_5 ) == ( var_1. id ) ) ) ) { var_6 = true ; } } }

************

************
tgt: public type_1 method_1 ( int message ) { type_1 var_1 = null ; for ( java.util.map.entry < type_2 , type_1 > var_2 : var_3 . method_2 ( ) ) { type_1 value = var_2 . getvalue ( ) ; if ( ( value . message ) == message ) { var_1 = value ; } } return var_1 ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = type_1. method_2 ( ). method_3 ( ) ; var_2 = type_1. method_2 ( ). method_4 ( ) ; var_3 = type_1. method_2 ( ). method_5 ( ) ; var_4. put ( var_5, var_3 ) ; var_4. put ( var_6, var_1 ) ; var_4. put ( var_7, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; type_2 var_2 = new type_2 ( ) ; var_3 = ( ( type_3 ) ( this . method_3 ( var_4 ) ) ) ; java.lang.string var_5 = var_3 . method_4 ( var_2 , true ) ; method_6 ( ) ; }
[0]: private java.lang.string method_1 ( ) { final java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1. append ( string_1 ). append ( var_2 ) ; var_1. append ( string_2 ). append ( var_2 ) ; var_1. append ( string_3 ). append ( var_2 ) ; var_1. append ( string_4 ). append ( var_2 ) ; return var_1. tostring ( ) ; }

************

************
tgt: protected void method_1 ( ) { type_1 var_1 = method_2 ( ) ; var_1 . method_3 ( true ) ; var_1 . method_4 ( type_2 . get ( ) . method_5 ( ) ) ; var_1 . method_6 ( var_2 ) ; var_1 . method_7 ( false ) ; var_1 . method_8 ( ) ; }
[0]: private void method_1 ( ) { method_2 ( ) ; method_3 ( new type_1 ( ) { public void method_4 ( ) { var_1. method_5 ( new type_1 ( ) { public void method_4 ( ) { var_2. method_6 ( ) ; } }, int_1 ) ; method_7 ( ) ; } } ) ; }

************

************
tgt: public boolean method_1 ( boolean var_1 , java.lang.string var_2 , int var_3 , int var_4 ) { if ( ( var_3 < ( var_5 . size ( ) ) ) && ( var_4 < ( var_5 . size ( ) ) ) ) { var_5 . get ( var_3 ) . getvalue ( ) . add ( new type_1 ( var_1 , var_2 , var_3 , var_4 ) ) ; return true ; } return false ; }
[0]: private java.util.list < java.lang.integer > method_1 ( type_1 var_1 ) { java.util.list < java.lang.integer > var_2 = new java.util.arraylist < > ( ) ; for ( java.lang.integer var_3 : var_4. method_2 ( ) ) { if (! ( var_4. get ( var_3 ). method_3 ( ) ) ) continue ; if ( var_1. method_4 ( var_3 ) ) { var_2. add ( var_3 ) ; } } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , type_4 var_4 , type_5 var_5 ) { if ( ( ( double ) ( var_3 . method_2 ( var_2 , var_4 ) ) ) != 0 ) { var_1 . method_3 ( 1 , var_5 ) ; } return true ; }
[0]: public void init ( type_1 var_1 ) { this. var_1 = var_1 ; final java.util.list < java.lang.string > var_2 = type_2. method_1 ( var_3 ) ; java.lang.string var_4 = var_3 ; this. var_1. method_2 ( var_2, var_4 ) ; for ( type_3 var_5 : var_6 ) { this. var_1. method_3 ( var_5 ) ; } this. var_1 = new java.util.arraylist < java.lang.string > ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string [ ] args ) { if ( ( args.length ) != 1 ) { view . method_2 ( new java.lang.string [ ] { string_1 , string_2 } ) ; return ; } java.lang.string var_1 = args [ 0 ] ; java.io.file var_2 = null ; java.lang.string [ ] var_3 ; try { var_2 = new java.io.file ( var_1 ) ; var_3 = var_2 . list ( ) ; view . method_3 ( var_3 ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } }
[0]: public type_1 method_1 ( ) { if ( type_2. method_2 ( type_3. method_3 ( ) ) ) { return type_4. method_1 ( var_1, type_3. method_3 ( ) ) ; } else { if ( ( method_4 ( ) )!= null ) { type_1 <? > t = method_4 ( ). method_5 ( ) ; method_6 ( t ) ; return t ; } } return null ; } }

************

************
tgt: public static void method_1 ( android.content.context context ) { type_1 var_1 = context . method_2 ( string_1 , var_2 ) ; type_2 var_3 = var_1 . method_3 ( ) ; var_3 . method_5 ( string_2 , var_5 ) ; var_3 . method_5 ( string_3 , var_6 ) ; var_3 . method_6 ( string_4 , var_7 ) ; var_3 . method_7 ( ) ; }
[0]: public void method_1 ( java.lang.string response ) { type_1 var_1 = new type_2 ( ). method_2 ( var_2 class, new type_3 ( ) ). method_3 ( ) ; type_4 var_3 = var_1. method_4 ( response, var_2 class ) ; var_4. method_5 ( var_3 ) ; method_6 ( ) ; if ( var_3. method_7 ( ) ) { method_8 ( var_5 ) ; } else if ( var_3. method_9 ( ) ) { method_8 ( var_6 ) ; } }

************

************
tgt: public void method_1 ( type_1 < java.util.list < type_4 > > var_1 , type_3 < java.util.list < type_4 > > response ) { int var_2 = response . method_2 ( ) ; java.util.list < type_4 > var_3 = response . method_3 ( ) ; var_4 . method_5 ( new type_5 ( var_3 ) ) ; }
[0]: public static type_1 method_1 ( android.content.context context, java.lang.string filename, java.lang.string var_1, java.lang.string... var_2 ) { type_2 var_3 = type_3. method_2 ( context, var_1, var_2 ) ; if ( var_3 == null ) return null ; type_2 file = var_3. method_3 ( filename ) ; return type_3. method_1 ( context, file. method_4 ( ), true ) ; }

************

************
tgt: private void method_1 ( java.lang.string type ) { if ( ( method_2 ( ) . gettype ( ) ) != null ) { type += string_1 + ( method_2 ( ) . gettype ( ) ) ; if ( ( method_2 ( ) . method_3 ( ) ) != null ) { type += string_1 + ( method_2 ( ) . method_3 ( ) ) ; } } method_4 ( type ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ). method_3 ( var_2, false, 1 ) ; type_3 var_3 = type_4. method_4 ( 1, int_1 ) ; var_3. method_5 ( true ) ; var_4. method_6 ( var_5, 1, var_3, var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.lang.exception { type_2 . method_2 ( var_2 , string_1 ) ; type_3 var_3 = new type_3 ( ) ; var_3 . put ( string_2 , var_1 . method_3 ( ) ) ; byte [ ] var_5 = var_1 . getdata ( ) ; java.lang.string var_6 = type_5 . method_4 ( var_5 , var_7 ) ; var_3 . put ( string_3 , var_6 ) ; var_8 . method_5 ( var_3 . tostring ( ) ) ; }
[0]: private void method_1 ( java.lang.string var_1, type_1 var_2 ) { var_3. info ( string_1, var_1 ) ; type_2 < type_1 > var_4 = var_5. get ( var_1 ) ; if ( var_4 == null ) var_5. put ( var_1, type_2. method_2 ( method_3 ( ), var_2 ) ) ; else if (! ( var_4. contains ( var_2 ) ) ) { type_2 < type_1 > var_6 = var_4. method_4 ( var_2 ) ; var_5. put ( var_1, var_6 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; var_1 . method_1 ( var_2 class ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( var_1 . method_2 ( new java.io.file ( string_2 ) ) ) ; java.lang.system.out.println ( string_3 ) ; }
[0]: public boolean method_1 ( type_1 item ) { if ( ( var_1 ) > 0 ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { if ( ( var_2 [ i ] ) == item ) { for ( int j = i + 1 ; j < ( var_1 ) ; j ++ ) { var_2 [ ( j - 1 ) ] = var_2 [ ( j - 1 ) ] ; } ( var_1 ) -- ; return true ; } } } return false ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) throws java.lang.exception { java.lang.string status = type_4 . getstring ( var_2 , string_1 ) ; java.lang.string var_4 = type_4 . getstring ( var_2 , string_2 ) ; type_5 var_5 = type_6 . method_3 ( var_2 , var_4 ) ; var_5 . setvalue ( string_1 , status ) ; var_5 . method_5 ( ) ; type_7 . add ( var_2 , string_3 ) ; }
[0]: protected void method_1 ( ) { type_1 var_1 = type_1. method_2 ( this. var_2 ) ; java.util.list < java.lang.string > var_3 = var_1. method_3 ( ) ; java.lang.string var_4 = var_5. method_3 ( ) ; if ( var_3. contains ( var_4 ) ) { return ; } var_3. add ( var_4 ) ; var_1. method_4 ( var_3 ) ; var_3. add ( var_4 ) ; }

************

************
tgt: private type_1 method_1 ( int index ) throws type_2 { if ( index == 0 ) { if ( ( var_3 ) == null ) { throw new type_2 ( ( string_1 + index ) ) ; } return var_3 ; } int var_1 = 0 ; type_1 var_2 = var_3 ; while ( ( ( var_4 ) != null ) && ( var_1 < index ) ) { ++ var_1 ; var_2 = var_4 ; } if ( var_2 == null ) { throw new type_2 ( ( string_1 + index ) ) ; } return var_2 ; }
[0]: private void method_1 ( ) { for ( type_1 var_1 : var_2. method_2 ( ) ) { type_2 label = new type_2 ( var_1. getid ( ) ) ; add ( label ) ; add ( new type_3 ( new type_4 ( string_1, var_1 ) ), string_2 ) ; } }

************

************
tgt: public void start ( java.lang.string var_1 ) { type_1 . method_1 ( var_1 ) ; var_2 = new type_2 ( var_3 , var_4 , var_5 ) ; var_6 = new type_3 ( var_1 , var_2 ) ; type_4 . method_2 ( var_4 ) ; var_6 . method_3 ( true ) ; method_4 ( ) ; }
[0]: private java.lang.integer method_1 ( java.lang.string a, java.lang.string b ) { int count = 0 ; for ( int i = 0 ; i < ( type_1. min ( a. length ( ), b. length ( ) ) ) ; i ++ ) { if (! ( ( a. method_2 ( i ) ) == ( b. method_2 ( i ) ) ) ) return count ; count ++ ; } return count ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , final java.lang.string var_2 ) { java.util.list < type_2 > var_3 = var_4 . method_2 ( ) ; java.util.list < type_3 > var_5 = var_6 . method_3 ( var_2 ) ; var_1 . put ( string_1 , new type_4 ( var_5 , var_3 , null ) ) ; return string_2 ; }
[0]: public void method_1 ( type_1 var_1, java.lang.exception var_2 ) { if ( var_2 == null ) { type_2 var_3 = new type_2 ( var_1. method_2 ( ), var_1. method_3 ( ) ) ; var_4. put ( var_3, var_1. offset ( ) ) ; } else { var_5. error ( string_1, var_2 ) ; } }

************

************
tgt: public long method_1 ( long position ) { long var_1 = var_2 ; if ( method_2 ( ) ) { for ( type_1 var_3 : var_4 . method_3 ( ) ) { if ( ( var_3 . method_4 ( ) ) >= position ) { var_1 = var_3 . method_4 ( ) ; break ; } } } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; if ( var_2!= null ) { if ( var_3 ) { type_3. method_3 ( true ) ; type_3. method_4 ( var_2. method_5 ( ) ) ; type_4. method_6 ( getview ( ), method_7 ( ). getstring ( var_4 ), var_5 ). show ( ) ; var_6. method_8 ( ) ; var_3 = false ; var_6. method_9 ( ) ; } } } }

************

************
tgt: public void method_1 ( ) { if ( method_2 ( ) ) { var_1 . method_3 ( var_2 ) ; var_2 . method_4 ( ) ; ( var_3 ) ++ ; end = - 1 ; var_4 = ( var_1 . isempty ( ) ) && ( var_5 . isempty ( ) ) ; } }
[0]: private boolean method_1 ( type_1 var_1 ) { if ( (! ( var_1. method_2 ( ). method_3 ( ). method_4 ( ) ) ) && ( (! ( var_2 ) ) || (! ( var_3. method_5 ( ) ) ) ) ) { var_1. method_6 ( ) ; return true ; } return false ; }

************

************
tgt: private type_1 method_1 ( ) { if ( ( method_2 ( ) . method_3 ( ) . length ) == 0 ) return var_1 ; type_2 var_2 = method_2 ( ) . method_3 ( ) [ 0 ] ; if ( ( var_2 . size ( ) ) == 0 ) return var_1 ; type_1 var_3 = var_2 . get ( 0 ) ; if ( var_3 . method_4 ( ) ) return var_1 ; return var_3 ; }
[0]: private java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1, java.lang.integer var_2 ) { java.util.list < type_1 > var_3 = new java.util.arraylist < > ( ) ; for ( type_1 var_4 : var_1 ) { if ( var_4. method_2 ( ). equals ( var_2 ) ) { var_3. add ( var_4 ) ; } } return var_3 ; }

************

************
tgt: public void method_1 ( ) { boolean var_1 = method_2 ( ) . method_3 ( ) ; if ( var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_3 . method_4 ( var_4 ) ) ) ; var_5 . method_5 ( var_2 , true ) ; } else { method_6 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_1. method_2 ( ) ; type_2 var_2 = new type_2 ( ) ; var_3 = var_1. tostring ( ) ; var_4 = string_1 ; var_5 = string_2 ; var_6 = int_1 ; type_3 var_7 = new type_3 ( new type_4 ( ) ) ; type_5 result = var_7. method_3 ( var_2 ) ; type_6. method_4 ( ( ( var_8 ) == ( var_9 ) ), string_3 ) ; }

************

************
tgt: public void method_1 ( double var_1 ) { double sum = ( var_2 ) + ( ( var_3 ) / float_1 ) ; sum -= var_1 ; var_2 = ( ( int ) ( sum ) ) ; var_3 = ( ( int ) ( java.lang.math.round ( ( ( sum * int_1 ) - ( ( var_2 ) * int_1 ) ) ) ) ) ; }
[0]: private void method_1 ( ) { method_2 ( string_1 ) ; while ( var_1 ) { method_2 ( string_2 ) ; java.lang.string var_2 = var_3. method_3 ( ) ; method_2 ( ( ( string_3 + var_2 ) + string_4 ) ) ; var_2 = var_3. method_3 ( ) ; if ( var_2. method_4 ( string_5 ) ) { method_2 ( string_6 ) ; name = false ; } } }

************

************
tgt: public void execute ( ) { final type_1 var_1 = new type_1 ( java.lang.thread . method_2 ( ) . getid ( ) , var_2 , var_3 , var_4 ) ; var_1 . method_3 ( var_5 , var_6 . get ( ) , ( ( type_2 . method_4 ( ) ) + var_7 ) ) ; var_6 . update ( var_8 . method_5 ( ) ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; java.net.url url = getclass ( ). method_2 ( var_1 ) ; type_2 var_3 ; try { var_3 = type_3. method_3 ( url ) ; var_2 = type_3. method_4 ( ) ; var_2. open ( var_3 ) ; } catch ( type_4 var_4 ) { var_4. method_5 ( ) ; } catch ( type_5 var_4 ) { var_4. method_5 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_5 ( ) ; } return var_2 ; }

************

************
tgt: public void init ( java.lang.string var_1 , int var_2 , int var_3 , type_1 < java.lang.string > var_4 ) throws java.io.ioexception { type_2 var_5 = new type_2 ( ) ; var_5 . method_1 ( new type_3 ( var_3 ) ) ; var_5 . method_2 ( new type_3 ( var_1 , var_2 ) ) ; this . out = new type_4 ( var_5 . method_3 ( ) ) ; this . var_6 = new type_6 ( var_5 . method_4 ( ) , var_4 , var_7 ) ; new java.lang.thread ( var_6 ) . start ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.io.file var_1 = new java.io.file ( string_1 ) ; type_1 var_2 = new type_1 ( var_3, string_2, new type_2 ( var_1. method_2 ( ) ) ) ; var_2. method_3 ( ) ; assertequals ( string_3, var_4. method_4 ( ) ) ; assertequals ( string_4, var_5. method_4 ( ) ) ; assertequals ( string_5, var_6. method_4 ( ) ) ; }

************

************
tgt: public final void method_1 ( int var_1 ) { if ( var_1 <= 0 ) { throw new type_1 ( string_1 ) ; } this . var_1 = var_1 ; var_2 = int_1 / ( ( double ) ( var_1 ) ) ; if ( ( var_3 . method_2 ( ) ) != null ) { var_3 . method_2 ( ) . method_3 ( var_1 ) ; } }
[0]: protected java.lang.string method_1 ( java.lang.string... args ) { type_1. method_2 ( string_1, ( string_2 + ( var_1. getname ( ) ) ) ) ; java.util.list < type_2 > params = new java.util.arraylist < > ( ) ; params. add ( new type_3 ( var_2, var_1. getname ( ) ) ) ; var_3. method_3 ( var_4, string_3, params ) ; return null ; }

************

************
tgt: public static synchronized void method_1 ( ) throws java.io.ioexception { java.io.file var_1 = type_1 . method_2 ( ( ( type_2 . method_3 ( ) ) + ( var_2 ) ) ) ; if ( var_1 != null ) { try ( java.io.fileoutputstream out = new java.io.fileoutputstream ( var_1 ) ) { var_3 . method_4 ( out , string_1 ) ; } } }
[0]: public type_1 method_1 ( type_1 var_1, java.lang.string var_2 ) { if ( isempty ( ) ) return null ; java.util.set < type_1 > var_3 = method_2 ( var_1, var_2 ) ; if (! ( var_3. isempty ( ) ) ) return method_3 ( var_1, var_3, var_2 ) ; return method_3 ( var_1, var_4, var_2 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1 . method_3 ( ) ) . method_4 ( true ) ; method_2 ( var_2 . method_5 ( method_6 ( var_3 class ) , method_6 ( var_3 class ) , method_6 ( var_3 class ) , method_6 ( var_3 class ) ) ) . method_4 ( true ) ; var_4 . method_7 ( ) ; var_4 . method_8 ( ) ; assertequals ( var_5 , var_4 . method_9 ( ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string name ) { try { return type_2. method_1 ( name ) ; } catch ( type_3 var_1 ) { } try { return type_4. method_1 ( name ) ; } catch ( type_3 var_1 ) { } try { return type_5. method_1 ( name ) ; } catch ( type_3 var_1 ) { } return type_6. method_1 ( name ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { type_4 var_4 = type_4 . get ( var_3 ) ; if ( var_4 . method_2 ( ) ) { if ( ! ( var_5 ) ) var_3 . method_3 ( new type_5 ( string_1 ) ) ; } else { if ( ! ( var_5 ) ) { if ( ! ( var_6 ) ) ( var_7 ) -- ; var_4 . method_4 ( ) ; type_6 . method_5 ( var_3 ) ; } } return var_1 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string [ ] var_2 ) { java.lang.integer [ ] var_3 = new java.lang.integer [ var_2. length ] ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { var_3 [ i ] = java.lang.integer. method_2 ( var_2 [ i ] ) ; } var_4. method_3 ( var_1, var_3 ) ; return type_1. replace ( string_1, var_1. tostring ( ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_3 : var_4 . method_2 ( java.lang.integer . method_3 ( var_1 ) ) ) { var_2 . add ( method_5 ( var_1 , var_3 ) ) ; } return var_2 ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 )!= null ) && ( var_1. method_2 ( ) ) ) { var_1. method_3 ( ) ; java.lang.system.out.println ( string_1 ) ; } else { while (! ( var_2. method_4 ( false, true ) ) ) { method_5 ( ) ; } var_1 = new type_1 ( ) ; java.lang.system.out.println ( string_2 ) ; } } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , java.util.properties var_2 ) { type_1 var_3 = var_4 . get ( var_1 ) ; if ( var_3 == null ) { var_3 = new type_1 ( var_2 ) ; type_1 var_5 = var_4 . method_2 ( var_1 , var_3 ) ; if ( var_5 != null ) { var_3 . method_3 ( ) ; return var_5 ; } else { return var_3 ; } } return var_3 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; var_3 = new type_3 ( this ) ; var_3. method_4 ( var_4 ) ; var_3. method_5 ( string_1 ) ; var_3. method_6 ( false ) ; var_3. method_7 ( var_5, string_2, new type_4 ( ) { public void method_8 ( type_5 var_6, int var_7 ) { var_8. method_9 ( var_9 ) ; } } ) ; method_10 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws type_3 { type_4 var_2 = new type_4 ( var_1 ) ; type_1 var_3 = null ; if ( var_4 . method_2 ( var_2 ) ) { var_3 = type_5 . method_3 ( ) . method_4 ( ) . get ( var_1 . method_5 ( ) ) . method_6 ( ) ; } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2. gettext ( ). length ( ) ) == 0 ) { var_3 = type_2. method_2 ( var_4, type_3. getstring ( string_1 ) ) ; } else { var_3 = type_2. method_3 ( ) ; } var_5. method_4 ( type_4. method_5 ( var_2. gettext ( ) ) ) ; var_5. method_6 ( new java.util.date ( ) ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : var_2 ) { if ( ( ( ( var_3 ) == int_1 ) && ( ( var_4 ) != 0 ) ) && ( ( var_5 ) == ( var_1 . id ) ) ) { var_6 = true ; } } }
[0]: public void method_1 ( ) { while ( var_1 ) { try { java.lang.string message = var_2. method_2 ( ) ; java.lang.system.out.println ( ( string_1 + message ) ) ; var_3. method_3 ( message ) ; } catch ( java.io.ioexception var_4 ) { var_1 = false ; var_3. method_3 ( string_2 ) ; } } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = method_2 ( ) . method_3 ( ) ; var_2 = method_2 ( ) . method_4 ( ) ; var_3 = method_2 ( ) . method_5 ( ) ; var_4 . put ( var_5 , var_3 ) ; var_4 . put ( var_6 , var_1 ) ; var_4 . put ( var_7 , var_2 ) ; } }
[0]: public static java.util.list < type_1 > method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( int y = 0 ; y < int_1 ; y ++ ) { if ( y!= ( var_1. y ) ) { type_1 var_3 = new type_1 ( ) ; var_3. x = var_1. x ; var_3. y = y ; var_2. add ( var_3 ) ; } } return var_2 ; }

************

************
tgt: private java.lang.stringbuilder method_1 ( ) { final java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1 . append ( string_1 ) . append ( var_2 ) ; var_1 . append ( string_2 ) . append ( var_2 ) ; var_1 . append ( string_3 ) . append ( var_2 ) ; var_1 . append ( string_4 ) . append ( var_2 ) ; return var_1 ; }
[0]: protected void method_1 ( ) { var_1. method_2 ( ) ; var_2. add ( var_3 ) ; if ( ( ( var_2 )!= null ) && ( ( var_2. size ( ) ) > 1 ) ) { java.lang.string var_4 = type_1. method_3 ( var_2 ) ; new type_2 ( ). execute ( var_4 ) ; } super. method_1 ( ) ; }

************

************
tgt: private void method_1 ( ) { method_3 ( new type_1 ( ) { public void method_4 ( ) { var_1 . method_5 ( new type_1 ( ) { public void method_4 ( ) { var_2 . method_6 ( ) ; } } , int_1 ) ; method_7 ( ) ; } } ) ; }
[0]: public java.lang.string method_1 ( ) { if ( string_1. equals ( this. var_1 ) ) { return null ; } java.lang.string function = ( ( ( string_2 + ( this. name ) ) + string_3 ) + ( this. params ) ) + string_4 ; function = function + ( this. var_1 ) ; function = function + string_5 ; return function ; }

************

************
tgt: private java.util.list < java.lang.integer > method_1 ( type_1 var_1 ) { java.util.list < java.lang.integer > var_2 = new java.util.arraylist < > ( ) ; for ( java.lang.integer var_3 : var_4 . method_2 ( ) ) { if ( ( ! ( var_4 . get ( var_3 ) . method_3 ( ) ) ) || ( ! ( var_1 . method_4 ( var_3 ) ) ) ) continue ; var_2 . add ( var_3 ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2 [ ( ( var_1. method_2 ( ) ) % int_1 ) ]. method_3 ( var_1 ) ; type_2 var_3 = var_2 [ ( ( var_1. method_2 ( ) ) % int_1 ) ]. method_4 ( ) ; method_5 ( var_3. method_6 ( ) ) ; method_7 ( var_3. method_8 ( ). method_9 ( ), var_3. method_8 ( ). method_10 ( ), var_1, true ) ; }

************

************
tgt: public void init ( type_1 var_1 ) { this . var_1 = var_1 ; final java.util.list < java.lang.string > var_2 = type_2 . method_1 ( var_3 ) ; java.lang.string var_4 = var_3 ; this . var_1 . method_2 ( var_2 ) ; for ( type_3 var_5 : var_6 ) { this . var_1 . method_3 ( var_5 ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) throws type_3 { if ( ( var_1. method_2 ( ) ) == ( this. var_2 ) ) { if ( ( ( var_3 ) && ( ( this. var_2 ) == 0 ) ) && ( var_1. method_3 ( ) ) ) { return this. var_4 ; } var_1. method_4 ( 1 ) ; } return this. var_4 ; } return this. var_4 ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( method_4 ( ) ) != null ) { return method_4 ( ) . method_5 ( ) ; } if ( type_2 . method_2 ( type_3 . method_3 ( ) ) ) { return type_4 . method_1 ( var_1 , type_3 . method_3 ( ) ) ; } return null ; }
[0]: private java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { type_3. method_2 ( string_1 ) ; java.lang.string var_2 = var_1. replaceall ( string_2, string_3 ) ; java.lang.string [ ] var_3 = var_2. split ( string_4 ) ; return method_3 ( var_3 ) ; }

************

************
tgt: public void method_1 ( java.lang.string response ) { type_1 var_1 = new type_2 ( ) . method_2 ( var_2 class , new type_3 ( ) ) . method_3 ( ) ; type_4 var_3 = var_1 . method_4 ( response , var_2 class ) ; var_4 . method_5 ( var_3 ) ; if ( var_3 . method_7 ( ) ) { method_8 ( var_5 ) ; } else if ( var_3 . method_9 ( ) ) { method_8 ( var_6 ) ; } else { method_6 ( ) ; } }
[0]: private boolean method_1 ( java.lang.string str ) { if ( str. contains ( string_1 ) ) { str = str. replaceall ( string_2, string_3 ) ; int var_1 = java.lang.integer.parseint ( str ) ; return var_2 [ var_1 ] ; } else { return ( ( str. contains ( string_4 ) ) || ( str. startswith ( string_5 ) ) ) || ( str. method_2 ( string_6 ) ) ; } }

************

************
tgt: public static type_1 method_1 ( android.content.context context , java.lang.string filename , java.lang.string var_1 , java.lang.string ... var_2 ) { type_2 var_3 = type_3 . method_2 ( context , var_1 , var_2 ) ; if ( var_3 == null ) return null ; type_2 file = var_3 . method_3 ( filename ) ; if ( file == null ) return null ; return type_3 . method_1 ( context , file . method_4 ( ) ) ; }
[0]: public boolean method_1 ( float var_1, float var_2 ) { return ( ( var_1 >= ( var_3 ) ) && ( var_1 <= ( ( var_3 ) + ( method_2 ( ) ) ) ) ) && ( ( var_2 >= ( var_4 ) ) && ( var_2 <= ( ( var_4 ) + ( method_3 ( ) ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) . method_3 ( var_2 , false , 1 ) ; type_3 var_3 = type_4 . method_4 ( 1 , int_1 ) ; var_3 . method_5 ( true ) ; var_4 . method_6 ( var_5 , var_3 , var_1 ) ; }
[0]: public void method_1 ( type_1 x ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; if ( ( type_2. method_2 ( ) ) == 1 ) { var_1 += method_3 ( ) ; java.lang.system.out.println ( var_1 ) ; if ( ( var_1 ) > int_1 ) { x. method_4 ( var_2 ) ; return ; } else { method_1 ( x ) ; } } else { return ; } } }

************

************
tgt: private void method_1 ( java.lang.string key , type_1 var_2 ) { var_3 . info ( string_1 , key ) ; type_2 < type_1 > var_4 = var_5 . get ( key ) ; if ( var_4 == null ) var_5 . put ( key , type_2 . method_2 ( method_3 ( ) , var_2 ) ) ; else if ( ! ( var_4 . contains ( var_2 ) ) ) { type_2 < type_1 > var_6 = var_4 . method_4 ( var_2 ) ; var_5 . put ( key , var_6 ) ; } }
[0]: private static void method_1 ( android.content.context context ) { context. method_2 ( ). method_3 ( ). method_4 ( ) ; type_1 var_1 = type_2. method_5 ( context. method_2 ( ) ) ; if ( var_1!= null ) var_1. method_4 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { if ( ( var_1 ) > 0 ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { if ( var_2 [ i ] . equals ( item ) ) { for ( int j = i + 1 ; j < ( var_1 ) ; j ++ ) { var_2 [ ( j - 1 ) ] = var_2 [ j ] ; } ( var_1 ) -- ; return true ; } } } return false ; }
[0]: protected type_1 method_1 ( int var_1, int var_2 ) { type_1 var_3 = type_2. method_2 ( getcontext ( ). method_3 ( ), var_1 ) ; float var_4 = ( var_2 * 1.0f ) / ( var_3. method_4 ( ) ) ; var_3 = type_1. method_5 ( var_3, ( ( int ) ( ( var_3. method_4 ( ) ) * var_4 ) ), ( ( int ) ( ( var_3. method_6 ( ) ) * var_4 ) ), true ) ; return var_3 ; }

************

************
tgt: protected void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( this . var_2 ) ; java.util.list < java.lang.string > var_3 = var_1 . method_3 ( ) ; java.lang.string var_4 = var_5 . method_3 ( ) ; if ( var_3 . contains ( var_4 ) ) { var_3 . remove ( var_4 ) ; var_1 . method_4 ( var_3 ) ; } var_3 . add ( var_4 ) ; var_1 . method_4 ( var_3 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( method_2 ( var_3 ) ) ) ; if ( var_1!= null ) { var_2. method_3 ( var_1 ) ; var_4. method_3 ( var_1 ) ; } else { if ( var_2!= null ) { method_4 ( var_2 ) ; } if ( ( var_4 )!= null ) { method_4 ( var_4 ) ; var_4 = null ; } } }

************

************
tgt: private void method_1 ( ) { for ( type_1 var_1 : var_2 . method_2 ( ) ) { type_2 label = new type_2 ( var_1 . getid ( ) ) ; add ( label ) ; add ( new type_3 ( new type_4 ( string_1 , var_2 , var_1 ) ) , string_2 ) ; } }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { android.content.intent intent = new android.content.intent ( method_2 ( ), var_2 class ) ; intent. method_3 ( var_3, var_4 ) ; intent. method_3 ( var_5, ( ( ( int ) ( id ) ) - 1 ) ) ; method_4 ( intent ) ; }

************

************
tgt: private java.lang.integer method_1 ( java.lang.string a , java.lang.string b ) { java.lang.system.out.println ( b ) ; int count = 0 ; for ( int i = 0 ; i < ( type_1 . min ( a . length ( ) , b . length ( ) ) ) ; i ++ ) { if ( ! ( ( a . method_2 ( i ) ) == ( b . method_2 ( i ) ) ) ) return count ; count ++ ; } return count ; }
[0]: public static void method_1 ( ) { while ( ( var_1. size ( ) ) < int_1 ) { int size = var_2. size ( ) ; if ( size > 0 ) { type_1 var_3 = var_2. get ( type_2. method_2 ( size ) ) ; if (! ( var_1. contains ( var_3 ) ) ) { var_1. add ( var_3 ) ; } } } var_4 = 0 ; type_3. method_3 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.exception var_2 ) { if ( var_2 == null ) { type_2 var_3 = new type_2 ( var_1 . method_2 ( ) , var_1 . method_3 ( ) ) ; var_4 . put ( var_3 , var_1 . offset ( ) ) ; } else { var_5 . error ( ( string_1 + var_1 ) , var_2 ) ; } }
[0]: public static boolean method_1 ( java.lang.string path ) { type_1 var_1 = type_1. method_2 ( ) ; java.io.file var_2 = null ; try { var_2 = new java.io.file ( path ) ; var_1. open ( var_2 ) ; } catch ( java.lang.exception var_3 ) { var_4. error ( type_2. method_3 ( var_3 ) ) ; return false ; } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; if ( var_2 != null ) { if ( var_3 ) { type_3 . method_3 ( true ) ; type_3 . method_4 ( var_2 . method_5 ( ) ) ; type_4 . method_6 ( getview ( ) , method_7 ( ) . getstring ( var_4 ) , var_5 ) . show ( ) ; var_6 . method_8 ( ) ; var_3 = false ; var_6 . method_9 ( ) ; } else { var_6 . method_9 ( ) ; } } }
[0]: private void method_1 ( type_1 < java.lang.string, java.lang.integer > var_1 ) { for ( java.lang.string var_2 : var_1. method_2 ( ) ) { if ( var_3. method_3 ( var_2 ) ) { int var_4 = var_3. get ( var_2 ) ; int var_5 = var_1. get ( var_2 ) ; var_3. put ( var_2, ( var_5 + var_4 ) ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( ! ( var_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) ) ) && ( ( ! ( var_2 ) ) || ( ! ( var_3 . method_5 ( ) ) ) ) ) { var_1 . method_6 ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_1 ) ; if (! ( var_2 ) ) { this. var_3 = var_1 ; this. var_2 = true ; this. method_3 ( ) ; this. method_4 ( ) ; } else { this. var_4 = true ; } }

************

************
tgt: private java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1 , java.lang.integer var_2 ) { java.util.list < type_1 > var_3 = new java.util.arraylist < > ( ) ; for ( type_1 var_4 : var_1 ) { if ( var_2 . equals ( var_4 . method_2 ( ) ) ) { var_3 . add ( var_4 ) ; } } return var_3 ; }
[0]: public void method_1 ( android.view.view var_1 ) { android.content.intent var_2 = new android.content.intent ( var_3, var_4 class ) ; var_2. method_2 ( string_1, var_5. get ( position ). method_3 ( ). getid ( ) ) ; var_2. method_2 ( string_2, var_5. get ( position ). method_3 ( ). getname ( ) ) ; var_3. method_4 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) ; type_2 var_2 = new type_2 ( ) ; var_3 = var_1 . tostring ( ) ; var_5 = string_2 ; var_6 = int_1 ; type_3 var_7 = new type_3 ( new type_4 ( ) ) ; type_5 result = var_7 . method_3 ( var_2 ) ; type_6 . method_4 ( ( ( var_8 ) == ( var_9 ) ) , string_3 ) ; }
[0]: private boolean method_1 ( boolean var_1, float var_2, int var_3, int var_4, boolean var_5 ) { float var_6 = method_2 ( var_2 ) ; if ( var_6 == 1.0f ) { if ( ( var_7 )!= null ) { method_3 ( ) ; var_7. method_4 ( var_1, 1, var_3, var_4 ) ; } return false ; } method_5 ( var_1, var_6, var_3, var_4, var_5 ) ; return true ; } }

************

************
tgt: private void method_1 ( ) { method_2 ( string_1 ) ; while ( var_1 ) { method_2 ( string_2 ) ; java.lang.string var_2 = var_3 . method_3 ( ) ; method_2 ( ( ( string_3 + var_2 ) + string_4 ) ) ; var_2 = var_3 . method_3 ( ) ; if ( var_2 . method_4 ( string_5 ) ) { method_2 ( string_6 ) ; var_1 = false ; } } }
[0]: public void method_1 ( android.view.view view ) { type_1. method_2 ( var_1 class, this, new type_2 ( var_2. getid ( ), ( ( var_3. method_3 ( ) ) + 1 ), var_4. get ( var_5 ). getid ( ) ), false ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; java.net.url url = getclass ( ) . method_2 ( var_1 ) ; try { type_2 var_3 = type_3 . method_3 ( url ) ; var_2 = type_3 . method_4 ( ) ; var_2 . open ( var_3 ) ; } catch ( type_4 var_4 ) { var_4 . method_5 ( ) ; } catch ( type_5 var_4 ) { var_4 . method_5 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_5 ( ) ; } return var_2 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; var_1 = null ; if ( ( var_2 )!= null ) { var_2. method_1 ( ) ; var_2 = null ; } if ( ( var_3 )!= null ) { var_3. method_1 ( ) ; var_3 = null ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_2 = new type_1 ( var_3 , string_2 , new type_2 ( var_1 . method_2 ( ) ) ) ; var_2 . method_3 ( ) ; type_3 . assertequals ( string_3 , var_4 . method_4 ( ) ) ; type_3 . assertequals ( string_4 , var_5 . method_4 ( ) ) ; type_3 . assertequals ( string_5 , var_6 . method_4 ( ) ) ; }
[0]: public int method_1 ( ) { int p = 0 ; java.util.collection var_1 = method_2 ( ) ; for ( java.util.iterator var_2 = var_1. iterator ( ) ; var_2. method_3 ( ) ; ) { type_1 var_3 = ( ( type_1 ) ( var_2. method_4 ( ) ) ) ; p += var_3. method_1 ( ) ; } return p / ( var_1. size ( ) ) ; }

************

************
tgt: protected java.lang.string method_1 ( java.lang.string ... args ) { java.util.list < type_2 > params = new java.util.arraylist < > ( ) ; params . add ( new type_3 ( var_2 , var_1 . getname ( ) ) ) ; var_3 . method_3 ( var_4 , string_3 , params ) ; return null ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; var_6 = getactivity ( ) ; var_7 = ( ( android.widget.linearlayout ) ( var_4. method_3 ( var_8 ) ) ) ; var_7. method_4 ( ) ; var_9. method_5 ( ) ; method_6 ( ) ; return var_4 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( isempty ( ) ) return null ; java.util.set < type_1 > var_3 = method_2 ( var_1 , var_2 ) ; if ( ! ( var_3 . isempty ( ) ) ) return method_3 ( var_1 , var_3 , var_2 ) ; synchronized ( var_4 ) { return method_3 ( var_1 , var_4 , var_2 ) ; } }
[0]: private static java.lang.string [ ] method_1 ( final java.util.map < java.lang.string, java.lang.string > var_1 ) { return var_1. method_2 ( ). method_3 ( ). method_4 ( type_1 : : method_5 ). method_6 ( type_2. method_7 ( ) ). method_8 ( new java.lang.string [ ] { } ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string name ) { try { return type_2 . method_1 ( name ) ; } catch ( type_3 var_1 ) { } try { return type_5 . method_1 ( name ) ; } catch ( type_3 var_1 ) { } try { return type_4 . method_1 ( name ) ; } catch ( type_3 var_1 ) { } return type_6 . method_1 ( name ) ; }
[0]: protected static java.lang.string [ ] method_1 ( int var_1, java.lang.string var_2 ) { if ( var_2 == null ) var_2 = string_1 ; int i = 1 ; java.lang.string [ ] n = new java.lang.string [ var_1 ] ; while ( i <= var_1 ) { n [ i ] = var_2 + ( i ++ ) ; } return n ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string [ ] var_2 ) { java.lang.integer [ ] var_3 = new java.lang.integer [ var_2 . length ] ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { var_3 [ i ] = java.lang.integer . method_2 ( var_2 [ i ] ) ; } var_4 . method_3 ( var_1 , var_3 ) ; return type_1 . replace ( string_1 , var_1 ) ; }
[0]: public static java.lang.string method_1 ( java.util.set < java.lang.integer > var_1 ) { java.lang.stringbuilder result = new java.lang.stringbuilder ( string_1 ) ; for ( java.lang.integer var_2 : var_1 ) { result. append ( type_1. method_2 ( var_3. get ( var_2 ) ) ) ; result. append ( char_1 ) ; } result. method_3 ( ( ( result. length ( ) ) - 1 ) ) ; return result. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) != null ) && ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( ) ; } else { while ( ! ( var_2 . method_4 ( false , true ) ) ) { method_5 ( ) ; } var_1 = new type_1 ( ) ; } }
[0]: public void method_1 ( ) { type_1 < java.lang.integer > list = new type_1 ( ) ; int [ ] var_1 = new int [ ] { - int_1, int_2, int_3, int_4, int_5, int_6, int_7 } ; for ( int i = 0, var_2 = 1 ; i < ( var_1. length ) ; i ++, var_2 ++ ) { list. add ( var_1 [ i ] ) ; type_2. assertequals ( list. size ( ), var_2 ) ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = new type_3 ( this ) ; var_3 . method_4 ( var_4 ) ; var_3 . method_5 ( string_1 ) ; var_3 . method_6 ( false ) ; var_3 . method_7 ( var_5 , string_2 , new type_4 ( ) { public void method_8 ( type_5 var_6 , int var_7 ) { var_8 . method_9 ( var_9 ) ; } } ) ; method_10 ( ) ; }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1. getvalue ( ) ) == null ) { return string_1 ; } if ( var_2. gettext ( ). isempty ( ) ) { return string_2 ; } if ( var_3. gettext ( ). isempty ( ) ) { return string_3 ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . gettext ( ) . length ( ) ) == 0 ) { var_3 = method_2 ( var_4 , type_3 . getstring ( string_1 ) ) ; } else { var_3 = method_3 ( ) ; } var_5 . method_4 ( type_4 . method_5 ( var_2 . gettext ( ) ) ) ; var_5 . method_6 ( new java.util.date ( ) ) ; method_7 ( ) ; }
[0]: public type_1 method_1 ( type_2 name ) { if ( ( this. var_1 )!= null ) { for ( int i = ( this. var_1. size ( ) ) - 1 ; i >= 0 ; i -- ) { final type_3 var_2 = this. var_1. get ( i ) ; if ( ( var_2. getname ( ) ) == name ) { return var_2 ; } } } return null ; }

************

************
tgt: public void method_1 ( ) { while ( var_1 ) { try { java.lang.string message = var_2 . method_2 ( ) ; var_3 . method_3 ( message ) ; } catch ( java.io.ioexception var_4 ) { var_1 = false ; var_3 . method_3 ( string_2 ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 values = new type_2 ( ) ; values. put ( var_2, java.lang.string. method_2 ( var_1. method_3 ( ) ) ) ; values. put ( var_3, java.lang.string. method_2 ( var_1. method_4 ( ) ) ) ; values. put ( var_4, java.lang.string. method_2 ( var_1. method_5 ( ) ) ) ; type_3 var_5 = method_6 ( ) ; var_5. method_7 ( var_6, null, values ) ; var_5. method_8 ( ) ; }

************

************
tgt: public static java.util.list < type_1 > method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( int y = 0 ; y < int_1 ; y ++ ) { if ( y != ( var_1 . y ) ) { type_1 var_3 = new type_1 ( var_1 . x , y ) ; var_2 . add ( var_3 ) ; } } return var_2 ; }
[0]: public type_1 method_1 ( type_2 var_1, type_1 var_2 ) { type_1 var_3 = this. method_2 ( ) ; java.util.list < type_3 > path = method_3 ( var_1, var_1. method_4 ( var_2 ). getclass ( ), var_3, var_2 ) ; return path. get ( 0 ). var_4 ; }

************

************
tgt: protected void method_1 ( ) { var_1 . method_2 ( ) ; if ( ( ( var_2 ) != null ) && ( ( var_2 . size ( ) ) > 1 ) ) { var_2 . add ( var_3 ) ; java.lang.string var_4 = type_1 . method_3 ( var_2 ) ; new type_2 ( ) . execute ( var_4 ) ; } super . method_1 ( ) ; }
[0]: private void method_1 ( type_1 event ) { if ( ( var_1. length ( ) ) > 0 ) { var_1 = var_1. substring ( 0, ( ( var_1. length ( ) ) - 1 ) ) ; var_2. settext ( var_1 ) ; } else { var_2. settext ( null ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { if ( string_1 . equals ( this . var_1 ) ) { return null ; } java.lang.string function = ( ( ( string_2 + ( this . getname ( ) ) ) + string_3 ) + ( this . params ) ) + string_4 ; function = function + ( this . var_1 ) ; function = function + string_5 ; return function ; }
[0]: private boolean method_1 ( ) { boolean var_1 = method_2 ( ) ; if ( var_1 ) { if (! ( java.lang.double. method_3 ( var_2 ) ) ) var_3 = ( var_2 ) - ( var_4 ) ; else var_3 = var_4 ; } if (! ( java.lang.double. method_3 ( var_3 ) ) ) { return true ; } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 [ ( ( var_1 . method_2 ( ) ) % int_1 ) ] . method_3 ( var_1 ) ; type_2 var_3 = var_2 [ ( ( var_1 . method_2 ( ) ) % int_1 ) ] . method_4 ( ) ; method_5 ( var_3 . method_6 ( ) ) ; method_7 ( var_3 . method_8 ( ) . method_9 ( ) , var_3 . method_8 ( ) . method_10 ( ) , var_1 , true ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { int var_2 = var_3. method_2 ( var_1 ) ; if ( var_2 == ( var_4 ) ) return true ; method_3 ( var_2 ) ; if ( ( listener )!= null ) { if ( method_4 ( ) ) { listener. method_5 ( var_2 ) ; } else { listener. method_6 ( var_2 ) ; } } return true ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws type_3 { if ( ( var_1 . method_2 ( ) ) == ( this . var_2 ) ) { if ( ( this . var_2 ) == 0 ) { return this . var_4 ; } var_1 . method_4 ( 1 ) ; } return this . var_4 ; }
[0]: public static void main ( java.lang.string [ ] args ) { boolean var_1 = false ; try { new type_1 ( ). method_1 ( args ) ; var_1 = true ; } catch ( java.lang.exception var_2 ) { if ( var_2 instanceof type_2 ) { type_1. method_2 ( ) ; } type_3. method_3 ( var_3, string_1, var_2 ) ; java.lang.system.err.println ( ( string_2 + var_2 ) ) ; } java.lang.system.exit ( ( var_1? 0 : 1 ) ) ; } }

************

************
tgt: private java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { type_3 . method_2 ( string_1 ) ; var_1 = var_1 . trim ( ) ; java.lang.string var_2 = var_1 . replaceall ( string_2 , string_3 ) ; java.lang.string [ ] var_3 = var_2 . split ( string_4 ) ; return method_3 ( var_3 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 < type_3 > var_2, type_4 context ) throws java.io.ioexception, type_5 { int sum = 0 ; for ( type_3 count : var_2 ) { sum += count. get ( ) ; } if ( ( ( var_3 )!= ( - 1 ) ) && ( sum > ( var_3 ) ) ) context. method_2 ( var_1, new type_3 ( sum ) ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string str ) { if ( str . contains ( string_1 ) ) { return var_2 . get ( str ) ; } else { return ( ( str . contains ( string_4 ) ) || ( str . startswith ( string_5 ) ) ) || ( str . method_2 ( string_6 ) ) ; } }
[0]: public static void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { var_1 = ( ( type_2 ) ( var_1 ) ). method_2 ( ) ; } if ( var_1 instanceof type_3 ) { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; assert ( var_3 ) == ( var_4 ) ; if ( ( var_5 )!= null ) { var_5. method_3 ( ) ; var_5 = null ; } } }

************

************
tgt: public boolean method_1 ( float var_1 , float var_2 ) { return ( ( var_1 >= ( var_3 ) ) && ( var_1 < ( ( var_3 ) + ( method_2 ( ) ) ) ) ) && ( ( var_2 >= ( var_4 ) ) && ( var_2 < ( ( var_4 ) + ( method_3 ( ) ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { var_3 = true ; } else if ( ( var_1. method_2 ( ) ) == ( var_4 ) ) { var_5 = true ; } if ( ( var_1. method_2 ( ) ) == ( var_6 ) ) { var_7 = true ; } else if ( ( var_1. method_2 ( ) ) == ( var_8 ) ) { var_9 = true ; } }

************

************
tgt: public int method_1 ( int i ) { int x = i ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; if ( ( type_2 . method_2 ( ) ) == 1 ) { x += method_3 ( ) ; java.lang.system.out.println ( x ) ; if ( x > int_1 ) { return x ; } else { method_1 ( x ) ; } } else { return x ; } return x ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( true ) ; method_3 ( true ) ; if ( ( ( var_2 )!= null ) && ( ( var_3 )!= null ) ) { type_1. method_4 ( ). method_5 ( var_2, var_3 ). method_6 ( this ). method_7 ( this ) ; var_4. method_8 ( null ) ; } }

************

************
tgt: public static void method_1 ( android.content.context context ) { context . method_2 ( ) . method_3 ( ) . method_4 ( ) ; type_1 var_1 = type_2 . method_5 ( context . method_2 ( ) ) ; if ( var_1 != null ) var_1 . method_4 ( ) ; }
[0]: public void method_1 ( ) { if (! ( this. var_1 ) ) { this. var_2 = 1.0f / float_1 ; this. var_3 = false ; method_2 ( ( ( 1 - ( ( type_1. method_3 ( float_2 ) ) / float_3 ) ) / int_1 ), float_4, ( ( 1 + ( ( type_1. method_3 ( float_2 ) ) / float_3 ) ) / int_1 ), float_4, this. var_4 ) ; } }

************

************
tgt: private type_1 method_1 ( int var_1 , int var_2 ) { type_1 var_3 = type_2 . method_2 ( getcontext ( ) . method_3 ( ) , var_1 ) ; float var_4 = ( var_2 * 1.0f ) / ( var_3 . method_4 ( ) ) ; var_3 = type_1 . method_5 ( var_3 , ( ( int ) ( ( var_3 . method_4 ( ) ) * var_4 ) ) , ( ( int ) ( ( var_3 . method_6 ( ) ) * var_4 ) ) , true ) ; return var_3 ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) >= ( var_2 ) ) { if ( ( var_3 ) == null ) { var_3 = var_4. method_2 ( ) ; var_5 = new type_1 ( ). method_3 ( var_6 ). build ( ) ; var_7 = new java.util.arraylist < > ( ) ; var_7. add ( new type_2 ( ). method_4 ( new type_3 ( var_8 ) ). build ( ) ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( method_2 ( var_3 ) ) ) ; if ( var_1 != null ) { var_2 . method_3 ( var_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_3 ( var_1 ) ; } } else { if ( var_2 != null ) { method_4 ( var_2 ) ; } if ( ( var_4 ) != null ) { method_4 ( var_4 ) ; var_4 = null ; } } }
[0]: public type_1 method_1 ( java.util.list < type_2 > var_1, java.lang.string var_2 ) { try { type_1 var_3 = new type_1 ( ) ; var_3. append ( var_2, string_1 ). append ( string_2, method_2 ( var_1 ) ) ; return var_3 ; } catch ( java.io.ioexception var_4 ) { var_4. method_3 ( ) ; return null ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { android.content.intent intent = new android.content.intent ( method_2 ( ) , var_2 class ) ; intent . method_3 ( var_3 , var_4 ) ; intent . method_3 ( var_5 , ( ( int ) ( id ) ) ) ; method_4 ( intent ) ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_1 = string_2 ; java.lang.string var_2 = string_2 ; type_1 var_3 = new type_1 ( ) ; boolean var_4 = true ; boolean result = var_3. method_2 ( var_1, var_2 ) ; assertequals ( var_4, result ) ; fail ( string_3 ) ; }

************

************
tgt: public static void method_1 ( ) { while ( ( var_1 . size ( ) ) < int_1 ) { int size = var_2 . size ( ) ; if ( size > 0 ) { type_1 var_3 = var_2 . get ( type_2 . method_2 ( size ) ) ; if ( ! ( var_1 . contains ( var_3 ) ) ) { var_1 . add ( var_3 ) ; } } } var_4 = 0 ; type_3 . method_3 ( ) ; }
[0]: public void method_1 ( double var_1, double var_2, type_1 var_3 ) throws java.io.ioexception { this. var_3 = var_3 ; this. var_4 = ( ( int ) ( type_2. method_2 ( ( var_1 * ( var_3. size ( ) ) ) ) ) ) ; method_1 ( string_1, null, var_4, var_5 ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string path ) { type_1 var_1 = type_1 . method_2 ( ) ; java.io.file var_2 ; try { var_2 = new java.io.file ( path ) ; var_1 . open ( var_2 ) ; } catch ( java.lang.exception var_3 ) { var_4 . error ( type_2 . method_3 ( var_3 ) ) ; return false ; } return true ; }
[0]: protected void method_1 ( ) { method_2 ( ) ; var_1 = true ; var_2 -= var_3 ; var_4. add ( new float [ ] { var_5, var_6, ( var_7 ) / int_1 } ) ; var_8. add ( new float [ ] { var_9, var_10, var_5, var_6, var_7 } ) ; }

************

************
tgt: private void method_1 ( type_1 < java.lang.string , java.lang.integer > var_1 ) { for ( java.lang.string var_2 : var_1 . method_2 ( ) ) { int var_4 = 0 ; int var_5 ; if ( var_3 . method_3 ( var_2 ) ) { var_4 = var_3 . get ( var_2 ) ; } var_5 = var_1 . get ( var_2 ) ; var_3 . put ( var_2 , ( var_5 + var_4 ) ) ; } }
[0]: public boolean method_1 ( int var_1, int var_2, boolean type, int var_3 ) { type_1 var_4 = var_5. method_2 ( var_1, var_2, type, var_6 ) ; return type? ( var_7. method_3 ( var_2 ). method_4 ( ) )!= var_3 : ( ( var_8. method_5 ( var_2 ). method_4 ( ) ) == var_3 ) && ( this. method_6 ( var_4, var_9 ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_1 ) ; if ( ! ( var_2 ) ) { this . var_3 = var_1 ; this . var_2 = true ; this . method_3 ( ) ; } else { this . var_4 = true ; } }
[0]: public void method_1 ( double time, type_1 var_1 ) { if ( time <= 0 ) { return ; } double var_2 = this. method_2 ( ) ; if ( time <= var_2 ) { this. method_3 ( time ) ; return ; } this. method_3 ( var_2 ) ; this. method_4 ( var_1 ) ; this. method_1 ( ( time - var_2 ), var_1 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { android.content.intent var_2 = new android.content.intent ( var_3 , var_4 class ) ; var_2 . method_2 ( string_1 , var_5 . get ( position ) . getid ( ) ) ; var_2 . method_2 ( string_2 , var_5 . get ( position ) . method_3 ( ) . getname ( ) ) ; var_3 . method_4 ( var_2 ) ; }
[0]: public void method_1 ( ) throws java.lang.classnotfoundexception { java.lang.class. method_2 ( string_1 ) ; type_1 var_1 = null ; try { var_1 = this. method_3 ( ) ; java.lang.system.out.println ( string_2 ) ; } catch ( type_2 var_2 ) { java.lang.system.out.println ( string_3 ) ; var_2. method_4 ( ) ; return ; } }

************

************
tgt: private boolean method_1 ( boolean var_1 , float var_2 , int var_3 , int var_4 , boolean var_5 ) { float var_6 = method_2 ( var_2 ) ; if ( var_6 == 1.0f ) { method_3 ( ) ; var_7 . method_4 ( var_1 , 1 , var_3 , var_4 ) ; return false ; } method_5 ( var_1 , var_6 , var_3 , var_4 , var_5 ) ; return true ; }
[0]: private void method_1 ( type_1 t, java.util.set < type_1 > var_1 ) { if (! ( var_1. contains ( t ) ) ) { var_1. add ( t ) ; if ( ( t. method_2 ( ) )!= null ) { for ( type_1 var_2 : t. method_2 ( ) ) { method_1 ( var_2, var_1 ) ; } } } }

************

************
tgt: public void method_1 ( android.view.view view ) { method_2 ( var_1 class , this , new type_2 ( var_2 . getid ( ) , ( ( var_3 . method_3 ( ) ) + 1 ) , var_4 . get ( var_5 ) . getid ( ) ) , false ) ; }
[0]: public static void method_1 ( int n, char src, char var_1, char var_2 ) { if ( n > 0 ) { type_1. method_1 ( ( n - 1 ), src, var_1, var_2 ) ; type_1. method_1 ( ( n - 1 ), var_1, var_2, src ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; if ( ( var_2 ) != null ) { var_2 . method_1 ( ) ; var_2 = null ; } if ( ( var_3 ) != null ) { var_3 . method_1 ( ) ; var_3 = null ; } }
[0]: public java.util.list < type_1 > method_1 ( long var_1 ) { type_2 var_2 = type_3. method_2 ( ). method_3 ( ). method_4 ( var_3 class ) ; var_2. method_5 ( int_1 ) ; var_2. add ( type_4. method_6 ( string_1, var_1 ) ) ; var_2. method_7 ( type_5. method_8 ( string_1, var_1 ) ) ; var_2. method_9 ( int_1 ) ; var_2. method_10 ( true ) ; var_2. method_11 ( var_4 ) ; return var_2. list ( ) ; }

************

************
tgt: public int method_1 ( ) { int p = 0 ; java.util.collection var_1 = method_2 ( ) ; for ( java.util.iterator var_2 = var_1 . iterator ( ) ; var_2 . method_3 ( ) ; ) { type_1 var_3 = ( ( type_1 ) ( var_2 . method_4 ( ) ) ) ; p += var_3 . method_1 ( ) ; } int size = var_1 . size ( ) ; return size == 0 ? 0 : p / size ; }
[0]: public type_1 method_1 ( java.lang.string path ) throws type_2 { set ( var_1, path ) ; type_3 var_2 = type_3. method_2 ( var_3 class ) ; java.util.scanner var_4 = new java.util.scanner ( new java.io.fileinputstream ( path ) ) ; while ( var_4. method_3 ( ) ) { java.lang.string var_5 = var_4. method_4 ( ) ; var_6. add ( var_5 ) ; var_2. error ( ( string_1 + var_5 ) ) ; } return this ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; var_6 = getactivity ( ) ; var_7 = ( ( android.widget.linearlayout ) ( var_4 . method_3 ( var_8 ) ) ) ; var_9 . method_5 ( ) ; method_6 ( ) ; return var_4 ; }
[0]: public void method_1 ( boolean var_1 ) { super. method_1 ( var_1 ) ; if ( var_1 ) { method_2 ( var_2 ) ; if (! ( var_3 ) ) { var_4. method_3 ( ) ; var_3 = true ; } var_4. method_4 ( var_5 ) ; } }

************

************
tgt: public static java.lang.string [ ] method_1 ( final java.util.map < java.lang.string , java.lang.string > var_1 ) { return var_1 . method_2 ( ) . method_3 ( ) . method_4 ( type_1 : : method_5 ) . method_6 ( type_2 . method_7 ( ) ) . method_8 ( new java.lang.string [ ] { } ) ; }
[0]: public final void method_1 ( java.util.date var_1 ) { if (! ( this. var_1. equals ( var_1 ) ) ) { if ( ( ( var_1!= null ) && ( ( var_2 )!= null ) ) && ( var_2. method_2 ( var_1 ) ) ) { throw new type_1 ( string_1 ) ; } this. var_1 = var_1 ; type_2. method_3 ( ) ; type_2. method_4 ( ) ; } } }

************

************
tgt: protected static java.lang.string [ ] method_1 ( int var_1 , java.lang.string var_2 ) { if ( var_2 == null ) var_2 = string_1 ; int i = 0 ; java.lang.string [ ] n = new java.lang.string [ var_1 ] ; while ( i < var_1 ) { n [ i ] = var_2 + ( ++ i ) ; } return n ; }
[0]: private void method_1 ( type_1 c, type_2 var_1, type_3 var_2, type_4 var_3, type_5 var_4 ) { type_6 var_5 = method_2 ( c, var_3, var_2 ) ; type_7. method_3 ( var_4. method_4 ( ) ) ; type_8. method_5 ( var_3, var_4, var_1 ) ; method_6 ( c. method_7 ( ), var_1, var_3, var_4, var_5 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.util.set < java.lang.integer > var_1 ) { java.lang.stringbuilder result = new java.lang.stringbuilder ( string_1 ) ; for ( java.lang.integer var_2 : var_1 ) { result . append ( type_1 . method_2 ( var_3 . get ( var_2 ) ) ) ; result . append ( char_1 ) ; } if ( ( result . length ( ) ) > 0 ) { result . method_3 ( ( ( result . length ( ) ) - 1 ) ) ; } return result . tostring ( ) ; }
[0]: public < type_1 > type_1 method_1 ( final type_2 source, final type_2 var_1, final java.lang.string label, final type_3 < type_1 > var_2 ) { final type_1 var_3 = method_2 ( source. method_3 ( ). method_4 ( label, var_1. method_3 ( ), null ), var_2 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.integer > list = new type_1 ( ) ; java.lang.integer [ ] var_1 = new java.lang.integer [ ] { - int_1 , int_2 , int_3 , int_4 , null , int_6 , int_7 } ; for ( int i = 0 , var_2 = 1 ; i < ( var_1 . length ) ; i ++ , var_2 ++ ) { list . add ( var_1 [ i ] ) ; type_2 . assertequals ( list . size ( ) , var_2 ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, type_1 var_4 ) throws type_2 { var_5 = ( ( var_6 ) == 0 ) || ( ( ( var_6 ) == 1 ) && ( var_7. method_2 ( var_1, var_2 ) ) ) ; if ( var_5 ) tmp. method_1 ( var_1, var_2, var_3, var_4 ) ; ( var_6 ) ++ ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( var_1 . getvalue ( ) ) == null ) { return string_1 ; } if ( ( ( var_2 . gettext ( ) ) == null ) || ( var_2 . gettext ( ) . isempty ( ) ) ) { return string_2 ; } if ( ( ( var_3 . gettext ( ) ) == null ) || ( var_3 . gettext ( ) . isempty ( ) ) ) { return string_3 ; } return null ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; for ( int j : var_2 ) var_1. add ( java.lang.integer.tostring ( j ) ) ; return new type_2 ( ). method_2 ( string_1, var_1 ). method_3 ( var_3 class ) ; }

************

************
tgt: private void method_1 ( ) throws java.io.ioexception { java.io.file var_1 = new java.io.file ( ( ( ( ( ( type_1 . method_2 ( ) ) + ( var_2 ) ) + ( type_1 . getconfig ( var_3 ) ) ) + ( var_2 ) ) + string_1 ) ) ; type_2 . method_4 ( ) . method_5 ( var_1 . method_3 ( ) ) ; }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( ( ( var_1 == ( id ) ) && ( var_2!= ( var_3 ) ) ) || ( data == null ) ) { return ; } result = type_1. method_2 ( data ) ; var_4. method_3 ( ) ; method_4 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 name ) { if ( ( this . var_1 ) == null ) { return null ; } for ( int i = ( this . var_1 . size ( ) ) - 1 ; i >= 0 ; i -- ) { final type_3 var_2 = this . var_1 . get ( i ) ; if ( ( var_2 . getname ( ) ) == name ) { return var_2 ; } } return null ; }
[0]: public boolean method_1 ( int var_1 ) { return ( ( ( ( ( double ) ( var_1 + 1 ) ) / ( method_2 ( var_2 ). getint ( ) ) ) - 1 ) == ( ( type_1. method_3 ( ( ( ( double ) ( var_1 + 1 ) ) / ( method_2 ( var_2 ). getint ( ) ) ) ) ) - 1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 values = new type_2 ( ) ; values . put ( var_2 , java.lang.string . method_2 ( var_1 . method_3 ( ) ) ) ; values . put ( var_3 , java.lang.string . method_2 ( var_1 . method_4 ( ) ) ) ; values . put ( var_4 , java.lang.string . method_2 ( var_1 . method_5 ( ) ) ) ; if ( ( var_5 ) == null ) { var_5 = method_6 ( ) ; } var_5 . method_7 ( var_6 , null , values ) ; }
[0]: public void method_1 ( ) { if (! ( var_1 ) ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; type_2 parameters = new type_2 ( var_4, var_5 ) ; type_3 var_6 = new type_3 ( var_2. getcontext ( ) ) ; var_6. settext ( string_1 ) ; parameters. method_3 ( var_7, var_8 ) ; var_2. method_4 ( var_6, parameters ) ; var_1 =! ( var_1 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_1 var_2 ) { type_1 var_3 = this . method_2 ( ) ; java.util.list < type_3 > path = method_3 ( var_1 , var_1 . method_4 ( var_2 ) . getclass ( ) , var_3 , var_2 ) ; if ( ! ( path . isempty ( ) ) ) return path . get ( 1 ) . var_4 ; else return var_3 ; }
[0]: protected synchronized java.lang.string method_1 ( type_1 <? > var_1 ) { var_2. method_2 ( var_1 ) ; java.lang.string var_3 = ( ( ( string_1 + ( var_1. method_3 ( ). tostring ( ) ) ) + string_2 ) + ( type_2. method_4 ( string_3 ) ) ) + ( var_2. tostring ( ) ) ; var_2. method_5 ( ) ; return var_3 ; }

************

************
tgt: private void method_1 ( type_1 event ) { if ( ( var_1 . length ( ) ) > 0 ) { var_1 = var_1 . substring ( 0 , ( ( var_1 . length ( ) ) - 1 ) ) ; if ( var_1 . isempty ( ) ) { var_2 . settext ( "0" ) ; } else { var_2 . settext ( var_1 ) ; } } }
[0]: private static void method_1 ( java.lang.string url, java.lang.string var_1, type_1 var_2 ) { type_2. method_2 ( ) ; type_2. method_3 ( ) ; type_2. method_4 ( ) ; type_3 var_3 = type_3. method_5 ( type_4. method_6 ( string_1 ), var_1 ) ; var_4. method_1 ( url, var_3, new type_5 ( var_2 ), true ) ; }

************

************
tgt: private boolean method_1 ( ) { boolean var_1 = method_2 ( ) ; if ( var_1 ) { if ( ! ( java.lang.double . method_3 ( var_2 ) ) ) var_3 = ( var_2 ) - ( var_4 ) ; else var_3 = 0 ; } if ( ! ( java.lang.double . method_3 ( var_3 ) ) ) { return true ; } return var_1 ; }
[0]: public void method_1 ( type_1 event ) { if ( ( ( output. gettext ( ). trim ( ). length ( ) ) == 0 ) || (! ( output. gettext ( ). trim ( ). method_2 ( type_2. method_3 ( ) ) ) ) ) { var_1. method_4 ( var_2 ) ; } else { var_1. method_4 ( var_3 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { int var_2 = var_3 . method_2 ( var_1 ) ; method_3 ( var_2 ) ; if ( ( listener ) != null ) { if ( method_4 ( ) ) { listener . method_5 ( var_2 ) ; } else { listener . method_6 ( var_2 ) ; } } return true ; }
[0]: public static boolean method_1 ( java.lang.string text ) { java.lang.string [ ] var_1 = text. split ( ""\n"" ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ]. trim ( ). length ( ) ) == 0 ) break ; if ( type_1. method_2 ( var_1 [ i ] ) ) return true ; } return false ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { boolean var_1 = false ; try { new type_1 ( ) . method_1 ( args ) ; var_1 = true ; } catch ( java.lang.exception var_2 ) { if ( var_2 instanceof type_2 ) { type_1 . method_2 ( ) ; java.lang.system.exit ( 1 ) ; } type_3 . method_3 ( var_3 , string_1 , var_2 ) ; java.lang.system.err.println ( ( string_2 + var_2 ) ) ; } java.lang.system.exit ( ( var_1 ? 0 : 1 ) ) ; }
[0]: public void method_1 ( java.lang.object response ) { java.lang.string var_1 = method_2 ( ( ( java.lang.string ) ( response ) ), string_1 ) ; int var_2 = 0 ; try { java.lang.integer.parseint ( var_1 ) ; } catch ( type_1 var_3 ) { var_3. method_3 ( ) ; } float var_4 = ( ( float ) ( var_2 / float_1 ) ) ; type_2. method_4 ( listener, var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 < type_3 > var_2 , type_4 context ) throws java.io.ioexception , type_5 { int sum = 0 ; for ( type_3 count : var_2 ) { sum += count . get ( ) ; } if ( ( ( var_3 ) == ( - 1 ) ) || ( sum > ( var_3 ) ) ) context . method_2 ( var_1 , new type_3 ( sum ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { super. method_1 ( var_1, var_2 ) ; double value ; for ( type_3 var_3 : var_1 ) { value = var_2. method_2 ( var_4 ) ; min = type_4. min ( min, value ) ; var_5 = type_4. method_3 ( var_5, value ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { var_1 = ( ( type_2 ) ( var_1 ) ) . method_2 ( ) ; } if ( var_1 instanceof type_3 ) { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; if ( ( var_5 ) != null ) { var_5 . method_3 ( ) ; var_5 = null ; } } }
[0]: public void method_1 ( ) { int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( var_1. data ) ) ) ; i ++ ) { tmp *= i ; } var_1. data = ( ( double ) ( tmp ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_2 ) ) { var_3 = true ; } else if ( ( var_1 . method_2 ( ) ) == ( var_4 ) ) { var_5 = true ; } if ( ( var_1 . method_2 ( ) ) == ( var_6 ) ) { var_9 = true ; } else if ( ( var_1 . method_2 ( ) ) == ( var_8 ) ) { var_7 = true ; } }
[0]: public long method_1 ( long time ) { long var_1 = var_2. method_2 ( time, true ) ; long var_3 = var_4. method_3 ( var_1 ) ; long var_5 = var_6. add ( var_3, 1 ) ; return var_2. method_3 ( var_4. method_2 ( var_5, true ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { method_3 ( true ) ; if ( ( ( var_2 ) != null ) && ( ( var_3 ) != null ) ) { method_2 ( true ) ; type_1 . method_4 ( ) . method_5 ( var_2 , var_3 ) . method_6 ( this ) . method_7 ( this ) ; var_4 . method_8 ( null ) ; } }
[0]: public void method_1 ( int var_1, type_1 var_2 ) { super. method_1 ( var_1, var_2 ) ; if ( var_1 == ( var_3 ) ) { type_2 var_4 = new type_2 ( var_5 ) ; var_4. method_2 ( type_3. getcolor ( var_6, var_7 ) ) ; type_4 var_8 = var_4. build ( ) ; var_8. method_3 ( var_6, type_5. method_4 ( var_9 [ ( ( index ) ++ ) ] ) ) ; } }

************

************
tgt: public synchronized void method_1 ( ) { if ( ! ( this . var_1 ) ) { this . var_2 = 1.0f / float_1 ; this . var_3 = false ; method_2 ( ( ( 1 - ( ( type_1 . method_3 ( float_2 ) ) / float_3 ) ) / int_1 ) , float_4 , ( ( 1 + ( ( type_1 . method_3 ( float_2 ) ) / float_3 ) ) / int_1 ) , float_4 , this . var_4 ) ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( ). add ( type_2. method_3 ( string_1, var_1. method_4 ( ) ) ). method_5 ( ) ) ) ; if ( ( var_2!= null ) && ( type_3. method_6 ( string_2, var_1. method_7 ( ) ) ) ) { return var_1 ; } return null ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_3 ) == null ) { var_3 = var_4 . method_2 ( ) ; var_5 = new type_1 ( ) . method_3 ( var_6 ) . build ( ) ; var_7 = new java.util.arraylist < > ( ) ; var_7 . add ( new type_2 ( ) . method_4 ( new type_3 ( var_8 ) ) . build ( ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = type_2. method_3 ( method_4 ( ) ) ; if (! ( var_3. method_5 ( ) ) ) { method_6 ( var_1 ) ; } else { type_3 var_4 = new type_3 ( this, var_5, var_6, var_7 ) ; type_4 var_8 = new type_4 ( this, var_4 ) ; var_8. method_7 ( new type_5 ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.util.list < type_2 > var_1 , java.lang.string var_2 ) { try { type_1 var_3 = new type_1 ( ) ; var_3 . append ( "name" , string_1 ) . append ( string_2 , method_2 ( var_1 , var_2 ) ) ; return var_3 ; } catch ( java.io.ioexception var_4 ) { var_4 . method_3 ( ) ; return null ; } }
[0]: protected void method_1 ( java.lang.string status ) { java.lang.string var_1 = ( ( var_2 ) + string_1 ) + ( filename ) ; if ( status. equals ( string_2 ) ) { if ( type. equals ( var_3 ) ) { type_1 var_4 = new type_1 ( context ) ; type_2 var_5 = new type_2 ( var_4 ) ; var_5. execute ( var_1 ) ; var_4. method_2 ( params ) ; var_6. method_3 ( var_4 ) ; } } else { } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_1 = string_2 ; java.lang.string var_2 = string_2 ; type_1 var_3 = new type_1 ( ) ; boolean var_4 = false ; boolean result = var_3 . method_2 ( var_1 , var_2 ) ; assertequals ( var_4 , result ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( string_1 ) ; type_2 var_4 = new type_3 ( ) ; java.util.list < type_4 > var_5 = var_4. method_3 ( var_1, var_3 ) ; var_4. method_4 ( var_5, var_2, var_3 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( double var_1 , double var_2 , type_1 var_3 ) throws java.io.ioexception { this . var_3 = var_3 ; this . var_5 = var_2 ; this . var_4 = ( ( int ) ( type_2 . method_2 ( ( var_1 * ( var_3 . size ( ) ) ) ) ) ) ; method_1 ( string_1 , null , var_4 , var_5 ) ; }
[0]: public boolean equals ( int var_1, int var_2, type_1 var_3 ) { return ( ( ( ( this. var_1 ) == var_1 ) && ( ( this. var_2 ) == var_2 ) ) && ( ( this. var_3 ) == var_3 ) ) || ( ( ( this. var_3 )!= null ) && ( this. var_3. equals ( var_3 ) ) ) ; }

************

************
tgt: protected void method_1 ( ) { var_1 = true ; var_2 -= var_3 ; var_4 . add ( new float [ ] { var_5 , var_6 , ( var_7 ) / int_1 } ) ; var_8 . add ( new float [ ] { var_9 , var_10 , var_5 , var_6 , var_7 } ) ; }
[0]: protected void method_1 ( type_1 var_1, type_2 out ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { method_3 ( out, method_4 ( var_1. getname ( ), var_1. gettype ( ). method_5 ( ), string_1, string_2, false ), false ) ; } }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 , boolean type , int var_3 ) { type_1 var_4 = var_5 . method_2 ( var_1 , var_2 , type , var_6 ) ; return ( type ? ( var_7 . method_3 ( var_2 ) . method_4 ( ) ) == var_3 : ( var_8 . method_5 ( var_2 ) . method_4 ( ) ) == var_3 ) && ( this . method_6 ( var_4 , var_9 ) ) ; }
[0]: protected void method_1 ( final type_1 var_1 ) { final type_2 var_2 = new type_2 ( ) { protected void method_2 ( final java.lang.string var_3 ) { type_3. method_3 ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + var_3 ) + string_3 ) + ( type_4. method_4 ( ) ) ) ) ; } } ; var_2. method_5 ( var_1. tostring ( ), int_1 ) ; }

************

************
tgt: public void method_1 ( double time , type_1 var_1 ) { if ( time <= 0 ) { return ; } double var_2 = this . method_2 ( ) ; if ( time <= var_2 ) { this . method_3 ( time ) ; return ; } else { this . method_3 ( var_2 ) ; this . method_4 ( var_1 ) ; java.lang.system.out.println ( var_2 ) ; this . method_1 ( ( time - var_2 ) , var_1 ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { try { type_1 var_4 = var_5. method_2 ( string_1 ) ; var_4. method_3 ( 1, var_1 ) ; var_4. method_3 ( int_1, var_3 ) ; var_4. method_3 ( int_2, var_2 ) ; var_4. execute ( ) ; } catch ( type_2 var_6 ) { var_6. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.classnotfoundexception { java.lang.class . method_2 ( string_1 ) ; try { type_1 var_1 = null ; var_1 = this . method_3 ( ) ; java.lang.system.out.println ( string_2 ) ; } catch ( type_2 var_2 ) { java.lang.system.out.println ( string_3 ) ; var_2 . method_4 ( ) ; return ; } }
[0]: public byte [ ] method_1 ( int var_1, byte [ ] buf, int x, int y, int var_2, int var_3 ) throws java.io.ioexception, type_1 { type_2. method_2 ( this, var_1, buf. length, x, y, var_2, var_3 ) ; int var_4 = type_2. method_3 ( this ) ; var_5. method_4 ( ( ( var_6 ) + ( var_1 * var_4 ) ) ) ; method_5 ( var_5, x, y, var_2, var_3, buf ) ; return buf ; }

************

************
tgt: private void method_1 ( type_1 t , java.util.set < type_1 > var_1 ) { if ( ( t != null ) && ( ! ( var_1 . contains ( t ) ) ) ) { var_1 . add ( t ) ; if ( ( t . method_2 ( ) ) != null ) { for ( type_1 var_2 : t . method_2 ( ) ) { method_1 ( var_2 , var_1 ) ; } } } }
[0]: protected type_1 build ( type_2 node ) { type_1 var_1 = build ( node. method_1 ( ) ) ; type_3 var_2 = node. method_2 ( ) ; if ( var_2!= null ) { type_4 var_3 = method_3 ( ) ; var_3. method_4 ( var_1 ) ; var_3. method_5 ( build ( var_2 ) ) ; var_1 = method_6 ( var_3, node. method_7 ( ). method_8 ( ) ) ; } return var_1 ; }

************

************
tgt: public static void method_1 ( int n , char src , char var_2 , char var_1 ) { if ( n > 0 ) { type_1 . method_1 ( ( n - 1 ) , src , var_1 , var_2 ) ; java.lang.system.out.println ( ( ( ( ( n + string_1 ) + src ) + string_2 ) + var_1 ) ) ; type_1 . method_1 ( ( n - 1 ) , var_2 , src , var_1 ) ; } }
[0]: private void method_1 ( ) throws java.io.ioexception, type_1, type_2, type_3 { var_1 = type_4. method_2 ( ). method_3 ( method_4 ( ) ). method_5 ( type_5. method_6 ( string_1 ). method_7 ( ) ). method_8 ( ) ; var_2 = var_1. method_9 ( ). method_10 ( ) ; var_2 = var_1. method_9 ( ). method_10 ( ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( long var_1 ) { type_2 var_2 = type_3 . method_2 ( ) . method_3 ( ) . method_4 ( var_3 class ) ; var_2 . method_5 ( int_1 ) ; var_2 . add ( type_4 . method_6 ( string_1 , var_1 ) ) ; var_2 . method_7 ( type_5 . method_8 ( "id" ) ) ; var_2 . method_11 ( var_4 ) ; var_2 . method_9 ( int_1 ) ; var_2 . method_10 ( true ) ; return var_2 . list ( ) ; }
[0]: public int method_1 ( ) { var_1. method_2 ( string_1 ) ; int var_2 = var_3. method_3 ( string_2 ) ; if ( method_4 ( string_3 ) ) var_2 = 0 ; else if ( method_4 ( string_4 ) ) var_2 = 1 ; else if ( method_4 ( string_5 ) ) var_2 = int_1 ; return var_2 ; }

************

************
tgt: public type_1 method_1 ( java.lang.string path ) throws type_2 { set ( var_1 , path ) ; java.util.scanner var_4 = new java.util.scanner ( new java.io.fileinputstream ( path ) ) ; while ( var_4 . method_3 ( ) ) { java.lang.string var_5 = var_4 . method_4 ( ) ; var_6 . add ( var_5 ) ; } return this ; }
[0]: private void method_1 ( final java.util.set < java.io.file > var_1 ) throws java.io.ioexception { if ( ( var_2 )!= null ) { try { var_2. method_2 ( var_1 ) ; } catch ( final java.lang.exception var_3 ) { throw new java.io.ioexception ( ( string_1 + ( var_3. method_3 ( ) ) ), var_3 ) ; } } }

************

************
tgt: public void method_1 ( boolean var_1 ) { super . method_1 ( var_1 ) ; if ( var_1 ) { method_2 ( var_2 ) ; if ( ! ( var_3 ) ) { var_4 . method_3 ( ) ; var_4 . method_4 ( var_5 ) ; var_3 = true ; } } }
[0]: public void method_1 ( type_1 var_1 ) { try { type_2 p = var_1. method_2 ( ). iterator ( ). method_3 ( ). getvalue ( var_2 class ) ; method_4 ( p ) ; if ( ( p. method_5 ( ) ) == 0 ) method_6 ( true ) ; } catch ( java.lang.exception var_3 ) { method_4 ( null ) ; } }

************

************
tgt: public final void method_1 ( java.util.date var_1 ) { if ( ( ( this . var_1 ) == null ) || ( ! ( this . var_1 . equals ( var_1 ) ) ) ) { if ( ( ( var_1 != null ) && ( ( var_2 ) != null ) ) && ( var_2 . method_2 ( var_1 ) ) ) { throw new type_1 ( string_1 ) ; } this . var_1 = var_1 ; type_2 . method_3 ( ) ; type_2 . method_4 ( ) ; } }
[0]: public boolean method_1 ( boolean var_1, int var_2 ) { boolean var_3 = ( method_2 ( var_1, var_2 ) ) >= int_1 ; boolean var_4 = ( method_3 ( var_1, var_2 ) ) >= int_1 ; boolean var_5 = ( method_4 ( var_1, var_2 ) ) >= int_1 ; return ( var_3 || var_4 ) || var_5 ; }

************

************
tgt: private void method_1 ( type_1 c , type_2 var_1 , type_3 var_2 , type_4 var_3 , type_5 var_4 ) { type_6 var_5 = method_2 ( c , var_3 , var_2 ) ; type_7 . method_3 ( var_4 . method_4 ( ) ) ; method_6 ( c . method_7 ( ) , var_1 , var_3 , var_4 , var_5 ) ; }
[0]: private void method_1 ( ) throws java.lang.exception { type_1. method_2 ( var_1, string_1 ) ; this. var_2. method_3 ( this ) ; if ( this. var_3 ) this. method_4 ( ) ; boolean var_4 ; var_4 = this. method_5 ( ) ; if (! var_4 ) { type_1. method_6 ( var_1, string_2 ) ; this. var_5 = false ; throw new java.lang.exception ( string_2 ) ; } type_1. method_2 ( var_1, string_3 ) ; this. method_7 ( ) ; }

************

************
tgt: public < type_1 > type_1 method_1 ( final type_2 source , final type_2 var_1 , final java.lang.string label , final type_3 < type_1 > var_2 ) { final type_1 var_3 = method_2 ( source . method_3 ( ) . method_4 ( label , var_1 . method_3 ( ) ) , var_2 ) ; return var_3 ; }
[0]: public void method_1 ( ) { if (! ( var_1. gettext ( ). equals ( var_1. gettext ( ) ) ) ) { var_2 = ( var_1. method_2 ( ) ) + ( java.lang.math.round ( var_1. method_3 ( ). method_4 ( ) ) ) ; var_3 = var_1. method_5 ( ) ; } else { var_2 = var_4 ; double var_5 = java.lang.math.round ( var_6. method_3 ( ). method_6 ( ) ) ; var_3 += var_5 ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , type_1 var_4 ) throws type_2 { if ( ( var_6 ) == 1 ) var_5 = var_7 . method_2 ( var_1 , var_2 ) ; if ( var_5 ) tmp . method_1 ( var_1 , var_2 , var_3 , var_4 ) ; ( var_6 ) ++ ; }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ) ) > 1 ) { var_1. method_3 ( ) ; var_2 = var_1. method_2 ( ) ; } if ( ( var_2 ) == int_1 ) { var_3. set ( var_4 ) ; var_5. set ( float_1 ) ; } if ( ( var_2 ) == int_2 ) { var_5. set ( 0 ) ; var_1. method_4 ( ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { if ( var_2 . isempty ( ) ) return null ; java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; for ( int j : var_2 ) var_1 . add ( java.lang.integer.tostring ( j ) ) ; return new type_2 ( ) . method_2 ( string_1 , var_1 ) . method_3 ( var_3 class ) ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1 = new type_1 ( 1 ) ; var_2 = new type_2 ( ) ; var_3 = new type_3 ( ) ; var_4 = new type_4 ( ) ; var_4. method_2 ( string_2, new type_5 ( ) ) ; type_6. method_3 ( string_3, var_4 ) ; type_6. method_4 ( string_4, float_1 ) ; var_5 = new type_7 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( ( ( var_1 == ( id ) ) && ( var_2 != ( var_3 ) ) ) || ( data == null ) ) { return ; } result = type_1 . method_2 ( data ) ; method_4 ( ) ; }
[0]: public void method_1 ( int var_1 ) { if ( var_1 == ( var_2 ) ) { var_3. method_2 ( ) ; var_4. method_3 ( ) ; method_4 ( ) ; } else if ( var_1 == ( var_5 ) ) { } else if ( var_1 == ( var_6 ) ) { var_7. method_5 ( this ) ; var_3. method_2 ( ) ; var_4. method_3 ( ) ; method_4 ( ) ; } var_8. method_6 ( ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { return ( ( ( ( double ) ( var_1 ) ) / ( method_2 ( var_2 ) . getint ( ) ) ) - 1 ) == ( ( type_1 . method_3 ( ( ( ( double ) ( var_1 ) ) / ( method_2 ( var_2 ) . getint ( ) ) ) ) ) - 1 ) ; }
[0]: public void update ( ) { var_1. method_1 ( b. method_2 ( ). method_3 ( ) ) ; var_2. settext ( ( ( ( ( ( b. getname ( ) ) + string_1 ) + ( b. method_4 ( ). method_3 ( ) ) ) + string_2 ) + ( b. method_5 ( ). method_3 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 ) ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; type_2 parameters = new type_2 ( var_4 , var_5 ) ; type_3 var_6 = new type_3 ( var_2 . getcontext ( ) ) ; var_6 . settext ( string_1 ) ; parameters . method_3 ( var_7 , var_8 ) ; var_2 . method_4 ( var_6 , parameters ) ; var_1 = true ; } else { var_1 = false ; } }
[0]: private void method_1 ( java.lang.string var_1 ) { java.util.arraylist < java.lang.string > var_2 = var_3. method_2 ( var_1 ) ; java.lang.string [ ] var_4 = ( ( java.lang.string [ ] ) ( var_2. method_3 ( ) ) ) ; var_5. method_4 ( new type_1 ( this, var_6, var_4 ) ) ; }

************

************
tgt: protected synchronized java.lang.string method_1 ( type_1 < ? > var_1 ) { var_2 . method_5 ( ) ; var_2 . method_2 ( var_1 ) ; java.lang.string var_3 = ( ( ( string_1 + ( var_1 . method_3 ( ) . tostring ( ) ) ) + string_2 ) + ( type_2 . method_4 ( string_3 ) ) ) + ( var_2 . tostring ( ) ) ; var_2 . method_5 ( ) ; return var_3 ; }
[0]: public boolean method_1 ( java.lang.string [ ] var_1 ) { if ( ( var_1. length ) == 0 ) { return true ; } else if ( ( var_1. length ) == 1 ) { return! ( var_2. method_2 ( ). contains ( var_1 [ 0 ] ) ) ; } else { return false ; } }

************

************
tgt: public static void method_1 ( java.lang.string url , java.lang.string var_1 , type_1 var_2 ) { type_2 . method_2 ( ) ; type_2 . method_3 ( ) ; type_2 . method_4 ( ) ; type_3 var_3 = type_3 . method_5 ( type_4 . method_6 ( string_1 ) , var_1 ) ; var_4 . method_1 ( url , var_3 , new type_5 ( var_2 ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3 ; java.lang.object var_4 = var_1. method_2 ( var_5 ) ; if ( var_4 == null ) { var_2 = type_1. method_3 ( var_4. tostring ( ) ) ; if ( var_2 == null ) { var_2 = var_3 ; } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( output . gettext ( ) . trim ( ) . isempty ( ) ) || ( ! ( output . gettext ( ) . trim ( ) . method_2 ( type_2 . method_3 ( ) ) ) ) ) { var_1 . method_4 ( var_2 ) ; } else { var_1 . method_4 ( var_3 ) ; } }
[0]: public boolean contains ( final java.lang.object var_1 ) { if (! ( var_1 instanceof java.util.map.entry ) ) return false ; final java.util.map.entry <?,? > var_2 = ( ( java.util.map.entry <?,? > ) ( var_1 ) ) ; type_1 var_3 = get ( var_2. method_1 ( ) ) ; return var_3. equals ( var_2. getvalue ( ) ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string text ) { java.lang.string [ ] var_1 = text . split ( "\n" ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] . trim ( ) . length ( ) ) == 0 ) break ; if ( type_1 . method_2 ( var_1 [ i ] ) ) return true ; } return false ; }
[0]: public static boolean method_1 ( long [ ] array, int index, long var_1, long value ) { return type_1. method_2 ( ). method_3 ( array, ( ( var_2 ) + ( ( ( long ) ( index ) ) < < ( var_3 ) ) ), var_1, value ) ; }

************

************
tgt: public void method_1 ( java.lang.object response ) { java.lang.string var_1 = method_2 ( ( ( java.lang.string ) ( response ) ) , string_1 ) ; int var_2 = 0 ; try { var_2 = java.lang.integer.parseint ( var_1 ) ; } catch ( type_1 var_3 ) { var_3 . method_3 ( ) ; } float var_4 = ( ( float ) ( var_2 / float_1 ) ) ; type_2 . method_4 ( listener , var_4 ) ; }
[0]: public type_1 method_1 ( final java.lang.string var_1 ) throws java.io.ioexception, type_2 { type_3 var_2 = method_2 ( var_1 ) ; return type_1. method_3 ( ). method_4 ( var_3, var_2. get ( var_3 ). method_5 ( ) ). method_4 ( var_4, var_2. get ( var_4 ). intvalue ( ) ). method_4 ( var_5, var_2. get ( var_5 ). method_5 ( ) ). method_4 ( var_6, var_2. get ( var_6 ). method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { super . method_1 ( var_1 , var_2 ) ; double value ; for ( type_3 var_3 : var_1 ) { value = method_2 ( var_3 ) ; min = type_4 . min ( min , value ) ; var_5 = type_4 . method_3 ( var_5 , value ) ; } }
[0]: public boolean method_1 ( java.lang.string var_1 ) { if ( type_1. method_2 ( var_1 ) ) { method_3 ( ) ; return true ; } if (! ( method_4 ( var_1 ) ) ) { return false ; } method_5 ( method_6 ( ), null, var_1, null, true, var_2, var_3, var_4 ) ; return true ; }

************

************
tgt: void method_1 ( ) { if ( ( var_1 . data ) == null ) return ; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( var_1 . data ) ) ) ; i ++ ) { tmp *= i ; } var_1 . data = ( ( double ) ( tmp ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1. method_2 ( new type_2 ( var_2, var_3 ) ). method_3 ( string_1, string_2 ). method_4 ( string_3 ). build ( ) ; var_4. execute ( var_1 ) ; type_3. assertthat ( var_5. method_5 ( ). get ( string_4 ). startswith ( string_5 ), method_6 ( true ) ) ; }

************

************
tgt: public long method_1 ( long time ) { long var_1 = var_2 . method_2 ( time , false ) ; long var_3 = var_4 . method_3 ( var_1 ) ; long var_5 = var_6 . add ( var_3 , 1 ) ; return var_2 . method_3 ( var_4 . method_2 ( var_5 , false ) ) ; }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_2 == ( var_3 ) ) { if ( var_1 == ( var_4 ) ) { type_1 var_5 = data. getdata ( ) ; if ( null!= var_5 ) { java.lang.string path = method_2 ( var_5 ) ; var_6. method_3 ( var_5 ) ; } } } } }

************

************
tgt: public void method_1 ( int var_1 , type_1 var_2 ) { super . method_1 ( var_1 , var_2 ) ; if ( ( var_1 == ( var_3 ) ) && ( ( index ) <= ( var_9 . length ) ) ) { type_2 var_4 = new type_2 ( var_5 ) ; var_4 . method_2 ( type_3 . getcolor ( var_6 , var_7 ) ) ; type_4 var_8 = var_4 . build ( ) ; var_8 . method_3 ( var_6 , type_5 . method_4 ( var_9 [ ( ( index ) ++ ) ] ) ) ; } }
[0]: public synchronized void method_1 ( long var_1 ) { ( var_2 ) ++ ; ( var_3 ) ++ ; if ( var_1 > 0 ) { var_4 = type_1. min ( var_4, var_1 ) ; var_5 = type_1. method_2 ( var_5, var_1 ) ; var_6 += var_1 ; var_7 += var_1 ; ( var_8 ) ++ ; ( var_9 ) ++ ; } method_3 ( false ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( ) . add ( type_2 . method_3 ( string_1 , var_1 . method_4 ( ) ) ) . method_5 ( ) ) ) ; if ( ( var_2 != null ) && ( type_3 . method_6 ( var_1 . method_7 ( ) , var_2 . method_7 ( ) ) ) ) { return var_1 ; } return null ; }
[0]: private type_1 method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 ; if ( ( ( var_3 = var_2. method_2 ( var_1 ) )!= null ) && ( ( var_2. method_3 ( var_3. method_4 ( ) ) )!= null ) ) return method_1 ( var_3, var_2 ) ; else return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = type_2 . method_3 ( method_4 ( ) ) ; if ( var_3 . method_5 ( ) ) { method_6 ( var_1 ) ; } else { type_3 var_4 = new type_3 ( this , var_5 , var_6 , var_7 ) ; type_4 var_8 = new type_4 ( this , var_4 ) ; var_8 . method_7 ( new type_5 ( ) ) ; } }
[0]: public void method_1 ( type_1 var_1, double var_2, double var_3, double var_4, float var_5 ) { var_6. method_2 ( ( ( int ) ( x ) ), ( ( int ) ( var_7 ) ) ) ; var_1. method_3 ( x, y, var_7 ) ; var_8 = var_2 ; var_9 = var_3 ; var_10 = var_4 ; }

************

************
tgt: protected void method_1 ( java.lang.string status ) { java.lang.string var_1 = ( ( var_2 ) + string_1 ) + ( filename ) ; if ( status . equals ( string_2 ) ) { if ( type . equals ( var_3 ) ) { type_2 var_5 = new type_2 ( var_4 ) ; var_5 . execute ( var_1 ) ; var_4 . method_2 ( params ) ; } } else { } }
[0]: public void method_1 ( ) { java.util.arraylist < java.lang.string > errors = var_1 ; view. method_2 ( ) ; try { method_3 ( ) ; view. method_4 ( var_2. method_5 ( ) ) ; this. method_6 ( ). method_1 ( ) ; var_3 = false ; view. method_7 ( ) ; this. method_8 ( var_1 ) ; view. method_9 ( string_2 ) ; } catch ( type_1 var_4 ) { this. method_8 ( errors ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( string_1 ) ; type_2 var_4 = new type_3 ( ) ; java.util.list < type_4 > var_5 = var_4 . method_3 ( var_1 , var_3 ) ; var_4 . method_4 ( var_5 , var_2 , var_3 , var_1 ) ; return var_3 ; }
[0]: private static void method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1 == null ) || ( var_2 == null ) ) { return ; } type_2 var_3 = type_3. method_2 ( var_1 ) ; type_2 var_4 = type_3. method_2 ( var_2 ) ; if ( ( var_3!= null ) && ( var_4!= null ) ) { var_5. method_3 ( var_6 ) ; var_7. method_3 ( var_8 ) ; } }

************

************
tgt: boolean equals ( int var_1 , int var_2 , type_1 var_3 ) { return ( ( ( this . var_1 ) == var_1 ) && ( ( this . var_2 ) == var_2 ) ) && ( ( ( this . var_3 ) == var_3 ) || ( ( ( this . var_3 ) != null ) && ( this . var_3 . equals ( var_3 ) ) ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { int var_1 = int_1 ; int [ ] var_2 = new int [ ] { int_2, int_3 } ; int var_3 = int_4 ; java.util.arraylist < java.lang.integer > var_4 = new java.util.arraylist < > ( var_2. length ) ; for ( int id : var_2 ) { var_4. add ( id ) ; } java.util.collections.sort ( var_4 ) ; type_1 var_5 = new type_1 ( var_1, var_3 ) ; var_5. method_1 ( var_4 ) ; java.lang.system.out.println ( var_5 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 out ) { if ( ( var_1 . method_2 ( ) ) != 1 ) { method_3 ( out , method_4 ( var_1 . getname ( ) , var_1 . gettype ( ) . method_5 ( ) , string_1 , string_2 , false ) ) ; } }
[0]: private void method_1 ( float var_1 ) { type_1 var_2 = new type_1 ( ) ; var_3. method_2 ( var_2 ). method_3 ( var_4 ) ; if ( ( var_2. method_4 ( ) ) > ( var_5 ) ) { float var_6 = 1.0f + ( ( ( var_7 ) / ( var_2. method_4 ( ) ) ) * var_1 ) ; for ( type_2 var_8 : method_5 ( ) ) { var_9. method_6 ( 1.0f, var_6, 1.0f ) ; } } } }

************

************
tgt: protected void method_1 ( final type_1 var_1 ) { final type_2 var_2 = new type_2 ( ) { protected void method_2 ( final java.lang.string var_3 ) { type_3 . method_3 ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + var_3 ) + string_3 ) + ( type_4 . method_4 ( ) ) ) ) ; } } ; var_2 . method_5 ( var_1 . tostring ( ) ) ; }
[0]: public boolean contains ( java.lang.object var_1 ) { if ( ( var_1 instanceof java.lang.integer ) || ( var_1 instanceof java.lang.integer ) ) { type_1 n = ( ( type_1 ) ( var_1 ) ) ; int index = n. intvalue ( ) ; return ( ( index > 0 ) && ( index < ( var_2. length ( ) ) ) ) && ( var_2. get ( index ) ) ; } return false ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_3 , java.lang.string var_2 ) { try { type_1 var_4 = var_5 . method_2 ( string_1 ) ; var_4 . method_3 ( 1 , var_1 ) ; var_4 . method_3 ( int_1 , var_3 ) ; var_4 . method_3 ( int_2 , var_2 ) ; var_4 . execute ( ) ; } catch ( type_2 var_6 ) { var_6 . method_4 ( ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, type_1 var_2 ) { if ( var_1 == null ) { return null ; } switch ( var_1 ) { case var_3 : var_2 = var_4 ; break ; case var_5 : var_2 = var_6 ; break ; case var_7 : var_2 = var_8 ; break ; case var_9 : var_2 = var_10 ; break ; case var_11 : var_2 = var_10 ; break ; case var_12 : var_2 = var_13 ; break ; } return null ; }

************

************
tgt: public byte [ ] method_1 ( int var_1 , byte [ ] buf , int x , int y , int var_2 , int var_3 ) throws java.io.ioexception , type_1 { type_2 . method_2 ( this , var_1 , buf . length , x , y , var_2 , var_3 ) ; long var_4 = type_2 . method_3 ( this ) ; var_5 . method_4 ( ( ( var_6 ) + ( var_1 * var_4 ) ) ) ; method_5 ( var_5 , x , y , var_2 , var_3 , buf ) ; return buf ; }
[0]: public static java.lang.string method_1 ( type_1 context ) { try { type_2 var_1 = type_3. method_2 ( context ) ; java.lang.string var_2 = context. method_3 ( ). getstring ( var_3 ) ; if ( var_1!= null ) { type_4 var_4 = type_5. method_4 ( context, var_1 ) ; if ( var_4!= null ) { var_2 = var_4. method_5 ( context ) ; var_4. method_6 ( ) ; } } return var_2 ; } catch ( type_6 var_5 ) { var_5. method_7 ( ) ; return null ; } } }

************

************
tgt: protected type_1 build ( type_2 node ) { type_1 var_1 = build ( node . method_1 ( ) ) ; type_3 var_2 = node . method_2 ( ) ; if ( var_2 != null ) { type_4 var_3 = method_3 ( ) ; var_3 . method_4 ( var_1 ) ; var_3 . method_4 ( build ( var_2 ) ) ; var_1 = method_6 ( var_3 , node . method_7 ( ) . method_8 ( ) ) ; } return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1, int var_2 ) { type_1 data = get ( ( ( string_1 + var_1 ) + string_2 ), var_3 ) ; if ( var_2 < int_1 ) { data = ( ( type_1 ) ( ( ( type_2 ) ( data ) ). get ( string_3 ) ) ) ; } return data ; }

************

************
tgt: private void method_1 ( ) throws java.io.ioexception , type_1 , type_2 , type_3 { var_1 = type_4 . method_2 ( ) . method_3 ( method_4 ( ) ) . method_5 ( method_6 ( string_1 ) ) . method_8 ( ) ; var_2 = var_1 . method_9 ( ) . method_10 ( ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) { var_1 = var_1. trim ( ) ; if ( ( var_1!= null ) && ( ( var_1. length ( ) ) > 0 ) ) { var_2. settext ( var_1 ) ; var_3 = var_1 ; } else { var_2. settext ( var_4 ) ; var_3 = null ; } }

************

************
tgt: public int method_1 ( ) { int var_2 = var_3 . method_3 ( string_2 ) ; if ( method_4 ( string_3 ) ) var_2 = 0 ; else if ( method_4 ( string_4 ) ) var_2 = 1 ; else if ( method_4 ( string_5 ) ) var_2 = int_1 ; return var_2 ; }
[0]: public boolean method_1 ( int var_1, int var_2, int var_3 ) { int var_4 = x ; int var_5 = y ; var_4 += ( var_1 * ( - 1 ) ) * var_3 ; var_5 += var_2 * var_3 ; if ( ( ( var_4 >= 0 ) && ( var_4 < int_1 ) ) || ( ( var_5 >= 0 ) && ( var_5 < int_1 ) ) ) { method_2 ( var_4, var_5 ) ; return true ; } return false ; }

************

************
tgt: private void method_1 ( final java.util.set < java.io.file > var_1 ) throws java.io.ioexception { if ( ( var_2 ) != null ) { try { var_2 . method_2 ( var_1 ) ; } catch ( final java.lang.exception var_3 ) { if ( var_3 instanceof java.io.ioexception ) { throw ( ( java.io.ioexception ) ( var_3 ) ) ; } throw new java.io.ioexception ( ( string_1 + ( var_3 . method_3 ( ) ) ) ) ; } } }
[0]: private static boolean method_1 ( int var_1, java.util.map < java.lang.integer, java.util.set < java.lang.integer > > var_2 ) { for ( int var_3 = 0 ; var_3 < var_1 ; var_3 ++ ) { java.util.set < java.lang.integer > var_4 = new java.util.hashset < java.lang.integer > ( ) ; var_4. add ( var_3 ) ; if ( ( type_1. method_2 ( var_2, var_4, var_3 ) ) == true ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { type_2 p = var_1 . method_2 ( ) . iterator ( ) . method_3 ( ) . getvalue ( var_2 class ) ; method_4 ( p ) ; if ( ( p . method_5 ( ) ) == 0 ) method_6 ( true ) ; } catch ( java.lang.exception var_3 ) { method_4 ( null ) ; method_6 ( false ) ; } }
[0]: public void method_1 ( ) { if (! ( var_1. contains ( var_2 ) ) ) { var_1. add ( var_2 ) ; type_1 var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) ; type_2 < java.lang.string > var_5 = ( ( type_2 < java.lang.string > ) ( var_3. method_3 ( ) ) ) ; var_5. add ( var_2 ) ; var_5. method_4 ( ) ; } }

************

************
tgt: public boolean method_1 ( boolean var_1 , int var_2 ) { boolean var_3 = ( method_2 ( var_1 , var_2 ) ) > int_1 ; boolean var_4 = ( method_3 ( var_1 , var_2 ) ) > int_1 ; boolean var_5 = ( method_4 ( var_1 , var_2 ) ) > int_1 ; return ( var_3 || var_4 ) || var_5 ; }
[0]: public void method_1 ( ) { type_1. info ( string_1 ) ; java.lang.string var_1 = string_2 + ( method_2 ( ) ) ; java.lang.string var_2 = string_3 + ( method_2 ( ) ) ; var_3. method_3 ( ) ; var_4. method_4 ( ) ; type_1. info ( string_4 ) ; var_5. method_5 ( var_1, string_5, var_2, true ) ; type_1. info ( string_6 ) ; var_4. method_6 ( string_7 ) ; var_6. method_7 ( type_2. replace ( string_8, var_1 ) ) ; }

************

************
tgt: private void method_1 ( ) throws java.lang.exception { type_1 . method_2 ( var_1 , string_1 ) ; this . var_2 . method_3 ( this ) ; if ( this . var_3 ) this . method_4 ( ) ; boolean var_4 ; var_4 = this . method_5 ( ) ; if ( var_4 ) { type_1 . method_2 ( var_1 , string_3 ) ; this . method_7 ( ) ; } else { type_1 . method_6 ( var_1 , string_2 ) ; this . var_5 = false ; throw new java.lang.exception ( string_2 ) ; } }
[0]: public java.lang.long method_1 ( java.lang.long var_1 ) throws type_1 { type_2 var_2 = null ; synchronized ( this ) { if (! ( method_2 ( var_1 ) ) ) { var_2 = new type_2 ( var_1 ) ; var_3. add ( var_2 ) ; return var_2. getid ( ) ; } } throw new type_1 ( ) ; } }

************

************
tgt: void method_1 ( ) { if ( this . isempty ( ) ) { var_2 = var_4 ; var_3 = 0 ; } else if ( ! ( var_1 . gettext ( ) . equals ( "\n" ) ) ) { var_2 = ( var_1 . method_2 ( ) ) + ( java.lang.math.round ( var_1 . method_3 ( ) . method_4 ( ) ) ) ; var_3 = var_1 . method_5 ( ) ; } else { var_2 = var_4 ; } }
[0]: private void method_1 ( java.util.set < java.lang.string > var_1, java.lang.string classname ) { for ( java.lang.string var_2 : this. var_3 ) { if ( var_2. equals ( classname ) ) return ; if ( var_2. method_2 ( string_1 ) ) { java.lang.string var_4 = var_2. substring ( 0, ( ( var_2. length ( ) ) - 1 ) ) ; if ( classname. startswith ( var_4 ) ) return ; } } var_1. add ( classname ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) > 0 ) { var_1 . method_3 ( ) ; var_2 = var_1 . method_2 ( ) ; java.lang.system.out.println ( var_2 ) ; } if ( ( var_2 ) == int_1 ) { java.lang.system.out.println ( string_1 ) ; var_3 . set ( var_4 ) ; var_5 . set ( float_1 ) ; } if ( ( var_2 ) == int_2 ) { var_5 . set ( 0 ) ; var_1 . method_4 ( ) ; } }
[0]: public void method_1 ( ) { var_1 = new type_1 ( ) ; var_2 = new type_2 ( ). method_2 ( string_1, false ) ; var_1. method_3 ( string_2 ) ; var_1. method_2 ( var_2 ) ; var_1. method_4 ( var_3 ) ; var_4. method_5 ( var_1 ) ; asserttrue ( var_4. method_6 ( var_1. method_7 ( ). get ( 0 ), var_1. getid ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1 = new type_1 ( 1 ) ; var_5 = new type_7 ( ) ; var_2 = new type_2 ( ) ; var_3 = new type_3 ( ) ; var_4 = new type_4 ( ) ; type_6 . method_3 ( string_3 , var_4 ) ; type_6 . method_4 ( string_4 , float_1 ) ; }
[0]: public void method_1 ( java.lang.object obj, java.lang.string var_1 ) throws type_1 { assert obj!= null ; if ( var_2. method_2 ( ) ) var_2. method_3 ( ( string_1 + obj ) ) ; obj = method_4 ( obj ) ; method_5 ( obj, var_3, null, null, null ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { if ( var_1 == ( var_2 ) ) { var_3 . method_2 ( ) ; var_4 . method_3 ( ) ; } else if ( var_1 == ( var_5 ) ) { } else if ( var_1 == ( var_6 ) ) { var_7 . method_5 ( this ) ; var_3 . method_2 ( ) ; var_4 . method_3 ( ) ; method_4 ( ) ; } var_8 . method_6 ( ) ; }
[0]: public void method_1 ( ) throws type_1, type_2 { for ( type_3 var_1 : var_2. method_2 ( ) ) { if ( var_1. method_3 ( ). method_4 ( ) ) { type_3 var_3 = var_4. method_5 ( var_1. getname ( ) ) ; if ( var_3 == null ) { } else { type_4. asserttrue ( var_5, var_4. method_5 ( var_1. getname ( ) ). method_3 ( ). method_4 ( ) ) ; } } } }

************

************
tgt: public void update ( ) { var_1 . method_1 ( b . method_2 ( ) . tostring ( ) ) ; var_2 . settext ( ( ( ( ( ( b . getname ( ) ) + string_1 ) + ( b . method_4 ( ) . tostring ( ) ) ) + string_2 ) + ( b . method_5 ( ) . tostring ( ) ) ) ) ; }
[0]: protected java.lang.integer method_1 ( java.lang.void... var_1 ) { method_2 ( var_2 ) ; type_1. method_3 ( ) ; boolean [ ] var_3 = new boolean [ 0 ] ; try { method_2 ( var_4 ) ; var_3 = method_4 ( ) ; method_2 ( var_5 ) ; method_5 ( ) ; method_6 ( ) ; } finally { method_2 ( var_6 ) ; method_7 ( var_3 ) ; } type_1. method_8 ( var_7 ) ; return 0 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { java.util.arraylist < java.lang.string > var_2 = var_3 . method_2 ( var_1 ) ; java.lang.string [ ] var_4 = new java.lang.string [ var_2 . size ( ) ] ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { var_4 [ i ] = var_2 . get ( i ) ; } var_5 . method_4 ( new type_1 < java.lang.string > ( this , var_6 , var_4 ) ) ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : return true ; case var_2 : android.content.intent var_3 = new android.content.intent ( this, var_4 class ) ; method_3 ( var_3 ) ; return true ; case var_5 : android.content.intent var_6 = new android.content.intent ( this, var_7 class ) ; method_3 ( var_6 ) ; return true ; default : return super. method_1 ( item ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string [ ] var_1 ) { if ( ( var_1 . length ) == 0 ) { return true ; } else if ( ( var_1 . length ) == 1 ) { return var_2 . method_2 ( ) . contains ( var_1 [ 0 ] ) ; } else { return false ; } }
[0]: public static type_1 method_1 ( java.lang.string name, java.lang.string [ ] args ) { if ( ( name. contains ( string_1 ) ) && ( name. contains ( string_2 ) ) ) { type_1 var_1 = type_2. method_2 ( name ) ; return ( ( type_1 ) ( var_1. getvalue ( ). value ) ). method_3 ( args ) ; } return var_2. get ( name ). method_3 ( args ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3 ; java.lang.object var_4 = var_1 . method_2 ( var_5 ) ; if ( var_4 != null ) { var_2 = type_1 . method_3 ( var_4 . tostring ( ) ) ; if ( var_2 == null ) { var_2 = var_3 ; } } return var_2 ; }
[0]: public void method_1 ( ) { java.lang.string var_1 ; java.lang.string var_2 = java.lang.string. method_2 ( index ) ; if (! ( type_1. contains ( ( string_1 + var_2 ) ) ) ) { index = 1 ; } var_1 = type_1. getstring ( ( string_1 + var_2 ) ) ; var_1 = var_1. replace ( string_2, string_3 ) ; method_3 ( var_1, int_1 ) ; index = ( index ) + 1 ; }

************

************
tgt: public boolean contains ( final java.lang.object var_1 ) { if ( ! ( var_1 instanceof java.util.map.entry ) ) return false ; final java.util.map.entry < ? , ? > var_2 = ( ( java.util.map.entry < ? , ? > ) ( var_1 ) ) ; type_1 var_3 = get ( var_2 . method_1 ( ) ) ; return ( var_3 != null ) && ( var_3 . equals ( var_2 . getvalue ( ) ) ) ; }
[0]: private void method_1 ( type_1 var_1, java.io.inputstream var_2 ) throws java.io.ioexception { type_2 var_3 = var_1. method_2 ( ) ; byte [ ] b = new byte [ int_1 ] ; int x = var_2. method_3 ( b ) ; while ( x!= ( - 1 ) ) { if ( x < int_2 ) { b = type_3. method_4 ( b, x ) ; } var_3. method_5 ( b ) ; x = var_2. method_3 ( b ) ; } }

************

************
tgt: public static boolean method_1 ( long [ ] array , int index , long var_1 , long value ) { assert ( index > ( - 1 ) ) && ( index < ( array . length ) ) ; return type_1 . method_2 ( ) . method_3 ( array , ( ( var_2 ) + ( ( ( long ) ( index ) ) < < ( var_3 ) ) ) , var_1 , value ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 start ) { var_1. method_2 ( new type_3 < type_4 > ( ) { public void handle ( type_4 event ) { if ( ( event. method_3 ( ) ) == ( var_2 ) ) { method_4 ( start ) ; } else if ( ( ( event. method_3 ( ) ) == ( var_3 ) ) && ( var_4 ) ) { method_5 ( var_5. method_6 ( ), var_5. method_7 ( ) ) ; } } } ) ; } }

************

************
tgt: public type_1 method_1 ( final java.lang.string var_1 ) throws java.io.ioexception , type_2 { type_3 var_2 = method_2 ( var_1 ) ; return type_1 . method_3 ( ) . method_4 ( var_3 , var_2 . get ( var_3 ) . method_5 ( ) ) . method_4 ( var_4 , var_2 . get ( var_4 ) . method_5 ( ) ) . method_4 ( var_5 , var_2 . get ( var_5 ) . method_5 ( ) ) . method_4 ( var_6 , var_2 . get ( var_6 ) . method_5 ( ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1, var_2. method_2 ( var_3 class ), 1, 0, 0, float_1, ( - float_2 ) ) ; double output = var_1. method_3 ( int_1, 0 ) ; assertequals ( float_1, output, float_3 ) ; output = var_1. method_3 ( ( - int_1 ), 0 ) ; assertequals ( ( - float_2 ), output, float_3 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { if ( type_1 . method_2 ( var_1 ) ) { method_3 ( ) ; return true ; } if ( ! ( method_4 ( var_1 ) ) ) { return false ; } method_5 ( method_6 ( ) , null , var_1 , null , true , var_2 , var_3 , var_4 , false , null ) ; return true ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { try { type_1 var_3 = type_1. method_2 ( var_1 ) ; var_3. update ( var_2. method_3 ( ) ) ; return type_2. method_4 ( var_3. method_5 ( ) ) ; } catch ( type_3 var_4 ) { throw new type_4 ( ( string_1 + var_1 ), var_4 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1 . method_2 ( new type_2 ( var_2 , var_3 ) ) . method_3 ( string_1 , string_2 ) . method_4 ( string_3 ) . build ( ) ; var_4 . execute ( var_1 ) ; assertthat ( var_5 . method_5 ( ) . get ( string_4 ) . startswith ( string_5 ) , type_4 . method_6 ( true ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { for ( type_3 var_2 : var_3 ) { if ( var_2. method_1 ( var_1 ) ) return var_2 ; } for ( type_3 var_4 : var_5 ) { if ( var_4. method_1 ( var_1 ) ) return var_4 ; } return null ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_2 == ( var_3 ) ) { if ( var_1 == ( var_4 ) ) { type_1 var_5 = data . getdata ( ) ; if ( null != var_5 ) { var_6 . method_3 ( var_5 ) ; } } } }
[0]: public void method_1 ( java.util.arraylist < type_1 > var_1, type_2 type_3 ) { if ( var_1!= null ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_1. get ( i ). method_2 ( int_1, int_1 ) ; } } var_2 = type_3 ; this. var_1 = var_1 ; }

************

************
tgt: public synchronized void method_1 ( long var_1 ) { ( var_2 ) ++ ; ( var_3 ) ++ ; if ( var_1 > 0 ) { var_4 = type_1 . min ( var_4 , var_1 ) ; var_5 = type_1 . method_2 ( var_5 , var_1 ) ; var_6 += var_1 ; var_7 += var_1 ; ( var_8 ) ++ ; ( var_9 ) ++ ; } method_3 ( ) ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = type_1. method_2 ( 0 ) ; for ( type_2 p : var_2 ) { type_3 var_3 = method_3 ( ). method_4 ( p ) ; if ( var_3 instanceof type_4 ) { type_4 var_4 = ( ( type_4 ) ( var_3 ) ) ; var_4. method_1 ( var_1 ) ; } } return var_1 ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 ; if ( ( ( ( var_3 = var_2 . method_2 ( var_1 ) ) != null ) && ( ( var_2 . method_3 ( var_3 . method_4 ( ) ) ) != null ) ) && ( ! ( var_3 . equals ( var_1 ) ) ) ) return method_1 ( var_3 , var_2 ) ; else return var_1 ; }
[0]: public java.lang.string method_1 ( int [ ] [ ] var_1 ) { java.lang.stringbuilder array = new java.lang.stringbuilder ( string_1 ) ; for ( int i = 0 ; i <= ( ( var_1. length ) - 1 ) ; i ++ ) { array. append ( ( ( this. method_2 ( var_1 [ i ] ) ) + ( type_1. method_3 ( ) ) ) ) ; } return java.lang.string.format ( var_2, array ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , float var_5 ) { var_6 . method_2 ( ( ( int ) ( x ) ) , ( ( int ) ( var_7 ) ) ) ; var_1 . method_3 ( x , y , var_7 ) ; var_8 = var_9 = var_10 = 0 ; }
[0]: public static void init ( final java.lang.string var_1, final java.lang.string var_2 ) throws java.io.ioexception { if ( var_3 ) { final java.util.set < java.lang.integer > var_4 ; var_5. info ( string_1 ) ; var_4 = type_1. method_1 ( var_2 ) ; var_5. info ( string_2 ) ; var_5. info ( string_3 ) ; type_1. method_2 ( var_1, var_4 ) ; var_5. info ( string_2 ) ; var_3 = true ; } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; view . method_2 ( ) ; try { method_3 ( ) ; view . method_4 ( var_2 . method_5 ( ) ) ; this . method_6 ( ) . method_1 ( ) ; var_3 = false ; view . method_7 ( ) ; this . method_8 ( var_1 ) ; view . method_9 ( string_2 ) ; } catch ( type_1 var_4 ) { this . method_8 ( var_1 ) ; } }
[0]: private static double method_1 ( type_1 p ) { double var_1 = 1.0 ; if ( ( p. method_2 ( ) ) > ( var_2 ) ) { var_1 = var_3 ; } else if ( ( p. method_2 ( ) ) > ( var_4 ) ) { var_1 = var_5 ; } return var_1 ; }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 == null ) || ( var_2 == null ) ) { return ; } type_2 var_3 = type_3 . method_2 ( var_1 ) ; type_2 var_4 = type_3 . method_2 ( var_2 ) ; if ( ( var_3 != null ) && ( var_4 != null ) ) { var_5 . method_3 ( var_6 , null ) ; var_7 . method_3 ( var_8 , null ) ; } }
[0]: public void method_1 ( ) { try { context. method_2 ( var_1 ) ; var_1. execute ( context ) ; } catch ( type_1 var_2 ) { var_3. error ( ( string_1 + ( var_1. getid ( ) ) ), var_2 ) ; } catch ( java.lang.exception var_2 ) { var_3. error ( ( string_2 + ( var_1. getid ( ) ) ), var_2 ) ; } finally { context. method_3 ( var_1 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int var_1 = int_4 ; int [ ] var_2 = new int [ ] { int_4 , int_2 , 1 } ; int var_3 = 0 ; java.util.arraylist < java.lang.integer > var_4 = new java.util.arraylist < > ( var_2 . length ) ; for ( int id : var_2 ) { var_4 . add ( id ) ; } type_1 var_5 = new type_1 ( var_1 , var_3 ) ; var_5 . method_1 ( var_4 ) ; java.lang.system.out.println ( var_5 ) ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { method_2 ( ) ; type_2 var_2 = type_2. method_3 ( ) ; if ( ( var_2!= null ) && (! ( var_2. method_4 ( ) ) ) ) { var_3. method_5 ( var_4 ) ; method_6 ( var_2 ) ; } else { var_3. method_5 ( var_4 ) ; type_3. method_7 ( ). method_8 ( this, type_4. method_9 ( string_1 ) ) ; } }

************

************
tgt: private void method_1 ( float var_1 ) { type_1 var_2 = new type_1 ( ) ; var_3 . method_2 ( var_2 ) . method_3 ( var_4 ) ; if ( ( var_1 > 0 ) || ( ( var_2 . method_4 ( ) ) > ( var_5 ) ) ) { float var_6 = 1.0f + ( ( ( var_7 ) / ( var_2 . method_4 ( ) ) ) * var_1 ) ; for ( type_2 var_8 : method_5 ( ) ) { var_9 . method_6 ( 1.0f , var_6 , 1.0f ) ; } } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.io.file var_3, final type_3 var_4 ) { try { var_1. method_2 ( java.lang.string.format ( string_1, var_5, method_3 ( ), var_2. method_4 ( ), url ) ) ; type_4 var_6 = method_5 ( var_1, method_6 ( var_3 ) ) ; var_6. method_7 ( var_1, var_2 ) ; var_1. method_2 ( java.lang.string.format ( string_2, var_5 ) ) ; } catch ( java.lang.exception var_7 ) { type_5. method_8 ( var_7 ) ; } }

************

************
tgt: public boolean contains ( java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { type_1 n = ( ( type_1 ) ( var_1 ) ) ; int index = n . intvalue ( ) ; return ( ( index > 0 ) && ( index < ( var_2 . length ( ) ) ) ) && ( var_2 . get ( index ) ) ; } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.arraylist < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; for ( type_1 var_3 : var_1. method_2 ( ) ) { java.lang.string var_4 = var_3. getvalue ( ). tostring ( ) ; var_2. add ( var_4 ) ; } java.lang.string var_5 = ( var_6 ) + ( var_2. size ( ) ) ; method_3 ( var_5 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_1 var_2 ) { if ( var_1 == null ) { return null ; } switch ( var_1 ) { case var_3 : var_2 = var_4 ; break ; case var_5 : var_2 = var_6 ; break ; case var_7 : var_2 = var_8 ; break ; case var_9 : var_2 = var_10 ; break ; case var_11 : var_2 = var_10 ; break ; case var_12 : var_2 = var_13 ; break ; } return var_2 ; }
[0]: public int method_1 ( java.lang.object var_1, java.lang.object var_2 ) { type_1 var_3 = ( ( type_1 ) ( var_1 ) ) ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; if ( ( ( int ) ( ( var_5 ) - ( var_6 ) ) ) == 0 ) { return 0 ; } else if ( ( ( int ) ( ( var_5 ) - ( var_6 ) ) ) >= 0 ) { return - 1 ; } else { return 1 ; } }

************

************
tgt: public static java.lang.string method_1 ( type_1 context ) { try { type_2 var_1 = type_3 . method_2 ( context ) ; java.lang.string var_2 = context . method_3 ( ) . getstring ( var_3 ) ; if ( var_1 != null ) { type_4 var_4 = method_4 ( context , var_1 ) ; if ( var_4 != null ) { var_2 = var_4 . method_5 ( context ) ; var_4 . method_6 ( ) ; } } return var_2 ; } catch ( type_6 var_5 ) { var_5 . method_7 ( ) ; return null ; } }
[0]: public < type_1 > java.util.iterator < type_1 > iterator ( type_2 var_1, java.lang.string var_2, java.lang.object [ ] parameters, type_3 < type_1 > var_3 ) throws type_4 { return query ( var_1, var_2, type_5. method_1 ( parameters, var_4, var_5 ), new type_6 < type_1 > ( var_3 ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , int var_2 ) { type_1 data = get ( ( ( string_1 + var_1 ) + string_2 ) , var_3 ) ; if ( ( data != null ) && ( var_2 < int_1 ) ) { data = ( ( type_1 ) ( ( ( type_2 ) ( data ) ) . get ( string_3 ) ) ) ; } return data ; }
[0]: private boolean method_1 ( ) { boolean var_1 = true ; if ( type_1. method_2 ( var_2. gettext ( ). tostring ( ) ) ) { type_1. method_3 ( var_3, var_2, string_1 ) ; var_1 = false ; } else if ( ( var_2. gettext ( ). tostring ( ). length ( ) )!= int_1 ) { type_1. method_3 ( var_3, var_2, string_2 ) ; var_1 = false ; } return var_1 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { if ( var_1 != null ) { var_1 = var_1 . trim ( ) ; } if ( ( var_1 != null ) && ( ( var_1 . length ( ) ) > 0 ) ) { var_2 . settext ( var_1 ) ; var_3 = var_1 ; } else { var_2 . settext ( var_4 ) ; var_3 = null ; } }
[0]: public boolean method_1 ( type_1 var_1, int x, int y, int var_2 ) { type_2 var_3 = var_1. method_2 ( x, y, var_2 ) ; if ( ( var_3. equals ( var_4 ) ) && ( ( var_5 ) == 0 ) ) return true ; if ( ( var_3. equals ( var_4 ) ) && ( ( var_5 ) == ( var_1. method_3 ( x, y, var_2 ) ) ) ) return true ; return false ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 , int var_3 ) { int var_4 = x ; int var_5 = y ; var_4 += ( var_1 * ( - 1 ) ) * var_3 ; var_5 += var_2 * var_3 ; if ( ( ( var_4 >= 0 ) && ( var_4 < int_1 ) ) && ( ( var_5 >= 0 ) && ( var_5 < int_1 ) ) ) { method_2 ( var_4 , var_5 ) ; return true ; } return false ; }
[0]: public void method_1 ( ) throws type_1 { method_2 ( var_1. method_3 ( type_3. method_4 ( var_2 class ) ) ). method_5 ( new type_1 ( var_3 ) ) ; type_4 var_4 = var_5. method_3 ( ) ; type_5 var_6 = var_4. method_6 ( ) ; type_6. assertthat ( string_1, var_6, type_7. method_7 ( var_7 ) ) ; method_8 ( var_1, method_9 ( 1 ) ). method_3 ( var_8 ) ; }

************

************
tgt: public void handle ( type_1 var_1 , type_2 < ? , ? , type_1 > var_2 ) { java.util.arraylist < type_3 > var_3 = var_2 . method_1 ( ) . method_2 ( ) ; for ( type_3 n : var_3 ) { if ( ! ( var_4 . contains ( n ) ) ) { method_3 ( n ) ; } } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; super. method_3 ( ) ; if ( var_1 == null ) { method_4 ( ). method_5 ( ). replace ( var_3, new type_2 ( ) ). commit ( ) ; } }

************

************
tgt: private static boolean method_1 ( int var_1 , java.util.map < java.lang.integer , java.util.set < java.lang.integer > > var_2 ) { for ( int var_3 = 0 ; var_3 < var_1 ; var_3 ++ ) { java.util.set < java.lang.integer > var_4 = new java.util.hashset < > ( ) ; var_4 . add ( var_3 ) ; if ( type_1 . method_2 ( var_2 , var_4 , var_3 ) ) { return true ; } } return false ; }
[0]: public static java.lang.string method_1 ( ) { type_1. method_2 ( ) ; var_1. append ( var_2 ) ; var_1. append ( var_3 ) ; var_1. append ( type_2. method_3 ( ) ) ; var_1. append ( var_4 ) ; var_1. append ( var_5 ) ; return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 . contains ( var_2 ) ) ) { type_1 var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) ; type_2 < java.lang.string > var_5 = ( ( type_2 < java.lang.string > ) ( var_3 . method_3 ( ) ) ) ; var_5 . add ( var_2 ) ; } }
[0]: public static void method_1 ( ) { var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_2 = new java.util.arraylist < java.lang.string > ( ) ; var_3. values = new java.util.hashmap < java.lang.integer, java.lang.string > ( ) ; var_1. method_2 ( ) ; var_2. method_2 ( ) ; var_4. method_2 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . info ( string_1 ) ; java.lang.string var_1 = string_2 + ( method_2 ( ) ) ; java.lang.string var_2 = string_3 + ( method_2 ( ) ) ; var_3 . method_3 ( ) ; var_4 . method_4 ( ) ; type_1 . info ( string_4 ) ; var_5 . method_5 ( var_1 , true , string_5 , var_2 ) ; type_1 . info ( string_6 ) ; var_4 . method_6 ( string_7 ) ; var_6 . method_7 ( type_2 . replace ( string_8 , var_1 ) ) ; }
[0]: public void method_1 ( int x, int y ) { method_2 ( x, y ) ; type_1 var_1 = type_1. method_3 ( ) ; method_4 ( var_1. getint ( var_2 class, ( ( var_3 ) + ( var_4 ) ), x ), var_1. getint ( var_2 class, ( ( var_3 ) + ( var_5 ) ), y ), method_5 ( ), method_6 ( ) ) ; }

************

************
tgt: public long method_1 ( long var_1 ) throws type_1 { type_2 var_2 = null ; synchronized ( this ) { if ( ! ( method_2 ( var_1 ) ) ) { var_2 = new type_2 ( var_1 ) ; var_3 . add ( var_2 ) ; return var_2 . getid ( ) ; } } throw new type_1 ( ) ; }
[0]: public java.lang.object method_1 ( java.lang.object var_1, type_1 var_2, java.lang.string var_3, java.lang.object [ ] params ) throws type_2, type_3 { for ( type_4 method : getclass ( ). method_2 ( ) ) { type_5 var_4 = method. method_3 ( var_5 class ) ; if ( ( var_3. method_4 ( ) ) == ( var_4. value ( ). method_4 ( ) ) ) { return method. method_5 ( var_2 ) ; } } return null ; } }

************

************
tgt: private void method_1 ( java.util.set < java.lang.string > var_1 , java.lang.string classname ) { if ( ( this . var_3 ) != null ) for ( java.lang.string var_2 : this . var_3 ) { if ( var_2 . equals ( classname ) ) return ; if ( var_2 . method_2 ( string_1 ) ) { java.lang.string var_4 = var_2 . substring ( 0 , ( ( var_2 . length ( ) ) - 1 ) ) ; if ( classname . startswith ( var_4 ) ) return ; } } var_1 . add ( classname ) ; }
[0]: public type_1 method_1 ( type_1 index ) { switch ( index ) { case var_1 : return var_2 ; case var_3 : return var_4 ; case var_5 : return var_6 ; case var_7 : return var_8 ; case var_9 : return var_10 ; case var_11 : return var_12 ; case var_13 : return var_14 ; case var_15 : return var_16 ; case var_17 : return var_18 ; case var_19 : return var_20 ; case var_21 : return var_22 ; } } return var_2 ; }

************

************
tgt: public void method_1 ( ) { var_2 = new type_2 ( ) . method_2 ( string_1 , false ) ; var_1 . method_3 ( string_2 ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_4 ( var_3 ) ; var_4 . method_5 ( var_1 ) ; asserttrue ( var_4 . method_6 ( var_1 . method_7 ( ) . get ( 0 ) , var_1 . getid ( ) ) ) ; }
[0]: public synchronized void method_1 ( type_1 var_1 ) { int var_2 = int_1 ; int index = 0 ; for ( type_2 var_3 : var_4 ) { if ( var_3. method_2 ( ). equals ( var_1. method_3 ( ) ) ) { var_2 = index ; index ++ ; } var_4. remove ( var_2 ) ; index ++ ; } }

************

************
tgt: public void method_1 ( java.lang.object obj , java.lang.string var_1 ) throws type_1 { assert obj != null ; if ( var_2 . method_2 ( ) ) var_2 . method_3 ( ( string_1 + obj ) ) ; obj = method_4 ( obj ) ; method_5 ( obj , var_3 , null , null , var_1 ) ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; type_4. method_3 ( this, var_4 ) ; var_6 = new type_5 ( getactivity ( ), new java.util.arraylist < type_6 > ( ), new type_7 ( ) { public void method_4 ( int position ) { var_7. method_5 ( position ) ; } } ) ; return super. method_1 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { for ( type_3 var_1 : var_2 . method_2 ( ) ) { if ( var_1 . method_3 ( ) . method_4 ( ) ) { type_3 var_3 = var_4 . method_5 ( var_1 . getname ( ) ) ; type_4 . asserttrue ( var_5 , var_3 . method_3 ( ) . method_4 ( ) ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( method_2 ( ). method_3 ( var_2 ) ) { var_3 = type_2. get ( method_2 ( ). getstring ( var_2 ) ) ; type_3 var_4 = this. getactivity ( ) ; type_4 var_5 = ( ( type_4 ) ( var_4. method_4 ( var_6 ) ) ) ; if ( var_5!= null ) { var_5. method_5 ( var_3. id ) ; } } }

************

************
tgt: protected java.lang.integer method_1 ( java.lang.void ... var_1 ) { method_2 ( var_2 ) ; type_1 . method_3 ( ) ; boolean [ ] var_3 = null ; try { method_2 ( var_4 ) ; var_3 = method_4 ( ) ; method_2 ( var_5 ) ; method_5 ( ) ; method_6 ( ) ; } finally { method_2 ( var_6 ) ; method_7 ( var_3 ) ; } type_1 . method_8 ( var_7 ) ; return 0 ; }
[0]: public type_1 method_1 ( java.lang.string id ) { type_1 var_1 = var_2. get ( id ) ; if ( var_1 == null ) { if ( ( ( var_3 )!= null ) && ( id!= null ) ) { type_2 var_4 = var_3. method_2 ( id ) ; if ( var_4!= null ) { var_1 = method_1 ( var_4 ) ; var_2. put ( id, var_1 ) ; } } } return var_1 ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_2 : android.content.intent var_3 = new android.content.intent ( this , var_4 class ) ; method_3 ( var_3 ) ; return true ; case var_5 : android.content.intent var_6 = new android.content.intent ( this , var_7 class ) ; method_3 ( var_6 ) ; return true ; default : return super . method_1 ( item ) ; } }
[0]: private void method_1 ( ) { var_1 = - ( ( int ) ( java.lang.math.round ( ( ( ( var_2 ) + ( var_3 ) ) / float_1 ) ) ) ) ; var_4 = ( ( var_1 ) + ( var_3 ) ) - ( var_2 ) ; var_2 = 0 ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string name , java.lang.string [ ] args ) { if ( ( name . contains ( string_1 ) ) && ( name . contains ( string_2 ) ) ) { type_1 var_1 = type_2 . method_2 ( name . touppercase ( ) ) ; return ( ( type_1 ) ( var_1 . getvalue ( ) . value ) ) . method_3 ( args ) ; } return var_2 . get ( name . touppercase ( ) ) . method_3 ( args ) ; }
[0]: protected void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { type_4 [ ] var_2 = var_3. method_2 ( ) ; var_1. method_3 ( string_1, var_2 ) ; var_1. method_4 ( string_2 ). method_5 ( var_1, response ) ; var_1. method_4 ( string_2 ). method_5 ( var_1, response ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 ; java.lang.string var_2 = java.lang.string . method_2 ( index ) ; if ( ! ( type_1 . contains ( ( string_1 + var_2 ) ) ) ) { index = 1 ; } var_1 = type_1 . getstring ( ( string_1 + var_2 ) ) ; if ( var_1 . contains ( string_2 ) ) var_1 = var_1 . replace ( string_2 , string_3 ) ; method_3 ( var_1 , int_1 ) ; index = ( index ) + 1 ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = var_3. method_2 ( string_1 ) ; type_2 < type_4 > var_4 = var_5. method_2 ( string_2 ) ; java.lang.system.out.println ( ( string_3 + ( var_2. get ( ). getid ( ) ) ) ) ; java.util.list < type_5 > var_6 = var_7. method_3 ( ) ; var_1. method_4 ( string_5, var_6 ) ; return string_6 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.io.inputstream var_2 ) throws java.io.ioexception { type_2 var_3 = var_1 . method_2 ( ) ; byte [ ] b = new byte [ int_1 ] ; int x = var_2 . method_3 ( b ) ; while ( x != ( - 1 ) ) { if ( x < int_1 ) { b = type_3 . method_4 ( b , x ) ; } var_3 . method_5 ( b ) ; x = var_2 . method_3 ( b ) ; } }
[0]: public void method_1 ( float var_1 ) { method_2 ( var_2, var_1 ) ; var_2. method_3 ( ) ; type_1. method_4 ( ) ; var_3. method_5 ( var_4. method_6 ( ) ) ; var_5. method_5 ( var_4. method_7 ( ) ) ; var_6. method_5 ( var_4. method_8 ( ) ) ; for ( type_2 var_7 : var_4. method_9 ( ) ) { var_8. method_10 ( method_11 ( var_7 ) ) ; } method_2 ( var_9, var_1 ) ; var_2. method_3 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 start , type_2 end ) { var_1 . method_2 ( new type_3 < type_4 > ( ) { public void handle ( type_4 event ) { if ( ( event . method_3 ( ) ) == ( var_2 ) ) { method_4 ( start , end ) ; } else if ( ( ( event . method_3 ( ) ) == ( var_3 ) ) && ( var_4 ) ) { method_5 ( var_5 . method_6 ( ) , var_5 . method_7 ( ) ) ; } } } ) ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : return true ; case var_2 : intent = new android.content.intent ( this, var_3 class ) ; method_3 ( intent ) ; return true ; case var_4 : intent = new android.content.intent ( this, var_5 class ) ; return true ; case var_6 : intent = new android.content.intent ( this, var_7 class ) ; method_3 ( intent ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , var_2 . method_2 ( var_3 class ) , 1 , 0 , 0 , 0 , float_1 , ( - float_2 ) ) ; double output = var_1 . method_3 ( int_1 , 0 ) ; type_2 . assertequals ( float_1 , output , float_3 ) ; output = var_1 . method_3 ( ( - int_1 ) , 0 ) ; type_2 . assertequals ( ( - float_2 ) , output , float_3 ) ; }
[0]: public void method_1 ( final java.lang.string var_1 ) { type_1. method_2 ( new type_2 ( ) { public void method_3 ( ) { synchronized ( var_2 ) { type_3 var_3 = var_2. get ( var_1 ) ; if ( var_3!= null ) { var_3. method_4 ( ) ; var_2. remove ( var_1 ) ; } } } } ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { try { type_1 var_3 = type_1 . method_2 ( var_1 ) ; var_3 . update ( var_2 . method_3 ( ) ) ; return type_2 . method_4 ( var_3 . method_5 ( ) ) ; } catch ( type_3 var_4 ) { throw new type_4 ( ( string_1 + var_1 ) ) ; } }
[0]: private void init ( type_1 var_1 ) { this. var_1 = var_1 ; type_2. method_1 ( this. getcontext ( ) ). method_2 ( this ) ; int var_2 = method_3 ( var_1 ) ; android.view.view view = method_4 ( var_2, this, false ) ; var_3 = new type_3 ( view ) ; method_5 ( var_1 ) ; var_4. method_6 ( var_5 ) ; method_7 ( view ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { for ( type_3 var_2 : var_3 ) { if ( var_2 . method_1 ( var_1 ) ) return var_2 ; } for ( type_3 var_4 : var_5 ) { if ( var_4 . method_1 ( var_1 ) ) return null ; } return null ; }
[0]: public void method_1 ( ) { final int var_1 = var_2. method_2 ( ) ; float var_3 = 1 - ( ( float ) ( ( type_1. method_3 ( 0 ) ) / ( type_1. method_3 ( var_1 ) ) ) ) ; var_4. method_4 ( var_3, var_3 ) ; var_4. start ( ) ; }

************

************
tgt: public void method_1 ( int i , int var_1 , type_1 var_2 ) { type_2 var_3 = new type_2 ( i ) ; if ( var_1 != ( - 1 ) ) { var_3 . method_2 ( var_1 ) ; method_3 ( i , var_2 ) ; } var_4 . add ( var_3 ) ; var_5 . add ( var_3 ) ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 message ) { if ( ( ( var_2 ) == null ) || ( var_2. isempty ( ) ) ) return ; final java.util.list < type_2 > var_3 = var_2. get ( var_1 ) ; for ( type_2 var_4 : var_3 ) var_4. method_2 ( message ) ; ( var_2. size ( ) ) ++ ; }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > var_1 , type_2 type_3 ) { if ( var_1 != null ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_2 ( int_1 , int_1 ) ; } } else if ( type_3 != ( var_2 ) ) { return ; } var_2 = type_3 ; this . var_1 = var_1 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, string_2 ) ; var_1. method_2 ( string_3, string_4 ) ; var_1. method_2 ( string_5, int_1 ) ; type_2 var_2 = this. var_3. get ( ) ; var_2. method_3 ( string_6, new type_3 ( var_1 ), false ). assertequals ( int_2 ) ; method_4 ( 1 ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) ; for ( type_2 p : var_2 ) { type_3 var_3 = method_3 ( ) . method_4 ( p ) ; if ( var_3 instanceof type_4 ) { type_4 var_4 = ( ( type_4 ) ( var_3 ) ) ; var_4 . method_1 ( var_1 ) ; } } return var_1 ; }
[0]: public void method_1 ( double var_1 ) { type_1. asserttrue ( ( ( ( method_2 ( ) ) - ( method_3 ( ) ) ) > var_1 ) ) ; type_1. asserttrue ( ( ( ( ( type_2 ) ( var_2 ) ). method_4 ( ) ) > 0 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( int [ ] [ ] var_1 ) { java.lang.stringbuilder array = new java.lang.stringbuilder ( string_1 ) ; for ( int i = 0 ; i <= ( ( var_1 . length ) - 1 ) ; i ++ ) { array . append ( this . method_2 ( var_1 [ i ] ) ) ; array . append ( type_1 . method_3 ( ) ) ; } return java.lang.string.format ( var_2 , array ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; try { java.lang.system.out.println ( string_1 ) ; method_2 ( var_1. build ( this ), var_2 ) ; } catch ( type_2 | type_3 var_3 ) { var_3. method_3 ( ) ; type_4. method_4 ( this, var_3. method_5 ( ), var_4 ). show ( ) ; } }

************

************
tgt: public static void init ( final java.lang.string var_1 , final java.lang.string var_2 ) throws java.io.ioexception { if ( ! ( var_3 ) ) { final java.util.set < java.lang.integer > var_4 ; var_5 . info ( string_1 ) ; var_4 = type_1 . method_1 ( var_2 ) ; var_5 . info ( string_2 ) ; var_5 . info ( string_3 ) ; type_1 . method_2 ( var_1 , var_4 ) ; var_5 . info ( string_2 ) ; var_3 = true ; } }
[0]: public boolean method_1 ( java.lang.string id ) throws java.lang.exception { type_1. method_2 ( ( string_1 + id ) ) ; type_2. method_3 ( id ). method_4 ( ) ; var_1. method_1 ( id ) ; java.util.list < type_3 > var_2 = type_4. method_5 ( var_1. getactivity ( new java.lang.string [ ] { var_3 }, new java.lang.string [ ] { id } ) ) ; for ( type_3 var_4 : var_2 ) { method_6 ( var_4. method_7 ( ) ) ; } return true ; }

************

************
tgt: private static double method_1 ( type_1 p ) { double var_1 = 1.0 ; if ( ( p . method_2 ( ) ) > ( var_4 ) ) { var_1 = var_5 ; } else if ( ( p . method_2 ( ) ) > ( var_2 ) ) { var_1 = var_3 ; } return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_3. size ( ) ) > 0 ) { for ( type_1 var_4 : var_3 ) { if ( var_1. equals ( var_4. method_2 ( ) ) ) { return var_4 ; } else { return null ; } } } else { return null ; } return null ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 . execute ( context ) ; } catch ( type_1 var_2 ) { var_3 . error ( ( string_1 + ( var_1 . getid ( ) ) ) , var_2 ) ; } catch ( java.lang.exception var_2 ) { var_3 . error ( ( string_2 + ( var_1 . getid ( ) ) ) , var_2 ) ; } finally { context . method_3 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) { java.util.hashmap < java.lang.string, java.lang.object > parameters = new java.util.hashmap < > ( ) ; parameters. put ( var_3, var_1 ) ; var_2. method_2 ( new type_2 ( var_4, parameters ) ) ; } else { var_5. method_1 ( var_1 ) ; } }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { method_2 ( ) ; var_3 . method_5 ( var_4 ) ; type_2 var_2 = type_2 . method_3 ( ) ; if ( ( var_2 != null ) && ( ! ( var_2 . method_4 ( ) ) ) ) { method_6 ( var_2 ) ; } else { type_3 . method_7 ( ) . method_8 ( this , type_4 . method_9 ( string_1 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( this ) ; type_3 c = new type_3 ( this, this. method_2 ( ), var_2. method_3 ( ) ) ; c. execute ( ) ; type_4. method_4 ( ). method_5 ( c ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { try ( type_1 var_1 = method_2 ( ) ) { java.util.set var_3 = var_1 . method_3 ( ) ; java.lang.object [ ] var_4 = var_3 . method_4 ( ) ; asserttrue ( var_3 . method_5 ( java.util.arrays.aslist ( var_4 ) ) ) ; assertequals ( int_1 , var_4 . length ) ; var_4 [ 0 ] = var_5 ; method_6 ( var_3 . method_5 ( java.util.arrays.aslist ( var_4 ) ) ) ; } }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.io.ioexception { type_2 var_3 = null ; try { var_3 = new type_3 ( var_1, var_2 ) ; return new type_1 ( var_3. method_2 ( ) ) ; } catch ( type_4 var_4 ) { return null ; } finally { type_5. method_3 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.io.file var_3 , final type_3 var_4 ) { try { var_1 . method_2 ( java.lang.string.format ( string_1 , var_5 , method_3 ( ) , var_2 . method_4 ( ) , url ) ) ; type_4 var_6 = method_5 ( var_1 , method_6 ( var_3 ) ) ; var_6 . method_7 ( var_1 , var_2 ) ; var_1 . method_2 ( java.lang.string.format ( string_2 , var_5 ) ) ; } catch ( java.lang.exception var_7 ) { method_8 ( var_7 ) ; } }
[0]: public void method_1 ( ) { this. method_2 ( ) ; java.lang.string var_1 = this. method_3 ( ) ; type_1 var_2 = type_2. method_4 ( var_1 ) ; type_3 var_3 = type_2. method_5 ( ) ; this. method_6 ( var_2 ) ; type_4 var_4 = new type_4 ( ) ; var_4. method_7 ( ) ; this. method_6 ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.arraylist < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; for ( type_1 var_3 : var_1 . method_2 ( ) ) { java.lang.string var_4 = var_3 . getvalue ( ) . tostring ( ) ; var_2 . add ( var_4 ) ; } this . var_5 = ( var_6 ) + ( var_2 . size ( ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception { if (! ( response. method_2 ( ) ) ) throw new java.io.ioexception ( ( string_1 + response ) ) ; final java.util.regex.matcher var_2 = var_3. method_3 ( response. method_4 ( ). string ( ) ) ; if ( var_2. method_5 ( ) ) { var_4 = var_2. method_6 ( 1 ) ; if ( ( var_4 ) == null ) { var_4 = var_2. method_6 ( int_1 ) ; } } method_7 ( var_4 ) ; } }

************

************
tgt: public int method_1 ( java.lang.object var_1 , java.lang.object var_2 ) { type_1 var_3 = ( ( type_1 ) ( var_1 ) ) ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; int result = ( ( int ) ( ( var_5 ) - ( var_6 ) ) ) ; if ( result == 0 ) { return 0 ; } else if ( result > 0 ) { return - 1 ; } else { return 1 ; } }
[0]: private boolean method_1 ( type_1 < type_2 > var_1, type_2 var_2 ) { boolean var_3 = false ; java.util.iterator < type_2 > iterator = var_1. iterator ( ) ; while ( iterator. method_2 ( ) ) { type_2 var_4 = iterator. method_3 ( ) ; if ( ( ( var_2. method_4 ( ) )!= null ) && ( var_4. method_4 ( ). equals ( var_2. method_4 ( ) ) ) ) { var_3 = true ; break ; } } return var_3 ; }

************

************
tgt: public < type_1 > java.util.iterator < type_1 > iterator ( type_2 var_1 , java.lang.string var_2 , java.lang.object [ ] parameters , type_3 < type_1 > var_3 ) throws type_4 { return iterator ( var_1 , var_2 , type_5 . method_1 ( parameters , var_4 , var_5 ) , var_3 ) ; }
[0]: public void method_1 ( android.view.view view ) { var_1. method_2 ( var_2 ) ; if ( method_3 ( ) ) { if ( ( var_1 )!= null ) { var_1. method_4 ( ) ; var_3. method_5 ( var_4 ) ; var_3. method_6 ( ( var_5? var_6 : var_7 ) ) ; var_5 =! ( var_5 ) ; } } else { type_1. method_7 ( this, getstring ( var_8 ), var_9 ). show ( ) ; } }

************

************
tgt: private boolean method_1 ( ) { boolean var_1 = true ; if ( type_1 . method_2 ( var_2 . gettext ( ) . tostring ( ) ) ) { type_1 . method_3 ( var_3 , var_2 , string_1 ) ; var_1 = false ; } else if ( ( var_2 . gettext ( ) . tostring ( ) . length ( ) ) < int_1 ) { type_1 . method_3 ( var_3 , var_2 , string_2 ) ; var_1 = false ; } return var_1 ; }
[0]: private void method_1 ( java.lang.object var_1, type_1 var_2 ) { if ( var_1 instanceof type_2 ) { java.util.list < java.lang.object > results = ( ( type_2 ) ( var_1 ) ). method_2 ( ) ; for ( java.lang.object var_3 : results ) { type_3 var_4 = method_3 ( ( ( type_3 ) ( var_3 ) ) ) ; method_4 ( var_4, var_2 ) ; } } else { type_3 var_4 = method_3 ( ( ( type_3 ) ( var_1 ) ) ) ; method_4 ( var_4, var_2 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int x , int y , int var_2 ) { type_2 var_3 = var_1 . method_2 ( x , y , var_2 ) ; if ( ( var_3 . equals ( var_4 ) ) && ( ( var_5 ) == ( - 1 ) ) ) return true ; if ( ( var_3 . equals ( var_4 ) ) && ( ( var_5 ) == ( var_1 . method_3 ( x , y , var_2 ) ) ) ) return true ; return false ; }
[0]: public void method_1 ( java.lang.string var_1 ) { var_2 = var_1 ; int i = var_2. method_2 ( char_1 ) ; i = java.lang.integer.parseint ( var_2. substring ( 0, i ) ) ; if ( i > ( var_3 ) ) var_3 = ( ( byte ) ( i ) ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 . method_2 ( var_1 . method_3 ( type_3 . method_4 ( var_2 class ) ) ) . method_5 ( new type_1 ( var_3 ) ) ; type_4 var_4 = var_5 . method_3 ( ) ; type_5 var_6 = var_4 . method_6 ( ) ; type_6 . assertthat ( string_1 , var_6 , type_7 . method_7 ( var_7 ) ) ; type_2 . method_8 ( var_1 , type_2 . method_9 ( 1 ) ) . method_3 ( type_3 . method_4 ( var_2 class ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2. method_2 ( var_1. getid ( ) ) ) { var_2. put ( var_1. getid ( ), var_1 ) ; } else { var_1. method_3 ( type_2. method_4 ( ) ) ; var_2. put ( var_1. getid ( ), var_1 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( var_1 == null ) { method_4 ( ) . method_5 ( ) . add ( var_3 , new type_2 ( ) ) . commit ( ) ; } }
[0]: public void method_1 ( ) { if ( ( method_2 ( ) ) instanceof type_1 ) { if ( ( method_2 ( ) ) == null ) return ; if ( ( ( ( type_1 ) ( method_2 ( ) ) ). method_3 ( ) ) == null ) throw new type_2 ( ) ; method_4 ( ( ( type_1 ) ( method_2 ( ) ) ). method_5 ( ) ) ; } }

************

************
tgt: public static java.lang.string method_1 ( ) { type_1 . method_2 ( ) ; var_1 . append ( var_2 ) ; var_1 . append ( java.lang.string.format ( var_3 , type_2 . method_3 ( ) ) ) ; var_1 . append ( var_5 ) ; return var_1 . tostring ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 ; if (! ( ( var_2 = type_1. gettext ( ). tostring ( ) ). equals ( string_1 ) ) ) { type_1. method_2 ( string_2 ) ; android.content.intent type_2 = new android.content.intent ( this, var_3 class ) ; type_2. method_3 ( string_3, var_2 ) ; method_4 ( type_2 ) ; } else { type_3. method_5 ( string_4, string_5 ) ; type_1. method_2 ( string_2 ) ; type_1. method_6 ( var_4 ) ; } }

************

************
tgt: public static void method_1 ( ) { var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_2 = new java.util.arraylist < java.lang.string > ( ) ; var_3 . values = new java.util.hashmap < java.lang.integer , java.lang.string > ( ) ; var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_2 = new java.util.arraylist < java.lang.string > ( ) ; var_3 . values = new java.util.hashmap < java.lang.integer , java.lang.string > ( ) ; }
[0]: public java.lang.string tostring ( type_1 var_1 ) { java.lang.string value = null ; if ( null!= var_1 ) { if ( var_1 instanceof type_2 ) { value = new java.lang.string ( ( ( type_2 ) ( var_1 ) ). getvalue ( ) ) ; } else if ( ( var_1. getvalue ( ) )!= null ) { value = var_1. tostring ( ) ; } } return value ; }

************

************
tgt: public void method_1 ( int x , int y ) { method_2 ( x , y ) ; type_1 var_1 = type_1 . method_3 ( ) ; method_4 ( var_1 . getint ( this . getclass ( ) , ( ( var_3 ) + ( var_4 ) ) , x ) , var_1 . getint ( this . getclass ( ) , ( ( var_3 ) + ( var_5 ) ) , y ) , method_5 ( ) , method_6 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 < type_1 > element ) { type_3 var_2 = ( ( type_3 ) ( ( type_2 <? > ) ( element ) ) ) ; type_4 p = ( ( type_4 ) ( var_1 ) ) ; type_5 var_3 = var_4. remove ( p ) ; var_5. method_2 ( var_3 ) ; var_6. remove ( var_3 ) ; method_3 ( var_2 ) ; }

************

************
tgt: public java.lang.object method_1 ( java.lang.object var_1 , type_1 var_2 , java.lang.string var_3 , java.lang.object [ ] params ) throws type_2 , type_3 { for ( type_4 method : getclass ( ) . method_2 ( ) ) { type_5 var_4 = method . method_3 ( var_5 class ) ; if ( ( var_3 . method_4 ( ) ) == ( var_4 . value ( ) . method_4 ( ) ) ) { return method . method_5 ( var_2 , var_1 ) ; } } return null ; }
[0]: public void update ( float var_1 ) { method_1 ( var_1 ) ; java.lang.system.out.print ( var_2. method_2 ( ). y ) ; var_3 = var_2. method_3 ( ) ; var_4. step ( ( 1 / float_1 ), int_1, int_2 ) ; method_4 ( var_5, method_5 ( ), method_6 ( ) ) ; var_6. method_7 ( var_5 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 index ) { switch ( index ) { case var_1 : return var_2 ; case var_3 : return var_4 ; case var_5 : return var_6 ; case var_7 : return var_8 ; case var_9 : return var_10 ; case var_11 : return var_12 ; case var_13 : return var_14 ; case var_15 : return var_16 ; case var_17 : return var_18 ; case var_19 : return var_20 ; case var_21 : return var_22 ; } return var_22 ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { final type_2 var_1 = new type_3 ( ). method_2 ( 1 ). source ( string_1 ). target ( string_2 ). build ( ) ; method_3 ( var_1 ) ; var_2. method_4 ( new type_4 ( string_3, type_5. method_5 ( ), type_6. method_5 ( ) ) ) ; var_2. method_6 ( var_3 ) ; type_7. method_7 ( type_8. method_8 ( var_3 ), var_4 class. method_9 ( string_4 ) ) ; }

************

************
tgt: public synchronized boolean method_1 ( type_1 var_1 ) { int var_2 = - 1 ; int index = 0 ; for ( type_2 var_3 : var_4 ) { if ( var_3 . method_2 ( ) . equals ( var_1 . method_3 ( ) ) ) { var_2 = index ; } index ++ ; } if ( var_2 != ( - 1 ) ) { var_4 . remove ( var_2 ) ; return true ; } else { return false ; } }
[0]: public void method_1 ( final android.content.context context, android.content.intent intent ) { type_1. method_2 ( ). settext ( string_1 ) ; type_2 var_1 = type_3. method_3 ( var_2 ) ; type_4 var_3 = type_3. method_4 ( context, var_1 ) ; var_3. method_5 ( ) ; android.content.intent var_4 = new android.content.intent ( context, var_5 class ) ; var_4. method_6 ( var_6 ) ; context. method_7 ( var_4 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; type_4 . method_3 ( this , var_4 ) ; var_6 = new type_5 ( getactivity ( ) , new java.util.arraylist < type_6 > ( ) , new type_7 ( ) { public void method_4 ( int position ) { var_7 . method_5 ( position ) ; } } ) ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = var_1. method_2 ( ( - ( method_3 ( ) ) ), ( - ( method_4 ( ) ) ) ) ; for ( type_3 var_4 : type_4. method_5 ( this, var_5 ) ) { var_4. method_1 ( var_3, var_2 ) ; } super. method_1 ( var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( method_2 ( ) . method_3 ( var_2 ) ) { var_3 = type_2 . get ( method_2 ( ) . getstring ( var_2 ) ) ; type_3 var_4 = this . getactivity ( ) ; type_4 var_5 = ( ( type_4 ) ( var_4 . method_4 ( var_6 ) ) ) ; if ( ( var_5 != null ) && ( ( var_3 ) != null ) ) { var_5 . method_5 ( var_3 . id ) ; } } }
[0]: public void handle ( type_1 var_1 ) { if (! ( var_2 ) ) { int var_3 = type_2. method_1 ( ( ( int ) ( ( var_1. method_2 ( ) ) - int_1 ) ) ) ; int var_4 = type_2. method_1 ( ( ( int ) ( var_1. method_3 ( ) ) ) ) ; var_5. method_4 ( var_3, var_4 ) ; update ( ) ; if ( var_5. method_5 ( ) ) { var_2 = true ; method_6 ( ) ; } } } }

************

************
tgt: public type_1 method_1 ( java.lang.string id ) { type_1 var_1 = var_2 . get ( id ) ; if ( var_1 == null ) { if ( id != null ) { type_2 var_4 = var_3 . method_2 ( id ) ; if ( var_4 != null ) { var_1 = method_1 ( var_4 ) ; var_2 . put ( id , var_1 ) ; } } } return var_1 ; }
[0]: private int method_1 ( java.lang.string line ) { int var_1 = 1 ; for ( int i = 0 ; i < ( line. length ( ) ) ; i ++ ) { if ( ( ( line. method_2 ( i ) ) == char_1 ) || ( ( line. method_2 ( i ) ) == char_2 ) ) { var_1 ++ ; } else { break ; } } return var_1 ; }

************

************
tgt: private void method_1 ( ) { var_1 = - ( ( int ) ( java.lang.math.round ( ( ( ( var_3 ) - ( var_2 ) ) / float_1 ) ) ) ) ; var_4 = ( ( var_1 ) + ( var_3 ) ) - ( var_2 ) ; }
[0]: public static type_1 < type_2 > method_1 ( java.lang.string var_1 ) { java.util.list < type_2 > var_2 = java.util.arrays.aslist ( type_2. values ( ) ) ; return var_2. method_2 ( ). method_3 ( ( t ) - > var_3. method_4 ( var_1 ) ). method_5 ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { java.util.list < type_4 > var_2 = var_3 . method_2 ( ) ; var_1 . method_3 ( string_1 , var_2 ) ; var_1 . method_4 ( string_2 ) . method_5 ( var_1 , response ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( ). method_3 ( true ) ; method_2 ( ). method_4 ( method_5 ( ). getstring ( var_2 ) ) ; type_2. method_6 ( this ) ; type_3 var_3 = new type_3 ( ) ; var_3. method_7 ( ) ; method_8 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = var_3 . method_2 ( string_1 ) ; type_2 < type_4 > var_4 = var_5 . method_2 ( string_2 ) ; java.lang.system.out.println ( ( string_3 + ( var_2 . get ( ) . getid ( ) ) ) ) ; java.lang.system.out.println ( ( string_4 + ( var_4 . get ( ) . getid ( ) ) ) ) ; java.util.set var_6 = var_7 . method_3 ( ) ; var_1 . method_4 ( string_5 , var_6 ) ; return string_6 ; }
[0]: public void method_1 ( java.lang.string var_1, int var_2, int var_3 ) { java.awt.color [ ] var_4 = new java.awt.color [ ] { var_5, var_6, var_7, var_8, var_9, var_10 } ; type_1 var_11 = new type_2 ( ). method_2 ( var_4 [ var_3 ] ). method_3 ( var_4 [ ( int_1 - var_3 ) ] ). build ( ) ; type_3. method_1 ( var_1, var_2, var_11 ) ; type_3. method_4 ( 1, var_1 ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { method_2 ( var_2 , var_1 ) ; var_2 . method_3 ( ) ; type_1 . method_4 ( ) ; var_3 . method_5 ( var_4 . method_6 ( ) ) ; var_5 . method_5 ( var_4 . method_7 ( ) ) ; var_6 . method_5 ( var_4 . method_8 ( ) ) ; for ( type_2 var_7 : var_4 . method_9 ( ) ) { var_8 . method_10 ( method_11 ( var_7 ) ) ; } method_2 ( var_9 , var_1 ) ; var_9 . method_3 ( ) ; }
[0]: public type_1 method_1 ( type_1 var_1, boolean var_2, java.lang.string var_3, java.lang.long var_4 ) { type_1 var_5 = var_6. method_2 ( var_1 ) ; if ( var_2 ) { type_2 var_7 = var_8. method_2 ( new type_2 ( var_1. getid ( ), var_9, var_10, var_4, var_3 ) ) ; return var_5 ; } return null ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : return true ; case var_2 : intent = new android.content.intent ( this , var_3 class ) ; method_3 ( intent ) ; return true ; case var_6 : intent = new android.content.intent ( this , var_7 class ) ; method_3 ( intent ) ; return true ; } return false ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; var_2 = new type_2 ( ) ; var_2. method_2 ( var_3 ) ; var_2. method_3 ( var_4 ) ; var_2. method_4 ( var_5 ) ; if ( var_6. method_5 ( var_2 ) ) { return string_1 ; } else { var_7 = true ; return string_2 ; } }

************

************
tgt: public void method_1 ( final java.lang.string var_1 ) { synchronized ( var_2 ) { final type_3 var_3 = var_2 . get ( var_1 ) ; if ( var_3 != null ) { var_2 . remove ( var_1 ) ; type_1 . method_2 ( new type_2 ( ) { public void method_3 ( ) { var_3 . method_4 ( ) ; } } ) ; } } }
[0]: protected void method_1 ( ) { type_1. method_2 ( this ). method_3 ( var_1 ) ; if ( ( ( var_2 )!= null ) && ( var_2. method_4 ( ) ) ) { method_5 ( type_2. method_6 ( this ) ) ; var_2. method_7 ( var_3 ) ; } super. method_1 ( ) ; }

************

************
tgt: private void init ( ) { type_2 . method_1 ( this . getcontext ( ) ) . method_2 ( this ) ; int var_2 = method_3 ( var_1 ) ; android.view.view view = method_4 ( var_2 , this , false ) ; var_3 = new type_3 ( view ) ; method_5 ( var_1 ) ; var_4 . method_6 ( var_5 ) ; method_7 ( view ) ; }
[0]: public int method_1 ( java.lang.string name ) { for ( int i = 0 ; ( var_1 [ i ] )!= null ; i ++ ) { if ( var_1 [ i ]. var_2. equals ( name ) ) { type_1. method_2 ( string_1, java.lang.string. method_3 ( i ) ) ; return i ; } } return - 1 ; }

************

************
tgt: public void method_1 ( ) { final int var_1 = getconfig ( ) . method_2 ( ) ; float var_3 = 1 - ( ( float ) ( ( type_1 . method_3 ( 0 ) ) / ( type_1 . method_3 ( var_1 ) ) ) ) ; var_4 . method_4 ( var_3 , var_3 ) ; var_4 . start ( ) ; }
[0]: private type_1 method_1 ( float var_1, float var_2, int var_3, float [ ] var_4, boolean var_5 ) { var_6 = new type_1 ( method_2 ( ), var_1, var_2, var_3, var_4, false ) ; var_6. method_3 ( new type_2 ( ) { public void method_4 ( type_3 event ) { if ( event. method_5 ( ). equals ( var_7 ) ) method_6 ( ) ; } } ) ; return var_6 ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 message ) { if ( ( ( var_2 ) == null ) || ( var_2 . isempty ( ) ) ) return ; for ( type_2 var_4 : var_2 . get ( var_1 ) ) var_4 . method_2 ( message ) ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 ; try { java.lang.string query = java.lang.string.format ( string_1, var_2 class. getname ( ) ) ; var_1 = var_3. method_2 ( query, var_2 class ). method_3 ( ) ; return var_1 ; } catch ( java.lang.exception var_4 ) { java.lang.system.out.println ( string_2 ) ; var_4. method_4 ( ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( "id" , 1 ) ; var_1 . method_2 ( string_1 , string_2 ) ; var_1 . method_2 ( string_3 , string_4 ) ; var_1 . method_2 ( string_5 , int_1 ) ; type_2 var_2 = this . var_3 . get ( ) ; var_2 . method_3 ( string_6 , new type_3 ( var_1 ) ) . assertequals ( int_2 ) ; method_4 ( 1 ) ; }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { if ( var_1 == ( var_4 ) ) { if ( type_1. method_2 ( var_3 ) ) { var_5. method_3 ( var_6 ) ; } else { type_2. i ( string_1, string_2 ) ; var_5. method_4 ( var_6 ) ; } } else { super. method_1 ( var_1, var_2, var_3 ) ; } }

************

************
tgt: public void method_1 ( double var_1 ) { type_1 . asserttrue ( ( ( ( method_2 ( ) ) - ( method_3 ( ) ) ) > var_1 ) ) ; type_1 . asserttrue ( ( ( ( ( type_2 ) ( var_2 ) ) . method_4 ( ) ) >= 0 ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; if (! ( method_3 ( var_3, var_4 ). getboolean ( var_5, false ) ) ) { method_4 ( new android.content.intent ( this, var_6 class ) ) ; } var_7 = ( ( android.widget.button ) ( method_5 ( var_8 ) ) ) ; var_7. method_6 ( this ) ; var_9 = ( ( android.widget.button ) ( method_5 ( var_10 ) ) ) ; var_9. method_6 ( this ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; try { method_2 ( var_1 . build ( this ) , var_2 ) ; } catch ( type_2 | type_3 var_3 ) { var_3 . method_3 ( ) ; type_4 . method_4 ( this , var_3 . method_5 ( ) , var_4 ) . show ( ) ; } }
[0]: private static synchronized void method_1 ( java.lang.string key ) { if ( ( type_1. method_2 ( ). context ) == null ) { type_2. method_3 ( string_1, string_2 ) ; return ; } type_3 var_1 = type_1. method_2 ( ). context. method_4 ( var_2, var_3 ) ; var_1. method_5 ( ). remove ( key ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string id ) throws java.lang.exception { type_1 . method_2 ( ( string_1 + id ) ) ; type_2 . method_3 ( id ) . method_4 ( ) ; var_1 . method_1 ( id ) ; java.util.list < type_3 > var_2 = type_4 . method_5 ( var_1 . getactivity ( new java.lang.string [ ] { id } , new java.lang.string [ ] { var_3 } ) ) ; for ( type_3 var_4 : var_2 ) { method_6 ( var_4 . method_7 ( ) ) ; } return true ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string type_1 ; type_1 = var_2. gettext ( ). tostring ( ) ; if ( type_1. isempty ( ) ) { type_2. method_2 ( context, string_1, var_3 ). show ( ) ; } else { type_2. method_2 ( context, type_1, var_4 ). show ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_3 . size ( ) ) > 0 ) { int i = 0 ; while ( i < ( var_3 . size ( ) ) ) { if ( var_3 . get ( i ) . method_2 ( ) . equals ( var_1 ) ) { return var_3 . get ( i ) ; } i ++ ; } return null ; } return null ; }
[0]: public void start ( ) { type_1 n = ( ( type_2 ) ( var_1 ) ). var_2 ; type_3 var_3 = type_4. method_1 ( ) [ 0 ]. method_2 ( ). method_3 ( ) ; var_4 = type_5. method_4 ( n. method_5 ( ), var_3, ( ( var_5 ) - int_1 ) ). method_6 ( new java.lang.string [ ] { } ) ; index = 0 ; java.lang.system.out.println ( type_6. tostring ( var_4 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) != null ) { java.util.hashmap < java.lang.string , java.lang.object > parameters = new java.util.hashmap < > ( ) ; parameters . put ( var_3 , var_1 ) ; var_2 . method_2 ( new type_2 ( var_4 , parameters ) ) ; var_5 . method_1 ( var_1 ) ; } else { var_5 . method_1 ( var_1 ) ; } }
[0]: private type_1 method_1 ( ) throws type_2 { type_3 var_1 = null ; type_4 var_2 = ( ( type_4 ) ( method_2 ( var_3 ) ) ) ; type_5 var_4 = ( ( type_5 ) ( method_2 ( var_5 ) ) ) ; type_6 type = ( ( type_6 ) ( method_2 ( var_6 ) ) ) ; var_1 = new type_3 ( var_2, var_4, type ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = new type_2 ( this ) ; final type_3 c = new type_3 ( this , method_2 ( ) , var_2 . method_3 ( ) ) ; c . execute ( ) ; type_4 . method_4 ( ) . method_5 ( c ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = type_1. method_2 ( ). method_3 ( string_1 ). method_4 ( var_2. method_5 ( ) ). build ( ) ; type_2. assertequals ( type_3. method_6 ( ), var_1. method_7 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.io.ioexception { type_2 var_3 = null ; try { var_3 = new type_3 ( var_1 , var_2 ) ; return new type_1 ( var_1 , var_2 , var_3 . method_2 ( ) ) ; } catch ( type_4 var_4 ) { return null ; } finally { type_5 . method_3 ( var_3 ) ; } }
[0]: public static void method_1 ( final java.util.map < type_1, type_2 > result, final type_1 var_1, final type_2 var_2 ) { type_2 var_3 = result. get ( var_1 ) ; if ( var_3!= null ) { var_3 = var_3. add ( var_2 ) ; } else { result. put ( var_1, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { this . method_2 ( ) ; java.lang.string var_1 = this . method_3 ( ) ; type_1 var_2 = type_2 . method_4 ( var_1 ) ; this . method_6 ( var_2 ) ; type_4 var_4 = new type_4 ( ) ; var_4 . method_7 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.lang.string var_1 = string_1 ; java.lang.string key = string_2 ; type_1 var_2 = new type_2 ( key. method_1 ( ), var_1 ) ; type_3 var_3 = type_3. method_2 ( var_1 ) ; var_3. init ( var_4, var_2 ) ; java.lang.string data = string_3 ; byte [ ] var_5 = var_3. method_3 ( data. method_1 ( ) ) ; java.lang.string var_6 = type_4. method_4 ( ). method_5 ( var_5 ) ; java.lang.system.out.println ( var_6 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception { if ( ! ( response . method_2 ( ) ) ) throw new java.io.ioexception ( ( string_1 + response ) ) ; var_4 = response . method_4 ( ) . string ( ) ; method_7 ( var_4 ) ; }
[0]: protected type_1 < type_2 > method_1 ( type_3 var_1 ) { try { return type_1. method_2 ( java.lang.class. method_3 ( var_1. method_4 ( ) ). method_5 ( var_2 ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { type_4. error ( ( string_1 + ( var_1. method_4 ( ) ) ), var_3. method_6 ( ) ) ; } return type_1. method_7 ( ) ; }

************

************
tgt: private boolean method_1 ( java.util.hashset < type_2 > var_1 , type_2 var_2 ) { boolean var_3 = false ; java.util.iterator < type_2 > iterator = var_1 . iterator ( ) ; while ( iterator . method_2 ( ) ) { type_2 var_4 = iterator . method_3 ( ) ; if ( ( ( var_2 . method_4 ( ) ) != null ) && ( var_4 . method_4 ( ) . equals ( var_2 . method_4 ( ) ) ) ) { var_3 = true ; break ; } } return var_3 ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view var_2, int position, long id ) { java.lang.string [ ] var_3 = var_4. method_2 ( ). tostring ( ). split ( string_1 ) ; type_2 var_5 = var_6. method_3 ( var_3 [ 0 ], var_3 [ 1 ] ) ; var_7 = var_5. getid ( ) ; method_4 ( var_5. getid ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( method_3 ( ) ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( var_2 ) ; var_1 . method_4 ( ) ; var_3 . method_5 ( var_4 ) ; var_3 . method_6 ( ( var_5 ? var_6 : var_7 ) ) ; } } else { type_1 . method_7 ( this , getstring ( var_8 ) , var_9 ) . show ( ) ; } }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, type_3 data ) throws java.lang.exception { type_4 var_3 = var_1. method_2 ( ) ; if ( var_3 == null ) { throw new java.lang.exception ( string_1 ) ; } data. put ( string_2, var_2. method_3 ( var_1 ) ) ; java.io.file var_4 = var_1. method_4 ( ). getconfig ( ). method_5 ( string_3 ) ; type_5. method_6 ( var_5, var_4, data, var_2. method_7 ( ), false ) ; }

************

************
tgt: private void method_1 ( java.lang.object var_1 , type_1 var_2 ) { if ( var_1 instanceof type_2 ) { java.util.list < java.lang.object > results = ( ( type_2 ) ( var_1 ) ) . method_2 ( ) ; for ( java.lang.object var_3 : results ) { type_3 var_4 = method_3 ( var_3 ) ; method_4 ( var_4 , var_2 ) ; } } else { type_3 var_4 = method_3 ( var_1 ) ; method_4 ( var_4 , var_2 ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; int [ ] var_2 = new int [ ] { var_3, var_4, var_5, var_4, var_5, var_4, var_5, var_4, var_6, var_3, var_4, var_6, var_7, var_8, var_7, var_4, var_3, var_4, var_9, var_8, var_4, var_10, var_4, var_10, var_4, var_10 } ; method_2 ( var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { if ( var_1 != null ) { var_2 = var_1 ; int i = var_2 . method_2 ( char_1 ) ; i = java.lang.integer.parseint ( var_2 . substring ( 0 , i ) ) ; if ( i > ( var_3 ) ) var_3 = ( ( byte ) ( i ) ) ; } }
[0]: public int method_1 ( type_1 var_1 ) { return var_2. update ( var_3, new java.lang.object [ ] { var_1. method_2 ( ), var_1. method_3 ( ), var_1. method_4 ( ), var_1. method_5 ( ), var_1. method_6 ( ), var_1. method_7 ( ) } ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 . method_2 ( var_1 . getid ( ) ) ) { var_2 . put ( var_1 . getid ( ) , var_1 ) ; } else { var_1 . method_3 ( method_4 ( ) ) ; var_2 . put ( var_1 . getid ( ) , var_1 ) ; } }
[0]: public static type_1 method_1 ( final java.lang.long var_1, final type_2 var_2, final type_3 var_3, final type_4 var_4, final java.lang.string var_5, final java.lang.string message, final java.lang.string var_6, final java.lang.string var_7, final java.lang.string var_8 ) { return new type_1 ( var_1, var_2, var_3, var_4, var_9, message, var_6, var_5, var_7, var_8 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( method_2 ( ) ) instanceof type_1 ) { if ( ( method_2 ( ) ) == null ) return ; if ( ( ( ( type_1 ) ( method_2 ( ) ) ) . method_3 ( ) ) == null ) throw new type_2 ( ) ; method_4 ( ( ( type_1 ) ( method_2 ( ) ) ) . method_5 ( ) , true ) ; } }
[0]: public boolean method_1 ( type_1 var_1, java.util.map < java.lang.string, type_2 > var_2 ) { boolean result = false ; if ( var_3. equals ( var_1 ) ) { method_2 ( ) ; var_2. remove ( method_3 ( ) ) ; result = true ; } else { result = var_4. remove ( var_1 ) ; var_1. method_4 ( null ) ; result = true ; } if ( result ) { method_5 ( ) ; } return result ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 ; type_1 . method_2 ( string_1 ) ; if ( ! ( ( var_2 = type_1 . gettext ( ) . tostring ( ) ) . equals ( string_1 ) ) ) { android.content.intent type_2 = new android.content.intent ( this , var_3 class ) ; type_2 . method_3 ( string_3 , var_2 ) ; method_4 ( type_2 ) ; } else { type_3 . method_5 ( string_4 , string_5 ) ; type_1 . method_2 ( string_2 ) ; type_1 . method_6 ( var_4 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_3 = ( ( type_2 ) ( method_2 ( var_2 ) ) ) ; type_3. method_3 ( string_1, var_3. gettext ( ). tostring ( ) ) ; var_4 = var_3. gettext ( ). tostring ( ) ; if ( var_4. equals ( string_2 ) ) { var_5 = string_3 ; } else { var_5 = string_4 ; } }

************

************
tgt: public java.lang.string tostring ( type_1 var_1 ) { java.lang.string value = null ; if ( ( null != var_1 ) && ( ( var_1 . getvalue ( ) ) != null ) ) { if ( var_1 instanceof type_2 ) { value = new java.lang.string ( ( ( type_2 ) ( var_1 ) ) . getvalue ( ) ) ; } else { value = var_1 . tostring ( ) ; } } return value ; }
[0]: protected java.lang.integer method_1 ( java.lang.string... params ) { java.lang.integer var_1 = 0 ; try { type_1 var_2 = new type_2 ( ) ; var_2. add ( string_1, params [ 0 ] ) ; var_2. add ( string_2, params [ 1 ] ) ; var_2. add ( string_3, params [ int_1 ] ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_1 = var_3. method_2 ( string_4 ) ; } catch ( java.lang.exception var_4 ) { var_4. method_3 ( ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 < type_1 > element ) { type_3 var_2 = ( ( type_3 ) ( ( type_2 < ? > ) ( element ) ) ) ; type_4 p = ( ( type_4 ) ( var_1 ) ) ; type_5 var_3 = var_4 . remove ( p ) ; if ( var_3 != null ) { var_5 . method_2 ( var_3 ) ; var_6 . remove ( var_3 ) ; } method_3 ( var_2 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1, var_3 ) ; java.lang.string var_4 = method_2 ( var_1, var_5 ) ; type_1 var_6 = new type_1 ( ) ; method_3 ( var_2, var_6 ) ; method_4 ( var_4, var_6 ) ; if ( var_7. isempty ( ) ) { var_8 = string_1 ; } else { var_8 = string_2 ; } return var_6 ; }

************

************
tgt: public void update ( float var_1 ) { method_1 ( var_1 ) ; var_3 = var_2 . method_3 ( ) ; var_4 . step ( ( 1 / float_1 ) , int_1 , int_2 ) ; method_4 ( var_5 , method_5 ( ) , method_6 ( ) ) ; var_6 . method_7 ( var_5 ) ; }
[0]: public void start ( ) { var_1 = true ; var_2 = true ; var_3 = false ; ( ( type_1 ) ( method_1 ( 0 ) ) ). method_2 ( ) ; ( ( type_1 ) ( method_1 ( int_1 ) ) ). method_2 ( ) ; ( ( type_2 ) ( method_1 ( 1 ) ) ). start ( ) ; method_3 ( title, int_2 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_2 var_1 = new type_3 ( ) . method_2 ( 1 ) . source ( string_1 ) . target ( string_2 ) . build ( ) ; method_3 ( var_1 ) ; var_2 . method_4 ( new type_4 ( string_3 , type_5 . method_5 ( ) , type_6 . method_5 ( ) ) ) ; var_2 . method_6 ( var_3 ) ; type_7 . method_7 ( var_3 , var_4 class . method_9 ( string_4 ) ) ; }
[0]: public static < type_1 extends type_2 > java.util.map < java.lang.string, type_1 > method_1 ( type_3 var_1, java.lang.class < type_1 > var_2 ) { var_1. method_2 ( var_2. method_3 ( ) ) ; java.util.map < java.lang.string, type_1 > output = new type_4 < java.lang.string, type_1 > ( ) ; for ( java.lang.string key : var_1. method_4 ( ) ) { output. put ( key, ( ( type_1 ) ( var_1. method_5 ( key ) ) ) ) ; } return output ; }

************

************
tgt: public void method_1 ( final android.content.context context , android.content.intent intent ) { type_1 . method_2 ( ) . settext ( string_1 ) ; android.content.intent var_4 = new android.content.intent ( context , var_5 class ) ; var_4 . method_6 ( var_6 ) ; context . method_7 ( var_4 ) ; }
[0]: public type_1 method_1 ( type_2 item ) { type_3 var_1 = method_2 ( item ) ; if ( var_1!= null ) { java.lang.string var_2 = var_1. gettext ( ). trim ( ) ; if ( var_2. equals ( var_3 ) ) { var_4. method_3 ( var_5, string_1 ) ; var_1. method_4 ( ) ; return null ; } } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = var_1 . method_2 ( ( - ( method_3 ( ) ) ) , ( - ( method_4 ( ) ) ) ) ; for ( type_3 var_4 : type_4 . method_5 ( this , var_5 ) ) { var_4 . method_1 ( var_3 , var_2 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = method_2 ( string_1 ) ; new type_1 ( new java.io.file ( string_2 ) ). method_3 ( int_1 ). method_4 ( int_2 ). method_5 ( int_3 ). method_6 ( int_4 ). method_7 ( int_5 ). build ( ) ; }

************

************
tgt: public void handle ( type_1 var_1 ) { if ( ! ( var_2 ) ) { int var_3 = type_2 . method_1 ( ( ( int ) ( var_1 . method_2 ( ) ) ) ) ; int var_4 = type_2 . method_1 ( ( ( int ) ( var_1 . method_3 ( ) ) ) ) ; var_5 . method_4 ( var_3 , var_4 ) ; update ( ) ; if ( var_5 . method_5 ( ) ) { var_2 = true ; method_6 ( ) ; } } }
[0]: public void error ( type_1 var_1, java.lang.string message, java.lang.object... args ) { long var_2 = ( type_2. method_1 ( ) ) / int_1 ; long var_3 = var_2 - ( var_4 ) ; if ( var_3 > ( var_5 ) ) { var_1. method_2 ( message, args ) ; var_4 = var_2 ; } }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_1 = null ; try { java.lang.class c = java.lang.class . method_2 ( type_2 . method_3 ( string_1 ) ) ; type_3 var_2 = c . method_4 ( ) ; var_1 = ( ( type_1 ) ( var_2 . method_5 ( ) ) ) ; } catch ( java.lang.exception var_3 ) { var_1 = new type_4 ( ) ; } return var_1 ; }
[0]: public int method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; int var_3 = var_1. method_2 ( ) ; int var_4 = var_2. method_3 ( ( ( int_1 + ( var_1. method_4 ( ) ) ) - ( method_4 ( ) ) ) ) ; if ( var_4 <= int_2 ) { method_5 ( false ) ; var_1. method_6 ( var_5 ) ; method_7 ( ( var_3 - ( var_1. method_2 ( ) ) ) ) ; } else { method_5 ( true ) ; } return var_6 ; }

************

************
tgt: public static int method_1 ( java.lang.string line ) { int var_1 = 1 ; for ( int i = 0 ; i < ( line . length ( ) ) ; i ++ ) { if ( ( ( line . method_2 ( i ) ) == char_1 ) || ( ( line . method_2 ( i ) ) == char_2 ) ) { var_1 ++ ; } else { break ; } } return var_1 ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( (! ( var_1 ) ) && (! ( var_2 ) ) ) { method_2 ( ) ; } type_1. method_3 ( this, var_3, var_4 ) ; type_2. method_4 ( this, var_5, var_6, var_7, var_8 ) ; }

************

************
tgt: public static type_1 < type_2 > method_1 ( final java.lang.string var_1 ) { java.util.list < type_2 > var_2 = java.util.arrays.aslist ( type_2 . values ( ) ) ; return var_2 . method_2 ( ) . method_3 ( ( t ) - > var_3 . method_4 ( var_1 ) ) . method_5 ( ) ; }
[0]: public type_1 method_1 ( ) { if ( ( var_1 ) < var_2 ) { type_1 var_3 = method_2 ( ( ( index ) ++ ), var_4 [ var_1 ] ) ; if ( ( index ) >= ( var_5 [ var_1 ] ) ) { ( var_1 ) ++ ; } return var_3 ; } else { throw new type_2 ( ) ; } } return null ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( ) . method_4 ( method_5 ( ) . getstring ( var_2 ) ) ; type_2 . method_6 ( this ) ; type_3 var_3 = new type_3 ( ) ; var_3 . method_7 ( ) ; method_8 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 value = var_1. method_2 ( ) ; while ( value!= ( var_2 ) ) { if ( value == ( var_3 ) ) { method_3 ( var_1, true ) ; } else if ( value == ( var_4 ) ) { method_1 ( var_1 ) ; } else if ( value!= ( var_5 ) ) { method_3 ( var_1, false ) ; } value = var_1. method_2 ( ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , int var_2 , int var_3 ) { java.awt.color [ ] var_4 = new java.awt.color [ ] { var_5 , var_6 , var_7 , var_8 , var_9 , var_10 } ; type_1 var_11 = new type_2 ( ) . method_2 ( var_4 [ ( var_3 - 1 ) ] ) . method_3 ( var_4 [ ( int_1 - ( var_3 - 1 ) ) ] ) . build ( ) ; type_3 . method_1 ( var_1 , var_2 , var_11 ) ; type_3 . method_4 ( 1 , var_1 ) ; }
[0]: public static void method_1 ( java.lang.string text, long var_1, long var_2 ) { type_1 var_3 = type_1. method_2 ( var_1 ) ; type_2 var_4 = type_2. method_2 ( var_2 ) ; type_3 var_5 = new type_3 ( text, var_3, var_4 ) ; var_5. method_3 ( ) ; type_4. view ( var_5. id ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , boolean var_2 , java.lang.string var_3 , java.lang.long var_4 ) { type_1 var_5 = var_6 . method_2 ( var_1 ) ; if ( var_2 ) { type_2 var_7 = var_8 . method_2 ( new type_2 ( var_1 . getid ( ) , var_4 , var_10 , 0l , var_3 ) ) ; } return var_5 ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. get ( var_3 ) ; type_2. method_2 ( var_1. method_3 ( ). isempty ( ) ) ; var_1. method_4 ( ). method_5 ( ) ; var_2. update ( var_1 ) ; type_1 var_4 = var_2. get ( var_1. getid ( ) ) ; type_2. method_6 ( var_4. method_3 ( ) ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_2 = null ; var_2 = new type_2 ( ) ; var_2 . method_2 ( var_3 ) ; var_2 . method_3 ( var_4 ) ; var_2 . method_4 ( var_5 ) ; if ( var_6 . method_5 ( var_2 ) ) { return string_1 ; } else { var_7 = true ; return string_2 ; } }
[0]: public static type_1 method_1 ( type_1 var_1, type_2 var_2, type_1 var_3, type_1 var_4, type_1 var_5, type_1 var_6, type_1 var_7, type_1 var_8, type_1 var_9 ) { return ( var_1. method_2 ( ). method_3 ( ( ( java.lang.string ) ( var_3. method_4 ( ) ) ) ) )!= null? var_10 : var_11 ; }

************

************
tgt: protected void method_1 ( ) { type_1 . method_2 ( this ) . method_3 ( var_1 ) ; if ( ( ( var_2 ) != null ) && ( var_2 . method_4 ( ) ) ) { method_5 ( type_2 . method_6 ( this ) ) ; var_2 . method_7 ( var_3 ) ; } else { } super . method_1 ( ) ; }
[0]: private void method_1 ( ) { try { java.lang.thread. method_2 ( int_1, 0 ) ; } catch ( type_1 var_1 ) { var_1. method_3 ( ) ; } if ( ( var_2 ) == ( var_3 ) ) { java.lang.system.out.println ( string_1 ) ; var_2 = var_4 ; method_4 ( ) ; method_5 ( ) ; } else if ( ( var_2 ) == ( var_4 ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = var_3 ; method_6 ( ) ; } }

************

************
tgt: int method_1 ( java.lang.string name ) { for ( int i = 0 ; ( var_1 [ i ] ) != null ; ++ i ) { if ( var_1 [ i ] . var_2 . equals ( name ) ) { type_1 . method_2 ( string_1 , java.lang.string . method_3 ( i ) ) ; return i ; } } return - 1 ; }
[0]: public void method_1 ( ) { int offset = content. method_2 ( var_1 ) ; int line = var_2. method_3 ( ). method_4 ( offset ) ; int var_3 = var_2. method_3 ( ). method_5 ( line ) ; var_4. method_6 ( 0, ( var_3 - int_1 ) ) ; }

************

************
tgt: private type_1 method_1 ( float var_1 , float var_2 , int var_3 , float [ ] var_4 , boolean var_5 ) { var_6 = new type_1 ( method_2 ( ) , var_1 , var_2 , var_3 , var_4 , var_5 ) ; var_6 . method_3 ( new type_2 ( ) { public void method_4 ( type_3 event ) { if ( event . method_5 ( ) . equals ( var_7 ) ) method_6 ( ) ; } } ) ; return var_6 ; }
[0]: public static type_1 method_1 ( java.lang.string name ) { java.lang.string var_1 = name. method_2 ( ) ; type_1 var_3 = var_4. method_4 ( name ) ; if ( ( var_3!= null ) && ( var_3. gettype ( ). method_5 ( var_5 ) ) ) return var_3 ; else { var_3 = new type_4 ( var_1, new type_5 ( ) ) ; var_4. method_6 ( name, var_3 ) ; return var_3 ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 ; try { java.lang.string query = java.lang.string.format ( string_1 , var_2 class . getname ( ) ) ; var_1 = var_3 . method_2 ( query , var_2 class ) . method_3 ( ) ; return var_1 ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } return null ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if (! ( var_1 instanceof type_1 ) ) throw new type_2 ( string_1 ) ; else { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( ( this. method_1 ( ) ) == ( var_1. method_1 ( ) ) ) && ( ( this. method_2 ( ) ) == ( var_1. method_2 ( ) ) ) ) && ( ( this. method_3 ( ) ) == ( var_1. method_3 ( ) ) ) ; } }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { if ( ( var_5 ) != null ) { if ( var_1 == ( var_4 ) ) { if ( type_1 . method_2 ( var_3 ) ) { var_5 . method_3 ( var_6 ) ; } else { type_2 . i ( string_1 , string_2 ) ; var_5 . method_4 ( var_6 ) ; } } else { super . method_1 ( var_1 , var_2 , var_3 ) ; } } }
[0]: public boolean method_1 ( int var_1, int var_2 ) { x = var_1 ; y = var_2 ; method_2 ( ) ; method_3 ( ) ; if ( method_4 ( x, y, false ) ) { method_5 ( x, y ) ; return true ; } return false ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( method_3 ( var_3 , var_4 ) . getboolean ( var_5 , false ) ) { method_4 ( new android.content.intent ( this , var_6 class ) ) ; } var_7 = ( ( android.widget.button ) ( method_5 ( var_8 ) ) ) ; var_7 . method_6 ( this ) ; var_9 = ( ( android.widget.button ) ( method_5 ( var_10 ) ) ) ; var_9 . method_6 ( this ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1. method_2 ( method_3 ( ). length ( ) ) ; var_1. method_4 ( method_3 ( ), var_2 ) ; var_1. method_2 ( method_5 ( ). length ( ) ) ; var_1. method_4 ( method_5 ( ), var_2 ) ; var_1. method_2 ( method_6 ( ) ) ; var_1. method_7 ( method_8 ( ) ) ; }

************

************
tgt: private static synchronized void method_1 ( java.lang.string key ) { if ( ( type_1 . method_2 ( ) . context ) == null ) { type_2 . method_3 ( string_1 , string_2 ) ; return ; } type_3 var_1 = type_1 . method_2 ( ) . context . method_4 ( var_2 , var_3 ) ; var_1 . method_5 ( ) . remove ( key ) . commit ( ) ; }
[0]: private void method_1 ( int var_1, type_1 var_2 ) { ( this. var_3 ) ++ ; int min = var_2. method_2 ( ) ; int var_4 = var_2. method_3 ( ) ; double var_5 = min + ( var_4 / float_1 ) ; this. var_6 [ ( var_1 - 1 ) ]. getdata ( ). add ( new type_2 < > ( ( ( double ) ( this. var_3 ) ), var_5 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string type_1 ; type_1 = var_2 . gettext ( ) . tostring ( ) ; if ( type_1 . isempty ( ) ) { type_2 . method_2 ( context , string_1 , var_3 ) . show ( ) ; } else { } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_1. method_2 ( string_1, string_2 ) ; var_1. method_2 ( string_3, new type_3 ( var_2. method_3 ( ) ) ) ; var_1. method_2 ( string_4, var_3. method_4 ( ) ) ; var_1. method_2 ( string_5, var_2 ) ; var_1. method_2 ( string_6, var_2. method_5 ( ) ) ; return string_7 ; }

************

************
tgt: public void start ( ) { type_1 n = ( ( type_2 ) ( var_1 ) ) . var_2 ; type_3 var_3 = type_4 . method_1 ( ) [ 0 ] . method_2 ( ) . method_3 ( ) ; var_4 = type_5 . method_4 ( n . method_5 ( ) , var_3 , ( ( var_5 ) - int_1 ) ) . method_6 ( new java.lang.string [ ] { } ) ; index = 0 ; }
[0]: public void method_1 ( ) { var_1 = false ; var_2. method_2 ( type_1. getcolor ( context, var_3 ) ) ; var_2. settext ( string_1 ) ; var_1 = false ; new type_2 ( ). method_3 ( new type_3 ( ) { public void method_1 ( ) { var_1 = false ; var_2. method_2 ( type_1. getcolor ( context, var_4 ) ) ; var_5 += 1 ; var_1 = true ; method_4 ( ) ; } }, int_1 ) ; }

************

************
tgt: private type_1 method_1 ( ) throws type_2 { java.lang.system.out.println ( string_1 ) ; type_3 var_1 = null ; type_4 var_2 = ( ( type_4 ) ( method_2 ( var_3 ) ) ) ; method_2 ( var_5 ) ; type_6 type = ( ( type_6 ) ( method_2 ( var_6 ) ) ) ; var_1 = new type_3 ( var_2 , new type_5 ( ) , type ) ; return var_1 ; }
[0]: void method_1 ( ) { init ( ) ; java.util.set < type_1 > var_1 = new java.util.hashset < type_1 > ( var_2 ) ; var_2. method_2 ( ) ; for ( type_1 var_3 : var_1 ) { if ( ( var_3. node )!= ( node ) ) { method_3 ( var_3. node ) ; } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = type_1 . method_2 ( ) . method_3 ( string_1 ) . method_4 ( var_2 . method_5 ( ) ) . build ( ) ; assertequals ( type_3 . method_6 ( ) , var_1 . method_7 ( ) ) ; }
[0]: private void method_1 ( java.lang.integer var_1, java.util.collection < java.lang.integer > var_2 ) { for ( java.util.iterator < java.lang.integer > i = var_2. iterator ( ) ; i. method_2 ( ) ; ) { method_3 ( new type_1 ( var_1, this. id, i. method_4 ( ), string_1, null, null ) ) ; } }

************

************
tgt: public static void method_1 ( final java.util.map < type_1 , type_2 > result , final type_1 var_1 , final type_2 var_2 ) { final type_2 var_3 = result . get ( var_1 ) ; result . put ( var_1 , ( var_3 != null ? var_3 . add ( var_2 ) : var_2 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 < type_2 > var_1 = type_3. method_2 ( method_3 ( true, true, true ), method_3 ( true, false, false ), method_3 ( false, true, false ), method_3 ( false, true, false ) ). method_4 ( new type_4 ( true ) ). method_5 ( ) ; var_1. method_6 ( 1 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.lang.string var_1 = string_1 ; java.lang.string key = string_2 ; type_1 var_2 = new type_2 ( key . method_1 ( ) , var_1 ) ; type_3 var_3 = type_3 . method_2 ( var_1 ) ; var_3 . init ( var_4 , var_2 ) ; java.lang.string data = string_3 ; byte [ ] var_5 = var_3 . method_3 ( data . method_1 ( ) ) ; }
[0]: private < type_1 > type_1 getvalue ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, type_1 var_4 ) { type_2 var_5 = getvalue ( var_1, var_2, null ) ; if ( ( var_5!= null ) && ( var_5. method_1 ( var_3 ) ) ) { return ( ( type_1 ) ( var_5. get ( var_3 ) ) ) ; } return var_4 ; }

************

************
tgt: protected type_1 < type_2 > method_1 ( type_3 var_1 ) { try { return type_1 . method_2 ( java.lang.class . method_3 ( var_1 . method_4 ( ) ) . method_5 ( var_2 ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { type_4 . error ( ( string_1 + ( var_1 . method_4 ( ) ) ) , var_3 ) ; } return type_1 . method_7 ( ) ; }
[0]: public static double method_1 ( type_1 var_1, type_2 var_2 ) { switch ( var_2 ) { case var_3 : return type_3. method_2 ( var_1 ) ; case var_4 : return type_3. method_3 ( var_1 ) ; case var_5 : return type_3. method_4 ( var_1 ) ; case var_6 : return type_3. method_5 ( var_1 ) ; default : throw new type_4 ( string_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view var_2 , int position , long id ) { java.lang.string [ ] var_3 = var_4 . method_2 ( ) . tostring ( ) . split ( string_1 ) ; type_2 var_5 = var_6 . method_3 ( var_3 [ 1 ] , var_3 [ 0 ] ) ; var_7 = var_5 . getid ( ) ; method_4 ( var_5 . getid ( ) ) ; }
[0]: public int method_1 ( java.lang.string var_1 ) { int state ; boolean var_2 ; boolean var_3 ; var_2 = var_4. method_2 ( var_1 ) ; var_3 = var_4. method_3 ( var_1 ) ; if ( var_2 && var_3 ) { var_4. method_4 ( var_1, false ) ; state = 1 ; } else { state = 0 ; } java.lang.system.out.println ( ( ( string_1 + string_2 ) + state ) ) ; return state ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 , type_3 data ) throws java.lang.exception { data . put ( string_2 , var_2 . method_3 ( var_1 ) ) ; java.io.file var_4 = var_1 . method_4 ( ) . getconfig ( ) . method_5 ( string_3 ) ; type_5 . method_6 ( var_5 , var_4 , data , var_2 . method_7 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( var_2. method_2 ( ) ) { method_3 ( var_2. method_2 ( ) ) ; var_2. method_4 ( ) ; } else { method_3 ( var_2. method_2 ( ) ) ; var_2. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; int [ ] var_2 = new int [ ] { var_3 , var_4 , var_5 , var_4 , var_5 , var_4 , var_5 , var_4 , var_6 , var_3 , var_4 , var_6 , var_7 , var_8 , var_7 , var_4 , var_3 , var_4 , var_9 , var_8 , var_4 , var_10 , var_4 , var_10 , var_4 , var_10 , var_8 } ; method_2 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2 ) { type_2 < type_1 > var_3 = var_4. get ( var_1. tolowercase ( ) ) ; if ( var_3 == null ) { var_3 = new type_2 ( var_5, var_6, var_7, var_8, var_9, var_10 ) ; var_4. put ( var_1. tolowercase ( ), var_3 ) ; } var_3. add ( var_2 ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { return var_2 . update ( var_3 , var_1 . method_2 ( ) , var_1 . method_3 ( ) , var_1 . method_5 ( ) , ( var_1 . method_6 ( ) ? 1 : 0 ) , ( var_1 . method_7 ( ) ? 1 : 0 ) , var_1 . method_4 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) > ( var_1. length ( ) ) ) { type_2 set = var_3. get ( position ) ; set. method_2 ( java.lang.float. method_3 ( var_1. tostring ( ) ) ) ; var_3. set ( position, set ) ; } }

************

************
tgt: public static type_1 method_1 ( final java.lang.long var_1 , final type_2 var_2 , final type_3 var_3 , final type_4 var_4 , final java.lang.string var_5 , final java.lang.string message , final java.lang.string var_6 , final java.lang.string var_7 , final java.lang.string var_8 ) { return new type_1 ( var_1 , var_2 , var_3 , var_4 , var_9 , var_5 , message , var_6 , var_7 , var_8 ) ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( ) ; var_2 = true ; type_2 var_3 = new type_2 ( ) ; var_3. method_2 ( method_3 ( ) ) ; method_4 ( string_1 ) ; var_3. method_5 ( var_4 ) ; var_1. method_6 ( string_2 ) ; var_1. method_7 ( new type_3 ( var_3, int_1, int_1 ) ) ; var_1. method_8 ( int_2 ) ; var_1. method_9 ( int_3 ) ; var_1. show ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.util.map < java.lang.string , type_2 > var_2 ) { boolean result = false ; if ( var_3 . equals ( var_1 ) ) { method_2 ( var_2 ) ; result = true ; } else { result = var_4 . remove ( var_1 ) ; var_1 . method_4 ( null ) ; result = true ; } if ( result ) { method_5 ( ) ; } return result ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; if ( ( ( var_2 )!= null ) && ( var_3 ) ) { var_4 = type_2. method_3 ( ). method_4 ( ) ; var_2. method_5 ( var_4. method_6 ( ), int_1 ) ; } method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_3 = ( ( type_2 ) ( method_2 ( var_2 ) ) ) ; var_4 = var_3 . gettext ( ) . tostring ( ) ; if ( var_4 . equals ( string_2 ) ) { var_5 = string_3 ; } else { var_5 = string_4 ; } }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { return ( ( var_1. method_2 ( ) ) + ( var_1. method_3 ( ) ) ) > ( ( var_2. method_2 ( ) ) + ( var_2. method_3 ( ) ) )? 1 : ( ( var_1. method_2 ( ) ) + ( var_1. method_3 ( ) ) ) == ( ( var_2. method_2 ( ) ) + ( var_2. method_3 ( ) ) )? 0 : - 1 ; }

************

************
tgt: protected java.lang.integer method_1 ( java.lang.string ... params ) { try { type_1 var_2 = new type_2 ( ) ; var_2 . add ( string_1 , params [ 0 ] ) ; var_2 . add ( string_2 , params [ 1 ] ) ; var_2 . add ( string_3 , params [ int_1 ] ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_3 . method_2 ( string_4 ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_3 ( ) ; } return 0 ; }
[0]: public type_1 method_1 ( type_1 var_1, type_1 var_2 ) throws java.lang.exception { java.lang.double var_3 = ( ( ( java.lang.double ) ( var_1. get ( var_4 ) ) ) + ( ( java.lang.double ) ( var_2. get ( var_4 ) ) ) ) / int_1 ; var_1. put ( var_4, var_3 ) ; return var_1 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1 , var_3 ) ; java.lang.string var_4 = method_2 ( var_1 , var_5 ) ; type_1 var_6 = new type_1 ( ) ; var_6 = method_3 ( var_2 , var_6 ) ; method_4 ( var_4 , var_6 ) ; if ( var_7 . isempty ( ) ) { var_8 = string_1 ; } else { var_8 = string_2 ; } return var_6 ; }
[0]: public void method_1 ( ) { while ( true ) { try { type_1 var_1 = type_2. method_2 ( ) ; type_3 t = new type_3 ( var_1 ) ; t. start ( ) ; var_2. add ( t ) ; } catch ( java.io.ioexception var_3 ) { java.lang.system.out.println ( string_1 ) ; } } }

************

************
tgt: public void start ( ) { var_1 = true ; var_3 = false ; ( ( type_1 ) ( method_1 ( 0 ) ) ) . method_2 ( ) ; ( ( type_1 ) ( method_1 ( int_1 ) ) ) . method_2 ( ) ; ( ( type_2 ) ( method_1 ( 1 ) ) ) . start ( ) ; method_3 ( title , int_2 ) ; }
[0]: private int method_1 ( type_1 var_1, int var_2 ) { java.util.list < type_1 > var_3 = var_1. method_2 ( ) ; int var_4 = 0 ; for ( type_1 var_5 : var_3 ) { var_6. add ( ( var_2 + ( var_4 ++ ) ), var_5 ) ; if ( var_5. method_3 ( ) ) { var_4 += method_1 ( var_5, ( var_2 + var_4 ) ) ; } } var_1. method_4 ( ) ; return var_4 ; }

************

************
tgt: public static < type_1 > java.util.map < java.lang.string , type_1 > method_1 ( type_3 var_1 , java.lang.class < type_1 > var_2 ) { var_1 . method_2 ( var_2 . method_3 ( ) ) ; java.util.map < java.lang.string , type_1 > output = new type_4 < java.lang.string , type_1 > ( ) ; for ( java.lang.string key : var_1 . method_4 ( ) ) { output . put ( key , ( ( type_1 ) ( var_1 . get ( key ) ) ) ) ; } return output ; }
[0]: protected int method_1 ( int line, int var_1 ) { int count = 1 ; for ( int [ ] var_2 : var_3 ) { count += ( method_2 ( line, ( var_1 + ( var_2 [ 0 ] ) ) ) )? 1 : 0 ; } return count ; }

************

************
tgt: public boolean method_1 ( type_2 item ) { type_3 var_1 = method_2 ( item ) ; if ( var_1 != null ) { java.lang.string var_2 = var_1 . gettext ( ) . trim ( ) ; if ( var_2 . equals ( var_3 ) ) { var_4 . method_3 ( var_5 , string_1 ) ; var_1 . method_4 ( ) ; return true ; } } return false ; }
[0]: public final void method_1 ( ) { java.util.arraylist < type_1 > var_1 = method_2 ( ) ; for ( type_1 var_2 : var_1 ) { method_3 ( var_2, var_3 ) ; } java.util.arraylist < type_2 > var_4 = method_4 ( ) ; for ( type_2 var_5 : var_4 ) { method_5 ( var_5 ) ; } try { type_3. method_6 ( ). method_7 ( var_6 ) ; } catch ( type_4 var_7 ) { } this. var_8 = true ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = method_2 ( string_1 ) ; new type_1 ( var_1 ) . method_3 ( int_1 ) . method_4 ( int_2 ) . method_5 ( int_3 ) . method_6 ( int_4 ) . method_7 ( int_5 ) . build ( ) ; }
[0]: public void method_1 ( java.lang.string value ) throws type_1 { try { java.lang.string var_1 = type_2. method_2 ( this. node. method_3 ( ). method_4 ( ) ). method_5 ( value ). method_4 ( ) ; this. method_6 ( var_1 ) ; } catch ( type_3 var_2 ) { throw type_4. method_7 ( var_2 ) ; } }

************

************
tgt: public void error ( type_1 var_1 , java.lang.string message , java.lang.object ... args ) { long var_2 = ( type_2 . method_1 ( ) ) / int_1 ; long var_3 = var_2 - ( var_4 ) ; if ( var_3 > ( var_5 ) ) { var_1 . error ( message , args ) ; var_4 = var_2 ; } }
[0]: public java.lang.string method_1 ( java.lang.string name, java.lang.string var_1 ) throws java.lang.exception { java.lang.string var_2 = string_1 ; if ( ( name. length ( ) ) > int_1 ) { return var_2 ; } type_1 var_3 = type_1. method_2 ( var_1 ) ; if ( var_3 == null ) { return var_2 ; } var_2 = new type_2 ( ). method_1 ( var_3. method_3 ( ), var_1 ) ; return var_2 ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; int var_3 = var_1 . method_2 ( ) ; if ( ( var_2 . method_3 ( ( ( int_1 + ( var_1 . method_4 ( ) ) ) - ( method_4 ( ) ) ) ) ) <= int_2 ) { method_5 ( false ) ; var_1 . method_6 ( var_5 ) ; method_7 ( ( var_3 - ( var_1 . method_2 ( ) ) ) ) ; } else { method_5 ( true ) ; } return var_6 ; }
[0]: public static void method_1 ( java.lang.string var_1 ) { long var_2 = java.lang.math.round ( ( ( var_3. method_2 ( ( ( ( var_4 ) - ( var_5 ) ) + 1 ) ) ) + ( var_5 ) ) ) ; for ( int j = 0 ; j < var_2 ; j ++ ) { java.lang.string var_6 = ( ( string_1 + j ) + string_2 ) + var_1 ; var_7. put ( var_6, var_1 ) ; } type_1. method_3 ( var_1 ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( ( ! ( var_1 ) ) && ( ! ( var_2 ) ) ) { method_2 ( ) ; } type_1 . method_3 ( this , var_3 , var_4 ) ; method_4 ( var_5 , var_6 , var_7 , var_8 ) ; }
[0]: public type_1 method_1 ( final type_2 var_1, java.lang.integer var_2 ) { return new type_3 ( 0, 0, var_2 ) { protected void method_2 ( type_4 var_3, type_5 var_4 ) throws java.lang.exception { if ( type_6. method_3 ( ) ) { type_6. info ( string_1, var_4. state ( ). name ( ), var_3. method_4 ( ) ) ; } var_3. method_4 ( ). method_5 ( ) ; } } ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( ( var_1 ) < var_2 ) { assert ( index ) >= ( var_5 [ var_1 ] ) ; type_1 var_3 = method_2 ( index , var_4 [ var_1 ] ) ; ( index ) ++ ; if ( ( ( var_1 ) == ( var_2 - 1 ) ) || ( ( index ) == ( var_5 [ ( ( var_1 ) + 1 ) ] ) ) ) { ( var_1 ) ++ ; } return var_3 ; } else { throw new type_2 ( ) ; } }
[0]: public void method_1 ( type_1 result ) { var_1. method_2 ( ) ; try { var_2 = type_2. method_3 ( var_3, var_4, var_5, result, var_6 ) ; var_7 = var_8 ; var_9. method_4 ( ) ; if ( ( var_2 )!= null ) { method_5 ( ) ; method_6 ( ) ; } } catch ( type_3 var_10 ) { var_10. method_7 ( ) ; } finally { var_1. method_8 ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 value = var_1 . method_2 ( ) ; while ( value != ( var_2 ) ) { if ( value == ( var_3 ) ) { method_3 ( var_1 ) ; } else if ( value == ( var_4 ) ) { method_1 ( var_1 ) ; } value = var_1 . method_2 ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( null, null ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_3 ( ) ; var_1. method_2 ( type_4. method_3 ( string_1 ), var_2, var_3, false ) ; type_5. assertthat ( var_3. method_4 ( ), type_6. method_5 ( string_2 ) ) ; type_5. assertthat ( var_3. method_6 ( ), type_6. method_5 ( string_3 ) ) ; }

************

************
tgt: public static void method_1 ( java.lang.string text , long var_1 , long var_2 ) { java.lang.system.out.println ( text ) ; type_1 var_3 = type_1 . method_2 ( var_1 ) ; type_2 var_4 = type_2 . method_2 ( var_2 ) ; type_3 var_5 = new type_3 ( text , var_3 , var_4 ) ; var_5 . method_3 ( ) ; type_4 . view ( var_5 . id ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( ( var_2 )!= null ) && (! ( var_2. isempty ( ) ) ) ) { var_3. method_2 ( var_4, var_2 ). method_3 ( ) ; android.content.intent intent = new android.content.intent ( this, var_5 class ) ; intent. method_4 ( ( ( var_6 ) | ( var_7 ) ) ) ; method_5 ( intent ) ; method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . get ( var_3 ) ; type_2 . method_2 ( var_1 . method_3 ( ) . isempty ( ) ) ; var_1 . method_4 ( ) . method_5 ( ) ; var_2 . update ( var_1 ) ; type_1 var_4 = var_2 . get ( var_1 . getid ( ) ) ; type_2 . asserttrue ( var_4 . method_3 ( ) . isempty ( ) ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( ( var_1. method_2 ( ) )!= null ) && ( ( var_2. method_2 ( ) )!= null ) ) { return var_1. method_2 ( ). compareto ( var_2. method_2 ( ) ) ; } else if ( ( var_1. method_2 ( ) ) == null ) { return 1 ; } else { return - 1 ; } }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 , type_2 var_2 , type_1 var_3 , type_1 var_4 , type_1 var_5 , type_1 var_6 , type_1 var_7 , type_1 var_8 , type_1 var_9 ) { return ( var_1 . method_3 ( ( ( java.lang.string ) ( var_3 . method_4 ( ) ) ) ) ) != null ? var_10 : var_11 ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { java.util.arraylist < type_1 > var_2 = type_2. method_2 ( var_1 ) ; for ( type_1 var_3 : var_2 ) { if ( ( type_2. method_3 ( var_3, var_4, true ) ) && ( var_5. method_4 ( this. var_5 ) ) ) { return true ; } } return false ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_2 ) == ( var_3 ) ) { java.lang.system.out.println ( string_1 ) ; var_2 = var_4 ; method_4 ( ) ; method_5 ( ) ; } else if ( ( var_2 ) == ( var_4 ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = var_3 ; method_6 ( ) ; } }
[0]: public static java.lang.charsequence method_1 ( java.lang.charsequence var_1, java.lang.charsequence text ) { final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; if ( ( var_1!= null ) && ( ( var_1. length ( ) ) > 0 ) ) { var_2. append ( var_1 ). append ( string_1 ) ; } return var_2. append ( text. tostring ( ). replaceall ( string_2, string_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { int offset = content . tolowercase ( ) . method_2 ( var_1 . tolowercase ( ) ) ; int line = var_2 . method_3 ( ) . method_4 ( offset ) ; int var_3 = var_2 . method_3 ( ) . method_5 ( line ) ; var_4 . method_6 ( 0 , ( var_3 - int_1 ) ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 data ) { if (! ( var_1. equals ( string_1 ) ) ) return false ; java.lang.string [ ] var_3 = var_2. split ( string_1 ) ; return method_2 ( var_3, data ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string name ) { java.lang.string var_1 = name . method_2 ( ) ; type_2 var_2 = type_3 . method_3 ( ) ; type_1 var_3 = var_4 . method_4 ( var_1 ) ; if ( var_3 != null ) return var_3 ; else { var_3 = new type_4 ( var_1 , new type_5 ( ) ) ; var_4 . method_6 ( var_1 , var_3 ) ; return var_3 ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws java.io.ioexception { type_3 p = var_1. method_2 ( new type_4 ( new java.net.url ( url, string_1 ), var_2 ) ) ; assertequals ( ( ( string_2 + ( var_2. name ( ) ) ) + ( p. method_3 ( ) ) ), p. method_3 ( ) ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ! ( var_1 instanceof type_1 ) ) throw new type_2 ( string_1 ) ; else { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( ( this . method_1 ( ) ) == ( var_2 . method_1 ( ) ) ) && ( ( this . method_2 ( ) ) == ( var_2 . method_2 ( ) ) ) ) && ( ( this . method_3 ( ) ) == ( var_2 . method_3 ( ) ) ) ; } }
[0]: public void method_1 ( java.lang.class <? > target, type_1 var_1, java.lang.string url, type_2 method ) { type_3 var_2 = new type_3 ( ) ; var_2. target = target ; var_3 = var_1 ; var_4 = method ; var_2. path = url ; var_5 = url ; if ( type_4. method_2 ( ) ) { type_5. method_2 ( ( string_1 + var_2 ) ) ; } var_6. add ( var_2 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { x = var_1 ; y = var_2 ; method_2 ( ) ; method_3 ( ) ; if ( method_4 ( x , y , true ) ) { method_5 ( x , y ) ; return true ; } return false ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.lang.string var_1 ; if ( ( args.length ) > 0 ) { var_1 = args [ 0 ] ; } else { var_1 = string_1 ; } type_1 var_2 = new type_1 ( var_1 ) ; type_2. method_1 ( ). method_2 ( new java.lang.thread ( string_2 ) { public void method_3 ( ) { type_1. method_4 ( ) ; } } ) ; var_2. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1 . method_2 ( method_3 ( ) . length ( ) ) ; var_1 . method_4 ( method_3 ( ) , var_2 ) ; var_1 . method_2 ( method_5 ( ) . length ( ) ) ; var_1 . method_4 ( method_5 ( ) , var_2 ) ; var_1 . method_2 ( method_6 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { { var_2 = ( ( ( var_2 ) + ( var_3. size ( ) ) ) - 1 ) % ( var_3. size ( ) ) ; java.lang.string filepath = ( ( java.lang.string ) ( var_3. get ( var_2 ) ) ) ; var_4. method_2 ( type_1. method_3 ( filepath ) ) ; var_4. start ( ) ; } }

************

************
tgt: private void method_1 ( int var_1 , type_1 var_2 ) { int min = var_2 . method_2 ( ) ; int var_4 = var_2 . method_3 ( ) ; double var_5 = min + ( var_4 / float_1 ) ; this . var_6 [ ( var_1 - 1 ) ] . getdata ( ) . add ( new type_2 < > ( ( ( double ) ( this . var_3 ) ) , var_5 ) ) ; ( this . var_3 ) ++ ; }
[0]: private void method_1 ( java.util.map < type_1, java.util.list < java.lang.integer > > var_1 ) { for ( java.util.map.entry < type_1, java.util.list < java.lang.integer > > var_2 : var_1. method_2 ( ) ) { for ( java.lang.integer value : var_2. getvalue ( ) ) { var_2. method_3 ( ). method_4 ( value ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_1 . method_2 ( string_1 , string_2 ) ; var_1 . method_2 ( string_3 , new type_3 ( var_2 . method_3 ( ) ) ) ; var_1 . method_2 ( string_4 , var_3 . method_4 ( ) ) ; var_1 . method_2 ( string_5 , var_2 ) ; var_1 . method_2 ( string_6 , type_2 . method_5 ( ) ) ; return string_7 ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { var_2 = - 1 ; if ( ( var_3 )!= null ) { var_4 = var_3. method_2 ( ) ; var_5 = var_3. method_3 ( ) ; } var_1. status = type_2. getvalue ( ) ; var_6 = var_7 ; var_8 = var_9 ; var_10 = var_11 ; return var_1 ; }

************

************
tgt: public void method_1 ( ) { var_2 . method_2 ( type_1 . getcolor ( context , var_3 ) ) ; var_2 . settext ( string_1 ) ; new type_2 ( ) . method_3 ( new type_3 ( ) { public void method_1 ( ) { var_2 . method_2 ( type_1 . getcolor ( context , var_4 ) ) ; var_5 += 1 ; var_1 = true ; method_4 ( ) ; } } , int_1 ) ; }
[0]: public void method_1 ( int index ) { if ( index <= 0 ) { method_2 ( ) ; } else if ( index >= ( ( size ) - 1 ) ) { method_3 ( ) ; } else { type_1 var_1 = var_2 ; for ( int i = 1 ; i < index ; ++ i ) { var_1 = var_3 ; } var_3 = var_4 ; var_1 = var_3 ; var_1 = null ; } -- ( size ) ; } }

************

************
tgt: void method_1 ( ) { init ( ) ; java.util.set < type_1 > var_1 = new java.util.hashset < type_1 > ( var_2 ) ; var_2 . method_2 ( ) ; for ( type_1 var_3 : var_1 ) { if ( ( var_3 . node ) != ( node ) ) { method_3 ( var_3 . node ) ; } else { var_2 . add ( var_3 ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( ) ; if ( ( var_3 ) > 0 ) { type_2. method_3 ( var_4, var_2, var_5, var_3 ) ; } else { type_3. method_4 ( this, string_1, var_6 ). show ( ) ; } }

************

************
tgt: private void method_1 ( java.lang.integer var_1 , java.util.collection < java.lang.integer > var_2 ) { for ( java.util.iterator < java.lang.integer > i = var_2 . iterator ( ) ; i . method_2 ( ) ; ) { method_3 ( new type_1 ( var_1 , this . id , i . method_4 ( ) , null ) ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; if ( type == ( var_2 ) ) { var_1 = string_2 ; new type_1 ( ). execute ( var_3 ) ; } else if ( type == ( var_4 ) ) { var_1 = string_3 ; } else if ( type == ( var_5 ) ) { var_1 = string_4 ; } else { var_1 = string_5 ; } type_2. method_2 ( method_3 ( ), ( string_6 + var_1 ), var_6 ). show ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 < type_2 > var_1 = type_3 . method_2 ( method_3 ( true , true , false ) , method_3 ( true , true , true ) , method_3 ( true , false , false ) , method_3 ( false , true , false ) , method_3 ( false , false , false ) ) . method_4 ( new type_4 ( true ) ) . method_5 ( ) ; var_1 . method_6 ( 1 ) ; }
[0]: protected type_1 method_1 ( type_2 var_1, int var_2, int var_3 ) { float var_4 = int_1 ; java.util.list < type_3 > var_5 = var_1. method_2 ( ) ; for ( type_3 var_6 : var_5 ) { float var_7 = var_6. method_3 ( var_2, var_3 ) ; if ( var_7 >= 0.0 ) { if ( var_7 >= var_4 ) { return var_8 ; } else { return var_9 ; } } } return var_10 ; }

************

************
tgt: private < type_1 > type_1 getvalue ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , type_1 var_4 ) { type_2 var_5 = getvalue ( var_1 , var_2 , null ) ; if ( ( var_5 != null ) && ( var_5 . method_1 ( var_3 ) ) ) { return ( ( type_1 ) ( getvalue ( var_5 . get ( var_3 ) ) ) ) ; } return var_4 ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2 ) { if ( method_2 ( var_1 ) ) { var_2. method_3 ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( var_3 ) + string_1 ) + ( var_4 ) ) + string_2 ) + ( var_5 ) ) + var_1 ) + ( var_4 ) ) + string_3 ) + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_4 ) ) ; } else { var_2. method_3 ( ( var_1 + string_5 ) ) ; } }

************

************
tgt: public static double method_1 ( type_1 var_1 , type_2 var_2 ) { switch ( var_2 ) { case var_3 : return type_3 . method_2 ( var_1 ) ; case var_4 : return type_3 . method_4 ( var_1 ) ; case var_5 : return type_3 . method_3 ( var_1 ) ; case var_6 : return type_3 . method_5 ( var_1 ) ; default : throw new type_4 ( string_1 ) ; } }
[0]: protected void method_1 ( int var_1, char var_2, boolean var_3, boolean var_4, boolean var_5, boolean var_6 ) throws java.lang.exception { switch ( var_2 ) { case char_1 : type_1. method_2 ( (! ( type_1. method_3 ( ) ) ) ) ; break ; } }

************

************
tgt: public int method_1 ( java.lang.string var_1 ) { int state ; boolean var_2 ; boolean var_3 ; var_2 = var_4 . method_2 ( var_1 ) ; var_3 = var_4 . method_3 ( var_1 ) ; if ( var_2 && var_3 ) { var_4 . method_4 ( var_1 , false ) ; state = 1 ; } else { state = 0 ; } return state ; }
[0]: protected void method_1 ( type_1 var_1 ) { method_2 ( var_1 ) ; method_3 ( var_1 ) ; try { text = var_2. get ( var_3 ). method_4 ( var_3 ) ; } catch ( java.lang.nullpointerexception var_4 ) { try { text = var_5. get ( var_3 ). method_4 ( this ) ; } catch ( java.lang.nullpointerexception var_6 ) { } } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_2 . method_2 ( ) ) { method_3 ( var_2 . method_2 ( ) ) ; var_2 . method_4 ( ) ; } else { method_3 ( var_2 . method_2 ( ) ) ; var_2 . start ( ) ; } }
[0]: public void method_1 ( type_1 item ) { type_2 < type_1 >. type_3 var_1 = var_2 ; var_2 = new type_3 ( ) ; var_2. item = item ; var_3 = var_1 ; var_4 = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = var_2 ; } else { var_5 = var_2 ; } ( size ) ++ ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) { type_2 < type_1 > var_3 = var_4 . get ( var_1 ) ; if ( var_3 == null ) { var_3 = new type_2 ( var_5 , var_6 , var_7 , var_8 , var_9 , var_10 ) ; var_4 . put ( var_1 , var_3 ) ; } var_3 . add ( var_2 ) ; }
[0]: public void method_1 ( int var_1 ) { java.lang.string var_2 = string_1 ; if ( var_3 ) var_2 = string_2 ; else var_2 = string_3 ; java.lang.string var_4 = ( var_5 ) + var_2 ; while ( ( var_1 > 0 ) && (! ( var_6. isempty ( ) ) ) ) { java.lang.system.out.println ( var_4 ) ; var_1 -- ; var_6. method_2 ( ) ; } if ( var_6. isempty ( ) ) java.lang.system.out.println ( string_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) > ( var_1 . length ( ) ) ) { type_2 set = var_3 . get ( position ) ; set . method_2 ( ( ( var_1 . length ( ) ) > 0 ? java.lang.float . method_3 ( var_1 . tostring ( ) ) : 0 ) ) ; var_3 . set ( position , set ) ; } }
[0]: private void method_1 ( java.lang.string text ) { byte [ ] id = type_1. method_2 ( ). method_3 ( type_2. method_4 ( text ), var_1 ) ; type_3. method_2 ( ). method_5 ( id, java.lang.string. method_6 ( text ). method_7 ( ), id ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( ) ; var_2 = true ; type_2 var_3 = new type_2 ( ) ; var_3 . method_2 ( method_3 ( ) ) ; method_4 ( ) ; var_3 . method_5 ( var_4 ) ; var_1 . method_6 ( string_2 ) ; var_1 . method_7 ( new type_3 ( var_3 , int_1 , int_1 ) ) ; var_1 . method_8 ( int_2 ) ; var_1 . method_9 ( int_3 ) ; var_1 . show ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1, boolean var_2 ) { type_1 var_3 ; if ( ( var_4 )!= null ) { var_3 = var_4 ; var_4 = var_5 ; var_6 = var_1 ; } else { var_3 = new type_1 ( var_1, var_2 ) ; } if ( ( var_7 ) == null ) { var_7 = var_8 = var_3 ; var_9 = null ; var_10 = null ; } else { var_9 = var_8 ; var_10 = null ; var_11 = var_3 ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; if ( ( ( var_2 ) != null ) && ( var_3 ) ) { var_4 = type_2 . method_3 ( ) . method_4 ( ) ; var_2 . method_5 ( var_4 . method_6 ( ) , int_1 ) ; } method_7 ( false ) ; }
[0]: private void method_1 ( ) { if ( method_2 ( ) ) { var_1. settext ( var_2 ) ; var_3. method_3 ( null ) ; method_4 ( ) ; new type_1 ( this ). method_5 ( var_4 ) ; } else { var_1. settext ( var_5 ) ; method_6 ( null ) ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { return ( ( var_1 . method_2 ( ) ) + ( var_1 . method_3 ( ) ) ) > ( ( var_2 . method_2 ( ) ) + ( var_2 . method_3 ( ) ) ) ? - 1 : ( ( var_1 . method_2 ( ) ) + ( var_1 . method_3 ( ) ) ) == ( ( var_2 . method_2 ( ) ) + ( var_2 . method_3 ( ) ) ) ? 0 : 1 ; }
[0]: public static type_1 method_1 ( final type_2 var_1, final type_3 t, final java.util.list < type_4 > var_2, final java.util.list < type_4 > var_3, final java.util.set < type_4 > var_4, final boolean var_5 ) { return type_5. method_1 ( var_1, t, var_2, var_3, var_4, var_5, false ) ; }

************

************
tgt: public java.lang.double method_1 ( type_1 var_1 , type_1 var_2 ) throws java.lang.exception { java.lang.double var_3 = ( ( ( java.lang.double ) ( var_1 . get ( var_4 ) ) ) + ( ( java.lang.double ) ( var_2 . get ( var_4 ) ) ) ) / int_1 ; return var_3 ; }
[0]: public void method_1 ( final java.lang.stringbuilder var_1, final type_1 token, final java.lang.string var_2 ) { var_1. append ( java.lang.string.format ( ( ( ( ( token!= null ) && ( ( token. length ( ) ) > 0 ) ) + string_1 ), type_2. method_2 ( token. name ( ) ), java.lang.integer. method_3 ( token. id ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { try { type_1 var_1 = type_2 . method_2 ( ) ; type_3 t = new type_3 ( var_1 ) ; t . start ( ) ; var_2 . add ( t ) ; } catch ( java.io.ioexception var_3 ) { java.lang.system.out.println ( string_1 ) ; break ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { boolean var_2 = method_2 ( var_1 ) ; type_3 var_3 = null ; if ( var_2 ) { var_3 = var_4. remove ( ( ( var_1. method_3 ( ). method_4 ( ) ) - 1 ) ) ; method_5 ( ) ; type_4. method_6 ( var_5, var_4 ) ; } return new type_1 ( var_1, new type_2 ( var_3, var_6 ), method_7 ( ), var_2 ) ; }

************

************
tgt: private int method_1 ( type_1 var_1 , int var_2 ) { java.util.list < type_1 > var_3 = var_1 . method_2 ( ) ; int var_4 = 0 ; for ( type_1 var_5 : var_3 ) { var_6 . add ( ( var_2 + ( var_4 ++ ) ) , var_5 ) ; if ( var_5 . method_3 ( ) ) { var_4 += method_1 ( var_5 , ( var_2 + var_4 ) ) ; } } if ( ! ( var_1 . method_3 ( ) ) ) var_1 . method_4 ( ) ; return var_4 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 ; type_1 var_3 = null ; try { var_2 = type_3. method_2 ( getclass ( ). method_3 ( ( ( type_4. method_4 ( ) ) + var_1 ) ) ) ; var_3 = new type_1 ( var_2. method_5 ( var_4, var_4, var_5 ) ) ; } catch ( java.io.ioexception var_6 ) { var_6. method_6 ( ) ; } return var_3 ; }

************

************
tgt: protected int method_1 ( int line , int var_1 ) { int count = 0 ; for ( int [ ] var_2 : var_3 ) { count += ( method_2 ( ( line + ( var_2 [ 0 ] ) ) , ( var_1 + ( var_2 [ 1 ] ) ) ) ) ? 1 : 0 ; } return count ; }
[0]: public void method_1 ( android.view.view view ) { if ( ( ( type_1. method_2 ( this, var_1 ) )!= ( var_2 ) ) && ( ( type_1. method_2 ( this, var_3 ) )!= ( var_2 ) ) ) { return ; } var_4. method_3 ( string_1, int_1, 0, var_5 ) ; }

************

************
tgt: public final void method_1 ( ) { if ( var_8 ) return ; java.lang.system.out.println ( ( string_1 + ( getid ( ) ) ) ) ; java.util.arraylist < type_1 > var_1 = method_2 ( ) ; for ( type_1 var_2 : var_1 ) { method_3 ( var_2 , var_3 ) ; } java.util.arraylist < type_2 > var_4 = method_4 ( ) ; for ( type_2 var_5 : var_4 ) { method_5 ( var_5 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; var_2. method_3 ( new type_2 ( var_3 ), null, var_1 ) ; type_3 var_4 = new type_3 ( ) ; var_4. method_4 ( string_1 ) ; var_4. method_5 ( type_4. method_6 ( ) ) ; var_1. method_7 ( ). add ( var_4 ) ; var_2. method_3 ( new type_2 ( var_3 ), null, var_1 ) ; method_8 ( var_1 ) ; }

************

************
tgt: public void method_1 ( java.lang.string value ) throws type_1 { try { java.lang.string var_1 = type_2 . method_2 ( this . node . method_4 ( ) ) . method_5 ( value ) . method_4 ( ) ; this . method_6 ( var_1 ) ; } catch ( type_3 var_2 ) { throw type_4 . method_7 ( var_2 ) ; } }
[0]: public void method_1 ( java.lang.object var_1 ) { super. method_1 ( var_1 ) ; type_1 listener = new type_1 ( ) { public boolean method_2 ( android.view.view var_2, type_2 var_3 ) { if ( ( var_3. method_3 ( ) ) == 1 ) { var_4. method_4 ( false ) ; var_4. method_5 ( ) ; } return true ; } } ; this. var_5. method_6 ( listener ) ; this. var_5. method_7 ( var_6 ). method_6 ( listener ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string name , java.lang.string var_1 ) throws java.lang.exception { java.lang.string var_2 = string_1 ; if ( ( name . length ( ) ) > int_1 ) { return var_2 ; } type_1 var_3 = type_1 . method_2 ( var_1 ) ; if ( var_3 == null ) { return var_2 ; } var_2 = new type_2 ( ) . method_1 ( var_3 . method_3 ( ) , name ) ; return var_2 ; }
[0]: private void method_1 ( ) throws java.io.ioexception { try ( java.io.bufferedwriter var_1 = new java.io.bufferedwriter ( new java.io.filewriter ( var_2 ) ) ) { var_3. append ( string_1 ) ; var_1. method_2 ( var_3. tostring ( ) ) ; } var_3 = new java.lang.stringbuffer ( ) ; var_4 = 0 ; var_5 = false ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 ) { long var_2 = ( var_3 . method_2 ( ( ( ( var_4 ) - ( var_5 ) ) + 1 ) ) ) + ( var_5 ) ; for ( int j = 0 ; j < var_2 ; j ++ ) { java.lang.string var_6 = ( ( string_1 + j ) + string_2 ) + var_1 ; var_7 . put ( var_6 , var_1 ) ; } type_1 . method_3 ( var_1 ) ; }
[0]: public void method_1 ( ) { if ( var_1 ) { android.content.intent intent = new android.content.intent ( this, var_2 class ) ; intent. method_2 ( type_1. method_3 ( var_3 ) ) ; method_4 ( intent ) ; } else { type_2. method_5 ( this, string_1, var_4 ). show ( ) ; } }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 , final java.lang.integer var_2 ) { return new type_3 ( 0 , 0 , var_2 ) { protected void method_2 ( type_4 var_3 , type_5 var_4 ) throws java.lang.exception { if ( type_6 . method_3 ( ) ) { type_6 . info ( string_1 , var_4 . state ( ) . name ( ) , var_3 . method_4 ( ) ) ; } var_3 . method_4 ( ) . method_5 ( ) ; } } ; }
[0]: public void step ( type_1 var_1, int step, type_2 < java.lang.double > var_2 ) { if ( step == 0 ) super. step ( var_1, step, var_2 ) ; type_3 var_3 = method_1 ( ). method_2 ( ( step - 1 ) ) ; double var_4 = var_5 ; method_3 ( step, var_4 ) ; if ( method_1 ( ). var_6 ) { double var_7 = var_8 ; method_4 ( step, var_7 ) ; } else { method_4 ( step, 0 ) ; } }

************

************
tgt: public void method_1 ( type_1 result ) { var_2 = type_2 . method_3 ( var_3 , var_4 , var_5 , result , var_6 ) ; var_1 . method_2 ( ) ; try { var_7 = var_8 ; var_9 . method_4 ( ) ; if ( ( var_2 ) != null ) { method_5 ( ) ; method_6 ( ) ; } } finally { var_1 . method_8 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; int var_3 = int_1 ; int var_4 = int_2 ; int var_5 = int_3 * int_4 ; int var_6 = var_3 ; var_6 = var_6 + ( var_4 * int_5 ) ; int var_7 = var_5 - var_6 ; method_3 ( var_7 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( null , null ) ; type_2 var_2 = new type_2 ( ) ; var_1 . method_2 ( type_4 . method_3 ( string_1 ) , var_2 ) ; type_5 . assertthat ( var_2 . method_4 ( ) , type_6 . method_5 ( string_2 ) ) ; type_5 . assertthat ( var_2 . method_6 ( ) , type_6 . method_5 ( string_3 ) ) ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = null ; try { java.lang.class. method_2 ( string_1 ) ; var_1 = type_2. method_3 ( var_2. url ) ; } catch ( type_3 var_3 ) { java.lang.system.out.println ( var_3. method_4 ( ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { var_3. method_5 ( ) ; } finally { return var_1 ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( ( var_2 ) != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { var_3 . method_2 ( var_4 , var_2 ) . method_3 ( ) ; android.content.intent intent = new android.content.intent ( this , var_5 class ) ; method_5 ( intent ) ; method_6 ( ) ; } }
[0]: public void setenabled ( java.lang.boolean var_1 ) { var_2 = 0 ; var_3 = ( var_2 ) + int_1 ; if ( (! ( this. var_1 ) ) && var_1 ) { this. var_1 = var_1 ; method_1 ( ) ; } else if ( ( this. var_1 ) && (! var_1 ) ) { this. var_1 = var_1 ; method_2 ( ) ; } else if ( this. var_1 ) { this. var_1 = var_1 ; method_2 ( ) ; method_1 ( ) ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 . method_2 ( ) ) == null ) { return ( var_2 . method_2 ( ) ) == null ? 0 : - 1 ; } if ( ( var_2 . method_2 ( ) ) == null ) { return 1 ; } return var_2 . method_2 ( ) . compareto ( var_1 . method_2 ( ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { function. method_2 ( var_1 ) ; function. method_3 ( new type_1 ( null ) ) ; assertequals ( var_2. method_4 ( ), function. method_4 ( ) ) ; assertequals ( var_2. method_5 ( ), function. method_5 ( ) ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { java.util.arraylist < type_1 > var_2 = type_2 . method_2 ( var_1 ) ; for ( type_1 var_3 : var_2 ) { if ( ( type_2 . method_3 ( var_3 , var_4 , false ) ) && ( var_5 . method_4 ( this . var_5 ) ) ) { return true ; } } return false ; }
[0]: public void method_1 ( java.awt.color var_1 ) { if ( ( var_2 ) == null ) { super. method_1 ( var_1 ) ; } if ( ( var_3 )!= null ) for ( type_1 c : method_2 ( ) ) { c. method_1 ( var_1 ) ; } }

************

************
tgt: public static java.lang.charsequence method_1 ( java.lang.charsequence var_1 , java.lang.charsequence text ) { final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; if ( ( var_1 != null ) && ( ( var_1 . length ( ) ) > 0 ) ) { var_2 . append ( var_1 ) . append ( string_1 ) ; } return var_2 . append ( text ) ; }
[0]: protected void method_1 ( ) { var_1. method_2 ( new type_1 ( getactivity ( ) ) ) ; var_1. method_3 ( var_2 ) ; var_3. method_4 ( type_2. getcolor ( getactivity ( ), var_4 ), type_2. getcolor ( getactivity ( ), var_5 ), type_2. getcolor ( getactivity ( ), var_6 ) ) ; var_3. method_5 ( new type_3 ( ) { public void method_6 ( ) { var_7. method_7 ( ) ; } } ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 data ) { if ( ! ( var_1 . startswith ( string_1 ) ) ) return false ; java.lang.string [ ] var_3 = var_2 . split ( "\n" ) ; return method_2 ( var_3 , data ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string var_3 = var_4. method_2 ( string_1 ) ; java.lang.string var_5 = var_6 ; java.lang.string var_7 = type_2. method_3 ( ) ; return new type_1 ( var_3, var_7, var_1, var_5, var_2 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) throws java.io.ioexception { type_3 p = var_1 . method_2 ( new type_4 ( new java.net.url ( url , string_1 ) , var_2 ) ) ; assertequals ( ( string_2 + ( var_2 . name ( ) ) ) , p . method_3 ( ) ) ; }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) var_2. set ( i, i, var_3. method_2 ( ) ) ; var_4. method_3 ( ) ; var_5. method_3 ( ) ; var_6. method_4 ( 0, var_7 ) ; var_8. method_4 ( 0, 0 ) ; if (! ( var_9. method_5 ( ) ) ) method_6 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.class < ? > target , type_1 var_1 , java.lang.string url , type_2 method ) { type_3 var_2 = new type_3 ( ) ; var_2 . target = target ; var_3 = var_1 ; var_4 = method ; var_2 . path = url ; if ( type_4 . method_2 ( ) ) { type_5 . method_2 ( ( string_1 + var_2 ) ) ; } var_6 . add ( var_2 ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long var_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1. method_2 ( position ) ) ) ; if ( var_3!= null ) { ( ( type_3 ) ( getactivity ( ) ) ). method_3 ( var_3. getstring ( var_3. method_4 ( var_4 ) ) ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.lang.string var_1 ; if ( ( args.length ) > 0 ) { var_1 = args [ 0 ] ; } else { var_1 = string_1 ; } type_1 var_2 = new type_1 ( var_1 ) ; type_2 . method_1 ( ) . method_2 ( new java.lang.thread ( string_2 ) { public void method_3 ( ) { type_1 . method_4 ( ) ; } } ) ; var_2 . method_5 ( true ) ; }
[0]: public void method_1 ( ) { try { type_1. method_2 ( type_1. method_3 ( ) ) ; type_2 var_1 = new type_2 ( ) ; var_1. method_4 ( new type_3 ( int_1, int_2 ) ) ; type_4 var_2 = new type_4 ( var_3 ) ; var_2. add ( var_1 ) ; var_2. method_5 ( null ) ; var_2. method_6 ( ) ; var_2. method_7 ( true ) ; var_2. method_8 ( false ) ; } catch ( java.lang.exception var_4 ) { var_4. method_9 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_3 . size ( ) ) > 0 ) { var_2 = ( ( ( var_2 ) + ( var_3 . size ( ) ) ) - 1 ) % ( var_3 . size ( ) ) ; java.lang.string filepath = ( ( java.lang.string ) ( var_3 . get ( var_2 ) ) ) ; var_4 . method_2 ( type_1 . method_3 ( filepath ) ) ; var_4 . start ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_1 ( var_1, 1, 1 ) ; var_3. method_1 ( var_2 ) ; token = new type_2 ( ) ; var_4 = - 1 ; var_5 = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_6 [ i ] = - 1 ; } for ( int i = 0 ; i < ( var_7. length ) ; i ++ ) { var_7 [ i ] = new type_3 ( ) ; } } }

************

************
tgt: private void method_1 ( java.util.map < type_1 , java.util.list < java.lang.integer > > var_1 ) { if ( var_1 == null ) return ; for ( java.util.map.entry < type_1 , java.util.list < java.lang.integer > > var_2 : var_1 . method_2 ( ) ) { for ( java.lang.integer value : var_2 . getvalue ( ) ) { var_2 . method_3 ( ) . method_4 ( value ) ; } } }
[0]: public void method_1 ( java.util.list < type_1 > var_1, type_2 var_2 ) { if ( var_2 == null ) { type_1. method_2 ( string_1, var_1 ) ; } else { type_1. method_3 ( ). method_4 ( ). method_5 ( var_3 ) ; } var_3. method_1 ( var_1, var_2 ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { var_2 = - 1 ; var_4 = var_3 . method_2 ( ) ; var_5 = var_3 . method_3 ( ) ; var_1 . status = type_2 . getvalue ( ) ; var_6 = var_7 ; var_8 = var_9 ; var_10 = var_11 ; return var_1 ; }
[0]: public type_1 method_1 ( type_2 var_1, java.util.list < type_3 > var_2 ) { this. var_3 = var_2 ; this. var_1 = var_1 ; var_4 = new type_4 ( var_1, var_3 ) ; var_5. method_2 ( var_4 ) ; var_5. method_3 ( true ) ; if ( ( var_6 )!= null ) method_4 ( var_6 ) ; return this ; }

************

************
tgt: public void method_1 ( int index ) { if ( index <= 0 ) { method_2 ( ) ; } else if ( index >= ( ( size ) - 1 ) ) { method_3 ( ) ; } else { type_1 var_1 = var_2 ; for ( int i = 1 ; i < index ; ++ i ) { var_1 = var_3 ; } var_3 = var_4 ; var_1 = var_3 ; var_1 = null ; -- ( size ) ; } }
[0]: public java.lang.string tostring ( ) { java.lang.string msg = ( ( ( ( ( ( ( string_1 + ( this. var_1 ) ) + string_2 ) + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_2 ) + ( var_4 ) ; java.lang.string length = java.lang.string.format ( string_3, ( ( msg. length ( ) ) + int_1 ) ) ; return ( length + string_2 ) + msg ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( ) ; if ( ( var_3 ) > 0 ) { type_2 . method_3 ( var_4 , var_2 , var_5 , var_3 ) ; } else if ( ! ( var_5 . isempty ( ) ) ) { type_3 . method_4 ( this , string_1 , var_6 ) . show ( ) ; } }
[0]: public void method_1 ( type_1 event ) { if (! ( event. method_2 ( ). tostring ( ). contains ( string_1 ) ) ) { var_1. put ( event. method_3 ( ), false ) ; var_2. remove ( event. method_3 ( ) ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; if ( type == ( var_2 ) ) { var_1 = string_2 ; new type_1 ( ) . execute ( var_3 ) ; } else if ( type == ( var_4 ) ) { var_1 = string_3 ; } else if ( type == ( var_5 ) ) { var_1 = string_4 ; } else { var_1 = string_5 ; } }
[0]: public void method_1 ( int position, int var_1 ) { android.view.view var_2 = method_2 ( var_3. content ) ; type_1 var_4 = method_3 ( position ) ; if ( var_4 == var_5 ) { type_2. method_4 ( var_2, var_6, var_7 ). show ( ) ; } else if ( var_4 == var_8 ) { type_2. method_4 ( var_2, var_9, var_7 ). show ( ) ; } }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , int var_2 , int var_3 ) { type_1 result = var_10 ; float var_4 = int_1 ; java.util.list < type_3 > var_5 = var_1 . method_2 ( ) ; for ( type_3 var_6 : var_5 ) { float var_7 = var_6 . method_3 ( var_2 , var_3 ) ; if ( var_7 >= 0.0 ) { if ( var_7 >= var_4 ) { result = var_8 ; break ; } else { result = var_9 ; } } } return result ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string var_3 = string_1 ; type_1 var_4 = var_5. method_2 ( var_1, var_6 ) ; if ( var_2. contains ( string_2 ) ) { if ( var_2. contains ( string_3 ) ) { type_2 var_7 = new type_2 ( var_4 ) ; var_7. method_3 ( true ) ; var_3 = var_8. method_4 ( var_7 ). tostring ( ) ; } if ( var_3!= null ) return string_4 + var_3 ; } return var_1 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) { if ( method_2 ( var_1 ) ) { var_2 . method_3 ( ( ( ( ( ( ( ( ( ( ( ( ( var_4 ) + string_1 ) + ( var_3 ) ) + string_2 ) + ( var_5 ) ) + var_1 ) + ( var_4 ) ) + string_3 ) + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_4 ) ) ; } else { var_2 . method_3 ( ( var_1 + string_5 ) ) ; } }
[0]: public java.util.map < type_1, type_2 > method_1 ( final java.util.set < type_1 > var_1 ) { if ( var_1. isempty ( ) ) { return type_3. method_2 ( ) ; } else { final java.util.map < type_1, type_2 > result = new java.util.hashmap < > ( ) ; for ( final type_1 var_2 : var_1 ) { final type_2 var_3 = method_3 ( var_2 ) ; result. put ( var_2, var_3 ) ; } return result ; } } }

************

************
tgt: protected void method_1 ( int var_1 , char var_2 , boolean var_3 , boolean var_4 , boolean var_5 , boolean var_6 ) throws java.lang.exception { switch ( var_2 ) { case char_1 : type_1 . method_2 ( ( ! ( type_1 . method_3 ( ) ) ) ) ; break ; default : break ; } }
[0]: private void method_1 ( type_1 var_1, int index, java.util.map < java.lang.string, java.util.map < java.lang.string, java.util.map < java.lang.string, java.lang.string > > var_2 ) { java.util.map < java.lang.string, java.util.map < java.lang.string, java.util.map < java.lang.string, java.lang.string > > var_3 = var_2. get ( ( ( var_4 ) + index ) ) ; var_1. method_2 ( var_3 ) ; for ( java.util.map.entry < java.lang.string, java.lang.string > var_5 : var_3. method_3 ( ) ) { var_1. method_4 ( var_5. method_5 ( ), var_5. getvalue ( ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { method_2 ( var_1 ) ; try { text = var_2 . get ( var_3 ) . method_4 ( var_3 ) ; } catch ( java.lang.nullpointerexception var_4 ) { try { text = var_5 . get ( var_3 ) . method_4 ( this ) ; } catch ( java.lang.nullpointerexception var_6 ) { } } }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_2 n : var_1 ) { if ( ( n. type ( ) ) == ( var_2 ) ) { switch ( n. getname ( ) ) { case string_1 : method_2 ( ( ( type_3 ) ( n ) ) ) ; break ; } } } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( ) ; } type_2 < type_1 > . type_3 var_1 = var_2 ; var_2 = new type_3 ( ) ; var_2 . item = item ; var_3 = var_1 ; var_4 = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = var_2 ; } else { var_5 = var_2 ; } }
[0]: private static type_1 method_1 ( java.lang.string filename ) { java.io.file file = new java.io.file ( ( ( ( type_2. method_2 ( ) ) + string_1 ) + filename ) ) ; if ( file. method_3 ( ) ) { try { return new type_3 ( ). method_4 ( new java.io.filereader ( file ) ) ; } catch ( java.lang.exception var_1 ) { type_2. method_5 ( ). error ( ( string_2 + filename ) ) ; var_1. method_6 ( ) ; } } return null ; }

************

************
tgt: public void method_1 ( int var_1 ) { java.lang.string var_2 = string_1 ; if ( var_3 ) var_2 = string_2 ; else var_2 = string_3 ; java.lang.string var_4 = ( var_5 ) + var_2 ; while ( ( var_1 > 0 ) && ( ! ( var_6 . isempty ( ) ) ) ) { java.lang.system.out.println ( var_4 ) ; var_1 -- ; } if ( var_6 . isempty ( ) ) java.lang.system.out.println ( string_4 ) ; }
[0]: public void update ( type_1 var_1 ) { java.util.map < java.lang.string, type_2 > params = new java.util.hashmap < > ( ) ; params. put ( ""name"", var_1. getname ( ) ) ; params. put ( string_1, var_1. method_1 ( ) ) ; params. put ( string_2, var_1. method_2 ( ). method_3 ( ) ) ; var_2. update ( var_3, params ) ; }

************

************
tgt: private void method_1 ( java.lang.string text ) { java.lang.string id = type_1 . method_2 ( ) . method_3 ( type_2 . method_4 ( text ) , var_1 ) ; type_3 . method_2 ( ) . method_5 ( id , java.lang.string . method_6 ( text ) . method_7 ( ) ) ; java.lang.system.out.println ( java.lang.string . method_6 ( text ) ) ; }
[0]: private void method_1 ( ) { java.lang.string url = var_1 [ 1 ] ; java.lang.string filepath = ( type_1. method_2 ( ) ) + string_1 ; type_2 var_2 = new type_2 ( url, filepath ) ; var_3 = var_4. method_3 ( var_2 ) ; if ( ( var_3 ) == ( - 1 ) ) { type_3. method_4 ( this, var_5, var_6 ). show ( ) ; } var_7. method_5 ( var_3 ) ; var_8. method_5 ( var_3 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , boolean var_2 ) { type_1 var_3 ; if ( ( var_4 ) != null ) { var_3 = var_4 ; var_4 = var_5 ; var_6 = var_1 ; } else { var_3 = new type_1 ( var_1 , var_2 ) ; } if ( ( var_7 ) == null ) { var_7 = var_8 = var_3 ; var_9 = null ; var_10 = null ; } else { var_9 = var_8 ; var_10 = null ; var_11 = var_3 ; var_8 = var_3 ; } return var_3 ; }
[0]: private type_1 method_1 ( type_1 var_1, type_2 var_2 ) throws java.lang.exception { java.util.arraylist < type_2 > var_3 = method_2 ( var_2 ) ; for ( type_2 var_4 : var_3 ) { java.util.arraylist < type_3 > var_5 = method_3 ( var_4 ) ; for ( type_3 var_6 : var_5 ) { type_2 var_7 = method_4 ( ). method_5 ( var_6 ) ; var_1 = method_6 ( var_1, var_7 ) ; } return method_1 ( var_1, var_4 ) ; } return null ; }

************

************
tgt: private void method_1 ( ) { if ( method_2 ( ) ) { var_1 . settext ( var_2 ) ; var_3 . method_3 ( null ) ; method_4 ( ) ; new type_1 ( this ) . method_5 ( var_4 , this ) ; } else { var_1 . settext ( var_5 ) ; method_6 ( null ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) throws java.io.ioexception { java.io.bufferedreader var_2 = var_1. method_2 ( ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = var_2. method_3 ( ) ; while ( line!= null ) { var_3. append ( line ) ; var_3. append ( var_2. method_3 ( ) ) ; } var_2. method_4 ( ) ; return var_3. tostring ( ) ; }

************

************
tgt: public static type_1 method_1 ( final type_2 var_1 , final type_3 t , final java.util.list < type_4 > var_2 , final java.util.list < type_4 > var_3 , final java.util.set < type_4 > var_4 ) { return type_5 . method_1 ( var_1 , t , var_2 , var_3 , var_4 , false ) ; }
[0]: public void method_1 ( type_1 var_1 ) { byte [ ] var_2 = var_3. method_2 ( ) ; try { var_1. method_3 ( var_4 ) ; var_1. method_4 ( var_2. length ) ; var_1. method_5 ( var_5 ) ; var_1. method_5 ( var_6 ) ; var_1. method_4 ( var_7 ) ; } catch ( java.io.ioexception var_8 ) { var_8. method_6 ( ) ; } }

************

************
tgt: private void method_1 ( final java.lang.stringbuilder var_1 , final type_1 token , final java.lang.string var_2 ) { var_1 . append ( java.lang.string.format ( ( ( "\n" + var_2 ) + string_1 ) , type_2 . method_2 ( token . name ( ) ) , token . id ( ) ) ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1 { java.io.bufferedreader var_2 = this. method_2 ( var_1 ) ; java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_1 ; try { while ( ( var_4 = var_2. method_3 ( ) )!= null ) { var_3 += var_4 + var_4 ; } } catch ( java.io.ioexception var_5 ) { throw new type_1 ( var_6. getstring ( var_7, var_1 ), var_5 ) ; } return var_3 ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { boolean var_2 = method_2 ( var_1 ) ; type_3 var_3 = null ; if ( var_2 ) { var_3 = var_4 . remove ( ( ( var_1 . method_3 ( ) . method_4 ( ) ) - 1 ) ) ; method_5 ( ) ; type_4 . method_6 ( var_5 , var_4 ) ; } return new type_1 ( var_1 , new type_2 ( var_3 , var_6 , null ) , method_7 ( ) , var_2 ) ; }
[0]: private type_1 method_1 ( java.lang.string classname, java.lang.string src ) { type_1 var_1 = new type_1 ( classname, src, this ) ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( var_3 ) ; var_1. method_4 ( var_4 ) ; var_5. put ( classname, var_1 ) ; return var_1 ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 ; type_1 var_3 = null ; try { var_2 = type_3 . method_2 ( getclass ( ) . method_3 ( ( ( type_4 . method_4 ( ) ) + var_1 ) ) ) ; var_3 = new type_1 ( var_2 . method_5 ( var_4 , var_4 , var_5 ) ) ; } catch ( java.io.ioexception var_6 ) { var_6 . method_6 ( ) ; } return var_3 ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 context ) { final long start = type_3. method_2 ( ) ; final java.util.list < type_1 > list = type_4. method_3 ( context ) ; java.lang.system.out.println ( ( ( string_1 + ( ( type_3. method_2 ( ) ) - start ) ) + string_2 ) ) ; return list ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( ( type_1 . method_2 ( view . getcontext ( ) , var_1 ) ) != ( var_2 ) ) && ( ( type_1 . method_2 ( view . getcontext ( ) , var_3 ) ) != ( var_2 ) ) ) { return ; } var_4 . method_3 ( string_1 , int_1 , 0 , var_5 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_1. getid ( ) ) == ( var_2 ) ) { method_2 ( var_3 ) ; method_3 ( ) ; } else if ( ( ( var_1. getid ( ) ) == ( var_4 ) ) && ( ( var_5. method_4 ( ) ) == 0 ) ) { new type_1 ( ). execute ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; var_2 . method_3 ( new type_2 ( var_3 ) , update , var_1 ) ; type_3 var_4 = new type_3 ( ) ; var_4 . method_4 ( string_1 ) ; var_4 . method_5 ( type_4 . method_6 ( ) ) ; var_1 . method_7 ( ) . add ( var_4 ) ; var_2 . method_3 ( new type_2 ( var_3 ) , update , var_1 ) ; method_8 ( var_1 ) ; }
[0]: public void method_1 ( ) { type_1. assertequals ( string_1, var_1. method_2 ( ) ) ; var_1. method_3 ( string_2 ) ; type_1. assertequals ( string_3, var_1. method_2 ( ) ) ; type_1. assertequals ( string_4, var_1. method_4 ( ) ) ; type_1. assertequals ( string_5, var_1. method_5 ( string_6 ) ) ; type_1. assertequals ( string_7, var_1. method_4 ( ) ) ; type_1. assertequals ( string_8, var_1. method_2 ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 ) { super . method_1 ( var_1 ) ; type_1 listener = new type_1 ( ) { public boolean method_2 ( android.view.view var_2 , type_2 var_3 ) { if ( ( var_3 . method_3 ( ) ) == 1 ) { var_4 . method_4 ( false ) ; var_4 . method_5 ( ) ; } return true ; } } ; this . var_5 . method_7 ( var_6 ) . method_6 ( listener ) ; }
[0]: public java.lang.string gettime ( ) { java.lang.string var_1 = string_1 ; if ( ( var_2 ) < int_1 ) var_1 += string_2 ; var_1 += ( java.lang.string. method_1 ( var_2 ) ) + string_3 ; if ( ( var_3 ) < int_1 ) var_1 += string_2 ; var_1 += java.lang.string. method_1 ( var_3 ) ; return var_1 ; }

************

************
tgt: private void method_1 ( ) throws java.io.ioexception { try ( java.io.bufferedwriter var_1 = new java.io.bufferedwriter ( new java.io.filewriter ( var_2 , true ) ) ) { var_3 . append ( string_1 ) ; var_1 . method_2 ( var_3 . tostring ( ) ) ; } var_3 = new java.lang.stringbuffer ( ) ; var_4 = 0 ; var_5 = false ; }
[0]: public type_1 method_1 ( ) { if ( ( ( ( data. size ( ) ) - 1 ) < ( i ) ) || ( ( data. get ( i ) ) == null ) ) data. add ( method_2 ( ) ) ; return data. get ( ( ( i ) ++ ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( var_1 ) { android.content.intent intent = new android.content.intent ( this , var_2 class ) ; intent . method_2 ( type_1 . method_3 ( var_3 ) ) ; method_4 ( intent ) ; } else { type_2 . method_5 ( this , string_1 , var_4 ) . show ( ) ; } }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if (! ( var_2. method_2 ( ) ) ) { type_2. method_3 ( var_3, string_1 ) ; return null ; } if ( type_3. isempty ( var_1 ) ) { return null ; } type_4 var_4 = var_5. remove ( var_1 ) ; if ( ( ( var_4!= null ) && ( ( var_4. data )!= null ) ) && ( var_4. method_4 ( ) ) ) { return var_4. data ; } else { return null ; } } else { return null ; } }

************

************
tgt: public void step ( type_1 var_1 , int step , type_2 < java.lang.double > var_2 ) { if ( step == 0 ) { super . step ( var_1 , step , var_2 ) ; } else { type_3 var_3 = method_1 ( ) . method_2 ( ( step - 1 ) ) ; double var_4 = var_5 ; method_3 ( step , var_4 ) ; if ( method_1 ( ) . var_6 ) { double var_7 = var_8 ; method_4 ( step , var_7 ) ; } else { method_4 ( step , 0 ) ; } } }
[0]: public static type_1 method_1 ( type_1 var_1, type_2 var_2, type_3 data, boolean var_3, type_4 var_4 ) { type_5 var_5 = new type_6 ( var_4 ) ; type_5 var_6 = new type_6 ( var_4, var_3 ) ; return type_7. method_2 ( var_1, var_2, data, var_5, var_6, var_4 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; int var_3 = int_1 ; int var_4 = int_2 ; int var_5 = int_3 * int_4 ; int var_6 = var_3 * int_1 ; var_6 = var_6 + ( var_4 * int_5 ) ; int var_7 = var_5 - var_6 ; method_3 ( var_7 ) ; }
[0]: private void method_1 ( ) { var_1 = type_1. method_2 ( ) ; var_2 = type_2. method_2 ( var_3, false, this ) ; type_3 var_4 = method_3 ( ) ; type_4 var_5 = var_4. method_4 ( ) ; var_5. replace ( var_6, var_1 ) ; var_5. add ( var_7, var_2 ) ; var_5. commit ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = null ; try { java.lang.class . method_2 ( string_1 ) ; var_1 = type_2 . method_3 ( var_2 . url ) ; } catch ( type_3 var_3 ) { java.lang.system.out.println ( var_3 . method_4 ( ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { var_3 . method_5 ( ) ; } return var_1 ; }
[0]: protected java.lang.boolean method_1 ( java.lang.void... params ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2 var_3 = var_1. method_2 ( var_4, var_5 ) ; if (! ( var_6 ) ) { var_7 = var_8 ; return false ; } type_3 var_9 = new type_3 ( var_2, method_3 ( ) ) ; type_4 var_10 = var_9. method_4 ( var_11 ) ; if (! ( var_12 ) ) { var_7 = var_13 ; } var_14 = var_15 ; return true ; }

************

************
tgt: public void setenabled ( java.lang.boolean var_1 ) { var_2 = 0 ; var_3 = ( var_2 ) + int_1 ; if ( ( ! ( this . var_1 ) ) && var_1 ) { this . var_1 = var_1 ; method_1 ( ) ; } else if ( ( this . var_1 ) && ( ! var_1 ) ) { this . var_1 = var_1 ; method_2 ( ) ; } }
[0]: private static void put ( java.lang.string url, java.lang.string var_1, type_1 var_2 ) { type_2. method_1 ( ) ; type_2. method_2 ( ) ; type_2. method_3 ( ) ; type_3 var_3 = type_3. method_4 ( type_4. method_5 ( string_1 ), var_1 ) ; var_4. put ( url, var_3, new type_5 ( var_2 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { function . method_2 ( var_1 ) ; function . method_3 ( new type_1 ( ) ) ; assertequals ( var_2 . method_4 ( ) , function . method_4 ( ) ) ; assertequals ( var_2 . method_5 ( ) , function . method_5 ( ) ) ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2 ) { if ( ( var_3 ) <= 0 ) { type_2 var_4 = var_1. position ; var_2. remove ( var_1 ) ; var_5 [ var_4. x ] [ var_4. y ]. var_2. remove ( var_1 ) ; } } }

************

************
tgt: public void method_1 ( java.awt.color var_1 ) { if ( ( var_2 ) == null ) { super . method_1 ( var_1 ) ; if ( ( var_3 ) != null ) for ( type_1 c : method_2 ( ) ) { c . method_1 ( var_1 ) ; } } }
[0]: private type_1 method_1 ( java.lang.string string ) { type_1 var_1 ; type_1 var_2 ; type_1 var_3 ; type_1 var_4 ; type_1 text ; var_1 = new type_1 ( var_5 ) ; var_3 = var_1. method_2 ( new type_1 ( var_6 ) ) ; var_2 = var_1. method_2 ( new type_1 ( var_7 ) ) ; var_3. method_3 ( string_1 ) ; text = var_2. method_2 ( new type_1 ( var_8 ) ) ; text. method_3 ( ( ( string_2 + string ) + string_3 ) ) ; return var_1 ; }

************

************
tgt: protected void method_1 ( ) { var_1 . method_2 ( new type_1 ( getactivity ( ) ) ) ; var_1 . method_3 ( var_2 ) ; var_3 . method_4 ( type_2 . getcolor ( getactivity ( ) , var_4 ) , type_2 . getcolor ( getactivity ( ) , var_5 ) , type_2 . getcolor ( getactivity ( ) , var_6 ) ) ; var_3 . method_5 ( new type_3 ( ) { public void method_6 ( ) { var_7 . method_7 ( ) ; } } ) ; var_7 . method_7 ( ) ; }
[0]: public java.lang.string getvalue ( type_1 var_1 ) { java.lang.stringbuilder var_2 = var_3. get ( ) ; type_2 < java.lang.string > var_4 = new type_3 < > ( ) ; for ( type_4 var_5 : this ) { type_5 var_6 = var_1. method_1 ( var_5 ) ; var_4. add ( var_6. getname ( ) ) ; } for ( java.lang.string name : var_4 ) { var_2. append ( name ). append ( string_1 ) ; } return var_2. tostring ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string var_3 = null ; if ( ( var_4 ) != null ) { var_3 = var_4 . method_2 ( string_1 ) ; } java.lang.string var_5 = var_6 ; java.lang.string var_7 = type_2 . method_3 ( ) ; return new type_1 ( var_3 , var_7 , var_1 , var_5 , var_2 ) ; }
[0]: protected void method_1 ( ) { if ( var_1 ) { var_1 = false ; } else { if ( ( var_2 )!= null ) var_2. method_2 ( ). start ( ) ; var_2. method_3 ( ) ; type_1. method_4 ( var_3, string_1 ) ; if ( ( var_4 )!= null ) { var_4. method_5 ( ) ; var_4. method_6 ( ) ; } } super. method_1 ( ) ; type_2. method_7 ( ). method_8 ( this ) ; } }

************

************
tgt: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) var_2 . set ( i , i , var_3 . method_2 ( ) ) ; var_4 . method_3 ( ) ; var_5 . method_3 ( ) ; var_6 . method_4 ( 0 , var_7 ) ; var_8 . method_4 ( 0 , 1 ) ; if ( ! ( var_9 . method_5 ( ) ) ) method_6 ( ) ; }
[0]: protected void method_1 ( int var_1, int var_2 ) { java.util.random var_3 = new java.util.random ( ) ; int var_4 = ( var_1 + ( var_3. method_2 ( ( var_2 - var_1 ) ) ) ) * int_1 ; var_5. method_3 ( var_4 ) ; type_1. method_4 ( var_6, ( ( string_1 + var_4 ) + string_2 ) ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { type_2 var_3 = ( ( type_2 ) ( var_1 . method_2 ( position ) ) ) ; if ( var_3 != null ) { ( ( type_3 ) ( getactivity ( ) ) ) . method_3 ( var_3 . getstring ( var_3 . method_4 ( var_4 ) ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { for ( java.lang.integer var_2 : var_3 ) { var_4 [ java.lang.math.abs ( ( ( type_1. method_2 ( var_1. method_3 ( ), 0, 0, var_2 ) ) % ( var_4. length ) ) ) ] = true ; } }

************

************
tgt: public void method_1 ( ) { try { type_1 . method_2 ( type_1 . method_3 ( ) ) ; type_2 var_1 = new type_2 ( ) ; var_1 . method_4 ( new type_3 ( int_1 , int_2 ) ) ; type_4 var_2 = new type_4 ( var_3 ) ; var_2 . add ( var_1 ) ; var_2 . method_6 ( ) ; var_2 . method_5 ( null ) ; var_2 . method_7 ( true ) ; var_2 . method_8 ( false ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_9 ( ) ; } }
[0]: private void method_1 ( ) { this. var_1 = new java.util.arraylist ( var_2 ) ; type_1 var_3 = ( ( type_1 ) ( this. var_4 ) ) ; type_2 var_5 = type_2. method_2 ( var_3. method_3 ( ), var_3. method_4 ( ) ) ; type_3 var_6 = new type_3 ( var_3. method_5 ( ), var_5 ) ; this. var_7 |= var_6. method_6 ( ) ; var_1. add ( var_6 ) ; this. var_7 = var_6 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_1 ( var_1 , 1 , 1 ) ; var_3 . method_1 ( var_2 ) ; token = new type_2 ( ) ; var_4 = - 1 ; var_5 = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) var_6 [ i ] = - 1 ; for ( int i = 0 ; i < ( var_7 . length ) ; i ++ ) var_7 [ i ] = new type_3 ( ) ; }
[0]: public java.lang.object method_1 ( type_1 var_1, int index ) { method_2 ( ) ; if ( index >= ( var_1. method_3 ( ). length ) ) { return getcontext ( ). method_4 ( ). method_5 ( ) ; } else { return var_1. method_3 ( ) [ index ] ; } }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 , type_2 var_2 ) { if ( var_2 == null ) { type_1 . method_2 ( string_1 , var_1 ) ; var_3 . method_1 ( var_1 , var_2 ) ; } else { type_1 . method_3 ( ) . method_4 ( ) . method_5 ( var_3 ) ; } }
[0]: private void method_1 ( java.util.arraylist < type_1 > var_1 ) throws java.io.ioexception { while ( ( var_2 )!= ( var_3 ) ) { var_2 = ( ( var_2 ) + 1 ) % ( var_4 ) ; var_5 = var_5 += 1 ; type_1 p = var_1. get ( var_5 ) ; var_6. method_2 ( p. method_3 ( var_7, var_8 ) ) ; var_9. method_4 ( p, var_10 ) ; } }

************

************
tgt: public type_1 method_1 ( java.util.list < type_3 > var_2 ) { this . var_3 = var_2 ; var_4 = new type_4 ( var_3 ) ; var_5 . method_2 ( var_4 ) ; var_5 . method_3 ( true ) ; if ( ( var_6 ) != null ) method_4 ( var_6 ) ; return this ; }
[0]: protected static void method_1 ( type_1 var_1, type_2 var_2 ) { for ( type_3 c : var_1. method_2 ( ) ) { if ( ( c. gettype ( ). equals ( var_3 ) ) && (! ( var_2. method_3 ( ) ) ) ) { var_2. method_4 ( var_4 ) ; var_5. method_5 ( string_1 ) ; break ; } } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string msg = ( ( ( ( ( ( string_1 + ( this . var_1 ) ) + string_2 ) + ( this . var_2 ) ) + string_2 ) + ( this . var_3 ) ) + string_2 ) + ( this . var_4 ) ; java.lang.string length = java.lang.string.format ( string_3 , ( ( msg . length ( ) ) + int_1 ) ) ; return ( length + string_2 ) + msg ; }
[0]: private void method_1 ( java.lang.string url, java.util.list < type_1 > var_1, type_2 var_2 ) { if ( ( var_2!= null ) && (! ( var_2. isempty ( ) ) ) ) { for ( final type_4 element : var_2 ) { var_1. add ( new type_1 ( element. text ( ), element. method_2 ( string_2 ), url ) ) ; } } }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ! ( event . method_2 ( ) . tostring ( ) . contains ( string_1 ) ) ) { var_1 . put ( event . method_2 ( ) , false ) ; var_2 . remove ( event . method_3 ( ) ) ; } }
[0]: public java.lang.string method_1 ( java.io.file file, java.lang.string id ) { java.lang.string var_1 = file. method_2 ( ). tostring ( ) ; var_1 = ( ( method_3 ( ) )!= null )? ( method_3 ( ) ) + var_1 : var_1 ; var_1 = ( ( method_4 ( ) )!= null )? var_1 + ( method_4 ( ) ) : var_1 ; var_1 = ( ( method_5 ( ) )!= null )? method_6 ( var_1, method_5 ( ) ) : var_1 ; return var_1 ; }

************

************
tgt: public void method_1 ( int position , int var_1 ) { android.view.view var_2 = method_2 ( var_3 . content ) ; if ( var_2 != null ) { type_1 var_4 = method_3 ( position ) ; if ( var_4 == var_5 ) { type_2 . method_4 ( var_2 , var_6 , var_7 ) . show ( ) ; } else if ( var_4 == var_8 ) { type_2 . method_4 ( var_2 , var_9 , var_7 ) . show ( ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { switch ( var_1. getname ( ) ) { case string_1 : return var_2 ; case string_2 : return var_3 ; case string_3 : return var_4 ; case string_4 : return var_5 ; case string_5 : return var_6 ; case string_6 : return var_7 ; default : java.lang.system.out.println ( string_7 ) ; break ; } } return null ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string var_3 = null ; type_1 var_4 = var_5 . method_2 ( var_1 , var_6 ) ; if ( var_2 . contains ( string_2 ) ) { if ( var_2 . contains ( string_3 ) ) { type_2 var_7 = new type_2 ( var_4 ) ; var_7 . method_3 ( true ) ; var_3 = var_8 . method_4 ( var_7 ) . tostring ( ) ; } if ( var_3 != null ) return string_4 + var_3 ; else return string_4 + var_1 ; } return var_1 ; }
[0]: public void method_1 ( ) { if ( ( this ) == ( var_1 ) ) { type_1. method_2 ( true ) ; } else { type_1. method_2 ( false ) ; if ( ( this ) == ( var_2 ) ) { var_3 = var_4 class ; } if ( ( this ) == ( var_5 ) ) { var_3 = var_6 class ; } else { var_3 = var_7 class ; var_8 = type_2. values ( ) [ this. method_3 ( ) ] ; } } }

************

************
tgt: public java.util.hashmap < type_1 , type_2 > method_1 ( final java.util.set < type_1 > var_1 ) { final java.util.hashmap < type_1 , type_2 > result = new java.util.hashmap < > ( ) ; for ( final type_1 var_2 : var_1 ) { final type_2 var_3 = method_3 ( var_2 ) ; result . put ( var_2 , var_3 ) ; } return result ; }
[0]: public static void method_1 ( type_1 var_1, long var_2 ) { type_2 var_3 = var_1. method_2 ( ) ; if ( ( var_3. method_3 ( string_1 ) ) && ( ( var_3. method_4 ( string_1 ) ) < var_2 ) ) { type_3. method_5 ( var_1 ) ; } var_3. method_6 ( string_1, ( var_2 + ( int_1 * int_2 ) ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int index , java.util.map < java.lang.string , java.util.map < java.lang.string , java.lang.string > > var_2 ) { java.util.map < java.lang.string , java.lang.string > var_3 = var_2 . get ( ( ( var_4 ) + index ) ) ; if ( var_3 != null ) { for ( java.util.map.entry < java.lang.string , java.lang.string > var_5 : var_3 . method_3 ( ) ) { var_1 . method_4 ( var_5 . method_5 ( ) , var_5 . getvalue ( ) ) ; } } }
[0]: public void method_1 ( int number ) { switch ( number ) { case 1 : var_1 = getstring ( var_2 ) ; break ; case int_1 : android.content.intent var_3 = new android.content.intent ( this, var_4 class ) ; method_2 ( var_3 ) ; break ; case int_2 : android.content.intent var_5 = new android.content.intent ( this, var_6 class ) ; method_2 ( var_5 ) ; break ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_2 n : var_1 ) { if ( ( n . type ( ) ) == ( var_2 ) ) { switch ( n . getname ( ) . tolowercase ( ) ) { case string_1 : method_2 ( ( ( type_3 ) ( n ) ) ) ; break ; } } } }
[0]: public boolean method_1 ( type_1 var_1 ) { int [ ] var_2 = new int [ 1 ] ; type_1 value = var_3. get ( var_2 ) ; return var_3. method_2 ( var_1, var_1, var_2 [ 0 ], ( ( var_2 [ 0 ] ) + int_1 ) ) ; }

************

************
tgt: private static type_1 method_1 ( java.lang.string filename ) { java.io.file file = new java.io.file ( type_2 . method_2 ( ) , filename ) ; if ( file . method_3 ( ) ) { try { return new type_3 ( ) . method_4 ( new java.io.filereader ( file ) ) ; } catch ( java.lang.exception var_1 ) { type_2 . method_5 ( ) . error ( ( string_2 + filename ) ) ; var_1 . method_6 ( ) ; } } return null ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1. init ( this ) ; type_2 var_1 = new type_2 ( ) ; type_3 var_2 = new type_3 ( ) ; type_4. init ( this, var_1, var_1, null, false, false ) ; }

************

************
tgt: public void update ( type_1 var_1 ) { java.util.map < java.lang.string , java.lang.object > params = new java.util.hashmap < > ( ) ; params . put ( "name" , var_1 . getname ( ) ) ; params . put ( string_1 , var_1 . method_1 ( ) ) ; params . put ( string_2 , var_1 . method_2 ( ) . getid ( ) ) ; var_2 . update ( var_3 , params ) ; }
[0]: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; type_1 var_2 = new type_1 ( state, id, java.lang.string. method_3 ( var_3. size ( ) ), var_1. method_4 ( ), var_1. method_5 ( ) ) ; var_4. method_6 ( var_2, var_1. method_4 ( ), var_1. method_5 ( ) ) ; var_3. add ( var_2 ) ; state. method_7 ( var_2 ) ; return var_2 ; }

************

************
tgt: private void method_1 ( ) { java.lang.string url = var_1 [ 0 ] ; java.lang.string filepath = ( type_1 . method_2 ( ) ) + string_1 ; type_2 var_2 = new type_2 ( url , filepath ) ; var_3 = var_4 . method_3 ( var_2 ) ; if ( ( var_3 ) == ( - 1 ) ) { type_3 . method_4 ( this , var_5 , var_6 ) . show ( ) ; } var_7 . method_5 ( var_3 ) ; var_8 . method_5 ( var_3 ) ; }
[0]: protected void method_1 ( ) { if ( ( method_2 ( ) ) && ( ( var_1 )!= null ) ) { var_1. start ( ) ; method_3 ( ) ; var_2. setenabled ( true ) ; var_3. method_4 ( var_4 ) ; } final type_1 var_5 = getintent ( ). method_5 ( var_6 ) ; if ( var_5!= null ) { var_7. method_6 ( var_5 ) ; } else { var_7. method_7 ( ) ; } super. method_1 ( ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , type_2 var_2 ) throws java.lang.exception { java.util.arraylist < type_2 > var_3 = method_2 ( var_2 ) ; for ( type_2 var_4 : var_3 ) { java.util.arraylist < type_3 > var_5 = method_3 ( var_4 ) ; for ( type_3 var_6 : var_5 ) { type_2 var_7 = method_4 ( ) . method_5 ( var_6 ) ; var_1 = method_6 ( var_1 , var_7 ) ; } var_1 = method_1 ( var_1 , var_4 ) ; } return var_1 ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_1 var_2 = new type_1 ( ) ; java.util.arraylist < type_2 > var_3 = new java.util.arraylist < > ( ) ; type_2 var_4 = new type_2 ( ) ; var_3. add ( var_4 ) ; var_2. method_2 ( var_3 ) ; var_1. add ( var_2 ) ; type_3. method_3 ( var_5. method_4 ( var_1 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) throws java.io.ioexception { java.io.bufferedreader var_2 = var_1 . method_2 ( ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line ; try { line = var_2 . method_3 ( ) ; while ( line != null ) { var_3 . append ( line ) ; var_3 . append ( "\n" ) ; line = var_2 . method_3 ( ) ; } } finally { var_2 . method_4 ( ) ; } return var_3 . tostring ( ) ; }
[0]: private int method_1 ( int i, int j, int index ) { int var_1 = index / ( method_2 ( ) ) ; int var_2 = ( index - ( var_1 * ( method_2 ( ) ) ) ) - 1 ; int var_3 = java.lang.math.abs ( ( i - var_1 ) ) ; int var_4 = java.lang.math.abs ( ( j - var_2 ) ) ; return var_3 + var_4 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { byte [ ] var_2 = var_3 . method_2 ( ) ; try { var_1 . method_3 ( var_4 ) ; var_1 . method_4 ( var_2 . length ) ; var_1 . method_4 ( var_2 , 0 , var_2 . length ) ; var_1 . method_5 ( var_5 ) ; var_1 . method_5 ( var_6 ) ; var_1 . method_4 ( var_7 ) ; } catch ( java.io.ioexception var_8 ) { var_8 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = ( ( type_1 ) ( this. getactivity ( ). method_2 ( ) ) ) ; if ( var_1 == null ) { type_2. method_3 ( string_1, string_2 ) ; } else if ( ( var_1. method_4 ( ) ) == null ) { type_2. method_3 ( string_3, string_2 ) ; } else { method_5 ( var_1 ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1 { java.io.bufferedreader var_2 = this . method_2 ( var_1 ) ; if ( var_2 == null ) { return string_1 ; } java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_1 ; try { while ( ( var_4 = var_2 . method_3 ( ) ) != null ) { var_3 += var_4 + "\n" ; } } catch ( java.io.ioexception var_5 ) { throw new type_1 ( var_6 . getstring ( var_7 , var_1 ) , var_5 ) ; } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( (! ( var_1. method_2 ( ) ) ) && (! ( type_3. gettype ( ). equals ( var_1. gettype ( ) ) ) ) ) && (! ( type_4. gettype ( ). equals ( var_1. gettype ( ) ) ) ) ) { throw new type_2 ( ( ( string_1 + ( var_1. gettype ( ) ) ) + string_2 ) ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string classname , java.lang.string src ) { type_1 var_1 = new type_1 ( classname , src , this ) ; var_5 . put ( classname , var_1 ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( var_3 ) ; var_1 . method_4 ( var_4 ) ; return var_1 ; }
[0]: private void method_1 ( ) { var_1. info ( string_1, type_1. method_2 ( ). method_3 ( ) ) ; method_4 ( new type_2 ( ) ) ; for ( type_3 var_2 : var_3 ) { for ( type_4 var_4 : var_5 ) { try { var_4. method_5 ( this, var_2 ) ; } catch ( java.lang.exception var_6 ) { var_1. error ( string_2, var_6 ) ; method_6 ( var_4 ) ; } } } method_7 ( ) ; var_7 = false ; var_8 = false ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 context ) { final long start = type_3 . method_2 ( ) ; final java.util.list < type_1 > list = type_4 . method_3 ( context ) ; java.lang.system.out.println ( ( ( string_1 + ( ( type_3 . method_2 ( ) ) - start ) ) + string_2 ) ) ; assert ( list != null ) && ( ( list . size ( ) ) > 0 ) ; return list ; }
[0]: public type_1 method_1 ( ) throws type_2 { if ( ( var_1 ) == null ) { var_1 = new type_1 ( var_2, var_3, null ) ; java.util.map < java.lang.string, java.lang.string > var_4 = type_3. method_2 ( this. var_5 ) ; var_4. method_3 ( ( key, value ) - > var_1. add ( new type_4 ( key, value ) ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_1 . getid ( ) ) == ( var_2 ) ) { method_2 ( var_3 ) ; method_3 ( ) ; } else if ( ( var_1 . getid ( ) ) == ( var_4 ) ) { new type_1 ( ) . execute ( ( ( var_5 . method_4 ( ) ) == 0 ) ) ; } }
[0]: public void method_1 ( type_1 context ) throws java.io.ioexception { if (! ( var_1 ) ) method_2 ( context ) ; if ( ( var_2. method_3 ( ) ) > 0 ) var_3. method_4 ( new type_2 ( null, var_2. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( string_1 , var_1 . method_2 ( ) ) ; var_1 . method_3 ( string_2 ) ; type_1 . assertequals ( string_3 , var_1 . method_2 ( ) ) ; type_1 . assertequals ( string_4 , var_1 . method_4 ( ) ) ; type_1 . assertequals ( string_5 , var_1 . method_5 ( string_6 ) ) ; type_1 . assertequals ( string_4 , var_1 . method_4 ( ) ) ; type_1 . assertequals ( string_3 , var_1 . method_2 ( ) ) ; }
[0]: public void method_1 ( java.lang.integer var_1 ) { if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; var_3. method_2 ( ) ; } type_1 var_4 = var_5. get ( var_1 ) ; var_2 = new type_2 ( var_4. method_3 ( ) [ 0 ]. method_4 ( ), var_6 ) ; var_3 = new type_2 ( var_4. method_3 ( ) [ 1 ]. method_4 ( ), var_7 ) ; var_2. method_5 ( ) ; var_3. method_5 ( ) ; }

************

************
tgt: public java.lang.string gettime ( ) { java.lang.string var_1 = string_1 ; if ( ( var_2 ) < int_1 ) var_1 += "0" ; var_1 += ( java.lang.string . method_1 ( var_2 ) ) + string_3 ; if ( ( var_3 ) < int_1 ) var_1 += "0" ; var_1 += java.lang.string . method_1 ( var_3 ) ; return var_1 ; }
[0]: private void method_1 ( final type_1 var_1 ) { var_2. method_2 ( new type_2 < java.util.list < type_3 > > ( ) { public void method_3 ( java.lang.throwable var_3 ) { new type_4 ( ( string_1 + ( var_3. method_4 ( ) ) ) ) ; } public void method_5 ( java.util.list < type_3 > var_4 ) { var_5. method_6 ( string_2 ) ; method_7 ( var_1, var_4, method_8 ( ) ) ; } } ) ; } }

************

************
tgt: private int method_1 ( int var_1 , type_1 type ) { java.util.regex.matcher var_2 = var_3 . method_2 ( type ) . method_3 ( this . source ) ; if ( ! ( var_2 . method_4 ( var_1 ) ) ) return - 1 ; return var_2 . start ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( true ) ; method_3 ( new type_3 ( ) { public void method_4 ( java.util.date date, android.view.view view ) { } public void method_5 ( int var_2, int var_3 ) { method_6 ( var_4 ) ; } public void method_7 ( type_4 var_5 ) { ( ( type_5 ) ( method_8 ( ) ) ). method_9 ( var_5 ) ; } } ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( ( ( data . size ( ) ) - 1 ) <= ( i ) ) || ( ( data . get ( i ) ) == null ) ) data . add ( method_2 ( ) ) ; return data . get ( ( ( i ) ++ ) ) ; }
[0]: public static void method_1 ( ) { var_1 = var_2. method_2 ( var_3. method_3 ( string_1 ) ) ; var_1. method_4 ( 0, true ) ; var_4 = var_1. method_5 ( 0.0f ) ; var_1. method_4 ( var_4, true ) ; var_1. method_6 ( var_4, var_5 ) ; var_1. method_5 ( var_5 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { type_2 . method_3 ( var_3 , string_1 ) ; return null ; } if ( type_3 . isempty ( var_1 ) ) { return null ; } type_4 var_4 = var_5 . get ( var_1 ) ; if ( ( ( var_4 != null ) && ( ( var_4 . data ) != null ) ) && ( var_4 . method_4 ( ) ) ) { return var_4 . data ; } else { return null ; } }
[0]: protected void method_1 ( type_1 var_1, java.util.list < type_2 > var_2 ) { type_3 state = var_1. method_2 ( ) ; if ( var_1. method_2 ( ). equals ( var_3 ) ) { type_2 var_4 = method_3 ( var_2 ) ; if ( var_4!= null ) { method_4 ( var_4, var_1 ) ; } } if ( var_1. method_2 ( ). equals ( var_5 ) ) { var_6. remove ( var_1 ) ; } }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 , type_2 var_2 , type_3 data , type_4 var_4 ) { type_5 var_5 = new type_6 ( var_4 ) ; type_5 var_6 = new type_6 ( var_4 , true ) ; return type_7 . method_2 ( var_1 , var_2 , data , var_5 , var_6 , var_4 ) ; }
[0]: public void method_1 ( int var_1, type_1 var_2 ) throws type_2 { int var_3 ; var_4 = var_5. method_2 ( ) ; java.lang.string query = ( ( ( string_1 + var_1 ) + string_2 ) + ( var_2. method_3 ( ) ) ) + string_3 ; var_3 = var_4. method_4 ( query ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = type_1 . method_2 ( ) ; var_2 = type_2 . method_2 ( var_3 , true , this ) ; type_3 var_4 = method_3 ( ) ; type_4 var_5 = var_4 . method_4 ( ) ; var_5 . add ( var_6 , var_1 ) ; var_5 . add ( var_7 , var_2 ) ; var_5 . commit ( ) ; }
[0]: public void method_1 ( final type_1 var_1, final int position ) { super. method_1 ( var_1, position ) ; if ( ( var_1. id ) == ( var_2 ) ) { final android.content.intent intent = new android.content.intent ( this, var_3 class ) ; intent. method_2 ( var_4, var_5 ) ; this. method_3 ( intent ) ; } }

************

************
tgt: protected java.lang.boolean method_1 ( java.lang.void ... params ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2 var_3 = var_1 . method_2 ( var_4 , var_5 ) ; if ( ! ( var_6 ) ) { var_7 = var_8 ; return false ; } type_3 var_9 = new type_3 ( var_2 , method_3 ( ) ) ; type_4 var_10 = var_9 . method_4 ( var_11 ) ; if ( ! ( var_12 ) ) { var_7 = var_13 ; return false ; } var_14 = var_15 ; return true ; }
[0]: public boolean method_1 ( type_1 var_1, int var_2, int var_3, type_2 var_4 ) { if (! ( method_2 ( var_2, var_3, var_4 ) ) ) { if ( method_3 ( var_1 ) ) { return false ; } else { if ( ( var_5. size ( ) ) > 1 ) { return! ( method_4 ( var_1, var_2, var_3, var_4 ) ) ; } else { return true ; } } } else { return false ; } } }

************

************
tgt: public static void put ( java.lang.string url , java.lang.string var_1 , type_1 var_2 ) { type_2 . method_1 ( ) ; type_2 . method_2 ( ) ; type_2 . method_3 ( ) ; type_3 var_3 = type_3 . method_4 ( type_4 . method_5 ( string_1 ) , var_1 ) ; var_4 . put ( url , var_3 , new type_5 ( var_2 ) ) ; }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( ) ; } if ( ( var_1 ) == ( array. length ) ) method_2 ( ( ( array. length ) * int_1 ) ) ; array [ ( ++ ( var_2 ) ) ] = item ; var_1 = ( var_2 ) + 1 ; }

************

************
tgt: void method_1 ( ) { if ( ( var_2 . size ( ) ) > 0 ) { for ( type_1 var_1 : var_2 ) { if ( ( var_3 ) <= 0 ) { type_2 var_4 = var_1 . position ; var_2 . remove ( var_1 ) ; var_5 [ var_4 . x ] [ var_4 . y ] . var_2 . remove ( var_1 ) ; } } } }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( method_2 ( ) )!= null ) { if ( item!= ( method_3 ( ). method_4 ( ) ) ) { type_1 var_2 = type_1. get ( ( ( type_2 ) ( item ) ) ) ; method_3 ( ). method_5 ( var_2 ) ; method_2 ( ). method_6 ( ). method_7 ( ) ; } } } }

************

************
tgt: private type_1 method_1 ( java.lang.string string ) { type_1 var_1 ; type_1 var_2 ; type_1 var_3 ; type_1 text ; var_1 = new type_1 ( var_5 ) ; var_3 = var_1 . method_2 ( new type_1 ( var_6 ) ) ; var_2 = var_1 . method_2 ( new type_1 ( var_7 ) ) ; var_3 . method_3 ( string_1 ) ; text = var_2 . method_2 ( new type_1 ( var_8 ) ) ; text . method_3 ( ( ( string_2 + string ) + string_3 ) ) ; return var_1 ; }
[0]: public void method_1 ( ) { var_1 = string_1 ; char [ ] [ ] var_2 = new char [ ] [ ] { new char [ ] { char_1, char_2, char_2 }, new char [ ] { char_1, char_3, char_3 }, new char [ ] { char_1, char_1, char_4 } } ; var_3 = new type_1 ( var_2 ) ; type_2 var_4 = new type_2 ( var_3 ) ; type_3. assertthat ( var_4. method_2 ( var_1 ), type_4. method_3 ( string_2 ) ) ; }

************

************
tgt: public java.lang.string getvalue ( type_1 var_1 ) { java.lang.stringbuilder var_2 = var_3 . get ( ) ; java.util.list < java.lang.string > var_4 = new java.util.arraylist < > ( ) ; for ( type_4 var_5 : this ) { type_5 var_6 = var_1 . method_1 ( var_5 ) ; var_4 . add ( var_6 . getname ( ) ) ; } java.util.collections.sort ( var_4 ) ; for ( java.lang.string name : var_4 ) { var_2 . append ( name ) . append ( string_1 ) ; } return var_2 . tostring ( ) ; }
[0]: public void method_1 ( type_1 item, java.lang.string var_1, type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_2. method_2 ( ) ) ) ; java.lang.string var_4 = var_3. method_3 ( ) ; type_4 var_5 = type_5. method_4 ( var_4 ) ; java.lang.string var_6 = var_5. method_5 ( ) ; item. add ( new type_6 ( var_1, var_6 ) ) ; }

************

************
tgt: protected void method_1 ( ) { if ( var_1 ) { var_1 = false ; } else { if ( ( var_2 ) != null ) { var_2 . method_3 ( ) ; } type_1 . method_4 ( var_3 , string_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_5 ( ) ; var_4 . method_6 ( ) ; } } super . method_1 ( ) ; type_2 . method_7 ( ) . method_8 ( this ) ; }
[0]: public < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1 ) { java.lang.string id = var_2. get ( var_1. method_2 ( ) ) ; if ( id!= null ) { return var_3. method_3 ( var_1, this, id ) ; } else { try { return var_1. method_4 ( ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( string_1, var_4 ) ; return null ; } } } return null ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 ) { java.util.random var_3 = new java.util.random ( ) ; int var_4 = ( var_1 + ( var_3 . method_2 ( ( var_2 - var_1 ) ) ) ) * int_1 ; var_5 . method_3 ( var_4 ) ; type_1 . method_4 ( var_6 , ( ( string_1 + ( var_4 / int_1 ) ) + string_2 ) ) ; }
[0]: private static void method_1 ( ) { for ( int var_1 = 0 ; var_1 <= ( var_2. length ) ; var_1 ++ ) { if ( ( ( var_3 [ var_1 ] )!= null ) && ( ( var_2 [ var_1 ] )!= 0 ) ) java.lang.system.out.println ( ( ( ( string_1 + ( var_2 [ var_1 ] ) ) + string_2 ) + ( var_3 ) ) ) ; } }

************

************
tgt: public boolean contains ( java.lang.string var_1 ) { for ( java.lang.integer var_2 : var_3 ) { boolean result = var_4 [ java.lang.math.abs ( ( ( type_1 . method_2 ( var_1 . tolowercase ( ) . method_3 ( ) , 0 , var_1 . length ( ) , var_2 ) ) % ( var_4 . length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; }
[0]: private static void method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = var_1. method_2 ( var_3 class ) ; type_3 var_4 = var_1. method_3 ( var_2 ) ; type_4. method_4 ( var_4 ) ; for ( int i = 0 ; i < int_1 ; ++ i ) { type_4. method_5 ( var_4 ) ; } }

************

************
tgt: private void method_1 ( ) { this . var_1 = new java.util.arraylist ( var_2 ) ; type_1 var_3 = ( ( type_1 ) ( this . var_4 ) ) ; if ( ( var_3 . method_5 ( ) ) != null ) { type_2 var_5 = type_2 . method_2 ( var_3 . method_3 ( ) , var_3 . method_4 ( ) ) ; type_3 var_6 = new type_3 ( var_3 . method_5 ( ) , var_5 ) ; this . var_7 |= var_6 . method_6 ( ) ; var_1 . add ( var_6 ) ; } }
[0]: public static boolean method_1 ( java.lang.string name ) { return ( ( ( ( name. isempty ( ) ) || ( ( name. method_2 ( 0 ) ) == char_1 ) ) || ( type_1. method_3 ( name. method_2 ( 0 ) ) ) ) || ( ( name. method_2 ( 0 ) ) == char_2 ) ) || ( ( name. method_2 ( 0 ) ) == char_3 ) ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 , int index ) { method_2 ( ) ; if ( ( index >= ( var_1 . method_3 ( ) . length ) ) || ( index < 0 ) ) { return getcontext ( ) . method_4 ( ) . method_5 ( ) ; } else { return var_1 . method_3 ( ) [ index ] ; } }
[0]: public static type_1 method_1 ( final double var_1, final double offset ) { type_2. method_2 ( string_1, var_1 ) ; if ( var_1 == int_1 ) { return type_3. method_1 ( offset ) ; } return type_4. method_3 ( ( 1 / ( type_5. method_4 ( var_1 ) ) ), offset ) ; }

************

************
tgt: private void method_1 ( java.util.arraylist < type_1 > var_1 ) throws java.io.ioexception { while ( ( var_2 ) != ( var_3 ) ) { type_1 p = var_1 . get ( var_5 ) ; var_6 . method_2 ( p . method_3 ( var_7 , var_8 ) ) ; var_9 . method_4 ( p , var_10 ) ; var_2 = ( ( var_2 ) + 1 ) % ( var_4 ) ; var_5 = var_5 += 1 ; } }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( var_3, var_4 < java.lang.string, java.lang.object > method_3 ( ) ) ; assertnotnull ( var_1 ) ; var_1 = var_2. method_1 ( var_3, var_4 < java.lang.string, java.lang.object > method_3 ( ) ) ; assertnotnull ( var_1 ) ; type_1 var_5 = var_2. method_1 ( var_3 ) ; method_4 ( var_1, var_5 ) ; }

************

************
tgt: protected static void method_1 ( type_1 var_1 , type_2 var_2 ) { for ( type_3 c : var_1 . method_2 ( ) ) { if ( ( c . gettype ( ) . equals ( var_3 ) ) && ( ! ( var_2 . method_3 ( ) ) ) ) { var_5 . method_5 ( string_1 ) ; } } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { for ( type_1 var_3 : var_4 ) { if ( var_3. method_2 ( ). equals ( var_1 ) ) { for ( type_2 var_5 : var_3. method_3 ( ) ) { if ( var_5. method_4 ( ). equals ( var_1 ) ) { if ( ( var_5. gettype ( ) ) == ( var_6 ) ) { var_3. method_3 ( ). remove ( var_5 ) ; return ; } } } } } }

************

************
tgt: private void method_1 ( java.lang.string url , java.util.list < type_1 > var_1 , type_2 var_2 ) { if ( ( var_2 != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { type_3 . info ( string_1 , var_2 . size ( ) ) ; for ( final type_4 element : var_2 ) { var_1 . add ( new type_1 ( element . text ( ) , element . method_2 ( string_2 ) , url ) ) ; } } }
[0]: private void method_1 ( int var_1, int [ ] var_2 ) { if ( var_1 == ( var_3 ) ) { if ( ( var_2 [ 0 ] ) == ( var_4 ) ) { listener. method_2 ( ) ; type_1. method_3 ( var_5, string_1 ) ; } else { listener. method_4 ( ) ; type_1. method_3 ( var_5, string_2 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.io.file file , java.lang.string id ) { java.lang.string var_1 = file . method_2 ( ) . tostring ( ) ; var_1 = ( ( method_5 ( ) ) != null ) ? method_6 ( var_1 , method_5 ( ) ) : var_1 ; var_1 = ( ( method_3 ( ) ) != null ) ? ( method_3 ( ) ) + var_1 : var_1 ; var_1 = ( ( method_4 ( ) ) != null ) ? var_1 + ( method_4 ( ) ) : var_1 ; return var_1 ; }
[0]: public void method_1 ( ) { type_1. assertequals ( type_2. method_2 ( int_1 ), var_1. method_3 ( int_1 ) ) ; type_1. assertequals ( type_2. method_2 ( char_1 ), var_1. method_3 ( char_1 ) ) ; type_1. assertequals ( type_2. method_2 ( true ), var_1. method_3 ( true ) ) ; type_1. assertequals ( type_2. method_2 ( false ), var_1. method_3 ( false ) ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { switch ( var_1 . getname ( ) ) { case string_1 : return var_2 ; case string_2 : return var_3 ; case string_3 : return var_4 ; case string_4 : return var_5 ; case string_5 : return var_6 ; case string_6 : return var_7 ; default : java.lang.system.out.println ( string_7 ) ; break ; } return null ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. method_2 ( var_1 ) ; type_2 var_5 = new type_2 ( ) ; if ( var_3!= null ) { if ( var_3. method_3 ( ). equals ( type_3. method_4 ( var_2 ) ) ) { var_5. method_5 ( var_3 ) ; } } type_4. method_6 ( var_6, var_5 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( this ) == ( var_1 ) ) { type_1 . method_2 ( true ) ; } else { type_1 . method_2 ( false ) ; if ( ( this ) == ( var_2 ) ) { var_3 = var_4 class ; } else if ( ( this ) == ( var_5 ) ) { var_3 = var_6 class ; } else { var_3 = var_7 class ; var_8 = type_2 . values ( ) [ this . method_3 ( ) ] ; } } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1, int_2, int_3 ) ; type_1 var_2 = new type_1 ( int_1, int_2, int_3 ) ; var_1. method_1 ( new type_2 ( 0, 0 ), var_2 ) ; var_2. method_1 ( new type_2 ( 1, int_4 ), var_2 ) ; var_1. method_2 ( 0, 0 ). method_3 ( var_1, var_2 ) ; java.lang.system.out.println ( type_1. method_4 ( 0, 0, 1, 1 ) ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , long var_2 ) { type_2 var_3 = var_1 . method_2 ( ) ; if ( ( var_3 . method_3 ( string_1 ) ) && ( ( var_3 . method_4 ( string_1 ) ) > var_2 ) ) { return ; } type_3 . method_5 ( var_1 ) ; var_3 . method_6 ( string_1 , ( var_2 + ( int_1 * int_2 ) ) ) ; }
[0]: public void method_1 ( ) { type_1 id = var_1. getid ( ) ; assertnotnull ( id ) ; assertequals ( type_3. tostring ( ), id. method_2 ( ) ) ; method_3 ( type_4. method_4 ( id. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( int number ) { switch ( number ) { case 1 : android.content.intent var_5 = new android.content.intent ( this , var_6 class ) ; method_2 ( var_5 ) ; break ; case int_1 : var_1 = getstring ( var_2 ) ; break ; case int_2 : android.content.intent var_3 = new android.content.intent ( this , var_4 class ) ; method_2 ( var_3 ) ; break ; } }
[0]: public static void main ( java.lang.string [ ] args ) { int n = int_1 ; type_1 < java.lang.integer > var_1 = new type_1 < java.lang.integer > ( ) ; for ( int i = 0 ; i < int_2 ; i ++ ) { if ( ( i % int_2 ) == 0 ) { var_1. method_1 ( i ) ; } else { var_1. method_2 ( i ) ; } } for ( java.lang.integer i : var_1 ) { java.lang.system.out.println ( i ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { int [ ] var_2 = new int [ 1 ] ; type_1 value ; do { value = var_3 . get ( var_2 ) ; if ( ( var_1 != value ) && ( ( value == null ) || ( ! ( var_1 . equals ( value ) ) ) ) ) { return false ; } } while ( var_3 . method_2 ( value , value , var_2 [ 0 ] , ( ( var_2 [ 0 ] ) + int_1 ) ) ) ; return true ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 node = new type_1 ( var_2, var_1 ). method_2 ( new type_2 ( getactivity ( ), ( var_1 + string_1 ) ) ) ; node. method_3 ( false ) ; method_4 ( node, string_2 ) ; return node ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; type_1 . init ( this ) ; type_2 var_1 = new type_2 ( ) ; type_3 var_2 = new type_3 ( ) ; type_4 . init ( this , null , null , null , false ) ; }
[0]: private static java.io.file method_1 ( ) { try { return new java.io.file ( var_1 class. method_2 ( ). method_3 ( ). method_4 ( ). method_5 ( ) ). method_6 ( ) ; } catch ( type_1 var_2 ) { var_2. method_7 ( ) ; } return null ; }

************

************
tgt: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; type_1 var_2 = new type_1 ( state , java.lang.string . method_3 ( var_3 . size ( ) ) , id , var_1 . method_4 ( ) , var_1 . method_5 ( ) ) ; var_4 . method_6 ( var_2 , var_1 . method_4 ( ) , var_1 . method_5 ( ) ) ; var_3 . add ( var_2 ) ; state . method_7 ( var_2 ) ; return var_2 ; }
[0]: protected type_1 method_1 ( ) { var_1 = ( ( new type_1 ( ) ) < ( var_2 ) ) == ( var_3 = new type_2 ( 0, 0, 0, 1 ) ) ; var_1. method_2 ( var_3 ) ; type_3 var_3 = new type_2 ( 0, 0, 0, 1 ) ; var_1. method_2 ( var_3 ) ; return var_1 ; }

************

************
tgt: protected void method_1 ( ) { if ( ( method_2 ( ) ) && ( ( var_1 ) != null ) ) { var_1 . start ( ) ; var_3 . method_4 ( var_4 ) ; } final type_1 var_5 = getintent ( ) . method_5 ( var_6 ) ; if ( var_5 != null ) { var_7 . method_6 ( var_5 ) ; } else { var_7 . method_7 ( ) ; } super . method_1 ( ) ; }
[0]: public void method_1 ( ) { method_2 ( ) ; if ( ( var_1 ) == null ) { if ( var_2 ) type_1. error ( this, string_1 ) ; return ; } var_1. method_3 ( true ) ; var_1 = null ; var_3. set ( null ) ; var_3. set ( null ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_1 var_2 = new type_1 ( ) ; java.util.arraylist < type_2 > var_3 = new java.util.arraylist < > ( ) ; type_2 var_4 = new type_2 ( ) ; var_3 . add ( var_4 ) ; var_2 . method_2 ( var_3 ) ; var_1 . add ( var_2 ) ; method_3 ( var_5 . method_4 ( var_1 ) ) ; }
[0]: public static void method_1 ( byte [ ] [ ] var_1, int var_2, int var_3, int y ) { for ( int x = type_1. min ( var_2, var_3 ) ; x < ( type_1. method_2 ( var_2, var_3 ) ) ; x ++ ) { var_1 [ y ] [ x ] = ( ( byte ) ( var_4 ) ) ; } }

************

************
tgt: private int method_1 ( int i , int j , int index ) { int var_1 = ( index - 1 ) / ( method_2 ( ) ) ; int var_2 = ( index - ( var_1 * ( method_2 ( ) ) ) ) - 1 ; int var_3 = java.lang.math.abs ( ( i - var_1 ) ) ; int var_4 = java.lang.math.abs ( ( j - var_2 ) ) ; return var_3 + var_4 ; }
[0]: public void method_1 ( ) { type_1. i ( var_1, string_1 ) ; if ( ( var_2 ) == false ) { type_1. i ( var_1, string_2 ) ; method_2 ( ) ; var_2 = true ; } if ( var_3 ) { type_1. method_3 ( var_1, string_3 ) ; } else { method_4 ( ) ; type_1. i ( var_1, string_4 ) ; var_3 = true ; var_4 = new java.util.arraylist < > ( ) ; method_5 ( ) ; method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; type_1 var_1 = ( ( type_1 ) ( this . getactivity ( ) . method_2 ( ) ) ) ; if ( ( var_1 == null ) || ( ( var_1 . method_4 ( ) ) == null ) ) { } else { method_5 ( var_1 ) ; } }
[0]: private void method_1 ( type_1 var_1, java.lang.object var_2 ) throws java.lang.exception { if ( var_2 instanceof java.util.collection <? > ) { java.util.collection <? > var_3 = ( ( java.util.collection <? > ) ( var_2 ) ) ; for ( java.lang.object var_4 : var_3 ) { method_2 ( var_4, var_1 ) ; } } else { method_2 ( var_2, var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( ( ! ( var_1 . method_2 ( ) ) ) || ( type_3 . gettype ( ) . equals ( var_1 . gettype ( ) ) ) ) || ( type_4 . gettype ( ) . equals ( var_1 . gettype ( ) ) ) ) { throw new type_2 ( ( ( string_1 + ( var_1 . gettype ( ) ) ) + string_2 ) ) ; } }
[0]: private boolean method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; var_2 = new java.lang.thread ( var_1 ) ; var_1. method_2 ( var_3 ) ; var_1. method_3 ( ) ; var_2. method_4 ( ) ; if ( var_4 ) java.lang.system.out.println ( string_1 ) ; return true ; } return false ; }

************

************
tgt: private void method_1 ( ) { var_1 . info ( string_1 , method_2 ( ) . method_3 ( ) ) ; method_4 ( new type_2 ( ) ) ; for ( type_3 var_2 : var_3 ) { for ( type_4 var_4 : var_5 ) { try { var_4 . method_5 ( this , var_2 ) ; } catch ( java.lang.exception var_6 ) { var_1 . error ( string_2 , var_6 ) ; method_6 ( var_4 ) ; } } } method_7 ( ) ; var_7 = false ; var_8 = false ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2. method_2 ( ). method_3 ( ) ) { } type_2. method_4 ( view. method_5 ( ), string_1 ) ; if ( var_2. method_7 ( ) ) { method_8 ( ) ; } method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { java.util.map < java.lang.string , java.lang.string > var_4 = type_3 . method_2 ( this . var_5 ) ; var_4 . method_3 ( ( key , value ) - > var_1 . add ( new type_4 ( key , value ) ) ) ; return var_1 ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { int [ ] var_2 = method_2 ( string_1 ) ; for ( int i = 0 ; i < ( var_1. method_3 ( ) ) ; i ++ ) { var_1. method_4 ( i ). method_5 ( var_2 [ 0 ], var_2 [ 1 ] ) ; } } }

************

************
tgt: public void method_1 ( type_1 context ) throws java.io.ioexception { if ( ! ( var_1 ) ) method_2 ( context ) ; if ( ( var_2 . method_3 ( ) ) > 0 ) var_3 . method_4 ( new type_2 ( var_3 , var_2 . method_5 ( ) ) ) ; }
[0]: public type_1 [ ] method_1 ( ) { type_1 [ ] var_1 = ( ( type_1 [ ] ) ( new java.lang.object [ size ] ) ) ; type_2 < type_1 >. var_2 n = first ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_1 [ i ] = n. item ; n = var_3 ; } return var_1 ; }

************

************
tgt: public static void method_1 ( java.lang.integer var_1 ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( ) ; var_3 . method_2 ( ) ; } type_1 var_4 = var_5 . get ( var_1 ) ; var_2 = new type_2 ( var_4 . method_3 ( ) [ 0 ] . method_4 ( ) , var_6 ) ; var_3 = new type_2 ( var_4 . method_3 ( ) [ 1 ] . method_4 ( ) , var_7 ) ; var_2 . method_5 ( ) ; var_3 . method_5 ( ) ; }
[0]: public void method_1 ( type_1 event ) { var_1. method_2 ( var_2, ( ( string_1 + ( method_3 ( ). method_4 ( string_2 ) ) ) + string_3 ) ) ; method_3 ( ). method_5 ( string_2, null ) ; type_2. method_6 ( var_3, false ) ; method_7 ( ). method_8 ( ). method_9 ( var_4 ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { var_2 . method_2 ( new type_2 < java.util.list < type_3 > > ( ) { public void method_3 ( java.lang.throwable var_3 ) { new type_4 ( ( string_1 + ( var_3 . method_4 ( ) ) ) ) ; } public void method_5 ( java.util.list < type_3 > var_4 ) { var_5 . method_6 ( string_2 ) ; method_7 ( var_1 , var_4 , method_8 ( ) ) ; } } ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; type_3 < type_1 > var_3 = var_4. get ( var_2 ) ; int var_5 = var_3. method_3 ( ) ; int var_6 = var_3. method_4 ( ). method_5 ( ) ; int var_7 = var_6 + var_5 ; method_6 ( var_6, var_7 ) ; var_4. remove ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_3 ( new type_3 ( ) { public void method_4 ( java.util.date date , android.view.view view ) { } public void method_5 ( int var_2 , int var_3 ) { method_6 ( var_4 ) ; } public void method_7 ( type_4 var_5 ) { ( ( type_5 ) ( method_8 ( ) ) ) . method_9 ( var_5 ) ; } } ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = this ; var_4 = ( ( type_2 ) ( method_3 ( var_5 ) ) ) ; var_6 = ( ( type_3 ) ( method_3 ( var_7 ) ) ) ; var_8 = method_4 ( var_9, var_10 ) ; var_8. method_5 ( this ) ; counter = method_6 ( ) ; var_4. settext ( java.lang.string. method_7 ( counter ) ) ; }

************

************
tgt: public static void method_1 ( ) { var_1 = var_2 . method_2 ( var_3 . method_3 ( string_1 ) ) ; var_1 . method_4 ( 0 , true ) ; var_1 . method_4 ( var_4 , true ) ; var_1 . method_6 ( var_4 , var_5 ) ; var_1 . method_5 ( var_5 ) ; }
[0]: public void execute ( final java.util.collection < type_1 > var_1, final type_2 var_2 ) { java.util.collection < type_2 > var_3 = new java.util.arraylist < type_2 > ( ) ; var_3. add ( var_2 ) ; var_4. method_1 ( var_5, ( string_1 + ( var_2. getname ( ) ) ) ) ; execute ( var_1, var_3 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , java.util.list < type_2 > var_2 ) { if ( var_1 . method_2 ( ) . equals ( var_3 ) ) { type_2 var_4 = method_3 ( var_1 , var_2 ) ; if ( var_4 != null ) { method_4 ( var_4 , var_1 ) ; } } if ( var_1 . method_2 ( ) . equals ( var_5 ) ) { var_6 . remove ( var_1 ) ; } }
[0]: private java.lang.string method_1 ( java.util.map < java.lang.string, java.lang.object > var_1 ) { java.util.list < java.lang.string > var_2 = ( ( java.util.list < java.lang.string > ) ( var_1. get ( string_1 ) ) ) ; if ( ( var_2. size ( ) ) >= int_1 ) { return var_2. get ( 1 ). tostring ( ) ; } else { return string_2 ; } }

************

************
tgt: public void method_1 ( int var_1 , type_1 var_2 ) throws type_2 { int var_3 ; var_4 = var_5 . method_2 ( ) ; java.lang.string query = ( ( ( string_1 + var_1 ) + string_2 ) + ( var_2 . method_3 ( ) ) ) + string_3 ; var_4 . method_4 ( query ) ; }
[0]: public type_1 get ( final type_2 var_1 ) throws java.io.ioexception { type_1 var_2 = this. var_3. get ( var_1 ) ; if ( ( var_2 == null ) && ( var_1 instanceof type_3 ) ) { final type_4 var_4 ; try { var_4 = this. var_5. get ( ( ( type_3 ) ( var_1 ) ) ) ; } catch ( type_5 var_6 ) { throw new type_6 ( var_6 ) ; } if ( var_4!= null ) { var_2 = new type_7 ( var_4 ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final int position ) { super . method_1 ( var_1 , position ) ; if ( ( var_1 . id ) == ( var_2 ) ) { final android.content.intent intent = new android.content.intent ( this , var_3 class ) ; this . method_3 ( intent ) ; } }
[0]: public void method_1 ( short [ ] var_1, byte [ ] var_2, float [ ] var_3, float [ ] var_4 ) { if ( ( this. var_5 )!= null ) { synchronized ( this. var_5 ) { this. var_5. method_2 ( ) ; this. var_5 = null ; } } type_1. method_3 ( new type_2 ( var_1, var_2, var_3, var_4 ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int var_2 , int var_3 , type_2 var_4 ) { if ( ! ( method_2 ( var_2 , var_3 , var_4 ) ) ) { if ( method_3 ( var_1 ) ) { return false ; } else { return ! ( method_4 ( var_1 , var_2 , var_3 , var_4 ) ) ; } } else { return false ; } }
[0]: public void put ( type_1 key, type_2 data ) { java.lang.string var_1 = type_3. method_1 ( key. tostring ( ) ) ; try { type_4 var_2 = var_3. method_2 ( var_1 ) ; if ( var_2!= null ) { type_5 var_4 = var_2. method_3 ( 0 ) ; var_5. method_4 ( var_4, data ) ; } var_2. commit ( ) ; } catch ( java.io.ioexception var_6 ) { var_6. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( ) ; } if ( ( var_1 ) == ( array . length ) ) method_2 ( ( ( array . length ) * int_1 ) ) ; array [ var_2 ] = item ; ( var_1 ) ++ ; var_2 = var_1 ; }
[0]: public java.lang.object method_1 ( java.lang.string name ) { if ( ( type_1. equals ( name ) ) && ( ( type_2. method_2 ( ) )!= null ) ) { return var_1. method_1 ( name, type_2. method_2 ( ). method_3 ( ) ) ; } else { return var_1. method_1 ( name, super. method_1 ( name ) ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( method_2 ( ) ) != null ) { type_1 var_2 = type_1 . get ( ( ( type_2 ) ( item ) ) ) ; if ( var_2 != ( method_3 ( ) . method_4 ( ) ) ) { method_3 ( ) . method_5 ( var_2 ) ; method_2 ( ) . method_6 ( ) . method_7 ( ) ; } } }
[0]: private void method_1 ( java.io.inputstream var_1, type_1 var_2 ) throws java.lang.exception { type_2 var_3 = new type_2 ( new type_3 ( var_1, string_1 ) ) ; try { type_4. method_2 ( var_3, var_2 ) ; } finally { if ( var_3!= null ) { var_3. method_3 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { var_1 = string_1 ; char [ ] [ ] var_2 = new char [ ] [ ] { new char [ ] { char_1 , char_2 , char_2 } , new char [ ] { char_1 , char_3 , char_3 } , new char [ ] { char_1 , char_1 , char_4 } } ; type_2 var_4 = new type_2 ( new type_1 ( var_2 ) ) ; type_3 . assertthat ( var_4 . method_2 ( var_1 ) , type_4 . method_3 ( string_2 ) ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, int value ) { if ( value < 0 ) return false ; type_1. method_2 ( ). method_3 ( ) ; try { int var_2 = method_4 ( var_1 ) ; var_3. put ( var_1, ( var_2 + value ) ) ; method_5 ( string_1, var_1, string_2, value ) ; return true ; } finally { type_1. method_2 ( ). method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 item , java.lang.string var_1 , type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_2 . method_2 ( ) ) ) ; java.lang.string var_4 = var_3 . method_3 ( ) ; if ( var_4 != null ) { type_4 var_5 = type_5 . method_4 ( var_4 ) ; java.lang.string var_6 = var_5 . method_5 ( ) ; item . add ( new type_6 ( var_1 , var_6 ) ) ; } }
[0]: public void method_1 ( boolean var_1 ) { if ( ( ( var_2 ) >= ( var_3 ) ) && ( ( var_4 ) <= ( var_3 ) ) ) { var_1 = true ; } else { var_1 = false ; } this. var_1 = var_1 ; }

************

************
tgt: public < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1 ) { java.lang.string id = var_2 . get ( var_1 . getname ( ) ) ; if ( id != null ) { return var_3 . method_3 ( var_1 , this , id ) ; } else { try { return var_1 . method_4 ( ) ; } catch ( java.lang.exception var_4 ) { var_5 . error ( string_1 , var_4 ) ; return null ; } } }
[0]: private static void method_1 ( java.lang.string var_1, type_1 var_2 ) throws java.lang.exception { try ( type_2 var_3 = new type_2 ( new java.io.file ( ( ( ( ( var_4 ) + string_1 ) + var_1 ) + string_2 ) ) ) ) { var_2. execute ( var_3 ) ; } type_3. add ( var_1 ) ; }

************

************
tgt: private static void method_1 ( ) { for ( int var_1 = 0 ; var_1 < ( var_2 . length ) ; var_1 ++ ) { if ( ( ( var_3 [ var_1 ] ) != null ) && ( ( var_2 [ var_1 ] ) != 0 ) ) java.lang.system.out.println ( ( ( ( string_1 + ( var_2 [ var_1 ] ) ) + string_2 ) + ( var_3 [ var_1 ] ) ) ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_1. substring ( 0, ( ( var_1. length ( ) ) - int_1 ) ) ; type_1 var_3 = null ; try { type_2 var_4 = new type_2 ( string_1 ) ; java.util.date var_5 = var_4. method_2 ( var_2 ) ; var_3 = new type_1 ( var_5. gettime ( ) ) ; } catch ( java.lang.exception var_6 ) { type_3. method_3 ( string_2, var_6. tostring ( ) ) ; } return var_3 ; }

************

************
tgt: private static void method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = var_1 . method_2 ( var_3 class ) ; type_3 var_4 = var_1 . method_3 ( var_2 ) ; java.lang.system.out.println ( var_2 ) ; java.lang.system.out.println ( var_4 ) ; type_4 . method_4 ( var_4 ) ; for ( int i = 0 ; i < 1 ; ++ i ) { type_4 . method_5 ( var_4 ) ; } }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) + ( var_2 ) ) > ( list. size ( ) ) ) { var_1 = ( var_1 ) % ( var_2 ) ; } else { var_1 = ( var_1 ) + ( var_2 ) ; } }

************

************
tgt: public static boolean method_1 ( java.lang.string name ) { return ( ( ( ( ( name == null ) || ( name . isempty ( ) ) ) || ( ( name . method_2 ( 0 ) ) == char_1 ) ) || ( type_1 . method_3 ( name . method_2 ( 0 ) ) ) ) || ( ( name . method_2 ( 0 ) ) == char_2 ) ) || ( ( name . method_2 ( 0 ) ) == char_3 ) ; }
[0]: private type_1 method_1 ( java.lang.string str, int i ) { try { java.net.url url = new java.net.url ( str ) ; java.io.file var_1 = method_2 ( url ) ; return method_3 ( i, var_1. method_4 ( ) ) ; } catch ( type_2 var_2 ) { var_2. method_5 ( ) ; } catch ( java.io.ioexception var_2 ) { var_2. method_5 ( ) ; } return null ; }

************

************
tgt: public static type_1 method_1 ( final double var_1 , final double offset ) { type_2 . method_2 ( string_1 , var_1 ) ; if ( var_1 == int_1 ) { return type_3 . method_1 ( offset ) ; } else { return type_4 . method_3 ( ( 1 / ( type_5 . method_4 ( var_1 ) ) ) , offset ) ; } }
[0]: public void method_1 ( java.lang.string id, java.lang.string var_1, java.lang.string var_2 ) { if ( var_1. equals ( var_2 ) ) { type_1 data = new type_1 ( string_1, id, var_1, 0, 0, 0, 0 ) ; data = var_3. method_2 ( data ) ; if ( data!= null ) { var_4. method_3 ( data. method_4 ( ) ) ; return ; } } var_4. method_3 ( string_2 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( var_3 , var_4 < java.lang.string , java.lang.object > method_3 ( ) ) ; type_2 . assertnotnull ( var_1 ) ; var_1 = var_2 . method_1 ( var_3 , var_4 < java.lang.string , java.lang.object > method_3 ( ) ) ; type_2 . assertnotnull ( var_1 ) ; type_1 var_5 = var_2 . method_1 ( var_3 ) ; type_2 . method_4 ( var_1 , var_5 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ). method_4 ( this ) ; type_2 var_3 = ( ( type_2 ) ( method_5 ( var_4 ) ) ) ; method_6 ( var_3 ) ; method_7 ( ). method_8 ( true ) ; method_7 ( ). method_9 ( true ) ; var_5. method_10 ( this ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { for ( type_1 var_3 : var_4 ) { if ( var_3 . method_2 ( ) . equals ( var_1 ) ) { for ( type_2 var_5 : var_3 . method_3 ( ) ) { if ( var_5 . getid ( ) . equals ( var_2 ) ) { if ( ( var_5 . gettype ( ) ) == ( var_6 ) ) { var_3 . method_3 ( ) . remove ( var_5 ) ; return ; } } } } } }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { if ( var_1 == null ) { var_1 = new java.util.arraylist < > ( ) ; } var_2 = new type_2 ( this, var_1 ) ; type_3 var_3 = ( ( type_3 ) ( method_2 ( var_4 ) ) ) ; var_3. method_3 ( var_2 ) ; var_2. add ( var_3 ) ; }

************

************
tgt: private void method_1 ( int var_1 , int [ ] var_2 ) { int count = 0 ; if ( var_1 == ( var_3 ) ) { for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { if ( ( var_2 [ i ] ) == ( var_4 ) ) count ++ ; } if ( count == ( var_2 . length ) ) listener . method_2 ( ) ; else listener . method_4 ( ) ; } }
[0]: private void method_1 ( final short [ ] var_1, final byte [ ] var_2, final int var_3, final int end ) { int var_4 = var_3 ; for ( int p = var_3 ; p < end ; ) { final short f = var_1 [ ( p ++ ) ] ; var_2 [ ( var_4 ++ ) ] = ( f <= ( - int_1 ) )? 0 : f >= int_2? - 1 : ( ( byte ) ( ( f + int_3 ) > > int_4 ) ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( var_1 . method_3 ( int_1 ) , type_2 . method_2 ( int_1 ) ) ; type_1 . assertequals ( var_1 . method_3 ( char_1 ) , type_2 . method_2 ( char_1 ) ) ; type_1 . assertequals ( var_1 . method_3 ( true ) , type_2 . method_2 ( true ) ) ; }
[0]: public void method_1 ( java.lang.integer var_1 ) { for ( int i = 0 ; i <= ( var_1 + 1 ) ; i ++ ) { var_2. add ( i ) ; } var_3 = var_1 ; var_4. setenabled ( false ) ; var_5. method_2 ( var_2 ) ; var_4. method_3 ( var_5 ) ; var_6. settext ( var_1. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 ) ; type_2 var_5 = new type_2 ( ) ; if ( var_3 != null ) { if ( var_3 . method_3 ( ) . equals ( var_2 ) ) { var_5 . method_5 ( var_3 ) ; } } type_4 . method_6 ( var_6 , var_5 ) ; }
[0]: public static int method_1 ( byte [ ] var_1 ) { int start = var_2 ; int end = start + ( var_2 ) ; byte [ ] var_3 = new byte [ var_2 ] ; var_3 = type_1. method_2 ( var_1, start, end ) ; type_2 var_4 = type_2. method_3 ( var_3 ) ; int var_5 = var_4. getint ( ) ; return var_5 ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; method_2 ( ) ; if ( var_1 ) { var_1 = false ; } if ( var_2 ) { method_3 ( 0 , 0 ) ; method_4 ( ) ; } if ( ( var_3 ) != null ) { var_3 . method_5 ( this , var_4 ) ; } }
[0]: protected void method_1 ( int var_1, int var_2, int var_3, int var_4 ) { super. method_1 ( var_1, var_2, var_3, var_4 ) ; var_5. method_1 ( var_1, var_2 ) ; var_6. method_1 ( var_1, var_2, method_2 ( ), method_3 ( ), method_4 ( ), method_5 ( ) ) ; var_7. method_1 ( var_1, var_2 ) ; this. var_8 = false ; method_6 ( false ) ; }

************

************
tgt: private static void method_1 ( type_1 item ) { var_1 [ var_2 . counter ] = item ; if ( ( var_2 . counter ) != 0 ) item . method_2 ( var_1 [ 0 ] ) ; ( var_2 . counter ) ++ ; type_2 . method_4 ( item , item . method_3 ( ) ) ; }
[0]: public void method_1 ( ) { type_1 < java.lang.object > var_1 = type_2. method_2 ( 0, new short [ 1 ], 1, 0, int_1, int_2 ) ; type_1 < java.lang.object > var_2 = type_2. method_2 ( 0, new short [ ] { int_2 } ) ; type_2. method_3 ( var_3, string_1, var_1, var_2 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1 , int_2 , int_3 ) ; type_1 var_2 = new type_1 ( int_1 , int_2 , int_3 ) ; var_1 . method_1 ( new type_2 ( 0 , 0 ) , var_2 ) ; var_2 . method_1 ( new type_2 ( 0 , int_4 ) , var_1 ) ; var_1 . method_2 ( 0 , 0 ) . method_3 ( var_1 , var_2 ) ; java.lang.system.out.println ( var_2 . method_2 ( 0 , int_4 ) ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; if ( ( ( value ) == 1 ) || ( ( value ) == int_1 ) ) { var_1 = string_2 ; } if ( ( value ) == int_2 ) { var_1 = string_3 ; } if ( ( value ) == int_3 ) { var_1 = string_4 ; } if ( ( value ) == int_4 ) { var_1 = string_5 ; } else { var_1 = value ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 id = var_1 . getid ( ) ; type_2 . assertnotnull ( id ) ; type_2 . assertequals ( type_3 . tostring ( ) , id . method_5 ( ) ) ; type_2 . method_3 ( type_4 . method_4 ( id . method_2 ( ) ) ) ; }
[0]: private synchronized void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; var_2. method_3 ( var_3, 1.0f ) ; var_2. method_3 ( string_1, var_4 ) ; var_2. method_3 ( string_2, height ) ; var_5 = var_2. method_4 ( var_6 ) ; if ( var_7 ) { var_2. method_3 ( var_6, new java.awt.color ( int_1, int_1, int_1, 0 ) ) ; } var_2. method_3 ( var_8, new java.lang.float ( var_9 ) ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int n = int_1 ; type_1 < java.lang.integer > var_1 = new type_1 < java.lang.integer > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( i % int_2 ) == 0 ) { var_1 . method_1 ( i ) ; } else { var_1 . method_2 ( i ) ; } } for ( java.lang.integer i : var_1 ) { java.lang.system.out.println ( i ) ; } }
[0]: private void method_1 ( java.lang.string var_1 ) throws type_1 { try { byte [ ] var_2 = var_1. method_2 ( ) ; int var_3 = var_2. length ; int var_4 = var_5. method_3 ( ) ; type_2 var_6 = new type_2 ( new java.io.fileoutputstream ( var_7, true ) ) ; method_4 ( var_2, var_3, var_4, var_6 ) ; var_6. method_5 ( ) ; } catch ( java.io.ioexception var_8 ) { throw new type_1 ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 node = new type_1 ( var_2 , var_1 ) . method_2 ( new type_2 ( getactivity ( ) , ( var_1 + string_1 ) ) ) ; node . method_3 ( false ) ; return node ; }
[0]: public type_1 method_1 ( int index ) throws type_2 { method_2 ( ) ; if ( ( index < ( var_1. length ) ) && ( index < 0 ) ) { update ( ) ; return type_1. method_3 ( var_1 [ index ] ) ; } else { return type_1. method_4 ( ) ; } }

************

************
tgt: public static java.io.file method_1 ( ) { try { return new java.io.file ( var_1 class . method_2 ( ) . method_3 ( ) . method_4 ( ) . method_5 ( ) ) . method_6 ( ) ; } catch ( type_1 var_2 ) { var_2 . method_7 ( ) ; } return null ; }
[0]: public void method_1 ( int [ ] var_1, int [ ] var_2, boolean var_3, int var_4, boolean var_5 ) { this. var_5 = var_5 ; var_6 = true ; var_7 = var_1 ; var_8 = var_2 ; this. var_3 = var_3 ; this. var_4 = var_4 ; }

************

************
tgt: protected type_1 method_1 ( ) { var_1 = new type_1 ( ) ; var_3 = new type_2 ( 0 , 0 , 0 , 1 ) ; var_1 . method_2 ( var_3 ) ; var_3 = new type_2 ( 0 , 0 , 0 , 1 ) ; var_1 . method_2 ( var_3 ) ; return var_1 ; }
[0]: public static void method_1 ( android.content.context context ) { new type_1 ( ). method_2 ( context ) ; new type_2 ( ). method_3 ( context ) ; new type_3 ( ). method_4 ( context, false ) ; new type_4 ( ). method_2 ( ) ; context. method_5 ( new android.content.intent ( context, var_1 class ) ) ; if ( context instanceof type_5 ) { ( ( type_5 ) ( context ) ). method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; var_3 . set ( null ) ; if ( ( var_1 ) == null ) { if ( var_2 ) type_1 . error ( this , string_1 ) ; return ; } var_1 . method_3 ( true ) ; var_1 = null ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.long var_2 = java.lang.long.parselong ( var_1 ) ; type_1. method_2 ( string_1, ( string_2 + var_2 ) ) ; if ( string_3. equals ( var_2 ) ) { return string_4 ; } type_2 var_3 = new type_2 ( string_5 ) ; java.util.date date = new java.util.date ( ( var_2 * int_1 ) ) ; return new type_2 ( string_6 ). format ( date ) ; }

************

************
tgt: public static void method_1 ( byte [ ] [ ] var_1 , int var_2 , int var_3 , int y ) { for ( int x = type_1 . min ( var_2 , var_3 ) ; x < ( ( type_1 . method_2 ( var_2 , var_3 ) ) + 1 ) ; x ++ ) { var_1 [ y ] [ x ] = ( ( byte ) ( var_4 ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( method_3 ( ) ) ; type_3 var_4 = ( ( type_3 ) ( method_4 ( var_5 ) ) ) ; var_4. method_5 ( var_3 ) ; int var_6 = getintent ( ). method_6 ( string_1, 0 ) ; method_7 ( var_7 [ var_6 ] ) ; var_4. method_8 ( var_6 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . i ( var_1 , string_1 ) ; if ( ( var_2 ) == false ) { type_1 . i ( var_1 , string_2 ) ; method_2 ( ) ; var_2 = true ; } if ( var_3 ) { type_1 . method_3 ( var_1 , string_3 ) ; } else { method_4 ( ) ; var_3 = true ; var_4 = new java.util.arraylist < > ( ) ; method_5 ( ) ; method_6 ( ) ; } }
[0]: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; if (! ( method_3 ( var_1 ) ) ) { return this ; } return! ( method_4 ( var_1 ) )? new type_3 ( var_2, var_3 ) : new type_4 ( var_2, var_3 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.object var_2 ) throws java.lang.exception { if ( var_2 instanceof java.util.collection < ? > ) { java.util.collection < ? > var_3 = ( ( java.util.collection < ? > ) ( var_2 ) ) ; for ( java.lang.object var_4 : var_3 ) { if ( var_4 != null ) { method_2 ( var_4 , var_1 ) ; } } } else { if ( var_2 != null ) { method_2 ( var_2 , var_1 ) ; } } }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { switch ( var_1 ) { case var_4 : { if ( ( ( var_3. length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_5 ) ) ) { var_6 = true ; } else { var_6 = false ; } return ; } } } }

************

************
tgt: protected boolean method_1 ( ) { var_1 = new type_1 ( ) ; var_1 . method_2 ( var_3 ) ; var_1 . method_3 ( ) ; var_2 = new java.lang.thread ( var_1 ) ; var_2 . method_4 ( ) ; if ( var_4 ) java.lang.system.out.println ( string_1 ) ; return true ; }
[0]: public boolean method_1 ( long var_1, long var_2, long var_3 ) { type_1 var_4 = method_2 ( var_1, var_2 ) ; if (! ( var_4. method_3 ( ) ) ) return false ; if ( method_4 ( var_4. method_5 ( ), var_3 ) ) { method_6 ( var_4. method_5 ( ), type_2. method_7 ( var_3 ) ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : var_2 . method_2 ( ) . method_3 ( ) ) { type_1 c = var_1 ; } type_2 . method_4 ( view . method_5 ( ) , string_1 ) ; method_6 ( ) ; if ( var_2 . method_7 ( ) ) { method_8 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( string_1 ), float_1 ) ; type_3 var_2 = var_3. method_2 ( var_1 ) ; type_4. assertthat ( var_2. method_3 ( ) ). method_4 ( var_4 ) ; type_4. assertthat ( var_2. method_5 ( ) ). method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { int [ ] var_2 = method_2 ( string_1 ) ; if ( var_2 == null ) return ; for ( int i = 0 ; i < ( var_1 . method_3 ( ) ) ; i ++ ) { var_1 . method_4 ( i ) . method_5 ( var_2 [ 0 ] , var_2 [ 1 ] ) ; } } }
[0]: public int compareto ( type_1 var_1 ) { if ( var_1 == null ) { return - 1 ; } if ( ( this. method_1 ( ) ) == ( var_1. method_1 ( ) ) ) { return ( this. method_1 ( ) ) - ( var_1. method_1 ( ) ) ; } else { int var_2 = this. method_2 ( ). method_3 ( ) ; int var_3 = var_1. method_2 ( ). method_3 ( ) ; return var_3 - var_2 ; } }

************

************
tgt: private type_1 [ ] method_1 ( ) { type_1 [ ] var_1 = ( ( type_1 [ ] ) ( new java.lang.object [ size ] ) ) ; type_2 < type_1 > . var_2 n = first ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_1 [ i ] = n . item ; n = var_3 ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; int result = var_2. method_2 ( view. method_3 ( ) ) ; if ( result == ( var_3 ) ) var_4. method_4 ( var_2. method_5 ( ). method_6 ( ) ) ; var_5. method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { var_1 . method_2 ( var_2 , ( ( string_1 + ( method_3 ( ) . method_4 ( string_2 ) ) ) + string_3 ) ) ; method_3 ( ) . method_5 ( string_2 , null ) ; type_2 . method_6 ( method_7 ( ) . method_3 ( ) . method_3 ( ) . getid ( ) , var_3 , false ) ; method_7 ( ) . method_8 ( ) . method_9 ( var_4 ) ; }
[0]: public static type_1 method_1 ( android.content.context context, int var_1, type_2 var_2 ) { type_3 var_3 = new type_3 ( context ) ; var_3. method_2 ( var_4 ) ; var_3. method_3 ( context. getstring ( var_5 ), null ) ; var_3. method_4 ( context. getstring ( var_6 ), var_2 ) ; return var_3. show ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; method_1 ( var_2 , var_1 . method_5 ( ) , ( ( var_1 . method_5 ( ) ) + ( var_4 . get ( var_2 ) . method_3 ( ) ) ) ) ; }
[0]: public type_1 execute ( ) { type_1 result = new type_1 ( ) ; type_2 var_1 = new type_2 ( ) ; for ( java.lang.class <? > var_2 : var_3 ) { java.util.list < java.lang.string > names = method_1 ( var_4, var_2 ) ; for ( java.lang.string var_5 : names ) { var_1. add ( new type_3 ( var_5 ) ) ; } var_1. method_2 ( result, var_2 ) ; } return result ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = this ; var_4 = ( ( type_2 ) ( method_3 ( var_5 ) ) ) ; var_6 = ( ( type_3 ) ( method_3 ( var_7 ) ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { final java.util.list < type_2 > list = var_1. method_2 ( ) ; method_3 ( list ) ; var_2 = list. get ( ( ( list. size ( ) ) - 1 ) ). getid ( ) ; ( ( android.widget.button ) ( method_4 ( var_3 ) ) ). settext ( method_5 ( ). getstring ( var_4, var_1. method_6 ( ) ) ) ; } }

************

************
tgt: void execute ( final java.util.list < type_1 > var_1 , final type_2 var_2 ) { java.util.list < type_2 > var_3 = new java.util.arraylist < type_2 > ( ) ; var_3 . add ( var_2 ) ; var_4 . method_1 ( var_5 , ( string_1 + ( var_2 . getname ( ) ) ) ) ; execute ( var_1 , var_3 ) ; }
[0]: private void method_1 ( ) { type_1 b = getintent ( ). method_2 ( ) ; if ( ( var_1 )!= null ) b = var_1 ; boolean var_2 = b. getboolean ( var_3 ) ; java.lang.string url = b. getstring ( var_4 ) ; if ( var_2 ) { var_5 = var_6 < type_2 > method_3 ( var_7 ) ; var_8 = true ; } else { var_5 = type_3. method_4 ( ). method_5 ( url ) ; var_8 = false ; } }

************

************
tgt: private java.lang.string method_1 ( java.util.map < java.lang.string , java.lang.object > var_1 ) { java.util.list < java.lang.string > var_2 = ( ( java.util.list < java.lang.string > ) ( var_1 . get ( string_1 ) ) ) ; if ( ( var_2 != null ) && ( ( var_2 . size ( ) ) >= int_1 ) ) { return var_2 . get ( 1 ) . tostring ( ) ; } else { return string_2 ; } }
[0]: private boolean method_1 ( type_1 id ) { java.lang.string var_1 = ( ( id. method_2 ( ) ) == null )? null : id. method_2 ( ). method_3 ( ) ; return ( ( var_1 == null ) || ( ( var_1. length ( ) ) == 0 ) ) || ( var_1. equals ( var_2. getname ( ) ) ) ; }

************

************
tgt: public type_1 get ( final type_2 var_1 ) throws java.io.ioexception { type_1 var_2 = this . var_3 . get ( var_1 ) ; if ( ( var_2 == null ) && ( var_1 instanceof type_3 ) ) { final type_4 var_4 ; try { var_4 = this . var_5 . get ( ( ( type_3 ) ( var_1 ) ) ) ; } catch ( type_5 var_6 ) { throw new java.io.ioexception ( var_6 ) ; } if ( var_4 != null ) { var_2 = new type_7 ( var_4 ) ; } } return var_2 ; }
[0]: public void set ( java.util.map < java.lang.string, type_1 > var_1, java.util.list < type_2 > var_2 ) { var_1. values ( ). method_1 ( type_3 : : method_2 ) ; step = new type_4 ( new java.util.hashmap < java.lang.string, type_1 > ( var_1 ) ) ; var_3. method_3 ( var_2 ) ; index = 0 ; }

************

************
tgt: public void method_1 ( short [ ] var_1 , byte [ ] var_2 , float [ ] var_3 , float [ ] var_4 ) { if ( ( this . var_5 ) != null ) { synchronized ( this . var_5 ) { this . var_5 . method_2 ( ) ; this . var_5 = null ; } } type_1 . method_3 ( new type_2 ( var_1 , var_3 ) ) ; }
[0]: public void method_1 ( ) { final type_1 var_1 = method_2 ( ) ; java.util.list < type_2 > var_2 = method_3 ( ) ; for ( type_2 var_3 : var_2 ) { for ( type_3 n : var_3. method_4 ( ) ) { method_5 ( n. method_6 ( ) ) ; } } var_1. delete ( var_4, null, null ) ; }

************

************
tgt: public void put ( type_1 key , type_2 data ) { java.lang.string var_1 = type_3 . method_1 ( key . tostring ( ) ) ; try { type_4 var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 != null ) { type_5 var_4 = var_2 . method_3 ( 0 ) ; var_5 . method_4 ( var_4 , data ) ; var_2 . commit ( ) ; } } catch ( java.io.ioexception var_6 ) { var_6 . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 source, type_2 event ) { switch ( event ) { case var_1 : method_2 ( ) ; break ; case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( ) ; break ; case var_4 : method_5 ( ) ; break ; case var_5 : method_6 ( ) ; break ; default : var_6. method_7 ( ( ( ( string_1 + event ) + string_2 ) + ( source. getname ( ) ) ) ) ; } }

************

************
tgt: public java.lang.object method_1 ( java.lang.string name ) { if ( ( ( type_1 . equals ( name ) ) == true ) && ( ( type_2 . method_2 ( ) ) != null ) ) { return var_1 . method_1 ( name , type_2 . method_2 ( ) . method_3 ( ) ) ; } else { return var_1 . method_1 ( name , super . method_1 ( name ) ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { if ( var_1 instanceof type_3 ) { type_3 value = ( ( type_3 ) ( var_1 ) ) ; return new type_4 ( getname ( ), value. getvalue ( ), method_2 ( ), method_3 ( ), method_4 ( ) ) ; } return this ; }

************

************
tgt: private boolean method_1 ( java.io.inputstream var_1 , type_1 var_2 ) throws java.lang.exception { type_2 var_3 = new type_2 ( new type_3 ( var_1 , string_1 ) ) ; try { return type_4 . method_2 ( var_3 , var_2 ) ; } finally { var_3 . method_3 ( ) ; } }
[0]: public int method_1 ( int var_1, int height ) { java.lang.string var_2 = java.lang.integer.tostring ( method_1 ( int_1 ) ) ; try { if ( ( ( java.lang.integer.parseint ( var_2 ) ) > var_1 ) || ( ( java.lang.integer.parseint ( var_2 ) ) > height ) ) throw new type_1 ( ) ; return java.lang.integer.parseint ( var_2 ) ; } catch ( type_1 var_3 ) { out. method_2 ( ( ( ( string_1 + var_1 ) + string_2 ) + height ) ) ; return method_1 ( var_1, height ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , int value ) { if ( value < 0 ) return false ; type_1 . method_2 ( ) . method_3 ( ) ; try { int var_2 = method_4 ( var_1 ) ; var_3 . put ( var_1 , ( var_2 + value ) ) ; return true ; } finally { method_5 ( string_1 , var_1 , string_2 , value ) ; type_1 . method_2 ( ) . method_6 ( ) ; } }
[0]: public void method_1 ( ) { this. index += 1 ; int var_1 = this. index ; while ( ( ( var_2. get ( var_1 ). var_3 ) >= ( this. var_3 ) ) && ( ( this. index ) < ( this. var_4 ) ) ) { this. index += 1 ; var_1 += 1 ; } this. index += 1 ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( ( ( var_2 ) <= ( var_3 ) ) && ( ( var_4 ) >= ( var_3 ) ) ) { var_1 = false ; } else { var_1 = true ; } this . var_1 = var_1 ; }
[0]: protected void method_1 ( android.view.view view ) { if ( ( view. method_2 ( ) )!= null ) ( ( type_1 ) ( view. method_2 ( ) ) ). method_3 ( view ) ; if ( ( var_1 )!= null ) ( ( android.widget.linearlayout ) ( var_1. method_4 ( var_2 ) ) ). method_3 ( view ) ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 , type_1 var_2 ) throws java.lang.exception { type_3 . add ( var_1 ) ; try ( type_2 var_3 = new type_2 ( new java.io.file ( ( ( ( ( var_4 ) + string_1 ) + var_1 ) + string_2 ) ) ) ) { var_2 . execute ( var_3 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1, java.lang.string var_2, java.util.date var_3, java.util.date var_4 ) { if ( type_2. isempty ( var_3 ) ) { var_3 = new java.util.date ( ) ; } if ( type_2. isempty ( var_4 ) ) { var_4 = new java.util.date ( ) ; } java.lang.string var_5 = type_2. method_2 ( ) ; return this. var_6. method_3 ( var_5, var_1, var_2, var_3, var_4 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 var_3 = null ; try { type_2 var_4 = new type_2 ( string_1 ) ; java.util.date var_5 = var_4 . method_2 ( var_1 ) ; var_3 = new type_1 ( var_5 . gettime ( ) ) ; } catch ( java.lang.exception var_6 ) { type_3 . method_3 ( string_2 , var_6 . tostring ( ) ) ; } return var_3 ; }
[0]: public void method_1 ( ) throws type_1, type_2 { try { this. var_1. method_2 ( null ) ; var_2. remove ( var_1. method_3 ( ) ) ; } catch ( type_1 | type_2 var_3 ) { java.lang.string var_4 = var_3. method_4 ( ) ; java.lang.string var_5 = string_1 ; asserttrue ( var_4. contains ( var_5 ) ) ; return ; } fail ( string_2 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) + ( var_2 ) ) > ( ( list . size ( ) ) - 1 ) ) { var_1 = ( var_1 ) % ( var_2 ) ; } else { var_1 = ( var_1 ) + ( var_2 ) ; } }
[0]: private type_1 method_1 ( java.lang.string var_1 ) throws type_2 { try { type_3 var_2 = var_3. method_2 ( this. var_4, var_5, var_1, var_6, var_7 ) ; java.lang.string var_8 = var_2. method_3 ( ) ; type_1 var_9 = ( ( type_1 ) ( type_4. method_4 ( var_8, new type_1 ( var_10 ) ) ) ) ; return var_9 ; } catch ( java.lang.exception var_11 ) { throw new type_2 ( var_12, var_11, ( ( string_1 + var_1 ) + string_2 ), string_3 ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string str , int i ) { try { java.net.url url = new java.net.url ( str ) ; java.io.file var_1 = method_2 ( url ) ; return method_3 ( i , var_1 . method_4 ( ) ) ; } catch ( type_2 var_2 ) { var_2 . method_5 ( ) ; } return null ; }
[0]: protected < type_1 extends type_2 > type_1 method_1 ( final java.lang.class < type_1 > var_1 ) throws type_3 { if ( var_1. equals ( var_2 class ) ) { return ( ( type_1 ) ( new type_4 ( var_3, var_4 ) ) ) ; } else { throw new type_3 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string id , java.lang.string var_1 , java.lang.string var_2 ) { if ( var_1 . equals ( var_2 ) ) { type_1 data = new type_1 ( string_1 , id , var_1 , 0 , 0 , 0 , 0 ) ; data = var_3 . method_2 ( data ) ; java.lang.system.out.println ( data . method_4 ( ) ) ; if ( data != null ) { var_4 . method_3 ( data . method_4 ( ) ) ; return ; } } var_4 . method_3 ( string_2 ) ; }
[0]: public void method_1 ( ) { method_2 ( ) ; var_1 = method_3 ( var_2, var_3, float_1 ) ; var_4 = method_3 ( var_2, var_3, float_2 ) ; var_5 = method_3 ( var_2, var_6, float_1 ) ; var_7 = method_3 ( var_2, var_6, float_3 ) ; var_8 = method_3 ( var_9, var_6, float_4 ) ; var_10 = type_1. method_4 ( var_1 ) ; var_11 = type_1. method_4 ( var_8 ) ; var_12 = new type_2 ( var_13 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) . method_4 ( this ) ; type_2 var_3 = ( ( type_2 ) ( method_5 ( var_4 ) ) ) ; method_6 ( var_3 ) ; method_7 ( ) . method_8 ( true ) ; var_5 . method_10 ( this ) ; }
[0]: public void method_1 ( ) { try { type_1 var_1 = new type_1 ( 1, 1 ) ; var_2 = new type_2 ( var_3, 1, 1, 0 ) ; assertequals ( var_1. method_2 ( ), var_2. method_3 ( ). method_2 ( ) ) ; assertequals ( var_1. method_4 ( ), var_2. method_3 ( ). method_4 ( ) ) ; } catch ( type_3 var_4 ) { fail ( ( string_1 + ( var_4. method_5 ( ) ) ) ) ; } }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { if ( var_1 == null ) { var_1 = new java.util.arraylist < > ( ) ; } var_2 = new type_2 ( this , var_1 ) ; type_3 var_3 = ( ( type_3 ) ( method_2 ( var_4 ) ) ) ; if ( var_3 != null ) { var_3 . method_3 ( var_2 ) ; } }
[0]: public int method_1 ( long id ) { type_1 var_1 = method_2 ( ) ; if ( var_1 == null ) return - 1 ; while ( var_1. method_3 ( ) ) { if ( ( var_1. method_4 ( 0 ) ) == id ) { return var_1. method_5 ( ) ; } } return - 1 ; }

************

************
tgt: private void method_1 ( short [ ] var_1 , byte [ ] var_2 , int var_3 , int end ) { int var_4 = var_3 ; int p = var_3 ; while ( p < end ) { short f = var_1 [ ( p ++ ) ] ; var_2 [ ( var_4 ++ ) ] = ( f <= ( - int_1 ) ) ? 0 : f >= int_2 ? - 1 : ( ( byte ) ( ( f + int_3 ) > > int_4 ) ) ; } }
[0]: public void start ( type_1 context ) throws java.lang.exception { super. start ( context ) ; var_1 = this ; var_2 = new type_2 ( context, var_3 class. getname ( ), null ) ; var_2. open ( ) ; var_4 = new type_2 ( context, var_5 class. getname ( ), null ) ; var_4. open ( ) ; method_1 ( ). method_2 ( var_6, var_7 ) ; }

************

************
tgt: public void method_1 ( java.lang.integer var_1 ) { for ( int i = 0 ; i <= ( var_1 + 1 ) ; i ++ ) { var_2 . add ( i ) ; } var_3 = var_1 ; var_5 . method_2 ( var_2 ) ; var_4 . method_3 ( var_5 ) ; var_6 . settext ( var_1 . tostring ( ) ) ; }
[0]: public java.util.list < java.lang.class <? extends type_1 > > method_1 ( ) { java.util.list < java.lang.class <? extends type_1 > > var_1 = new java.util.arraylist < java.lang.class <? extends type_1 > > ( ) ; var_1. add ( var_2 class ) ; var_1. add ( var_3 class ) ; var_1. method_2 ( new type_2 ( ). method_1 ( ) ) ; var_1. method_2 ( new type_3 ( ). method_1 ( ) ) ; return var_1 ; }

************

************
tgt: private static int method_1 ( byte [ ] var_1 ) { int start = var_2 ; int end = start + ( var_2 ) ; byte [ ] var_3 = new byte [ var_2 ] ; var_3 = type_1 . method_2 ( var_1 , start , end ) ; type_2 var_4 = type_2 . method_3 ( var_3 ) ; int var_5 = var_4 . getint ( ) ; return var_5 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; if ( method_2 ( ) ) { for ( type_1 var_1 : method_3 ( ) ) { type_2. method_4 ( var_1 ) ; } } else { for ( type_1 var_1 : method_5 ( ) ) { type_2. method_4 ( var_1 ) ; } } method_6 ( ) ; } }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , int var_3 , int var_4 ) { super . method_1 ( var_1 , var_2 , var_3 , var_4 ) ; var_5 . method_1 ( var_1 , var_2 ) ; var_6 . method_1 ( var_1 , var_2 , method_2 ( ) , method_3 ( ) , method_4 ( ) , method_5 ( ) ) ; var_7 . method_1 ( var_1 , var_2 ) ; }
[0]: public static double method_1 ( java.lang.string var_1, int n, int var_2 ) { double var_3 = 0.0 ; java.lang.double [ ] a = new java.lang.double [ n ] ; for ( int t = 0 ; ( i ) < var_2 ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } var_3 += type_1. time ( var_1, a ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.object > var_1 = type_2 . method_2 ( 0 , new short [ 1 ] , 1 , 0 , int_1 , ( ( short ) ( int_2 ) ) ) ; type_1 < java.lang.object > var_2 = type_2 . method_2 ( 0 , new short [ ] { int_2 } ) ; type_2 . method_3 ( var_3 , string_1 , var_1 , var_2 ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string filename ) { try { java.io.file file = method_2 ( var_2, filename ) ; java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( file ) ; var_1. method_3 ( var_4, int_1, var_3 ) ; var_3. method_4 ( ) ; var_3. method_5 ( ) ; var_1. method_6 ( ) ; return file. method_7 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_8 ( ) ; } return null ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; if ( ( ( value ) == 1 ) || ( ( value ) == int_1 ) ) { var_1 = string_2 ; } if ( ( value ) == int_2 ) { var_1 = string_3 ; } if ( ( value ) == int_3 ) { var_1 = string_4 ; } if ( ( value ) == int_4 ) { var_1 = string_5 ; } else { var_1 = string_1 + ( value ) ; } return var_1 ; }
[0]: public static void method_1 ( ) throws java.lang.classnotfoundexception { type_1 var_1 = var_2. method_2 ( string_1, string_2, type_2. method_3 ( string_3, string_4 ) ) ; var_3 = var_1. method_4 ( string_5 ) ; var_4 = ( ( java.lang.class < type_3 > ) ( var_1. method_4 ( string_6 ) ) ) ; }

************

************
tgt: private synchronized void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; var_2 . method_3 ( var_3 , 1.0f ) ; var_2 . method_3 ( string_1 , var_4 ) ; var_2 . method_3 ( string_2 , height ) ; var_5 = var_2 . method_4 ( var_6 ) ; if ( var_7 ) { var_2 . method_3 ( var_6 , null ) ; } var_2 . method_3 ( var_8 , new java.lang.float ( var_9 ) ) ; }
[0]: public java.lang.void method_1 ( ) throws java.lang.exception { try { type_1 c = new type_1 ( var_1, var_2, var_3 ) ; synchronized ( var_4 ) { var_4. add ( c ) ; } } catch ( java.lang.exception var_5 ) { type_2. method_2 ( string_1, var_5 ) ; } return null ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) throws type_1 { try { byte [ ] var_2 = var_1 . method_2 ( ) ; int var_3 = var_2 . length ; int var_4 = var_5 . method_3 ( ) ; type_2 var_6 = new type_2 ( new java.io.fileoutputstream ( var_7 ) ) ; method_4 ( var_2 , var_3 , var_4 , var_6 ) ; var_6 . method_5 ( ) ; } catch ( java.io.ioexception var_8 ) { throw new type_1 ( ) ; } }
[0]: public static java.util.collection < type_1 > method_1 ( type_2 var_1 ) { java.util.collection < type_1 > var_2 = null ; try { java.util.collection < type_3 > var_3 = var_1. method_2 ( var_4 ) ; for ( type_3 var_5 : var_3 ) { type_1 var_6 = type_1. method_3 ( var_5 ) ; var_2. add ( var_6 ) ; } } catch ( java.lang.exception var_7 ) { type_4. method_4 ( ). method_5 ( var_7. method_6 ( ) ) ; } return var_2 ; }

************

************
tgt: public type_1 method_1 ( int index ) throws type_2 { method_2 ( ) ; if ( ( index < ( var_1 . length ) ) && ( index > 0 ) ) { update ( ) ; return type_1 . method_3 ( var_1 [ index ] ) ; } else { return type_1 . method_4 ( ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { type_1. method_2 ( string_1 ) ; method_3 ( ) ; var_1 = null ; } if ( ( var_2 )!= null ) { var_2. method_4 ( ) ; } if ( ( var_3 )!= null ) { var_3. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( int [ ] var_1 , int [ ] var_2 , boolean var_3 , int var_4 , boolean var_5 ) { this . var_5 = var_5 ; if ( ( ( var_1 [ 0 ] ) != ( var_2 [ 0 ] ) ) || ( ( var_1 [ 1 ] ) != ( var_2 [ 1 ] ) ) ) { var_6 = true ; var_7 = var_1 ; var_8 = var_2 ; this . var_3 = var_3 ; this . var_4 = var_4 ; } }
[0]: public boolean method_1 ( java.lang.string var_1, int var_2 ) { for ( int var_3 = 0 ; var_3 < ( this. var_4. size ( ) ) ; var_3 ++ ) { type_1 var_5 = this. var_4. get ( var_3 ) ; if ( ( ( var_5. method_2 ( ) ) == var_1 ) && ( ( var_5. method_3 ( ) ) < var_2 ) ) { return true ; } else { return false ; } } return false ; }

************

************
tgt: public static void method_1 ( android.content.context context ) { new type_1 ( ) . method_2 ( context ) ; new type_2 ( ) . method_3 ( context ) ; new type_4 ( ) . method_2 ( ) ; new type_3 ( ) . method_4 ( context , false ) ; context . method_5 ( new android.content.intent ( context , var_1 class ) ) ; if ( context instanceof type_5 ) { ( ( type_5 ) ( context ) ) . method_6 ( ) ; } }
[0]: public void method_1 ( final type_1 var_1, final int var_2, final type_2 var_3 ) { final java.lang.integer var_4 = type_3. method_2 ( this. var_5, this. method_3 ( ), this. method_4 ( ), var_2 ) ; type_2 var_6 = var_3. method_5 ( ( ( var_4 - var_2 ) + 1 ), var_1. method_6 ( ) ) ; this. var_7 = var_6. method_7 ( ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.long var_2 = java.lang.long.parselong ( var_1 ) ; if ( string_3 . equals ( var_2 ) ) { return string_4 ; } type_2 var_3 = new type_2 ( string_5 ) ; java.util.date date = new java.util.date ( ( var_2 * int_1 ) ) ; return new type_2 ( string_6 ) . format ( date ) ; }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_2!= ( var_3 ) ) { return ; } if ( var_1 == ( var_4 ) ) { type_1 var_5 = ( ( type_1 ) ( data. method_2 ( var_6 ) ) ) ; method_3 ( var_5 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( method_3 ( ) ) ; type_3 var_4 = ( ( type_3 ) ( method_4 ( var_5 ) ) ) ; var_4 . method_5 ( var_3 ) ; int var_6 = getintent ( ) . method_6 ( string_1 , 0 ) ; var_4 . method_8 ( var_6 ) ; }
[0]: private int method_1 ( ) { int var_1 = ( var_2 ) / int_1 ; if ( ( var_1 % ( method_2 ( ) ) ) == 0 ) { return var_1 ; } while ( ( var_1 % ( method_2 ( ) ) ) == 0 ) { var_1 ++ ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; if ( ! ( method_3 ( var_1 ) ) ) { return ! ( method_4 ( var_1 ) ) ? this : new type_4 ( var_2 , var_3 ) ; } return ! ( method_4 ( var_1 ) ) ? new type_3 ( var_2 , var_3 ) : new type_4 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) <= ( var_3 ) ) { var_4. setenabled ( false ) ; var_2 += 1 ; var_5. method_2 ( ) ; var_6. method_3 ( ) ; method_4 ( ) ; } else { type_1. method_5 ( method_6 ( ), string_1, var_7 ). show ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_1 var_2 , float var_3 , float var_4 ) { if ( ( ( var_5 ) == null ) && ( ( var_6 ) == null ) ) { var_7 = false ; return true ; } var_7 = true ; method_2 ( var_1 , var_2 , var_3 ) ; return true ; }
[0]: protected void method_1 ( java.lang.void result ) { var_1. method_2 ( ) ; android.content.intent intent = new android.content.intent ( var_2 ) ; intent. method_3 ( string_1 ) ; intent. method_4 ( var_3, type_1. method_5 ( var_4 ) ) ; method_6 ( intent ) ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { switch ( var_1 ) { case var_4 : { if ( ( ( var_3 . length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_5 ) ) ) { var_6 = true ; } else { var_6 = false ; } } } }
[0]: public void method_1 ( android.content.context context, java.lang.string var_1 ) { android.content.intent var_2 = new android.content.intent ( var_3, type_1. method_2 ( string_1, var_4, null ) ) ; var_2. method_3 ( var_5, var_1 ) ; var_2. method_4 ( var_6 ) ; context. method_5 ( android.content.intent. method_6 ( var_2, context. getstring ( var_7 ) ) ) ; }

************

************
tgt: public boolean method_1 ( long var_3 , long var_1 , long var_2 ) { type_1 var_4 = method_2 ( var_1 , var_2 ) ; if ( ! ( var_4 . method_3 ( ) ) ) return false ; if ( method_4 ( var_3 , var_4 . method_5 ( ) ) ) { method_6 ( var_4 . method_5 ( ) , type_2 . method_7 ( var_3 ) ) ; return true ; } return false ; }
[0]: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { if (! ( var_1. isempty ( ) ) ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( ( var_1. get ( i ). method_2 ( var_2 ) )!= null ) { var_1. get ( i ). method_3 ( var_3, false ) ; } } } else { } } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( string_1 ) , float_1 ) ; type_3 var_2 = this . var_3 . method_2 ( var_1 ) ; type_4 . assertthat ( var_2 . method_3 ( ) ) . method_4 ( var_4 ) ; type_4 . assertthat ( var_2 . method_5 ( ) ) . method_6 ( ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 response, type_3 var_2 ) throws java.io.ioexception, type_4 { var_2. method_2 ( 0 ) ; var_3. remove ( type_5. method_3 ( var_2. getvalue ( ) ) ) ; response. method_4 ( var_2 ) ; type_6 var_4 = var_1. method_5 ( string_1 ) ; var_4. method_6 ( var_1, response ) ; }

************

************
tgt: public int compareto ( type_1 var_1 ) { if ( var_1 == null ) { return - 1 ; } if ( ( this . method_1 ( ) ) != ( var_1 . method_1 ( ) ) ) { return ( this . method_1 ( ) ) - ( var_1 . method_1 ( ) ) ; } else { int var_2 = this . method_2 ( ) . method_3 ( ) ; int var_3 = var_1 . method_2 ( ) . method_3 ( ) ; return var_3 - var_2 ; } }
[0]: public static boolean method_1 ( long number ) { if ( number <= 0 ) { throw new type_1 ( ( ( string_1 + number ) + string_2 ) ) ; } if ( ( number & ( - number ) ) == number ) { return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; int result = var_2 . method_2 ( view . method_3 ( ) ) ; if ( result == ( var_3 ) ) var_4 . method_4 ( var_2 . method_5 ( ) . method_6 ( ) ) ; var_5 . method_7 ( ( - 1 ) ) ; }
[0]: public void method_1 ( ) { try { method_2 ( ) ; var_1. method_3 ( ) ; } catch ( java.lang.exception var_2 ) { type_1. method_4 ( var_3, string_1 ) ; } java.lang.string var_4 = var_5. method_5 ( ) ; type_1. method_6 ( var_3, string_2 ) ; if ( var_4. equals ( string_3 ) ) { var_1. method_7 ( var_6, null ) ; } else { type_1. method_6 ( var_3, string_4 ) ; var_1. method_7 ( var_7, null ) ; } }

************

************
tgt: public static type_1 method_1 ( android.content.context context , int var_1 , type_2 var_2 ) { type_3 var_3 = new type_3 ( context ) ; var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( context . getstring ( var_5 ) , null ) ; var_3 . method_4 ( context . getstring ( var_6 ) , var_2 ) ; return var_3 . show ( ) ; }
[0]: public void method_1 ( java.lang.integer var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. put ( var_3, 1 ) ; type_2 var_4 = var_5. method_2 ( ) ; var_4. update ( var_6, var_2, string_1, new java.lang.string [ ] { var_1. tostring ( ) } ) ; var_4. method_3 ( ) ; }

************

************
tgt: public type_1 execute ( ) { type_1 result = new type_1 ( ) ; for ( java.lang.class < ? > var_2 : var_3 ) { type_2 var_1 = new type_2 ( ) ; java.util.list < java.lang.string > names = method_1 ( var_4 , var_2 ) ; for ( java.lang.string var_5 : names ) { var_1 . add ( new type_3 ( var_5 ) ) ; } var_1 . method_2 ( result , var_2 ) ; } return result ; }
[0]: private java.lang.class <? > method_1 ( java.util.set < java.lang.class <? > > set, java.lang.class <? > var_1 ) { java.lang.class <? > var_2 = null ; for ( java.lang.class <? > var_3 : set ) { if ( ( var_3. method_2 ( var_1 ) ) && ( ( var_2!= null ) && ( var_3. method_2 ( var_2 ) ) ) ) { var_2 = var_3 ; } } return var_2 == null? var_1 : var_2 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { final java.util.list < type_2 > list = var_1 . method_2 ( ) ; method_3 ( list ) ; var_2 = ( list . isempty ( ) ) ? null : list . get ( ( ( list . size ( ) ) - 1 ) ) . getid ( ) ; ( ( android.widget.button ) ( method_4 ( var_3 ) ) ) . settext ( method_5 ( ) . getstring ( var_4 , var_1 . method_6 ( ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = string_1 ; if ( var_1 == ( this. var_3 ) ) var_2 = this. getcontext ( ). getstring ( var_4 ) ; else if ( var_1 == ( this. var_5 ) ) var_2 = this. getcontext ( ). getstring ( var_6 ) ; type_1. method_2 ( this. getcontext ( ) ). method_3 ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { type_1 b = getintent ( ) . method_2 ( ) ; boolean var_2 = b . getboolean ( var_3 ) ; java.lang.string url = b . getstring ( var_4 ) ; if ( var_2 ) { var_5 = var_6 < type_2 > method_3 ( var_7 ) ; var_8 = true ; } else { var_5 = type_3 . method_4 ( ) . method_5 ( url ) ; var_8 = false ; } }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, java.util.arraylist < java.lang.string > var_3 ) { if ( ( ( ( var_1. method_2 ( ) ) == null ) || ( var_1. method_2 ( ). equals ( string_1 ) ) ) || ( var_1. method_2 ( ). equals ( java.lang.string. method_3 ( var_2. getid ( ) ) ) ) ) var_3. add ( var_1. method_4 ( ). tostring ( ) ) ; else { var_3. add ( var_4 ) ; } }

************

************
tgt: private boolean method_1 ( type_1 id ) { java.lang.string var_1 = ( ( id . method_2 ( ) ) == null ) ? null : id . method_2 ( ) . method_3 ( ) ; return ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) || ( var_1 . equals ( var_2 . getname ( ) ) ) ; }
[0]: private int method_1 ( int var_1, java.util.list < type_1 > var_2 ) { int var_3 = method_2 ( var_2 ) ; if ( var_3 > 0 ) var_1 += method_3 ( ). method_4 ( ) ; else if ( var_3 < 0 ) var_1 = var_1 - ( method_3 ( ). method_4 ( ) ) ; return var_1 ; }

************

************
tgt: public void set ( java.util.map < java.lang.string , type_1 > var_1 , java.util.list < type_2 > var_2 ) { var_1 . values ( ) . method_1 ( type_3 : : method_2 ) ; step = new type_4 ( new java.util.hashmap < java.lang.string , type_1 > ( var_1 ) ) ; var_3 . method_2 ( ) ; var_3 . method_3 ( var_2 ) ; index = 0 ; }
[0]: public < type_1 extends type_2 > type_1 method_1 ( type_3 response, java.lang.class < type_1 > var_1, int var_2 ) { type_4. assertnotnull ( response ) ; type_4. assertequals ( ( ( int ) ( var_2 ) ), response. method_2 ( ) ) ; java.lang.string var_3 = response. method_3 ( ). tostring ( ) ; type_1 var_4 = response. method_4 ( var_1 ) ; type_4. assertnotnull ( var_5 ) ; type_4. assertequals ( true, var_5 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = method_2 ( ) ; final java.util.list < type_2 > var_2 = this . method_3 ( ) ; for ( type_2 var_3 : var_2 ) { for ( type_3 n : var_3 . method_4 ( ) ) { this . method_5 ( n . method_6 ( ) ) ; } } var_1 . delete ( var_4 , null , null ) ; }
[0]: public boolean method_1 ( java.lang.object var_1 ) { try { if ( ( var_2 ) == null ) { if ( ( var_3 )!= null ) { var_3. method_2 ( ) ; var_3 = null ; } var_2 = method_3 ( var_4. method_4 ( ) ) ; } var_2. method_5 ( var_4 ) ; var_2. method_6 ( ) ; return true ; } catch ( java.io.ioexception var_5 ) { return false ; } } }

************

************
tgt: public void method_1 ( java.lang.string filename ) { type_1 var_1 = ( ( type_1 ) ( var_2 . method_2 ( ) ) ) ; if ( ( var_3 . get ( filename ) ) != null ) { for ( type_2 node : var_3 . get ( filename ) ) { var_1 . method_5 ( node ) ; var_3 . get ( filename ) . remove ( node ) ; } } }
[0]: public java.util.set < type_1 > method_1 ( type_2 var_1, java.util.random var_2, type_3 var_3, type_1 var_4 ) { type_4. method_2 ( var_1, var_2, var_3, var_4, height, var_5, 0, 0, null, 0 ) ; return type_4. method_3 ( var_1, var_2, var_3, var_4. add ( 0, height, 0 ), var_5, float_1, float_2, ( ( height ) / int_1 ), 1, float_2 ) ; }

************

************
tgt: public void method_1 ( type_1 source , type_2 event ) { switch ( event ) { case var_1 : break ; case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( ) ; break ; case var_4 : method_5 ( ) ; break ; case var_5 : method_6 ( ) ; break ; default : var_6 . method_7 ( ( ( ( string_1 + event ) + string_2 ) + ( source . getname ( ) ) ) ) ; } }
[0]: public static synchronized < type_1 > type_1 method_1 ( final java.lang.class < type_1 > var_1 ) { type_2. method_2 ( var_1 ) ; if ( var_2. method_3 ( var_1 ) ) { return ( ( type_1 ) ( var_2. get ( var_1 ). var_3 ) ) ; } else { return null ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { if ( var_1 instanceof type_3 ) { type_3 value = ( ( type_3 ) ( var_1 ) ) ; return new type_4 ( getname ( ) , method_2 ( ) , value . getvalue ( ) , method_3 ( ) , method_4 ( ) ) ; } return this ; }
[0]: private static void method_1 ( type_1 [ ] [ ] var_1, int var_2, int var_3, type_2 var_4, int var_5 ) { for ( int i = var_3 ; ( i - var_3 ) < var_5 ; ++ i ) { var_1 [ var_2 ] [ i ] = new type_1 ( var_4, var_2, i ) ; } }

************

************
tgt: public int method_1 ( int var_1 , int height ) { java.lang.string var_2 = java.lang.integer.tostring ( method_1 ( int_1 ) ) ; try { if ( ( ( java.lang.integer.parseint ( var_2 ) ) > var_1 ) || ( ( java.lang.integer.parseint ( var_2 ) ) > height ) ) throw new type_1 ( ) ; return java.lang.integer.parseint ( var_2 ) ; } catch ( type_1 var_3 ) { out . method_2 ( string_1 ) ; java.lang.system.out.println ( ( ( var_1 + string_2 ) + height ) ) ; return method_1 ( var_1 , height ) ; } }
[0]: public void method_1 ( ) throws type_1, type_2 { method_2 ( ) ; java.util.list < type_3 > var_1 = method_3 ( ) ; type_4 var_2 = new type_5 ( var_3, var_4, var_5, var_6, null ) ; java.util.set < type_3 > result = var_2. method_4 ( null, int_1 ) ; type_6. assertthat ( result, type_7. method_5 ( var_1. get ( 1 ), var_1. get ( int_2 ), var_1. get ( int_3 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { this . index += 1 ; int var_1 = this . index ; while ( ( ( this . index ) < ( this . var_4 ) ) && ( ( var_2 . get ( var_1 ) . var_3 ) >= ( this . var_3 ) ) ) { this . index += 1 ; var_1 += 1 ; } }
[0]: public boolean method_1 ( type_1 var_1, java.lang.string var_2, boolean var_3 ) { if (! var_3 ) { type_2 event = new type_2 ( var_1, var_2 ) ; type_3. method_2 ( ). method_3 ( event ) ; if ( event. method_4 ( ) ) { return false ; } } type_4 output = type_5. method_5 ( ) ; output. method_6 ( string_1 ) ; output. method_6 ( var_2 ) ; var_1. method_7 ( this, string_2, output. method_8 ( ) ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( view . method_2 ( ) ) != null ) ( ( type_1 ) ( view . method_2 ( ) ) ) . method_3 ( view ) ; ( ( android.widget.linearlayout ) ( var_1 . method_4 ( var_2 ) ) ) . method_3 ( view ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.hashmap < java.lang.string, java.lang.object > type_2 = ( ( java.util.hashmap < java.lang.string, java.lang.object > ) ( var_1. getvalue ( ) ) ) ; type_3. get ( var_2 ). var_3 = ( ( java.lang.string ) ( type_2. get ( string_1 ) ) ) ; type_3. get ( var_2 ). var_4 = ( ( java.util.arraylist < java.lang.string > ) ( type_2. get ( string_2 ) ) ) ; method_2 ( ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.util.date var_3 , java.util.date var_4 ) { if ( type_2 . isempty ( var_3 ) ) { var_3 = null ; } if ( type_2 . isempty ( var_4 ) ) { var_4 = null ; } java.lang.string var_5 = type_2 . method_2 ( ) ; return this . var_6 . method_3 ( var_5 , var_1 , var_2 , var_3 , var_4 ) ; }
[0]: public void method_1 ( java.util.list < java.lang.string > args ) { final java.lang.string message = args. method_2 ( ) ; if ( ( message. length ( ) ) > 0 ) { var_1. add ( message ) ; } else { java.lang.system.out.println ( string_2 ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { try { this . var_1 . method_2 ( null ) ; var_2 . remove ( var_1 . method_3 ( ) ) ; } catch ( type_1 | type_2 var_3 ) { java.util.arraylist < java.lang.string > var_4 = new java.util.arraylist ( java.util.arrays.aslist ( var_3 . method_4 ( ) . split ( "\n" ) ) ) ; java.lang.string var_5 = string_1 ; type_3 . asserttrue ( var_4 . contains ( var_5 ) ) ; return ; } type_3 . fail ( string_2 ) ; }
[0]: public final void method_1 ( final type_1 var_1, final java.util.list < type_1 > var_2 ) { java.util.list < type_1 > var_3 = var_1. method_2 ( ) ; java.util.list < type_1 > var_4 = new java.util.arraylist ( var_3 ) ; var_4. method_3 ( var_2 ) ; java.util.list < type_1 > var_5 = new java.util.arraylist ( var_2 ) ; var_5. method_3 ( var_3 ) ; for ( type_1 var_6 : var_4 ) { method_4 ( var_1, var_6 ) ; } for ( type_1 var_7 : var_2 ) { method_5 ( var_1, var_7 ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { try { type_3 var_2 = var_3 . method_2 ( this . var_4 , var_5 , var_1 , var_6 , var_7 ) ; java.lang.string var_8 = var_2 . method_3 ( ) ; type_1 var_9 = ( ( type_1 ) ( type_4 . method_4 ( var_8 , new type_1 ( var_10 ) ) ) ) ; return var_9 ; } catch ( java.lang.exception var_11 ) { throw new type_2 ( var_12 , var_11 , ( ( string_1 + var_1 ) + string_2 ) , string_3 ) ; } }
[0]: public static double method_1 ( int key ) { int var_1 = key % ( var_2 ) ; int var_3 = ( key / ( var_2 ) ) - 1 ; return ( var_4 [ var_1 ] ) * ( java.lang.math.pow ( float_1, ( ( ( double ) ( var_3 ) ) - 1.0 ) ) ) ; }

************

************
tgt: protected < type_1 extends type_2 > type_1 method_1 ( final java.lang.class < type_1 > var_1 ) throws type_3 { if ( var_1 . equals ( var_2 class ) ) { return ( ( type_1 ) ( new type_4 ( var_3 ) ) ) ; } else { throw new type_3 ( ) ; } }
[0]: public int method_1 ( byte [ ] var_1, double [ ] var_2, double var_3 ) throws java.lang.exception { int [ ] var_4 = new int [ ] { 0 } ; long var_5 = var_6. method_2 ( obj, var_1, var_2, ( ( long ) ( var_1. length ) ), ( ( long ) ( var_2. length ) ), var_3, var_4 ) ; type_1. method_3 ( var_4 ) ; return ( ( int ) ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; var_1 = method_3 ( var_2 , var_3 , float_1 ) ; var_4 = method_3 ( var_2 , var_3 , float_2 ) ; var_5 = method_3 ( var_2 , var_6 , float_1 ) ; var_7 = method_3 ( var_2 , var_6 , float_3 ) ; var_8 = method_3 ( var_2 , var_6 , float_4 ) ; var_10 = type_1 . method_4 ( var_1 ) ; var_11 = type_1 . method_4 ( var_8 ) ; var_12 = new type_2 ( var_13 ) ; }
[0]: private static type_1 method_1 ( final type_1 var_1 ) { return type_2. method_2 ( type_3. method_3 ( type_3. method_4 ( var_1 ) ), new type_4 < type_1 > ( ) { public boolean method_5 ( final type_1 data ) { return data. getname ( ). equals ( var_1. getname ( ) ) ; } } ) ; } }

************

************
tgt: public void method_1 ( ) { try { type_1 var_1 = new type_1 ( 1 , 1 ) ; var_2 = new type_2 ( var_3 , 1 , 1 , 1 ) ; assertequals ( var_1 . method_2 ( ) , var_2 . method_3 ( ) . method_2 ( ) ) ; assertequals ( var_1 . method_4 ( ) , var_2 . method_3 ( ) . method_4 ( ) ) ; } catch ( type_3 var_4 ) { fail ( ( string_1 + ( var_4 . method_5 ( ) ) ) ) ; } }
[0]: private < type_1 extends type_2 > type_1 method_1 ( java.lang.class < type_1 > var_1, type_3 < type_1 > var_2 ) { type_4 var_3 = method_2 ( ) ; if ( var_3 == null ) { return method_1 ( var_4, name, var_2, var_1 ) ; } java.lang.string var_5 = method_3 ( name, var_3 ) ; return method_1 ( var_4, var_5, var_2, var_1 ) ; }

************

************
tgt: public static int method_1 ( type_1 list , long id ) { if ( list == null ) return - 1 ; while ( list . method_3 ( ) ) { if ( ( list . method_4 ( 0 ) ) == id ) { return list . method_5 ( ) ; } } return - 1 ; }
[0]: public boolean method_1 ( android.view.view view, int x, int y ) { if ( view == null ) { return false ; } return ( ( ( x >= ( view. method_2 ( ) ) ) && ( x < ( ( view. method_2 ( ) ) + ( view. method_3 ( ) ) ) ) ) && ( y >= ( view. method_4 ( ) ) ) ) && ( y < ( ( view. method_5 ( ) ) + ( view. method_6 ( ) ) ) ) ; }

************

************
tgt: public void start ( type_1 context ) throws java.lang.exception { super . start ( context ) ; var_1 = this ; var_2 = new type_2 ( context , var_3 class . getname ( ) , null ) ; var_2 . open ( ) ; var_4 = new type_2 ( context , var_5 class . getname ( ) , null ) ; var_4 . open ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { var_2 = new java.util.arraylist < > ( ) ; int count = method_2 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { var_2. add ( null ) ; } } method_3 ( new type_2 ( ) ) ; }

************

************
tgt: public java.util.list < java.lang.class < ? extends type_1 > > method_1 ( ) { java.util.list < java.lang.class < ? extends type_1 > > var_1 = new java.util.arraylist < java.lang.class < ? extends type_1 > > ( ) ; var_1 . method_2 ( new type_2 ( ) . method_1 ( ) ) ; var_1 . method_2 ( new type_3 ( ) . method_1 ( ) ) ; var_1 . add ( var_2 class ) ; return var_1 ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2 = var_1 ; double var_3 = var_2. method_2 ( ) ; double var_4 = var_2. method_3 ( ) ; var_5. method_1 ( var_3, var_4 ) ; var_6 = var_5. method_4 ( var_6 ) ; method_5 ( ) ; var_7. settext ( ( ( var_3 + string_1 ) + var_4 ) ) ; var_8. settext ( ( ( ( ( string_2 + ( var_9 ) ) + string_3 ) + ( var_5. method_6 ( ) ) ) + string_4 ) ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; method_6 ( ) ; if ( method_2 ( ) ) { for ( type_1 var_1 : method_3 ( ) ) { type_2 . method_4 ( var_1 ) ; } } else { for ( type_1 var_1 : method_5 ( ) ) { type_2 . method_4 ( var_1 ) ; } } }
[0]: public boolean open ( int var_1 ) { try { var_2 = new type_1 ( ) ; var_2. method_1 ( true, 0 ) ; var_2. method_2 ( new type_2 ( type_3. method_3 ( ), var_1 ) ) ; } catch ( java.lang.exception var_3 ) { type_4. method_4 ( var_3 ) ; return false ; } return true ; }

************

************
tgt: public static double method_1 ( java.lang.string var_1 , int n , int var_2 ) { double var_3 = 0.0 ; java.lang.double [ ] a = new java.lang.double [ n ] ; for ( int t = 0 ; t < var_2 ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } var_3 += type_1 . time ( var_1 , a ) ; } return var_3 ; }
[0]: public static int method_1 ( int [ ] var_1, int var_2, int var_3 ) { int var_4 = 0 ; int [ ] var_5 = new int [ ] { var_2, var_3 } ; for ( int i = type_1. min ( var_5 ) ; i < ( ( type_1. method_2 ( var_5 ) ) + 1 ) ; i ++ ) { var_6. format ( string_1, i, var_2, var_3 ) ; var_4 = type_2. method_2 ( var_1 [ i ], var_4 ) ; } return var_4 ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string filename ) { try { java.io.file file = method_2 ( var_2 , filename ) ; java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( file ) ; var_1 . method_3 ( var_4 , int_1 , var_3 ) ; var_3 . method_4 ( ) ; var_3 . method_5 ( ) ; return file . method_7 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_8 ( ) ; } return null ; }
[0]: public boolean method_1 ( java.lang.string [ ] t ) { if ( ( this. var_1 ) == null ) return this. var_2 = false ; if ( this. var_2 = this. var_1. method_1 ( t ) ) ; this. method_2 ( ) ; method_3 ( new java.lang.object [ ] { this. var_1. getclass ( ), t } ) ; return var_2 ; } return false ; }

************

************
tgt: public static void method_1 ( ) throws java.lang.classnotfoundexception { type_1 var_1 = var_2 . method_2 ( string_1 , string_2 , method_3 ( string_3 , string_4 ) ) ; var_3 = var_1 . method_4 ( string_5 ) ; var_4 = ( ( java.lang.class < type_3 > ) ( var_1 . method_4 ( string_6 ) ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { java.io.file var_2 = new java.io.file ( var_1 ) ; type_2 var_3 = type_2. method_2 ( var_2 ) ; type_1 var_4 = null ; try { var_4 = var_3. method_3 ( var_2 ) ; } catch ( type_3 | java.io.ioexception var_5 ) { var_5. method_4 ( ) ; } var_2 = null ; var_3 = null ; return var_4 ; }

************

************
tgt: public java.lang.void method_1 ( ) throws java.lang.exception { try { type_1 c = new type_1 ( var_1 , var_2 , var_3 ) ; synchronized ( var_4 ) { var_4 . add ( c ) ; } } catch ( java.lang.exception var_5 ) { type_2 . method_2 ( string_1 , var_5 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { var_2 = ( ( type_2 ) ( var_3. method_2 ( ) ) ) ; if ( ( var_3. method_3 ( ) ) == 0 ) { type_3. method_4 ( this, string_1 ) ; return ; } java.lang.string var_4 ; int var_5 = var_3. method_5 ( ) ; var_4 = var_2. method_6 ( var_5, 0 ). tostring ( ) ; method_7 ( var_4 ) ; var_2. method_8 ( var_3. method_5 ( ) ) ; var_2 = null ; }

************

************
tgt: public static java.util.collection < type_1 > method_1 ( type_2 var_1 ) { java.util.collection < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; try { java.util.collection < type_3 > var_3 = var_1 . method_2 ( var_4 ) ; for ( type_3 var_5 : var_3 ) { type_1 var_6 = type_1 . method_3 ( var_5 ) ; var_2 . add ( var_6 ) ; } } catch ( java.lang.exception var_7 ) { type_4 . method_4 ( ) . method_5 ( var_7 . method_6 ( ) ) ; } return var_2 ; }
[0]: private void method_1 ( ) { for ( type_1 message : var_1 ) { if (! ( method_2 ( message ) ) ) { java.lang.string var_2 = getclass ( ). method_3 ( ) ; type_2. method_4 ( var_2, ( string_1 + message ) ) ; var_3. add ( message ) ; } } }

************

************
tgt: private void method_1 ( ) { if ( ( var_2 ) != null ) { var_2 . method_4 ( ) ; } if ( ( var_1 ) != null ) { type_1 . method_2 ( string_1 ) ; method_3 ( ) ; var_1 = null ; } if ( ( var_3 ) != null ) { var_3 . method_1 ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception, type_1 { this. var_1. method_2 ( ) ; this. var_1. method_3 ( ) ; type_2 var_2 = var_3. get ( 0 ) ; type_3 var_4 = var_2. method_4 ( var_5 class ) ; if ( var_4!= null ) { new type_4 ( ). method_5 ( var_6, var_4, new java.util.random ( ) ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , int var_2 ) { for ( int var_3 = 0 ; var_3 < ( this . var_4 . size ( ) ) ; var_3 ++ ) { type_1 var_5 = this . var_4 . get ( var_3 ) ; if ( ( var_5 . method_2 ( ) . equals ( var_1 ) ) && ( ( var_5 . method_3 ( ) ) < var_2 ) ) { return true ; } } return false ; }
[0]: private int method_1 ( type_1 type, type_1 var_1 ) { int count = 0 ; for ( type_2 var_2 : var_3. method_2 ( ) ) { if ( ( ( var_2. gettype ( ) ) == type ) && ( ( var_1 == null ) || ( ( var_2. method_3 ( ) ) == var_1 ) ) ) { count ++ ; } } return count ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final int var_2 , final type_2 var_3 ) { final java.lang.integer var_4 = type_3 . method_2 ( this . var_5 , this . method_3 ( ) , this . method_4 ( ) , ( var_2 - 1 ) ) ; type_2 var_6 = var_3 . method_5 ( ( ( var_4 - var_2 ) + 1 ) , var_1 . method_6 ( ) ) ; this . var_7 = var_6 . method_7 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( var_1 ) ; int var_3 = var_4. method_3 ( ) ; if ( ( var_3 % int_1 ) == 0 ) { var_2. method_4 ( method_5 ( ). getcolor ( var_5 ) ) ; } else { var_2. method_4 ( method_5 ( ). getcolor ( var_6 ) ) ; } var_4. method_6 ( var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_2 != ( var_3 ) ) { return ; } switch ( var_1 ) { case var_4 : type_1 var_5 = ( ( type_1 ) ( data . method_2 ( var_6 ) ) ) ; method_3 ( var_5 ) ; break ; default : method_3 ( ) ; break ; } }
[0]: public boolean method_1 ( boolean [ ] [ ] var_1, int var_2, boolean var_3 ) { if ( ( var_1 [ (! var_3? 1 : 0 ) ] [ ( var_2 - 1 ) ] ) && ( var_1 [ ( var_3? 1 : 0 ) ] [ ( var_2 - 1 ) ] ) ) return true ; return false ; }

************

************
tgt: private int method_1 ( ) { int var_1 = ( var_2 ) / int_1 ; if ( ( var_1 % ( method_2 ( ) ) ) == 0 ) { return var_1 ; } while ( ( var_1 % ( method_2 ( ) ) ) != 0 ) { var_1 ++ ; } return var_1 ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( var_2, var_3, var_4, var_5 ) ; if (! ( method_3 ( var_3 ) ) ) { method_4 ( var_1 ) ; } else { method_5 ( var_1 ) ; } var_6. method_6 ( var_7 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) < ( var_3 ) ) { var_4 . setenabled ( false ) ; var_2 += 1 ; var_5 . method_2 ( ) ; var_6 . method_3 ( ) ; method_4 ( ) ; } else { type_1 . method_5 ( method_6 ( ) , string_1 , var_7 ) . show ( ) ; } }
[0]: private void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { for ( int j = 0 ; j < int_1 ; j ++ ) { var_1 [ i ] [ j ]. method_2 ( ) ; } } var_2 = false ; var_3 = true ; } }

************

************
tgt: protected void method_1 ( java.lang.boolean result ) { var_1 . method_2 ( ) ; if ( result ) { android.content.intent intent = new android.content.intent ( var_2 ) ; intent . method_3 ( string_1 ) ; intent . method_4 ( var_3 , type_1 . method_5 ( var_4 ) ) ; method_6 ( intent ) ; } }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( var_3 ) ; for ( type_1 var_4 : var_2 ) { try { var_4. method_1 ( var_1, this ) ; } catch ( java.lang.exception var_5 ) { var_6. method_2 ( var_4. method_3 ( ) ) ; type_2. method_4 ( var_5 ) ; } } }

************

************
tgt: public void method_1 ( android.content.context context , java.lang.string var_1 ) { android.content.intent var_2 = new android.content.intent ( var_3 , type_1 . method_2 ( string_1 , var_4 , null ) ) ; var_2 . method_3 ( var_5 , var_1 ) ; var_2 . method_4 ( var_6 ) ; context . method_5 ( android.content.intent . method_6 ( var_2 , context . getstring ( var_7 ) ) . method_4 ( var_6 ) ) ; }
[0]: public void method_1 ( type_1 n, java.util.map < java.lang.string, type_1 > var_1 ) { type_1 var_2 = var_1. get ( n. method_2 ( ). tostring ( ) ) ; if ( ( var_2. method_3 ( ) ) > ( n. method_3 ( ) ) ) { var_1. remove ( var_2. method_2 ( ). tostring ( ) ) ; var_1. put ( n. method_2 ( ). tostring ( ), n ) ; } }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { if ( ! ( var_1 . isempty ( ) ) ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_3 ( var_3 , "false" ) ; } } else { } }
[0]: private void method_1 ( int var_1 ) { type_1 < type_2 > var_2 = new type_1 < type_2 > ( ) ; var_3. method_2 ( var_2 ) ; for ( int i = var_1 + 1 ; i < ( var_4. method_3 ( ) ) ; i ++ ) { var_2. set ( i, method_4 ( i ) ) ; } var_4. method_1 ( var_2 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 response , type_3 var_2 ) throws java.io.ioexception , type_4 { if ( var_2 != null ) { var_2 . method_2 ( 0 ) ; var_3 . remove ( type_5 . method_3 ( var_2 . getvalue ( ) ) ) ; response . method_4 ( var_2 ) ; } type_6 var_4 = var_1 . method_5 ( string_1 ) ; var_4 . method_6 ( var_1 , response ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; java.lang.string var_2 = string_2 ; boolean var_3 = var_4. method_2 ( var_1, var_2 ) ; asserttrue ( var_3 ) ; var_3 = var_4. method_2 ( var_2, var_1 ) ; asserttrue ( output ) ; }

************

************
tgt: public static boolean method_1 ( long number ) { if ( number < 0 ) { throw new type_1 ( ( ( string_1 + number ) + string_2 ) ) ; } if ( ( number & ( - number ) ) == number ) { return true ; } return false ; }
[0]: public boolean method_1 ( java.util.set < type_1 > var_1, type_1 var_2 ) { if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) { return true ; } java.util.iterator < type_1 > iterator = var_1. iterator ( ) ; while ( iterator. method_2 ( ) ) { type_1 var_3 = iterator. method_3 ( ) ; if ( var_3. method_4 ( var_2 ) ) { return false ; } } return true ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_3 ( ) ; method_2 ( ) ; } catch ( java.lang.exception var_2 ) { type_1 . method_4 ( var_3 , string_1 ) ; } java.lang.string var_4 = var_5 . method_5 ( ) ; type_1 . method_6 ( var_3 , string_2 ) ; if ( var_4 == string_3 ) { var_1 . method_7 ( var_6 , null ) ; } else { type_1 . method_6 ( var_3 , string_4 ) ; var_1 . method_7 ( var_7 , null ) ; } }
[0]: public java.util.list < type_1 > method_1 ( int num ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; this. method_2 ( this. var_2 ) ; this. method_3 ( ) ; for ( int i = 0 ; i < num ; i ++ ) { var_1. add ( this. var_2. get ( i ) ) ; } for ( type_1 var_3 : var_1 ) { java.lang.system.out.println ( var_3. method_4 ( ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( java.lang.integer var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . put ( var_3 , 1 ) ; type_2 var_4 = var_5 . method_2 ( ) ; var_4 . update ( var_6 , var_2 , string_1 , new java.lang.string [ ] { var_1 . tostring ( ) } ) ; }
[0]: public void method_1 ( final int var_1 ) { for ( int i = 0 ; i < ( var_2. method_2 ( ). method_3 ( var_1 ) ) ; i ++ ) { if ( ( var_2. method_2 ( ). method_4 ( var_1, i ) ) == null ) { java.lang.system.out.print ( var_3 ) ; } else { java.lang.system.out.print ( var_2. method_2 ( ). method_4 ( var_1, i ). tostring ( ) ) ; } } java.lang.system.out.println ( ) ; } }

************

************
tgt: private java.lang.class < ? > method_1 ( java.util.set < java.lang.class < ? > > set , java.lang.class < ? > var_1 ) { java.lang.class < ? > var_2 = null ; for ( java.lang.class < ? > var_3 : set ) { if ( ( var_3 . method_2 ( var_1 ) ) && ( ( var_2 == null ) || ( var_3 . method_2 ( var_2 ) ) ) ) { var_2 = var_3 ; } } return var_2 == null ? var_1 : var_2 ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || (! ( var_2 ) ) ) { if ( ( var_3 )!= null ) if ( ( ( ( type_1 ) ( var_3 ) ). var_4 )!= null ) ( ( type_1 ) ( var_3 ) ). var_4. method_2 ( ) ; else method_3 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = string_1 ; if ( var_1 == ( this . var_3 ) ) var_2 = this . getactivity ( ) . getstring ( var_4 ) ; else if ( var_1 == ( this . var_5 ) ) var_2 = this . getactivity ( ) . getstring ( var_6 ) ; type_1 . method_2 ( this . getactivity ( ) ) . method_3 ( var_2 ) ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { type_1 var_1 = new type_1 ( context ). method_2 ( var_2 ). method_3 ( true ). method_4 ( string_1 ). method_5 ( string_2 ). method_6 ( var_3 ) ; type_2 var_4 = ( ( type_2 ) ( context. method_7 ( var_5 ) ) ) ; var_4. method_8 ( 1, var_1. build ( ) ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 , java.util.arraylist < java.lang.string > var_3 ) { if ( ( ( ( var_1 . method_2 ( ) ) == null ) || ( var_1 . method_2 ( ) . equals ( string_1 ) ) ) || ( var_1 . method_2 ( ) . equals ( java.lang.string . method_3 ( var_2 . getid ( ) ) ) ) ) var_3 . add ( var_1 . method_4 ( ) . tostring ( ) ) ; else { var_3 . add ( var_4 ) ; } }
[0]: private boolean method_1 ( java.lang.class <? > var_1, final type_1 var_2 ) { for ( java.lang.class <? > c = var_1 ; ( var_3 class )!= c ; c = c. method_2 ( ) ) { for ( type_2 field : c. method_3 ( ) ) { if ( method_4 ( var_2, field ) ) return true ; } } return false ; } }

************

************
tgt: private int method_1 ( int var_1 , java.util.list < type_1 > var_2 ) { int var_3 = method_2 ( var_2 ) ; if ( var_3 > 0 ) { var_1 += method_3 ( ) . method_4 ( ) ; } else if ( var_3 < 0 ) { var_1 -= method_3 ( ) . method_4 ( ) ; } return var_1 ; }
[0]: private java.lang.string gettext ( final type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_1. method_1 ( var_3 ) ; java.lang.stringbuffer var_4 = new java.lang.stringbuffer ( ) ; for ( int i = 0 ; i < ( var_5. size ( ) ) ; i ++ ) { var_4. append ( var_5. get ( i ) ) ; } return var_4. tostring ( ) ; }

************

************
tgt: public < type_1 extends type_2 > type_1 method_1 ( type_3 response , java.lang.class < type_1 > var_1 , int var_2 ) { type_4 . assertnotnull ( response ) ; type_4 . assertequals ( response . method_3 ( ) . tostring ( ) , var_2 , response . method_2 ( ) ) ; type_1 var_4 = response . method_4 ( var_1 ) ; type_4 . assertnotnull ( var_5 ) ; type_4 . assertequals ( true , var_5 ) ; return var_4 ; }
[0]: public void method_1 ( int var_1 ) { var_2 += var_1 ; while ( ( var_2 ) > ( int_1 * ( this. method_2 ( ) ) ) ) { method_3 ( ( ( var_2 ) - ( int_1 * ( this. method_2 ( ) ) ) ) ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.object var_1 ) { try { if ( ( var_2 ) == null ) { if ( ( var_3 ) != null ) { var_3 . method_2 ( ) ; var_3 = null ; } var_2 = method_3 ( var_4 . method_4 ( ) ) ; } var_2 . method_5 ( var_1 ) ; var_2 . method_6 ( ) ; return true ; } catch ( java.io.ioexception var_5 ) { return false ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_1!= null ) { var_3. method_2 ( method_3 ( var_4, var_1, false ) ) ; } else { var_3. method_2 ( new type_3 ( var_5, ( ( path + char_1 ) + ( var_2. method_4 ( ) ) ) ) ) ; } }

************

************
tgt: public java.util.set < type_1 > method_1 ( type_2 var_1 , java.util.random var_2 , type_3 var_3 , type_1 var_4 ) { type_4 . method_2 ( var_1 , var_2 , var_3 , var_4 , height , var_5 , 0 , 0 , null , 0 ) ; return type_4 . method_3 ( var_1 , var_2 , var_3 , var_4 . add ( 0 , ( ( height ) - 1 ) , 0 ) , var_5 , float_1 , float_2 , ( ( height ) / int_1 ) , 1 , float_2 ) ; }
[0]: private void method_1 ( ) { int response = var_1. method_2 ( string_1, string_2 ) ; if ( response == ( var_2 ) ) { for ( type_1 var_3 : var_4 ) { java.io.file file = new java.io.file ( ( ( ( ( var_5 ) + ( var_3. getname ( ) ) ) + string_3 ) + ( var_6 ) ) ) ; method_3 ( var_3, file ) ; } } }

************

************
tgt: public static synchronized < type_1 > type_1 method_1 ( final java.lang.class < type_1 > var_1 ) { if ( var_2 . method_3 ( var_1 ) ) { return ( ( type_1 ) ( var_2 . get ( var_1 ) . var_3 ) ) ; } else { return type_2 . method_2 ( var_1 ) . var_3 ; } }
[0]: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 key = var_1. method_1 ( var_2, var_3, var_4, var_5 ) ; if ( var_6 ) { type_1 var_7 = keys. get ( key ) ; if ( var_7 == null ) { var_8. format ( string_1, var_1 ) ; } else { if (! ( var_1. equals ( var_7 ) ) ) { var_8. format ( string_2, var_7, var_1 ) ; } } } keys. put ( key, var_1 ) ; } }

************

************
tgt: private static void method_1 ( type_1 [ ] [ ] var_1 , int var_2 , int var_3 , type_2 var_4 , int var_5 ) { var_5 += var_3 ; for ( int i = var_3 ; i < var_5 ; ++ i ) { var_1 [ var_2 ] [ i ] = new type_1 ( var_4 , var_2 , i ) ; } }
[0]: private void method_1 ( ) { type_1. i ( string_1, string_2 ) ; type_2 var_1 = method_2 ( var_2, var_3 ) ; type_3 var_4 = var_1. method_3 ( ) ; var_4. method_4 ( string_3, string_4 ) ; var_4. method_4 ( string_5, var_5. method_5 ( ) ) ; var_4. method_6 ( string_6, var_6 ) ; var_4. commit ( ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { method_2 ( ) ; java.util.list < type_3 > var_1 = method_3 ( ) ; java.util.set < type_3 > result = var_2 . method_4 ( null , int_1 ) ; type_6 . assertthat ( result , type_7 . method_5 ( var_1 . get ( 1 ) , var_1 . get ( int_2 ) , var_1 . get ( int_3 ) ) ) ; }
[0]: public java.lang.string tostring ( final boolean var_1 ) { try { java.lang.string var_2 = var_3. tostring ( ). replaceall ( string_1, string_2 ) ; var_2 = var_2. replaceall ( string_2, string_1 ) ; return var_2 ; } catch ( final java.lang.nullpointerexception var_4 ) { } return null ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.string var_2 , boolean var_3 ) { if ( var_3 ) { type_2 event = new type_2 ( var_1 , var_2 ) ; type_3 . method_2 ( ) . method_3 ( event ) ; if ( event . method_4 ( ) ) { return false ; } } type_4 output = type_5 . method_5 ( ) ; output . method_6 ( string_1 ) ; output . method_6 ( var_2 ) ; var_1 . method_7 ( this , string_2 , output . method_8 ( ) ) ; return true ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1. gettime ( ) ) > ( var_2. gettime ( ) ) ) { return 1 ; } if ( ( var_2. gettime ( ) ) > ( var_1. gettime ( ) ) ) { return - 1 ; } return 0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.hashmap < java.lang.string , java.lang.object > type_2 = ( ( java.util.hashmap < java.lang.string , java.lang.object > ) ( var_1 . getvalue ( ) ) ) ; type_3 . get ( var_2 ) . var_3 = ( ( java.lang.string ) ( type_2 . get ( string_1 ) ) ) ; type_3 . get ( var_2 ) . var_4 = ( ( java.util.arraylist < java.lang.string > ) ( type_2 . get ( string_2 ) ) ) ; method_2 ( var_2 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 <? > var_1 = method_2 ( var_2 class ) ; assertequals ( 0, var_1. method_3 ( ). size ( ) ) ; assertequals ( int_1, var_1. method_4 ( ). size ( ) ) ; assertequals ( int_2, var_1. method_5 ( ). size ( ) ) ; assertequals ( string_1, var_1. method_6 ( ) ) ; }

************

************
tgt: public void method_1 ( java.util.list < java.lang.string > args ) { final java.lang.string message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length ( ) ) > 0 ) { var_1 . add ( message ) ; } else { java.lang.system.out.println ( string_2 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; java.lang.string var_3 = string_1 ; java.lang.string [ ] var_4 = var_1. split ( string_2 ) ; for ( int var_5 = 0 ; var_5 < ( var_4. length ) ; var_5 ++ ) { var_2. add ( method_2 ( var_4 [ var_5 ] ) ) ; var_3 += var_2. get ( var_5 ). method_3 ( ) ; } return var_3 ; }

************

************
tgt: public final void method_1 ( final type_1 var_1 , final java.util.list < type_1 > var_2 ) { java.util.set < type_1 > var_3 = var_1 . method_2 ( ) ; java.util.set < type_1 > var_4 = new java.util.hashset ( var_3 ) ; var_4 . method_3 ( var_2 ) ; java.util.set < type_1 > var_5 = new java.util.hashset ( var_2 ) ; var_5 . method_3 ( var_3 ) ; for ( type_1 var_6 : var_4 ) { method_4 ( var_1 , var_6 ) ; } for ( type_1 var_7 : var_5 ) { method_5 ( var_1 , var_7 ) ; } }
[0]: public void method_1 ( int i, double p ) { if ( ( this. var_1 )!= null ) { if ( i < ( this. var_1. length ) ) { this. var_1 [ i ] = p ; } } else if ( ( this. var_2 )!= null ) { if ( i < ( this. var_2. length ) ) { this. var_2 [ i ] = p ; } } throw new type_1 ( string_1 ) ; } }

************

************
tgt: private static double method_1 ( int key ) { int var_1 = key % ( var_2 ) ; int var_3 = ( key / ( var_2 ) ) - 1 ; return ( var_4 [ var_1 ] ) * ( java.lang.math.pow ( float_1 , ( ( ( double ) ( var_3 ) ) - 1.0 ) ) ) ; }
[0]: private void method_1 ( ) { android.view.view view = this. method_2 ( ) ; if ( view!= null ) { type_1 var_1 = ( ( type_1 ) ( method_3 ( var_2 ) ) ) ; var_1. method_4 ( view. method_5 ( ), 0 ) ; } if ( ( var_3. method_6 ( ) ) == ( var_4 ) ) { var_3. method_7 ( var_5 ) ; } else { var_3. method_7 ( var_6 ) ; } }

************

************
tgt: public int method_1 ( byte [ ] var_1 , double [ ] var_2 , double var_3 ) throws java.lang.exception { int [ ] var_4 = new int [ ] { 0 } ; long var_5 = var_6 . method_2 ( obj , var_1 , var_2 , var_1 . length , var_2 . length , var_3 , var_4 ) ; type_1 . method_3 ( var_4 ) ; return ( ( int ) ( var_5 ) ) ; }
[0]: public int method_1 ( char var_1 ) { int var_2 = - 1 ; switch ( var_1 ) { case char_1 : var_2 = 0 ; break ; case char_2 : var_2 = 1 ; break ; case char_3 : var_2 = int_1 ; break ; case char_4 : var_2 = int_2 ; break ; case char_5 : var_2 = int_3 ; default : throw new type_1 ( ( string_1 + var_1 ) ) ; } return var_2 ; }

************

************
tgt: public type_1 < java.lang.object , type_2 > method_1 ( boolean var_1 ) { type_3 < type_2 > var_2 = new type_3 < > ( ) ; for ( type_1 < ? , type_2 > var_3 : var_4 ) { var_2 . method_2 ( var_3 . method_1 ( var_1 ) ) ; } return var_2 ; }
[0]: public type_1 < type_2 > remove ( final type_3 <? super type_2 > var_1 ) { if ( ( var_1. method_1 ( ) )!= ( var_2 ) ) { throw new type_4 ( string_1 ) ; } var_3. remove ( var_1 ) ; return this ; }

************

************
tgt: private static type_1 method_1 ( final type_1 var_1 ) { return type_2 . method_2 ( type_3 . method_3 ( type_3 . method_4 ( var_1 ) ) , new type_4 < type_1 > ( ) { public boolean method_5 ( final type_1 data ) { return data . getname ( ) . equals ( var_1 . getname ( ) ) ; } } , null ) ; }
[0]: public void method_1 ( ) { while ( var_1. method_2 ( ) ) { } java.lang.system.out.println ( string_1 ) ; java.util.list < type_1 <?,? > > var_2 = var_3. end ( ) ; var_4. setstate ( var_5 ) ; var_6 = false ; type_2 var_7 = new type_2 ( this ) ; var_7. method_3 ( var_2 ) ; java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: private < type_1 extends type_2 > type_1 method_1 ( java.lang.class < type_1 > var_1 , type_3 < type_1 > var_2 ) { type_4 var_3 = method_2 ( ) ; if ( var_3 == null ) { return method_1 ( var_4 , name , var_2 , var_1 ) ; } java.lang.string var_5 = method_3 ( var_3 ) ; return method_1 ( var_4 , var_5 , var_2 , var_1 ) ; }
[0]: public void method_1 ( android.view.view view ) { if ( ( ( var_1 )!= null ) && (! ( var_1. method_2 ( ) ) ) ) { if ( ( var_2 ) >= ( var_3 ) ) { var_1. method_3 ( var_4 [ var_5 ], var_6, null, null ) ; } else { var_1. method_3 ( var_4 [ var_5 ], var_6, null ) ; } } }

************

************
tgt: public boolean method_1 ( android.view.view view , int x , int y ) { if ( view == null ) { return false ; } return ( ( ( x >= ( view . method_2 ( ) ) ) && ( x < ( ( view . method_2 ( ) ) + ( view . method_3 ( ) ) ) ) ) && ( y >= ( view . method_4 ( ) ) ) ) && ( y < ( ( view . method_4 ( ) ) + ( view . method_6 ( ) ) ) ) ; }
[0]: protected void method_1 ( java.lang.class <? > c ) { type_1 var_1 = null ; try { var_1 = c. method_2 ( ) ; } catch ( type_2 var_2 ) { fail ( ( string_1 + ( c. method_3 ( ) ) ) ) ; } asserttrue ( type_3. method_4 ( var_1. method_5 ( ) ) ) ; var_1. method_6 ( true ) ; try { var_1. method_7 ( ) ; } catch ( type_4 var_2 ) { fail ( string_2 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . size ( ) ) == 0 ) { int count = method_2 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { var_2 . add ( null ) ; } } method_3 ( new type_2 ( ) ) ; }
[0]: protected int method_1 ( java.io.file f ) { int id = method_2 ( ) ; type_1 file = new type_1 ( ) ; var_1 = id ; file. path = f. method_3 ( ) ; var_2 = f. method_4 ( ) ; var_3 = 1 ; return id ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 = var_1 ; double var_3 = var_2 . method_2 ( ) ; double var_4 = var_2 . method_3 ( ) ; var_5 . method_1 ( var_3 , var_4 ) ; var_6 = var_5 . method_4 ( var_6 ) ; method_5 ( ) ; var_8 . settext ( ( ( ( ( string_2 + ( var_9 ) ) + string_3 ) + ( var_5 . method_6 ( ) ) ) + string_4 ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1, java.lang.string var_2 ) throws type_3 { for ( type_1 var_3 : var_1. method_2 ( ) ) if ( var_2. equals ( var_3. getid ( ) ) ) return var_3 ; throw new type_3 ( ( ( string_1 + var_2 ) + string_2 ) ) ; }

************

************
tgt: public boolean open ( int var_1 ) { try { var_2 = new type_1 ( ) ; var_2 . method_1 ( true , 0 ) ; var_2 . method_2 ( new type_2 ( var_1 ) ) ; } catch ( java.lang.exception var_3 ) { type_4 . method_4 ( var_3 ) ; return false ; } return true ; }
[0]: public void method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1 } ; boolean var_2 = type_1. method_2 ( new type_2 < java.lang.string > ( type_3. method_3 ( var_1 ) ) ) ; type_4. method_4 ( var_3, ( string_2 + var_2 ) ) ; type_2 < java.lang.string > var_4 = type_1. method_5 ( ) ; type_4. method_4 ( var_3, ( string_3 + var_4 ) ) ; }

************

************
tgt: public static int method_1 ( int [ ] var_1 , int var_2 , int var_3 ) { int var_4 = 0 ; int [ ] var_5 = new int [ ] { var_2 , var_3 } ; for ( int i = type_1 . min ( var_5 ) ; i < ( ( type_1 . method_2 ( var_5 ) ) + 1 ) ; i ++ ) { var_4 = type_2 . method_2 ( var_1 [ i ] , var_4 ) ; } return var_4 ; }
[0]: public void init ( type_1 var_1 ) { if ( type_2. equals ( var_1. method_1 ( ) ) ) { var_2 = new type_3 ( null ) ; var_2. method_2 ( ). setvalue ( int_1 ) ; var_2. method_3 ( ). method_4 ( ). method_5 ( method_6 ( ) ) ; var_2. method_7 ( ( ( int ) ( var_1. getvalue ( ) ) ) ) ; node = var_2 ; } else { super. init ( var_1 ) ; node = super. method_8 ( ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string [ ] t ) { if ( ( this . var_1 ) == null ) return this . var_2 = false ; if ( this . var_2 = this . var_1 . method_1 ( t ) ) this . method_2 ( ) ; this . method_3 ( new java.lang.object [ ] { this . var_1 . getclass ( ) , t } ) ; return var_2 ; }
[0]: private void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = var_1. method_2 ( ). method_3 ( ) ; if ( string_1. method_4 ( var_2 ) ) var_1. method_5 ( var_3 ) ; else if ( string_2. method_4 ( var_2 ) ) var_1. method_5 ( var_4 ) ; else if ( string_3. method_4 ( var_2 ) ) var_1. method_5 ( var_5 ) ; else if ( string_4. contains ( var_2 ) ) var_1. method_5 ( var_6 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { java.io.file var_2 = new java.io.file ( var_1 ) ; type_2 var_3 = type_2 . method_2 ( var_2 ) ; try { var_4 = var_3 . method_3 ( var_2 ) ; } catch ( type_3 | java.io.ioexception var_5 ) { var_5 . method_4 ( ) ; } var_2 = null ; var_3 = null ; return var_4 ; }
[0]: public static java.util.list < type_1 > method_1 ( android.content.context context, java.lang.string var_1, java.lang.string var_2 ) { return type_2. method_2 ( new type_1 ( context. getstring ( var_3 ), type_3. method_3 ( var_2, var_1, var_4. open ) ), new type_1 ( context. getstring ( var_5 ), type_4. method_3 ( var_2, var_1, var_6 ) ) ). method_4 ( type_5. method_5 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 = ( ( type_2 ) ( var_3 . method_2 ( ) ) ) ; if ( ( var_3 . method_3 ( ) ) == 0 ) { type_3 . method_4 ( this , string_1 ) ; return ; } java.lang.string var_4 ; int var_5 = var_3 . method_5 ( ) ; var_4 = var_2 . method_6 ( var_5 , 0 ) . tostring ( ) ; method_7 ( var_4 ) ; var_2 . method_8 ( var_3 . method_5 ( ) ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_1 [ ] var_2, type_2 var_3, int var_4, int var_5 ) { for ( int i = 0 ; i < ( type_3. min ( var_2. length, int_1 ) ) ; i ++ ) { method_2 ( type_4. method_3 ( i ), var_1, var_2 [ i ], ( var_4 * int_2 ), ( var_5 / int_3 ), false ) ; } return method_4 ( var_1, var_2, var_3, var_4, var_5 ) ; }

************

************
tgt: private void method_1 ( ) { for ( type_1 message : var_1 ) { if ( ( ! ( method_2 ( message ) ) ) && ( ! ( var_3 . contains ( message ) ) ) ) { java.lang.string var_2 = getclass ( ) . method_3 ( ) ; type_2 . method_4 ( var_2 , ( string_1 + message ) ) ; var_3 . add ( message ) ; } } }
[0]: public boolean method_1 ( ) { if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( var_3 ) > 1 ) ) { ( var_3 ) -- ; if ( ( var_1 ) > ( var_2 ) ) { var_4 = ( var_1 ) - ( var_2 ) ; } var_1 = 0 ; return true ; } return false ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception , type_1 { this . var_1 . method_2 ( ) ; type_2 var_2 = var_3 . get ( 0 ) ; type_3 var_4 = var_2 . method_4 ( var_5 class ) ; if ( var_4 != null ) { new type_4 ( ) . method_5 ( var_6 , var_4 , new java.util.random ( ) ) ; } }
[0]: public static void method_1 ( type_1 var_1 ) { if ( var_1 == ( type_2. method_2 ( ) ) ) { var_2. method_3 ( ). method_4 ( var_3, var_1. method_5 ( ) ). method_6 ( ) ; type_2. method_7 ( var_1 ) ; } }

************

************
tgt: private int method_1 ( type_1 type , type_1 var_1 ) { int count = 0 ; for ( type_2 var_2 : this . var_3 . method_2 ( ) ) { if ( ( ( var_2 . gettype ( ) ) == type ) && ( ( var_1 == null ) || ( ( var_2 . method_3 ( ) ) == var_1 ) ) ) { count ++ ; } } return count ; }
[0]: private short [ ] method_1 ( type_1 var_1, int size ) throws java.io.ioexception { short [ ] var_2 = new short [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { var_2 [ i ] += ( var_1. method_2 ( ) ) < < int_1 ; var_2 [ i ] += var_1. method_2 ( ) ; } return var_2 ; }

************

************
tgt: type_2 method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( context , var_1 ) ; int var_3 = ( var_4 . method_3 ( ) ) - int_1 ; if ( ( var_3 % int_1 ) == 0 ) { var_2 . method_4 ( method_5 ( ) . getcolor ( var_5 ) ) ; } else { var_2 . method_4 ( method_5 ( ) . getcolor ( var_6 ) ) ; } var_4 . method_6 ( var_2 , var_3 ) ; return var_2 ; }
[0]: public void method_1 ( ) { int var_1 = 0 ; try { var_1 = var_2. method_2 ( string_1 ) ; } catch ( java.lang.exception var_3 ) { } if ( var_1 == int_1 ) { type_1 var_4 = method_3 ( ) ; method_4 ( var_4 ) ; } else { var_5. append ( var_2 ) ; } }

************

************
tgt: public boolean method_1 ( boolean [ ] [ ] var_1 , int var_2 , boolean var_3 ) { if ( var_2 == 0 ) return true ; if ( ( var_1 [ ( ! var_3 ? 1 : 0 ) ] [ ( var_2 - 1 ) ] ) && ( var_1 [ ( var_3 ? 1 : 0 ) ] [ ( var_2 - 1 ) ] ) ) return true ; return false ; }
[0]: public void method_1 ( ) { try { var_2. get ( var_1 ). method_2 ( 1 ) ; var_3. get ( var_4 ). method_2 ( 1 ) ; var_5. method_3 ( var_4 ) ; } catch ( type_1 var_6 ) { var_6. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_4 ) != null ) { type_1 var_1 = type_2 . method_2 ( var_2 , var_3 , var_4 , var_5 ) ; if ( ! ( method_3 ( var_3 ) ) ) { method_4 ( var_1 ) ; } else { method_5 ( var_1 ) ; } } var_6 . method_6 ( var_7 ) ; }
[0]: private boolean method_1 ( int [ ] var_1 ) { if ( ( var_1. length ) < 1 ) { return false ; } for ( int result : var_1 ) { if ( result!= ( var_2 ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { if ( ! ( var_2 ) ) { return ; } java.lang.string var_3 = var_4 . tostring ( ) ; var_5 . method_2 ( ( string_1 + ( var_6 ) ) ) ; if ( ( var_3 . length ( ) ) > 0 ) { var_5 . method_2 ( ( ( ( string_2 + ( method_3 ( ) ) ) + string_3 ) + var_3 ) ) ; } }
[0]: public void method_1 ( java.util.list < java.lang.string > args ) { final java.lang.string name = args. get ( 0 ) ; args. remove ( 0 ) ; if ( ( name. length ( ) ) > 0 ) { if ( ( context. method_4 ( name ) ) == null ) { java.lang.system.out.println ( string_2 ) ; } } else { java.lang.system.out.println ( string_3 ) ; } } }

************

************
tgt: private void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { for ( int j = 0 ; j < int_1 ; j ++ ) { var_1 [ i ] [ j ] . method_2 ( ) ; } } var_2 = false ; var_3 = true ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) throws java.lang.exception { var_3. info ( ( string_1 + ( var_1. method_2 ( ) ) ) ) ; this. method_3 ( var_2, var_1 ) ; var_1. method_4 ( var_1. method_5 ( ) ) ; java.util.list < type_4 > var_4 = var_5. method_6 ( var_1 ) ; var_3. info ( ( string_2 + ( var_4. size ( ) ) ) ) ; type_1 var_6 = new type_1 ( ) ; var_6. method_7 ( var_4 ) ; return var_6 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( var_3 ) ; for ( type_1 var_4 : var_2 ) { try { var_4 . method_1 ( var_1 , this ) ; } catch ( java.lang.exception var_5 ) { var_6 . method_2 ( var_4 . method_3 ( ) ) ; type_2 . method_4 ( var_5 ) ; } } }
[0]: public static type_1 method_1 ( ) { java.util.map < type_2, java.lang.integer > var_1 = type_3. method_2 ( ) ; for ( type_2 var_2 : type_2. values ( ) ) { var_1. put ( var_2, 1 ) ; } return new type_1 ( string_1, var_1, null, null ) ; }

************

************
tgt: public java.util.map < java.lang.string , type_1 > method_1 ( type_1 n , java.util.map < java.lang.string , type_1 > var_1 ) { type_1 var_2 = var_1 . get ( n . method_2 ( ) . tostring ( ) ) ; if ( ( var_2 . method_3 ( ) ) > ( n . method_3 ( ) ) ) { var_1 . remove ( var_2 . method_2 ( ) . tostring ( ) ) ; var_1 . put ( n . method_2 ( ) . tostring ( ) , n ) ; } return var_1 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = type_3. format ( string_1, var_1 ) ; type_4 var_3 = var_4. method_2 ( var_5, var_6, var_2 ) ; if ( ( var_3!= null ) && ( ( var_3. method_3 ( ) )!= null ) ) { type_5 var_7 = var_3. method_3 ( ) ; method_4 ( var_7 ) ; var_3. method_5 ( var_7 ) ; } return new type_1 ( var_3 ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { type_1 < type_2 > var_2 = new type_1 < type_2 > ( ) ; var_3 . method_2 ( var_2 ) ; for ( int i = var_1 - 1 ; i >= 0 ; i -- ) { var_2 . set ( i , method_4 ( i ) ) ; } var_4 . method_1 ( var_2 ) ; }
[0]: public void method_1 ( double var_1 ) { if ( ( java.lang.math.abs ( ( ( method_2 ( ) ) - var_1 ) ) ) <= float_1 ) { if ( ( method_2 ( ) ) <= 1.0 ) var_2. method_3 ( ) ; return ; } if ( ( method_2 ( ) ) < var_1 ) method_4 ( 0, 0 ) ; else method_5 ( 0, 0 ) ; method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; java.lang.string var_2 = string_2 ; boolean var_3 = var_4 . method_2 ( var_1 , var_2 ) ; asserttrue ( var_3 ) ; var_3 = var_4 . method_2 ( var_2 , var_1 ) ; asserttrue ( var_3 ) ; }
[0]: private static java.util.list < type_1 < type_2, type_2 > > method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.lang.exception { return type_3. method_2 ( new type_4 ( true ). method_1 ( type_5. method_3 ( string_1, null, null ), var_1. method_4 ( string_2 ), type_5. method_3 ( string_1, null, null ), var_2. method_4 ( string_2 ), string_2 ) ) ; }

************

************
tgt: public boolean method_1 ( java.util.set < type_1 > var_1 , type_1 var_2 ) { if ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) { return true ; } java.util.iterator < type_1 > iterator = var_1 . iterator ( ) ; while ( iterator . method_2 ( ) ) { type_1 var_3 = iterator . method_3 ( ) ; if ( ( var_3 != null ) && ( var_3 . method_4 ( var_2 ) ) ) { return false ; } } return true ; }
[0]: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : case 1 : return type_2. method_2 ( 1 ) ; case int_1 : return type_2. method_2 ( int_1 ) ; case int_2 : return type_3. method_2 ( int_3 ) ; default : return type_2. method_2 ( 1 ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( int num ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < num ; i ++ ) { var_1 . add ( this . var_2 . get ( i ) ) ; } for ( type_1 var_3 : var_1 ) { java.lang.system.out.println ( var_3 . method_4 ( ) ) ; } return var_1 ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { int end = ( var_1. method_2 ( var_2 ) ) + 1 ; if ( ( ( var_1. length ( ) ) - 1 ) > end ) { java.lang.string var_3 = java.lang.string. method_3 ( var_1. method_4 ( ( end + 1 ) ) ) ; if (! ( method_5 ( var_3 ) ) ) { end ++ ; } } return var_1. substring ( 0, end ) ; }

************

************
tgt: private void method_1 ( final int var_1 ) { for ( int i = 0 ; i < ( var_2 . method_2 ( ) . method_3 ( var_1 ) ) ; i ++ ) { if ( ( var_2 . method_2 ( ) . method_4 ( var_1 , i ) ) == null ) { java.lang.system.out.print ( var_3 ) ; } else { java.lang.system.out.print ( var_2 . method_2 ( ) . method_4 ( var_1 , i ) . tostring ( ) ) ; } } java.lang.system.out.println ( ) ; }
[0]: public void method_1 ( type_1 item ) { type_2 < type_1 > var_1 = var_2 ; while ( var_1!= null ) { type_2 < type_1 > var_3 = var_1. method_2 ( item ) ; if ( var_1 == var_3 ) { var_1. method_3 ( ) ; return ; } } }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ! ( var_2 ) ) ) { if ( ( var_3 ) != null ) { if ( ( ( ( type_1 ) ( var_3 ) ) . var_4 ) != null ) ( ( type_1 ) ( var_3 ) ) . var_4 . method_2 ( ) ; } else method_3 ( ) ; } }
[0]: public static boolean method_1 ( java.lang.string... names ) { for ( java.lang.string name : names ) { if (! ( type_1. method_2 ( name ) ) ) { return false ; } if (! ( type_1. method_3 ( name ). isempty ( ) ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { type_1 var_1 = new type_1 ( context ) . method_2 ( var_2 ) . method_4 ( string_1 ) . method_5 ( string_2 ) . method_6 ( var_3 ) ; type_2 var_4 = ( ( type_2 ) ( context . method_7 ( var_5 ) ) ) ; var_4 . method_8 ( 1 , var_1 . build ( ) ) ; }
[0]: private boolean method_1 ( type_1 list ) { if ( ( list. size ( ) ) < int_1 ) { return true ; } int var_1 = list. get ( 0 ) ; for ( int i = 1 ; i < ( list. size ( ) ) ; ++ i ) { int var_2 = list. get ( i ) ; if ( var_2 == ( var_1 - 1 ) ) { var_1 = var_2 ; continue ; } return false ; } return true ; }

************

************
tgt: private boolean method_1 ( java.lang.class < ? > var_1 , final type_1 var_2 ) { for ( java.lang.class < ? > c = var_1 ; ( null != c ) && ( ( var_3 class ) != c ) ; c = c . method_2 ( ) ) { for ( type_2 field : c . method_3 ( ) ) { if ( method_4 ( var_2 , field ) ) return true ; } } return false ; }
[0]: public void method_1 ( ) { for ( int i = int_1 ; i < int_2 ; i ++ ) { final java.lang.string result = var_1. method_2 ( 0 ) ; type_1. asserttrue ( ( ( result. length ( ) ) >= 1 ) ) ; } }

************

************
tgt: private java.lang.string gettext ( final type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_1 . method_1 ( var_3 ) ; java.lang.stringbuilder var_4 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < ( var_5 . size ( ) ) ; i ++ ) { var_4 . append ( var_5 . get ( i ) ) ; } return var_4 . tostring ( ) ; }
[0]: private void method_1 ( ) { if ( (! ( method_2 ( format ) ) ) && (! ( type_1. contains ( format ) ) ) ) { throw new type_2 ( java.lang.string.format ( string_1, format, type_3. method_3 ( char_1 ). method_4 ( type_1 ) ) ) ; } if ( ( var_1 )!= null ) { method_5 ( ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { var_2 += var_1 ; while ( ( var_2 ) >= ( int_1 * ( this . method_2 ( ) ) ) ) { method_3 ( ( ( var_2 ) - ( int_1 * ( this . method_2 ( ) ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 tmp = null ; try { tmp = var_1. method_2 ( type_3. method_3 ( var_2 ) ) ; type_4 type_5 = new type_4 ( tmp ) ; type_5. start ( ) ; } catch ( java.io.ioexception var_3 ) { type_6. method_4 ( method_5 ( ), string_1, var_4 ). show ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_1 != null ) { var_3 . method_2 ( method_3 ( var_1 , false ) ) ; } else { var_3 . method_2 ( new type_3 ( var_5 , ( ( path + char_1 ) + ( var_2 . method_4 ( ) ) ) ) ) ; } }
[0]: private type_1 < java.lang.string > method_1 ( java.lang.string path ) { type_1 < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; type_2 var_2 = var_3. method_2 ( new type_3 ( ). method_3 ( var_4 ). method_4 ( method_5 ( path ) ) ) ; for ( type_4 var_5 : var_2. method_6 ( ) ) { if (! ( var_5. method_7 ( ). equals ( method_5 ( path ) ) ) ) { var_1. add ( var_5. method_7 ( ) ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( ) { int response = var_1 . method_2 ( string_1 , string_2 ) ; if ( response == ( var_2 ) ) { for ( type_1 var_3 : var_4 ) { java.io.file file = new java.io.file ( ( ( ( ( var_5 ) + ( var_3 . getname ( ) ) ) + string_3 ) + ( var_6 ) ) ) ; method_3 ( var_3 , file ) ; } } }
[0]: public static void method_1 ( android.content.context context, int message, int var_1, int var_2, type_1 var_3 ) { type_2. method_1 ( context, message, var_1, var_2, var_3, new type_1 ( ) { public void method_2 ( type_3 var_4, int id ) { var_4. method_3 ( ) ; } } ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 key = var_1 . method_1 ( var_2 , var_3 , var_4 , var_5 ) ; if ( var_6 ) { type_1 var_7 = keys . get ( key ) ; if ( var_7 == null ) { } else { if ( ! ( var_1 . equals ( var_7 ) ) ) { } } } keys . put ( key , var_1 ) ; }
[0]: void method_1 ( type_1 var_1 ) { var_1. execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + string_3 ) + string_4 ) + string_5 ) + string_6 ) + string_7 ) + string_8 ) + string_9 ) + string_10 ) + string_11 ) + string_12 ) + string_13 ) + string_14 ) + string_15 ) ) ; var_1. execute ( string_16 ) ; }

************

************
tgt: private void method_1 ( ) { type_2 var_1 = method_2 ( var_2 , var_3 ) ; type_3 var_4 = var_1 . method_3 ( ) ; var_4 . method_4 ( string_3 , string_4 ) ; var_4 . method_4 ( string_5 , var_5 . method_5 ( ) ) ; var_4 . method_6 ( string_6 , var_6 ) ; var_4 . commit ( ) ; }
[0]: public type_1 method_1 ( int var_1, int height ) { double var_2 = ( 1 * ( this. var_1 ) ) / var_1 ; double var_3 = ( 1 * ( this. height ) ) / height ; return var_3 < var_2? new type_1 ( ( ( int ) ( var_1 * var_3 ) ), ( ( int ) ( height * var_3 ) ) ) : new type_1 ( ( ( int ) ( var_1 * var_2 ) ), ( ( int ) ( height * var_2 ) ) ) ; }

************

************
tgt: public java.lang.string tostring ( final boolean var_1 ) { try { final java.lang.string var_2 = var_3 . tostring ( ) . replaceall ( string_1 , string_2 ) ; return var_2 . replaceall ( string_2 , string_1 ) ; } catch ( final java.lang.nullpointerexception var_4 ) { } return null ; }
[0]: private void method_1 ( ) { var_1. put ( string_1, string_2 ) ; var_1. put ( string_3, string_4 ) ; var_1. put ( string_5, string_6 ) ; var_1. put ( string_7, string_8 ) ; var_1. put ( string_9, string_10 ) ; var_1. put ( string_11, string_12 ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 . gettime ( ) ) > ( var_2 . gettime ( ) ) ) { return - 1 ; } if ( ( var_2 . gettime ( ) ) > ( var_1 . gettime ( ) ) ) { return 1 ; } return 0 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return false ; } else if ( var_1 == null ) { return false ; } else { return! ( var_2. gettext ( ). tostring ( ). equals ( var_1. method_2 ( ) ) ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 < ? > var_1 = type_2 . method_2 ( var_2 class ) ; assertequals ( 0 , var_1 . method_3 ( ) . size ( ) ) ; assertequals ( int_1 , var_1 . method_4 ( ) . size ( ) ) ; assertequals ( 1 , var_1 . method_5 ( ) . size ( ) ) ; assertequals ( string_1 , var_1 . method_6 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : method_2 ( ) ; if (! ( var_3 ) ) { android.content.intent intent = new android.content.intent ( method_3 ( ), var_4 class ) ; method_4 ( intent ) ; method_5 ( ) ; } break ; case var_5 : var_6. show ( ) ; break ; case var_7 : var_8. show ( ) ; break ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; java.lang.string var_3 = string_1 ; java.lang.string [ ] var_4 = var_1 . split ( string_2 ) ; for ( int var_5 = 0 ; var_5 < ( var_4 . length ) ; var_5 ++ ) { var_2 . add ( new type_1 ( var_4 [ var_5 ] ) ) ; var_3 += var_2 . get ( var_5 ) . method_3 ( ) ; } return var_3 ; }
[0]: public int method_1 ( ) { var_1. method_2 ( float_1, float_1, float_1, 1 ) ; var_1. method_3 ( var_2 ) ; var_3. method_4 ( type_1. min ( var_4. method_5 ( ), ( 1 / float_2 ) ) ) ; var_3. method_6 ( ) ; if ( var_5 ) return num ; else return - 1 ; }

************

************
tgt: public void method_1 ( int i , double p ) { if ( ( this . var_1 ) != null ) { if ( i < ( this . var_1 . length ) ) { this . var_1 [ i ] = p ; return ; } } else if ( ( this . var_2 ) != null ) { if ( i < ( this . var_2 . length ) ) { this . var_2 [ i ] = p ; return ; } } throw new type_1 ( string_1 ) ; }
[0]: public void setstate ( type_1 var_1, type_2 state ) throws type_3 { java.util.list < type_4 > var_2 = var_3. method_1 ( null, null, null, var_1 ) ; if ( ( var_2 == null ) || ( ( var_2. size ( ) )!= 1 ) ) { java.lang.string msg = java.lang.string.format ( string_1, var_1 ) ; type_5. method_2 ( msg ) ; throw new type_3 ( msg ) ; } var_3. setstate ( var_2. get ( 0 ), state ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_3 . method_6 ( ) ) == ( var_4 ) ) { var_3 . method_7 ( var_5 ) ; } else { android.view.view view = this . method_2 ( ) ; if ( view != null ) { type_1 var_1 = ( ( type_1 ) ( method_3 ( var_2 ) ) ) ; var_1 . method_4 ( view . method_5 ( ) , 0 ) ; } var_3 . method_7 ( var_6 ) ; } }
[0]: public boolean method_1 ( type_1 var_1, java.lang.string title ) { if ( var_2. method_2 ( title ) ) { var_3. add ( var_2. get ( title ). get ( 0 ) ) ; var_2. get ( title ). remove ( 0 ) ; return true ; } else { java.lang.system.out.println ( string_1 ) ; return false ; } }

************

************
tgt: public int method_1 ( char var_1 ) { int var_2 = - 1 ; switch ( var_1 ) { case char_1 : var_2 = 0 ; break ; case char_2 : var_2 = 1 ; break ; case char_3 : var_2 = int_1 ; break ; case char_4 : var_2 = int_2 ; break ; case char_5 : var_2 = int_3 ; break ; default : throw new type_1 ( ( string_1 + var_1 ) ) ; } return var_2 ; }
[0]: public type_1 method_1 ( type_2 var_1, java.lang.string var_2, type_3 value, type_4 var_3, java.lang.string var_4 ) { type_5 <?,? > attribute = method_2 ( var_1, var_2, value, var_3, var_4 ) ; method_3 ( var_1, var_2, false ) ; method_4 ( attribute, true ) ; type_6 var_5 = new type_6 ( ) ; var_5. method_5 ( attribute ) ; return method_6 ( var_5, attribute ) ; }

************

************
tgt: public type_1 < type_2 > remove ( final type_3 < ? super type_2 > var_1 ) { if ( ! ( var_1 . method_1 ( ) . equals ( var_2 ) ) ) { throw new type_4 ( string_1 ) ; } var_3 . remove ( var_1 ) ; return this ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { var_3 = ( ( type_3 ) ( var_2 ) ). method_2 ( ) ; if (! ( var_3. method_3 ( ) ) ) { type_4. method_4 ( var_4, string_1 ) ; method_5 ( ) ; } if ( var_3. method_6 ( ) ) { var_5 = var_6 ; var_7. settext ( string_2 ) ; } }

************

************
tgt: public void method_1 ( ) { while ( var_1 . method_2 ( ) ) { } java.lang.system.out.println ( string_1 ) ; java.util.list < type_1 < ? , ? > > var_2 = var_3 . end ( ) ; var_4 . setstate ( var_5 ) ; var_6 = false ; type_2 var_7 = new type_2 ( this ) ; var_7 . method_3 ( var_2 ) ; java.lang.system.out.println ( string_2 ) ; return ; }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string [ ] var_2 ) { try { type_2 var_3 = method_2 ( var_1, var_2 ) ; var_4 = var_5. method_3 ( ) ; return var_3. execute ( var_2, var_4 ) ; } catch ( type_3 var_6 ) { return var_7 ; } catch ( type_4 var_8 ) { return var_9 = var_10 ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( ( var_1 ) != null ) && ( ! ( var_1 . method_2 ( ) ) ) ) { if ( ( var_2 ) >= ( var_3 ) ) var_1 . method_3 ( var_4 [ var_5 ] , var_6 , null , null ) ; } }
[0]: public static type_1 [ ] method_1 ( final type_1 [ ] var_1, final type_1... var_2 ) { final java.util.set < type_1 > var_3 = new java.util.hashset < > ( ( null!= var_1? java.util.arrays.aslist ( var_1 ) : var_4 < type_1 > method_2 ( ) ) ) ; if ( null!= var_2 ) { for ( type_1 var_5 : var_2 ) { var_3. add ( var_5 ) ; } } return var_3. method_3 ( var_6 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { var_1 = var_1 . replaceall ( string_1 , string_2 ) ; type_1 var_2 = new type_2 ( string_3 , var_3 ) ; try { java.util.date var_4 = var_2 . method_2 ( var_1 ) ; this . var_5 = var_4 ; } catch ( type_3 var_6 ) { var_6 . method_3 ( ) ; } }
[0]: private void method_1 ( java.lang.string filepath ) { type_1 var_1 = type_1. method_2 ( ) ; type_2 var_2 = new type_2 ( ) ; try { type_3 var_3 = var_1. method_3 ( ) ; var_3. method_4 ( filepath, var_2 ) ; } catch ( type_4 var_4 ) { var_4. method_5 ( ) ; } catch ( type_5 var_4 ) { var_4. method_5 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_5 ( ) ; } }

************

************
tgt: protected void method_1 ( java.lang.class < ? > c ) { type_1 var_1 = null ; try { var_1 = c . method_2 ( ) ; asserttrue ( type_3 . method_4 ( var_1 . method_5 ( ) ) ) ; var_1 . method_6 ( true ) ; try { var_1 . method_7 ( ) ; } catch ( type_4 var_2 ) { fail ( string_2 ) ; } } catch ( type_2 var_2 ) { fail ( ( string_1 + ( c . method_3 ( ) ) ) ) ; } }
[0]: public void method_1 ( android.view.view view ) { if ( status. equals ( var_1 ) ) { method_2 ( method_3 ( ) ) ; if (! ( method_4 ( ) ) ) { method_5 ( ) ; } } if ( status. equals ( var_2 ) ) { method_6 ( method_3 ( ) ) ; } if ( status. equals ( var_3 ) ) { } method_7 ( status ) ; } }

************

************
tgt: protected int method_1 ( java.io.file f ) { int id = method_2 ( ) ; type_1 file = new type_1 ( ) ; var_1 = id ; file . path = f . method_3 ( ) ; var_2 = f . method_4 ( ) ; var_3 = 1 ; list . add ( file ) ; return id ; }
[0]: public double method_1 ( ) { try { if ( ( ( var_1. method_2 ( int_1 ) ) > float_1 ) || ( ( var_1. method_2 ( int_1 ) ) < ( - float_1 ) ) ) return var_1. method_2 ( int_1 ) ; } catch ( java.lang.exception var_2 ) { } try { var_3. method_2 ( int_1 ) ; } catch ( java.lang.exception var_2 ) { } return 0.0 ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.lang.string var_2 ) throws type_3 { for ( type_1 var_3 : var_1 . method_2 ( ) ) if ( ( var_2 == null ) || ( var_2 . equals ( var_3 . getid ( ) ) ) ) return var_3 ; throw new type_3 ( ( ( string_1 + var_2 ) + string_2 ) ) ; }
[0]: public android.view.view getview ( int position, android.view.view var_1, type_1 var_2 ) { type_2 var_3 = new type_2 ( context ) ; type_3 var_4 = type_4. method_1 ( type_5. method_2 ( var_5. get ( position ) ), int_1, int_1 ) ; var_3. method_3 ( var_4 ) ; var_3. method_4 ( new type_6 ( int_2, int_2 ) ) ; var_3. method_5 ( var_6 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1 } ; boolean var_2 = type_1 . method_2 ( new java.util.arraylist < java.lang.string > ( java.util.arrays.aslist ( var_1 ) ) ) ; type_4 . method_4 ( var_3 , ( string_2 + var_2 ) ) ; java.util.list < java.lang.string > var_4 = type_1 . method_5 ( ) ; type_4 . method_4 ( var_3 , ( string_3 + var_4 ) ) ; }
[0]: public final type_1 method_1 ( ) { type_1 var_1 = new type_1 ( this ) ; method_2 ( var_1 ) ; if ( ( var_2. isempty ( ) ) && ( var_3. isempty ( ) ) ) { var_1. method_3 ( ) ; } else { var_1. method_4 ( ) ; var_1. append ( var_2 ) ; var_1. method_5 ( info ) ; var_1. method_6 ( this ) ; } return var_1 ; }

************

************
tgt: public void init ( type_1 var_1 ) { if ( type_2 . equals ( var_1 . method_1 ( ) ) ) { var_2 = new type_3 ( null ) ; var_2 . method_2 ( ) . setvalue ( int_1 ) ; method_6 ( ) . method_5 ( var_2 . method_3 ( ) . method_4 ( ) ) ; var_2 . method_7 ( ( ( int ) ( var_1 . getvalue ( ) ) ) ) ; node = var_2 ; } else { super . init ( var_1 ) ; node = super . method_8 ( ) ; } }
[0]: static final int method_1 ( type_1 var_1, type_2 var_2 ) { final type_3 var_3 = ( ( type_3 ) ( var_1. method_2 ( ) ) ) ; if ( ( var_1. method_3 ( ) ) && ( var_1. method_4 ( ) ) ) { return type_4. method_1 ( var_3. index, var_3. type, var_2 ) ; } else { return var_4 ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = var_1 . method_2 ( ) . method_3 ( ) ; if ( string_1 . method_4 ( var_2 ) ) var_1 . method_5 ( var_3 ) ; else if ( string_2 . method_4 ( var_2 ) ) var_1 . method_5 ( var_4 ) ; else if ( string_3 . method_4 ( var_2 ) ) var_1 . method_5 ( var_5 ) ; else if ( string_4 . method_4 ( var_2 ) ) var_1 . method_5 ( var_6 ) ; }
[0]: private static double method_1 ( java.lang.string query ) { type_1 result ; try ( type_2 var_1 = new type_2 ( ) ) { result = var_1. query ( query ) ; result. method_2 ( ) ; return result. method_1 ( 1 ) ; } catch ( java.lang.exception var_2 ) { var_2. method_3 ( ) ; return - int_1 ; } }

************

************
tgt: public static java.util.list < type_1 > method_1 ( android.content.context context , java.lang.string var_1 , java.lang.string var_2 ) { return type_2 . method_2 ( new type_1 ( context . getstring ( var_3 ) , type_3 . method_3 ( var_2 , var_1 ) ) , new type_1 ( context . getstring ( var_5 ) , type_4 . method_3 ( var_2 , var_1 ) ) ) . method_4 ( type_5 . method_5 ( ) ) ; }
[0]: private static void method_1 ( java.lang.string var_1, type_1 var_2 ) throws java.io.ioexception, type_2 { type_3. method_2 ( var_3 ) ; type_4. method_3 ( new type_5 ( var_1 ), new type_5 ( var_3 ), true ) ; var_2. method_4 ( var_3, var_4 ) ; type_3. method_2 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_1 [ ] var_2 , type_2 var_3 , int var_4 , int var_5 ) { for ( int i = 0 ; i < ( type_3 . min ( var_2 . length , int_1 ) ) ; i ++ ) { method_2 ( ( i + 1 ) , var_1 , var_2 [ i ] , ( var_4 * int_2 ) , ( var_5 / int_3 ) , false ) ; } return method_4 ( var_1 , var_2 , var_3 , var_4 , var_5 ) ; }
[0]: public void method_1 ( int var_1, type_1 [ ] var_2, type_2 response ) { type_3. i ( string_1, response. tostring ( ) ) ; try { java.lang.string token = response. getstring ( string_2 ). tostring ( ) ; type_4. method_2 ( token ) ; type_3. method_3 ( string_3, token ) ; } catch ( type_5 j ) { j. method_4 ( ) ; } }

************

************
tgt: public boolean method_1 ( ) { if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( var_3 ) >= 1 ) ) { ( var_3 ) -- ; if ( ( var_1 ) > ( var_2 ) ) { var_4 = ( var_1 ) - ( var_2 ) ; } var_1 = 0 ; return true ; } return false ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( this. var_2. title, this. var_3, this. type ) ; if ( ( this. var_4 )!= null ) { var_5 = new java.util.arraylist < > ( this. var_4. size ( ) ) ; this. var_4. method_2 ( ( var_6 ) - > var_5. add ( var_6. method_1 ( ) ) ) ; } return var_1 ; }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { if ( var_1 != ( type_2 . method_2 ( ) ) ) { var_2 . method_3 ( ) . method_4 ( var_3 , var_1 . method_5 ( ) ) . method_6 ( ) ; type_2 . method_7 ( var_1 ) ; } }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( ) ) { var_1. method_1 ( ) ; var_2. method_3 ( var_3 ) ; var_4 = new type_1 ( ) ; final type_2 var_5 = new type_2 ( ) { public void method_4 ( ) { method_5 ( ) ; this. method_6 ( ) ; } } ; var_4. method_7 ( var_5, var_6 ) ; method_8 ( ) ; } if ( var_7. method_9 ( ) ) var_7. method_10 ( ) ; } }

************

************
tgt: private short [ ] method_1 ( type_1 var_1 , int size ) throws java.io.ioexception { short [ ] var_2 = new short [ size ] ; int i = 0 ; while ( i < size ) { var_2 [ i ] |= ( var_1 . method_2 ( ) ) < < int_1 ; var_2 [ ( i ++ ) ] |= var_1 . method_2 ( ) ; } return var_2 ; }
[0]: public static < type_1 > type_1 method_1 ( java.lang.string var_1, java.lang.class < type_1 > var_2 ) { try { type_2 p = new type_2 ( var_3 ) ; return p. method_1 ( var_1, var_4. method_2 ( var_2 ) ) ; } catch ( java.lang.exception var_5 ) { var_5. method_3 ( ) ; return null ; } }

************

************
tgt: public boolean method_1 ( ) { int var_1 = 0 ; try { var_1 = var_2 . method_2 ( string_1 ) ; } catch ( java.lang.exception var_3 ) { } if ( var_1 == int_1 ) { type_1 var_4 = method_3 ( ) ; method_4 ( var_4 ) ; return true ; } else { var_5 . append ( var_2 ) ; return false ; } }
[0]: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { type_2 var_3 = var_4. method_2 ( new type_3 ( ). position ( var_2. method_3 ( ) ). method_4 ( type_4. method_5 ( var_5 ) ). title ( var_2. getname ( ) ) ) ; var_6. put ( var_3, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { try { var_2 . get ( 1 ) . method_2 ( ) ; var_3 . get ( 1 ) . method_2 ( ) ; var_5 . method_3 ( 1 ) ; } catch ( type_1 var_6 ) { var_6 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == ( type_2. method_2 ( ) ) ) { for ( type_1 a : var_3 ) { if ( a. equals ( var_1 ) ) { var_3. remove ( a ) ; break ; } } if ( var_3. isempty ( ) ) { var_4. method_3 ( true ) ; } var_4. method_4 ( true, true ) ; } } }

************

************
tgt: public boolean method_1 ( int [ ] var_1 ) { if ( ( var_1 . length ) < 1 ) { return false ; } for ( int result : var_1 ) { if ( result != ( var_2 ) ) { return false ; } } return true ; }
[0]: public void method_1 ( java.lang.throwable var_1 ) { type_1. method_2 ( ( string_1 + var_1 ) ) ; var_1. method_3 ( ) ; var_2. method_4 ( false ) ; if ( var_1 instanceof type_2 ) { var_2. method_5 ( true ) ; } else if ( var_1 instanceof type_3 ) { var_2. method_5 ( false ) ; var_2. method_6 ( var_3 ) ; } else { var_2. method_5 ( false ) ; } }

************

************
tgt: public void method_1 ( java.util.list < java.lang.string > args ) { final java.lang.string name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length ( ) ) > 0 ) { if ( ( context . method_4 ( name ) ) == null ) { java.lang.system.out.println ( string_2 ) ; } } else { java.lang.system.out.println ( string_3 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) throws type_2 { type_1 data = var_1. method_2 ( string_1 ) ; if ( ( var_2 )!= null ) { type_3 message = new type_3 ( var_1, getcontext ( ) ) ; var_2. method_3 ( message ) ; } else { type_3 message = new type_3 ( data ) ; var_2. method_3 ( message ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 ) throws java.lang.exception { this . method_3 ( var_2 , var_1 ) ; var_1 . method_4 ( var_1 . method_5 ( ) ) ; java.util.list < type_4 > var_4 = var_5 . method_6 ( var_1 ) ; var_3 . info ( ( string_2 + ( var_4 . size ( ) ) ) ) ; type_1 var_6 = new type_1 ( ) ; var_6 . method_7 ( var_4 ) ; return var_6 ; }
[0]: public synchronized void method_1 ( ) { while ( var_1. method_2 ( ) ) { var_1. method_1 ( ) ; var_2. method_3 ( ) ; } while ( ( ( var_3 )!= null ) && ( var_3. method_2 ( ) ) ) { var_3. method_1 ( ) ; } }

************

************
tgt: public static type_1 method_1 ( ) { java.util.map < type_2 , java.lang.integer > var_1 = type_3 . method_2 ( ) ; for ( type_2 var_2 : type_2 . values ( ) ) { var_1 . put ( var_2 , 1 ) ; } return new type_1 ( string_1 , var_1 , null ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = method_3 ( ) ; if ( var_3!= null ) { var_3. show ( ) ; } var_4 = ( ( type_3 ) ( method_4 ( var_5 ) ) ) ; var_4. method_5 ( this ) ; method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = type_3 . format ( string_1 , var_1 ) ; type_4 var_3 = var_4 . method_2 ( var_5 , var_6 , var_2 ) ; if ( ( var_3 != null ) && ( ( var_3 . method_3 ( ) ) != null ) ) { method_4 ( var_3 . method_3 ( ) ) ; } return new type_1 ( var_3 ) ; }
[0]: public void method_1 ( type_1 <? extends java.lang.string > var_1, java.lang.string var_2, java.lang.string var_3 ) { if ( var_3. method_2 ( string_1 ) ) { var_4 = java.lang.integer.parseint ( var_3 ) ; } else { var_5. settext ( var_2 ) ; } var_6 = java.lang.integer.parseint ( var_5. gettext ( ) ) ; }

************

************
tgt: public void method_1 ( double var_1 ) { if ( ( method_2 ( ) ) > var_1 ) { while ( ( method_2 ( ) ) > var_1 ) method_5 ( 0 , 0 ) ; } else { while ( ( method_2 ( ) ) < var_1 ) method_4 ( 0 , 0 ) ; } if ( ( method_2 ( ) ) <= 1.0 ) var_2 . method_3 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1 ) ; type_1 var_2 = type_2. method_3 ( ) ; java.lang.integer count = var_2. method_4 ( null, null, null, null, null, null, int_1, null, null, false, null ) ; type_3. assertequals ( 1, count. intvalue ( ) ) ; }

************

************
tgt: private static java.util.list < type_1 < type_2 , type_2 > > method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.lang.exception { return type_3 . method_2 ( new type_4 ( ) . method_1 ( type_5 . method_3 ( string_1 , null , null ) , var_1 . method_4 ( string_2 ) , type_5 . method_3 ( string_1 , null , null ) , var_2 . method_4 ( string_2 ) , string_2 ) ) ; }
[0]: public android.view.view getview ( int var_1, android.view.view var_2, type_1 p ) { type_2 view = new type_2 ( this ) ; view. method_1 ( int_1 ) ; if ( ( var_3 )!= null ) { view. settext ( ( ( java.lang.string ) ( var_3. get ( var_1 ) ) ) ) ; } else { view. settext ( var_1 ) ; } return view ; }

************

************
tgt: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return type_2 . method_2 ( 1 ) ; case 1 : return type_2 . method_2 ( int_1 ) ; case int_1 : return type_3 . method_2 ( int_3 ) ; default : return type_2 . method_2 ( 1 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_1 var_2 ) { var_1. method_2 ( ( ( string_1 + ( this. method_3 ( ) ) ) + string_2 ) ) ; type_2 var_3 = var_4. method_4 ( null, int_1, ( string_3 + ( var_2. getname ( ) ) ) ) ; this. var_5. put ( var_1. getname ( ), new type_3 ( var_2, var_3 ) ) ; var_1. method_5 ( var_3 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { int end = ( var_1 . method_2 ( var_2 ) ) + 1 ; if ( ( var_1 . length ( ) ) > end ) { java.lang.string var_3 = java.lang.string . method_3 ( var_1 . method_4 ( end ) ) ; if ( method_5 ( var_3 ) ) { end ++ ; } } return var_1 . substring ( 0 , end ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1, string_2, string_3 } ; method_2 ( var_1 ). method_3 ( ( var_2 ) - > assertthat ( java.lang.string.format ( string_4, var_2 ), method_4 ( var_2 ), method_5 ( method_6 ( string_5 ) ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 item ) { type_2 < type_1 > var_1 = var_2 ; while ( var_1 != null ) { type_2 < type_1 > var_3 = var_1 . method_2 ( item ) ; if ( var_1 == var_3 ) { var_1 . method_3 ( ) ; return ; } else var_1 = var_3 ; } }
[0]: public void method_1 ( ) { method_2 ( int_1 ) ; method_3 ( var_1 ) ; var_1 = method_4 ( var_1, ( ( var_2 ) - ( var_3 ) ), var_3, var_4, string_1 ) ; var_5 = method_4 ( var_5, var_3, var_3, var_6, string_2 ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string ... names ) { for ( java.lang.string name : names ) { if ( ! ( type_1 . method_2 ( name ) ) ) { return false ; } if ( type_1 . method_3 ( name ) . isempty ( ) ) { return false ; } } return true ; }
[0]: private void method_1 ( ) { if ( var_1. isempty ( ) ) { var_2 = - 1 ; } var_2 = ( var_1. get ( ( ( var_1. size ( ) ) - 1 ) ). method_2 ( ) ) - ( var_1. get ( 0 ). method_2 ( ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 list ) { if ( ( list . size ( ) ) < int_1 ) { return true ; } int var_1 = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size ( ) ) ; ++ i ) { int var_2 = list . get ( i ) ; if ( var_2 == ( var_1 + 1 ) ) { var_1 = var_2 ; continue ; } return false ; } return true ; }
[0]: private type_1 method_1 ( ) { var_1 = var_2 ; type_2 var_3 = method_2 ( ) ; var_4. method_3 ( ( ( ( ( ( ( ( ( ( string_1 + ( type_3. method_4 ( var_5 ) ) ) + string_2 ) + ( var_6 ) ) + string_3 ) + ( ( var_7 ) + 1 ) ) + string_4 ) + ( type_3. method_5 ( var_8 ) ) ) + string_5 ) ) ; return new type_1 ( var_3, var_5 ) ; }

************

************
tgt: public void method_1 ( ) { for ( int i = int_1 ; i < int_2 ; i ++ ) { final java.lang.string result = var_1 . method_2 ( i ) ; type_1 . asserttrue ( ( ( result . length ( ) ) <= i ) ) ; type_1 . asserttrue ( ( ( result . length ( ) ) > 0 ) ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { int var_1 = var_2. method_2 ( 1 ). method_3 ( ) ; type_1. asserttrue ( string_1, ( var_1 == 0 ) ) ; var_2. method_1 ( 1, int_1 ) ; var_1 = var_2. method_2 ( 1 ). method_3 ( ) ; type_1. asserttrue ( string_2, ( var_1 == 1 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( ! ( method_2 ( format ) ) ) && ( ! ( type_1 . contains ( format ) ) ) ) { throw new type_2 ( java.lang.string.format ( string_1 , format , type_3 . method_3 ( char_1 ) . method_4 ( type_1 ) ) ) ; } method_5 ( ) ; }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string url, java.lang.string var_2 ) { var_3 = new android.content.intent ( getactivity ( ), var_4 class ) ; var_3. method_2 ( string_1, var_1 ) ; var_3. method_2 ( string_2, url ) ; var_3. method_2 ( string_3, var_2 ) ; getactivity ( ). method_3 ( var_3 ) ; var_5. method_4 ( var_3 ) ; type_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 tmp = null ; try { tmp = var_1 . method_2 ( type_3 . method_3 ( var_2 ) ) ; type_4 type_5 = new type_4 ( tmp ) ; type_5 . start ( ) ; } catch ( java.io.ioexception var_3 ) { } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, type_1 var_4 ) throws type_2 { switch ( var_3 ) { case string_1 : var_5 = var_4. getvalue ( ) ; break ; case var_6 : var_7 = string_2 ; var_8 = true ; break ; } var_9 = var_3 ; if ( var_8 ) { var_7 += java.lang.string.format ( string_3, var_3, tostring ( var_4 ) ) ; } }

************

************
tgt: public boolean method_1 ( ) { for ( type_1 var_1 : var_2 . method_2 ( ) ) { if ( ( ( ( ( var_1 . method_3 ( ) ) > ( var_3 [ 0 ] . length ) ) || ( ( var_1 . method_4 ( ) ) > ( var_3 . length ) ) ) || ( ( var_1 . method_3 ( ) ) < 0 ) ) || ( ( var_1 . method_4 ( ) ) < 0 ) ) return false ; } return true ; }
[0]: private java.util.list < java.lang.integer > method_1 ( java.util.list < java.lang.integer > var_1 ) { java.util.arraylist < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( var_3 ) ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_2. add ( i ) ; } type_1. method_2 ( var_2 ) ; var_1 = var_2. method_3 ( 0, var_4 ) ; return var_1 ; }

************

************
tgt: private java.util.list < java.lang.string > method_1 ( java.lang.string path ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; type_2 var_2 = var_3 . method_2 ( new type_3 ( ) . method_3 ( var_4 ) . method_4 ( method_5 ( path ) ) ) ; for ( type_4 var_5 : var_2 . method_6 ( ) ) { if ( ! ( var_5 . method_7 ( ) . equals ( method_5 ( path ) ) ) ) { var_1 . add ( var_5 . method_7 ( ) ) ; } } return var_1 ; }
[0]: public void update ( long var_1, long var_2, double var_3, double var_4 ) { double var_5 = var_1 / var_2 ; x += ( var_6 ) * var_5 ; y += ( var_7 ) * var_5 ; var_6 += ( var_8 ) * var_5 ; var_7 += ( var_9 ) * var_5 ; var_8 = ( var_3 / ( var_10 ) ) / ( var_10 ) ; var_9 = ( var_3 / ( var_10 ) ) / ( var_10 ) ; }

************

************
tgt: public static void method_1 ( android.content.context context , int title , int message , int var_1 , int var_2 , type_1 var_3 ) { type_2 . method_1 ( context , context . getstring ( title ) , context . getstring ( message ) , var_1 , var_2 , var_3 , new type_1 ( ) { public void method_2 ( type_3 var_4 , int id ) { var_4 . method_3 ( ) ; } } ) ; }
[0]: public void execute ( type_1 var_1 ) { java.lang.string var_2 = var_1. method_1 ( string_1 ) ; long var_3 = var_1. method_2 ( string_2 ) ; float value = var_1. method_3 ( string_3 ) ; if ( var_4. contains ( var_2 ) ) { if ( var_5 ) { var_6. method_4 ( var_3 ) ; var_5 = false ; } var_7. method_5 ( new type_2 ( var_2, var_3, value ) ) ; } } }

************

************
tgt: void method_1 ( type_1 var_1 ) { var_1 . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + string_3 ) + string_4 ) + string_5 ) + string_6 ) + string_7 ) + string_8 ) + string_9 ) + string_10 ) + string_11 ) + string_12 ) + string_13 ) + string_14 ) ) ; var_1 . execute ( string_16 ) ; }
[0]: public int method_1 ( int target ) throws java.io.ioexception { int var_1 = var_2. method_1 ( target ) ; if ( var_1 == ( var_3 ) ) { return var_1 ; } var_4 = method_2 ( ) ; if ( ( var_4 ) < ( var_5 ) ) { return var_2. method_3 ( ) ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( int var_1 , int height ) { double var_2 = ( 1.0 * ( this . var_1 ) ) / var_1 ; double var_3 = ( 1.0 * ( this . height ) ) / height ; return var_3 < var_2 ? new type_1 ( ( ( int ) ( var_1 * var_3 ) ) , ( ( int ) ( height * var_3 ) ) ) : new type_1 ( ( ( int ) ( var_1 * var_2 ) ) , ( ( int ) ( height * var_2 ) ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { try { type_2 var_2 = ( ( type_2 ) ( var_1. method_2 ( string_1 ) ) ) ; type_3 var_3 = var_2. method_3 ( ) ; } catch ( type_4 var_4 ) { var_5. error ( string_2 ) ; } catch ( type_5 var_4 ) { var_5. error ( string_3 ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . put ( string_1 , string_2 ) ; var_1 . put ( string_3 , string_4 ) ; var_1 . put ( string_5 , string_6 ) ; var_1 . put ( string_7 , string_8 ) ; var_1 . put ( string_9 , string_10 ) ; }
[0]: private boolean method_1 ( android.content.context var_1 ) { type_1 var_2 = type_1. get ( var_1 ) ; try { for ( type_2 var_3 : var_2. method_2 ( ) ) { if ( var_4. method_3 ( string_1 ) ) { return true ; } } } catch ( java.lang.exception var_5 ) { type_3. method_4 ( var_6, string_2 ) ; return false ; } return false ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return false ; } else if ( var_1 == null ) { return false ; } else { return ! ( var_2 . tostring ( ) . equals ( var_1 . method_2 ( ) ) ) ; } }
[0]: private void method_1 ( ) { var_1 = null ; for ( type_1 var_2 : var_3 ) { if ( ( var_2. method_2 ( ) ) && ( ( ( var_1 ) == null ) || ( ( var_1. method_3 ( ) ) > ( var_2. method_3 ( ) ) ) ) ) { var_1 = var_2 ; } } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : method_2 ( ) ; break ; case var_5 : var_6 . show ( ) ; break ; case var_7 : var_8 . show ( ) ; break ; } }
[0]: public int method_1 ( ) { try { for ( int i = 0 ; ( ( data )!= null ) && ( i < ( data. size ( ) ) ) ; i ++ ) { type_1 var_1 = data. get ( i ) ; if ( ( var_1!= null ) && ( ( var_2 ) == ( var_3 ) ) ) { return i ; } } } catch ( java.lang.exception var_1 ) { } return - 1 ; } }

************

************
tgt: public int method_1 ( ) { var_1 . method_2 ( float_1 , float_1 , float_1 , 1 ) ; var_1 . method_3 ( var_2 ) ; var_3 . method_4 ( type_1 . min ( var_4 . method_5 ( ) , ( 1 / float_2 ) ) ) ; var_3 . method_6 ( ) ; return num ; }
[0]: private java.lang.string method_1 ( ) { byte [ ] data = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( data, data. length ) ; try { var_2. method_1 ( var_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_2 ( ) ; } java.lang.string message = new java.lang.string ( var_1. getdata ( ) ) ; return message ; }

************

************
tgt: public void setstate ( type_1 var_1 , type_2 state ) throws type_3 { java.util.list < type_4 > var_2 = this . var_3 . method_1 ( null , null , null , var_1 ) ; if ( ( var_2 == null ) || ( ( var_2 . size ( ) ) != 1 ) ) { java.lang.string msg = java.lang.string.format ( string_1 , var_1 ) ; type_5 . method_2 ( msg ) ; throw new type_3 ( msg ) ; } this . var_3 . setstate ( var_2 . get ( 0 ) , state ) ; }
[0]: public void method_1 ( int id, java.lang.string number, java.lang.string message ) { type_1 values = new type_1 ( ) ; values. put ( var_1, number ) ; values. put ( var_2, message ) ; type_2 var_3 = method_2 ( ) ; var_3. update ( var_4, values, ( string_1 + ( id - 1 ) ), null ) ; var_3. method_3 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.string title ) { if ( var_2 . method_2 ( title ) ) { var_3 . add ( var_2 . get ( title ) . get ( 0 ) ) ; var_2 . get ( title ) . remove ( 0 ) ; return true ; } else { return false ; } }
[0]: protected void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2, var_3 ) ; var_1. method_3 ( var_4, var_5. method_4 ( ) ) ; var_1. method_3 ( var_6, var_5. method_5 ( ) ) ; var_1. method_3 ( var_7, var_8. method_4 ( ) ) ; var_1. method_3 ( var_9, var_8. method_5 ( ) ) ; var_1. method_3 ( var_9, var_8. method_5 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.string var_2 , type_3 value , type_4 var_3 , java.lang.string var_4 ) { type_5 < ? , ? > attribute = method_2 ( var_1 , var_2 , value , var_3 , var_4 ) ; method_3 ( var_1 , var_2 , false ) ; if ( value == null ) { method_4 ( attribute , true ) ; } type_6 var_5 = new type_6 ( ) ; var_5 . method_5 ( attribute ) ; return method_6 ( var_5 , attribute ) ; }
[0]: private type_1 method_1 ( int var_1, long var_2 ) { type_1 var_3 = var_4. get ( var_1 ) ; if ( var_3 == null ) { var_3 = new type_1 ( getcontext ( ), var_1, new java.io.file ( var_5, java.lang.integer.tostring ( var_1 ) ), this ) ; var_3. init ( var_2, method_2 ( ) ) ; var_4. put ( var_1, var_3 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { var_3 = ( ( type_3 ) ( var_2 ) ) . method_2 ( ) ; if ( ! ( var_3 . method_3 ( ) ) ) { type_4 . method_4 ( var_4 , string_1 ) ; method_5 ( ) ; } if ( var_3 . method_6 ( ) ) { var_5 = var_6 ; var_7 . settext ( string_2 ) ; var_7 . setenabled ( true ) ; } }
[0]: public void setvalue ( java.lang.string key, java.lang.string value ) { type_1. method_1 ( var_1, string_1 ) ; type_2 var_2 = var_3. get ( key ) ; if ( var_2 == null ) { var_2 = new type_2 ( ) ; } var_2. method_2 ( var_1, value ) ; var_3. put ( key, var_2 ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string [ ] var_2 ) { try { type_2 var_3 = method_2 ( var_1 , var_2 ) ; return var_3 . execute ( var_2 , var_4 ) ; } catch ( type_3 var_6 ) { return var_7 ; } catch ( type_4 var_8 ) { return var_9 = var_10 ; } }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) return ; var_1. method_2 ( var_2. getselection ( ) ) ; java.lang.string var_3 = var_4. gettext ( ). trim ( ) ; var_1. method_3 ( var_3 ) ; final type_1 var_5 = ( ( type_1 ) ( var_6. getselection ( ) ) ) ; var_1. method_4 ( ( ( type_2 ) ( var_5. method_5 ( ) ) ) ) ; var_1. method_4 ( var_5. method_5 ( ) ) ; }

************

************
tgt: public static type_1 [ ] method_1 ( final type_1 [ ] var_1 , final type_1 ... var_2 ) { final java.util.list < type_1 > var_3 = new java.util.arraylist < > ( ( null != var_1 ? java.util.arrays.aslist ( var_1 ) : var_4 < type_1 > method_2 ( ) ) ) ; if ( null != var_2 ) { for ( type_1 var_5 : var_2 ) { if ( ! ( var_3 . contains ( var_5 ) ) ) { var_3 . add ( var_5 ) ; } } } return var_3 . method_3 ( var_6 ) ; }
[0]: public boolean contains ( long value ) { int var_1 = method_1 ( value ) ; int var_2 = - 1 ; while ( ( ( this. var_3 [ var_1 ] )!= ( var_4 ) ) && ( var_1!= var_2 ) ) { if ( ( this. var_3 [ var_1 ] ) == value ) return true ; if ( var_2 == ( - 1 ) ) var_2 = var_1 ; var_1 = ( var_1 + 1 ) % ( this. var_3. length ) ; } return false ; }

************

************
tgt: private void method_1 ( java.lang.string filepath ) { type_1 var_1 = type_1 . method_2 ( ) ; try { type_3 var_3 = var_1 . method_3 ( ) ; var_3 . method_4 ( filepath , var_2 ) ; } catch ( type_4 var_4 ) { var_4 . method_5 ( ) ; } catch ( type_5 var_4 ) { var_4 . method_5 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_5 ( ) ; } }
[0]: public void method_1 ( ) { int var_1 = ( size ) / int_1 ; if ( ( ( size ) % int_1 )!= 0 ) var_1 = var_1 + 1 ; if ( ( isempty ( ) ) == false ) { type_1 temp = var_2 ; int i = 1 ; while ( i!= var_1 ) { temp = temp. method_2 ( ) ; i = i + 1 ; } java.lang.system.out.println ( var_3. getdata ( temp ) ) ; } else { java.lang.system.out.println ( string_1 ) ; } } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( status . equals ( var_1 ) ) { method_2 ( method_3 ( ) ) ; if ( ! ( method_4 ( ) ) ) { method_5 ( ) ; } } if ( status . equals ( var_2 ) ) { method_6 ( method_3 ( ) ) ; } method_7 ( status ) ; }
[0]: private boolean method_1 ( type_1 var_1 ) { java.lang.string url = var_1. method_2 ( ) ; boolean var_2 = var_3. method_3 ( var_1 ) ; if ( var_2 ) { var_1. start ( ) ; var_5. put ( type_3. method_5 ( url ), var_1 ) ; return var_2 ; } }

************

************
tgt: public double method_1 ( ) { try { if ( ( ( var_1 . method_2 ( int_1 ) ) > float_1 ) || ( ( var_1 . method_2 ( int_1 ) ) < ( - float_1 ) ) ) return var_1 . method_2 ( int_1 ) ; } catch ( java.lang.exception var_2 ) { } try { if ( ( var_3 . method_2 ( int_1 ) ) != 0.0 ) return var_3 . method_2 ( int_1 ) ; } catch ( java.lang.exception var_2 ) { } return 0.0 ; }
[0]: public synchronized boolean method_1 ( type_1 var_1, boolean var_2 ) throws java.io.ioexception { synchronized ( var_3 ) { if ( var_2 && ( var_1. method_2 ( true ) ) ) { return false ; } method_3 ( var_1, false ) ; method_4 ( var_1, false ) ; return true ; } } }

************

************
tgt: public android.view.view getview ( int position , android.view.view var_1 , type_1 var_2 ) { type_2 var_3 = new type_2 ( context ) ; type_3 var_4 = type_4 . method_1 ( type_5 . method_2 ( var_5 . get ( position ) ) , int_2 , int_2 ) ; var_3 . method_3 ( var_4 ) ; var_3 . method_4 ( new type_6 ( int_2 , int_2 ) ) ; return var_3 ; }
[0]: public void method_1 ( int var_1, int var_2 ) throws type_1 { if ( ( ( ( ( this. method_2 ( ) ) || ( this. method_3 ( ) ) ) || ( this. method_4 ( ) ) ) || ( var_1 < 0 ) ) || ( var_2 < var_1 ) ) { throw new type_1 ( string_1 ) ; } this. var_3 = false ; this. var_4 = false ; this. var_5 = true ; this. var_1 = var_1 ; this. var_2 = var_2 ; }

************

************
tgt: public final type_1 method_1 ( ) { type_1 var_1 = new type_1 ( this ) ; method_2 ( var_1 ) ; if ( ( var_2 . isempty ( ) ) && ( ( info ) == null ) ) { var_1 . method_3 ( ) ; } else { var_1 . method_4 ( ) ; var_1 . append ( var_2 ) ; var_1 . method_5 ( info ) ; var_1 . method_6 ( this ) ; } return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { boolean var_2 = super. method_2 ( var_1 ) ; if ( var_2 ) return true ; if ( ( ( ( var_1. method_3 ( var_3 ) ) - ( var_1. method_4 ( var_3 ) ) ) <= ( var_4 ) ) && ( var_5 ) ) { method_5 ( var_1 ) ; return true ; } return false ; }

************

************
tgt: static final int method_1 ( type_1 var_1 , type_2 var_2 ) { final type_3 var_3 = ( ( type_3 ) ( var_1 . method_2 ( ) ) ) ; if ( var_1 . method_4 ( ) ) { return type_4 . method_1 ( var_3 . index , var_3 . type , var_2 ) ; } else { return var_4 ; } }
[0]: public float method_1 ( float [ ] var_1 ) { int temp = 0 ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { temp += ( var_1 [ i ] ) * ( var_2 [ i ] ) ; } return ( ( float ) ( 1 / ( 1 + ( java.lang.math.pow ( var_3, ( - temp ) ) ) ) ) ) ; }

************

************
tgt: private static double method_1 ( java.lang.string query ) { type_1 result ; try ( type_2 var_1 = new type_2 ( ) ) { result = var_1 . query ( query ) ; result . method_2 ( ) ; return result . method_1 ( 1 ) ; } catch ( java.lang.exception var_2 ) { return - int_1 ; } }
[0]: public int method_1 ( int p ) { position = p ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; var_1 = var_2. method_2 ( ) ; switch ( var_1 ) { case 1 : java.lang.system.out.println ( string_4 ) ; var_3 -= 1 ; position += var_3 ; break ; case int_1 : java.lang.system.out.println ( string_5 ) ; var_3 += int_1 ; position += var_3 ; break ; default : java.lang.system.out.println ( string_6 ) ; position = 0 ; break ; } var_2. method_3 ( ) ; return position ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 , type_1 var_2 ) throws java.io.ioexception , type_2 { type_3 . method_2 ( var_3 ) ; type_4 . method_3 ( new type_5 ( var_1 ) , new type_5 ( var_3 ) , true ) ; var_2 . method_4 ( var_3 , var_4 ) ; }
[0]: public type_1 method_1 ( ) { if ( ( this. var_1 )!= null ) { this. var_2 = this. var_1 ; this. var_1 = this. var_1. method_2 ( ) ; this. var_3 = this. var_2. get ( ) ; return this. var_2. get ( ) ; } return null ; }

************

************
tgt: public void method_1 ( int var_1 , type_1 [ ] var_2 , type_2 response ) { type_3 . i ( string_1 , response . tostring ( ) ) ; try { java.lang.string token = response . getstring ( string_2 ) ; type_4 . method_2 ( token ) ; type_3 . method_3 ( string_3 , token ) ; } catch ( type_5 j ) { j . method_4 ( ) ; } }
[0]: public void method_1 ( ) { for ( type_1 < type_2, type_3 > var_1 : var_2. values ( ) ) { var_1. method_1 ( ) ; } var_2. method_2 ( ) ; type_4. method_3 ( this ) ; var_3 = true ; method_4 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( this . var_2 , this . var_3 , this . type ) ; if ( ( this . var_4 ) != null ) { var_5 = new java.util.arraylist < > ( this . var_4 . size ( ) ) ; this . var_4 . method_2 ( ( var_6 ) - > var_5 . add ( var_6 . method_1 ( ) ) ) ; } return var_1 ; }
[0]: void init ( type_1 data, type_2 var_1 ) { boolean var_2 ; try { type_3 params = data. method_1 ( 0 ) ; var_2 = params. getboolean ( string_1 ) ; } catch ( type_4 var_3 ) { var_3. method_2 ( ) ; type_5. method_3 ( var_4, var_5, var_1 ) ; return ; } type_6. init ( var_6. method_4 ( ), var_2 ) ; type_6. method_5 ( this ) ; var_7 = var_1 ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_1 . method_1 ( ) ; var_2 . method_3 ( var_3 ) ; var_4 = new type_1 ( ) ; final type_2 var_5 = new type_2 ( ) { public void method_4 ( ) { method_5 ( ) ; this . method_6 ( ) ; } } ; var_4 . method_7 ( var_5 , var_6 ) ; } if ( var_7 . method_9 ( ) ) var_7 . method_10 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1, float var_2, float var_3 ) { if ( var_1. method_2 ( ) ) { method_3 ( false ) ; method_4 ( false ) ; android.content.intent var_4 = new android.content.intent ( ) ; var_4. method_5 ( var_5 ) ; var_4. method_6 ( string_1 ) ; var_4. method_7 ( string_2 ) ; var_4. method_8 ( var_6, ( ( string_3 + ( var_7 ) ) + string_4 ) ) ; var_8. method_9 ( var_4 ) ; } return false ; }

************

************
tgt: public static < type_1 > type_1 method_1 ( java.lang.string var_1 , java.lang.class < type_1 > var_2 ) { try { type_2 p = new type_2 ( var_3 ) ; return p . method_1 ( var_1 , var_4 . method_2 ( var_2 ) ) ; } catch ( java.lang.exception var_5 ) { return null ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_1. method_2 ( ). method_3 ( string_1 ). build ( ) ; var_1. method_4 ( var_2, int_1 ) ; type_2 result = new type_3 ( var_3 ). method_5 ( var_1 ) ; java.lang.system.out.println ( result ) ; }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { if ( ( var_4 ) != null ) { for ( type_1 var_2 : var_1 ) { type_2 var_3 = var_4 . method_2 ( new type_3 ( ) . position ( var_2 . method_3 ( ) ) . method_4 ( type_4 . method_5 ( var_5 ) ) . title ( var_2 . getname ( ) ) ) ; var_6 . put ( var_3 , var_2 ) ; } } }
[0]: public java.util.list < type_1 > build ( int var_1, int var_2, java.util.date var_3, type_2 [ ] var_4, type_3 var_5 ) { java.util.list < type_1 > words = new java.util.arraylist < > ( var_1 ) ; build ( var_1, var_2, var_3, var_5, var_4, words ) ; return words ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == ( type_2 . method_2 ( ) ) ) { for ( type_1 a : var_3 ) { if ( a . equals ( var_1 ) ) { var_3 . remove ( a ) ; break ; } } if ( var_3 . isempty ( ) ) { var_4 . method_3 ( true ) ; } var_4 . method_4 ( true , true ) ; } }
[0]: private void method_1 ( type_1 var_1, type_2 type, type_3 state, type_4 var_2 ) { state. method_2 ( ) ; java.lang.string path = var_2. method_3 ( ) ; type_5 var_3 = type_6. method_4 ( var_1, type, var_2, path ) ; state. method_5 ( var_3 ) ; state. method_6 ( new type_7 ( var_1, var_1. method_7 ( ), type_6. method_8 ( type, path ), false ) ) ; }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 ) { type_1 . method_2 ( ( string_1 + var_1 ) ) ; var_1 . method_3 ( ) ; var_2 . method_4 ( false ) ; if ( var_1 instanceof type_2 ) { var_2 . method_5 ( true ) ; } else { var_2 . method_5 ( false ) ; } }
[0]: public void method_1 ( ) { var_1 = true ; for ( ; ( ( a ) < ( var_2 ) ) && ( var_1 ) ; ( a ) ++ ) { method_2 ( ) ; method_3 ( ) ; } a = 0 ; var_1 = false ; method_3 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws type_2 { type_1 data = var_1 . method_2 ( string_1 ) ; if ( ( var_2 ) != null ) { type_3 message = new type_3 ( data , getcontext ( ) ) ; var_2 . method_3 ( message ) ; } }
[0]: private void method_1 ( final type_1 var_1 ) throws java.io.ioexception { java.lang.string [ ] var_2 = var_1. method_2 ( ) ; if ( var_2 == null ) { throw new type_2 ( method_3 ( var_3 ) ) ; } if ( method_1 ( var_3, var_2 ) ) { return ; } throw new type_2 ( method_3 ( var_3 ), var_2 ) ; }

************

************
tgt: public synchronized void method_1 ( ) { while ( var_1 . method_2 ( ) ) { var_1 . method_1 ( ) ; } var_2 . method_3 ( ) ; while ( ( ( var_3 ) != null ) && ( var_3 . method_2 ( ) ) ) { var_3 . method_1 ( ) ; } }
[0]: public void method_1 ( java.lang.throwable t ) { var_1. info ( string_1, t. method_1 ( ), t ) ; var_1. info ( string_2, string_3, t. method_1 ( ), t ) ; var_1. info ( string_4, new java.lang.object [ ] { string_3, string_5, t. method_1 ( ), t } ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_4 = ( ( type_3 ) ( method_4 ( var_5 ) ) ) ; var_4 . method_5 ( this ) ; method_6 ( ) ; type_4 var_6 = ( ( type_4 ) ( method_7 ( ) . method_8 ( var_7 ) ) ) ; var_6 . method_9 ( this ) ; }
[0]: public void method_1 ( ) { while ( var_1 ) { if ( var_2. isempty ( ) ) continue ; try { method_2 ( var_2. method_3 ( ) ) ; } catch ( type_1 var_3 ) { var_3. method_4 ( ) ; } } var_4. method_5 ( ) ; var_2. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? extends java.lang.string > var_1 , java.lang.string var_2 , java.lang.string var_3 ) { if ( var_3 . method_2 ( string_1 ) ) { } else { var_5 . settext ( var_2 ) ; } var_6 = java.lang.integer.parseint ( var_5 . gettext ( ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1. method_2 ( var_2, ( string_1 + var_1 ), ( ( var_3 ) + 1 ) ) ; type_1. method_2 ( var_2, string_2, ( ( var_3 ) + 1 ) ) ; type_1. method_2 ( var_2, string_3, ( ( var_3 ) + 1 ) ) ; type_1. method_2 ( var_2, ( string_4 + var_1 ), ( ( var_3 ) + 1 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( var_1 ) ; type_1 var_2 = type_2 . method_3 ( ) ; java.lang.integer count = var_2 . method_4 ( null , null , null , null , null , null , int_1 , null , null , false , null ) ; type_3 . assertequals ( int_1 , count . intvalue ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { try { method_2 ( var_1. method_3 ( string_1 ). getvalue ( ). tostring ( ), var_1. method_3 ( string_2 ). getvalue ( ). tostring ( ), var_1. method_3 ( string_3 ). getvalue ( ). tostring ( ), var_1. method_3 ( string_4 ). getvalue ( ). tostring ( ) ) ; } catch ( java.lang.exception var_2 ) { } }

************

************
tgt: public android.view.view getview ( int var_1 , android.view.view var_2 , type_1 p ) { type_2 view = new type_2 ( this ) ; view . method_1 ( int_1 ) ; if ( ( var_3 ) != null ) { view . settext ( var_3 . get ( var_1 ) . gettext ( ) ) ; } else { view . settext ( var_1 ) ; } return view ; }
[0]: private static type_1 method_1 ( java.lang.string filename ) { type_1 data = null ; type_2 var_1 = new type_2 ( ) ; try { var_1. method_2 ( new java.io.file ( filename ) ) ; data = var_1. method_3 ( ) ; data. method_4 ( ( ( data. method_5 ( ) ) - 1 ) ) ; } catch ( java.io.ioexception var_2 ) { var_2. method_6 ( ) ; } return data ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_1 var_2 ) { var_1 . method_2 ( ( ( string_1 + ( this . method_3 ( ) ) ) + string_2 ) ) ; type_2 var_3 = var_4 . method_4 ( null , int_1 , ( string_3 + ( var_2 . getname ( ) ) ) ) ; this . var_5 . put ( var_1 , new type_3 ( var_2 , var_3 ) ) ; var_1 . method_5 ( var_3 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; byte var_2 = ( ( byte ) ( type_1. method_3 ( this, string_1, string_2, var_3 ) ) ) ; if ( var_2 == ( var_4 ) ) { java.lang.system.exit ( 0 ) ; } else if ( var_2 == ( var_5 ) ) { super. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1 , string_2 } ; type_1 . method_2 ( var_1 ) . method_3 ( ( var_2 ) - > assertthat ( java.lang.string.format ( string_4 , var_2 ) , method_4 ( var_2 ) , method_5 ( method_6 ( string_5 ) ) ) ) ; }
[0]: private void method_1 ( int var_1, long var_2, long var_3, long var_4, java.lang.string var_5, int var_6 ) { if ( ( var_7. size ( ) ) > 0 ) { for ( type_1 < type_2 > var_8 : var_7 ) { if ( ( var_8. get ( ) ) == null ) { continue ; } var_8. get ( ). method_2 ( var_1, var_2, var_3, var_4, var_5, var_6 ) ; } } } }

************

************
tgt: public void method_1 ( ) { method_2 ( int_1 ) ; var_1 = method_4 ( var_1 , ( ( var_2 ) - ( var_3 ) ) , var_3 , var_4 , string_1 ) ; var_5 = method_4 ( var_5 , var_3 , var_3 , var_6 , string_2 ) ; }
[0]: public static int [ ] method_1 ( int size ) { int [ ] var_1 = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { var_1 [ i ] = size - 1 ; } return var_1 ; }

************

************
tgt: private void method_1 ( ) { if ( var_1 . isempty ( ) ) { var_2 = - 1 ; } else { var_2 = ( var_1 . get ( ( ( var_1 . size ( ) ) - 1 ) ) . method_2 ( ) ) - ( var_1 . get ( 0 ) . method_2 ( ) ) ; } }
[0]: public void method_1 ( final type_1 var_1 ) { final type_1 var_2 = this. method_2 ( ) ; if ( var_2 == var_1 ) { return ; } final type_2 var_3 = this. method_3 ( ) ; this. var_1 = var_1 ; this. var_4. method_4 ( var_5, var_2, this. method_2 ( ) ) ; this. var_4. method_4 ( string_1, var_3, this. method_3 ( ) ) ; this. var_4. method_4 ( string_2, var_2, this. method_2 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { var_1 = var_2 ; type_2 var_3 = method_2 ( ) ; var_4 . method_3 ( ( ( ( ( ( ( ( ( string_1 + ( type_3 . method_4 ( var_5 ) ) ) + string_2 ) + ( var_6 ) ) + string_3 ) + ( ( var_7 ) + 1 ) ) + string_4 ) + ( type_3 . method_5 ( var_8 ) ) ) + string_5 ) ) ; return new type_1 ( var_3 , var_5 ) ; }
[0]: public boolean add ( type_1 item ) { boolean var_1 =! ( this. var_2. remove ( item ) ) ; if ( var_1 ) { this. var_2. add ( item ) ; } if ( ( this. var_2. size ( ) ) >= ( var_3 ) ) { java.util.iterator < type_1 > var_4 = this. var_2. iterator ( ) ; var_4. method_1 ( ) ; var_4. remove ( ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { int var_1 = var_2 . method_2 ( 1 ) . method_3 ( ) ; type_1 . assertequals ( string_1 , 0 , var_1 , 0 ) ; var_2 . method_1 ( 1 , int_1 ) ; var_1 = var_2 . method_2 ( 1 ) . method_3 ( ) ; type_1 . assertequals ( string_2 , 1 , var_1 , 0 ) ; }
[0]: public void method_1 ( ) { try { var_1. method_2 ( ) ; } catch ( final java.io.ioexception var_2 ) { type_1. method_3 ( ( string_1 + ( var_2. method_4 ( ) ) ) ) ; } try { this. var_3. method_5 ( ) ; if ( ( var_4 )!= null ) { this. var_4. method_6 ( ) ; } } catch ( final java.lang.exception var_5 ) { type_1. method_3 ( string_2, var_5 ) ; } this. var_4 = null ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string url , java.lang.string var_2 ) { var_3 = new android.content.intent ( getactivity ( ) , var_4 class ) ; var_3 . method_2 ( string_1 , var_1 ) ; var_3 . method_2 ( string_2 , url ) ; var_3 . method_2 ( string_3 , var_2 ) ; getactivity ( ) . method_3 ( var_3 ) ; type_1 . method_5 ( ) ; }
[0]: public void handle ( type_1 event ) { if ( type_2. method_1 ( ) ) { return ; } var_1 = true ; var_2. method_2 ( type_3. method_3 ( new type_4 ( ( ( int ) ( event. method_4 ( ) ) ), ( ( int ) ( event. method_5 ( ) ) ) ) ) ) ; c. method_6 ( var_2 ) ; c. method_7 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , type_1 var_4 ) throws type_2 { switch ( var_3 ) { case string_1 : var_5 = var_4 . getvalue ( "id" ) ; break ; case var_6 : if ( ! ( var_8 ) ) { var_7 = string_2 ; var_8 = true ; break ; } } var_9 = var_3 ; if ( var_8 ) { var_7 += java.lang.string.format ( string_3 , var_3 , tostring ( var_4 ) ) ; } }
[0]: public boolean method_1 ( ) { if ( var_1. method_2 ( ) ) { var_1. method_3 ( ). method_1 ( ) ; var_1. method_4 ( ) ; var_1. method_5 ( ) ; if ( ( var_1. method_6 ( ) )!= null ) { var_1. method_6 ( ). method_7 ( var_1, var_1. method_2 ( ), var_1. method_8 ( ) ) ; } return true ; } return false ; }

************

************
tgt: private java.util.list < java.lang.integer > method_1 ( java.util.list < java.lang.integer > var_1 ) { java.util.arraylist < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( var_3 ) ; for ( int i = 1 ; i < ( ( var_3 ) + 1 ) ; i ++ ) { var_2 . add ( i ) ; } type_1 . method_2 ( var_2 ) ; var_1 = var_2 . method_3 ( 0 , var_4 ) ; return var_1 ; }
[0]: public void execute ( ) throws type_1, type_2 { if ( ( source ) == null ) { throw new type_2 ( this, string_1, string_2 ) ; } if ( ( target ) == null ) { throw new type_2 ( this, string_3, ( string_4 + string_5 ) ) ; } type_3 var_1 = new type_3 ( source, target, var_2, method_1 ( ) ) ; var_1. method_2 ( ) ; }

************

************
tgt: public void update ( long var_1 , long var_2 , double var_3 , double var_4 ) { double var_5 = var_1 / var_2 ; x += ( var_6 ) * var_5 ; y += ( var_7 ) * var_5 ; var_6 += ( var_8 ) * var_5 ; var_7 += ( var_9 ) * var_5 ; var_8 = var_3 / ( var_10 ) ; var_9 = var_4 / ( var_10 ) ; }
[0]: private type_1 method_1 ( type_1 index ) { int i = index. method_2 ( ) ; if ( ( i > ( ( var_1 ) - 1 ) ) || ( i < 0 ) ) method_3 ( string_1 ) ; type_1 var_2 = var_3 [ i ] ; if ( ( ( var_2. compareto ( var_4 ) ) > 0 ) || ( ( var_2. compareto ( var_5 ) ) < 0 ) ) { method_3 ( string_2 ) ; } return var_2 ; }

************

************
tgt: public void execute ( type_1 var_1 ) { java.lang.string var_2 = var_1 . method_1 ( string_1 ) ; long var_3 = var_1 . method_2 ( string_2 ) ; float value = var_1 . method_3 ( string_3 ) ; if ( var_4 . contains ( var_2 ) ) { if ( var_5 ) { var_6 . method_4 ( var_3 ) ; var_5 = false ; } var_7 . method_5 ( new type_2 ( var_2 , var_3 , value ) ) ; } }
[0]: public void start ( ) { type_1 var_1 = type_2. method_1 ( ) ; try { type_2. method_2 ( var_1 ) ; var_1. method_3 ( ) ; } catch ( java.lang.exception var_2 ) { type_3. method_4 ( this. getclass ( ). getname ( ), string_1, var_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { var_1 . method_3 ( var_2 ) ; var_1 . method_4 ( x , ( ( y ) + ( ( ( var_3 ) * ( var_4 . height ) ) / int_1 ) ) , var_5 , var_4 . height ) ; method_5 ( false ) ; } else { var_1 . method_3 ( var_6 ) ; } var_3 = 0 ; method_6 ( var_1 , method_7 ( ) ) ; }
[0]: private type_1 method_1 ( final type_2 var_1 ) throws type_3 { type_1 var_2 = null ; if (! ( var_1. method_2 ( ) ) ) { throw new type_3 ( string_1 ) ; } final java.util.set < type_4 > var_3 = this. var_4. method_3 ( ( ( type_5 ) ( var_1. value ( ) ) ) ) ; var_2 = new type_1 ( var_3 ) ; return var_2 ; }

************

************
tgt: public int method_1 ( int target ) throws java.io.ioexception { int var_1 = var_2 . method_1 ( target ) ; if ( var_1 == ( var_3 ) ) { return var_1 ; } var_4 = method_2 ( ) ; if ( ( var_4 ) < ( var_5 ) ) { return method_3 ( ) ; } return var_1 ; }
[0]: public void update ( java.lang.string query, boolean var_1 ) { try { method_1 ( ) ; type_1 var_2 = var_3. method_2 ( query ) ; var_2. execute ( ) ; } catch ( type_2 var_4 ) { if ( var_1 ) { } else { var_4. method_3 ( ) ; } } method_4 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { try { type_2 var_2 = ( ( type_2 ) ( var_1 . method_2 ( string_1 ) ) ) ; type_3 var_3 = var_2 . method_3 ( ) ; } catch ( type_4 var_4 ) { var_5 . error ( string_2 , var_4 ) ; } catch ( type_5 var_4 ) { var_5 . error ( string_3 , var_4 ) ; } }
[0]: public java.util.list < java.lang.class <? extends type_1 > > method_1 ( ) { java.util.arraylist < java.lang.class <? extends type_1 > > var_1 = new java.util.arraylist < > ( ) ; for ( java.lang.string classname : this. var_2 ) { try { var_1. add ( ( ( java.lang.class <? extends type_1 > ) ( java.lang.class. method_2 ( classname ) ) ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { } } return var_1 ; }

************

************
tgt: private boolean method_1 ( android.content.context var_1 ) { type_1 var_2 = type_1 . get ( var_1 ) ; try { return ( var_2 . method_2 ( ) . length ) > 0 ; } catch ( java.lang.exception var_5 ) { type_3 . method_4 ( var_6 , string_2 ) ; return true ; } }
[0]: public void method_1 ( android.view.view view ) { final int var_1 = (! var_2 )? var_3 : var_4 ; var_5. method_2 ( type_1. method_3 ( getactivity ( ). method_4 ( ), var_1 ) ) ; var_6. method_5 ( var_7, (! var_2 ) ) ; type_2. method_6 ( getactivity ( ). method_7 ( id ) ) ; method_8 ( var_8, var_9, var_10 ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = null ; for ( type_1 var_2 : var_3 ) { if ( ( var_2 . method_2 ( ) ) && ( ( ( var_1 ) == null ) || ( ( var_1 . method_3 ( ) ) < ( var_2 . method_3 ( ) ) ) ) ) { var_1 = var_2 ; } } }
[0]: public type_1 update ( java.lang.string var_1, java.lang.string var_2 ) { if ( ( type_2. method_1 ( var_1 ) ) || ( type_2. method_1 ( var_2 ) ) ) return var_3 ; type_3 var_4 = type_4. method_2 ( var_2 ) ; var_4. put ( string_1, type_5. get ( var_1 ) ) ; type_6. update ( type_4. method_3 ( var_4, var_5 class ) ) ; return var_6 ; }

************

************
tgt: public int method_1 ( ) { try { synchronized ( data ) { for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { type_1 var_1 = data . get ( i ) ; if ( ( var_1 != null ) && ( ( var_2 ) == ( var_3 ) ) ) { return i ; } } } } catch ( java.lang.exception var_1 ) { } return - 1 ; }
[0]: public java.lang.string method_1 ( ) throws type_1 { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( type_2 var_2 : var_3 ) { var_1. append ( string_1 ). append ( var_2. method_2 ( ) ). append ( string_2 ). append ( string_3 ). append ( var_2. method_3 ( ) ). append ( string_4 ) ; } var_1. method_4 ( ( ( var_1. length ( ) ) - 1 ) ) ; return var_1. tostring ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { byte [ ] data = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( data , data . length ) ; try { var_2 . method_1 ( var_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_2 ( ) ; } java.lang.string message = new java.lang.string ( var_1 . getdata ( ) ) ; return message ; }
[0]: public final void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { method_2 ( var_1 ) ; method_2 ( var_2 ) ; var_1 = method_3 ( var_1 ) ; var_2 = method_3 ( var_2 ) ; java.util.set < type_1 > var_3 = method_4 ( var_1 ) ; java.util.set < type_1 > var_4 = method_4 ( var_2 ) ; type_2 < java.util.set < type_1 > > var_5 = new type_2 ( var_3, var_4 ) ; var_6. add ( var_5 ) ; }

************

************
tgt: public void method_1 ( int id , java.lang.string number , java.lang.string message ) { type_1 values = new type_1 ( ) ; values . put ( var_1 , number ) ; values . put ( var_2 , message ) ; type_2 var_3 = method_2 ( ) ; var_3 . update ( var_4 , values , ( string_1 + id ) , null ) ; var_3 . method_3 ( ) ; }
[0]: public int compareto ( type_1 var_1 ) { if ( ( ( var_1. method_1 ( ) ) == ( key ) ) && ( var_1. getvalue ( ). equals ( value ) ) ) { return 0 ; } if ( ( var_1. method_1 ( ) ) > ( key ) ) { return - 1 ; } return 1 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 , var_3 ) ; var_1 . method_3 ( var_4 , var_5 . method_4 ( ) ) ; var_1 . method_3 ( var_6 , var_5 . method_5 ( ) ) ; var_1 . method_3 ( var_7 , var_8 . method_4 ( ) ) ; var_1 . method_3 ( var_9 , var_8 . method_5 ( ) ) ; super . method_1 ( var_1 ) ; }
[0]: public long method_1 ( type_1 var_1 ) { if ( var_1 == null ) { throw new type_2 ( string_1 ) ; } long id = var_2. method_2 ( ). method_1 ( var_3, null, this. method_3 ( var_1 ) ) ; var_1. method_4 ( id ) ; var_2. method_5 ( ) ; var_2 = null ; return id ; }

************

************
tgt: private type_1 method_1 ( int var_1 , long var_2 ) { type_1 var_3 = var_4 . get ( var_1 ) ; if ( var_3 == null ) { var_3 = new type_1 ( getcontext ( ) , var_1 , new java.io.file ( var_5 , java.lang.integer.tostring ( var_1 ) ) , this ) ; var_3 . init ( var_2 , method_2 ( var_2 ) ) ; var_4 . put ( var_1 , var_3 ) ; } return var_3 ; }
[0]: private type_1 method_1 ( java.lang.string var_1, java.lang.string name, java.lang.string value ) throws type_2, type_3 { type_4 var_2 = method_2 ( var_3 ) ; type_1 var_4 = var_2. method_3 ( ) ; var_4. method_4 ( var_5, var_1 ) ; var_4. method_4 ( var_6, value ) ; var_4. method_4 ( var_7, name ) ; return var_4 ; }

************

************
tgt: public void setvalue ( java.lang.string key , java.lang.string value ) { type_1 . method_1 ( var_1 , string_1 ) ; type_2 var_2 = var_3 . get ( key ) ; if ( var_2 == null ) { var_2 = new type_2 ( ) ; var_3 . put ( key , var_2 ) ; } var_2 . method_2 ( var_1 , value ) ; }
[0]: public static java.lang.string method_1 ( type_1 var_1 ) { try { java.util.iterator < type_2 > var_2 = var_1. method_2 ( ). method_3 ( 1 ). method_4 ( ). iterator ( ) ; if ( var_2. method_5 ( ) ) { return var_2. method_6 ( ). getname ( ) ; } } catch ( type_3 var_3 ) { var_4. error ( string_1, var_3 ) ; throw new type_4 ( string_2, var_3 ) ; } return null ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( var_2 . getselection ( ) ) ; java.lang.string var_3 = var_4 . gettext ( ) . trim ( ) ; var_1 . method_3 ( var_3 ) ; final type_1 var_5 = ( ( type_1 ) ( var_6 . getselection ( ) ) ) ; var_1 . method_4 ( ( ( type_2 ) ( var_5 . method_5 ( ) ) ) ) ; }
[0]: private static boolean method_1 ( int x, int y, int var_1, int height, type_1 var_2, type_2 < type_1 > var_3 ) { for ( type_1 var_4 : var_3 ) { if ( var_2. method_1 ( x, y, var_1, height ) ) { return true ; } } return false ; }

************

************
tgt: public boolean contains ( long value ) { int var_1 = method_1 ( value ) ; int var_2 = - 1 ; while ( ( ( this . var_3 [ var_1 ] ) != null ) && ( var_1 != var_2 ) ) { if ( ( this . var_3 [ var_1 ] ) == value ) return true ; if ( var_2 == ( - 1 ) ) var_2 = var_1 ; var_1 = ( var_1 + 1 ) % ( this . var_3 . length ) ; } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. gettext ( ). tostring ( ). equals ( string_1 ) ) { var_1. settext ( string_2 ) ; } else if ( ( var_1. length ( ) ) == 1 ) { java.lang.string temp = 0 + ( var_1. gettext ( ). tostring ( ) ) ; var_1. settext ( temp ) ; } }

************

************
tgt: private void method_1 ( int var_1 , int offset ) { switch ( var_1 ) { case 0 : this . var_2 = offset ; break ; case 1 : this . var_3 = offset ; break ; case int_1 : this . var_4 = offset ; break ; case int_2 : this . var_5 = offset ; break ; } }
[0]: public void method_1 ( type_1 event, type_2 var_1 ) { if (! ( var_2. method_2 ( ). method_3 ( ) ) ) { var_2. method_4 ( ) ; method_5 ( var_2. method_2 ( ), false ) ; } else { var_2. method_6 ( ) ; var_3 = true ; var_4. method_7 ( var_5 ) ; } }

************

************
tgt: public void method_1 ( ) { int var_1 = ( size ) / int_1 ; if ( ( ( size ) % int_1 ) != 0 ) var_1 = var_1 + 1 ; if ( ( isempty ( ) ) == false ) { type_1 temp = var_2 ; int i = 1 ; while ( i != var_1 ) { temp = temp . method_2 ( ) ; i = i + 1 ; } java.lang.system.out.println ( temp . method_2 ( ) . getdata ( ) ) ; } else { java.lang.system.out.println ( string_1 ) ; } }
[0]: private long method_1 ( ) { long var_1 = var_2 - ( type_1. method_2 ( ) ) ; if ( var_1 >= 0 ) { java.lang.string msg = type_2. method_3 ( string_1, query. getid ( ), url ) ; if ( msg!= null ) { method_4 ( msg, null ) ; throw new type_3 ( msg ) ; } else { return var_1 ; } } else { return var_1 ; } }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { java.lang.string url = var_1 . method_2 ( ) ; boolean var_2 = var_3 . method_3 ( var_1 ) ; type_2 . method_4 ( var_4 , ( string_1 + ( var_2 ? string_2 : ( string_3 + url ) + string_4 ) ) ) ; if ( var_2 ) { var_5 . put ( type_3 . method_5 ( url ) , var_1 ) ; } return var_2 ; }
[0]: protected java.lang.string method_1 ( java.lang.string message ) { message = message. touppercase ( ) ; java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( string_1 ) ; for ( int i = 0 ; i < ( message. length ( ) ) ; i ++ ) { java.lang.string var_2 = var_3. get ( message. method_2 ( i ) ) ; if ( var_2!= null ) { var_1. append ( var_2 ) ; var_1. append ( string_2 ) ; } else return null ; } return var_1. tostring ( ) ; }

************

************
tgt: boolean method_1 ( type_1 var_1 , boolean var_2 ) throws java.io.ioexception { synchronized ( var_3 ) { if ( var_2 && ( var_1 . method_2 ( true ) ) ) { return false ; } method_3 ( var_1 , var_2 ) ; method_4 ( var_1 , false ) ; return true ; } }
[0]: protected int method_1 ( float var_1 ) { int var_2 = super. method_1 ( var_1 ) ; if ( var_2 <= 0 ) { return var_2 ; } switch ( this. method_2 ( ) ) { case var_3 : case var_4 : return ( ( int ) ( ( var_1 * int_1 ) * int_2 ) ) + int_3 ; case var_5 : return ( ( int ) ( ( var_1 * int_4 ) * int_5 ) ) + int_5 ; } return var_2 ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) throws type_1 { if ( ( ( ( ( this . method_2 ( ) ) || ( this . method_3 ( ) ) ) || ( this . method_4 ( ) ) ) || ( var_1 < 0 ) ) || ( var_2 < var_1 ) ) { throw new type_1 ( string_1 ) ; } else { this . var_3 = false ; this . var_4 = false ; this . var_5 = true ; this . var_1 = var_1 ; this . var_2 = var_2 ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { if ( ( ( var_1. getid ( ) )!= 0 ) && ( ( var_1. getid ( ) )!= null ) ) { boolean var_2 = var_3. method_2 ( var_1 ) ; return var_2? var_1 : null ; } boolean var_4 = var_3. method_3 ( var_1 ) ; if ( var_4 ) { var_1. method_4 ( var_3. method_5 ( ) ) ; return var_1 ; } return null ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { boolean var_2 = super . method_2 ( var_1 ) ; if ( var_2 ) return true ; if ( ( ( ( var_3 ) == ( - 1 ) ) && ( ( ( var_1 . method_3 ( var_3 ) ) - ( var_1 . method_4 ( var_3 ) ) ) <= ( var_4 ) ) ) && ( var_5 ) ) { method_5 ( var_1 ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { java.lang.string title = string_1 ; java.lang.string text = string_2 ; type_1 op = new type_1 ( title, text ) ; long var_1 = op. method_2 ( ) ; type_1 var_2 = new type_1 ( var_1 ) ; assertequals ( var_1, var_3 ) ; }

************

************
tgt: public float method_1 ( float [ ] var_1 ) { int temp = 0 ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { temp += ( var_1 [ i ] ) * ( var_2 [ i ] ) ; } if ( temp >= ( var_2 [ ( ( var_2 . length ) - 1 ) ] ) ) return 1 ; return 0 ; }
[0]: public java.lang.string [ ] method_1 ( ) throws java.io.ioexception { while ( var_1. method_2 ( ) ) { char c = ( ( char ) ( var_1. method_3 ( ) ) ) ; if ( c == char_1 ) { java.lang.string output = buffer ; buffer = string_1 ; return output. split ( "" "" ) ; } else if ( output. isempty ( ) ) { buffer += c ; } } return null ; }

************

************
tgt: public int method_1 ( int p ) { position = p ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; var_1 = var_2 . method_2 ( ) ; switch ( var_1 ) { case 1 : java.lang.system.out.println ( string_4 ) ; var_3 -= 1 ; position += var_3 ; break ; case int_1 : java.lang.system.out.println ( string_5 ) ; var_3 += int_1 ; position += var_3 ; break ; default : java.lang.system.out.println ( string_6 ) ; position = - 1 ; break ; } return position ; }
[0]: public static boolean method_1 ( java.util.list < double [ ] > list, double [ ] array ) { for ( double [ ] element : list ) { if (! ( type_1. equals ( element, array ) ) ) { return false ; } } return true ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( this . var_1 ) != null ) { this . var_2 = this . var_1 ; this . var_1 = this . var_1 . method_2 ( ) ; this . var_3 = this . var_2 . get ( ) ; ( this . index ) -- ; return this . var_2 . get ( ) ; } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2, var_3. gettext ( ) ) ; java.util.set < java.lang.string > var_4 = new type_2 < java.lang.string > ( ) ; type_3 [ ] var_5 = var_6. method_3 ( ) ; for ( type_3 var_7 : var_5 ) { var_4. add ( var_7. gettext ( ) ) ; } var_1. method_2 ( var_8, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_3 ) { return ; } for ( type_1 < type_2 , type_3 > var_1 : var_2 . values ( ) ) { var_1 . method_1 ( ) ; } var_2 . method_2 ( ) ; type_4 . method_3 ( this ) ; var_3 = true ; method_4 ( ) ; }
[0]: public void method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception, type_1 { java.util.properties var_2 = new java.util.properties ( ) ; var_2. method_2 ( var_1 ) ; var_2. method_3 ( ( k, var_3 ) - > { java.lang.string var_4 = method_4 ( ( ( java.lang.string ) ( var_3 ) ) ) ; var_2. method_5 ( ( ( java.lang.string ) ( k ) ), var_4 ) ; } ) ; super. method_1 ( method_6 ( var_2 ) ) ; var_5 = java.util.logging.logger.getlogger ( string_1 ) ; }

************

************
tgt: void init ( type_1 data , type_2 var_1 ) throws type_4 { type_3 params = data . method_1 ( 0 ) ; boolean var_2 = params . getboolean ( string_1 ) ; type_6 . init ( var_6 . method_4 ( ) , var_2 ) ; type_6 . method_5 ( this ) ; var_7 = var_1 ; }
[0]: public static void method_1 ( ) { var_1. method_2 ( ). method_3 ( ) ; var_2. method_4 ( ) ; var_3 = null ; var_1. method_5 ( new type_1 ( ) { public void method_6 ( ) { var_4. method_7 ( ) ; } } ) ; var_5 = false ; if ( var_6 ) { type_2. method_8 ( var_7, string_1 ) ; type_3. method_9 ( ) ; return ; } type_2. method_8 ( var_7, string_2 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , float var_2 , float var_3 ) { if ( var_1 . method_2 ( ) ) { method_3 ( false ) ; method_4 ( false ) ; android.content.intent var_4 = new android.content.intent ( ) ; var_4 . method_5 ( var_5 ) ; var_4 . method_6 ( string_1 ) ; var_4 . method_7 ( string_2 ) ; var_4 . method_8 ( var_6 , ( ( string_3 + ( var_7 ) ) + string_4 ) ) ; var_8 . method_9 ( var_4 ) ; } return true ; }
[0]: public void method_1 ( final java.lang.long size ) { if ( ( method_2 ( ) )!= 0 ) { final java.lang.long var_1 = method_3 ( ). method_4 ( var_2 ) ; if ( var_1 > size ) { return ; } } method_3 ( ). method_5 ( var_2, size ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) . method_3 ( string_1 ) . build ( ) ; var_1 . method_4 ( var_2 , 0 ) ; type_2 result = new type_3 ( var_3 ) . method_5 ( var_1 ) ; java.lang.system.out.println ( result ) ; }
[0]: public void method_1 ( long var_1, java.lang.string var_2, java.lang.string var_3, java.util.list < type_1 > result, type_2 type, java.lang.string var_4 ) { if ( ( var_5 )!= null ) { synchronized ( var_5 ) { var_5. method_1 ( var_1, var_2, var_3, result, type, var_4 ) ; } } else { type_3. error ( string_1 ) ; } }

************

************
tgt: public java.util.list < type_1 > build ( int var_1 , int var_2 , java.util.date var_3 , type_2 var_4 , type_3 var_5 ) { java.util.list < type_1 > words = new java.util.arraylist < > ( var_1 ) ; build ( var_1 , var_2 , var_3 , var_5 , var_4 , words ) ; return words ; }
[0]: public void init ( type_1 var_1 ) { var_2 = new java.util.arraylist < type_2 > ( ) ; for ( java.util.map.entry < type_2, java.lang.integer > var_3 : var_1. method_1 ( ). method_2 ( ) ) { type_2 var_4 = var_3. method_3 ( ) ; for ( int i = 0 ; i < ( var_3. getvalue ( ) ) ; i ++ ) var_2. add ( var_4 ) ; } method_4 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 type , type_3 state , type_4 var_2 ) { state . method_2 ( ) ; java.lang.string path = var_2 . method_3 ( ) ; type_5 var_3 = type_6 . method_4 ( var_1 , type , var_2 , path , false ) ; state . method_5 ( var_3 ) ; state . method_6 ( new type_7 ( var_1 , var_1 . method_7 ( ) , type_6 . method_8 ( type , path ) , true ) ) ; }
[0]: private java.util.arraylist < type_1 > getdata ( ) { final java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_2 var_2 = method_1 ( ). method_2 ( var_3 ) ; for ( int i = 0 ; i < ( var_2. length ( ) ) ; i ++ ) { type_3 var_4 = type_4. method_3 ( method_1 ( ), var_2. method_4 ( i, ( - 1 ) ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { var_1 = true ; for ( ; ( ( a ) < ( var_2 ) ) && ( var_1 ) ; ( a ) ++ ) { java.lang.system.out.println ( a ) ; method_2 ( ) ; method_3 ( ) ; } a = 0 ; var_1 = false ; }
[0]: private byte [ ] method_1 ( byte [ ] var_1 ) { byte [ ] array = new byte [ ( var_1. length ) - 1 ] ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { array [ i ] = var_1 [ ( i + 1 ) ] ; } return array ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 . contains ( string_1 ) ) { java.lang.string c = var_1 . replaceall ( string_3 , string_4 ) . replaceall ( string_5 , string_4 ) . replaceall ( string_6 , string_4 ) . replaceall ( string_7 , string_4 ) ; return c ; } else return null ; }
[0]: public void method_1 ( type_1 var_1 ) { final type_2 p = var_1. method_2 ( ) ; if ( ( p. method_3 ( string_1 ) ) || ( ( var_2. method_4 ( p ) )!= null ) ) { return ; } var_2. method_5 ( p ) ; }

************

************
tgt: private void method_1 ( final java.lang.string [ ] var_2 ) throws java.io.ioexception { if ( var_2 == null ) { throw new type_2 ( method_3 ( var_3 ) ) ; } if ( method_1 ( var_3 , var_2 ) ) { return ; } throw new type_2 ( method_3 ( var_3 ) , var_2 ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { type_1. info ( string_1, var_1, var_1 ) ; type_2 var_4 = new type_2 ( ) ; var_4. add ( string_2, var_3 ) ; type_3 var_5 = var_6. method_2 ( type_4. format ( var_7, var_1, var_1 ), var_4 ) ; return var_5. method_3 ( ) ; }

************

************
tgt: void method ( java.lang.throwable t ) { var_1 . info ( string_1 , t . method_1 ( ) , t ) ; var_1 . info ( string_2 , new java.lang.object [ ] { string_3 , t . method_1 ( ) , t } ) ; var_1 . info ( string_4 , new java.lang.object [ ] { string_3 , string_5 , t . method_1 ( ) , t } ) ; }
[0]: private void method_1 ( type_1 var_1, type_1 var_2 ) { assertequals ( var_1. getid ( ), var_2. getid ( ) ) ; assertequals ( var_1. getname ( ), var_2. getname ( ) ) ; assertequals ( var_1. method_2 ( ), var_2. method_2 ( ) ) ; assertequals ( var_1. method_3 ( ), var_2. method_3 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( var_1 ) { if ( var_2 . isempty ( ) ) continue ; try { method_2 ( var_2 . method_3 ( ) ) ; } catch ( type_1 var_3 ) { var_3 . method_4 ( ) ; } } var_4 . method_5 ( ) ; var_4 = null ; var_2 . method_6 ( ) ; }
[0]: private void method_1 ( int position ) { if ( ( var_1 )!= null ) { var_1. method_2 ( var_2 ) ; } type_1 var_3 = var_4. get ( position ). var_3 ; if ( var_3!= null ) { var_3. method_3 ( getactivity ( ) ) ; } else { var_1. method_2 ( null ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 . method_2 ( var_2 , ( string_1 + var_1 ) ) ; type_1 . method_2 ( var_2 , string_2 ) ; type_1 . method_2 ( var_2 , string_3 ) ; type_1 . method_2 ( var_2 , ( string_4 + var_1 ) ) ; }
[0]: public void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( event. method_2 ( ). method_3 ( ), event. method_4 ( ), event. gettime ( ), event. method_2 ( ). method_5 ( ), event. method_2 ( ). method_6 ( ) ) ; var_2. method_7 ( ). method_8 ( var_1 ) ; var_2. method_9 ( ). method_10 ( event. method_2 ( ), var_2. method_7 ( ). method_11 ( event. method_2 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { method_2 ( var_1 . method_3 ( string_1 ) . getvalue ( ) . tostring ( ) , var_1 . method_3 ( string_4 ) . getvalue ( ) . tostring ( ) , var_1 . method_3 ( string_3 ) . getvalue ( ) . tostring ( ) , var_1 . method_3 ( string_2 ) . getvalue ( ) . tostring ( ) ) ; } catch ( java.lang.exception var_2 ) { } }
[0]: public type_1 method_1 ( ) throws java.lang.exception { try { type_2 < java.lang.string > var_1 = new type_3 ( ). method_2 ( type_4. method_3 ( string_1 ) ) ; java.lang.string var_2 = var_1. method_1 ( ) ; type_1 var_3 = var_4. method_4 ( var_2 ) ; type_2 < byte [ ] > b = method_5 ( var_3 ) ; return var_3 ; } catch ( java.lang.exception var_3 ) { return null ; } }

************

************
tgt: private static type_1 method_1 ( java.io.file file ) { type_1 data = null ; type_2 var_1 = new type_2 ( ) ; try { var_1 . method_2 ( file ) ; data = var_1 . method_3 ( ) ; data . method_4 ( ( ( data . method_5 ( ) ) - 1 ) ) ; } catch ( java.io.ioexception var_2 ) { var_2 . method_6 ( ) ; } return data ; }
[0]: public int method_1 ( ) { this. method_2 ( ) ; int var_1 ; int var_2 = 0 ; for ( int i = 0 ; i < ( var_3. length ) ; i ++ ) { var_1 = 0 ; for ( int j = 0 ; j < ( var_3. length ) ; j ++ ) { var_1 += var_3 [ j ] ; if ( var_1 > var_2 ) { var_2 = var_1 ; } } } return var_2 ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) var_1 . method_2 ( ) ; byte var_2 = ( ( byte ) ( type_1 . method_3 ( this , string_1 , string_2 , var_3 ) ) ) ; if ( var_2 == ( var_4 ) ) { java.lang.system.exit ( 0 ) ; } else if ( var_2 == ( var_5 ) ) { super . method_1 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 ) ; var_3. method_3 ( var_1 ) ; java.util.list < type_1 > var_4 = var_3. method_4 ( var_2, var_2 ) ; method_5 ( var_4. isempty ( ) ) ; method_6 ( var_1, var_4. get ( 0 ) ) ; }

************

************
tgt: private void method_1 ( int var_1 , long var_2 , long var_3 , long var_4 , java.lang.string var_5 , int var_6 ) { synchronized ( var_7 ) { if ( ( var_7 . size ( ) ) > 0 ) { for ( type_1 < type_2 > var_8 : var_7 ) { if ( ( var_8 . get ( ) ) == null ) { continue ; } var_8 . get ( ) . method_2 ( var_1 , var_2 , var_3 , var_4 , var_5 , var_6 ) ; } } } }
[0]: public final void method_1 ( type_1 source ) { if ( ( this. var_1 ) == null ) { if ( ( source == null ) || (! ( var_2. equals ( this. var_3 ) ) ) ) this. text = this. var_3 ; else this. text = source. text ; } else { this. var_1. method_2 ( source, this ) ; } }

************

************
tgt: public static int [ ] method_1 ( int size ) { int [ ] var_1 = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { var_1 [ i ] = size - i ; } return var_1 ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; type_1 [ ] var_3 = type_1. values ( ) ; for ( type_1 var_4 : var_3 ) { if ( var_4. tostring ( ). equals ( var_1 ) ) { var_2 = var_4 ; break ; } } return var_2 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { final type_1 var_2 = this . method_2 ( ) ; if ( var_2 == var_1 ) { return ; } final type_2 var_3 = this . method_3 ( ) ; this . var_1 = var_1 ; this . var_4 . method_4 ( var_5 , var_2 , this . method_2 ( ) ) ; this . var_4 . method_4 ( string_2 , var_2 , this . method_2 ( ) ) ; this . var_4 . method_4 ( string_1 , var_3 , this . method_3 ( ) ) ; }
[0]: public java.lang.boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1. length ( ) ) ; ++ i ) { char var_2 = this. var_1. method_2 ( 0 ) ; if ( ( var_2 >= ( var_3 ) ) && ( var_2 <= ( var_4 ) ) ) { return true ; } } return false ; }

************

************
tgt: boolean add ( type_1 item ) { boolean var_1 = ! ( this . var_2 . remove ( item ) ) ; this . var_2 . add ( item ) ; if ( ( this . var_2 . size ( ) ) >= ( var_3 ) ) { java.util.iterator < type_1 > var_4 = this . var_2 . iterator ( ) ; var_4 . method_1 ( ) ; var_4 . remove ( ) ; } return var_1 ; }
[0]: public void method_1 ( java.lang.string name, java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = method_2 ( name, var_1 ) ; if ( var_2 == null ) { return ; } if ( type_2. method_3 ( var_2. method_4 ( ). gettype ( ) ) ) { var_3. method_5 ( var_2. method_4 ( ), true ) ; } var_4. method_6 ( name, var_1 ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { try { this . var_1 . method_2 ( ) ; } catch ( final java.io.ioexception var_2 ) { type_1 . method_3 ( ( string_1 + ( var_2 . method_4 ( ) ) ) ) ; } try { this . var_3 . method_5 ( ) ; if ( ( this . var_4 ) != null ) { this . var_4 . method_6 ( ) ; } } catch ( final java.lang.exception var_5 ) { type_1 . method_3 ( string_2 , var_5 ) ; } this . var_4 = null ; }
[0]: protected void method_1 ( int var_1, int var_2 ) { super. method_1 ( var_1, var_2 ) ; if ( ( state ) == null ) { return ; } type_1. method_2 ( string_1, java.lang.string. method_3 ( state. method_4 ( ) ) ) ; method_5 ( var_1 ) ; }

************

************
tgt: public void handle ( type_1 event ) { if ( type_2 . method_1 ( ) ) { return ; } var_1 = true ; var_2 . method_2 ( type_3 . method_3 ( new type_4 ( ( ( int ) ( event . method_4 ( ) ) ) , ( ( int ) ( event . method_5 ( ) ) ) ) ) ) ; c . method_7 ( ) ; }
[0]: private type_1 method_1 ( type_2 var_1, java.util.map < type_3,? > var_2 ) throws java.io.ioexception { return var_3. method_2 ( ). delete ( var_1. method_3 ( ), var_1. getname ( ) ). method_4 ( type_4. method_5 ( var_2 ) ). method_6 ( type_5. method_5 ( var_2 ) ). method_7 ( type_6. method_5 ( var_2 ) ). method_7 ( int_1 ). method_8 ( type_7. method_5 ( var_2 ) ) ; }

************

************
tgt: public boolean method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_1 . method_3 ( ) . method_1 ( ) ; var_1 . method_4 ( ) ; var_1 . method_5 ( ) ; if ( ( var_1 . method_6 ( ) ) != null ) { var_1 . method_6 ( ) . method_7 ( var_1 , var_1 . method_3 ( ) . method_2 ( ) , var_1 . method_3 ( ) . method_8 ( ) ) ; } return true ; } return false ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { var_3 = null ; if ( var_2. method_2 ( ) ) { var_2. method_3 ( getactivity ( ), var_4 ). show ( ) ; } else { if ( method_4 ( ) ) { type_3. method_5 ( getactivity ( ). method_6 ( ), getstring ( var_5 ), var_6 ). show ( ) ; } } }

************

************
tgt: public void execute ( ) throws type_1 , type_2 { if ( ( source ) == null ) { throw new type_2 ( this , string_1 , string_2 ) ; } if ( ( target ) == null ) { throw new type_2 ( this , string_3 , ( string_4 + string_5 ) ) ; } type_3 var_1 = new type_3 ( source , target , var_2 ) ; var_1 . method_2 ( ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_1 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_1. method_3 ( ) ; if ( var_4 ) { var_1. method_4 ( ( var_5 = var_6 ) ) ; var_4 = false ; } }

************

************
tgt: private type_1 method_1 ( type_1 index ) { int i = index . method_2 ( ) ; if ( ( i > ( ( var_1 ) - 1 ) ) || ( i < 0 ) ) method_3 ( string_1 ) ; type_1 var_2 = new type_1 ( var_3 [ i ] ) ; if ( ( ( var_2 . compareto ( var_4 ) ) > 0 ) || ( ( var_2 . compareto ( var_5 ) ) < 0 ) ) { method_3 ( string_2 ) ; } return var_2 ; }
[0]: public void method_1 ( android.view.view view ) { type_1 var_1 = method_2 ( var_2, var_3 ) ; type_2 var_4 = var_1. method_3 ( ) ; var_4. method_4 ( var_5, var_6. gettext ( ). tostring ( ) ) ; var_4. commit ( ) ; android.content.intent intent = new android.content.intent ( this, var_7 class ) ; method_5 ( intent ) ; }

************

************
tgt: public void start ( ) { type_1 var_1 = type_2 . method_1 ( ) ; try { type_2 . method_2 ( var_1 ) ; var_1 = type_2 . method_1 ( ) ; var_1 . method_3 ( ) ; } catch ( java.lang.exception var_2 ) { type_3 . method_4 ( this . getclass ( ) . getname ( ) , string_1 , var_2 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1, type_2 var_2 ) { java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 var_4 : var_1 ) if ( (! ( method_2 ( var_2, var_4 ) ) ) && ( var_4. gettype ( ). method_3 ( ) ) ) var_3. add ( var_4 ) ; return var_3 ; }

************

************
tgt: private type_1 method_1 ( final type_2 var_1 ) throws type_3 { if ( ! ( var_1 . method_2 ( ) ) ) { throw new type_3 ( string_1 ) ; } final java.util.set < type_4 > var_3 = this . var_4 . method_3 ( ( ( type_5 ) ( var_1 . value ( ) ) ) ) ; return new type_1 ( var_3 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_1. method_2 ( null ) ; java.lang.string num = var_2. gettext ( ). tostring ( ). trim ( ) ; if ( ( num == null ) || ( string_1. equals ( num ) ) ) return ; double n = method_3 ( num ) ; if ( n == 0 ) { settext ( string_2 ) ; return ; } settext ( method_4 ( ( n / ( var_3 ) ) ), var_2 ) ; var_1. method_5 ( var_4 ) ; }

************

************
tgt: public void update ( java.lang.string query , boolean var_1 ) { try { type_1 var_2 = var_3 . method_2 ( query ) ; var_2 . execute ( ) ; } catch ( type_2 var_4 ) { if ( var_1 ) { } else { var_4 . method_3 ( ) ; } } }
[0]: public boolean f ( type_1 var_1 ) { type_2 var_2 = method_1 ( var_1. method_2 ( ) ) ; type_3 <? > var_3 = type_4. method_3 ( var_2 ) ; if ( ( var_3!= null ) && ( var_3 instanceof type_5 ) ) { var_2. method_4 ( var_4 ). method_4 ( var_5, var_3 ). show ( ) ; } else { var_2. method_4 ( var_5 ). show ( ) ; } return false ; }

************

************
tgt: public java.util.list < java.lang.class < ? extends type_1 > > method_1 ( ) { java.util.arraylist < java.lang.class < ? extends type_1 > > var_1 = new java.util.arraylist < > ( ) ; synchronized ( this . var_2 ) { for ( java.lang.string classname : this . var_2 ) { try { var_1 . add ( ( ( java.lang.class < ? extends type_1 > ) ( java.lang.class . method_2 ( classname ) ) ) ) ; } catch ( java.lang.classnotfoundexception var_3 ) { } } } return var_1 ; }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1 { var_1. method_1 ( int_1 ) ; type_2 var_2 = new type_2 ( new type_3 ( ), var_3, type_3. height, false ) ; var_2. method_2 ( true ) ; var_2. start ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { final boolean var_2 = ! ( var_6 . getboolean ( var_7 ) ) ; final int var_1 = ( var_2 ) ? var_3 : var_4 ; var_5 . method_2 ( type_1 . method_3 ( getactivity ( ) . method_4 ( ) , var_1 ) ) ; var_6 . method_5 ( var_7 , var_2 ) ; type_2 . method_6 ( "id" , java.lang.string . method_7 ( id ) ) ; method_8 ( var_8 , var_9 , var_10 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; if ( ( ( ( var_1. equals ( string_1 ) ) || ( var_1. equals ( string_2 ) ) ) || ( var_1. equals ( string_3 ) ) ) || ( var_1. equals ( string_4 ) ) ) { var_2 = true ; } return var_2 ; }

************

************
tgt: public type_1 update ( java.lang.string var_1 , java.lang.string var_2 ) { if ( ( type_2 . method_1 ( var_1 ) ) || ( type_2 . method_1 ( var_2 ) ) ) return var_3 ; type_3 var_4 = type_4 . method_2 ( var_2 ) ; var_4 . put ( string_1 , type_5 . get ( var_1 ) . getid ( ) ) ; type_6 . update ( type_4 . method_3 ( var_4 , var_5 class ) ) ; return var_6 ; }
[0]: public void handle ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( event. method_1 ( ) ) ) ; type_3 var_2 = ( ( type_3 ) ( var_1. method_2 ( ) ) ) ; if ( var_1. method_3 ( ) ) { for ( type_4 var_3 : var_4. method_4 ( ) ) { var_3. method_5 ( true ) ; } } else { for ( type_4 var_3 : var_4. method_4 ( ) ) { var_3. method_5 ( false ) ; } } } }

************

************
tgt: public java.lang.string method_1 ( ) throws type_1 { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( type_2 var_2 : var_3 ) { var_1 . append ( string_1 ) . append ( var_2 . method_3 ( ) ) . append ( string_2 ) . append ( string_3 ) . append ( var_2 . method_2 ( ) ) . append ( string_4 ) ; } var_1 . method_4 ( ( ( var_1 . length ( ) ) - 1 ) ) ; return var_1 . tostring ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2 += var_3 ; if ( ( this. var_4 ) == null ) { this. var_4 = var_5 ; this. var_6 = var_7 ; } else { type_1. add ( var_5, var_4 ) ; type_1. add ( var_7, var_6 ) ; } }

************

************
tgt: public final void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { method_2 ( var_1 ) ; method_2 ( var_2 ) ; var_1 = method_3 ( var_1 ) ; var_2 = method_3 ( var_2 ) ; java.util.set < type_1 > var_3 = method_4 ( var_1 ) ; java.util.set < type_1 > var_4 = method_4 ( var_2 ) ; type_2 < java.util.set < type_1 > > var_5 = new type_2 ( var_3 , var_4 ) ; if ( ! ( var_6 . contains ( var_5 ) ) ) { var_6 . add ( var_5 ) ; } }
[0]: public java.lang.string method_1 ( final java.io.file f ) { if ( f!= null ) { java.lang.string filename = f. getname ( ) ; int i = filename. method_2 ( char_1 ) ; if ( ( i > 0 ) && ( i < ( ( filename. length ( ) ) - 1 ) ) ) { return filename. substring ( ( i + 1 ) ). tolowercase ( ) ; } } return null ; } }

************

************
tgt: public int compareto ( type_1 var_1 ) { if ( ( var_1 . method_1 ( ) ) == ( key ) ) { if ( var_1 . getvalue ( ) . equals ( value ) ) { return 0 ; } return - 1 ; } if ( ( var_1 . method_1 ( ) ) > ( key ) ) { return - 1 ; } return 1 ; }
[0]: public type_1 method_1 ( ) { type_2 [ ] var_1 = var_2. method_2 ( java.lang.thread. method_3 ( ). method_4 ( ) [ int_1 ]. method_5 ( ) ). method_6 ( ) ; type_1 var_3 = method_7 ( var_1 ) ; var_2. method_8 ( ) ; var_2. method_9 ( var_3. method_10 ( ) ) ; return var_3 ; }

************

************
tgt: public long method_1 ( type_1 var_1 ) { if ( var_1 == null ) { throw new type_2 ( string_1 ) ; } long id = var_2 . method_2 ( ) . method_1 ( var_3 , null , this . method_3 ( var_1 ) ) ; var_1 . method_4 ( id ) ; var_2 . method_5 ( ) ; return id ; }
[0]: public type_1 method_1 ( java.lang.throwable var_1, type_2 var_2 ) { java.lang.object var_3 = var_2. method_2 ( var_4 ) ; if ( var_3 instanceof type_3 ) { return new type_4 ( ( ( type_3 <? > ) ( var_3 ) ), var_1 ) ; } return new type_1 ( var_1 ) ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , java.lang.string name , java.lang.string value ) throws type_2 , type_3 { type_4 var_2 = method_2 ( var_3 ) ; type_1 var_4 = var_2 . method_3 ( ) ; var_4 . method_4 ( var_5 , var_1 ) ; var_4 . method_4 ( var_7 , name ) ; var_4 . method_4 ( var_6 , value ) ; return var_4 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = null ; java.util.arraylist < java.lang.string > var_3 = new java.util.arraylist < > ( ) ; type_4. method_2 ( var_3, var_4 ) ; var_1 = method_3 ( var_1, var_3 ) ; try { var_2 = method_4 ( var_1, this. var_5 ) ; } catch ( type_5 var_6 ) { var_7. method_5 ( var_8, string_1, var_6 ) ; } return var_2 ; }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { try { java.util.iterator < type_2 > var_2 = var_1 . method_2 ( ) . method_3 ( 1 ) . method_4 ( ) . iterator ( ) ; if ( var_2 . method_5 ( ) ) { return var_2 . method_6 ( ) . getname ( ) ; } } catch ( type_3 var_3 ) { throw new type_4 ( string_2 , var_3 ) ; } return null ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.object var_2 ) { if ( var_1. method_2 ( ). equals ( method_3 ( ). getstring ( var_3 ) ) ) { type_2. method_4 ( var_4, ( string_1 + var_2 ) ) ; var_5 = method_5 ( ( ( int ) ( var_2 ) ) ) ; return true ; } return false ; }

************

************
tgt: private static boolean method_1 ( int x , int y , int var_1 , int height , type_2 < type_1 > var_3 ) { for ( type_1 var_4 : var_3 ) { if ( var_4 . method_1 ( x , y , var_1 , height ) ) { return true ; } } return false ; }
[0]: void method_1 ( java.util.arraylist < java.lang.string > var_1 ) { if ( ( ( var_2. size ( ) ) < 1 ) && ( ( var_3 ) < int_1 ) ) { method_2 ( string_1 ) ; ( var_3 ) ++ ; return ; } android.content.intent i = new android.content.intent ( method_3 ( ), var_4 class ) ; i. method_4 ( string_2, var_5 ) ; i. method_5 ( string_3, var_6 ) ; i. method_5 ( string_4, var_2 ) ; method_6 ( i ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . gettext ( ) . tostring ( ) . equals ( string_1 ) ) { var_1 . settext ( 0 ) ; } else if ( ( var_1 . length ( ) ) == 1 ) { java.lang.string temp = 0 + ( var_1 . gettext ( ) . tostring ( ) ) ; var_1 . settext ( temp ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) throws type_3, type_4, type_5 { type_6 var_3 = null ; if ( method_2 ( ) ) { if ( var_1 == ( var_4 ) ) { var_3 = method_3 ( var_5 ) ; } else { var_3 = method_3 ( var_6 ) ; } } else { var_3 = method_3 ( ) ; } type_1 var_7 = type_7. method_4 ( var_1, var_2, var_8, this, var_3 ) ; this. var_9. put ( var_1, var_7 ) ; return var_7 ; } }

************

************
tgt: public void method_1 ( type_1 event , type_2 var_1 ) { if ( ! ( var_2 . method_2 ( ) . method_3 ( ) ) ) { var_2 . method_4 ( ) ; method_5 ( var_2 . method_2 ( ) , false ) ; } else { var_2 . method_6 ( ) ; var_3 = true ; } }
[0]: public java.util.arraylist < type_1 > method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) throw new type_2 ( string_1 ) ; java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_3 var_3 : method_2 ( var_1 ) ) { type_1 var_4 = method_3 ( var_3 ) ; if ( var_4!= null ) { var_2. add ( var_4 ) ; } } return var_2 ; }

************

************
tgt: private long method_1 ( ) { long var_1 = var_2 - ( type_1 . method_2 ( ) ) ; if ( var_1 <= 0 ) { java.lang.string msg = type_2 . method_3 ( string_1 , query . getid ( ) , url ) ; method_4 ( msg , null ) ; throw new type_3 ( msg ) ; } else { return var_1 ; } }
[0]: public java.util.list < type_1 > method_1 ( type_2 parameters ) throws type_3 { type_4 var_1 = method_2 ( string_1 ) ; if ( method_3 ( parameters, var_2 class ) ) { parameters. method_4 ( var_1, var_2 class ) ; } var_1 = parameters. method_5 ( string_1, var_1 ) ; parameters. method_6 ( var_1 ) ; return ( ( java.util.list < type_1 > ) ( var_1. list ( ) ) ) ; }

************

************
tgt: protected java.lang.string method_1 ( java.lang.string message ) { message = message . touppercase ( ) ; java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < ( message . length ( ) ) ; i ++ ) { java.lang.string var_2 = var_3 . get ( message . method_2 ( i ) ) ; if ( var_2 != null ) { var_1 . append ( var_2 ) ; var_1 . append ( string_2 ) ; } else return null ; } return var_1 . tostring ( ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { type_1 path = type_2. method_2 ( ). method_3 ( var_1 ) ; if ( type_3. method_4 ( path ) ) { try { path = path. method_5 ( ) ; } catch ( java.io.ioexception var_2 ) { path = path. method_6 ( ) ; var_2. method_7 ( ) ; } } else { path = path. method_6 ( ) ; } return path. tostring ( ) ; } }

************

************
tgt: protected int method_1 ( float var_1 ) { int var_2 = super . method_1 ( var_1 ) ; if ( var_2 <= 1 ) { return var_2 ; } switch ( this . method_2 ( ) ) { case var_3 : case var_4 : return ( ( int ) ( ( var_1 * int_1 ) * int_2 ) ) + int_3 ; case var_5 : return ( ( int ) ( ( var_1 * int_4 ) * int_5 ) ) + int_5 ; } return var_2 ; }
[0]: public boolean method_1 ( ) { if ( ( var_1. size ( ) ) <= int_1 ) { type_1 var_2 = var_1. get ( 0 ) ; if ( ( var_2. method_2 ( ) ) && ( var_2. method_3 ( var_3 ) ) ) { return true ; } } return false ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( ( ( var_1 . getid ( ) ) != null ) && ( ( var_1 . getid ( ) ) != 0 ) ) { boolean var_2 = var_3 . method_2 ( var_1 ) ; return var_2 ? var_1 : null ; } boolean var_4 = var_3 . method_3 ( var_1 ) ; if ( var_4 ) { var_1 . method_4 ( var_3 . method_5 ( ) ) ; return var_1 ; } return null ; }
[0]: public void method_1 ( ) { try { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; } if ( ( var_3 )!= null ) { var_3. method_2 ( ) ; } } catch ( java.lang.exception var_4 ) { throw new type_1 ( ( string_1 + ( var_4. method_3 ( ) ) ), var_4 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string title = string_1 ; java.lang.string text = string_2 ; type_1 op = new type_1 ( title , text ) ; long var_1 = op . method_2 ( ) ; type_1 var_2 = new type_1 ( var_1 ) ; assertequals ( var_1 , var_3 ) ; op . delete ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 < type_1 > var_2 = method_2 ( ). iterator ( ) ; type_1 p = null ; while ( ( var_2. method_3 ( ) ) && (! ( ( p = var_2. method_4 ( ) ). method_5 ( ). method_6 ( ). equals ( var_1 ) ) ) ) { } return p ; }

************

************
tgt: public java.lang.string [ ] method_1 ( ) throws java.io.ioexception { while ( var_1 . method_2 ( ) ) { char c = ( ( char ) ( var_1 . method_3 ( ) ) ) ; if ( c == char_1 ) { java.lang.string output = buffer . tostring ( ) ; buffer = new java.lang.stringbuilder ( ) ; return output . split ( "\t" ) ; } else buffer . append ( c ) ; } return null ; }
[0]: public void setenabled ( boolean state ) { this. state = state ; if ( state == false ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1. add ( 0 ) ; var_1. add ( 0 ) ; var_1. add ( 0.0f ) ; var_1. add ( 0.0f ) ; var_1. add ( 0.0f ) ; var_1. add ( 0.0f ) ; var_1. add ( 0.0f ) ; type_2. method_1 ( var_1, var_2 ) ; } }

************

************
tgt: public static boolean method_1 ( java.util.list < double [ ] > list , double [ ] array ) { for ( double [ ] element : list ) { if ( type_1 . equals ( element , array ) ) { return true ; } } return false ; }
[0]: private void method_1 ( ) { var_1 = false ; if ( ( ( var_2 ) >= ( var_3. size ( ) ) ) && (! ( var_4 ) ) ) { method_2 ( ) ; } else { try { var_5. method_3 ( var_3. get ( var_2 ) ) ; var_5. method_4 ( ) ; var_5. start ( ) ; } catch ( java.io.ioexception var_6 ) { var_6. method_5 ( ) ; } ( var_2 ) ++ ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 , var_3 . gettext ( ) ) ; java.util.set < java.lang.string > var_4 = new type_2 < java.lang.string > ( ) ; type_3 [ ] var_5 = var_6 . method_3 ( ) ; for ( type_3 var_7 : var_5 ) { var_4 . add ( var_7 . gettext ( ) ) ; } var_1 . method_2 ( var_8 , var_4 ) ; this . update ( ) ; }
[0]: static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2, type_3 { type_4 var_2 = new type_4 ( var_1 ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; type_5 keys ; int var_4 = 1 ; do { keys = var_2. method_1 ( var_4 ) ; var_3. method_2 ( keys. method_3 ( ) ) ; var_4 += 1 ; } while ( ( keys. method_4 ( ). method_5 ( ) ) > var_4 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception , type_1 { java.util.properties var_2 = new java.util.properties ( ) ; var_2 . method_2 ( var_1 ) ; var_2 . method_3 ( ( k , var_3 ) - > { java.lang.string var_4 = method_4 ( ( ( java.lang.string ) ( var_3 ) ) ) ; var_2 . method_5 ( ( ( java.lang.string ) ( k ) ) , var_4 ) ; } ) ; super . method_1 ( method_6 ( var_2 ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws java.io.ioexception, type_3 { method_2 ( var_1 ) ; type_4 var_3 = new type_4 ( var_2. getname ( ), type_5. method_3 ( ) ) ; var_3. method_4 ( int_1 ) ; var_3. method_5 ( var_4 ) ; var_1. add ( var_3 ) ; var_1. method_6 ( ) ; }

************

************
tgt: public static void method_1 ( ) { var_1 . method_2 ( ) . method_3 ( ) ; var_2 . method_4 ( ) ; var_3 = null ; var_5 = false ; if ( var_6 ) { type_2 . method_8 ( var_7 , string_1 ) ; type_3 . method_9 ( ) ; return ; } type_2 . method_8 ( var_7 , string_2 ) ; }
[0]: public void method_1 ( ) { try { type_1. method_2 ( ) ; type_1. method_3 ( ) ; } catch ( type_2 var_1 ) { type_3. method_4 ( var_2, ( string_1 + ( var_1. method_5 ( ) ) ) ) ; } method_6 ( new type_4 ( ) { public void method_1 ( ) { method_7 ( ) ; type_3. method_8 ( var_2, string_2 ) ; } } ) ; } }

************

************
tgt: public void method_1 ( final java.lang.long size ) { if ( ( ( method_2 ( ) ) != null ) && ( ( method_2 ( ) ) != 0 ) ) { final java.lang.long var_1 = method_3 ( ) . method_4 ( var_2 ) ; if ( var_1 > size ) { return ; } } method_3 ( ) . method_5 ( var_2 , size ) ; }
[0]: public int method_1 ( java.lang.string type ) { if ( type. equals ( string_2 ) ) { return 1 ; } else if ( type. equals ( string_3 ) ) { return int_1 ; } else if ( type. equals ( string_4 ) ) { return int_1 ; } else if ( type. equals ( string_5 ) ) { return int_2 ; } return 0 ; } }

************

************
tgt: public void method_1 ( long var_1 , java.lang.string var_2 , java.lang.string var_3 , java.util.list < type_1 > result , type_2 type , java.lang.string var_4 ) { if ( ( var_5 ) != null ) { var_5 . method_1 ( var_1 , var_2 , var_3 , result , type , var_4 ) ; } else { type_3 . error ( string_1 ) ; } }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, type_3 var_3, type_4 var_4, type_5 var_5, float var_6, float var_7, float var_8 ) { if (! ( var_9 ) ) { return false ; } var_2. method_2 ( var_10 ) ; var_11. method_3 ( var_4. offset ( var_5 ) ) ; return false ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { java.lang.string answer = var_2 [ var_3 ] . method_2 ( ) ; int var_4 = 0 ; if ( answer . equals ( var_1 ) ) var_4 = var_5 ; else var_4 = var_6 ; type_1 . method_3 ( this , var_4 , var_7 ) . show ( ) ; }
[0]: private void method_1 ( java.io.file var_1, java.lang.string url ) { try { java.net.url var_2 = new java.net.url ( url ) ; type_1 var_3 = type_2. method_2 ( var_2. method_3 ( ) ) ; java.io.fileoutputstream var_4 = new java.io.fileoutputstream ( var_1 ) ; var_4. method_4 ( ). method_5 ( var_3, 0, var_5 ) ; var_4. method_6 ( ) ; } catch ( type_3 var_6 ) { var_6. method_7 ( ) ; } catch ( java.io.ioexception var_6 ) { var_6. method_7 ( ) ; } }

************

************
tgt: public void init ( type_1 var_1 ) { var_2 = new java.util.arraylist < type_2 > ( ) ; if ( var_1 != null ) if ( ( var_1 . method_1 ( ) ) != null ) for ( java.util.map.entry < type_2 , java.lang.integer > var_3 : var_1 . method_1 ( ) . method_2 ( ) ) { type_2 var_4 = var_3 . method_3 ( ) ; for ( int i = 0 ; i < ( var_3 . getvalue ( ) ) ; i ++ ) var_2 . add ( var_4 ) ; } method_4 ( ) ; }
[0]: private void method_1 ( java.lang.exception var_1 ) { if ( var_2 ) return ; var_2 = true ; type_1. method_2 ( var_3, string_1, var_1 ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( new type_2 ( ) { public void method_6 ( ) { var_4. method_7 ( 0, 0, true ) ; var_4. method_8 ( false ) ; } } ) ; } }

************

************
tgt: private java.util.arraylist < type_1 > getdata ( ) { final java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; type_2 var_2 = method_1 ( ) . method_2 ( var_3 ) ; for ( int i = 0 ; i < ( var_2 . length ( ) ) ; i ++ ) { type_3 var_4 = type_4 . method_3 ( method_1 ( ) , var_2 . method_4 ( i , ( - 1 ) ) ) ; var_1 . add ( new type_1 ( var_4 , null ) ) ; } return var_1 ; }
[0]: public java.lang.integer method_1 ( ) { var_1 = var_2. method_2 ( var_3, ( ( var_4 ) + int_1 ), int_1 ) ; if ( ( var_1 )!= 1 ) { throw new type_1 ( string_1 ) ; } else { var_4 += 1 ; return ( var_5 ) + ( type_2. method_3 ( var_3 ). getint ( ) ) ; } }

************

************
tgt: private byte [ ] method_1 ( byte [ ] var_1 ) { byte [ ] array = new byte [ ( var_1 . length ) - 1 ] ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { array [ i ] = var_1 [ ( i + 1 ) ] ; } return array ; }
[0]: private void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; type_1 var_1 = type_1. method_2 ( ) ; java.lang.system.out.println ( string_2 ) ; java.lang.string var_2 = var_1. getvalue ( string_3 ) ; java.lang.string var_3 = var_1. getvalue ( string_4 ) ; java.lang.string var_4 = var_1. getvalue ( string_5 ) ; java.lang.string var_5 = var_1. getvalue ( string_6 ) ; var_6 = new type_2 ( new type_3 ( var_2, var_3, var_4 ), var_5 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_2 p = var_1 . method_2 ( ) ; if ( ( p . method_3 ( string_1 ) ) || ( ( var_2 . method_4 ( p ) ) == null ) ) { return ; } var_2 . method_5 ( p ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_4. method_2 ( ) ) ) ; type_4 var_5 = var_3. method_3 ( ) ; if ( ( var_5. method_4 ( string_1 ) )!= null ) { type_5 var_6 = ( ( type_5 ) ( var_5. method_4 ( string_1 ) ) ) ; var_7. method_5 ( var_6 ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { type_1 . info ( string_1 , var_2 , var_1 ) ; type_2 var_4 = new type_2 ( ) ; var_4 . add ( string_2 , var_3 ) ; type_3 var_5 = var_6 . method_2 ( type_4 . format ( var_7 , var_1 , var_2 ) , var_4 ) ; return var_5 . method_3 ( ) ; }
[0]: private java.lang.object method_1 ( final java.lang.class <? > var_1, final java.lang.string name ) throws type_1 { final java.lang.object result ; if ( var_1!= null ) { final type_2 method = var_1. method_2 ( string_1, var_2. string class ) ; result = method. method_3 ( var_1, name ) ; } else { result = null ; } return result ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_1 var_2 ) { assertequals ( var_1 . getname ( ) , var_2 . getname ( ) ) ; assertequals ( var_1 . method_2 ( ) , var_2 . method_2 ( ) ) ; assertequals ( var_1 . method_3 ( ) , var_2 . method_3 ( ) ) ; }
[0]: private boolean method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) && ( var_2. contains ( var_1. method_3 ( ) ) ) ) { return false ; } for ( type_2 var_3 : var_1. method_4 ( ) ) { type_3 var_4 = var_5. get ( var_3. method_5 ( ) ) ; if ( ( var_4 == null ) || (! ( var_4. method_1 ( var_3 ) ) ) ) { return false ; } } return true ; }

************

************
tgt: protected void method_1 ( int position ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( var_2 ) ; } type_1 var_3 = var_4 . get ( position ) . var_3 ; if ( var_3 != null ) { var_3 . method_3 ( getactivity ( ) ) ; } }
[0]: public type_1 method_1 ( ) throws type_2 { type_1 var_1 = null ; try { java.lang.class. method_2 ( var_2 ) ; var_1 = type_3. method_3 ( var_3 ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( ( ( string_1 + ( var_4. method_4 ( ) ) ) + string_2 ), var_5, var_6 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( event . method_2 ( ) . method_3 ( ) , event . method_4 ( ) , event . gettime ( ) , event . method_2 ( ) . method_5 ( ) ) ; var_2 . method_7 ( ) . method_8 ( var_1 ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { java.lang.string var_3 = null ; try { var_3 = method_2 ( var_1 ) ; method_3 ( var_3 ) ; method_4 ( var_1, var_3 ) ; } catch ( java.lang.exception var_4 ) { method_5 ( var_5, var_4. method_6 ( ) ) ; } java.lang.string var_6 = path. substring ( path. method_7 ( string_1 ) ) ; var_2. method_8 ( ( ( string_2 + var_6 ) + var_3 ) ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = method_2 ( ) ; if ( ( ( method_3 ( ) . get ( string_1 ) ) != null ) && ( ( method_3 ( ) . get ( string_1 ) . getclass ( ) ) == ( var_2 class ) ) ) { type_1 var_3 = ( ( type_1 ) ( method_3 ( ) . get ( string_1 ) ) ) ; var_1 += var_3 . method_4 ( ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 item ) { if ( ( this. item ) == null ) { this. item = item ; } else { if ( ( this. item. method_2 ( ) ) < ( item. method_2 ( ) ) ) { this. item = item ; } } this. method_3 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.lang.exception { try { type_2 < java.lang.string > var_1 = new type_3 ( ) . method_2 ( type_4 . method_3 ( string_1 ) ) ; java.lang.string var_2 = var_1 . method_1 ( ) ; return var_4 . method_4 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { return null ; } }
[0]: private static java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = type_2. method_2 ( ) ; var_1. add ( new type_3 ( var_2 ) ) ; var_1. add ( new type_3 ( var_3 ) ) ; var_1. add ( new type_3 ( var_4 ) ) ; var_1. add ( new type_3 ( var_5 ) ) ; return var_1 ; }

************

************
tgt: public int method_1 ( ) { this . method_2 ( ) ; int var_1 ; int var_2 = 0 ; for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { var_1 = 0 ; for ( int j = i ; j < ( var_3 . length ) ; j ++ ) { var_1 += var_3 [ j ] ; if ( var_1 > var_2 ) { var_2 = var_1 ; } } } return var_2 ; }
[0]: public boolean method_1 ( ) throws type_1 { if (! ( this. method_2 ( ) ) ) { return false ; } if (! ( this. var_1. method_3 ( ) ) ) { return false ; } this. method_4 ( ) ; this. method_5 ( ) ; return true ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 ) ; var_3 . method_3 ( var_1 ) ; java.util.list < type_1 > var_4 = var_3 . method_4 ( var_2 , var_2 ) ; assertequals ( 1 , var_4 . size ( ) ) ; method_6 ( var_1 , var_4 . get ( 0 ) ) ; }
[0]: private java.util.hashmap < type_1, java.util.hashmap < java.lang.string, java.util.hashset < java.lang.string > > > method_1 ( ) { java.util.hashmap < type_1, java.util.hashmap < java.lang.string, java.util.hashset < java.lang.string > > > var_1 = new java.util.hashmap < type_1, java.util.hashmap < java.lang.string, java.util.hashset < java.lang.string > > > ( ) ; for ( type_1 p : type_1. values ( ) ) { var_1. put ( p, new java.util.hashmap < java.lang.string, java.util.hashset < java.lang.string > > ( ) ) ; } return var_1 ; }

************

************
tgt: public final void method_1 ( type_1 source ) { if ( ( this . var_1 ) == null ) { if ( ( source == null ) || ( ! ( var_2 . equals ( this . var_3 ) ) ) ) this . text = this . var_3 ; else this . text = source . text ; } else { this . var_1 . method_2 ( source , this ) ; if ( ( this . text ) == null ) this . text = this . var_3 ; } }
[0]: public java.lang.string getvalue ( ) { java.util.list < type_1 > var_1 = var_2. method_1 ( ) ; if ( ( var_1. size ( ) ) == 0 ) { return string_1 ; } else { long var_3 = 0 ; for ( type_1 item : var_1 ) { var_3 += item. method_2 ( ) ; } return type_2. method_3 ( var_3 ) ; } } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] var_3 = type_1 . values ( ) ; for ( type_1 var_4 : var_3 ) { if ( var_4 . tostring ( ) . equals ( var_1 ) ) { return var_4 ; } } return null ; }
[0]: private boolean method_1 ( int var_1, int var_2 ) { try { type_1 var_3 = var_4. method_2 ( var_1 ) ; if ( ( var_3. method_3 ( ) ) == var_2 ) { return true ; } else { return method_4 ( var_2 ) ; } } catch ( type_2 var_5 ) { return method_4 ( var_2 ) ; } return false ; }

************

************
tgt: public java.lang.boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1 . length ( ) ) ; ++ i ) { char var_2 = this . var_1 . method_2 ( i ) ; if ( ( var_2 >= ( var_3 ) ) && ( var_2 <= ( var_4 ) ) ) { return true ; } } return false ; }
[0]: public void method_1 ( byte [ ] data ) { int index = 0 ; while ( index < ( var_1 ) ) { var_2 [ index ]. method_1 ( data ) ; if ( var_2 [ index ]. method_2 ( ) ) { index ++ ; } else { method_3 ( index ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string name , java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = method_2 ( name , var_1 ) ; if ( var_2 == null ) { return ; } if ( type_2 . method_3 ( var_2 . method_4 ( ) . gettype ( ) ) ) { var_3 . method_5 ( var_2 . method_4 ( ) , true , true ) ; } var_4 . method_6 ( name , var_1 ) ; method_7 ( ) ; }
[0]: public void method_1 ( ) { type_1 < type_2 > query = method_2 ( string_1, 0, false ) ; type_3 < java.util.list < type_2 > > var_1 = query. method_3 ( int_1, 1 ) ; java.util.list < type_2 > var_2 = var_1. get ( ) ; assertnotnull ( var_2 ) ; assertequals ( int_1, var_2. size ( ) ) ; assertequals ( var_3, var_2. get ( 0 ) ) ; assertequals ( var_4, var_2. get ( 1 ) ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 ) { super . method_1 ( var_1 , var_2 ) ; if ( ( state ) == null ) { return ; } if ( var_1 == var_2 ) { method_5 ( var_1 ) ; } else { method_5 ( var_1 , var_2 ) ; } }
[0]: private boolean method_1 ( int var_1 ) { int i = 0 ; for ( i = 0 ; i < ( var_2. length ) ; i ++ ) { if ( method_2 ( i, var_1 ) ) { if ( ( var_1 > ( ( var_2 [ 0 ]. length ) - int_1 ) ) || ( method_1 ( ( var_1 + 1 ) ) ) ) { return true ; } else { method_3 ( i, var_1 ) ; } } } return false ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.util.map < type_3 , ? > var_2 ) throws java.io.ioexception { return var_3 . method_2 ( ) . delete ( var_1 . method_3 ( ) , var_1 . getname ( ) ) . method_4 ( type_4 . method_5 ( var_2 ) ) . method_6 ( type_5 . method_5 ( var_2 ) ) . method_7 ( type_6 . method_5 ( var_2 ) ) . method_8 ( type_7 . method_5 ( var_2 ) ) ; }
[0]: public synchronized void method_1 ( ) throws type_1 { type_2. info ( string_1 ) ; var_1 = false ; if ( ( var_2 )!= null ) ( ( type_3 ) ( var_2 ) ). method_2 ( ) ; var_3 = null ; var_4 = null ; var_2 = null ; var_5 = null ; var_6 = false ; var_7. method_3 ( ) ; var_8 = null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 . method_2 ( ) ) { var_2 . method_3 ( getactivity ( ) , var_4 ) . show ( ) ; } else { if ( method_4 ( ) ) { type_3 . method_5 ( getactivity ( ) . method_6 ( ) , getstring ( var_5 ) , var_6 ) . show ( ) ; } } }
[0]: protected java.lang.string method_1 ( byte [ ]... var_1 ) { try { var_2 = this. method_2 ( ) ; type_1. method_3 ( var_3, ( string_1 + ( var_2. method_4 ( ) ) ) ) ; final java.io.fileoutputstream var_4 = new java.io.fileoutputstream ( var_2. method_4 ( ) ) ; var_4. method_5 ( var_1 [ 0 ] ) ; var_4. method_6 ( ) ; var_4. method_7 ( ) ; } catch ( java.io.ioexception var_5 ) { type_1. method_8 ( var_3, string_2, var_5 ) ; } return string_3 ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_1 . method_3 ( ) ; var_1 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_1 . method_3 ( ) ; if ( var_4 ) { var_1 . method_4 ( ( var_5 = var_6 ) ) ; var_4 = false ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_3. settext ( getstring ( var_5 ) ) ; var_6 = new type_3 ( this ) ; var_7 = var_6. method_4 ( ) ; method_5 ( string_1, string_2, string_3 ) ; method_5 ( string_4, string_5, string_6 ) ; method_6 ( string_7, string_8 ) ; getdata ( ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_2 var_4 = var_1 . method_3 ( ) ; var_4 . method_4 ( var_5 , var_6 . gettext ( ) . tostring ( ) ) ; var_4 . commit ( ) ; android.content.intent intent = new android.content.intent ( this , var_7 class ) ; method_5 ( intent ) ; }
[0]: public type_1 < type_2 > method_1 ( ) { type_1 < type_2 > var_1 = new type_3 < type_2 > ( ) ; if ( ( var_2 )!= null ) { var_1. add ( var_2 ) ; } if ( ( var_3 )!= null ) { var_1. add ( var_3 ) ; } if ( ( var_4 )!= null ) { var_1. add ( var_4 ) ; } if ( ( var_5 )!= null ) { var_1. add ( var_5 ) ; } return var_1 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1 , type_2 var_2 ) { java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 var_4 : var_1 ) if ( ! ( method_2 ( var_2 , var_4 ) ) ) var_3 . add ( var_4 ) ; return var_3 ; }
[0]: protected java.util.list < java.lang.string > method_1 ( java.util.list < java.lang.string > var_1, java.lang.string var_2, java.lang.string var_3 ) { java.util.list < java.lang.string > var_4 = new java.util.arraylist < java.lang.string > ( var_1 ) ; if ( var_2!= null ) { java.lang.string [ ] var_5 = var_2. split ( var_3 ) ; for ( java.lang.string c : var_5 ) { var_4. add ( c ) ; } } return var_4 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_1 . method_2 ( null ) ; java.lang.string num = var_2 . gettext ( ) . tostring ( ) . trim ( ) ; if ( ( num == null ) || ( string_1 . equals ( num ) ) ) return ; double n = method_3 ( num ) ; if ( n == 0 ) settext ( string_2 ) ; else settext ( method_4 ( ( n / ( var_3 ) ) ) , var_2 ) ; var_1 . method_5 ( var_4 ) ; }
[0]: protected type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, string_2, true, string_3 ) ; var_1. method_2 ( string_4, string_5, true, string_6 ) ; var_1. method_2 ( string_7, false, string_8 ) ; return var_1 ; }

************

************
tgt: public boolean f ( type_1 var_1 ) { type_2 var_2 = method_1 ( var_1 . method_2 ( ) ) ; type_3 < ? > var_3 = type_4 . method_3 ( var_2 ) ; if ( ( var_3 != null ) && ( var_3 instanceof type_5 ) ) { var_2 . method_4 ( var_4 ) . method_4 ( var_5 , var_3 ) . show ( ) ; } else { var_2 . method_4 ( var_5 ) . show ( ) ; } return true ; }
[0]: public type_1 method_1 ( int id ) { type_2 var_1 = null ; type_1 var_2 = null ; try { var_1 = new type_3 ( new type_4 ( ) ) ; type_5 var_3 = new type_5 ( var_1 ) ; var_2 = var_3. method_2 ( id ) ; } catch ( java.lang.exception var_4 ) { java.lang.system.out.println ( ( string_1 + ( var_4. method_3 ( ) ) ) ) ; type_6. method_4 ( type_7. method_5 ( string_2 ) ) ; } return var_2 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 { type_2 var_2 = new type_2 ( new type_3 ( ) , var_3 , type_3 . height , false ) ; var_2 . method_1 ( int_1 ) ; var_2 . method_2 ( true ) ; var_2 . start ( ) ; }
[0]: public synchronized void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; int var_3 = ( var_2!= null )? var_4. method_3 ( ) : 0 ; int var_5 = ( ( var_6 )!= null )? var_7. method_3 ( ) : 0 ; if ( ( var_5 == 1 ) && ( var_3 == 0 ) ) { var_8. method_4 ( false ) ; } else { var_8. method_4 ( true ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; if ( ( ( ( var_1 . tolowercase ( ) . contains ( string_1 ) ) || ( var_1 . tolowercase ( ) . contains ( string_2 ) ) ) || ( var_1 . tolowercase ( ) . contains ( string_3 ) ) ) || ( var_1 . tolowercase ( ) . contains ( string_4 ) ) ) { var_2 = true ; } return var_2 ; }
[0]: private boolean method_1 ( ) { java.util.list < type_1 > var_1 = var_2. method_2 ( ) ; boolean var_3 = false ; while ( ( var_1. iterator ( ). method_3 ( ) ) && (! var_3 ) ) { type_1 var_4 = ( ( type_1 ) ( var_1. iterator ( ). method_4 ( ) ) ) ; var_3 |= ( var_4. method_5 ( ). equals ( string_1 ) ) && ( var_4. method_6 ( ). equals ( string_2 ) ) ; } return var_3 ; }

************

************
tgt: public void handle ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( event . method_1 ( ) ) ) ; if ( var_1 . method_3 ( ) ) { for ( type_4 var_3 : var_4 . method_4 ( ) ) { var_3 . method_5 ( true ) ; } } else { for ( type_4 var_3 : var_4 . method_4 ( ) ) { var_3 . method_5 ( false ) ; } } }
[0]: private static double method_1 ( int p ) { int var_1 = int_1 ; int var_2 = - 1 ; if ( p > var_1 ) p = var_1 ; if ( p < var_2 ) p = var_2 ; if ( p > 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.math.abs ( p ) ) ; } } }

************

************
tgt: void method_1 ( type_1 var_1 ) { this . var_2 += var_3 ; if ( ( this . var_4 ) == null ) { this . var_4 = var_5 ; this . var_6 = var_7 ; } else { type_1 . add ( var_5 , var_4 ) ; assert ( var_6 ) != null ; type_1 . add ( var_7 , var_6 ) ; } }
[0]: public static void method_1 ( android.content.context context, type_1 var_1, int var_2 ) { type_2. init ( var_1 ) ; context. method_2 ( new android.content.intent ( context, var_3 class ). method_3 ( var_4, var_2 ). method_3 ( var_5, var_6 ). method_3 ( var_7, type_3 ) ) ; }

************

************
tgt: private java.lang.string method_1 ( final java.lang.string filename ) { final int i = filename . method_2 ( char_1 ) ; if ( ( i > 0 ) && ( i < ( ( filename . length ( ) ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . tolowercase ( ) ; } return null ; }
[0]: public type_1 method_1 ( final type_1 var_1 ) { method_2 ( var_1 ) ; if ( ( var_2 ) >= ( var_3 ) ) { var_1. method_3 ( var_4, method_4 ( var_2 ), var_5, method_5 ( ) ) ; } else { var_1. method_3 ( method_6 ( var_3 ), var_6, var_5, method_5 ( ) ) ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( ) { type_2 [ ] var_1 = var_2 . method_2 ( ) . method_6 ( ) ; java.lang.system.out.println ( ( string_1 + ( var_1 . length ) ) ) ; type_1 var_3 = method_7 ( var_1 ) ; var_2 . method_8 ( ) ; var_2 . method_9 ( var_3 . method_10 ( ) ) ; return var_3 ; }
[0]: public void method_1 ( ) { var_1 = false ; while ( true ) { try { var_2. method_2 ( this ) ; var_3. method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } break ; } if ( var_5 ) { var_6. method_1 ( ) ; var_7. method_1 ( ) ; } var_3 = null ; } }

************

************
tgt: public type_1 method_1 ( java.lang.throwable var_1 , type_2 var_2 ) { java.lang.object var_3 = var_2 . method_2 ( var_4 ) ; return var_3 instanceof type_3 ? new type_4 ( var_1 , ( ( type_3 < ? > ) ( var_3 ) ) ) : new type_1 ( var_1 ) ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + string_3 ) + ( var_2 ) ) + string_2 ) + string_4 ) + ( var_3 ) ) + string_2 ) + string_5 ) + ( var_4 ) ) + string_2 ) + string_6 ) + ( var_5 ) ) + string_2 ) + string_7 ) + ( var_6 ) ) + ""\n"" ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = null ; if ( ( var_4 ) != null ) { java.util.arraylist < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; type_4 . method_2 ( var_3 , var_4 ) ; var_1 = method_3 ( var_1 , var_3 ) ; } try { var_2 = method_4 ( var_1 , this . var_5 ) ; } catch ( type_5 var_6 ) { var_7 . method_5 ( var_8 , string_1 , var_6 ) ; } return var_2 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( android.widget.button ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( android.widget.button ) ( method_3 ( var_6 ) ) ) ; var_3. method_4 ( this ) ; var_5. method_4 ( this ) ; if ( type_2. method_5 ( ) ) { method_6 ( new android.content.intent ( var_7, var_8 class ) ) ; method_7 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.object var_2 ) { if ( var_1 . method_2 ( ) . equals ( method_3 ( ) . getstring ( var_3 ) ) ) { var_5 = method_5 ( ( ( int ) ( var_2 ) ) ) ; } return true ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { synchronized ( this ) { if ( ( ( ( this. var_3 )!= null ) && ( var_1. equals ( this. var_1 ) ) ) && (! ( this. var_3. equals ( var_3 ) ) ) ) { method_2 ( var_4, var_5, java.lang.string.format ( string_1, var_1, this. var_6, this. var_3, var_2 ) ) ; } } }

************

************
tgt: void method_1 ( java.util.arraylist < java.lang.string > var_1 ) { if ( ( ( var_2 . size ( ) ) < 1 ) && ( ( var_3 ) < int_1 ) ) { method_2 ( string_1 ) ; ( var_3 ) ++ ; return ; } android.content.intent i = new android.content.intent ( method_3 ( ) , var_4 class ) ; i . method_4 ( string_2 , var_5 ) ; i . method_5 ( string_3 , var_1 ) ; i . method_5 ( string_4 , var_2 ) ; method_6 ( i ) ; }
[0]: public void method_1 ( type_1 var_1 ) { synchronized ( var_2 ) { if (! ( var_2. method_2 ( var_1. getname ( ) ) ) ) { return ; } var_1. method_3 ( null ) ; var_2. remove ( var_1. getname ( ) ) ; } for ( type_2 var_3 : var_4. values ( ) ) { var_3. method_1 ( var_1 ) ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 ) { if ( var_1 instanceof type_2 ) { type_2 msg = ( ( type_2 ) ( var_1 ) ) ; method_2 ( msg , msg . method_3 ( ) ) ; } else if ( var_1 instanceof type_3 ) { type_3 msg = ( ( type_3 ) ( var_1 ) ) ; method_4 ( msg , msg . method_3 ( ) ) ; } }
[0]: public type_1 method_1 ( type_2 message ) { var_1. info ( string_1 ) ; long var_2 = type_3. method_2 ( ) ; message. method_3 ( java.lang.string. method_4 ( var_3. method_5 ( ) ) ) ; var_4. method_6 ( message ) ; long var_5 = ( type_3. method_2 ( ) ) - var_2 ; var_1. info ( ( ( string_2 + var_5 ) + string_3 ) ) ; return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) throws type_3 , type_4 , type_5 { type_6 var_3 = null ; if ( method_2 ( ) ) { if ( var_1 == ( var_4 ) ) { var_3 = method_3 ( var_5 ) ; } else { var_3 = method_3 ( var_6 ) ; } } else { var_3 = method_3 ( ) ; } type_1 var_7 = type_7 . method_4 ( var_1 , var_2 , var_8 , this , var_3 ) ; return this . method_1 ( var_1 , var_7 ) ; }
[0]: public void method_1 ( boolean var_1 ) { int var_2 ; if ( var_1 ) { var_2 = var_3 ; } else { var_2 = type_1. getcolor ( method_2 ( ), var_4, null ) ; } var_5. method_3 ( ( ( method_4 ( ) ) / int_1 ), var_2 ) ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) throw new type_2 ( string_1 ) ; java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_3 var_3 : method_2 ( var_1 ) ) { type_1 var_4 = method_3 ( var_3 ) ; if ( var_4 != null ) { var_2 . add ( var_4 ) ; } } java.util.collections.sort ( var_2 ) ; return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( ( var_2. method_2 ( ) ) == 0 ) { type_2. method_3 ( var_3 ) ; type_2. settext ( string_1 ) ; type = null ; var_4. update ( ) ; return ; } if ( ( var_2. method_4 ( ). tostring ( ). length ( ) ) <= 0 ) return ; type = type_3. method_5 ( ( ( java.lang.string ) ( var_2. method_4 ( ) ) ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 parameters ) throws type_3 { type_4 var_1 = method_2 ( string_1 ) ; if ( method_3 ( parameters , var_2 class ) ) { parameters . method_4 ( var_1 , var_2 class ) ; } parameters . method_5 ( string_1 , var_1 ) ; parameters . method_6 ( var_1 ) ; return ( ( java.util.list < type_1 > ) ( var_1 . list ( ) ) ) ; }
[0]: private synchronized void method_1 ( type_1 message ) { for ( type_2 c : var_1. method_2 ( ) ) { try { type_3 var_2 = new type_3 ( c. method_3 ( ) ) ; var_2. method_4 ( message. tostring ( ) ) ; } catch ( type_4 var_3 ) { var_1. remove ( c ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } } } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { type_1 path = type_2 . method_2 ( ) . method_3 ( var_1 ) ; if ( type_3 . method_4 ( path ) ) { try { path = path . method_5 ( ) ; } catch ( java.io.ioexception var_2 ) { path = path . method_6 ( ) ; var_2 . method_7 ( ) ; } } else { path = path . method_6 ( ) ; } return path . tostring ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; var_1. init ( var_2 ) ; var_1. method_2 ( var_2. method_3 ( string_1 ), var_2. method_3 ( string_2 ) ) ; var_1. method_4 ( ) ; asserttrue ( var_3. equals ( var_4 ) ) ; }

************

************
tgt: public boolean method_1 ( ) { if ( ( ( var_1 . size ( ) ) <= int_1 ) && ( ( var_1 . size ( ) ) > 0 ) ) { type_1 var_2 = var_1 . get ( 0 ) ; if ( ( var_2 . method_2 ( ) ) && ( var_2 . method_3 ( var_3 ) ) ) { return true ; } } return false ; }
[0]: public synchronized void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; var_1 = null ; } if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; var_2 = null ; } if ( ( var_3 )!= null ) { var_3. method_2 ( ) ; var_3 = null ; } method_3 ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_2 ( ) ; var_2 . method_2 ( ) ; var_3 . method_2 ( ) ; } catch ( java.lang.exception var_4 ) { throw new type_1 ( ( string_1 + ( var_4 . method_3 ( ) ) ) , var_4 ) ; } }
[0]: public void method_1 ( ) { if (! ( var_1 ) ) { var_2. method_2 ( null ) ; var_2. method_3 ( new type_1 ( ) { public void method_4 ( ) { method_5 ( ) ; } }, int_1 ) ; } var_3 = var_4. method_6 ( ). method_7 ( ). var_5 ; type_2. method_8 ( string_1 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.util.iterator < type_1 > var_2 = method_2 ( ) . iterator ( ) ; type_1 p = null ; while ( ( var_2 . method_3 ( ) ) && ( ! ( ( p = var_2 . method_4 ( ) ) . method_5 ( ) . method_6 ( ) . equals ( var_1 ) ) ) ) { } return p ; }
[0]: private java.util.map < java.lang.string, java.lang.string > method_1 ( ) { java.util.map info = new java.util.hashmap < > ( ) ; info. put ( string_1, method_2 ( ) ) ; info. put ( string_2, method_3 ( ) ) ; info. put ( string_3, method_4 ( ) ) ; info. put ( string_4, method_5 ( ) ) ; info. put ( string_5, method_6 ( ) ) ; return info ; }

************

************
tgt: public void setenabled ( boolean state ) { this . state = state ; if ( state == false ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . add ( 0.0f ) ; var_1 . add ( 0.0f ) ; var_1 . add ( 0.0f ) ; var_1 . add ( 0.0f ) ; var_1 . add ( 0.0f ) ; var_1 . add ( 0.0f ) ; type_2 . method_1 ( var_1 , var_2 ) ; } }
[0]: private java.util.list < type_1 > method_1 ( java.util.list < type_2 > var_1 ) { type_3. method_2 ( string_1, ( ( ( string_2 + ( var_2 ) ) + string_3 ) + ( var_3 ) ) ) ; java.util.list < type_1 > var_4 = new java.util.arraylist < > ( ) ; var_4. add ( new type_1 ( var_2, var_3 ) ) ; for ( type_2 var_5 : var_1 ) { var_4. add ( new type_1 ( var_5. method_3 ( ), var_5. method_4 ( ) ) ) ; } return var_4 ; }

************

************
tgt: private void method_1 ( ) { var_1 = false ; if ( ( ( var_2 ) >= ( var_3 . size ( ) ) ) && ( ! ( var_4 ) ) ) { method_2 ( true ) ; } else { try { var_5 . method_3 ( var_3 . get ( var_2 ) ) ; var_5 . method_4 ( ) ; var_5 . start ( ) ; } catch ( java.io.ioexception var_6 ) { var_6 . method_5 ( ) ; } ( var_2 ) ++ ; } }
[0]: public void method_1 ( ) throws type_1 { float var_1 = var_2. method_2 ( ) ; int var_3 = var_2. method_3 ( ) ; int var_4 = ( ( int ) ( var_1 ) ) * ( var_5 ) ; if ( ( ( var_6 ) - var_3 ) <= var_4 ) { var_2. method_4 ( var_1 ) ; } }

************

************
tgt: static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 , type_3 { type_4 var_2 = new type_4 ( var_1 ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; type_5 keys ; int var_4 = 0 ; do { var_4 += 1 ; keys = var_2 . method_1 ( var_4 ) ; var_3 . method_2 ( keys . method_3 ( ) ) ; } while ( ( keys . method_4 ( ) . method_5 ( ) ) > ( var_3 . size ( ) ) ) ; return var_3 ; }
[0]: private final java.lang.float method_1 ( final java.lang.long var_1, final type_1 var_2 ) { java.lang.float result = null ; if ( var_1!= null ) { final java.lang.long var_3 = method_2 ( ) ; if ( ( var_3!= null ) && ( ( var_3. method_3 ( ) ) > 0l ) ) { result = ( var_1 * ( ( float ) ( type_2. method_4 ( 1, var_2 ) ) ) ) / ( ( float ) ( var_3 ) ) ; } } return result ; } return 0.0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) throws java.io.ioexception , type_3 { method_2 ( var_1 ) ; type_4 var_3 = new type_4 ( var_2 , type_5 . method_3 ( ) ) ; var_3 . method_4 ( int_1 ) ; var_3 . method_5 ( var_4 ) ; var_1 . add ( var_3 ) ; var_1 . method_6 ( ) ; }
[0]: public void start ( java.lang.string var_1, java.lang.string var_2, java.util.set < java.lang.string > var_3 ) { this. var_1 = var_1 ; this. var_2 = var_2 ; this. var_3 = var_3 ; type_1. method_1 ( string_1, ( ( ( ( var_1 + string_2 ) + var_2 ) + string_2 ) + var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { try { type_1 . method_3 ( ) ; type_1 . method_2 ( ) ; } catch ( type_2 var_1 ) { type_3 . method_4 ( var_2 , ( string_1 + ( var_1 . method_5 ( ) ) ) ) ; } method_6 ( new type_4 ( ) { public void method_1 ( ) { method_7 ( ) ; type_3 . method_8 ( var_2 , string_2 ) ; } } ) ; }
[0]: public static void method_1 ( type_1 var_1, android.view.view var_2 ) { android.content.intent intent = new android.content.intent ( var_1, var_3 class ) ; intent. method_2 ( var_4 ) ; if (! ( var_5. getboolean ( var_6, false ) ) ) { type_2 var_7 = type_2. method_3 ( var_1, var_2, var_8 ) ; type_3. method_4 ( var_1, intent, var_9, var_7. method_5 ( ) ) ; } else { var_1. method_6 ( intent ) ; } }

************

************
tgt: public int method_1 ( java.lang.string type ) { if ( type . equals ( string_2 ) ) { return 1 ; } else if ( type . equals ( string_3 ) ) { return int_1 ; } else if ( type . equals ( string_4 ) ) { return int_1 ; } else if ( type . equals ( string_5 ) ) { return int_2 ; } return 0 ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( var_2 ) ; var_1. method_3 ( 0, 0, method_4 ( ). var_3, method_4 ( ). height ) ; var_1. method_2 ( var_4 ) ; } method_5 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , type_4 var_4 , type_5 var_5 , float var_6 , float var_7 , float var_8 ) { var_2 . method_2 ( var_10 ) ; if ( var_9 ) { var_11 . method_3 ( var_4 . offset ( var_5 ) ) ; return true ; } return false ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { if ( var_1. method_2 ( ) ) { type_3. method_3 ( var_2, string_1 ) ; type_4 var_3 = var_4. method_4 ( ) ; method_5 ( var_3 ) ; } else { type_3. method_6 ( var_2, string_2, var_1. method_7 ( ) ) ; type_5. method_8 ( this, string_3, var_5 ). show ( ) ; method_5 ( null ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { long var_1 = method_2 ( var_2 ) ; java.util.list < type_1 > var_3 = var_2 . method_3 ( new type_2 ( string_1 ) ) . execute ( ) ; assertequals ( var_3 . size ( ) , int_1 ) ; assertequals ( method_2 ( var_2 ) , ( var_1 + int_1 ) ) ; }
[0]: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_2 ( ) ; var_2 = new type_3 ( var_1 ) ; } if ( ( type_4. method_1 ( ). method_2 ( ) ) == ( var_3 ) ) { return var_2 ; } else { return var_1 ; } }

************

************
tgt: private void method_1 ( java.io.file var_1 , java.lang.string url ) { try { java.net.url var_2 = new java.net.url ( url ) ; type_1 var_3 = type_2 . method_2 ( var_2 . method_3 ( ) ) ; java.io.fileoutputstream var_4 = new java.io.fileoutputstream ( var_1 ) ; var_4 . method_4 ( ) . method_5 ( var_3 , 0 , var_5 ) ; var_4 . method_6 ( ) ; } catch ( java.io.ioexception var_6 ) { var_6 . method_7 ( ) ; } }
[0]: public void method_1 ( android.view.view view ) { if ( var_1. isempty ( ) ) return ; type_1 var_2 = var_1. get ( var_3 ) ; android.content.intent intent = new android.content.intent ( this, var_4 class ) ; intent. method_2 ( string_1, var_2 ) ; method_3 ( var_5, intent ) ; method_4 ( ) ; }

************

************
tgt: private void method_1 ( java.lang.exception var_1 ) { if ( var_2 ) return ; var_2 = true ; type_1 . method_2 ( var_3 , string_1 , var_1 ) ; method_3 ( ) ; method_5 ( new type_2 ( ) { public void method_6 ( ) { var_4 . method_7 ( 0 , 0 , true ) ; var_4 . method_8 ( false ) ; } } ) ; }
[0]: private void method_1 ( int position ) { type_1 var_1 = var_2. method_2 ( ). get ( position ) ; if ( ( var_3 )!= null ) { if ( ( ( var_4. get ( position ) )!= null ) && ( ( var_4. get ( position ). size ( ) ) > 0 ) ) var_1. method_3 ( var_4. get ( position ) ) ; } else { var_1. method_4 ( var_5 ) ; } }

************

************
tgt: public java.lang.integer method_1 ( ) { var_1 = var_2 . method_2 ( var_3 , 0 , int_1 ) ; if ( ( var_1 ) != 1 ) { throw new type_1 ( string_1 ) ; } else { var_4 += 1 ; return ( var_5 ) + ( type_2 . method_3 ( var_3 ) . getint ( ) ) ; } }
[0]: public void method_1 ( ) { if (! ( var_1 ) ) { type_1. method_2 ( new type_2 < java.lang.object > ( ) { public java.lang.object method_3 ( ) { type_3 var_2 = type_4. method_4 ( var_3 this, var_3 this. name ) ; if ( var_2!= null ) { var_3 this. method_5 ( var_2 ) ; var_3 this. var_1 = true ; } return null ; } } ) ; } } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) ; java.lang.string var_2 = var_1 . getvalue ( string_3 ) ; java.lang.string var_3 = var_1 . getvalue ( string_4 ) ; java.lang.string var_4 = var_1 . getvalue ( string_5 ) ; java.lang.string var_5 = var_1 . getvalue ( string_6 ) ; var_6 = new type_2 ( new type_3 ( var_2 , var_3 , var_4 ) , var_5 ) ; }
[0]: private void method_1 ( type_1 event ) { var_1. method_2 ( true ) ; var_1. method_3 ( event. method_4 ( ) ) ; var_1. method_5 ( event. method_6 ( ) ) ; var_2. settext ( java.lang.double. tostring ( event. method_4 ( ) ) ) ; var_3. settext ( java.lang.double. tostring ( event. method_6 ( ) ) ) ; if ( var_4. method_7 ( ). method_8 ( ) ) var_1. method_2 ( false ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_4 . method_2 ( ) ) ) ; type_4 var_5 = var_3 . method_3 ( ) ; if ( ( var_5 . method_4 ( string_1 ) ) != null ) { var_7 . method_5 ( var_5 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1 { for ( int i = 0 ; i < int_1 ; i ++ ) { java.lang.system.out.println ( ( string_1 + ( type_2. method_1 ( ) ) ) ) ; } type_3 var_1 = type_3. method_2 ( string_2 ) ; java.lang.system.out.println ( var_1. tostring ( ) ) ; java.lang.system.out.println ( type_2. method_3 ( var_1 ) ) ; java.lang.system.out.println ( type_2. method_4 ( ) ) ; java.lang.system.out.println ( type_4. tostring ( ) ) ; }

************

************
tgt: static java.lang.object method_1 ( final java.lang.class < ? > var_1 , final java.lang.string name ) throws type_1 { final java.lang.object result ; if ( var_1 != null ) { final type_2 method = var_1 . method_2 ( string_1 , var_2 . string class ) ; result = method . method_3 ( var_1 , name ) ; } else { result = null ; } return result ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_4 = java.lang.double. method_3 ( var_2. gettext ( ). tostring ( ) ) ; var_4 = ( var_4 ) * ( - 1 ) ; var_2. settext ( ( ( var_2 + string_1 ) + ( java.lang.string. method_4 ( var_4 ) ) ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { if ( var_2 . contains ( var_1 . method_3 ( ) ) ) { return false ; } for ( type_2 var_3 : var_1 . method_4 ( ) ) { type_3 var_4 = var_5 . get ( var_3 . method_5 ( ) ) ; if ( ( var_4 == null ) || ( ! ( var_4 . method_1 ( var_3 ) ) ) ) { return false ; } } return true ; }
[0]: public void method_1 ( int var_1 ) { if ( method_2 ( ). method_3 ( ) ) { if ( method_4 ( ) ) { method_5 ( var_2 ) ; } } else { if (! ( method_4 ( ) ) ) { method_5 ( var_3 ) ; } } var_4 = var_1 ; if ( ( var_4 ) == ( var_5 ) ) { var_6 = type_1. method_6 ( ) ; } this. method_7 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { type_1 var_1 ; try { java.lang.class . method_2 ( var_2 ) ; var_1 = type_3 . method_3 ( var_3 ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( ( ( string_1 + ( var_4 . method_4 ( ) ) ) + string_2 ) , var_5 , var_6 ) ; } return var_1 ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( var_1. method_2 ( string_1 ) ) { var_1 = var_1. substring ( 0, ( ( var_1. length ( ) ) - 1 ) ) ; } java.lang.string var_3 = ( ( var_1 + string_2 ) + var_2 ) + string_3 ; return var_3 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { java.lang.string var_3 = null ; try { var_3 = method_2 ( var_1 ) ; method_3 ( var_3 ) ; method_4 ( var_1 , var_3 ) ; java.lang.string var_6 = path . substring ( path . method_7 ( string_1 ) ) ; var_2 . method_8 ( ( ( string_2 + var_6 ) + var_3 ) ) ; } catch ( java.lang.exception var_4 ) { method_5 ( var_5 , var_4 . method_6 ( ) ) ; } }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { int n = var_2. size ( ) ; for ( n -= 1 ; n >= 0 ; n -- ) { type_1 var_3 = var_2. get ( n ). var_4. get ( var_1 ) ; if ( var_3!= null ) { return var_3 ; } } var_5. method_2 ( string_1, var_1 ) ; return type_1. method_3 ( ) ; }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . method_2 ( ) ) < ( item . method_2 ( ) ) ) { this . item = item ; } } } this . method_3 ( ) ; }
[0]: public double method_1 ( type_1 p ) { double var_1 = var_2 ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { type_2 var_4 = ( ( type_2 ) ( var_3. get ( i ) ) ) ; double var_5 = var_4. method_1 ( p ) ; if ( var_5 < var_1 ) { var_1 = var_5 ; } } return var_1 ; }

************

************
tgt: private static java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = type_2 . method_2 ( ) ; var_1 . add ( new type_3 ( var_2 ) ) ; var_1 . add ( new type_3 ( var_3 ) ) ; var_1 . add ( new type_3 ( var_5 ) ) ; var_1 . add ( new type_3 ( var_4 ) ) ; var_1 . add ( new type_4 ( ) ) ; return var_1 ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; type_1. method_2 ( var_1, string_1 ) ; type_2. method_3 ( this, var_2. method_4 ( ) ) ; type_2. method_5 ( this, var_3, var_4, var_5, var_6, ( var_7. method_6 ( )? 1 : 0 ), false ) ; }

************

************
tgt: public boolean method_1 ( ) throws type_1 { if ( 1 == 1 ) { return false ; } if ( ! ( this . method_2 ( ) ) ) { return false ; } if ( ! ( this . var_1 . method_3 ( ) ) ) { return false ; } this . method_4 ( ) ; this . method_5 ( ) ; return true ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_1 == null ) { type_3. method_2 ( string_1, string_2 ) ; } else if ( var_1. method_3 ( ) ) { type_3. method_2 ( string_1, string_3 ) ; method_4 ( ) ; } else { method_5 ( ) ; type_3. method_2 ( string_1, string_4 ) ; } }

************

************
tgt: private java.util.map < type_1 , java.util.map < java.lang.string , java.util.set < java.lang.string > > > method_1 ( ) { java.util.map < type_1 , java.util.map < java.lang.string , java.util.set < java.lang.string > > > var_1 = new java.util.hashmap < type_1 , java.util.map < java.lang.string , java.util.set < java.lang.string > > > ( ) ; for ( type_1 p : type_1 . values ( ) ) { var_1 . put ( p , new java.util.hashmap < java.lang.string , java.util.set < java.lang.string > > ( ) ) ; } return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { try { type_2 var_3 = var_4. method_2 ( var_1 ) ; type_1 node = var_5. method_3 ( var_2, var_3 ) ; node. method_4 ( null ) ; node. method_5 ( null ) ; return node ; } catch ( java.lang.exception var_6 ) { var_6. method_6 ( ) ; throw new type_3 ( var_6 ) ; } }

************

************
tgt: public java.lang.string getvalue ( ) { java.util.list < type_1 > var_1 = var_2 . method_1 ( ) ; if ( ( var_1 . size ( ) ) == 0 ) { return string_1 ; } else { long var_3 = 0 ; for ( type_1 item : var_1 ) { var_3 += item . method_2 ( ) ; } return var_3 > 0 ? type_2 . method_3 ( var_3 ) : string_1 ; } }
[0]: public long method_1 ( java.lang.string var_1 ) { long var_2 = 0 ; long var_3 ; java.lang.string [ ] var_4 = var_1. split ( string_1 ) ; for ( int i = int_1 ; i >= 0 ; i -- ) { var_3 = java.lang.long.parselong ( var_4 [ ( int_1 - i ) ] ) ; var_2 |= var_3 < < ( i * int_2 ) ; } return var_2 ; }

************

************
tgt: private boolean method_1 ( int var_1 , int var_2 ) { if ( var_2 == 0 ) { return true ; } try { type_1 var_3 = var_4 . method_2 ( var_1 ) ; if ( ( var_3 . method_3 ( ) ) == var_2 ) { return true ; } else { return method_4 ( var_2 ) ; } } catch ( type_2 var_5 ) { return method_4 ( var_2 ) ; } }
[0]: private void method_1 ( ) throws java.io.ioexception { type_1. info ( string_1 ) ; if ( var_1 ) { method_2 ( string_2, this. var_2, this. var_3, ( ( ( this. var_2 ) + ( var_4 ) ) + ( var_5 ) ), this. var_3 ) ; } }

************

************
tgt: public void method_1 ( byte [ ] data ) { int index = 0 ; while ( index < ( var_1 ) ) { if ( var_2 [ index ] . method_2 ( ) ) { var_2 [ index ] . method_1 ( data ) ; index ++ ; } else { method_3 ( index ) ; } } }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; try { java.io.bufferedreader var_4 = new java.io.bufferedreader ( new type_2 ( var_1. method_2 ( ) ) ) ; while ( ( var_2 = var_4. method_3 ( ) )!= null ) { var_3. append ( var_2 ) ; } } catch ( java.io.ioexception var_5 ) { var_5. method_4 ( ) ; } return var_3. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < type_2 > query = method_2 ( string_1 , 0 , false ) ; java.util.list < type_2 > var_2 = query . method_3 ( int_1 , 1 ) ; assertnotnull ( var_2 ) ; assertequals ( int_1 , var_2 . size ( ) ) ; assertequals ( var_3 , var_2 . get ( 0 ) ) ; assertequals ( var_4 , var_2 . get ( 1 ) ) ; }
[0]: public void method_1 ( ) { try { if ( method_2 ( ) ) { method_3 ( ) ; } type_1 data = var_1. method_4 ( int_1, var_2 ) ; var_3. put ( data ) ; var_4. method_5 ( string_1, data, var_3. size ( ) ) ; } catch ( type_2 var_5 ) { var_4. error ( string_2, var_5 ) ; } } }

************

************
tgt: private boolean method_1 ( int var_1 ) { int i = 0 ; for ( i = 0 ; i < ( var_2 . length ) ; i ++ ) { if ( method_2 ( i , var_1 ) ) { if ( ( var_1 > ( ( var_2 [ 0 ] . length ) - int_1 ) ) || ( method_1 ( ( var_1 + 1 ) ) ) ) { return true ; } else { method_3 ( i , var_1 ) ; } } } return false ; }
[0]: public void method_1 ( int [ ] a, int [ ] p, int [ ] c, int var_1, int var_2 ) { int var_3 = var_2 - var_1 ; if ( var_3 > 0 ) { int var_4 = var_1 + ( var_3 / int_1 ) ; method_1 ( a, p, c, var_1, var_4 ) ; method_1 ( a, p, c, ( var_4 + 1 ), var_2 ) ; method_2 ( a, p, c, var_1, var_2 ) ; } }

************

************
tgt: public synchronized void method_1 ( ) throws type_1 { type_2 . info ( string_1 ) ; var_1 = false ; if ( ( var_2 ) != null ) var_2 . method_2 ( ) ; var_3 = null ; var_4 = null ; var_2 = null ; var_5 = null ; var_6 = false ; var_7 . method_3 ( ) ; var_8 = null ; }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( 1, int_1, method_3 ( ) ) ; if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3. setenabled ( false ) ; var_4 [ 1 ] [ int_1 ] = method_3 ( ) ; ( var_5 ) ++ ; }

************

************
tgt: protected java.lang.string method_1 ( byte [ ] ... var_1 ) { try { var_2 = this . method_2 ( ) ; type_1 . method_3 ( var_3 , ( string_1 + ( var_2 . method_4 ( ) ) ) ) ; final java.io.fileoutputstream var_4 = new java.io.fileoutputstream ( var_2 ) ; var_4 . method_5 ( var_1 [ 0 ] ) ; var_4 . method_6 ( ) ; var_4 . method_7 ( ) ; } catch ( java.io.ioexception var_5 ) { type_1 . method_8 ( var_3 , string_2 , var_5 ) ; } return string_3 ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2 ) { if ( var_1. method_2 ( string_1 ) ) { return ; } this. content. method_3 ( var_2. method_4 ( ), var_1 ) ; for ( type_1 var_3 : this. var_4 ) { if ( ( var_3. method_4 ( ) ) >= ( var_2. method_4 ( ) ) ) { var_3. method_5 ( var_1. length ( ) ) ; } } return ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_3 . settext ( getstring ( var_5 ) ) ; var_6 = new type_3 ( this ) ; var_7 = var_6 . method_4 ( ) ; method_5 ( string_1 , string_2 , string_3 ) ; method_5 ( string_4 , string_5 , string_6 ) ; getdata ( ) ; method_7 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string id ) { var_1 = ( ( type_2 ) ( type_3. method_2 ( ). var_2. method_3 ( string_1 ) ) ) ; java.util.set set = var_1. method_4 ( ) ; java.util.iterator < java.lang.string > var_3 = set. iterator ( ) ; while ( var_3. method_5 ( ) ) { type_4 var_4 = var_1. get ( var_3. method_6 ( ) ) ; for ( type_1 c : var_5 ) { if ( var_6. equals ( id ) ) return c ; } } return null ; } }

************

************
tgt: public java.util.list < type_2 > method_1 ( ) { java.util.list < type_2 > var_1 = new java.util.linkedlist < type_2 > ( ) ; if ( ( var_2 ) != null ) { var_1 . add ( var_2 ) ; } if ( ( var_3 ) != null ) { var_1 . add ( var_3 ) ; } if ( ( var_4 ) != null ) { var_1 . add ( var_4 ) ; } if ( ( var_5 ) != null ) { var_1 . add ( var_5 ) ; } return var_1 ; }
[0]: public int method_1 ( ) { int var_1 = 0 ; for ( int i = 1 ; i < ( this. var_2. size ( ) ) ; i ++ ) { var_1 += this. var_2. get ( i ). method_2 ( ) ; } return var_1 ; }

************

************
tgt: protected java.util.list < java.lang.string > method_1 ( java.util.list < java.lang.string > var_1 , java.lang.string var_2 , java.lang.string var_3 ) { java.util.list < java.lang.string > var_4 = new java.util.arraylist < java.lang.string > ( var_1 ) ; if ( var_2 != null ) { java.lang.string [ ] var_5 = var_2 . split ( var_3 ) ; for ( java.lang.string c : var_5 ) { if ( ( c . length ( ) ) > 0 ) { var_4 . add ( c ) ; } } } return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2. isempty ( ) ) { this. var_1 = var_1 ; type_2. method_2 ( this. var_1 ) ; var_3. method_3 ( var_1, null ) ; var_3. method_4 ( ) ; } else { var_2. add ( var_1 ) ; } }

************

************
tgt: protected type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( string_1 , string_2 , false , string_3 ) ; var_1 . method_2 ( string_4 , string_5 , true , string_6 ) ; var_1 . method_2 ( string_7 , false , string_8 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 attribute ) throws type_4, type_5, type_6 { type_7 var_3 = method_2 ( var_1, attribute ) ; if ( var_3 == null ) return ; try { var_3. method_1 ( ( ( type_8 ) ( var_1 ) ), var_2, attribute ) ; } catch ( type_9 var_4 ) { throw new type_4 ( var_4 ) ; } catch ( type_6 var_4 ) { throw new type_4 ( var_4 ) ; } }

************

************
tgt: public type_1 method_1 ( int id ) { type_2 var_1 ; type_1 var_2 = null ; try { var_1 = new type_3 ( new type_4 ( ) ) ; type_5 var_3 = new type_5 ( var_1 ) ; var_2 = var_3 . method_2 ( id ) ; } catch ( java.lang.exception var_4 ) { java.lang.system.out.println ( ( string_1 + ( var_4 . method_3 ( ) ) ) ) ; type_6 . method_4 ( type_7 . method_5 ( string_2 ) ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { int count ; try { count = var_1. method_2 ( ) ; } catch ( type_2 var_2 ) { return ; } finally { var_3. method_3 ( new type_3 ( ) { public void method_1 ( ) { var_4. method_4 ( ) ; } } ) ; } if ( count > 0 ) { android.content.intent var_5 = new android.content.intent ( method_5 ( ), var_6 class ) ; var_5. method_6 ( var_7 ) ; method_7 ( var_5 ) ; } } }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 ) { if ( ( var_6 ) == null ) { return ; } type_2 var_2 = var_1 . method_2 ( ) ; int var_3 = ( var_2 != null ) ? var_4 . method_3 ( ) : 0 ; int var_5 = ( ( var_6 ) != null ) ? var_7 . method_3 ( ) : 0 ; if ( ( var_5 == 1 ) && ( var_3 == 0 ) ) { var_8 . method_4 ( false ) ; } else { var_8 . method_4 ( true ) ; } }
[0]: public static void index ( ) { int var_2 = ( ( int ) ( type_2. count ( ) ) ) ; java.util.list < type_2 > var_3 = type_2. method_1 ( ). method_2 ( ( var_2 - int_1 ) ). method_3 ( int_2 ) ; if ( var_3!= null ) { method_4 ( var_3 ) ; } else { method_5 ( string_1 ) ; } }

************

************
tgt: private boolean method_1 ( ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( ) ; boolean var_3 = false ; java.util.iterator i = var_1 . iterator ( ) ; while ( ( i . method_3 ( ) ) && ( ! var_3 ) ) { type_1 var_4 = ( ( type_1 ) ( i . method_4 ( ) ) ) ; var_3 |= ( var_4 . method_5 ( ) . equals ( string_1 ) ) && ( var_4 . method_6 ( ) . equals ( string_2 ) ) ; } return var_3 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( var_2 class ) ; type_3 writer = new type_4 ( int_1, int_2, int_3 ) ; try ( type_5 var_3 = new type_5 ( var_1, var_4, method_3 ( writer ), method_2 ( var_5 class ) ) ) { var_3. method_4 ( node ( int_2 ) ) ; var_3. method_4 ( node ( int_3 ) ) ; var_3. method_4 ( node ( int_1 ) ) ; var_3. method_5 ( ) ; } } }

************

************
tgt: private static double method_1 ( int p ) { int var_1 = int_1 ; int var_2 = - int_1 ; if ( p > var_1 ) p = var_1 ; if ( p < var_2 ) p = var_2 ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.math.abs ( p ) ) ; } }
[0]: public type_1 method_1 ( int var_1 ) { for ( type_1 var_2 : var_3 ) { if ( ( ( var_2. method_2 ( ) ) < var_1 ) && ( ( var_2. method_3 ( ) ) > var_1 ) ) { return var_2 ; } } return null ; }

************

************
tgt: public static void method_1 ( android.content.context context , type_1 var_1 , int var_2 ) { type_2 . init ( var_1 ) ; context . method_2 ( new android.content.intent ( context , var_3 class ) . method_3 ( var_4 , var_2 ) . method_3 ( var_5 , var_6 ) . method_3 ( var_7 , type_3 . name ( ) ) ) ; }
[0]: protected void method_1 ( final type_1 var_1 ) { synchronized ( var_2 ) { if ( ( ( ( var_3 ) == null ) && ( var_1 == null ) ) || ( ( ( var_3 )!= null ) && ( var_3. equals ( var_1 ) ) ) ) return ; final type_1 var_4 = var_3 ; var_3 = var_1 ; for ( type_2 var_5 : var_6. values ( ) ) var_5. update ( false ) ; method_2 ( string_1, var_4, var_1 ) ; } }

************

************
tgt: public type_1 method_1 ( final type_1 var_1 ) { method_2 ( var_1 ) ; if ( ( var_2 ) >= ( var_3 ) ) { this . var_1 . method_3 ( var_4 , method_4 ( var_2 ) , var_5 , method_5 ( ) ) ; } else { this . var_1 . method_3 ( method_6 ( var_3 ) , var_6 , var_5 , method_5 ( ) ) ; } return this . var_1 ; }
[0]: public boolean method_1 ( int x, int y ) { if ( ( x < ( this. var_1 ) ) || ( ( var_1 ) > ( this. height ) ) ) { return false ; } else if ( ( y < ( this. height ) ) || ( ( height ) > ( this. height ) ) ) { return false ; } else if ( ( var_2. data [ x ] [ y ] ) > 0 ) { return false ; } else return true ; } }

************

************
tgt: public void method_1 ( ) { var_1 = false ; try { var_2 . method_2 ( this ) ; var_3 . method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } if ( var_5 ) { var_6 . method_1 ( ) ; var_7 . method_1 ( ) ; } var_3 = null ; }
[0]: public void method_1 ( java.lang.string text, type_1 var_1, boolean var_2 ) { if ( var_3. startswith ( text ) ) { var_3 = method_2 ( var_3, text ) ; try { var_4. method_3 ( var_1 ) ; var_4. method_4 ( ( var_2 |= var_4. method_5 ( ) ) ) ; } catch ( java.lang.exception var_5 ) { var_5. method_6 ( ) ; } } }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + string_3 ) + ( var_2 ) ) + string_2 ) + string_4 ) + ( var_3 ) ) + string_2 ) + string_5 ) + ( var_4 ) ) + string_2 ) + string_7 ) + ( var_6 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { switch ( var_2 ) { case 0 : method_2 ( ). method_3 ( var_3. main, var_1 ) ; break ; case 1 : method_2 ( ). method_3 ( var_4, var_1 ) ; break ; default : method_2 ( ). method_3 ( var_5, var_1 ) ; } return true ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( android.widget.button ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( android.widget.button ) ( method_3 ( var_6 ) ) ) ; var_3 . method_4 ( this ) ; var_5 . method_4 ( this ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_1 var_2 ) { type_2 var_3 = new type_2 ( var_1, var_2, var_4 ) ; type_1 var_5 = var_3. method_2 ( ) ; var_6. method_3 ( var_3. method_4 ( ) ) ; var_6. method_5 ( ) ; var_7. method_6 ( var_5 ) ; method_7 ( ) ; return var_5 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { synchronized ( this ) { if ( ( ( ( this . var_3 ) != null ) && ( var_1 . equals ( this . var_1 ) ) ) && ( ! ( this . var_3 . equals ( var_2 ) ) ) ) { method_2 ( var_4 , var_5 , java.lang.string.format ( string_1 , var_1 , this . var_6 , this . var_3 , var_2 ) ) ; } } }
[0]: private void method_1 ( ) { if ( ( var_1 ) >= ( var_2 ) ) { if ( ( var_3. method_2 ( ) )!= null ) { var_3. method_3 ( null ) ; var_3. method_4 ( ). method_5 ( 0 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { synchronized ( var_2 ) { if ( ! ( var_2 . method_2 ( var_1 . getname ( ) ) ) ) { return ; } var_2 . remove ( var_1 . getname ( ) ) ; } for ( type_2 var_3 : var_4 . values ( ) ) { var_3 . method_1 ( var_1 ) ; } }
[0]: void method_1 ( ) { assert! ( java.lang.thread. method_2 ( this ) ) ; final java.util.arraylist < type_1 > var_1 ; synchronized ( this ) { final boolean var_2 = method_3 ( ) ; if ( ( -- ( var_3 ) )!= 0 ) { return ; } var_1 = new java.util.arraylist < type_1 > ( ) ; method_4 ( var_1 ) ; var_4 += var_1. size ( ) ; method_5 ( var_2 ) ; } method_6 ( var_1 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 message ) { var_1 . info ( string_1 ) ; long var_2 = type_3 . method_2 ( ) ; var_4 . method_6 ( message ) ; long var_5 = ( type_3 . method_2 ( ) ) - var_2 ; var_1 . info ( ( ( string_2 + var_5 ) + string_3 ) ) ; return null ; }
[0]: public void method_1 ( final double [ ] data ) { int var_1 = ( data. length ) * ( var_2 ) ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_3. method_4 ( type_1. method_5 ( data ), ( ( var_4 ) + ( position ) ), var_1 ) ; position += var_1 ; }

************

************
tgt: private void method_1 ( boolean var_1 ) { int var_2 ; if ( var_1 ) { var_2 = var_3 ; } else { var_2 = type_1 . getcolor ( method_2 ( ) , var_4 , null ) ; } var_5 . method_3 ( ( ( method_4 ( ) ) / int_1 ) , var_2 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; if (! ( method_3 ( ) ) ) { return ; } var_3. method_4 ( var_4 ) ; var_3. method_5 ( var_5 ) ; var_3. method_6 ( var_4 ) ; var_3. method_7 ( var_6 ) ; var_3. method_8 ( var_4 ) ; var_3. method_9 ( var_4 ) ; var_3. method_10 ( var_4 ) ; method_11 ( ) ; }

************

************
tgt: public static void method_1 ( final java.lang.string name ) { java.util.iterator < type_1 > iterator = var_2 . iterator ( ) ; type_1 var_3 ; while ( iterator . method_2 ( ) ) { var_3 = iterator . method_3 ( ) ; if ( var_3 . getname ( ) . method_4 ( name ) ) { var_2 . remove ( var_3 ) ; } } }
[0]: public static type_1 method_1 ( java.lang.string var_1, byte [ ] var_2 ) { java.lang.string var_3 = new java.lang.string ( var_2 ) ; java.lang.string [ ] var_4 = var_3. split ( var_5 ) ; return new type_1 ( var_1, var_4 [ 1 ], java.lang.integer.parseint ( var_4 [ int_1 ] ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( var_2 . method_2 ( ) ) == 0 ) { return ; } if ( ( var_2 . method_4 ( ) . tostring ( ) . length ( ) ) <= 0 ) return ; type = type_3 . method_5 ( ( ( java.lang.string ) ( var_2 . method_4 ( ) ) ) ) ; }
[0]: private void method_1 ( ) { java.lang.stringbuffer buf = new java.lang.stringbuffer ( ) ; for ( java.lang.object var_1 : var_2. method_2 ( ) ) { buf. append ( var_1 ). append ( char_1 ) ; } if ( ( var_3 )!= null ) { var_3. settext ( buf. tostring ( ) ) ; } }

************

************
tgt: private synchronized void method_1 ( type_1 message ) { for ( type_2 c : var_1 . method_2 ( ) ) { try { type_3 var_2 = new type_3 ( c . method_3 ( ) ) ; var_2 . method_4 ( message . tostring ( ) ) ; } catch ( java.io.ioexception var_3 ) { var_1 . remove ( c ) ; java.lang.system.out.println ( string_1 ) ; } } }
[0]: public type_1 <? > method_1 ( java.lang.string var_1 ) { var_2. method_2 ( string_1, var_1 ) ; type_2 var_3 = var_4. method_1 ( var_1 ) ; var_2. info ( string_2, var_3. getid ( ) ) ; var_2. method_2 ( string_3, var_3. tostring ( ) ) ; return type_1. method_3 ( var_3. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; var_1 . init ( var_2 ) ; var_1 . method_2 ( var_2 . method_3 ( string_1 ) , var_2 . method_3 ( string_2 ) ) ; var_1 . method_4 ( ) ; type_2 . assertequals ( var_3 . tostring ( ) , var_4 . tostring ( ) ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( final int var_2 : var_3 ) { if ( var_2 == ( var_4 ) ) { var_1 = var_1 + string_2 ; } if ( var_2 == ( var_5 ) ) { var_1 = var_1 + string_3 ; } if ( var_2 == ( var_6 ) ) { var_1 = var_1 + string_4 ; } } return var_1 ; }

************

************
tgt: public synchronized void method_1 ( ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( ) ; var_2 = null ; } if ( ( var_3 ) != null ) { var_3 . method_2 ( ) ; var_3 = null ; } if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; var_1 = null ; } method_3 ( var_4 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = var_3. method_2 ( var_1 ) ; if ( var_2!= null ) { java.lang.string var_4 = var_2. method_3 ( ) ; java.lang.string var_5 = var_2. method_4 ( ) ; method_5 ( var_4, var_5 ) ; var_6 = var_2 ; var_7. method_6 ( false ) ; } else { var_7. method_7 ( var_8 ) ; } }

************

************
tgt: public void method_1 ( ) { var_2 . method_2 ( null ) ; var_2 . method_3 ( new type_1 ( ) { public void method_4 ( ) { method_5 ( ) ; } } , int_1 ) ; var_3 = var_4 . method_6 ( ) . method_7 ( ) . var_5 ; type_2 . method_8 ( string_1 ) ; }
[0]: public synchronized void method_1 ( type_1 var_1, boolean commit ) throws java.io.ioexception { java.util.hashset < type_2 > var_2 = this. method_2 ( var_1 ) ; java.util.hashset < type_2 > var_3 = ( ( java.util.hashset < type_2 > ) ( var_2. method_3 ( ) ) ) ; for ( type_2 var_4 : var_3 ) { this. method_4 ( var_1, var_4 ) ; } }

************

************
tgt: private java.util.hashmap method_1 ( ) { java.util.hashmap info = new java.util.hashmap < > ( ) ; info . put ( string_1 , method_2 ( ) ) ; info . put ( string_2 , method_3 ( ) ) ; info . put ( string_3 , method_4 ( ) ) ; info . put ( string_4 , method_5 ( ) ) ; info . put ( string_5 , method_6 ( ) ) ; return info ; }
[0]: private void method_1 ( ) { var_1 = context. method_2 ( var_2 class, new type_1 ( ), new type_2 < java.lang.string, java.lang.string > ( ) ) ; if ( ( method_3 ( var_3 ) )!= null ) var_4 = context. method_2 ( var_5 class, new type_3 ( ), new type_2 < java.lang.string, java.lang.string > ( ) ) ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( java.util.list < type_2 > var_1 ) { java.util.list < type_1 > var_4 = new java.util.arraylist < > ( ) ; var_4 . add ( new type_1 ( var_2 , var_3 ) ) ; for ( type_2 var_5 : var_1 ) { var_4 . add ( new type_1 ( var_5 . method_3 ( ) , var_5 . method_4 ( ) ) ) ; } return var_4 ; }
[0]: public static void method_1 ( java.lang.string var_1, type_1 var_2 ) throws java.io.ioexception { try ( java.io.inputstream var_3 = var_4 class. method_2 ( var_1 ) ; type_2 out = type_3. method_3 ( var_2 ) ) { int var_5 ; final byte [ ] buffer = new byte [ var_6 ] ; while ( ( var_5 = var_3. method_4 ( buffer ) ) > 0 ) { out.write ( buffer, 0, var_6 ) ; } } }

************

************
tgt: public void method_1 ( ) throws type_1 { float var_1 = var_2 . method_2 ( ) ; int var_3 = var_2 . method_3 ( ) ; int var_4 = ( ( int ) ( var_1 ) ) / ( var_5 ) ; if ( ( ( var_6 ) - var_3 ) <= var_4 ) { var_2 . method_4 ( var_1 ) ; } }
[0]: public static void method_1 ( final type_1 var_1, final java.lang.string text, final type_2 t ) { var_1. settext ( ( ( text + ""\n"" ) + ( var_2. get ( t ) ) ) ) ; var_1. method_2 ( new type_3 ( ) { public void method_3 ( type_4 var_3 ) { var_1. settext ( ( ( text + ""\n"" ) + ( var_4. get ( t ) ) ) ) ; } } ) ; } }

************

************
tgt: private final java.lang.float method_1 ( final java.lang.long var_1 , final java.lang.long var_3 , final type_1 var_2 ) { java.lang.float result = null ; if ( ( ( var_1 != null ) && ( var_3 != null ) ) && ( ( var_3 . method_3 ( ) ) > 0l ) ) { result = ( var_1 * ( ( float ) ( type_2 . method_4 ( 1 , var_2 ) ) ) ) / ( ( float ) ( var_3 ) ) ; } return result ; }
[0]: public void method_1 ( ) throws type_1, type_2, type_3 { type_4 var_1 = new type_4 ( ) ; type_5 var_2 = type_6. method_2 ( var_3 class ) ; type_6. method_3 ( var_2. query ( type_7. method_4 ( var_4 class ) ) ). method_5 ( new type_8 ( null, string_1 ) ) ; var_1. method_6 ( var_2 ) ; var_1. method_7 ( var_5 ) ; this. var_1 = var_1 ; }

************

************
tgt: public void start ( java.lang.string var_1 , java.lang.string var_2 , java.util.set < java.lang.string > var_3 ) { this . var_1 = var_1 ; this . var_2 = var_2 ; this . var_3 = var_3 ; type_1 . i ( string_1 , ( ( ( ( var_1 + string_2 ) + var_2 ) + string_2 ) + var_3 ) ) ; }
[0]: private type_1 method_1 ( int k, type_2 var_1 ) { if ( var_2. method_2 ( ) ) { return var_3. method_1 ( k, var_1 ) ; } else { type_1 sum = var_4 ; for ( type_3 var_5 : method_3 ( k, var_1, 0 ) ) { sum = sum. add ( var_5. method_1 ( ) ) ; } return sum ; } }

************

************
tgt: protected static < type_1 > type_1 method_1 ( type_2 var_1 , type_3 < type_1 > var_2 ) { try { type_4 p = new type_4 ( var_3 ) ; return p . method_1 ( var_1 , var_2 ) ; } catch ( java.lang.exception var_4 ) { return null ; } }
[0]: public void method_1 ( android.view.view view ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; java.lang.string var_3 = java.lang.string. method_3 ( var_1. method_4 ( ) ) ; list. add ( var_3 ) ; type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; type_2 < java.lang.string > var_6 = new type_2 < java.lang.string > ( this, var_7, list ) ; var_6. method_5 ( var_8 ) ; var_4. method_6 ( var_6 ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , android.view.view var_2 ) { android.content.intent intent = new android.content.intent ( var_1 , var_3 class ) ; intent . method_2 ( var_4 ) ; if ( ! ( var_5 . getboolean ( var_6 , false ) ) ) { type_2 var_7 = type_2 . method_3 ( var_1 , var_2 , var_8 ) ; type_3 . method_4 ( var_1 , intent , var_9 , var_7 . method_5 ( ) ) ; } else { var_1 . method_4 ( intent , var_9 ) ; } }
[0]: public int method_1 ( int var_1, int var_2 ) { int var_3 = 0 ; switch ( var_1 ) { case 0 : var_3 = 1 ; break ; case 1 : var_3 = int_1 ; break ; case int_2 : var_3 = int_3 ; break ; case int_4 : var_3 = int_5 ; break ; case int_6 : var_3 = int_7 ; break ; case int_1 : var_3 = int_8 ; break ; } return var_3 * var_2 ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( 0 , 0 , method_4 ( ) . var_3 , method_4 ( ) . height ) ; var_1 . method_2 ( var_4 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { synchronized ( var_2 class ) { for ( type_2 var_3 : var_4. method_2 ( ) ) { var_1. method_3 ( new java.awt.color ( int_1, int_2, int_3 ) ) ; var_1. method_4 ( ( ( ( int ) ( var_3. x ) ) - int_4 ), ( ( ( int ) ( var_3. y ) ) - int_4 ), int_5, int_5 ) ; } } }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { if ( var_1 . method_2 ( ) ) { type_3 . method_3 ( var_2 , string_1 ) ; type_4 var_3 = var_4 . method_4 ( ) ; } else { type_3 . method_6 ( var_2 , string_2 , var_1 . method_7 ( ) ) ; type_5 . method_8 ( this , string_3 , var_5 ) . show ( ) ; } }
[0]: public java.lang.object method_1 ( long var_1, type_1 var_2 ) throws type_2 { type_3 var_3 = var_4. method_2 ( var_1, var_2 ) ; if ( ( var_5 ) == null ) return null ; var_5 = var_3. method_3 ( ) ; return var_3. method_4 ( ) ; }

************

************
tgt: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_2 = new type_3 ( ( var_1 = new type_2 ( ) ) ) ; } if ( ( type_4 . method_1 ( ) . method_2 ( ) ) == ( var_3 ) ) { return var_2 ; } else { return var_1 ; } }
[0]: public boolean method_1 ( ) { if (! ( var_1. method_1 ( ) ) ) { return false ; } type_1 var_2 = var_1. method_2 ( ) ; if ( var_2. method_3 ( ) ) { var_1. method_4 ( ) ; } return true ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_2 var_2 = new type_2 ( this ) ; var_2 . method_4 ( string_2 ) ; type_3 var_3 = new type_3 ( method_3 ( ) ) ; var_3 . method_5 ( var_4 ) ; var_2 . method_6 ( var_3 ) ; var_2 . show ( ) ; }
[0]: public static void method_1 ( java.lang.string var_1, java.lang.string error, java.lang.throwable var_2 ) { java.lang.system.err.println ( ( ( var_1 + string_1 ) + error ) ) ; var_2. method_2 ( ) ; if ( ( var_3 )!= null ) var_3. method_3 ( string_2, var_1, error, var_2, true ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( var_1 . isempty ( ) ) return ; if ( ( var_3 ) < 0 ) { return ; } type_1 var_2 = var_1 . get ( var_3 ) ; android.content.intent intent = new android.content.intent ( this , var_4 class ) ; intent . method_2 ( string_1 , var_2 ) ; method_3 ( var_5 , intent ) ; method_4 ( ) ; }
[0]: public void method_1 ( ) { int count = 0 ; java.util.iterator < java.lang.integer > iterator = var_1. method_2 ( type_1. method_3 ( type_2. tostring ( ) ), type_3. method_4 ( var_2 ) ) ; while ( iterator. method_5 ( ) ) { iterator. method_6 ( ) ; count ++ ; } type_4. assertequals ( 1, count ) ; }

************

************
tgt: private void method_1 ( int position ) { type_1 var_1 = var_2 . method_2 ( ) . get ( position ) ; if ( ( var_3 ) != null ) { if ( ( var_4 . get ( position ) ) != null ) var_1 . method_3 ( var_4 . get ( position ) ) ; } else { var_1 . method_4 ( var_5 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string content, type_1 [ ] var_4, java.util.date var_5, java.lang.boolean var_6, java.lang.string var_7 ) throws type_2 { return method_2 ( var_8, var_1, var_2, null, var_3, content, var_4, var_5, var_6, var_7 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 ) ) { type_1 . method_2 ( new type_2 < java.lang.object > ( ) { public java.lang.object method_3 ( ) { type_3 var_2 = type_4 . method_4 ( var_3 this , var_3 this . name ) ; var_3 this . method_5 ( var_2 ) ; var_3 this . var_1 = true ; return null ; } } ) ; } }
[0]: public void method_1 ( long n ) { if ( ( var_1 ) == 1 ) { return ; } if ( type_1. method_2 ( n, var_2 ) ) { type_1. method_3 ( var_3, this, n ) ; if ( n == ( var_4 ) ) { type_2 var_5 = this. var_5 ; if ( var_5!= null ) { var_5. method_1 ( n ) ; } } else { method_4 ( ) ; } } } }

************

************
tgt: private void method_1 ( type_1 event ) { var_1 . method_2 ( true ) ; var_1 . method_3 ( event . method_4 ( ) ) ; var_1 . method_5 ( event . method_6 ( ) ) ; var_2 . settext ( java.lang.integer.tostring ( ( ( int ) ( event . method_4 ( ) ) ) ) ) ; var_3 . settext ( java.lang.integer.tostring ( ( ( int ) ( event . method_6 ( ) ) ) ) ) ; if ( var_4 . method_7 ( ) . method_8 ( ) ) var_1 . method_2 ( false ) ; }
[0]: private void method_1 ( int var_1 ) { if ( ( var_2 )!= ( var_3 ) ) return ; final int var_4 = var_5 ; if ( var_4 == var_1 ) return ; type_1. method_2 ( var_6, ( ( string_1 + string_2 ) + var_4 ) ) ; method_3 ( var_4, true ) ; var_5 = var_1 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 { for ( int i = 0 ; i < int_1 ; i ++ ) { java.lang.system.out.println ( ( string_1 + ( type_2 . method_1 ( ) ) ) ) ; } type_3 var_1 = type_3 . method_2 ( string_2 ) ; java.lang.system.out.println ( var_1 . tostring ( ) ) ; java.lang.system.out.println ( type_2 . method_3 ( var_1 ) ) ; java.lang.system.out.println ( type_2 . method_4 ( ) ) ; }
[0]: private type_1 [ ] method_1 ( type_2 var_1 ) { type_3 var_2 = new type_4 ( string_1 ) ; type_5 var_3 = new type_5 ( var_4, var_5. method_2 ( ) ) ; var_2 = new type_6 ( var_2, var_3 ) ; try { return var_1. method_3 ( var_2 ) ; } catch ( type_7 var_6 ) { type_8. method_4 ( var_7, var_6. tostring ( ) ) ; return new type_1 [ 0 ] ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_4 = java.lang.double . method_3 ( var_2 . gettext ( ) . tostring ( ) ) ; var_4 = ( var_4 ) * ( - 1 ) ; var_2 . settext ( java.lang.string . method_4 ( var_4 ) ) ; }
[0]: private void method_1 ( ) { java.lang.string var_1 = var_2 [ var_3. method_2 ( ) ] ; type_1 var_4 = new type_1 ( type_2. method_3 ( var_5, this ), var_6, this ) ; var_4. execute ( new type_3 ( var_6, var_1, var_7. gettext ( ). tostring ( ). trim ( ). tolowercase ( ) ) ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { if ( ( method_2 ( ) ) == null ) { return ; } if ( method_2 ( ) . method_3 ( ) ) { if ( method_4 ( ) ) { method_5 ( var_2 ) ; } } else { if ( ! ( method_4 ( ) ) ) { method_5 ( var_3 ) ; } } var_4 = var_1 ; if ( ( var_4 ) == ( var_5 ) ) { var_6 = type_1 . method_6 ( ) ; } this . method_7 ( ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { type_2 var_1 = type_3. method_2 ( string_1, string_2 ) ; type_4 var_2 = type_5. method_3 ( var_1, string_3 ) ; type_6. asserttrue ( type_7. method_4 ( var_2, string_4 ) ) ; type_6. asserttrue ( (! ( type_7. method_4 ( var_2, string_5 ) ) ) ) ; var_1. delete ( true, null ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( var_1 . method_2 ( string_1 ) ) { var_1 = var_1 . substring ( 0 , ( ( var_1 . length ( ) ) - 1 ) ) ; } java.lang.string var_3 = ( ( var_1 + string_2 ) + var_2 ) + string_3 ; return var_3 ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; try { var_1. init ( args ) ; var_1. method_1 ( ) ; } catch ( type_2 | java.io.ioexception | type_3 var_2 ) { var_2. method_2 ( ) ; java.lang.system.exit ( ( - 1 ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { int n = var_2 . size ( ) ; for ( n -= 1 ; n >= 0 ; n -- ) { type_1 var_3 = var_2 . get ( n ) . var_4 . get ( var_1 ) ; if ( var_3 != null ) { return var_3 ; } } return null ; }
[0]: public void method_1 ( ) { try { type_1. method_2 ( ). method_3 ( var_1 ) ; } catch ( java.lang.exception var_2 ) { type_2. method_4 ( var_3, string_1 ) ; type_2. method_4 ( var_3, var_2. tostring ( ) ) ; } }

************

************
tgt: public double method_1 ( final type_1 p ) { double var_1 = var_2 ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { final type_2 var_4 = var_3 . get ( i ) ; final double var_5 = var_4 . method_1 ( p ) ; if ( var_5 < var_1 ) { var_1 = var_5 ; } } return var_1 ; }
[0]: public boolean method_1 ( ) { return ( ( ( ( var_1. open ( ) ) && ( var_2. open ( var_3. method_2 ( ) ) ) ) && ( var_4. open ( var_3. method_3 ( ) ) ) ) && ( var_5. method_4 ( ) ) ) && ( var_6. start ( ) ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 . method_2 ( var_1 , string_1 ) ; type_2 . method_3 ( this , var_2 . method_6 ( ) ) ; type_2 . method_5 ( this , var_3 , var_4 , var_5 , var_6 , ( var_7 . method_6 ( ) ? 1 : 0 ) ) ; }
[0]: public static void main ( final java.lang.string [ ] args ) throws type_1 { final long var_1 = ( ( args.length ) > 1 )? java.lang.long.parselong ( args [ 1 ] ) : var_2 ; type_2 var_3 = new type_2 ( var_1 ) ; var_3. method_1 ( ) ; var_3. method_2 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( var_2 . length ( ) ) == 0 ) && ( ( var_1 . method_2 ( ) ) != ( var_3 ) ) ) { var_1 . method_3 ( ) ; method_4 ( ) ; } else { java.lang.string item = string_1 ; long var_4 = type_2 . method_5 ( ) ; var_5 . add ( java.lang.string.format ( item , var_4 , var_1 . method_2 ( ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2. method_2 ( ) ) == null ) { method_3 ( var_2. method_2 ( ) ) ; } else { type_1 var_3 = new type_1 ( ) ; var_3. method_4 ( new type_2 ( ) { public void method_5 ( byte [ ] result ) { var_2. method_6 ( result ) ; type_3. update ( var_2 ) ; method_3 ( result ) ; } } ) ; var_3. method_7 ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_1 == null ) { type_3 . method_2 ( string_1 , string_2 ) ; method_4 ( ) ; } else if ( var_1 . method_3 ( ) ) { type_3 . method_2 ( string_1 , string_3 ) ; method_4 ( ) ; } else { method_5 ( ) ; type_3 . method_2 ( string_1 , string_4 ) ; } }
[0]: public void method_1 ( ) { getcontext ( ). method_2 ( 1, 0 ) ; getcontext ( ). method_2 ( int_1, 0 ) ; type_1 message = new type_1 ( int_2, type_2. gettext ( string_1 ) ) ; getcontext ( ). message ( message ) ; }

************

************
tgt: public java.util.map < java.lang.string , java.lang.string > method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { try { type_2 var_3 = var_4 . method_2 ( var_1 ) ; java.util.map < java.lang.string , java.lang.string > result = var_5 . method_3 ( var_2 , var_3 ) ; return result ; } catch ( java.lang.exception var_6 ) { var_6 . method_6 ( ) ; throw new type_3 ( var_6 ) ; } }
[0]: private type_1 method_1 ( int x, int y ) { type_1 var_1 = var_2. method_2 ( var_3, x, y, 0 ) ; for ( int i = 0 ; i < ( var_2. method_3 ( ) ) ; i ++ ) { type_1 p = var_2. method_4 ( i ) ; if ( p. equals ( var_1 ) ) { continue ; } var_2. method_5 ( p, var_1, var_4, var_5 ) ; } return var_1 ; }

************

************
tgt: public long method_1 ( java.lang.string var_1 ) { long var_2 = 0 ; long var_3 ; java.lang.string [ ] var_4 = var_1 . split ( string_1 ) ; int length = ( var_4 . length ) - 1 ; for ( int i = length ; i >= 0 ; i -- ) { var_3 = java.lang.long.parselong ( var_4 [ ( length - i ) ] ) ; var_2 |= var_3 < < ( i * int_2 ) ; } return var_2 ; }
[0]: protected void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = method_2 ( ) ; java.lang.string value = method_2 ( ) ; type_1 < java.lang.string > var_2 = var_3. remove ( var_1 ) ; if ( var_2!= null ) { synchronized ( var_2 ) { var_2. set ( value ) ; var_2. method_3 ( ) ; } } } }

************

************
tgt: private void method_1 ( ) throws java.io.ioexception { if ( var_1 ) { method_2 ( string_2 , this . var_2 , this . var_3 , ( ( ( this . var_2 ) + ( var_4 ) ) + ( var_5 ) ) , this . var_3 ) ; } this . var_6 . method_3 ( ) ; }
[0]: public void method_1 ( boolean var_1, type_1 view ) { if ( var_1 || ( var_3 ) ) new type_3 ( view ). execute ( var_4, var_2 ) ; else new type_3 ( view ). execute ( var_2, var_4 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; try { java.io.bufferedreader var_4 = new java.io.bufferedreader ( new type_2 ( var_1 . method_2 ( ) ) ) ; while ( ( var_2 = var_4 . method_3 ( ) ) != null ) { var_3 . append ( var_2 ) . append ( "\n" ) ; } } catch ( java.io.ioexception var_5 ) { var_5 . method_4 ( ) ; } return var_3 . tostring ( ) ; }
[0]: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == false ) { type_1. method_2 ( this, string_1, var_2 ). show ( ) ; var_3. method_3 ( type_2. method_4 ( string_2 ) ) ; } else { type_1. method_2 ( this, string_3, var_2 ). show ( ) ; var_3. method_3 ( type_2. method_4 ( string_4 ) ) ; } }

************

************
tgt: public void method_1 ( ) { try { if ( method_2 ( ) ) { method_3 ( ) ; } type_1 data = var_1 . method_4 ( int_1 , var_2 ) ; if ( data != null ) { var_3 . put ( data ) ; var_4 . info ( string_1 , data , var_3 . size ( ) ) ; } } catch ( type_2 var_5 ) { var_4 . error ( string_2 , var_5 ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { var_1. method_2 ( true ) ; var_2. method_3 ( ) ; switch ( var_1. method_4 ( ) ) { case var_3 : method_5 ( string_1 ) ; method_6 ( 0 ) ; break ; case var_4 : method_5 ( string_2 ) ; method_6 ( 1 ) ; break ; } return true ; }

************

************
tgt: void method_1 ( int [ ] a , int [ ] p , int [ ] c , int var_1 , int var_2 ) { if ( var_1 >= var_2 ) { return ; } int var_4 = ( var_1 + var_2 ) / int_1 ; method_1 ( a , p , c , var_1 , var_4 ) ; method_1 ( a , p , c , ( var_4 + 1 ) , var_2 ) ; method_2 ( a , p , c , var_1 , var_4 , var_2 ) ; }
[0]: private java.lang.string method_1 ( int var_1, int var_2 ) { java.lang.string var_3 = text. substring ( var_1, var_2 ) ; int var_4 = var_3. method_2 ( string_1 ) ; if ( var_4 == ( - 1 ) ) { return string_2 ; } else { return var_3. substring ( var_4, ( ( var_3. length ( ) ) - 1 ) ). trim ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3 . setenabled ( false ) ; var_4 [ 1 ] [ int_1 ] = method_3 ( ) ; ( var_5 ) ++ ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( ( var_1. length ( ) ) == 0 ) ) return null ; for ( java.lang.string var_2 : var_3 ) { if ( var_2. startswith ( var_1 ) ) return var_2 ; } return null ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) { if ( var_1 . method_2 ( string_1 ) ) { return ; } int start = var_2 . method_4 ( ) ; this . content . method_3 ( start , var_1 ) ; for ( type_1 var_3 : this . var_4 ) { if ( ( var_3 . method_4 ( ) ) >= start ) { var_3 . method_5 ( var_1 . length ( ) ) ; } } return ; }
[0]: public static boolean method_1 ( java.lang.string path ) { path = path. trim ( ). tolowercase ( ) ; if ( ( ( path. method_2 ( var_1 ) ) || ( path. method_2 ( var_2 ) ) ) || ( path. method_2 ( var_3 ) ) ) { return true ; } return false ; }

************

************
tgt: public type_1 method_1 ( java.lang.string name , java.lang.string id ) { type_4 var_4 = var_1 . get ( name ) ; if ( var_4 == null ) return null ; for ( type_1 c : var_5 ) { if ( var_6 . equals ( id ) ) return c ; } return null ; }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { synchronized ( this ) { if ( ( var_1 ) == null ) { if ( ( var_2 ) <= 0 ) { var_1 = new type_2 ( super. method_1 ( ) ) ; } else { var_1 = new type_3 ( new type_4 ( var_2, super. method_1 ( ) ) ) ; } } return var_1 ; } } }

************

************
tgt: public int method_1 ( ) { int var_1 = 0 ; for ( int i = 0 ; i < ( this . var_2 . size ( ) ) ; i ++ ) { var_1 += this . var_2 . get ( i ) . method_2 ( ) ; } return var_1 ; }
[0]: public static type_1 method_1 ( type_2 var_1 ) { type_2 var_2 = var_1. method_2 ( string_1 ) ; var_2. method_3 ( new type_3 ( ) { public void method_4 ( type_4 var_3 ) { type_1 var_4 = var_3. getvalue ( var_5 class ) ; type_5. method_5 ( var_4 ) ; } public void method_6 ( type_6 var_6 ) { } } ) ; return var_7 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . isempty ( ) ) && ( ( this . var_1 ) == null ) ) { this . var_1 = var_1 ; type_2 . method_2 ( this . var_1 ) ; var_3 . method_3 ( var_1 , null ) ; var_3 . method_4 ( ) ; } else { var_2 . add ( var_1 ) ; } }
[0]: public void method_1 ( java.util.collection <? extends type_1 > var_1 ) { var_1. method_2 ( ). method_3 ( ( var_2 ) - > var_1. method_2 ( ). method_4 ( ( var_3 ) - > method_5 ( var_2, var_3 ) ) ). method_6 ( ( var_4 ) - > ( var_4. method_7 ( ) ) <= ( var_5 ) ). method_8 ( ( var_4 ) - > var_4. method_9 ( var_6 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 attribute ) throws type_4 , type_5 , type_6 { type_7 var_3 = method_2 ( var_1 , attribute ) ; if ( var_3 == null ) return ; try { var_3 . method_1 ( ( ( type_8 ) ( var_1 ) ) , var_2 , attribute ) ; } catch ( type_9 var_4 ) { throw new type_4 ( var_4 ) ; } }
[0]: org. junit. assert. assertequals ( java.lang.string. format ( ""name"", java.lang.string.format ( ""name"", java.lang.string.format ( ""a"", ""a"", ""a"", ""a"" ) ), var_1 )

************

************
tgt: public void method_1 ( type_1 var_1 ) { int count ; try { count = var_1 . method_2 ( ) ; } catch ( type_2 var_2 ) { return ; } if ( count > 0 ) { android.content.intent var_5 = new android.content.intent ( method_5 ( ) , var_6 class ) ; var_5 . method_6 ( var_7 ) ; method_7 ( var_5 ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || (! ( type_1. method_2 ( var_1 ) ) ) ) { return ; } var_2. settext ( var_1. substring ( 0, int_1 ) ) ; var_3. settext ( var_1. substring ( int_1, int_2 ) ) ; var_4. settext ( var_1. substring ( int_2, int_3 ) ) ; }

************

************
tgt: public static void index ( ) { type_1 var_1 = new type_1 ( ) ; int var_2 = ( ( int ) ( type_2 . count ( ) ) ) ; java.util.list < type_2 > var_3 = type_2 . method_1 ( ) . method_2 ( ( var_2 - int_2 ) ) . method_3 ( int_2 ) ; if ( var_3 != null ) { method_4 ( var_3 ) ; } else { method_5 ( string_1 ) ; } }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; if ( ( type )!= ( var_2. type ) ) return false ; if ( ( id )!= ( var_2. id ) ) return false ; return true ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_3 writer = new type_4 ( int_1 , int_2 , int_3 ) ; try ( type_5 var_3 = new type_5 ( var_1 , var_4 , method_3 ( writer ) ) ) { var_3 . method_4 ( node ( int_2 ) ) ; var_3 . method_4 ( node ( int_3 ) ) ; var_3 . method_4 ( node ( int_1 ) ) ; var_3 . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if (! ( type_2. method_2 ( ) ) ) { if ( ( method_3 ( ) )!= null ) { var_2 = method_3 ( ) ; type_3. method_4 ( null, ( ( string_1 + ( var_2 ) ) + string_2 ) ) ; } else { type_3. method_4 ( null, string_3 ) ; } } else { type_3. method_4 ( null, string_4 ) ; } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { for ( type_1 var_2 : var_3 ) { if ( ( ( var_2 . method_2 ( ) ) <= var_1 ) && ( ( var_2 . method_3 ( ) ) > var_1 ) ) { return var_2 ; } } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1. method_2 ( ) [ 0 ] ) ) ; type_3 var_3 = new type_3 ( var_2. method_3 ( ), method_4 ( ), method_5 ( ), var_4, var_5, new java.util.date ( ), var_2. method_6 ( ) ) ; var_6. method_7 ( var_3 ) ; }

************

************
tgt: protected boolean method_1 ( final type_1 var_1 ) { synchronized ( var_2 ) { if ( ( ( ( var_3 ) == null ) && ( var_1 == null ) ) || ( ( ( var_3 ) != null ) && ( var_3 . equals ( var_1 ) ) ) ) return false ; final type_1 var_4 = var_3 ; var_3 = var_1 ; for ( type_2 var_5 : var_6 . values ( ) ) var_5 . update ( false ) ; method_2 ( string_1 , var_4 , var_1 ) ; } return true ; }
[0]: public static synchronized void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if (! ( var_3. method_2 ( var_1 ) ) ) { type_1. method_3 ( var_2, java.lang.string.format ( string_1, var_1 ) ) ; return ; } java.lang.string response = string_2 ; for ( java.lang.string var_4 : var_3. get ( var_1 ) ) { response += java.lang.string.format ( string_3 ) ; } type_1. method_3 ( var_2, response ) ; }

************

************
tgt: public boolean method_1 ( int x , int y ) { if ( ( x < ( this . var_1 ) ) || ( x >= ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( y >= ( this . height ) ) ) { return false ; } else if ( ( var_2 . data [ x ] [ y ] ) > 0 ) { return false ; } else return true ; }
[0]: public void method_1 ( ) { try ( type_1 var_1 = new type_1 ( ) ) { try ( type_2 out = new type_3 ( var_1 ) ) { out. method_2 ( this. data ) ; this. buffer = var_1. method_3 ( ) ; } } catch ( java.io.ioexception var_2 ) { var_2. method_4 ( ) ; } super. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string text , type_1 var_1 , boolean var_2 ) { if ( var_3 . equals ( text ) ) { var_3 = method_2 ( var_3 , text ) ; try { var_4 . method_3 ( var_1 ) ; var_4 . method_4 ( ( var_2 |= var_4 . method_5 ( ) ) ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_6 ( ) ; } } }
[0]: public void method_1 ( double var_1, double var_2, boolean var_3 ) { double var_4 = type_1. method_2 ( var_1, var_2 ) ; if ( var_4 > 1 ) { var_1 = var_1 / var_4 ; var_2 = var_2 / var_4 ; } var_5. method_3 ( var_1 ) ; var_5. method_4 ( var_3 ) ; var_6. method_3 ( var_2 ) ; var_6. method_4 ( var_3 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { switch ( var_2 ) { case 0 : method_2 ( ) . method_3 ( var_3 . main , var_1 ) ; break ; case 1 : method_2 ( ) . method_3 ( var_4 , var_1 ) ; break ; default : method_2 ( ) . method_3 ( var_4 , var_1 ) ; } return true ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( this. data ) == null ) throw new type_2 ( string_1 ) ; if ( ( ( this. data. length ) < int_1 ) && ( ( this. data. length ) > int_2 ) ) throw new type_2 ( string_2 ) ; var_1. method_2 ( data ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_1 var_2 ) { type_2 var_3 = new type_2 ( var_1 , var_2 , var_4 ) ; type_1 var_5 = var_3 . method_2 ( ) ; var_6 . method_3 ( var_3 . method_4 ( ) ) ; var_6 . method_5 ( ) ; return var_5 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2. getname ( ), context. method_3 ( ). method_4 ( ). method_5 ( ) ) ; java.lang.system.out.println ( ( ( ( string_1 + ( var_2. getname ( ) ) ) + string_2 ) + ( context. method_3 ( ). method_4 ( ). method_5 ( ) ) ) ) ; method_6 ( var_2 ) ; method_7 ( var_2 ) ; method_8 ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( var_3 . method_2 ( ) ) != null ) ) { var_3 . method_3 ( null ) ; var_3 . method_4 ( ) . method_5 ( 0 ) ; } }
[0]: public type_1 method_1 ( final type_2 var_1 ) { if ( ( this. var_1 )!= null ) { this. var_1. method_2 ( this. var_2 ) ; } this. var_1 = var_1 ; if ( var_1!= null ) { this. var_3 = var_4. min ; this. var_5 = var_6 ; this. var_1. method_3 ( this. var_2 ) ; setvalue ( var_1. getvalue ( ) ) ; } return this ; }

************

************
tgt: java.util.arraylist < type_1 > method_1 ( ) { assert java.lang.thread . method_2 ( this ) ; final java.util.arraylist < type_1 > var_1 ; synchronized ( this ) { final boolean var_2 = method_3 ( ) ; if ( ( -- ( var_3 ) ) != 0 ) { return new java.util.arraylist < type_1 > ( ) ; } var_1 = new java.util.arraylist < type_1 > ( ) ; method_4 ( var_1 ) ; var_4 += var_1 . size ( ) ; method_5 ( var_2 ) ; } return var_1 ; }
[0]: public void method_1 ( ) { try { var_1. method_2 ( ) ; index. method_3 ( ) ; writer. method_3 ( ) ; var_2. method_1 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_4 ( ) ; throw new type_1 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( final double [ ] data ) { int var_1 = ( data . length ) * ( var_2 ) ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_3 . method_4 ( type_1 . method_5 ( data ) , ( ( var_4 ) + ( position ) ) , var_1 ) ; position += var_1 ; end = ( ( position ) > ( end ) ) ? position : end ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { if (! ( var_1. isempty ( ) ) ) { var_2. method_2 ( null ) ; this. var_3 = var_1 ; } method_3 ( ) ; type_2 var_4 = new type_2 ( getcontext ( ), var_5, this. var_3 ) ; var_2. method_2 ( var_4 ) ; type_3. method_4 ( var_2 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( ! ( method_3 ( ) ) ) { return ; } var_3 . method_4 ( var_4 ) ; var_3 . method_5 ( var_5 ) ; var_3 . method_6 ( var_4 ) ; var_3 . method_7 ( var_6 ) ; var_3 . method_8 ( var_6 ) ; var_3 . method_9 ( var_6 ) ; var_3 . method_10 ( var_4 ) ; method_11 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 status ) { if ( ( status. equals ( var_2 ) ) || ( status. equals ( var_3 ) ) ) { var_1. method_2 ( ) ; } else { var_4. setenabled ( true ) ; type_3. method_3 ( type_3. method_4 ( status ), type_4. method_5 ( ) ) ; } }

************

************
tgt: public static type_1 method_1 ( char [ ] var_1 , byte [ ] var_2 ) { java.lang.string var_3 = new java.lang.string ( var_2 ) ; java.lang.string [ ] var_4 = var_3 . split ( var_5 ) ; return new type_1 ( var_1 , var_4 [ 1 ] , java.lang.integer.parseint ( var_4 [ int_1 ] ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { try { var_1. method_2 ( null, var_2, true, false, true ) ; fail ( string_1 ) ; } catch ( type_2 var_3 ) { asserttrue ( ( string_2 + ( var_3. method_3 ( ) ) ), var_3. method_3 ( ). contains ( string_3 ) ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.stringbuilder buf = new java.lang.stringbuilder ( ) ; for ( java.lang.object var_1 : var_2 . method_2 ( ) ) { buf . append ( var_1 ) . append ( char_1 ) ; } var_3 . settext ( buf . tostring ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_2 var_2 : var_3 ) { type_3 var_4 = var_2. method_2 ( ) ; if ( var_4. method_3 ( ). equals ( type_4. method_4 ( ) ) ) { type_5 var_5 = var_4. method_3 ( ). method_5 ( ) ; var_5. method_6 ( ) ; method_7 ( ) ; var_5. method_8 ( var_6, false ) ; var_5. method_9 ( true ) ; return ; } } } }

************

************
tgt: public type_1 < ? > method_1 ( java.lang.string var_1 ) { var_2 . method_2 ( string_1 , var_1 ) ; type_2 var_3 = var_4 . method_1 ( var_1 ) ; var_2 . info ( string_2 , var_3 . getid ( ) ) ; var_2 . method_2 ( string_3 , var_3 . tostring ( ) ) ; return type_1 . method_3 ( var_3 ) ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.stringbuilder var_2 ) { var_3. method_2 ( var_4 ) ; var_3. method_1 ( var_1, var_2 ) ; short var_5 = 1 ; for ( type_2 f : var_1. method_3 ( ) ) { var_3. method_4 ( var_1, f, ( var_5 ++ ), var_2 ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( final int var_2 : var_3 ) { if ( var_2 == ( var_4 ) ) { var_1 = var_1 + string_2 ; } else if ( var_2 == ( var_5 ) ) { var_1 = var_1 + string_3 ; } else if ( var_2 == ( var_6 ) ) { var_1 = var_1 + string_4 ; } else { var_1 = var_1 + var_2 ; } } return var_1 ; }
[0]: private void method_1 ( ) { ( var_1 ) ++ ; var_2. settext ( java.lang.string. method_2 ( var_1 ) ) ; if ( ( var_1 ) > ( type_1. method_3 ( getactivity ( ) ) ) ) { type_1. method_4 ( getactivity ( ), var_1 ) ; } if (! ( var_3 ) ) { var_3 = true ; type_2. method_5 ( var_2 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 != null ) { var_6 = var_2 ; java.lang.string var_4 = var_2 . method_3 ( ) ; java.lang.string var_5 = var_2 . method_4 ( ) ; method_5 ( var_4 , var_5 ) ; var_7 . method_6 ( false ) ; } else { var_7 . method_7 ( var_8 ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; var_6 = ( ( type_4 ) ( var_4. method_3 ( var_7. list ) ) ) ; var_6. method_4 ( var_8 ) ; type_5 var_9 = new type_5 ( ) ; var_6. method_5 ( var_9 ) ; return var_4 ; }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 , boolean commit ) throws java.io.ioexception { java.util.hashset < type_2 > var_2 = this . method_2 ( var_1 ) ; if ( var_2 == null ) { return ; } java.util.hashset < type_2 > var_3 = ( ( java.util.hashset < type_2 > ) ( var_2 . method_3 ( ) ) ) ; for ( type_2 var_4 : var_3 ) { this . method_4 ( var_1 , var_4 ) ; } }
[0]: public void method_1 ( int index ) { if ( index!= ( this. var_1 ) ) { this. var_2 = 0 ; method_2 ( 0 ) ; } this. var_1 = index ; var_3. method_3 ( ( index < ( ( var_4. size ( ) ) - 1 ) ) ) ; method_4 ( ) ; method_5 ( ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = context . method_2 ( var_2 class , new type_1 ( ) , new type_2 < java.lang.string , java.lang.string > ( ) ) ; var_4 = context . method_2 ( var_5 class , new type_3 ( ) , new type_2 < java.lang.string , java.lang.string > ( ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = null ; java.lang.double var_3 = var_4 ; for ( type_1 var_5 : var_6 ) { java.lang.double var_7 = var_5. method_2 ( ). method_3 ( var_1. method_4 ( ) ) ; if ( var_7 < var_3 ) { var_3 = var_7 ; var_2 = var_5 ; } } return var_2 ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 , type_1 var_2 ) throws java.io.ioexception { try ( java.io.inputstream var_3 = var_4 class . method_2 ( var_1 ) ; type_2 out = type_3 . method_3 ( var_2 ) ) { int var_5 ; final byte [ ] buffer = new byte [ var_6 ] ; while ( ( var_5 = var_3 . method_4 ( buffer ) ) > 0 ) { out.write ( buffer , 0 , var_5 ) ; } } }
[0]: public void method_1 ( type_1 <? > type_2, android.view.view var_1, int position, long var_2 ) { var_3 = type_2. method_2 ( position ). tostring ( ) ; method_3 ( var_4, var_5, var_6, var_3 ) ; method_4 ( var_7 ). method_5 ( ) ; method_6 ( var_8 ) ; }

************

************
tgt: public static void method_1 ( final type_1 var_1 , final java.lang.string text , final type_2 t ) { var_1 . settext ( ( ( text + "\t" ) + ( var_4 . get ( t ) ) ) ) ; var_1 . method_2 ( new type_3 ( ) { public void method_3 ( type_4 var_3 ) { var_1 . settext ( ( ( text + "\t" ) + ( var_4 . get ( t ) ) ) ) ; } } ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_1. method_2 ( int_1 ) ; type_1 var_2 = var_1. method_3 ( type_2. method_4 ( string_1 ) ) ; assertequals ( var_1. method_5 ( ). method_6 ( ), int_1 ) ; assertequals ( var_2. method_5 ( ). method_6 ( ), ( int_1 + ( ( ( int_2 * int_3 ) * int_3 ) * int_4 ) ) ) ; assertequals ( string_2, var_2. method_7 ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 , type_3 { type_4 var_1 = new type_4 ( ) ; type_5 var_2 = type_6 . method_2 ( var_3 class ) ; type_6 . method_3 ( var_2 . query ( type_7 . method_4 ( var_4 class ) ) ) . method_5 ( new type_8 ( null , string_1 ) ) ; var_1 . method_7 ( var_5 ) ; this . var_1 = var_1 ; }
[0]: protected void method_1 ( type_1 key, type_2 value, type_3 context ) throws java.io.ioexception, type_4 { context. method_2 ( new type_5 ( ( string_3 + ( key. get ( ) ) ) ), new type_5 ( value. tostring ( ) ) ) ; java.lang.system.out.println ( ( string_1 + ( key. get ( ) ) ) ) ; java.lang.system.out.println ( ( string_2 + value ) ) ; }

************

************
tgt: public type_1 method_1 ( int k , type_2 var_1 ) { if ( var_2 . method_2 ( ) ) { return var_3 . method_1 ( k , var_1 ) ; } else { type_1 sum = var_4 ; for ( type_3 var_5 : method_3 ( k , var_1 , 0 ) ) { sum = sum . add ( var_5 . method_1 ( ) ) ; } return sum ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( type_2. method_3 ( ). method_4 ( 0, 0, 0, 0 ), ( ( int ) ( x ) ), ( ( int ) ( y ) ), null ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; java.lang.string var_3 = java.lang.string . method_3 ( var_1 . method_4 ( ) ) ; list . add ( var_3 ) ; type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; type_2 < java.lang.string > var_6 = new type_2 ( this , var_7 , list ) ; var_6 . method_5 ( var_8 ) ; var_4 . method_6 ( var_6 ) ; }
[0]: public static void init ( final int var_1, final java.lang.string [ ] var_2, int... var_3 ) { if ( ( var_4 )!= ( - 1 ) ) { type_1. method_1 ( var_4 ) ; } var_4 = type_1. method_2 ( var_1, var_2, var_3 ) ; }

************

************
tgt: private int method_1 ( int var_1 , int var_2 ) { int var_3 = 0 ; switch ( var_1 ) { case 0 : var_3 = 1 ; break ; case 1 : var_3 = int_1 ; break ; case int_2 : var_3 = int_3 ; break ; case int_4 : var_3 = int_5 ; break ; case int_6 : var_3 = int_7 ; break ; case int_1 : var_3 = int_8 ; break ; } return var_3 * var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) return ; var_1. method_2 ( ) ; var_1. method_3 ( ). method_4 ( null ) ; var_1. method_5 ( ). method_4 ( null ) ; this. var_2. method_6 ( var_1 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { for ( type_2 var_3 : var_4 . method_2 ( ) ) { var_1 . method_3 ( new java.awt.color ( int_1 , int_2 , int_3 ) ) ; var_1 . method_4 ( ( ( ( int ) ( var_3 . x ) ) - int_4 ) , ( ( ( int ) ( var_3 . y ) ) - int_4 ) , int_5 , int_5 ) ; } }
[0]: public void method_1 ( ) { var_1. put ( char_1, 1 ) ; var_1. put ( char_2, int_1 ) ; var_1. put ( char_3, int_2 ) ; var_1. put ( char_4, int_3 ) ; var_1. put ( char_5, int_4 ) ; var_1. put ( char_6, int_5 ) ; var_1. put ( char_7, int_6 ) ; var_1. put ( char_8, int_7 ) ; }

************

************
tgt: public java.lang.object method_1 ( long var_1 , type_1 var_2 ) throws type_2 { type_3 var_3 = var_4 . method_2 ( var_1 , var_2 ) ; if ( var_3 == null ) return null ; var_5 = var_3 . method_3 ( ) ; return var_3 . method_4 ( ) ; }
[0]: protected type_1 method_1 ( java.lang.string... params ) { type_1 var_1 = null ; try { java.io.inputstream var_2 = new java.net.url ( params [ 0 ] ). method_2 ( ) ; var_1 = type_2. method_3 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { type_3. method_4 ( string_1, params [ 0 ] ) ; var_3. method_5 ( ) ; } return var_1 ; }

************

************
tgt: public boolean method_1 ( ) { if ( ! ( var_1 . method_1 ( ) ) ) { return false ; } type_1 var_2 ; while ( true ) { if ( var_1 . method_1 ( ) ) { var_2 = var_1 . method_2 ( ) ; if ( var_2 . method_3 ( ) ) { var_1 . method_4 ( ) ; } else { return true ; } } else { return false ; } } }
[0]: private void method_1 ( ) { byte [ ] var_1 = var_2 ; var_2 = new byte [ ( var_2. length ) * int_1 ] ; int var_3 = var_4 ; type_1. method_2 ( var_1, 0, var_2, 0, var_3 ) ; var_5. init ( var_2, var_3, ( ( var_2. length ) * int_1 ) ) ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 , java.lang.string error , java.lang.throwable var_2 ) { java.lang.system.err.println ( ( ( var_1 + string_1 ) + error ) ) ; if ( var_2 != null ) var_2 . method_2 ( ) ; if ( ( var_3 ) != null ) var_3 . method_3 ( string_2 , var_1 , error , var_2 , true ) ; }
[0]: public int method_1 ( ) { if ( ( ( var_1 ) % int_1 )!= 0 ) throw new type_1 ( ) ; method_2 ( ) ; if ( ( ( var_2 ) > > > int_2 )!= 0 ) throw new type_2 ( ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { int count = 0 ; java.util.iterator < java.lang.integer > iterator = var_1 . method_2 ( type_1 . method_3 ( type_2 . tostring ( ) ) , type_3 . method_4 ( var_2 ) ) ; while ( iterator . method_5 ( ) ) { iterator . method_6 ( ) ; count ++ ; } assertequals ( 1 , count ) ; }
[0]: public void method_1 ( long var_1, type_1 var_2, int offset, int length ) { if ( var_2. method_2 ( ) ) { var_3. method_3 ( ( ( type_2 ) ( var_2 ) ). method_4 ( ), ( ( var_4 ) + ( method_5 ( var_1 ) ) ), length ) ; } else { var_3. method_3 ( var_2. array ( ), offset, ( ( var_4 ) + ( method_5 ( var_1 ) ) ), length ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string content , type_1 [ ] var_4 , java.util.date var_5 , java.lang.boolean var_6 , java.lang.string var_7 ) throws type_2 { return method_2 ( var_8 , var_1 , var_2 , var_3 , null , content , var_4 , var_5 , var_6 , var_7 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = true ; java.util.list < type_2 > var_3 = var_1. method_2 ( ) ; if (! ( var_4. equals ( var_1. method_3 ( ). method_4 ( ). tostring ( ) ) ) ) { var_5. method_5 ( var_3 ) ; var_6. method_6 ( ) ; var_4 = var_1. method_3 ( ). method_4 ( ). tostring ( ) ; } }

************

************
tgt: public void method_1 ( long n ) { if ( ( var_1 ) == 1 ) { return ; } if ( type_1 . method_2 ( n , var_2 ) ) { if ( ( ( type_1 . method_3 ( var_3 , this , n ) ) == 0 ) && ( n == ( var_4 ) ) ) { type_2 var_5 = this . var_5 ; if ( var_5 != null ) { var_5 . method_1 ( n ) ; } } else { method_4 ( ) ; } } }
[0]: private static java.lang.class <? extends java.lang.object > method_1 ( type_1 msg ) { try { java.lang.object content = msg. method_2 ( ) ; return content. getclass ( ) ; } catch ( type_2 var_1 ) { var_1. method_3 ( ) ; } return null ; }

************

************
tgt: private void method_1 ( int var_1 ) { if ( ( var_2 ) != ( var_3 ) ) return ; final int var_4 = var_5 ; if ( var_4 == var_1 ) return ; type_1 . method_2 ( var_6 , ( ( string_1 + string_2 ) + var_4 ) ) ; method_3 ( var_4 , true , false ) ; var_5 = var_1 ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( label ) ; var_1. method_2 ( ( ( this. var_2 )!= null? this. var_2. get ( ) : null ) ) ; var_1. method_3 ( this ) ; return var_1 ; }

************

************
tgt: private type_1 [ ] method_1 ( type_2 var_1 ) throws type_7 { type_3 var_2 = new type_4 ( string_1 ) ; type_5 var_3 = new type_5 ( var_4 , var_5 . method_2 ( ) ) ; var_2 = new type_6 ( var_2 , var_3 ) ; return var_1 . method_3 ( var_2 ) ; }
[0]: private void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; if ( ( var_2 )!= null ) { int i = 0 ; for ( int x : new int [ var_3 ] ) { var_2. get ( i ). method_1 ( ) ; type_1. method_2 ( var_1, ( ( string_2 + i ) + string_3 ) ) ; i ++ ; } var_2 = null ; } var_4 = null ; } }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = var_2 [ var_3 . method_2 ( ) ] ; type_2 . method_3 ( var_5 , this ) ; type_1 var_4 = new type_1 ( var_6 , this ) ; var_4 . execute ( new type_3 ( var_6 , var_1 , var_7 . gettext ( ) . tostring ( ) . trim ( ) ) ) ; }
[0]: public type_1 [ ] method_1 ( type_2 var_1, byte var_2, byte var_3, byte var_4, boolean var_5, boolean var_6 ) { return new type_1 [ ] { var_7 [ var_8 ] [ ( var_4 + 1 ) ], var_2!= ( this. method_2 ( ). method_3 ( ) )? new type_3 ( var_9 ) : new type_3 ( var_10 ) } ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , type_1 { var_1 = type_3 . method_2 ( string_1 , string_2 ) ; type_4 var_2 = type_5 . method_3 ( var_1 , string_3 ) ; type_6 . asserttrue ( type_7 . method_4 ( var_2 , string_4 ) ) ; type_6 . asserttrue ( ( ! ( type_7 . method_4 ( var_2 , string_5 ) ) ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 var_2, type_4 var_3 ) { type_1 var_4 = new type_1 ( var_5 ) ; type_2 var_6 = var_1. method_2 ( ) ; for ( int i = 0 ; i < ( var_5 ) ; i ++ ) { var_7 [ i ] = method_3 ( var_1 ) ; type_5. method_4 ( var_6, var_7 [ i ], var_2. method_5 ( var_1 ) ) ; var_8 += var_3. method_6 ( var_1, i ) ; } return var_4 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; try { var_1 . init ( args ) ; var_1 . method_1 ( ) ; } catch ( type_2 | java.io.ioexception | type_3 var_2 ) { var_2 . method_2 ( ) ; java.lang.system.exit ( ( - 1 ) ) ; } java.lang.system.exit ( 0 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = type_1. method_2 ( var_2 ) ; if ( ( var_1 ) == null ) { var_1 = new type_2 ( var_2 ) ; var_1. method_3 ( ) ; } else { var_1. method_3 ( ) ; } } else { var_1. method_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { try { type_1 . method_2 ( ) . method_3 ( ( ( var_1 ) + 1 ) ) ; } catch ( java.lang.exception var_2 ) { type_2 . method_4 ( var_3 , string_1 ) ; type_2 . method_4 ( var_3 , var_2 . tostring ( ) ) ; } }
[0]: public void method_1 ( type_1 writer ) throws java.io.ioexception { java.util.list < java.lang.string > var_1 = type_2. method_2 ( ) ; if ( ( var_2 )!= null ) { writer. method_3 ( string_1, var_2 ) ; var_1. add ( string_2 ) ; } if ( ( var_3 )!= null ) { writer. method_4 ( string_3, var_3. value ( ) ) ; var_1. add ( string_3 ) ; } writer. method_5 ( string_4, var_1. method_6 ( new java.lang.string [ 0 ] ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : android.content.intent var_3 = new android.content.intent ( this , var_4 class ) ; method_2 ( var_3 ) ; break ; case var_5 : android.content.intent var_6 = new android.content.intent ( this , var_7 class ) ; method_2 ( var_6 ) ; break ; case var_8 : android.content.intent var_9 = new android.content.intent ( this , var_10 class ) ; method_2 ( var_9 ) ; break ; default : type_1 . i ( string_1 , string_2 ) ; break ; } }
[0]: public void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3 = null ; break ; case var_4 : case var_5 : var_6. method_2 ( ) ; var_6 = null ; case var_7 : var_8 = null ; var_9 = null ; default : break ; } var_1 = var_10 ; }

************

************
tgt: public boolean method_1 ( ) { boolean result = ( ( ( var_1 . open ( ) ) && ( var_2 . open ( var_3 . method_2 ( ) ) ) ) && ( var_4 . open ( var_3 . method_3 ( ) ) ) ) && ( var_5 . method_4 ( ) ) ; if ( result ) { result &= var_6 . start ( ) ; } return result ; }
[0]: public java.util.list < type_1 > method_1 ( final int var_1 ) throws type_2 { var_2. method_2 ( var_1 ) ; final java.util.list < type_1 > results = query ( java.lang.string.format ( var_3, var_1 ) ) ; if ( ( results. size ( ) ) == 0 ) throw new type_2 ( string_1, var_4 ) ; return var_2. method_3 ( results ) ; }

************

************
tgt: public static void main ( final java.lang.string [ ] args ) throws type_1 { final long var_1 = ( ( args.length ) > 0 ) ? java.lang.long.parselong ( args [ 0 ] ) : var_2 ; type_2 var_3 = new type_2 ( var_1 ) ; var_3 . method_1 ( ) ; var_3 . method_2 ( ) ; }
[0]: private void method_1 ( java.lang.class <? > var_1, int start ) { java.lang.object var_2 = method_2 ( var_3. get ( var_1 ). var_1, start, start ) ; method_3 ( ). method_4 ( var_2 ) ; method_3 ( ). delete ( ( start - int_1 ), start ) ; var_3. get ( var_1 ). position = - 1 ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { for ( type_1 var_2 : type_2 . method_2 ( this ) ) { if ( ( ( var_3 . method_3 ( var_2 ) ) != ( var_4 ) ) && ( ( method_4 ( var_2 ) . var_5 ) >= var_1 ) ) { return true ; } } return false ; }
[0]: private boolean method_1 ( ) { int var_1 = method_2 ( var_2 ) ; if ( var_1 < 0 ) return false ; if (! ( method_3 ( ) ) ) return false ; java.util.arraylist < java.lang.string > var_3 = var_4. get ( var_1 ) ; for ( java.lang.string var_5 : type_1. method_4 ( ) ) { var_3. add ( var_5 ) ; } return true ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 . method_2 ( ) ) != null ) { method_3 ( var_2 . method_2 ( ) ) ; } else { type_1 var_3 = new type_1 ( ) ; var_3 . method_4 ( new type_2 ( ) { public void method_5 ( byte [ ] result ) { var_2 . method_6 ( result ) ; type_3 . update ( var_2 ) ; method_3 ( result ) ; } } ) ; var_3 . method_7 ( var_2 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( var_3 ) ; var_4 = var_5 ; var_6 = var_7 ; var_8 = new byte [ int_1 ] ; var_8 [ 0 ] = var_9 ; var_8 [ 1 ] = ( ( byte ) ( 1 ) ) ; var_10. method_2 ( var_11 ) ; var_12 = string_1 ; method_3 ( var_13 ) ; }

************

************
tgt: public void method_1 ( ) { getcontext ( ) . method_2 ( 1 , 1 ) ; getcontext ( ) . method_2 ( int_1 , 1 ) ; type_1 message = new type_1 ( int_2 , type_2 . gettext ( string_1 ) ) ; getcontext ( ) . message ( message ) ; }
[0]: public type_1 method_1 ( type_1 result ) { type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( var_2, result ) ; if ( var_3!= null ) { type_2 var_4 = new type_2 ( ) ; for ( java.util.map.entry < java.lang.string, java.lang.string > var_5 : var_3. method_3 ( ). method_4 ( ) ) { var_4. method_2 ( var_5. method_5 ( ), new type_3 ( var_5. getvalue ( ) ) ) ; } var_1. method_2 ( var_6, var_4 ) ; } return var_1 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( ) ; java.util.list < type_1 > var_3 = method_3 ( ) ; for ( type_1 var_4 : var_3 ) { if ( var_4 . method_4 ( ) . method_5 ( ) . equals ( var_2 ) ) { return var_4 ; } } return null ; }
[0]: private type_1 method_1 ( int var_1, int var_2 ) { type_1 var_3 = new type_1 ( this. var_4 ) ; if ( var_1 <= ( this. method_2 ( ) ) ) { throw new type_2 ( string_1 ) ; } method_3 ( var_5, var_1, var_2, var_1, ( var_2 + 1 ) ) ; return var_3 ; }

************

************
tgt: private type_1 method_1 ( int x , int y ) { synchronized ( var_2 ) { type_1 var_1 = var_2 . method_2 ( var_3 , x , y , 0 ) ; for ( int i = 0 ; i < ( var_2 . method_3 ( ) ) ; i ++ ) { type_1 p = var_2 . method_4 ( i ) ; if ( p . equals ( var_1 ) ) { continue ; } var_2 . method_5 ( p , var_1 , var_4 , var_5 ) ; } return var_1 ; } }
[0]: private boolean contains ( type_1 node, type_2 p, boolean var_1 ) { if ( node == null ) return false ; int var_2 = type_3. method_1 ( p, node. p, var_1 ) ; if ( var_2 < 0 ) return contains ( var_3, p, (! var_1 ) ) ; else if ( var_2 > 0 ) return contains ( var_4, p, (! var_1 ) ) ; else return var_5. equals ( p ) ; }

************

************
tgt: protected void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = method_2 ( ) ; java.lang.string value = method_2 ( ) ; type_1 < java.lang.string > var_2 = var_3 . remove ( var_1 ) ; if ( var_2 != null ) { var_2 . set ( value ) ; } }
[0]: public void method_1 ( type_1 var_1, int position ) { type_2 var_2 = var_3. get ( position ) ; var_4. method_2 ( var_5 ) ; var_6. settext ( var_2. method_3 ( ) ) ; var_7. settext ( ( string_1 + ( var_2. method_4 ( ) ) ) ) ; switch ( method_5 ( position ) ) { case var_8 : var_9. method_6 ( var_10 ) ; break ; case var_11 : var_9. method_6 ( var_12 ) ; break ; } var_4. method_7 ( var_2 ) ; }

************

************
tgt: public void method_1 ( boolean var_1 , type_1 view ) { type_2 . method_2 ( string_1 , ( ( ( string_2 + ( id ) ) + string_3 ) + ( var_2 ) ) ) ; if ( var_1 || ( var_3 ) ) new type_3 ( view , false ) . execute ( var_4 , var_2 ) ; else new type_3 ( view , false ) . execute ( var_2 , var_4 ) ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : method_2 ( ). method_3 ( ) ) { if ( var_1 instanceof type_2 ) { ( ( type_2 ) ( var_1 ) ). method_4 ( ( ( type_2 ) ( var_1 ) ). method_5 ( ). method_6 ( var_2 ) ) ; } } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ! ( var_1 ) ) { type_1 . method_2 ( this , string_1 , var_2 ) . show ( ) ; var_3 . method_3 ( type_2 . method_4 ( string_2 ) ) ; } else { type_1 . method_2 ( this , string_3 , var_2 ) . show ( ) ; var_3 . method_3 ( type_2 . method_4 ( string_4 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this. var_3. get ( var_1. method_2 ( ) ) ; if ( var_2 == null ) { var_2 = new java.util.arraylist < type_1 > ( ) ; } var_2. add ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { var_2 . method_3 ( ) ; var_1 . method_2 ( true ) ; switch ( var_1 . method_4 ( ) ) { case var_3 : method_5 ( string_1 ) ; method_6 ( 0 ) ; break ; case var_4 : method_5 ( string_2 ) ; method_6 ( 1 ) ; break ; } return true ; }
[0]: private java.lang.string method_1 ( java.lang.string x, java.lang.string y ) { type_1 i = new type_1 ( x ) ; type_1 j = new type_1 ( y ) ; type_1 k = j. method_1 ( i ) ; k = k. method_2 ( ) ; return k. method_3 ( ) ; }

************

************
tgt: private java.lang.string method_1 ( int var_1 , int var_2 ) { java.lang.string var_3 = text . substring ( var_1 , var_2 ) ; int var_4 = var_3 . method_2 ( string_1 ) ; if ( var_4 == ( - 1 ) ) { return var_3 ; } else { return var_3 . substring ( var_4 , ( ( var_3 . length ( ) ) - 1 ) ) . trim ( ) ; } }
[0]: public void handle ( type_1 var_1 ) { var_2. method_1 ( ). remove ( var_3 ) ; var_4 = ( ( int ) ( ( java.lang.math.random ( ) ) * int_1 ) ) + 1 ; ( var_5 ) ++ ; var_6 = var_7. get ( var_5 ). x ; var_8 = var_7. get ( var_5 ). y ; var_9 = type_2. method_2 ( ) ; var_10 = true ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( ( var_1 . length ( ) ) == 0 ) ) return null ; for ( java.lang.string var_2 : var_3 ) { if ( var_2 . startswith ( var_1 ) ) return var_2 ; } return null ; }
[0]: public void method_1 ( ) { var_1. method_2 ( true ) ; type_1 var_2 = ( ( type_1 ) ( var_3. method_3 ( ) ) ) ; var_4. init ( var_2 ) ; try { var_4. method_4 ( ) ; } catch ( java.lang.exception var_5 ) { } var_6. method_5 ( ) ; var_6. method_6 ( new type_2 ( var_4 ) ) ; method_7 ( string_1, var_2. getid ( ) ) ; var_1. method_2 ( false ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string path ) { path = path . trim ( ) . tolowercase ( ) ; return ( ( path . method_2 ( var_1 ) ) || ( path . method_2 ( var_2 ) ) ) || ( path . method_2 ( var_3 ) ) ; }
[0]: protected void method_1 ( type_1 response ) { super. method_1 ( response ) ; if ( ( response. method_2 ( ) ) && ( ( response. result )!= null ) ) { type_2. method_3 ( ). method_4 ( method_5 ( ), response. result ) ; } else { type_2. method_3 ( ). method_4 ( method_5 ( ), response. result ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { synchronized ( this ) { if ( ( var_1 ) == null ) { if ( ( var_2 ) <= 0 ) { var_1 = new type_2 ( super . method_1 ( ) ) ; } else { var_1 = new type_2 ( new type_4 ( var_2 , super . method_1 ( ) ) ) ; } } return var_1 ; } }
[0]: private void method_1 ( java.lang.string var_1 ) { try { java.lang.string var_2 = var_3. method_2 ( var_1 ). method_3 ( ). method_4 ( var_4, var_5. string class ) ; if ( type_1. isempty ( var_2 ) ) { return ; } java.lang.string var_6 = method_5 ( var_2 ) ; if ( type_1. method_6 ( var_6 ) ) { type_2. method_7 ( var_7, var_6 ) ; } } catch ( type_3 var_8 ) { var_9. method_8 ( string_1, var_8 ) ; } } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) { type_2 var_2 = var_1 . method_2 ( string_1 ) ; var_7 = new type_1 ( ) ; var_2 . method_3 ( new type_3 ( ) { public void method_4 ( type_4 var_3 ) { type_1 var_4 = var_3 . getvalue ( var_5 class ) ; type_5 . method_5 ( var_4 ) ; } public void method_6 ( type_6 var_6 ) { } } ) ; return var_7 ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, android.content.context context ) { java.net.url url = type_1. method_2 ( var_1, context ) ; java.lang.string response = null ; try { response = type_1. method_3 ( url, context ) ; } catch ( java.io.ioexception var_2 ) { var_3 = string_1 ; } return response ; }

************

************
tgt: public void method_1 ( java.util.collection < ? extends type_1 > var_1 ) { var_1 . method_2 ( ) . method_3 ( ( var_2 ) - > var_1 . method_2 ( ) . method_4 ( ( var_3 ) - > method_5 ( var_2 , var_3 ) ) ) . method_6 ( ( var_4 ) - > ( var_4 . method_7 ( ) ) < ( var_5 ) ) . method_8 ( ( var_4 ) - > var_4 . method_9 ( var_6 ) ) ; }
[0]: private type_1 method_1 ( ) { var_1 = new type_1 ( var_2. method_2 ( ) ) ; var_1. method_3 ( ). add ( string_1 ) ; var_1. method_4 ( var_3. get ( ) ) ; var_1. method_5 ( var_1. method_6 ( 0 ) ) ; var_4. method_7 ( var_1, method_8 ( ). method_9 ( var_3. get ( ) ), method_10 ( ) ) ; return var_1 ; }

************

************
tgt: java.lang.string method_1 ( ) { java.lang.string var_1 = "true" ; java.lang.string var_2 = var_3 . method_2 ( string_1 ) ; if ( ( var_2 != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { var_1 = var_2 ; } if ( ( ! ( var_1 . method_3 ( "true" ) ) ) && ( ! ( var_1 . method_3 ( "false" ) ) ) ) { var_1 = "true" ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { type_2 var_3 = new type_2 ( method_2 ( ), null, null, 1 ) ; var_3. method_3 ( var_4, var_5 ) ; android.content.intent var_6 = new android.content.intent ( method_2 ( ), var_7 class ) ; method_4 ( var_6 ) ; method_5 ( ) ; type_3 var_8 = ( ( type_3 ) ( method_6 ( method_2 ( ). var_9 ) ) ) ; var_8. method_7 ( var_10 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( ! ( type_1 . method_2 ( var_1 ) ) ) ) { return ; } var_2 . settext ( var_1 . substring ( 0 , int_1 ) ) ; var_3 . settext ( var_1 . substring ( int_1 , int_2 ) ) ; var_4 . settext ( var_1 . substring ( int_2 , var_1 . length ( ) ) ) ; }
[0]: protected void init ( ) throws type_1 { if ( ( method_1 ( ). method_2 ( ). equals ( string_1 ) ) && (! ( method_3 ( string_2 ). method_4 ( ) ) ) ) method_5 ( ). put ( string_2, 1 ) ; else method_5 ( ). put ( string_2, 1 ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( var_1 == null ) return false ; if ( var_1 instanceof type_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; if ( ( type ) != ( var_2 . type ) ) return false ; if ( ( id ) != ( var_2 . id ) ) return false ; return true ; } else return false ; }
[0]: public void method_1 ( android.view.view view ) { android.content.intent intent = new android.content.intent ( this, var_1 class ) ; intent. method_2 ( string_1, var_2 ) ; if ( ( var_3 ) >= int_1 ) { method_3 ( intent, 1, type_1. method_4 ( this ). method_5 ( ) ) ; method_6 ( var_4, var_5 ) ; } else { method_3 ( intent, 1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ! ( type_2 . method_2 ( ) ) ) { java.lang.string file = method_3 ( ) ; if ( file != null ) { var_2 = file ; type_3 . method_4 ( null , ( ( string_1 + ( var_2 ) ) + string_2 ) ) ; } else { type_3 . method_4 ( null , string_3 ) ; } } else { type_3 . method_4 ( null , string_4 ) ; } }
[0]: private void method_1 ( java.util.list < java.lang.string > var_1, java.util.list < type_1 > var_2 ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { asserttrue ( var_1. get ( i ). startswith ( ( ( ( i + 1 ) + string_1 ) + ( var_2. get ( i ). getid ( ) ) ) ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.object result ) { type_2 var_2 = ( ( type_2 ) ( var_1 . method_2 ( ) [ 0 ] ) ) ; type_3 var_3 = new type_3 ( var_2 . method_3 ( ) , method_4 ( ) , method_5 ( ) , var_4 , var_5 , new java.util.date ( ) , var_2 . method_6 ( ) ) ; var_6 . method_7 ( var_3 ) ; }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { type_2 var_3 = method_2 ( ) ; type_1 var_4 = var_3. method_3 ( var_5 ) ; type_3 var_6 = var_3. method_4 ( ) ; var_6. replace ( var_5, var_1 ) ; var_6. method_5 ( var_7 ) ; if ( var_2 && (! ( method_6 ( var_4, var_1 ) ) ) ) { var_6. method_7 ( null ) ; } var_6. commit ( ) ; method_8 ( var_1 ) ; }

************

************
tgt: public static synchronized void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( ! ( var_3 . method_2 ( var_1 ) ) ) { type_1 . method_3 ( var_2 , java.lang.string.format ( string_1 , var_1 ) ) ; return ; } java.lang.string response = string_2 ; for ( java.lang.string var_4 : var_3 . get ( var_1 ) ) { response += java.lang.string.format ( string_3 , var_4 ) ; } type_1 . method_3 ( var_2 , response ) ; }
[0]: protected void method_1 ( type_1 var_1, java.lang.stringbuilder var_2, type_2 var_3 ) { method_2 ( var_1, var_2, var_3 ) ; java.lang.stringbuilder var_4 = var_3. method_3 ( ) ; for ( type_3 f : type_4. method_4 ( var_1 ) ) { method_5 ( f, var_4, var_3, var_1, true ) ; var_4. append ( string_1 ) ; } }

************

************
tgt: public void method_1 ( ) { try ( type_1 var_1 = new type_1 ( ) ) { try ( type_2 out = new type_3 ( var_1 ) ) { out . method_2 ( this . getdata ( ) ) ; this . buffer = var_1 . method_3 ( ) ; } } catch ( java.io.ioexception var_2 ) { var_2 . method_4 ( ) ; } super . method_1 ( ) ; }
[0]: public static int method_1 ( java.lang.string var_1, java.lang.string var_2 ) { int result = 0 ; try ( final type_1 var_3 = type_2. method_2 ( var_4 class. method_3 ( ) ) ; final type_3 var_5 = var_3. method_4 ( ) ; final type_4 var_6 = var_5. method_5 ( type_5. method_6 ( var_1, var_2 ) ) ) { if ( var_6. method_7 ( ) ) result = var_6. getint ( 1 ) ; } catch ( type_6 var_7 ) { var_7. method_8 ( ) ; } return result ; }

************

************
tgt: public void method_1 ( double var_1 , double var_2 , boolean var_3 ) { double var_4 = type_1 . method_2 ( java.lang.math.abs ( var_1 ) , java.lang.math.abs ( var_2 ) ) ; if ( var_4 > 1 ) { var_1 = var_1 / var_4 ; var_2 = var_2 / var_4 ; } var_5 . method_3 ( var_1 ) ; var_5 . method_4 ( var_3 ) ; var_6 . method_3 ( var_2 ) ; var_6 . method_4 ( var_3 ) ; }
[0]: protected java.lang.object method_1 ( java.lang.object [ ] params ) { var_1 = type_1. get ( getactivity ( ). method_2 ( ) ) ; int t = var_2. method_3 ( ) ; switch ( t ) { case var_3 : var_2. method_4 ( ) ; break ; case var_4 : type_2 message = new type_2 ( ) ; var_5 = 1 ; var_6. method_5 ( message ) ; break ; case var_7 : break ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( this . data ) == null ) throw new type_2 ( string_1 ) ; if ( ( ( this . data . length ) < int_1 ) || ( ( this . data . length ) > int_2 ) ) throw new type_2 ( string_2 ) ; var_1 . method_2 ( data ) ; }
[0]: public void method_1 ( type_1 var_1 ) { switch ( view. getid ( ) ) { case var_2 : method_2 ( ) ; break ; case var_3 : method_3 ( ) ; break ; case var_4 : method_4 ( ) ; break ; case var_5 : method_5 ( ) ; break ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 , context . method_3 ( ) . method_4 ( ) . method_5 ( ) ) ; java.lang.system.out.println ( ( ( ( string_1 + ( var_2 . getname ( ) ) ) + string_2 ) + ( context . method_3 ( ) . method_4 ( ) . method_5 ( ) ) ) ) ; method_6 ( var_2 ) ; method_7 ( var_2 ) ; method_8 ( var_2 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { method_2 ( var_1 ) ; if ( var_2 ) { return ; } var_3. method_3 ( var_4, var_5 ) ; var_2 = true ; if ( ( var_6. method_4 ( ) ) && (! ( var_7. method_5 ( ) ) ) ) { var_1. method_6 ( ) ; } }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 ) { if ( ( this . var_1 ) != null ) { this . var_1 . method_2 ( this . var_2 ) ; } this . var_1 = var_1 ; if ( var_1 != null ) { this . var_3 = var_4 . min ; this . var_5 = var_6 ; this . var_1 . method_3 ( this . var_2 ) ; setvalue ( var_1 ) ; } return this ; }
[0]: protected void method_1 ( ) throws type_1, type_2 { var_1. event ( ) ; method_2 ( var_2 ) ; var_3. set ( true ) ; var_4. set ( false ) ; var_5. set ( true ) ; method_2 ( type_3. method_3 ( var_6 ) ) ; method_4 ( var_7 ) ; var_5. set ( false ) ; var_8. set ( false ) ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_2 ( ) ; writer . method_3 ( ) ; index . method_3 ( ) ; var_2 . method_1 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_4 ( ) ; throw new type_1 ( var_3 ) ; } }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { if (! ( var_2. isempty ( ) ) ) { var_4 = var_1 ; var_5 = var_2 ; var_6 = var_3 ; method_2 ( ) ; method_3 ( ). method_4 ( var_7, null, this ). method_5 ( ) ; } }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { if ( ! ( var_1 . isempty ( ) ) ) { var_2 . method_2 ( null ) ; this . var_3 = var_1 ; } method_3 ( ) ; type_2 var_4 = new type_2 ( type_3 . context , var_5 , this . var_3 ) ; var_2 . method_2 ( var_4 ) ; type_3 . method_4 ( var_2 ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, java.lang.string type ) { type_3 < type_2 > var_3 = var_4. get ( type ) ; type_4 var_5 = var_1. method_2 ( ) ; return var_3. remove ( var_5. method_3 ( ), var_5. method_4 ( ), var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 status ) { if ( ( type_4 . method_5 ( ) ) == null ) { var_4 . setenabled ( true ) ; return ; } if ( ( status . equals ( var_2 ) ) || ( status . equals ( var_3 ) ) ) { var_1 . method_2 ( ) ; } else { var_4 . setenabled ( true ) ; type_3 . method_3 ( type_3 . method_4 ( status ) , type_4 . method_5 ( ) ) ; } }
[0]: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { method_2 ( ) ; var_2 = var_1 ; type_2 args = new type_2 ( ) ; args. method_3 ( getstring ( var_3 ), var_2 ) ; var_4. method_4 ( args ) ; method_5 ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { try { var_1 . method_2 ( null , var_2 , true , false , true , false ) ; type_1 . fail ( string_1 ) ; } catch ( type_2 var_3 ) { type_1 . asserttrue ( ( string_2 + ( var_3 . method_3 ( ) ) ) , var_3 . method_3 ( ) . contains ( string_3 ) ) ; } }
[0]: public void method_1 ( type_1 var_1, java.util.collection < type_2 > var_2 ) { type_3 < type_1, type_2 > var_3 = method_2 ( var_1 ) ; if ( var_3!= null ) { var_3. method_3 ( var_2 ) ; } else { var_3 = new type_3 < type_1, type_2 > ( var_1, var_2 ) ; var_4. add ( var_3 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_2 var_2 : var_3 ) { type_3 var_4 = var_2 . method_2 ( ) ; if ( var_4 . method_3 ( ) . equals ( type_4 . method_4 ( ) ) ) { type_5 var_5 = var_4 . method_3 ( ) . method_5 ( ) ; var_5 . method_6 ( ) ; method_7 ( ) ; var_5 . method_8 ( var_6 , true ) ; var_5 . method_9 ( true ) ; return ; } } }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { final java.lang.string var_2 ; if ( var_1. startswith ( string_1 ) ) { var_2 = var_1. substring ( 1 ) ; } else { var_2 = var_1 ; } return var_3. values ( ). method_2 ( ). method_3 ( ( var_4 ) - > var_4. method_4 ( ). contains ( var_2 ) ). method_5 ( ). method_6 ( ( ) - > null ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.stringbuilder var_2 ) { var_3 . method_2 ( var_4 ) ; var_3 . method_1 ( var_1 , var_2 ) ; int var_5 = 1 ; for ( type_2 f : var_1 . method_3 ( ) ) { var_3 . method_4 ( var_1 , f , ( var_5 ++ ) , var_2 ) ; } }
[0]: public static void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 ; var_2 = string_1 ; java.lang.system.out.println ( string_2 ) ; var_1 = type_1. getstring ( ) ; var_1 = var_1. trim ( ) ; for ( int i = ( var_1. length ( ) ) - 1 ; i >= 0 ; i -- ) { var_2 = var_2 + ( var_1. method_2 ( i ) ) ; } java.lang.system.out.println ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { ( var_1 ) ++ ; var_2 . settext ( java.lang.string . method_2 ( var_1 ) ) ; if ( ( var_1 ) > ( type_1 . method_3 ( getactivity ( ) ) ) ) { type_1 . method_4 ( getactivity ( ) , var_1 ) ; if ( ! ( var_3 ) ) { var_3 = true ; type_2 . method_5 ( var_2 ) ; } } }
[0]: private void method_1 ( type_1 response ) { var_1 = response. method_2 ( ) ; var_2 = response. method_3 ( ) ; var_3 = response. method_4 ( ) ; var_4 = type_2. method_5 ( ). method_6 ( response. method_7 ( ) ) ; var_1 = response. method_2 ( ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; var_6 = ( ( type_4 ) ( var_4 . method_3 ( var_7 . list ) ) ) ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( string_1, var_1. gettext ( ) ) ; type_2. method_2 ( string_1, var_1. method_3 ( ). tostring ( ) ) ; new type_3 ( getactivity ( ) ). method_4 ( string_2 ). method_5 ( var_1. gettext ( ) ). method_6 ( string_3, new type_4 ( ) { public void method_7 ( type_5 var_2, int i ) { method_8 ( ) ; } } ). method_9 ( ). show ( ) ; } }

************

************
tgt: public void method_1 ( int index ) { java.lang.system.out.println ( ( string_1 + index ) ) ; if ( index != ( this . var_1 ) ) { this . var_1 = index ; method_2 ( 0 ) ; } var_3 . method_3 ( ( index < ( ( var_4 . size ( ) ) - 1 ) ) ) ; method_4 ( ) ; method_5 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { int [ ] a = new int [ ] { 1, int_1, int_2, int_3, int_4 } ; type_1 obj = new type_1 ( ) ; type_2 var_1 = obj. method_1 ( a ) ; type_1. method_2 ( var_1 ) ; var_1 = obj. method_3 ( var_1, int_1, int_3 ) ; type_1. method_2 ( var_1 ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = null ; java.lang.double var_3 = var_4 ; for ( type_1 var_5 : var_6 ) { java.lang.double var_7 = var_5 . method_2 ( false ) . method_3 ( var_1 . method_4 ( ) ) ; if ( var_7 < var_3 ) { var_3 = var_7 ; var_2 = var_5 ; } } return var_2 ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ). put ( string_1, int_1 ). build ( ) ; type_3 var_2 = var_3. method_3 ( ). method_4 ( ). method_5 ( string_2 ). method_6 ( var_1 ). execute ( ). method_7 ( ) ; type_4. info ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > type_2 , android.view.view var_1 , int position , long var_2 ) { var_3 = type_2 . method_2 ( position ) . tostring ( ) ; if ( ( ( ( ( var_4 ) != null ) && ( ( var_5 ) != null ) ) && ( ( var_6 ) != null ) ) && ( ( var_3 ) != null ) ) { method_3 ( var_4 , var_5 , var_6 , var_3 ) ; method_6 ( var_8 ) ; } method_4 ( var_7 ) . method_5 ( ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { var_3, var_4, var_5, var_6 } ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { if (! ( type_2. isempty ( var_2 [ i ] ) ) ) { return var_2 [ i ] ; } } return null ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( int_1 ) ; type_1 var_2 = var_1 . method_3 ( type_2 . method_4 ( string_1 ) ) ; assertequals ( var_1 . method_5 ( ) . method_6 ( ) , int_1 ) ; assertequals ( var_2 . method_5 ( ) . method_6 ( ) , ( int_1 - ( ( ( int_2 * int_3 ) * int_3 ) * int_4 ) ) ) ; assertequals ( string_2 , var_2 . method_7 ( ) ) ; }
[0]: protected void method_1 ( type_1 var_1, java.lang.class var_2, java.util.collection keys ) { if ( var_3 ) { for ( java.lang.object key : keys ) { add ( var_1. method_2 ( var_2, ( ( type_2 ) ( key ) ) ) ) ; } } else { method_3 ( var_1. method_4 ( var_2, keys ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 key , type_2 value , type_3 context ) throws java.io.ioexception , type_4 { context . method_2 ( new type_5 ( ( string_3 + ( key . get ( ) ) ) ) , new type_5 ( value . tostring ( ) ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1, java.lang.object... var_2 ) { java.lang.object var_3 = type_2. method_2 ( var_1, var_2 ) ; if ( var_3 instanceof type_1 ) { return ( ( type_1 ) ( var_3 ) ) ; } java.lang.string var_4 = java.lang.string. method_3 ( var_3 ) ; return var_5. method_4 ( var_4 )? new type_1 ( var_4 ) : null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( type_2 . method_3 ( ) . method_4 ( 1 , 1 , 1 , 1 ) , ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , null ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { int var_2 = 0 ; for ( type_1 < java.lang.string, type_2 > var_3 : var_4. method_2 ( ) ) { if ( var_3. method_3 ( ). contains ( var_1 ) ) { return ( ( boolean ) ( var_5. method_4 ( ) [ var_2 ] ) ) ; } var_2 ++ ; } return false ; }

************

************
tgt: public static void init ( final int var_1 , final java.lang.string [ ] var_2 , int ... var_3 ) { if ( ( var_4 ) != ( - 1 ) ) { type_1 . method_1 ( var_4 ) ; var_4 = - 1 ; } var_4 = type_1 . method_2 ( var_1 , var_2 , var_3 ) ; }
[0]: public void handle ( type_1 event ) { java.lang.string var_1 = type_2. method_1 ( ) ; type_3. method_2 ( ). var_2 = true ; if ( var_1. method_3 ( string_1 ) ) { type_4. method_4 ( type_3. method_2 ( ), var_3. method_5 ( ) ) ; } else type_4. method_6 ( type_3. method_2 ( ), var_3. method_5 ( ), var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) return ; var_1 . method_2 ( ) ; if ( ( var_1 . method_3 ( ) ) != null ) { var_1 . method_3 ( ) . method_4 ( null ) ; } if ( ( var_1 . method_5 ( ) ) != null ) { var_1 . method_5 ( ) . method_4 ( null ) ; } this . var_2 . method_6 ( var_1 ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) { var_3. info ( string_1 ) ; if ( ( var_1 == null ) || ( var_2 == null ) ) { return false ; } if ( var_4. method_2 ( var_2, var_1. method_3 ( ). method_4 ( ) ). method_5 ( var_5 ) ) { var_6. remove ( var_6. method_6 ( var_1 ) ) ; this. method_7 ( var_1 ) ; return true ; } return false ; }

************

************
tgt: void method_1 ( ) { var_1 . put ( char_1 , 0 ) ; var_1 . put ( char_2 , 1 ) ; var_1 . put ( char_3 , int_1 ) ; var_1 . put ( char_4 , int_2 ) ; var_1 . put ( char_5 , int_3 ) ; var_1 . put ( char_6 , int_4 ) ; var_1 . put ( char_7 , int_5 ) ; var_1 . put ( char_8 , int_6 ) ; }
[0]: public int method_1 ( int var_1 ) { int var_2 = 0 ; for ( int j = 0 ; j < int_1 ; j ++ ) { if ( ( var_3 [ j ] ) == var_1 ) { int index = ( j + int_2 ) % ( var_4 ) ; var_2 = var_3 [ index ] ; break ; } } return var_2 ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string ... params ) { var_1 = null ; try { java.io.inputstream var_2 = new java.net.url ( params [ 0 ] ) . method_2 ( ) ; var_1 = type_2 . method_3 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { type_3 . method_4 ( string_1 , params [ 0 ] ) ; var_3 . method_5 ( ) ; } return var_1 ; }
[0]: public void method_1 ( android.view.view view ) { android.content.intent i = new android.content.intent ( getactivity ( ), var_1 class ) ; if ( ( var_2 )!= null ) { i. method_2 ( var_3, type_1. method_3 ( var_2 ) ) ; } method_4 ( i, var_4 ) ; }

************

************
tgt: private void method_1 ( ) { byte [ ] var_1 = var_2 ; var_2 = new byte [ ( var_2 . length ) * int_1 ] ; type_1 . method_2 ( var_1 , 0 , var_2 , 0 , var_4 ) ; var_5 . init ( var_2 , var_4 , ( ( var_2 . length ) * int_1 ) ) ; }
[0]: static int method_1 ( type_1 state ) { int var_1 = 0 ; int var_2 = - ( var_3 ) ; for ( int a : type_2. method_2 ( state ) ) { int temp = type_2. method_3 ( type_2. result ( state, a ) ) ; if ( temp > var_2 ) { var_1 = a ; } } return var_1 ; }

************

************
tgt: public int method_1 ( ) { if ( ( ( var_1 ) % int_1 ) != 0 ) throw new type_1 ( ) ; method_2 ( ( ( var_1 ) / int_1 ) ) ; if ( ( ( var_2 ) > > > int_2 ) != 0 ) throw new type_2 ( ) ; return var_2 ; }
[0]:  synchronized void method_1 ( final type_1 var_1, final type_2 var_2, final boolean var_3 ) { type_3. method_2 ( string_1, var_1. method_3 ( ) ) ; this. nodes. remove ( type_4. method_4 ( var_2. method_5 ( ) ) ) ; var_1. method_6 ( var_3 ) ; }

************

************
tgt: public void method_1 ( long var_1 , type_1 var_2 , int offset , int length ) { if ( var_2 . method_2 ( ) ) { var_3 . method_3 ( ( ( ( ( type_2 ) ( var_2 ) ) . method_4 ( ) ) + offset ) , ( ( var_4 ) + ( method_5 ( var_1 ) ) ) , length ) ; } else { var_3 . method_3 ( var_2 . array ( ) , offset , ( ( var_4 ) + ( method_5 ( var_1 ) ) ) , length ) ; } }
[0]: public void method_1 ( java.lang.string message, java.lang.string var_1, java.lang.exception var_2 ) { type_1 params = type_2. method_2 ( ) ; params. method_3 ( string_1, string_2 ) ; params. method_3 ( string_3, message ) ; params. method_3 ( string_4, var_1 ) ; params. method_3 ( string_5, var_2. method_4 ( ) ) ; method_5 ( params ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = true ; java.util.list < type_2 > var_3 = var_1 . method_2 ( ) ; if ( ! ( var_4 . equals ( var_1 . method_3 ( ) . method_4 ( ) . tostring ( ) ) ) ) { var_5 . method_5 ( var_3 ) ; var_6 . method_6 ( ) ; var_4 = var_1 . method_3 ( ) . method_4 ( ) . tostring ( ) ; var_2 = false ; } }
[0]: public boolean method_1 ( java.lang.string var_1 ) { if ( ( var_1. length ( ) ) >= 0 ) { var_2. method_2 ( var_3 ) ; var_4. method_3 ( ). method_4 ( var_1 ) ; } else { var_2. method_2 ( var_5 ) ; } return false ; }

************

************
tgt: private static java.lang.class < ? extends java.lang.object > method_1 ( type_1 msg ) { try { java.lang.object content = msg . method_2 ( ) ; if ( content != null ) return content . getclass ( ) ; } catch ( type_2 var_1 ) { var_1 . method_3 ( ) ; } return null ; }
[0]: private synchronized type_1 method_1 ( type_2 event ) { if ( var_1 ) { java.lang.string key = event. method_2 ( ). tostring ( ) ; type_1 var_2 = var_3. get ( key ) ; if ( var_2 == null ) { var_2 = new type_1 ( ) ; var_4 = 0 ; var_5 = type_3. method_3 ( ) ; var_6 = type_3. method_3 ( ) ; } var_3. put ( key, var_2 ) ; ( var_4 ) ++ ; var_6 = type_3. method_3 ( ) ; } return null ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string label ) { type_1 var_1 = new type_1 ( label ) ; var_1 . method_2 ( ( ( this . var_2 ) != null ? this . var_2 . get ( ) : null ) ) ; var_1 . method_3 ( this ) ; return var_1 ; }
[0]: private boolean method_1 ( type_1 method, java.lang.string fieldname ) { return ( ( method. getname ( ). startswith ( string_1 ) ) || ( method. getname ( ). startswith ( string_2 ) ) ) && ( method. getname ( ). method_2 ( type_2. method_3 ( fieldname ) ) ) ; }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; int i = 0 ; for ( int x : new int [ var_3 ] ) { var_2 . get ( i ) . method_1 ( ) ; type_1 . method_2 ( var_1 , ( ( string_2 + i ) + string_3 ) ) ; i ++ ; } var_2 = null ; }
[0]: public static type_1 method_1 ( final java.lang.string var_1 ) { final type_2 var_2 = type_3. method_2 ( ) ; final type_4 var_3 = var_2. method_3 ( ) ; final type_5 var_4 = var_3. method_4 ( ) ; final type_6 var_5 = var_2. method_5 ( ) ; final type_1 var_6 = var_4. method_1 ( var_5, var_1, var_7 class ) ; return var_6 ; }

************

************
tgt: public type_1 [ ] method_1 ( type_2 var_1 , byte var_2 , byte var_3 , byte var_4 , boolean var_5 , boolean var_6 ) { return new type_1 [ ] { var_7 [ var_8 ] [ ( var_4 + 1 ) ] , var_2 != var_3 ? new type_3 ( var_9 ) : var_10 } ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2 ) { if ( ( var_2 == null ) || ( string_1. equals ( var_2 ) ) ) { return ; } if ( var_3. method_2 ( ). equals ( var_2 ) ) { var_1. method_3 ( var_4 ) ; } else if ( var_3. method_4 ( ). equals ( var_2 ) ) { var_1. method_3 ( var_5 ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 var_2 , type_4 var_3 ) { type_1 var_4 = new type_1 ( var_5 ) ; type_2 var_6 = var_1 . method_2 ( ) ; for ( int i = 0 ; i < ( var_5 ) ; i ++ ) { var_7 [ i ] = method_3 ( var_1 ) ; type_5 . method_4 ( var_6 , var_7 [ i ] , var_2 . method_5 ( var_1 ) ) ; var_8 += var_3 . method_6 ( var_6 , i ) ; } return var_4 ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; var_1. method_1 ( ) ; var_2. method_2 ( ) ; java.lang.system.out.println ( string_3 ) ; var_3. method_1 ( ) ; java.lang.system.out.println ( string_4 ) ; var_4. method_1 ( ) ; java.lang.system.out.println ( string_5 ) ; java.lang.system.out.println ( string_6 ) ; java.lang.system.exit ( 0 ) ; }

************

************
tgt: public double f ( double [ ] var_1 ) { double [ ] var_2 = new double [ var_3 . length ] ; double [ ] var_4 = new double [ var_1 . length ] ; double [ ] var_5 = new double [ var_3 . length ] ; double var_6 = method_1 ( var_1 , var_2 , var_4 , var_5 ) ; return var_6 ; }
[0]: public type_1 method_1 ( type_2 element, type_3 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( element. method_3 ( ""id"" ). getstring ( ) ) ; type_2 var_3 = element. method_3 ( string_1 ) ; if ( var_3!= null ) { java.lang.string var_4 = element. getstring ( ) ; if ( string_2. equals ( var_4 ) ) { var_2. method_4 ( null ) ; } else { var_2. method_4 ( var_4 ) ; } } return var_2 ; } return null ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = type_1 . method_2 ( var_2 ) ; if ( ( var_1 ) == null ) { var_1 = new type_2 ( var_2 ) ; } var_1 . method_3 ( ) ; } }
[0]: public boolean method_1 ( java.lang.long offset ) { type_1 var_1 = this. var_2. get ( offset ) ; return! ( ( ( ( var_1!= null ) && ( ( this. var_3 ) > 0 ) ) && ( this. var_4. contains ( var_1 ) ) ) && ( ( this. var_3 ) <= ( var_5 ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 writer ) throws java.io.ioexception { java.util.list < java.lang.string > var_1 = type_2 . method_2 ( ) ; if ( ( var_2 ) != null ) { writer . method_3 ( string_1 , var_2 ) ; var_1 . add ( string_1 ) ; } if ( ( var_3 ) != null ) { writer . method_4 ( string_3 , var_3 . value ( ) ) ; var_1 . add ( string_3 ) ; } writer . method_5 ( string_4 , var_1 . method_6 ( new java.lang.string [ 0 ] ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) throws java.io.ioexception, type_2, type_3 { if ( ( var_2 ) == null ) { return ; } final java.lang.string var_3 = var_1. getname ( ) ; if ( var_4. method_2 ( var_3 ) ) { final java.util.list < type_4 > var_5 = var_4. get ( var_3 ) ; for ( type_4 var_6 : var_5 ) { var_1. method_3 ( var_6 ) ; } } var_2. method_4 ( var_1 ) ; var_2. method_4 ( null ) ; } }

************

************
tgt: public void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3 = null ; break ; case var_4 : case var_5 : var_6 . method_2 ( ) ; var_6 = null ; break ; case var_7 : var_8 = null ; var_9 = null ; break ; default : break ; } var_1 = var_10 ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { if ( type_1. method_2 ( var_2, getactivity ( ) ) ) { method_3 ( ) ; } else { var_1. method_4 ( ) ; var_1. method_5 ( type_2. method_6 ( var_3, var_4 ) ) ; } } } }

************

************
tgt: public java.util.list < type_1 > method_1 ( final java.lang.string var_1 ) throws type_2 { var_2 . method_2 ( var_1 ) ; final java.util.list < type_1 > results = query ( java.lang.string.format ( var_3 , var_1 ) ) ; if ( ( results . size ( ) ) == 0 ) throw new type_2 ( string_1 , var_4 ) ; return var_2 . method_3 ( results ) ; }
[0]: public void method_1 ( double var_1, double var_2, double var_3 ) { final java.lang.string var_4 = string_1 ; if ( var_5 ) { var_6. method_2 ( var_4, var_7, string_2, var_1, var_2, var_3 ) ; var_6. method_3 ( var_4, var_7 ) ; } this. var_1 = var_1 ; this. var_2 = var_2 ; this. var_3 = var_3 ; }

************

************
tgt: private void method_1 ( java.lang.class < ? > var_1 , int start ) { java.lang.object var_2 = method_2 ( var_3 . get ( var_1 ) . var_1 , start , start ) ; method_3 ( ) . method_4 ( var_2 ) ; method_3 ( ) . delete ( ( start - 1 ) , start ) ; var_3 . get ( var_1 ) . position = - 1 ; }
[0]: public static int count ( java.lang.string content, char var_1 ) { int count = 0 ; int var_2 = content. length ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { if ( var_1. equals ( content. method_1 ( i ) ) ) { count ++ ; } } return count ; }

************

************
tgt: private boolean method_1 ( ) { int var_1 = method_2 ( var_2 ) ; if ( var_1 < 0 ) return false ; if ( ! ( method_3 ( ) ) ) return false ; java.util.arraylist < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; var_4 . set ( var_1 , var_3 ) ; for ( java.lang.string var_5 : type_1 . method_4 ( ) ) { var_3 . add ( var_5 ) ; } return true ; }
[0]: public void method_1 ( ) throws type_1 { final java.lang.string var_1 = string_1 ; final type_2 c = new type_2 ( ) ; c. set ( var_2, var_1 ) ; java.lang.string var_3 = type_3. method_2 ( c ) ; asserttrue ( ( string_2 + var_3 ), var_3. method_3 ( var_1 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { time = new java.lang.string [ 0 ] ; temp = new java.lang.string [ 0 ] ; var_2 . method_2 ( var_3 ) ; var_4 = var_5 ; var_6 = var_7 ; var_8 = new byte [ int_1 ] ; var_8 [ 0 ] = var_9 ; var_8 [ 1 ] = ( ( byte ) ( 1 ) ) ; var_10 . method_2 ( var_11 ) ; var_12 = string_1 ; method_3 ( var_13 ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 state, type_3 var_2 ) { java.lang.string path = var_2. method_2 ( ) ; type_4 var_3 = type_5. method_3 ( var_1, ( ( type_6 ) ( state. method_4 ( ) ) ), var_2, path ) ; state. method_5 ( var_3 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 result ) { type_2 var_1 = new type_2 ( ) ; var_1 . method_2 ( var_2 , result ) ; if ( ( var_3 ) != null ) { type_2 var_4 = new type_2 ( ) ; for ( java.util.map.entry < java.lang.string , java.lang.string > var_5 : var_3 . method_3 ( ) . method_4 ( ) ) { var_4 . method_2 ( var_5 . method_5 ( ) , new type_3 ( var_5 . getvalue ( ) ) ) ; } var_1 . method_2 ( var_6 , var_4 ) ; } return var_1 ; }
[0]: public type_1 get ( type_2 var_1 ) throws type_3 { type_2 var_2 = var_3. method_1 ( var_1 ) ; type_1 response = method_2 ( var_4. method_3 ( var_2 ) ). type ( var_5 ). get ( var_6 class ) ; if ( method_4 ( response ) ) { method_5 ( response ) ; method_6 ( ) ; response = method_2 ( var_4. method_3 ( var_2 ) ). type ( var_5 ). get ( var_6 class ) ; } method_7 ( var_1, response ) ; return response ; }

************

************
tgt: private type_1 method_1 ( int var_1 , int var_2 ) { type_1 var_3 = new type_1 ( this . var_4 ) ; if ( var_2 >= ( ( this . method_2 ( ) ) - 1 ) ) { throw new type_2 ( string_1 ) ; } method_3 ( var_5 , var_1 , var_2 , var_1 , ( var_2 + 1 ) ) ; return var_3 ; }
[0]: public int method_1 ( ) { if ( ( var_1. method_2 ( ) ) > 0 ) { return method_3 ( )? int_1 : ( ( int ) ( ( ( var_2 ) * int_1 ) / ( var_1. method_2 ( ) ) ) ) ; } else { return 0 ; } }

************

************
tgt: private boolean contains ( type_1 node , type_2 p ) { if ( node == null ) return false ; int var_2 = type_3 . method_1 ( p , node ) ; if ( var_2 < 0 ) return contains ( var_3 , p ) ; else if ( var_2 > 0 ) return contains ( var_4 , p ) ; else return var_5 . equals ( p ) ; }
[0]: public type_1 method_1 ( int index ) { assert index < ( var_1 ) ; if ( ( var_2 ) == null ) { var_2 = new type_1 [ var_1 ] ; } try { var_2 [ index ] = var_3. method_2 ( var_4, var_5, var_6, var_7, length, index ) ; } catch ( java.io.ioexception var_8 ) { throw new type_2 ( var_8 ) ; } return var_2 [ index ] ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { type_2 var_2 = var_3 . get ( position ) ; var_4 . method_2 ( var_5 ) ; var_6 . settext ( var_2 . method_3 ( ) ) ; var_7 . settext ( ( string_1 + ( var_2 . method_4 ( ) ) ) ) ; switch ( method_5 ( position ) ) { case var_11 : var_9 . method_6 ( var_12 ) ; break ; case var_8 : var_9 . method_6 ( var_10 ) ; break ; } var_4 . method_7 ( var_2 ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1, java.lang.string key, type_2 context, type_3 var_2 ) { if ( ( var_1 == null ) || ( key == null ) ) { return string_1 ; } java.lang.string var_3 = this. method_2 ( key, var_2 ) ; if ( var_3!= null ) { return method_3 ( var_1, context, var_3 ) ; } else { return method_3 ( var_1, context, key ) ; } }

************

************
tgt: void method_1 ( ) { for ( type_1 var_1 : method_2 ( ) . method_3 ( ) ) { if ( var_1 instanceof type_2 ) { ( ( type_2 ) ( var_1 ) ) . method_4 ( ( ( type_2 ) ( var_1 ) ) . method_5 ( ) . method_6 ( var_2 ) ) ; } } }
[0]: private void method_1 ( boolean value ) { if ( var_1. method_2 ( ) ) { var_2. method_3 ( var_3, ( value? int_1 : 0 ) ) ; var_3. method_4 ( string_1, value ) ; method_5 ( value ) ; method_6 ( ) ; } else { method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this . var_3 . get ( var_1 . method_2 ( ) ) ; if ( var_2 == null ) { var_2 = new java.util.arraylist < type_1 > ( ) ; this . var_3 . put ( var_1 . method_2 ( ) , var_2 ) ; } var_2 . add ( var_1 ) ; }
[0]: public static void index ( ) { type_1 var_1 = var_2. get ( string_1 ) ; if ( var_1 == null ) { type_2. method_1 ( ) ; } type_3 var_3 = type_3. method_2 ( string_2, var_1. value ). first ( ) ; java.util.list < type_4 > var_4 = type_4. method_2 ( string_3, var_3 ). method_3 ( ) ; method_4 ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { try { var_1 = new type_1 ( string_1 ) ; var_2 = new type_1 ( string_2 ) ; var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { fail ( string_3 ) ; } try { var_3 . method_4 ( ) ; fail ( string_4 ) ; } catch ( type_2 var_4 ) { asserttrue ( true ) ; } catch ( java.lang.exception var_4 ) { fail ( string_5 ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_3 ) ( this. method_3 ( ) ) ). method_4 ( ) ; new type_4 ( method_5 ( var_4 ) ) ; new type_5 ( method_5 ( var_5 ), var_3 ) ; new type_6 ( method_5 ( var_6 ), var_3 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string x , java.lang.string y ) { type_1 i = new type_1 ( getvalue ( x ) . tostring ( ) ) ; type_1 j = new type_1 ( getvalue ( y ) . tostring ( ) ) ; type_1 k = j . method_1 ( i ) ; k = k . method_2 ( ) ; return k . method_3 ( ) ; }
[0]: public void update ( float var_1 ) { for ( type_1 var_2 : var_3. method_1 ( var_4 class ) ) { type_2 var_5 = var_2. method_2 ( var_4 class ) ; type_3 var_6 = var_2. method_2 ( var_7 class ) ; var_2. method_3 ( new type_4 ( ( ( var_8 ) ++ ), 0, 0, var_9, var_10, var_11, ( ( long ) ( var_1 ) ) ) ) ; } }

************

************
tgt: public void handle ( type_1 var_1 ) { var_2 . method_1 ( ) . remove ( var_3 ) ; var_4 = ( ( int ) ( ( java.lang.math.random ( ) ) * int_1 ) ) + 1 ; var_6 = var_7 . get ( ( ( var_5 ) + 1 ) ) . x ; var_8 = var_7 . get ( ( ( var_5 ) + 1 ) ) . y ; var_9 = type_2 . method_2 ( ) ; var_10 = true ; }
[0]: private type_1 method_1 ( java.util.set < type_2 > var_1, java.util.set < type_3 > var_2, java.lang.integer var_3, java.lang.integer var_4, java.lang.string var_5 ) { return type_1. method_2 ( ). method_3 ( var_1 ). method_4 ( var_2 ). method_5 ( var_3 ). method_6 ( var_3 ). method_7 ( var_5 ). build ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( true ) ; type_1 var_2 = ( ( type_1 ) ( var_3 . method_3 ( ) ) ) ; var_4 . init ( var_2 ) ; try { var_4 . method_4 ( ) ; } catch ( java.lang.exception var_5 ) { } try { var_6 . method_5 ( ) ; } catch ( java.lang.exception var_5 ) { } var_6 . method_6 ( new type_2 ( var_4 ) ) ; method_7 ( string_1 , var_2 . getid ( ) ) ; var_1 . method_2 ( false ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return false ; } java.lang.integer intvalue = type_2. get ( var_3 ). method_1 ( var_1 ) ; return ( intvalue!= null ) && ( intvalue >= ( var_2 ) ) ; }

************

************
tgt: protected void method_1 ( type_1 response ) { super . method_1 ( response ) ; if ( ( response . method_2 ( ) ) && ( ( response . result ) != null ) ) { type_2 . method_3 ( ) . delete ( method_5 ( ) ) ; type_2 . method_3 ( ) . method_4 ( method_5 ( ) , response . result ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { java.util.list < java.io.file > var_1 = type_1. method_2 ( var_2, var_3 ) ; java.lang.string var_4 = ( ( ( ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + ( var_2. method_3 ( ) ) ) + string_3 ) + ( var_6 ) ) + string_2 ) + ( var_7. method_3 ( ) ) ) + string_4 ; type_1. method_4 ( var_4, var_7, var_1 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { try { java.lang.string var_2 = var_3 . method_2 ( var_1 ) . method_3 ( ) . method_4 ( var_4 , var_5 . string class ) ; if ( type_1 . isempty ( var_2 ) ) { return ; } java.lang.string var_6 = method_5 ( var_2 ) ; if ( type_1 . method_6 ( var_6 ) ) { } } catch ( type_3 var_8 ) { var_9 . method_8 ( string_1 ) ; } }
[0]: public type_1 < java.util.list < java.lang.string > > get ( java.lang.string query ) { if ( type_2. isempty ( query ) ) { return type_1. method_1 ( new java.util.arraylist < > ( ) ) ; } return type_1. method_1 ( type_3. method_2 ( ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.net.url url = type_1 . method_2 ( var_1 ) ; java.lang.string response = null ; try { response = type_1 . method_3 ( url ) ; } catch ( java.io.ioexception var_2 ) { var_3 = string_1 ; } return response ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1. method_2 ( string_1 ) ; java.util.list < type_2 > var_1 = new java.util.arraylist < > ( ) ; var_1. add ( var_2 ) ; var_1. add ( var_3 ) ; method_3 ( var_4. method_4 ( ) ). method_5 ( var_1 ) ; method_6 ( var_4 ) ; var_5. method_7 ( get ( var_6 ). method_8 ( var_7 ) ). method_9 ( type_3. method_10 ( ) ). method_11 ( status ( ). method_12 ( ) ) ; }

************

************
tgt: private type_1 method_1 ( ) { var_1 = new type_1 ( var_2 . method_2 ( ) ) ; var_1 . method_3 ( ) . add ( string_1 ) ; var_1 . method_4 ( var_3 . get ( ) ) ; var_1 . method_5 ( var_1 . method_6 ( 0 ) ) ; var_4 . method_7 ( this , var_1 , method_8 ( ) . method_9 ( var_3 ) , method_10 ( ) . method_9 ( 0.0 ) , true ) ; return var_1 ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = method_2 ( string_1, var_1 ) ; type_3 var_3 = method_2 ( string_2, var_1 ) ; return method_3 ( var_4, new type_3 [ ] { var_2, var_3 }, method_4 ( string_3, method_4 ( var_5, var_2, var_3 ), method_4 ( var_5, var_2, var_3 ) }, method_4 ( var_5, var_2, var_3 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { type_3 var_8 = ( ( type_3 ) ( method_6 ( method_2 ( ) . var_9 ) ) ) ; var_8 . method_7 ( var_10 ) ; type_2 var_3 = new type_2 ( method_2 ( ) , null , null , 1 ) ; var_3 . method_3 ( var_4 , var_5 ) ; android.content.intent var_6 = new android.content.intent ( method_2 ( ) , var_7 class ) ; method_4 ( var_6 ) ; method_5 ( ) ; }
[0]: private static int method_1 ( java.lang.string [ ] args ) { int sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ]. equals ( string_1 ) ) for ( java.lang.string arg : args ) sum += java.lang.integer.parseint ( args [ 0 ] ) ; return sum ; } }

************

************
tgt: protected void init ( ) throws type_1 { super . init ( ) ; if ( ( method_1 ( ) . method_2 ( ) . equals ( string_1 ) ) && ( ! ( method_3 ( string_2 ) . method_4 ( ) ) ) ) method_5 ( ) . put ( string_2 , 1 ) ; }
[0]: protected void method_1 ( type_1 filepath, long var_1 ) throws java.io.ioexception { type_2 var_2 = var_3. remove ( filepath ) ; if ( var_2!= null ) { var_2. method_2 ( ) ; } if ( filepath. method_3 ( ) ) { filepath. method_4 ( var_1 ) ; } else { filepath. method_4 ( filepath ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { android.content.intent intent = new android.content.intent ( this , var_1 class ) ; intent . method_2 ( string_1 , var_2 ) ; method_3 ( intent , 1 ) ; if ( ( var_3 ) >= int_1 ) { method_6 ( var_4 , var_5 ) ; } }
[0]: private void method_1 ( ) { var_1. method_2 ( var_2, ( string_1 + ( var_3 ) ) ) ; var_4. method_3 ( null ) ; getactivity ( ). method_4 ( ). method_5 ( var_5 ) ; type_1. method_2 ( var_2, string_2 ) ; var_3 = false ; var_6. method_6 ( true ) ; var_6. method_6 ( false ) ; }

************

************
tgt: private void method_1 ( java.util.list < java.lang.string > var_1 , java.util.list < type_1 > var_2 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_2 . asserttrue ( var_1 . get ( i ) . equals ( ( ( ( i + 1 ) + string_1 ) + ( var_2 . get ( i ) . getid ( ) ) ) ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2, type_1 view, int var_3, boolean var_4, int var_5 ) { try { this. var_6. method_2 ( ( ( var_7 ) + ( view. size ( ) ) ) ) ; java.lang.string line = new java.lang.stringbuilder ( ). method_3 ( var_2, view, new type_1 ( ), var_3, var_4, var_1, string_1, var_5 ) ; } catch ( java.io.ioexception var_8 ) { var_8. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { type_2 var_3 = method_2 ( ) ; type_3 var_6 = var_3 . method_4 ( ) ; var_6 . replace ( var_5 , var_1 ) ; var_6 . method_5 ( var_7 ) ; if ( var_2 ) { var_6 . method_7 ( null ) ; } var_6 . commit ( ) ; method_8 ( var_1 ) ; }
[0]: public static type_1 [ ] method_1 ( double var_1 ) { type_2 [ ] buf = new type_2 [ int_1 ] ; int num = var_2. method_2 ( buf, ( ( long ) ( buf. length ) ), var_1 ) ; type_1 [ ] var_3 = new type_1 [ num ] ; for ( int k = 0 ; k < num ; k ++ ) var_3 [ k ] = new type_1 ( buf [ k ] ) ; return var_3 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , java.lang.stringbuilder var_2 , type_2 var_3 ) { java.lang.stringbuilder var_4 = var_3 . method_3 ( ) ; for ( type_3 f : type_4 . method_4 ( var_1 ) ) { method_5 ( f , var_4 , var_3 , var_1 , true ) ; var_4 . append ( string_1 ) ; } }
[0]: public void method_1 ( ) { if ( false == ( var_1 ) ) { if ( ( var_2 )!= null ) { type_1 var_3 = new type_1 ( ) ; var_4 = var_5 ; var_2. method_2 ( var_3 ) ; } } else { if ( ( var_2 )!= null ) { type_1 var_3 = new type_1 ( ) ; var_4 = var_6 ; var_2. method_2 ( var_3 ) ; } } ( var_7. count ) ++ ; } }

************

************
tgt: protected static int method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { int result = 0 ; try ( final type_1 var_3 = type_2 . method_2 ( var_4 class . method_3 ( ) ) ; final type_3 var_5 = var_3 . method_4 ( ) ; final type_4 var_6 = var_5 . method_5 ( type_5 . method_6 ( var_1 , var_2 ) ) ) { if ( var_6 . method_7 ( ) ) result = var_6 . getint ( 1 ) ; } catch ( type_6 var_7 ) { var_7 . method_8 ( ) ; } return result ; }
[0]: public boolean method_1 ( type_1 event ) { if ( method_2 ( var_1 ) ) { for ( type_2 var_2 : var_3 ) { if ( var_2 instanceof type_3 ) { java.lang.system.out.println ( method_3 ( var_1 ) ) ; } if ( var_2. method_2 ( method_3 ( var_1 ) ) ) { method_4 ( var_2 ) ; return var_2. method_1 ( event ) ; } } } else { java.lang.system.out.println ( string_1 ) ; } return false ; } }

************

************
tgt: protected java.lang.object method_1 ( java.lang.object [ ] params ) { var_1 = type_1 . get ( getactivity ( ) ) ; int t = var_2 . method_3 ( ) ; switch ( t ) { case var_3 : var_2 . method_4 ( ) ; break ; case var_4 : type_2 message = new type_2 ( ) ; var_5 = 1 ; var_6 . method_5 ( message ) ; var_2 . method_4 ( ) ; break ; case var_7 : break ; } return null ; }
[0]: public type_1 method_1 ( int index ) { int var_1 = var_2. size ( ) ; if ( ( ( var_2 )!= null ) && ( index < var_1 ) ) { return var_2. get ( index ) ; } if ( ( var_3 )!= null ) { int var_4 = ( ( var_2 ) == null )? index : index - var_1 ; return var_3. get ( var_4 ) ; } throw new type_2 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { switch ( view . getid ( ) ) { case var_2 : method_2 ( ) ; break ; case var_3 : method_3 ( ) ; break ; case var_4 : method_4 ( ) ; method_3 ( ) ; break ; case var_5 : method_5 ( ) ; break ; } }
[0]: private static < type_1 extends type_2 > void method_1 ( type_1 var_1, java.util.set < type_1 > result ) { if ( result. contains ( var_1 ) ) return ; for ( type_2 var_2 : var_1. method_2 ( ). method_3 ( ) ) { type_1 var_3 = ( ( type_1 ) ( var_2 ) ) ; type_3. method_1 ( var_3, result ) ; result. add ( var_3 ) ; } result. add ( result ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_2 ) { return ; } var_3 . method_3 ( var_4 , var_5 ) ; var_2 = true ; if ( ( var_6 . method_4 ( ) ) && ( ! ( var_7 . method_5 ( ) ) ) ) { var_1 . method_6 ( ) ; } }
[0]: private void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; type_1. method_2 ( var_1, ( string_2 + ( type_2. method_3 ( ). method_4 ( ). method_5 ( ) ) ) ) ; if ( ( type_2. method_3 ( ). method_4 ( ). method_5 ( ) ) == null ) { android.content.intent i = new android.content.intent ( this, var_2 class ) ; method_6 ( i ) ; } }

************

************
tgt: protected void method_1 ( ) throws type_1 , type_2 { try { var_1 . event ( ) ; method_2 ( var_2 ) ; var_3 . set ( true ) ; var_4 . set ( false ) ; var_5 . set ( true ) ; method_2 ( type_3 . method_3 ( var_6 ) ) ; method_4 ( var_7 ) ; var_5 . set ( false ) ; } finally { var_8 . set ( false ) ; } }
[0]: public void method_1 ( final type_1 event ) { if ( ( var_1 )!= 0 ) { if ( type_2. method_2 ( ) ) type_3. setenabled ( true ) ; else type_3. setenabled ( false ) ; type_4. method_1 ( null ) ; method_3 ( true ) ; } else { type_5. method_4 ( var_2, string_1, string_2, var_3 ) ; type_2. method_5 ( false ) ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { if ( ! ( var_2 . isempty ( ) ) ) { var_4 = var_1 ; var_5 = var_2 ; var_6 = var_3 ; method_2 ( ) ; method_3 ( ) . method_4 ( var_7 , null , this ) ; } }
[0]: public static java.lang.string method_1 ( java.lang.object value ) { if ( value == null ) return null ; try { java.lang.string result = type_1. method_2 ( value. tostring ( ), string_1 ) ; result = result. replaceall ( string_2, string_3 ) ; return result ; } catch ( type_2 var_1 ) { return null ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , java.lang.string type ) { type_3 < type_2 > var_3 = var_4 . get ( type ) ; if ( var_3 != null ) { type_4 var_5 = var_1 . method_2 ( ) ; return var_3 . remove ( var_5 . method_3 ( ) , var_5 . method_4 ( ) , var_2 ) ; } return false ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3. method_2 ( var_1. method_3 ( ) ) ; if ( ( ( var_2 == null ) && ( ( var_1. method_4 ( ) )!= null ) ) && (! ( var_1. method_4 ( ). equals ( string_1 ) ) ) ) { var_2 = var_3. method_5 ( var_1. method_4 ( ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( java.util.arraylist < type_1 > var_1 ) { method_2 ( ) ; var_2 = var_1 ; if ( ! ( var_2 . isempty ( ) ) ) { type_2 args = new type_2 ( ) ; args . method_3 ( getstring ( var_3 ) , var_2 ) ; var_4 . method_4 ( args ) ; method_5 ( var_4 ) ; } }
[0]: public type_1 method_1 ( ) { if ( ( size ) == 0 ) { throw new type_2 ( ) ; } type_1 var_1 = ( ( type_1 ) ( var_2 [ ( -- ( var_3 ) ) ] ) ) ; ( size ) -- ; return var_1 ; }

************

************
tgt: void method_1 ( type_1 var_1 , java.util.list < type_2 > var_2 ) { type_3 < type_1 , type_2 > var_3 = method_2 ( var_1 ) ; if ( var_3 != null ) { var_3 . method_3 ( var_2 ) ; } else { var_3 = new type_3 < type_1 , type_2 > ( var_1 , var_2 ) ; var_4 . add ( var_3 ) ; } }
[0]: public void method_1 ( ) { try { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } if ( ( this. var_2 )!= null ) { this. var_2. method_2 ( ) ; } } catch ( type_1 var_3 ) { java.lang.system.out.println ( var_3. method_3 ( ) ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { final java.lang.string var_2 ; if ( var_1 . startswith ( string_1 ) ) { var_2 = var_1 . substring ( 1 ) . tolowercase ( ) ; } else { var_2 = var_1 . tolowercase ( ) ; } return var_3 . values ( ) . method_2 ( ) . method_3 ( ( var_4 ) - > var_4 . method_4 ( ) . contains ( var_2 ) ) . method_5 ( ) . method_6 ( ( ) - > null ) ; }
[0]: protected java.lang.object method_1 ( java.lang.string classname ) throws java.lang.classnotfoundexception, type_1, type_2 { java.lang.class <? > var_1 = java.lang.class. method_2 ( classname ) ; try { type_3 <? > var_2 = var_1. method_3 ( var_3 class ) ; return var_2. method_4 ( var_4 ) ; } catch ( type_4 var_5 ) { } catch ( type_5 var_6 ) { } return var_1. method_4 ( ) ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 ; var_2 = string_1 ; for ( int i = ( var_1 . length ( ) ) - 1 ; i >= 0 ; i -- ) { var_2 = var_2 + ( var_1 . method_2 ( i ) ) ; } java.lang.system.out.println ( var_2 ) ; }
[0]: public void method_1 ( final int var_1, final type_1 var_2 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( ( string_2 + ( type_2. tostring ( ) ) ) + string_3 ) ) ; method_2 ( type_2, var_1, var_2 ) ; java.lang.system.out.println ( string_4 ) ; }

************

************
tgt: private void method_1 ( type_1 response ) { var_1 = response . method_2 ( ) ; if ( ( response . method_3 ( ) ) != null ) { var_2 = response . method_3 ( ) ; } var_3 = response . method_4 ( ) ; var_4 = type_2 . method_5 ( ) . method_6 ( response . method_7 ( ) ) ; }
[0]: public final void method_1 ( ) { final java.util.iterator < type_1 < type_2, type_3 > > var_1 = new type_4 ( key, var_2, var_3, var_4, var_5 ) ; while ( var_1. method_2 ( ) ) { var_6. method_3 ( var_1. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { new type_3 ( getactivity ( ) ) . method_4 ( string_2 ) . method_5 ( var_1 . gettext ( ) ) . method_6 ( string_3 , new type_4 ( ) { public void method_7 ( type_5 var_2 , int i ) { method_8 ( ) ; } } ) . method_9 ( ) . show ( ) ; }
[0]: public type_1 method_1 ( java.lang.long var_1 ) { type_2 var_2 = var_3. method_2 ( var_1 ) ; if ( ( var_2. method_3 ( ) ) <= ( var_4 ) ) { var_2. method_4 ( var_5 ) ; var_3. method_5 ( var_2 ) ; var_6. method_6 ( var_2 ) ; } return type_1. status ( var_7 ). build ( ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int [ ] a = new int [ ] { int_2 , int_4 } ; type_1 obj = new type_1 ( ) ; type_2 var_1 = obj . method_1 ( a ) ; type_1 . method_2 ( var_1 ) ; var_1 = obj . method_3 ( var_1 , 1 , int_1 ) ; type_1 . method_2 ( var_1 ) ; }
[0]: public void method_1 ( final type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; type_3. method_2 ( method_3 ( ), var_2. method_4 ( ), new type_4 ( ) { public void method_5 ( java.util.list < type_5 > results ) { } } ) ; type_6. method_6 ( var_3, string_1 ) ; var_4 = var_1. method_4 ( ) ; android.content.intent i = new android.content.intent ( this, var_5 class ) ; i. method_7 ( i ) ; method_8 ( i ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) . put ( string_1 , int_1 ) . build ( ) ; type_3 var_2 = var_3 . method_3 ( ) . method_4 ( ) . method_5 ( string_2 ) . method_6 ( var_1 ) . execute ( ) . method_7 ( ) ; type_4 . info ( var_2 ) ; }
[0]: public static void method_1 ( java.lang.string title, java.lang.string text, java.lang.string var_1 ) { type_1. method_2 ( var_2, title, text, var_1, var_3. method_3 ( ), var_3. method_4 ( ), var_3. method_5 ( ) ) ; type_2. method_6 ( ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { var_4 , var_5 , var_6 } ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { if ( ! ( type_2 . isempty ( var_2 [ i ] ) ) ) { return var_2 [ i ] ; } } return null ; }
[0]: private void method_1 ( type_1 response ) { type_2 var_1 = new type_2 ( string_1, type_3. method_2 ( ) ) ; response. method_3 ( var_1 ) ; type_4 var_2 = new type_4 ( ) ; type_3. method_4 ( ). method_5 ( var_2, var_1. getvalue ( ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , java.lang.class var_2 , java.util.collection keys ) { if ( ! ( keys . isempty ( ) ) ) { if ( var_3 ) { for ( java.lang.object key : keys ) { add ( var_1 . method_2 ( var_2 , ( ( type_2 ) ( key ) ) ) ) ; } } else { method_3 ( var_1 . method_4 ( var_2 , keys ) ) ; } } }
[0]: private void method_1 ( ) { var_1. settext ( string_1 ) ; var_2. settext ( string_1 ) ; var_3. settext ( string_1 ) ; var_4. settext ( string_1 ) ; var_5. method_2 ( var_6 ) ; var_7. method_2 ( var_8 ) ; if ( var_9 ) { var_10. method_2 ( var_6 ) ; var_11. method_2 ( var_6 ) ; } else { var_10. method_2 ( var_12 ) ; var_11. method_2 ( var_12 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , java.lang.object ... var_2 ) { java.lang.object var_3 = type_2 . method_2 ( var_1 , var_2 ) ; if ( var_3 instanceof type_1 ) { return ( ( type_1 ) ( var_3 ) ) ; } java.lang.string var_4 = java.lang.string . method_3 ( var_3 ) . trim ( ) ; return var_5 . method_4 ( var_4 ) ? new type_1 ( var_4 ) : null ; }
[0]: private void method_1 ( java.lang.string key ) { for ( java.lang.string k : new java.util.linkedlist ( var_1. method_2 ( ) ) ) { if ( k. startswith ( key ) ) { method_3 ( key, var_2 ) ; } if ( k. method_4 ( key ) ) { method_3 ( key, var_3 ) ; } } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { int var_2 = 0 ; for ( java.util.map.entry < java.lang.string , type_2 > var_3 : var_4 . method_2 ( ) ) { if ( var_3 . method_3 ( ) . contains ( var_1 ) ) { return ( ( boolean ) ( var_5 . method_4 ( ) [ var_2 ] ) ) ; } var_2 ++ ; } return false ; }
[0]: public void method_1 ( final type_1 event, final type_2 p ) { if ( var_1 ) { event. method_2 ( p ) ; var_2. method_3 ( event ) ; if ( ( ( var_3 ) == null ) && ( var_1. get ( ) ) ) { for ( type_3 var_4 : var_5 ) { final type_1 var_6 = event. method_4 ( ) ; var_4. method_1 ( var_6, p ) ; } } } }

************

************
tgt: public void handle ( type_1 event ) { java.lang.string var_1 = type_2 . method_1 ( ) ; type_3 . method_2 ( ) . var_2 = true ; if ( ( var_1 != null ) && ( var_1 . method_3 ( string_1 ) ) ) { type_4 . method_4 ( type_3 . method_2 ( ) , var_3 . method_5 ( ) ) ; } else type_4 . method_6 ( type_3 . method_2 ( ) , var_3 . method_5 ( ) , var_1 ) ; }
[0]: static type_1 method_1 ( final java.lang.class type ) { try { return type_1. method_2 ( var_1 class. method_3 ( type. method_4 ( string_1 ). get ( null ) ) ) ; } catch ( type_2 var_2 ) { throw new type_3 ( ( string_2 + type ) ) ; } catch ( type_4 var_2 ) { throw new type_3 ( ( ( string_3 + type ) + string_4 ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) { var_3 . info ( string_1 ) ; if ( ( var_1 == null ) || ( var_2 == null ) ) { return false ; } if ( var_4 . method_2 ( var_2 , var_1 . method_3 ( ) . method_4 ( ) ) . method_5 ( var_5 ) ) { this . method_7 ( var_1 ) ; var_6 . remove ( var_6 . method_6 ( var_1 ) ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { int x = method_2 ( ). method_3 ( ) ; int y = method_2 ( ). method_4 ( ) ; method_5 ( ) ; if ( ( ( var_1 ) == 0 ) && ( method_6 ( x, ( y + int_1 ), var_2. method_7 ( ) ) ) ) { var_1 = - ( var_3 ) ; } }

************

************
tgt: public int method_1 ( int var_1 ) { int var_2 = 0 ; for ( int j = 0 ; j < ( var_4 ) ; j ++ ) { if ( ( var_3 [ j ] ) == var_1 ) { int index = ( j + int_2 ) % ( var_4 ) ; var_2 = var_3 [ index ] ; break ; } } return var_2 ; }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; if ( var_1. method_3 ( var_3 ) ) { var_1. method_4 ( var_3 ) ; } else { super. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { android.content.intent i = new android.content.intent ( getactivity ( ) , var_1 class ) ; if ( ( var_2 ) != null ) { i . method_2 ( var_3 , type_1 . method_3 ( var_2 ) ) ; } getactivity ( ) . method_4 ( i , var_4 ) ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; int var_1 = 0 ; int var_2 = 0 ; int var_3 = 0 ; int var_4 = - int_1 ; boolean var_5 = false ; boolean result = type_1. method_2 ( var_1, var_2, var_3, var_4 ) ; type_2. assertequals ( var_5, result ) ; }

************

************
tgt: public static int method_1 ( type_1 state ) { int var_1 = 0 ; int var_2 = - ( var_3 ) ; for ( int a : type_2 . method_2 ( state ) ) { int temp = type_2 . method_3 ( type_2 . result ( state , a ) ) ; if ( temp > var_2 ) { var_2 = temp ; var_1 = a ; } } return var_1 ; }
[0]: protected type_1 method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; if ( type_2. method_2 ( ) ) { type_3 var_2 = new type_3 ( ) ; var_2. method_3 ( new type_4 ( ) ) ; var_1. method_4 ( string_2, new type_5 ( ) ) ; var_1. method_4 ( string_3, true ) ; var_1. method_4 ( string_4, false ) ; var_1. method_4 ( string_5, var_2 ) ; } return var_1 ; }

************

************
tgt: synchronized void method_1 ( final type_1 var_1 , final type_2 var_2 , final boolean var_3 ) { this . nodes . remove ( type_4 . method_4 ( var_2 . method_5 ( ) ) ) ; if ( var_1 != null ) { type_3 . method_2 ( string_1 , var_1 . method_3 ( ) ) ; var_1 . method_6 ( var_3 ) ; } }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3. method_2 ( var_2 class ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < > ( ) ; method_3 ( var_4, method_4 ( ) ). method_5 ( ) ; type_4. assertequals ( var_3, var_5. method_6 ( var_1 ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string message , java.lang.string var_1 , java.lang.exception var_2 ) { type_1 params = type_2 . method_2 ( ) ; params . method_3 ( string_1 , string_2 ) ; params . method_3 ( string_3 , message ) ; params . method_3 ( string_4 , var_1 ) ; method_5 ( params ) ; }
[0]: public void method_1 ( int var_1, int var_2 ) { var_3 = var_1 ; var_4 = var_2 ; var_5 = new type_1 [ var_3 ] [ var_4 ] ; for ( int i = 0 ; i < ( var_4 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { var_6 [ j ] [ i ] = false ; } } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { if ( ( var_1 . length ( ) ) > 0 ) { var_2 . method_2 ( var_3 ) ; var_4 . method_3 ( ) . method_4 ( var_1 ) ; } else { var_2 . method_2 ( var_5 ) ; } return false ; }
[0]: public void method_1 ( ) { type_1. assertthat ( var_1. method_2 ( ) ). method_3 ( ) ; var_1. method_4 ( true ) ; type_1. assertthat ( var_1. method_2 ( ) ). method_5 ( ) ; type_1. assertthat ( var_1. method_6 ( ) ). method_5 ( ) ; var_1. method_7 ( ) ; type_1. assertthat ( var_1. method_2 ( ) ). method_3 ( ) ; }

************

************
tgt: private synchronized type_1 method_1 ( type_2 event ) { if ( var_1 ) { java.lang.string key = event . method_2 ( ) . tostring ( ) ; type_1 var_2 = var_3 . get ( key ) ; if ( var_2 == null ) { var_2 = new type_1 ( ) ; var_5 = type_3 . method_3 ( ) ; } var_3 . put ( key , var_2 ) ; ( var_4 ) ++ ; var_6 = type_3 . method_3 ( ) ; return var_2 ; } return null ; }
[0]: protected void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { java.lang.string var_2 = string_1 ; try { type_4 var_3 = var_4. method_2 ( var_2, true ) ; type_5 < java.lang.string > list = var_3. method_3 ( ) ; for ( type_6 var_5 : list ) { response. method_4 ( ). method_5 ( ( string_2 + var_5 ) ) ; } } catch ( java.lang.exception var_6 ) { response. method_4 ( ). method_6 ( var_6. method_7 ( ) ) ; } }

************

************
tgt: private boolean method_1 ( type_1 method , java.lang.string fieldname ) { return ( method . getname ( ) . equals ( ( string_1 + ( type_2 . method_3 ( fieldname ) ) ) ) ) || ( method . getname ( ) . equals ( ( string_2 + ( type_2 . method_3 ( fieldname ) ) ) ) ) ; }
[0]: public void method_1 ( ) { final type_1 var_1 = new type_1 ( ) ; final type_2 var_2 = var_1. method_2 ( var_3. method_3 ( string_1 ), string_2, string_3 ) ; assertequals ( var_4, var_5 ) ; asserttrue ( var_2. method_4 ( ). contains ( string_4 ) ) ; }

************

************
tgt: public static type_1 method_1 ( final java.lang.string var_1 ) { final type_2 var_2 = type_3 . method_2 ( ) ; final type_4 var_3 = var_2 . method_3 ( ) ; final type_5 var_4 = var_3 . method_4 ( ) ; final type_6 var_5 = var_2 . method_5 ( ) ; return var_4 . method_1 ( var_5 , var_1 , var_7 class ) ; }
[0]: java.util.list < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; var_1. add ( var_2 ) ; var_1. add ( var_3 ) ; var_1. add ( var_4 ) ; var_1. add ( var_5 ) ; return var_1 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( ( var_2 == null ) || ( string_1 . equals ( var_2 ) ) ) { var_1 . method_3 ( null ) ; } else if ( var_3 . method_2 ( ) . equals ( var_2 ) ) { var_1 . method_3 ( var_4 ) ; } else if ( var_3 . method_4 ( ) . equals ( var_2 ) ) { var_1 . method_3 ( var_5 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string name, java.lang.object... params ) { java.util.map < java.lang.string, java.lang.string > label = var_2. get ( name ) ; if ( label == null ) { if ( var_3. method_2 ( method_3 ( var_1, name ) ) ) { return var_3. get ( method_3 ( var_1, name ) ) ; } return string_1 ; } return label. get ( this. method_4 ( ). method_5 ( ). tostring ( ) ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; var_1 . method_1 ( ) ; java.lang.system.out.println ( string_3 ) ; var_3 . method_1 ( ) ; java.lang.system.out.println ( string_4 ) ; var_4 . method_1 ( ) ; java.lang.system.out.println ( string_5 ) ; java.lang.system.out.println ( string_6 ) ; java.lang.system.exit ( 0 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( var_1. method_3 ( ) ) ; var_1. method_4 ( type_2. method_5 ( ) ) ; type_3 var_2 = method_6 ( var_1 ) ; var_2. method_7 ( new type_4 ( var_3, var_4, true, false ) ) ; type_3 var_5 = method_8 ( var_1 ) ; var_5. method_7 ( new type_4 ( var_3, var_4, true, false ) ) ; var_6 = new type_5 ( ) ; var_6. start ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 element , type_3 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( element . method_3 ( "id" ) . getstring ( ) ) ; type_2 var_3 = element . method_3 ( string_1 ) ; if ( var_3 != null ) { java.lang.string var_4 = var_3 . getstring ( ) ; if ( string_2 . equals ( var_4 ) ) { var_2 . method_4 ( null ) ; } else { var_2 . method_4 ( var_4 ) ; } } return var_2 ; }
[0]: private void method_1 ( ) { for ( type_1 var_1 : var_2 ) for ( type_1 var_3 : var_2 ) for ( type_1 var_4 : var_2 ) if ( ( var_5. get ( new type_2 ( var_1, var_4 ) ) ) && ( var_5. get ( new type_2 ( var_3, var_4 ) ) ) ) var_5. put ( new type_2 ( var_1, var_3 ), true ) ; }

************

************
tgt: public boolean method_1 ( java.lang.long offset ) { type_1 var_1 = this . var_2 . get ( offset ) ; return ! ( ( ( var_1 != null ) && ( ( this . var_3 ) > 0 ) ) && ( ( this . var_3 ) <= ( var_5 ) ) ) ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( id ) ) + string_3 ) + ( var_1 ) ) + char_1 ) + string_4 ) + ( var_2 ) ) + char_1 ) + string_5 ) + ( var_3 ) ) + char_1 ) + string_6 ) + ( var_4 ) ) + char_1 ) + char_2 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception , type_2 , type_3 { final java.lang.string var_3 = var_1 . getname ( ) ; if ( ( ( var_4 ) != null ) && ( var_4 . method_2 ( var_3 ) ) ) { final java.util.list < type_4 > var_5 = var_4 . get ( var_3 ) ; for ( type_4 var_6 : var_5 ) { var_1 . method_3 ( var_6 ) ; } } if ( ( var_2 ) != null ) { var_2 . method_4 ( var_1 ) ; } }
[0]: private void method_1 ( ) { if (! ( var_1 ) ) { return ; } var_1 = false ; if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; } if ( var_3 ) { synchronized ( this ) { var_4. method_3 ( ) ; } synchronized ( var_2 ) { var_2. method_4 ( ) ; } } else { var_4. method_3 ( ) ; method_5 ( var_5 ) ; method_6 ( var_5 ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { java.lang.system.out.println ( string_2 ) ; if ( type_1 . method_2 ( var_2 , getactivity ( ) ) ) { method_3 ( ) ; } else { var_1 . method_4 ( ) ; var_1 . method_5 ( type_2 . method_6 ( var_3 , var_4 ) ) ; } } }
[0]: protected void method_1 ( type_1 var_1 ) { type_2. method_2 ( ). method_3 ( ) ; type_2. method_2 ( ). method_4 ( string_1, new type_3 ( var_1. method_5 ( ) ) ) ; type_2. method_2 ( ). method_4 ( string_2, new type_4 ( ) ) ; type_2. method_2 ( ). method_4 ( string_3, new type_5 ( ) ) ; type_2. method_2 ( ). method_4 ( string_4, new type_6 ( ) ) ; }

************

************
tgt: public void method_1 ( double var_1 , double var_2 , double var_3 ) { final java.lang.string var_4 = string_1 ; if ( var_5 ) { var_6 . method_2 ( var_4 , var_7 , string_2 , var_1 , var_2 , var_3 ) ; var_6 . method_3 ( var_4 , var_7 ) ; } this . var_1 = java.lang.math.abs ( var_1 ) ; this . var_2 = java.lang.math.abs ( var_2 ) ; this . var_3 = java.lang.math.abs ( var_3 ) ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 )!= ( ( var_2. method_2 ( ). size ( ) ) - 1 ) ) && (! ( var_2. method_2 ( ). isempty ( ) ) ) ) ( var_1 ) ++ ; }

************

************
tgt: public static int count ( java.lang.string content , char var_1 ) { int count = 0 ; if ( null == content ) { return 0 ; } int var_2 = content . length ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { if ( var_1 == ( content . method_1 ( i ) ) ) { count ++ ; } } return count ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view var_2, int position, long id ) { java.lang.string var_3 = ( ( type_2 ) ( var_2. method_2 ( var_4 ) ) ). gettext ( ). tostring ( ) ; java.lang.string var_5 = ( ( type_2 ) ( var_2. method_2 ( var_6 ) ) ). gettext ( ). tostring ( ) ; method_3 ( var_7 ) ; var_7. method_4 ( var_2 ) ; method_5 ( var_7 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { final java.lang.string var_1 = string_1 ; c . set ( var_2 , var_1 ) ; java.lang.string var_3 = type_3 . method_2 ( c ) ; type_4 . asserttrue ( ( string_2 + var_3 ) , var_3 . method_3 ( var_1 ) ) ; }
[0]: public boolean method_1 ( ) { if ( ( var_1 )!= null ) { if ( isempty ( ) ) { return false ; } if ( ( ( ( var_1 ) == ( var_2 ) ) && ( ( var_3 ) == null ) ) && ( ( var_4 ) == null ) ) { return false ; } return! ( ( ( var_1 ) == ( var_5 ) ) && ( ( var_4 ) == null ) ) ; } else { return false ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 state , type_3 var_2 ) { java.lang.string path = var_2 . method_2 ( ) ; type_4 var_3 = type_5 . method_3 ( var_1 , ( ( type_6 ) ( state . method_4 ( ) ) ) , var_2 , path , true ) ; state . method_5 ( var_3 ) ; }
[0]: public void method_1 ( java.lang.string url ) { url = method_2 ( url ) ; var_1 = url ; type_1 result = type_2. method_3 ( url ) ; if ( result. method_4 ( ) ) { var_2. method_5 ( var_3 ) ; var_4. method_5 ( var_5 ) ; new type_3 ( ). method_6 ( type_4. method_7 ( result. method_8 ( ), this ) ) ; } else { method_9 ( ) ; } }

************

************
tgt: public type_1 get ( type_2 var_1 ) throws type_3 { type_2 var_2 = var_3 . method_1 ( var_1 ) ; type_1 response = method_2 ( var_4 . method_3 ( var_2 ) ) . type ( var_5 ) . get ( var_6 class ) ; if ( method_4 ( response ) ) { method_6 ( ) ; response = method_2 ( var_4 . method_3 ( var_2 ) ) . type ( var_5 ) . get ( var_6 class ) ; } method_7 ( var_1 , response ) ; return response ; }
[0]: public void method_1 ( ) { var_1. method_2 ( string_1, string_2 ) ; method_3 ( ). method_4 ( var_2. method_5 ( var_3 ) ) ; type_1. method_6 ( int_1 ) ; if ( ( method_3 ( ). method_5 ( ). getid ( ) ) == ( var_3 ) ) var_4. get ( string_3, var_5 class ). method_7 ( ) ; else var_4. get ( string_4, var_5 class ). method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { for ( int i = ( this . var_1 . size ( ) ) - 1 ; i >= 0 ; i -- ) { try { this . var_2 . method_2 ( this . var_1 . get ( i ) ) ; } catch ( java.lang.throwable t ) { } } }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { type_1 var_2 = new type_1 ( var_3. get ( 0 ). method_2 ( ), var_3. get ( 0 ). method_3 ( ) ) ; var_1. method_4 ( type_2. method_5 ( var_2 ) ) ; } else { var_1. method_4 ( 0 ) ; } return ; }

************

************
tgt: public int method_1 ( ) { if ( ( method_2 ( ) ) > 0 ) { return method_3 ( ) ? int_1 : ( ( int ) ( ( ( var_2 ) * int_1 ) / ( method_2 ( ) ) ) ) ; } else { return 0 ; } }
[0]: public static type_1 method_1 ( android.content.context context, java.lang.string filename, type_2 var_1, java.lang.string... var_2 ) { type_3 var_3 = type_4. method_2 ( context, var_1, var_2 ) ; if ( var_3 == null ) return null ; filename = type_2. method_3 ( filename ) ; type_3 file = var_3. method_4 ( filename ) ; return type_4. method_1 ( context, file. method_5 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( int index ) { assert index < ( var_1 ) ; if ( ( var_2 ) == null ) { var_2 = new type_1 [ var_1 ] ; } try { if ( ( var_2 [ index ] ) == null ) { var_2 [ index ] = var_3 . method_2 ( var_4 , var_5 , var_6 , var_7 , length , index ) ; } } catch ( java.io.ioexception var_8 ) { throw new type_2 ( var_8 ) ; } return var_2 [ index ] ; }
[0]: public void method_1 ( ) { type_1. assertequals ( null, var_1. method_2 ( 1 ) ) ; var_1. method_3 ( 1 ) ; var_1. method_4 ( int_1 ) ; var_1. method_3 ( int_2 ) ; type_1. assertequals ( int_1, var_1. method_5 ( ) ) ; type_1. assertequals ( 1, var_1. method_2 ( 1 ). getid ( ) ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , java.lang.string key , type_2 context , type_3 var_2 ) { if ( ( var_1 == null ) || ( key == null ) ) { return string_1 ; } java.lang.string var_3 = this . method_2 ( var_1 , key , var_2 ) ; if ( var_3 != null ) { return method_3 ( var_1 , context , var_3 ) ; } else { return method_3 ( var_1 , context , key ) ; } }
[0]: public void add ( type_1 var_1 ) { type_2 < type_3 > var_2 = list. method_1 ( ) ; while ( var_2. method_2 ( ) ) { type_1 var_3 = ( ( type_1 ) ( var_2. method_3 ( ) ) ) ; if ( var_3. method_4 ( var_1 ) ) { var_3. add ( var_1 ) ; if ( var_3. isempty ( ) ) { var_2. remove ( ) ; } return ; } } var_2. add ( var_1 ) ; } }

************

************
tgt: private void method_1 ( boolean value ) { if ( ( var_1 . method_2 ( ) ) && ( ( var_3 ) != null ) ) { var_2 . method_3 ( var_3 , ( value ? int_1 : 0 ) ) ; var_3 . method_4 ( string_1 , value ) ; method_5 ( value ) ; method_6 ( ) ; } }
[0]: private static int method_1 ( int var_1, java.lang.integer [ ] var_2 ) { int start = 0 ; int end = ( var_2. length ) - 1 ; while ( start <= end ) { int var_3 = ( start + end ) / int_1 ; int var_4 = var_2 [ var_3 ] ; if ( var_4 == var_1 ) { start = var_3 + 1 ; } else if ( var_4 < var_1 ) { start = var_3 + 1 ; } else { end = var_3 - 1 ; } } return - 1 ; } }

************

************
tgt: public static void index ( ) { type_1 var_1 = var_2 . get ( string_1 ) ; if ( ( var_1 == null ) || ( ( type_3 . method_2 ( string_2 , var_1 . value ) . first ( ) ) == null ) ) { type_2 . method_1 ( ) ; } type_3 var_3 = type_3 . method_2 ( string_2 , var_1 . value ) . first ( ) ; java.util.list < type_4 > var_4 = type_4 . method_2 ( string_3 , var_3 ) . method_3 ( ) ; method_4 ( var_4 ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { if ( type_4. method_2 ( response, context, view ) ) { view. method_3 ( method_4 ( response. method_5 ( ). method_6 ( ), response. method_5 ( ). method_7 ( ) ) ) ; } else { view. method_8 ( var_2 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_3 ) ( this . method_3 ( ) ) ) . method_4 ( ) ; new type_4 ( method_5 ( var_4 ) , var_3 ) ; new type_5 ( method_5 ( var_5 ) , var_3 ) ; new type_6 ( method_5 ( var_6 ) , var_3 ) ; }
[0]: public void method_1 ( ) { int var_1 = var_2. method_2 ( ) ; int var_3 = var_2. method_3 ( ) ; for ( int i = 0 ; i < ( var_1 - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 - 1 ) ; j ++ ) { type_1. assertnotnull ( var_2. method_4 ( j, j ) ) ; } } } }

************

************
tgt: public void update ( float var_1 ) { for ( type_1 var_2 : var_3 . method_1 ( var_4 class ) ) { type_2 var_5 = var_2 . method_2 ( var_4 class ) ; type_3 var_6 = var_2 . method_2 ( var_7 class ) ; var_2 . method_3 ( new type_4 ( ( ( var_8 ) ++ ) , 0 , 0 , var_9 , var_10 , var_11 , ( ( long ) ( var_1 ) ) ) ) ; if ( var_11 ) var_11 = false ; } }
[0]: private void method_1 ( android.content.intent intent ) { type_1 var_1 = intent. method_2 ( var_2 ) ; if ( ( ( var_1. method_3 ( ) ) && (! ( var_3 ) ) ) && (! ( method_3 ( ) ) ) ) { type_2. method_4 ( var_4, string_1 ) ; var_3 = true ; var_5. method_5 ( var_6, this ) ; } else { this. method_6 ( ) ; } }

************

************
tgt: private type_1 method_1 ( java.util.set < type_2 > var_1 , java.util.set < type_3 > var_2 , java.lang.integer var_3 , java.lang.integer var_4 , java.lang.string var_5 ) { return type_1 . method_2 ( ) . method_3 ( var_1 ) . method_4 ( var_2 ) . method_5 ( var_3 ) . method_6 ( var_4 ) . method_7 ( var_5 ) . build ( ) ; }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = new type_3 ( string_1 ) ; type_2 var_2 = var_1. method_2 ( string_2 ) ; type_2 var_3 = var_2. method_2 ( string_3 ) ; type_4. asserttrue ( string_4, var_3. method_3 ( ). equals ( string_5 ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return false ; } java.lang.integer intvalue = type_2 . get ( var_3 ) . method_1 ( var_1 ) ; return ( intvalue != null ) && ( intvalue > ( var_2 ) ) ; }
[0]: public static boolean method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 var_3 ) { type_2. method_2 ( var_3, var_1 ) ; try { return ( ( ( ( type_2. method_3 ( ) ) && ( type_2. method_4 ( var_1 ) ) ) && ( type_2. method_5 ( var_2, var_1 ) ) ) && ( ( type_2. counter ) < int_1 ) ) && ( var_4 ) ; } catch ( java.io.ioexception var_5 ) { java.lang.system.out.println ( string_1 ) ; return false ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.util.list < java.io.file > var_1 = type_1 . method_2 ( var_2 , var_3 ) ; java.lang.string var_4 = ( ( ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + ( var_2 . method_3 ( ) ) ) + string_3 ) + ( var_6 ) ) + string_2 ) + ( var_7 . method_3 ( ) ) ) + string_4 ; type_1 . method_4 ( var_4 , var_2 , var_7 , var_1 ) ; }
[0]: public void method_1 ( final type_1 var_1, final type_2 var_2 ) { var_3 = new type_3 ( var_1 ) ; this. method_2 ( var_4 ) ; this. method_3 ( var_4 ) ; var_3. method_4 ( 0, 0, method_5 ( ), method_6 ( ) ) ; for ( type_4 var_5 : var_2. method_7 ( ) ) { var_5. method_8 ( var_3. method_7 ( ) ) ; } method_9 ( ) ; }

************

************
tgt: public type_1 < java.util.list < java.lang.string > > get ( java.lang.string query ) { if ( type_2 . isempty ( query ) ) { return type_1 . method_1 ( new java.util.arraylist < > ( ) ) ; } return type_1 . method_1 ( type_3 . method_2 ( query ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1, type_1 var_2 ) { if (! ( var_3. method_2 ( var_1 ) ) ) throw new type_3 ( string_1, var_1 ) ; type_4 < type_1, type_2 >. var_4 var_5 = var_3. get ( var_1 ) ; if ( var_6. equals ( var_2 ) ) return var_7 ; if ( var_8. equals ( var_2 ) ) return var_9 ; return null ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . method_2 ( string_1 ) ; java.util.list < type_2 > var_1 = new java.util.arraylist < > ( ) ; var_1 . add ( var_2 ) ; var_1 . add ( var_3 ) ; method_3 ( var_4 . method_4 ( ) ) . method_5 ( var_1 ) ; method_6 ( var_4 ) ; var_5 . method_7 ( get ( var_6 ) . method_8 ( var_7 ) ) . method_9 ( type_3 . method_10 ( ) ) ; }
[0]: public type_1 [ ] [ ] method_1 ( int var_1, int var_2, type_1 var_3 ) { this. var_4 [ var_1 ] [ var_2 ] = new type_2 ( var_5, ( var_1 * ( var_6 ) ), ( var_2 * ( var_6 ) ) ) ; var_3. method_2 ( ( ( var_3. method_3 ( ) ) + int_1 ) ) ; this. var_4 [ var_1 ] [ ( var_2 + 1 ) ] = var_3 ; return this. var_4 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = method_2 ( string_1 , var_1 ) ; type_3 var_3 = method_2 ( string_2 , var_1 ) ; return method_3 ( var_4 , new type_3 [ ] { var_2 , var_3 } , method_4 ( string_3 , method_4 ( var_5 , var_2 , var_3 ) , method_4 ( var_5 , var_3 , var_2 ) ) ) ; }
[0]: private java.lang.string [ ] method_1 ( java.lang.string message ) { type_1 var_1 = new type_1 ( message ) ; java.lang.string [ ] params = new java.lang.string [ int_1 ] ; params [ 0 ] = var_1. getstring ( string_1 ) ; params [ 1 ] = var_1. getstring ( string_2 ) ; params [ int_2 ] = var_1. getstring ( string_3 ) ; params [ int_3 ] = var_1. getstring ( string_4 ) ; return params ; }

************

************
tgt: private static int method_1 ( java.lang.string [ ] args ) { int sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ] . equals ( string_1 ) ) for ( int i = 1 ; i < ( args.length ) ; i ++ ) sum -= java.lang.integer . method_2 ( args [ i ] ) ; else for ( java.lang.string arg : args ) sum += java.lang.integer . method_2 ( arg ) ; return sum ; }
[0]: public boolean method_1 ( type_1 var_1, int var_2, type_2 event ) { if ( ( ( var_3 ) == null ) || (! ( var_2 == ( var_4 ) ) ) ) { return false ; } java.lang.string query = var_5. gettext ( ). tostring ( ). trim ( ) ; if ( query. isempty ( ) ) { type_3. show ( this, var_6 ) ; return true ; } method_2 ( query ) ; method_3 ( var_5 ) ; return false ; }

************

************
tgt: protected void method_1 ( type_1 filepath , long var_1 ) throws java.io.ioexception { synchronized ( var_3 ) { type_2 var_2 = var_3 . remove ( filepath ) ; if ( var_2 != null ) { var_2 . method_2 ( ) ; } } if ( filepath . method_3 ( ) ) { filepath . method_4 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.string [ ] var_2 ) { if ( ( var_2. length ) > 1 ) { if ( var_2 [ 0 ]. method_2 ( string_1 ) ) { type_2. method_1 ( var_1, method_3 ( 1, var_2 ) ) ; } } else { type_3. method_4 ( var_1, ( ( ( var_3 ) + ( var_4 ) ) + string_2 ) ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( var_2 , ( string_1 + ( var_3 ) ) ) ; var_6 . method_6 ( true ) ; var_4 . method_3 ( null ) ; getactivity ( ) . method_4 ( ) . method_5 ( var_5 ) ; type_1 . method_2 ( var_2 , string_2 ) ; var_3 = false ; }
[0]: public boolean method_1 ( ) { if ( ( ( ( var_1 ) == null ) && ( ( var_2 ) == null ) ) && ( ( ( var_3 ) == null ) & ( ( var_4 ) == null ) ) ) { return false ; } else { return true ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 , type_1 view , int var_3 , boolean var_4 , int var_5 ) { try { this . var_6 . method_2 ( ( ( var_7 ) + "\n" ) ) ; java.lang.string line = new java.lang.stringbuilder ( ) . method_3 ( var_2 , view , new type_1 ( ) , var_3 , var_4 , var_1 , string_1 , var_5 ) ; this . var_6 . method_2 ( ( line + "\n" ) ) ; } catch ( java.io.ioexception var_8 ) { var_8 . method_4 ( ) ; } }
[0]: protected type_1 method_1 ( java.lang.long... var_1 ) { long var_2 = var_1 [ 0 ] ; type_1 show = method_2 ( var_2 ) ; if ( show!= null ) { type_2 var_3 = method_3 ( var_2 ) ; show. method_4 ( var_3 ) ; java.util.list < type_3 > var_4 = method_5 ( var_2 ) ; if ( var_4!= null ) { show. method_7 ( var_4 ) ; } } return show ; } return show ; }

************

************
tgt: public static type_1 [ ] method_1 ( double var_1 ) { type_2 [ ] buf = new type_2 [ int_1 ] ; int num = var_2 . method_2 ( buf , buf . length , var_1 ) ; type_1 [ ] var_3 = new type_1 [ num ] ; for ( int k = 0 ; k < num ; k ++ ) var_3 [ k ] = new type_1 ( buf [ k ] ) ; return var_3 ; }
[0]: public type_1 method_1 ( ) { if (! ( ( this. var_1 ) instanceof type_2 ) ) { return this. var_1. method_2 ( this. var_2 ) ; } else if ( ( ( ( type_2 ) ( this. var_1 ) ). method_3 ( ) ) > ( ( this. var_2 ) - int_1 ) ) { return this. var_1. method_2 ( this. var_2 ) ; } else { return var_3. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { if ( ( var_2 ) != null ) { type_1 var_3 = new type_1 ( ) ; var_4 = var_5 ; var_2 . method_2 ( var_3 ) ; } } else { if ( ( var_2 ) != null ) { type_1 var_3 = new type_1 ( ) ; var_4 = var_6 ; var_2 . method_2 ( var_3 ) ; } } ( var_7 . count ) ++ ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent var_3 ) { super. method_1 ( var_1, var_2, var_3 ) ; switch ( var_1 ) { case var_4 : if ( var_2 == ( var_5 ) ) { final type_1 var_6 = var_3. getdata ( ) ; var_7 = type_2. method_2 ( this, var_6 ) ; type_2. method_3 ( this, var_8, var_7, int_1 ) ; var_9. method_4 ( var_7 ) ; } } }

************

************
tgt: public boolean method_1 ( type_1 event ) { if ( method_2 ( var_1 ) ) { for ( type_2 var_2 : var_3 ) { if ( var_2 . method_2 ( method_3 ( var_1 ) ) ) { method_4 ( var_2 ) ; return var_2 . method_1 ( event ) ; } } } else { java.lang.system.out.println ( string_1 ) ; } return false ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( string_1 ) ; var_1. init ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2. method_2 ( var_1, string_2 ) ; java.lang.string var_4 = string_3 ; type_4. assertequals ( var_4, var_3. tostring ( ), false ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.string > var_1 = new type_1 ( ( 1 < < ( var_2 ) ) ) ; byte [ ] var_3 = var_1 . method_2 ( new type_2 ( ) ) ; type_1 < java.lang.string > var_4 = type_1 . method_3 ( type_3 . method_4 ( var_3 ) , new type_2 ( ) ) ; type_4 . asserttrue ( var_4 . isempty ( ) ) ; org.testng.assert.assertequals ( var_4 . method_5 ( ) , 0 ) ; org.testng.assert.assertequals ( var_4 . method_6 ( ) , 0 ) ; }
[0]: private void method_1 ( type_1 target ) { type_2 var_1 = new type_2 ( ) ; var_1. setenabled ( true ) ; var_1. method_2 ( method_3 ( getstring ( string_1 ) ) ) ; var_2. method_4 ( ). method_5 ( ). method_6 ( ). method_7 ( ). add ( var_1 ) ; method_8 ( target, var_1 ) ; var_3. method_9 ( target ) ; }

************

************
tgt: public type_1 method_1 ( int index ) { if ( ( ( var_2 ) != null ) && ( index < ( var_2 . size ( ) ) ) ) { return var_2 . get ( index ) ; } if ( ( var_3 ) != null ) { int var_4 = ( ( var_2 ) == null ) ? index : index - ( var_2 . size ( ) ) ; return var_3 . get ( var_4 ) ; } throw new type_2 ( ) ; }
[0]: private java.util.list < type_1 > method_1 ( int var_1 ) { if ( var_2 ) { return new java.util.arraylist < type_1 > ( 0 ) ; } java.util.list < type_1 > var_3 = var_4. method_1 ( var_1 ) ; if ( ( var_1 > 0 ) && ( ( var_3. size ( ) ) == 0 ) ) { var_4. method_2 ( ) ; var_2 = true ; } return var_3 ; }

************

************
tgt: private static < type_1 extends type_2 > void method_1 ( type_1 var_1 , java.util.set < type_1 > result ) { if ( result . contains ( var_1 ) ) return ; for ( type_2 var_2 : var_1 . method_2 ( ) . method_3 ( ) ) { type_1 var_3 = ( ( type_1 ) ( var_2 . method_2 ( ) ) ) ; type_3 . method_1 ( var_3 , result ) ; result . add ( var_3 ) ; } }
[0]: public void method_1 ( ) { try { java.lang.string line = var_1. method_2 ( ) ; java.lang.system.out.println ( ( string_1 + line ) ) ; var_2 = new type_1 ( line ) ; var_3. method_3 ( ). method_4 ( var_2 ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 1 ) ; } var_3. method_5 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; if ( ( type_2 . method_3 ( ) . method_4 ( ) . method_5 ( ) ) == null ) { android.content.intent i = new android.content.intent ( this , var_2 class ) ; method_6 ( i ) ; } type_1 . method_2 ( var_1 , ( string_2 + ( type_2 . method_3 ( ) . method_4 ( ) . method_5 ( ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1, final type_2 var_2 ) { type_3 var_3 = type_4. method_2 ( ). method_3 ( var_1. getint ( ""type"" ) ) ; if ( null == var_3 ) { var_2. method_4 ( string_1 ) ; return ; } var_2. method_5 ( type_4. method_2 ( ). method_6 ( var_1. getint ( ) ) ) ; }

************

************
tgt: public void method_1 ( final type_1 event ) { if ( ( var_1 ) != 0 ) { if ( type_2 . method_2 ( ) ) type_3 . setenabled ( true ) ; else type_3 . setenabled ( false ) ; method_3 ( true ) ; } else { type_5 . method_4 ( var_2 , string_1 , string_2 , var_3 ) ; type_2 . method_5 ( false ) ; } }
[0]: public void method_1 ( android.content.intent intent, type_1 var_1 ) { type_2 var_2 = method_2 ( intent ) ; if ( var_2 == null ) { var_2 = new type_2 ( ) ; var_2. intent = intent ; synchronized ( var_3 ) { type_3 var_4 = new type_3 ( intent ) ; var_3. put ( var_4, var_2 ) ; } } var_2. method_3 ( var_1 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.object value ) { if ( value == null ) return null ; try { java.lang.string result = type_1 . method_2 ( value . tostring ( ) , string_1 ) ; return result ; } catch ( type_2 var_1 ) { return null ; } }
[0]: public double method_1 ( ) { double var_1 = var_2. get ( 0 ). y ; for ( int i = 1 ; i < ( var_2. size ( ) ) ; i ++ ) { double var_3 = var_2. get ( i ). y ; if ( var_3 < var_1 ) { if ( ( var_2. get ( i ). var_4 ) <= 0 ) { return ( - ( var_5 ) ) / int_1 ; } var_1 = var_3 ; } } return var_1 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3 . method_2 ( var_1 . method_3 ( ) ) ; if ( ( ( var_2 == null ) && ( ( var_1 . method_4 ( ) ) != null ) ) && ( ! ( var_1 . method_4 ( ) . equals ( string_1 ) ) ) ) { var_2 = var_3 . method_5 ( var_1 . method_4 ( ) ) . get ( 0 ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( string_1 ) ; java.io.file file = var_1. method_3 ( this. method_4 ( ). method_5 ( ) ) ; var_2. method_6 ( file ) ; var_2. settext ( file. method_7 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( size ) == 0 ) { throw new type_2 ( ) ; } type_1 var_1 = ( ( type_1 ) ( var_2 [ ( ( -- ( var_3 ) ) % ( var_2 . length ) ) ] ) ) ; ( size ) -- ; return var_1 ; }
[0]: public java.lang.string method_1 ( final type_1 var_1 ) throws type_2 { return ( ( ( ( ( ( ( ( ( string_1 + ( data. method_2 ( ) ) ) + string_2 ) + ( data. method_3 ( ) ) ) + string_3 ) + ( data. method_4 ( ) ) ) + string_4 ) + ( data. method_5 ( ) ) ) + string_5 ) + string_6 ; }

************

************
tgt: public void method_1 ( ) { try { if ( ( this . var_1 ) != null ) { this . var_1 . method_2 ( ) ; } if ( ( this . var_2 ) != null ) { this . var_2 . method_2 ( ) ; } } catch ( type_1 var_3 ) { java.lang.system.out.println ( var_3 . method_3 ( ) ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_1. method_2 ( title ) ; var_1. method_2 ( var_3 ) ; var_1. method_2 ( var_4 ) ; var_1. method_2 ( var_5 ) ; var_1. method_2 ( var_6 ) ; var_1. method_3 ( var_7 ) ; var_1. method_4 ( id ) ; }

************

************
tgt: protected java.lang.object method_1 ( java.lang.string classname ) throws java.lang.classnotfoundexception , type_1 , type_2 { java.lang.class < ? > var_1 = java.lang.class . method_2 ( classname ) ; try { type_3 < ? > var_2 = var_1 . method_3 ( var_3 class ) ; return var_2 . method_4 ( var_4 ) ; } catch ( type_5 var_6 ) { } catch ( type_4 var_5 ) { } return var_1 . method_4 ( ) ; }
[0]: public void method_1 ( type_1 event ) { if ( event. method_2 ( ) ) { method_3 ( event. method_4 ( ) ) ; return ; } type_2. method_5 ( var_1, ( string_1 + ( event. method_6 ( ) ) ) ) ; var_2. method_7 ( ) ; }

************

************
tgt: public void method_1 ( final int var_1 , final type_1 var_2 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( ( string_2 + ( type_2 . tostring ( ) ) ) + string_3 ) ) ; method_2 ( var_1 , var_2 ) ; java.lang.system.out.println ( string_4 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) throws type_4, java.io.ioexception { var_1. method_2 ( string_1 ) ; var_2. method_2 ( string_1 ) ; type_5 var_4 = ( ( type_5 ) ( var_2 ) ) ; var_5. method_3 ( ( ( type_6 ) ( var_1 ) ) ) ; var_4. method_4 ( string_2, string_3 ) ; var_3. method_1 ( var_1, var_2 ) ; }

************

************
tgt: public final void method_1 ( ) { final java.util.iterator < type_1 < type_2 , type_3 > > var_1 = new type_4 ( key , var_2 , var_3 , var_4 , var_5 ) ; while ( var_1 . method_2 ( ) ) { var_1 . method_4 ( ) ; var_1 . remove ( ) ; } }
[0]: public type_1 method_1 ( int var_1 ) { type_2 var_2 = new type_3 ( ) ; type_2 var_3 = new type_4 ( ) ; if ( var_1 == 1 ) { var_2. method_2 ( ) ; var_2. method_3 ( ) ; return type_5. method_4 ( ). method_5 ( var_2 ) ; } else { var_3. method_2 ( ) ; var_3. method_3 ( ) ; return type_5. method_4 ( ). method_5 ( var_3 ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) throws java.io.ioexception , type_1 { if ( var_1 . isempty ( ) ) { var_1 = method_2 ( ) ; } var_1 += string_1 ; method_3 ( new type_2 ( var_1 , var_2 ) ) ; type_3 . method_4 ( new type_4 ( var_1 ) , var_3 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_1 ( var_1. getname ( ) ) ; for ( type_2 var_3 : var_1. method_2 ( ) ) { method_3 ( var_3 ) ; } var_4. remove ( var_1 ) ; var_5. remove ( var_1 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.long var_1 ) { type_2 var_2 = var_3 . method_2 ( var_1 ) ; if ( ( var_2 . method_3 ( ) ) <= ( var_4 ) ) { var_2 . method_4 ( var_5 ) ; var_3 . method_5 ( var_2 ) ; } var_6 . method_6 ( var_2 ) ; return type_1 . status ( var_7 ) . build ( ) ; }
[0]: public static void method_1 ( type_1 <? extends type_1 < java.lang.double > > var_1, int var_2, type_2 out ) { boolean first = true ; out. method_2 ( string_1 ) ; for ( type_1 < java.lang.double > var_3 : var_1 ) { if ( first ) first = false ; else out. method_2 ( string_2 ) ; type_3. method_3 ( var_3, var_2, var_4. out ) ; } out. method_2 ( ) ; out. method_2 ( string_3 ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { type_6 . method_6 ( var_3 , string_1 ) ; var_4 = var_1 . method_4 ( ) ; android.content.intent i = new android.content.intent ( this , var_5 class ) ; i . method_7 ( "name" , var_4 ) ; method_8 ( i ) ; }
[0]: public java.util.set < java.lang.integer > method_1 ( ) { method_2 ( ) ; java.util.set < java.lang.integer > var_1 = new java.util.hashset < java.lang.integer > ( ) ; var_1 = method_3 ( int_1 ) ; java.util.set < java.lang.integer > var_2 = method_4 ( float_1, int_1, var_1 ) ; var_1. method_5 ( var_2 ) ; var_2 = method_6 ( int_2, var_1 ) ; var_1. method_5 ( var_2 ) ; return var_1 ; }

************

************
tgt: public static void method_1 ( java.lang.string title , java.lang.string text , java.lang.string var_1 ) { type_1 . method_2 ( var_2 , title , text , var_1 , var_3 . method_3 ( ) , var_3 . method_4 ( ) , var_3 . method_5 ( ) ) ; java.lang.system.out.println ( var_3 . method_5 ( ) ) ; type_2 . method_6 ( ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { int var_2 = ( var_3 ) | ( type_2. diff ( var_4, var_5 ) ) ; int var_6 = ( var_5 ) | ( type_2. diff ( var_7, var_3 ) ) ; type_3 var_8 = type_3. method_2 ( var_9 ) ; var_8. method_3 ( var_10, var_11 ) ; type_3 var_12 = type_3. method_2 ( var_11 ) ; var_12. method_3 ( var_13, var_9 ) ; return new type_1 ( var_2, var_6, var_9, var_11 ) ; }

************

************
tgt: public void method_1 ( type_1 response ) { type_2 var_1 = new type_2 ( string_1 , type_3 . method_2 ( ) ) ; response . method_3 ( var_1 ) ; type_4 var_2 = new type_4 ( ) ; type_3 . method_4 ( ) . method_5 ( var_2 , var_1 . getvalue ( ) ) ; }
[0]: public int method_1 ( type_1 var_1, int index, int var_2, type_1 [ ] out ) { if ( index == var_2 ) { out [ 0 ] = var_1 ; return - 1 ; } var_2 ++ ; if (! ( var_1. method_2 ( ) ) ) { for ( type_1 c : var_1. method_3 ( ) ) { var_2 = method_1 ( c, index, var_2, out ) ; if ( var_2 == ( - 1 ) ) { return - 1 ; } } } return var_2 ; } }

************

************
tgt: private void method_1 ( ) { var_1 . settext ( string_1 ) ; var_2 . settext ( string_1 ) ; var_3 . settext ( string_1 ) ; var_4 . settext ( string_1 ) ; var_5 . method_2 ( var_6 ) ; var_7 . method_2 ( var_8 ) ; if ( var_9 ) { var_10 . method_2 ( var_12 ) ; var_11 . method_2 ( var_12 ) ; } else { var_10 . method_2 ( var_12 ) ; var_11 . method_2 ( var_12 ) ; } }
[0]: public void method_1 ( ) { c. set ( 1, 1 ) ; c. set ( int_1, int_2 ) ; assertequals ( c. get ( 1 ), 1 ) ; c. set ( int_3, int_4 ) ; assertequals ( c. get ( 1 ), 1 ) ; assertequals ( c. get ( int_1 ), null ) ; assertequals ( c. get ( int_3 ), int_4 ) ; }

************

************
tgt: private void method_1 ( java.lang.string key ) { for ( java.lang.string k : new java.util.linkedlist ( var_1 . method_2 ( ) ) ) { if ( key . startswith ( k ) ) { method_3 ( key , var_2 ) ; } if ( key . method_4 ( k ) ) { method_3 ( key , var_3 ) ; } } }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3. method_2 ( int_1, int_2, 0, 0, string_1 ) ; var_1. method_3 ( ) ; method_4 ( var_1, int_3, int_2, 0, 0 ) ; type_4. method_5 ( var_2 ) ; var_1 = type_3. method_2 ( int_1, int_1, 0, 0, string_1 ) ; var_1. method_3 ( ) ; method_4 ( var_1, 0, int_1, 0, 0 ) ; type_4. asserttrue ( var_2 ) ; }

************

************
tgt: public void method_1 ( final type_1 event , final type_2 p ) { if ( var_1 . get ( ) ) { event . method_2 ( p ) ; var_2 . method_3 ( event ) ; if ( ( ( var_3 ) == null ) && ( var_1 . get ( ) ) ) { for ( type_3 var_4 : var_5 ) { final type_1 var_6 = event . method_4 ( ) ; var_4 . method_1 ( var_6 , p ) ; } } } }
[0]: public boolean equals ( java.lang.object var_1 ) { if (! ( var_1 instanceof type_1 ) ) return false ; type_1 n = ( ( type_1 ) ( var_1 ) ) ; return ( ( var_2. equals ( this. var_3 ) ) && ( var_4. equals ( this. label ) ) ) && ( this. var_5. equals ( var_6 ) ) ; }

************

************
tgt: static type_1 method_1 ( final java.lang.class type ) { try { return type_1 . method_2 ( var_1 class . method_3 ( type . method_4 ( string_1 ) . get ( null ) ) ) ; } catch ( type_2 var_2 ) { throw new type_3 ( ( string_2 + type ) , var_2 ) ; } catch ( type_4 var_2 ) { throw new type_3 ( ( ( string_3 + type ) + string_4 ) , var_2 ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { while ( ( var_1!= null ) && ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) ) { var_1 = var_1. method_2 ( ) ; } if ( var_1!= null ) { return type_4. method_3 ( var_1 ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { int x = method_3 ( ) ; int y = method_4 ( ) ; method_5 ( ) ; if ( ( ( var_1 ) == 0 ) && ( method_6 ( x , ( y + int_1 ) , var_2 . method_7 ( ) ) ) ) { var_1 = - ( var_3 ) ; } }
[0]: private static void method_1 ( ) { type_1. method_2 ( ) ; type_2. method_3 ( type_1 ) ; if ( ( var_1 )!= null ) { type_2. method_4 ( var_1 ) ; } if ( ( type_2. path )!= null ) { type_2. method_4 ( type_2. path, true ) ; } else { type_2. method_4 ( new java.io.file ( var_2, string_1 ). method_5 ( ), false ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; if ( var_1 . method_3 ( var_3 ) ) { var_1 . method_4 ( var_3 ) ; } else { super . method_1 ( ) ; method_5 ( ) ; } }
[0]: public static void method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; var_3. str = var_1. method_2 ( ) ; var_4 = new java.lang.string [ int_1 ] ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_4 [ i ] = var_5. substring ( i, ( i + 1 ) ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; int var_1 = 0 ; int var_2 = 0 ; int var_3 = 0 ; int var_4 = - int_1 ; boolean var_5 = true ; boolean result = type_1 . method_2 ( var_1 , var_2 , var_3 , var_4 ) ; type_2 . assertequals ( var_5 , result ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { synchronized ( this. state ) { type_1. method_2 ( ( ( this. state ) == ( var_1 ) ), ( string_1 + ( this. state ) ) ) ; this. state = var_2 ; } var_3. method_1 ( var_4, var_5 ) ; }

************

************
tgt: protected type_1 method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; if ( type_2 . method_2 ( ) ) { type_3 var_2 = new type_3 ( ) ; var_2 . method_3 ( new type_4 ( ) ) ; var_1 . method_4 ( string_2 , new type_5 ( ) ) ; var_1 . method_4 ( string_3 , true ) ; var_1 . method_4 ( string_5 , var_2 ) ; } return var_1 ; }
[0]: private void init ( ) { type_1 var_1 = new type_1 ( ) ; method_1 ( ). method_2 ( ). method_3 ( var_1 ) ; type_2 params = new type_2 ( true, false, var_1. x, var_1. y, int_1, 1, var_2, true, 1, var_3, true ) ; type_3. method_4 ( this, true, true, var_4, type_4. method_5 ( ) ) ; var_5 = new type_5 ( this, var_6 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = method_2 ( var_2 class ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < > ( ) ; method_3 ( var_4 , method_4 ( ) ) . method_5 ( ) ; assertequals ( var_3 , var_5 . method_6 ( var_1 ) ) ; }
[0]: private static int method_1 ( int min, int var_1 ) { java.util.random var_2 = new java.util.random ( ) ; int var_3 = ( var_1 - min ) + 1 ; if ( var_3 <= 0 ) { var_3 = 1 ; } int var_4 = ( var_2. method_2 ( var_3 ) ) + min ; return var_4 ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { var_3 = var_1 ; var_4 = var_2 ; var_5 = new type_1 [ var_3 ] [ var_4 ] ; var_6 = new boolean [ var_3 ] [ var_4 ] ; for ( int i = 0 ; i < ( var_4 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { var_6 [ j ] [ i ] = false ; } } }
[0]: public void start ( type_1 var_1, boolean var_2 ) { type_2 listener = type_3. method_1 ( ). get ( var_3 class ) ; if ( listener!= null ) { listener. method_2 ( this ) ; } super. start ( var_1, var_2 ) ; method_3 ( listener. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertthat ( var_1 . method_2 ( ) ) . method_3 ( ) ; type_1 . assertthat ( var_1 . method_6 ( true ) ) . method_5 ( ) ; var_1 . method_4 ( true ) ; type_1 . assertthat ( var_1 . method_2 ( ) ) . method_5 ( ) ; type_1 . assertthat ( var_1 . method_6 ( ) ) . method_5 ( ) ; var_1 . method_7 ( ) ; type_1 . assertthat ( var_1 . method_2 ( ) ) . method_3 ( ) ; }
[0]: public java.lang.string tostring ( final boolean var_1 ) { if ( ( number ) == null ) { if ( var_1 ) { return ( ( var_2 ) + ( var_3 ) ) + ( file ) ; } else { return ( ( var_4 ) + ( var_3 ) ) + ( file ) ; } } else { return ( ( method_1 ( number, var_1 ) ) + ( var_3 ) ) + ( file ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { java.lang.string var_2 = string_1 ; try { type_4 var_3 = var_4 . method_2 ( var_2 , true ) ; java.util.list < java.lang.string > list = var_3 . method_3 ( ) ; for ( java.lang.string var_5 : list ) { response . method_4 ( ) . method_5 ( ( string_2 + var_5 ) ) ; } } catch ( java.lang.exception var_6 ) { response . method_4 ( ) . method_6 ( var_6 . method_7 ( ) ) ; } }
[0]: private void method_1 ( ) { if ( ( type_1. method_2 ( getcontext ( ), var_1 ) ) == ( var_2 ) ) { var_3 = true ; } else { type_2. method_3 ( getactivity ( ), new java.lang.string [ ] { var_1 }, var_4 ) ; } if ( var_3 ) { var_5 = type_3. method_4 ( var_6 ) ; type_3. method_5 ( var_6, var_7, this ) ; } }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = new type_1 ( ) ; final type_2 var_2 = var_1 . method_2 ( var_3 . method_3 ( string_1 ) , string_2 , string_3 ) ; type_3 . assertequals ( var_4 , var_5 ) ; type_3 . asserttrue ( var_2 . method_4 ( ) , var_2 . method_4 ( ) . contains ( string_4 ) ) ; }
[0]: private void method_1 ( long var_1, int var_2, int state, int var_3 ) { if ( var_2 == ( var_4 ) ) { var_5 = state == 1 ; var_6 = var_7. method_2 ( var_8. method_3 ( ), float_1 ) ; } }

************

************
tgt: java.util.list < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; if ( ( var_2 ) != null ) var_1 . add ( var_2 ) ; if ( ( var_3 ) != null ) var_1 . add ( var_3 ) ; if ( ( var_4 ) != null ) var_1 . add ( var_4 ) ; if ( ( var_5 ) != null ) var_1 . add ( var_5 ) ; return var_1 ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { if ( var_2 ) { var_3. method_2 ( ). method_3 ( ) ; } try { return var_4. method_4 ( var_1 ) ; } finally { if ( var_2 ) { var_3. method_2 ( ). method_5 ( ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string name , java.lang.object ... params ) { java.util.map < java.lang.string , java.lang.string > label = var_2 . get ( name ) ; if ( label == null ) { if ( var_3 . method_2 ( method_3 ( var_1 , name ) ) ) { return var_3 . get ( method_3 ( var_1 , name ) ) ; } return null ; } return label . get ( this . method_4 ( ) . method_5 ( ) . tostring ( ) ) ; }
[0]: public type_1 method_1 ( int position ) { if ( ( var_1 )!= null ) { if ( ( position > 0 ) && ( position < ( var_1. size ( ) ) ) ) { return var_1. get ( position ) ; } type_2. method_2 ( var_2 class, ( ( string_1 + position ) + string_2 ) ) ; } type_2. method_2 ( var_2 class, string_3 ) ; return null ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( var_1 . method_3 ( ) ) ; var_1 . method_4 ( type_2 . method_5 ( ) ) ; type_3 var_2 = method_6 ( var_1 ) ; var_2 . method_7 ( new type_4 ( var_3 , var_4 , true , false ) ) ; type_3 var_5 = method_8 ( var_1 ) ; var_5 . method_7 ( new type_4 ( var_3 , var_3 , true , true ) ) ; var_6 = new type_5 ( ) ; var_6 . start ( ) ; }
[0]: public static void init ( android.content.context context ) { type_1 var_1 = type_1. method_1 ( ) ; var_2 = var_3 ; var_4 = context ; var_5 = type_2. get ( context ) ; var_6 = type_3. method_1 ( ) ; var_7 = new type_4 ( context. method_2 ( ) ) ; type_1. method_3 ( ) ; }

************

************
tgt: private void method_1 ( ) { for ( type_1 var_1 : var_2 ) for ( type_1 var_3 : var_2 ) for ( type_1 var_4 : var_2 ) if ( ( var_5 . get ( new type_2 ( var_1 , var_4 ) ) ) && ( var_5 . get ( new type_2 ( var_4 , var_3 ) ) ) ) var_5 . put ( new type_2 ( var_1 , var_3 ) , true ) ; }
[0]: public void method_1 ( type_1 result ) { ( ( type_2 ) ( getactivity ( ) ) ). method_2 ( ) ; if ( ( result!= null ) && ( result. method_3 ( ) ) ) { type_3. method_4 ( var_1, string_1 ) ; } else { type_4. method_5 ( getactivity ( ), result. method_6 ( ), var_2 ). show ( ) ; } method_7 ( ) ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( id ) ) + string_3 ) + ( var_1 ) ) + char_1 ) + string_4 ) + ( var_2 ) ) + char_1 ) + string_6 ) + ( var_4 ) ) + char_1 ) + char_2 ; }
[0]: public static type_1 method_1 ( int var_1 ) { type_2 var_2 = new type_2 ( var_1 ) ; int [ ] var_3 = var_2. method_2 ( ) ; type_1 var_4 = new type_1 ( var_3 [ 0 ], var_3 [ int_1 ], var_3 [ 1 ], var_3 [ int_2 ], var_3 [ int_3 ], var_3 [ int_4 ], var_3 [ int_5 ], var_3 [ int_6 ], var_3 [ int_7 ], var_3 [ int_8 ] ) ; var_4. method_3 ( var_1 ) ; return var_4 ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( ) ; } if ( var_3 ) { synchronized ( this ) { var_4 . method_3 ( ) ; } synchronized ( var_2 ) { var_2 . method_4 ( ) ; } } else { var_4 . method_3 ( ) ; method_5 ( var_5 ) ; method_6 ( var_5 ) ; } var_1 = false ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = var_3. method_2 ( var_4 class ). field ( var_5 ). method_3 ( var_1 ). method_4 ( ) ; if ( var_2. isempty ( ) ) { return null ; } else { for ( type_1 var_6 : var_2 ) { if (! ( var_6. method_5 ( ) ) ) { return var_6 ; } } return null ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { type_2 . method_2 ( ) . method_3 ( ) ; type_2 . method_2 ( ) . method_4 ( string_2 , new type_4 ( ) ) ; type_2 . method_2 ( ) . method_4 ( string_3 , new type_5 ( ) ) ; type_2 . method_2 ( ) . method_4 ( string_4 , new type_6 ( ) ) ; }
[0]: private java.lang.string method_1 ( int var_1, int var_2 ) throws java.lang.exception { byte [ ] response = new byte [ 0 ] ; try { response = var_3. method_1 ( var_1, var_2 ) ; } catch ( type_1 var_4 ) { throw new java.lang.exception ( var_4. method_2 ( ) ) ; } return method_3 ( response ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) >= ( var_2 . method_2 ( ) . size ( ) ) ) var_1 = ( var_2 . method_2 ( ) . size ( ) ) - 1 ; if ( ( ( var_1 ) != ( ( var_2 . method_2 ( ) . size ( ) ) - 1 ) ) && ( ! ( var_2 . method_2 ( ) . isempty ( ) ) ) ) ( var_1 ) ++ ; }
[0]: private void method_1 ( ) { type_1 var_1 = method_2 ( ) ; type_2 var_2 = var_1. method_3 ( var_3 ) ; if ( var_2 == null ) { var_2 = new type_3 ( ) ; var_1. method_4 ( ). add ( var_3, var_2 ). commit ( ) ; var_4 = new type_4 ( int_1, int_2 ) { public void method_5 ( long var_5 ) { } public void method_6 ( ) { method_7 ( ) ; method_8 ( ) ; } } ; var_4. start ( ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view var_2 , int position , long id ) { var_3 = ( ( type_2 ) ( var_2 . method_2 ( var_4 ) ) ) . gettext ( ) . tostring ( ) ; var_5 = ( ( type_2 ) ( var_2 . method_2 ( var_6 ) ) ) . gettext ( ) . tostring ( ) ; method_3 ( var_7 ) ; var_7 . method_4 ( var_2 ) ; method_5 ( var_7 ) ; }
[0]: public void method_1 ( ) { if ( var_1. getboolean ( var_2, true ) ) { android.content.intent intent = new android.content.intent ( this, var_3 class ) ; method_2 ( intent ) ; } else { android.content.intent intent = new android.content.intent ( this, var_4 class ) ; method_2 ( intent ) ; } }

************

************
tgt: public boolean method_1 ( ) { if ( isempty ( ) ) { return false ; } if ( ( var_1 ) != null ) { if ( ( ( ( var_1 ) == ( var_2 ) ) && ( ( var_3 ) == null ) ) && ( ( var_4 ) == null ) ) { return false ; } return ! ( ( ( var_1 ) == ( var_5 ) ) && ( ( var_4 ) == null ) ) ; } else { return false ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ( ( var_1. method_3 ( ) ) + 1 ) ) ; var_1. method_4 ( ) ; var_1. method_5 ( ( - ( var_2. value ( ) ) ) ) ; if ( ( var_1. value ( ) ) < 0 ) { var_1. set ( 0 ) ; } method_6 ( 1 ) ; field. method_7 ( ) ; field. method_8 ( ) ; field. method_9 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string url ) { type_1 result = type_2 . method_3 ( url ) ; var_1 = result . method_8 ( ) ; if ( result . method_4 ( ) ) { var_2 . method_5 ( var_3 ) ; var_4 . method_5 ( var_5 ) ; new type_3 ( ) . method_6 ( type_4 . method_7 ( result . method_8 ( ) , this ) ) ; } else { method_9 ( ) ; } }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string id ) { try { var_2 = method_2 ( var_1 ) ; type_1 event = var_3. method_3 ( id ) ; var_3. delete ( event ) ; var_2. method_4 ( ). delete ( string_1, event. method_5 ( ) ). method_6 ( true ). execute ( ) ; return true ; } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( string_2 ) ; } return false ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( string_1 , string_2 ) ; if ( ( method_3 ( ) . method_5 ( ) . getid ( ) ) == ( var_3 ) ) var_4 . get ( string_3 , var_5 class ) . method_7 ( ) ; else var_4 . get ( string_4 , var_5 class ) . method_7 ( ) ; method_3 ( ) . method_4 ( var_2 . method_5 ( var_3 ) ) ; type_1 . method_6 ( int_1 ) ; }
[0]: private boolean contains ( java.io.file file ) { boolean result ; try { java.lang.string var_1 = file. tostring ( ) ; result = ( var_1. startswith ( var_2. tostring ( ) ) ) || ( var_1. startswith ( var_2. method_1 ( ). tostring ( ) ) ) ; } catch ( java.io.ioexception var_3 ) { result = false ; } return result ; }

************

************
tgt: private void method_1 ( ) { if ( ( ( var_1 ) != null ) && ( ( var_3 . size ( ) ) > 0 ) ) { type_1 var_2 = new type_1 ( var_3 . get ( 0 ) . method_2 ( ) , var_3 . get ( 0 ) . method_3 ( ) ) ; var_1 . method_4 ( type_2 . method_5 ( var_2 ) ) ; } return ; }
[0]: private void method_1 ( ) { type_1 var_1 ; try { var_1 = new type_1 ( int_1 ) ; while ( true ) { type_2 var_2 = var_1. method_2 ( ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_3. start ( ) ; java.lang.system.out.println ( ( ( ( string_1 + ( var_2. method_3 ( ) ) ) + string_2 ) + ( var_2. method_4 ( ) ) ) ) ; } } catch ( java.io.ioexception var_4 ) { var_4. method_5 ( ) ; } }

************

************
tgt: public static type_1 method_1 ( android.content.context context , java.lang.string filename , type_2 var_1 , java.lang.string ... var_2 ) { type_3 var_3 = type_4 . method_2 ( context , var_1 , var_2 ) ; if ( var_3 == null ) return null ; type_3 file = var_3 . method_4 ( filename ) ; return type_4 . method_1 ( context , file . method_5 ( ) ) ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; if ( var_2!= ( var_3 ) ) return ; switch ( var_1 ) { case var_4 : if ( data. method_2 ( string_1, false ) ) { type_1. method_3 ( this ) ; method_4 ( var_5 class ) ; method_5 ( ) ; } else { var_6. method_6 ( ). method_7 ( 0 ) ; } break ; } } }

************

************
tgt: public void method_1 ( ) { assertequals ( null , var_1 . method_2 ( 1 ) ) ; var_1 . method_3 ( 1 ) ; var_1 . method_4 ( int_1 ) ; var_1 . method_3 ( int_2 ) ; assertequals ( int_1 , var_1 . method_5 ( ) ) ; assertequals ( 1 , var_1 . method_2 ( 1 ) . getid ( ) ) ; }
[0]: private void method_1 ( ) { if (! ( var_1 ) ) return ; final type_1 var_2 = var_3. method_2 ( ) ; final int var_4 = ( ( var_5. method_3 ( ) ) - ( var_5. method_4 ( ) ) ) - 1 ; final int var_6 = type_2. min ( type_2. method_5 ( 1, var_7 ), var_4 ) ; var_5. method_6 ( var_6 ) ; var_5. setenabled ( ( var_6!= var_4 ) ) ; }

************

************
tgt: public boolean add ( type_1 var_1 ) { type_2 < type_3 > var_2 = list . method_1 ( ) ; while ( var_2 . method_2 ( ) ) { type_1 var_3 = ( ( type_1 ) ( var_2 . method_3 ( ) ) ) ; if ( var_3 . method_4 ( var_1 ) ) { var_3 . add ( var_1 ) ; if ( var_3 . isempty ( ) ) { var_2 . remove ( ) ; } return true ; } } list . add ( new type_1 ( var_1 ) ) ; return false ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 var_2 ) throws type_4, type_5 { return method_2 ( method_3 ( method_4 ( ( ( var_1. method_5 ( ). size ( ) ) > 1? method_6 ( var_1, var_2 ). method_7 ( var_1, var_2 ) : method_6 ( var_1, var_2 ). method_8 ( var_1, var_2 ), var_1 ), var_1 ) ; }

************

************
tgt: private static int method_1 ( int var_1 , java.lang.integer [ ] var_2 ) { int start = 0 ; int end = var_2 . length ; while ( start < end ) { int var_3 = ( start + end ) / int_1 ; int var_4 = var_2 [ var_3 ] ; if ( var_4 == var_1 ) { return var_3 ; } else if ( var_4 < var_1 ) { start = var_3 + 1 ; } else { end = var_3 ; } } return - 1 ; }
[0]: private void method_1 ( ) { for ( int var_1 = 0 ; var_1 < ( this. var_2 ) ; ++ var_1 ) { for ( int var_3 = 0 ; var_3 < ( ( this. height ) - 1 ) ; ++ var_3 ) { this. method_2 ( var_1, var_3, var_4 [ var_1 ] [ var_3 ]. getcolor ( ) ) ; } } }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_3 < type_2 > response ) { if ( ( view ) != null ) { if ( type_4 . method_2 ( response , context , view ) ) { view . method_3 ( method_4 ( response . method_5 ( ) . method_6 ( ) , response . method_5 ( ) . method_7 ( ) ) ) ; } else { view . method_8 ( var_2 ) ; } } }
[0]: public void method_1 ( ) { var_1 = method_2 ( int_1, var_2, var_3 ) ; type_1 var_4 = new type_1 ( var_1, var_5 ) ; assertequals ( var_4. method_3 ( ), true ) ; var_1 = method_2 ( int_1, string_1, var_3 ) ; var_4 = new type_1 ( var_1, var_5 ) ; assertequals ( var_4. method_3 ( ), false ) ; }

************

************
tgt: public void method_1 ( ) { int var_1 = var_2 . method_2 ( ) ; int var_3 = var_2 . method_3 ( ) ; for ( int i = 0 ; i < ( var_1 - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 - 1 ) ; j ++ ) { type_1 . assertnotnull ( var_2 . method_4 ( i , j ) ) ; } } }
[0]: public boolean method_1 ( ) { boolean var_1 = false ; if (! ( this. method_2 ( ). equals ( string_1 ) ) ) { if ( ( this. method_3 ( ) ) == 1 ) { var_1 = this. method_2 ( ). equals ( this. method_4 ( ) ) ; } else { var_1 =! ( this. method_2 ( ). equals ( this. method_4 ( ) ) ) ; } } return var_1 ; }

************

************
tgt: private void method_1 ( android.content.intent intent ) { type_1 var_1 = intent . method_2 ( var_2 ) ; if ( ( var_1 . method_3 ( ) ) && ( ! ( method_3 ( ) ) ) ) { type_2 . method_4 ( var_4 , string_1 ) ; var_3 = true ; var_5 . method_5 ( var_6 , this ) ; } else { this . method_6 ( ) ; } }
[0]: private void method_1 ( java.lang.string values ) { java.lang.string [ ] var_1 = values. split ( string_1 ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { int num = var_2 ; try { num = java.lang.integer.parseint ( var_1 [ i ] ) ; } catch ( type_1 var_3 ) { break ; } var_4. add ( num ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = new type_3 ( string_1 ) ; type_2 var_2 = var_1 . method_2 ( string_2 ) ; type_2 var_3 = var_2 . method_2 ( string_3 ) ; asserttrue ( string_4 , var_3 . method_3 ( ) . equals ( string_5 ) ) ; }
[0]: public final void method_1 ( type_1 var_1, type_1 src ) { assert ( var_1. method_2 ( ). equals ( var_2 ) ) && ( src. method_2 ( ). equals ( var_2 ) ) ; type_2 var_3 = new type_2 ( var_4, true, false, false, false, target ) ; int var_5 = method_3 ( var_1, var_6, src, var_7, var_8, var_3 ) ; method_4 ( int_1 ) ; method_4 ( ( int_2 | var_5 ) ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 var_3 ) { type_2 . method_2 ( var_3 , var_1 ) ; try { return ( ( ( type_2 . method_3 ( ) ) && ( type_2 . method_4 ( var_1 ) ) ) && ( type_2 . method_5 ( var_2 , var_1 ) ) ) && ( var_4 ) ; } catch ( java.io.ioexception var_5 ) { java.lang.system.out.println ( string_1 ) ; return false ; } }
[0]: public void method_1 ( type_1 message, type_2 response ) throws java.io.ioexception { type_1 answer = var_1. getvalue ( new type_3 ( message ) ) ; if ( answer!= null ) { method_2 ( message, response ) ; return ; } if ( var_2 ) { var_3. put ( new type_4 ( message ), response ) ; for ( type_5 var_4 : var_5 ) { var_6. method_2 ( type_6. method_3 ( message. method_4 ( ) ), var_4 ) ; } } } }

************

************
tgt: public void method_1 ( final type_1 var_1 , final type_2 var_2 ) { var_3 = new type_3 ( var_1 ) ; this . method_2 ( var_4 ) ; this . method_3 ( var_4 ) ; var_3 . method_4 ( 0 , 0 , method_5 ( ) , method_6 ( ) ) ; for ( type_4 var_5 : var_2 . method_7 ( ) ) { var_5 . method_8 ( var_3 . method_7 ( ) ) ; } }
[0]: public void method_1 ( java.util.list var_1 ) { type_1 var_2 = type_2. method_2 ( context ) ; type_3 var_3 = var_2. method_3 ( ) ; type_4 var_4 = new type_4 ( ) ; java.lang.string var_5 = var_4. method_4 ( var_1 ) ; var_3. method_5 ( var_6, var_5 ) ; var_3. method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_1 var_2 ) { if ( ! ( var_3 . method_2 ( var_1 ) ) ) throw new type_3 ( string_1 , var_1 ) ; type_4 < type_1 , type_2 > . var_4 var_5 = var_3 . get ( var_1 ) ; if ( var_9 . equals ( var_2 ) ) return var_7 ; if ( var_7 . equals ( var_2 ) ) return var_9 ; return null ; }
[0]: private void method_1 ( java.util.map < type_1, java.util.list < type_2 > > var_1 ) { method_2 ( ) ; var_2. method_3 ( ( ( ( ( var_2. method_4 ( ) ) + string_1 ) + ( var_1. size ( ) ) ) + string_2 ) ) ; method_5 ( ) ; }

************

************
tgt: public type_1 [ ] [ ] method_1 ( int var_1 , int var_2 , type_1 var_3 ) { this . var_4 [ var_2 ] [ var_1 ] = new type_2 ( var_5 , ( var_1 * ( var_6 ) ) , ( var_2 * ( var_6 ) ) ) ; var_3 . method_2 ( ( ( var_3 . method_3 ( ) ) + int_1 ) ) ; this . var_4 [ ( var_2 + 1 ) ] [ var_1 ] = var_3 ; return this . var_4 ; }
[0]: public type_1 method_1 ( ) { try { return type_1. method_2 ( method_3 ( ). tostring ( ) ) ; } catch ( type_2 | type_3 | type_4 var_1 ) { throw new type_5 ( ( string_1 + ( getname ( ) ) ), var_1. method_4 ( ) ) ; } }

************

************
tgt: private java.lang.string [ ] method_1 ( java.lang.string message ) { type_1 var_1 = new type_1 ( message ) ; java.lang.string [ ] params = new java.lang.string [ int_1 ] ; params [ int_2 ] = var_1 . getstring ( string_3 ) ; params [ int_3 ] = var_1 . getstring ( string_4 ) ; return params ; }
[0]: public java.util.list < type_1 > method_1 ( int var_1, type_2 var_2, type_3 var_3 ) throws type_4 { if ( ( ( var_4 ) == null ) || ( (! ( var_5. equals ( var_2 ) ) ) && ( ( var_6 )!= var_1 ) ) ) { var_4 = new type_5 ( new type_6 ( var_2 ), var_1 ) ; } type_5 var_7 = var_4. method_2 ( ) ; var_2 = var_8 ; return var_7. method_3 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int var_2 , type_2 event ) { if ( ( var_3 ) == null ) { return false ; } java.lang.string query = var_5 . gettext ( ) . tostring ( ) . trim ( ) ; if ( query . isempty ( ) ) { type_3 . show ( this , var_6 ) ; return true ; } method_2 ( query ) ; method_3 ( var_5 ) ; return false ; }
[0]: private void method_1 ( ) { method_2 ( ) ; switch ( var_1 ) { case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( ) ; break ; case var_4 : break ; case var_5 : break ; case var_6 : method_5 ( ) ; break ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string [ ] var_2 ) { if ( ( var_2 . length ) >= 1 ) { if ( var_2 [ 0 ] . method_2 ( string_1 ) ) { type_2 . method_1 ( var_1 , method_3 ( 1 , var_2 ) ) ; } } else { type_3 . method_4 ( var_1 , ( ( ( var_3 ) + ( var_4 ) ) + string_2 ) ) ; } }
[0]: public void method_1 ( ) { int counter = 0 ; while ( counter < ( this. num ) ) { java.lang.system.out.println ( ( ( ( string_1 + ( java.lang.thread. method_2 ( ). getname ( ) ) ) + string_2 ) + ( var_1 ) ), method_3 ( ) ) ; counter ++ ; } }

************

************
tgt: public boolean method_1 ( ) { if ( ! ( ( ( ( ( var_1 ) == null ) && ( ( var_2 ) == null ) ) && ( ( var_3 ) == null ) ) && ( ( var_4 ) == null ) ) ) { return false ; } else { return true ; } }
[0]: public type_1 method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( method_2 ( ) ) > 0 ) ) { try { var_1 = var_2. method_3 ( ) ; } catch ( type_2 var_3 ) { throw new type_3 ( var_3 ) ; } } return var_1 ; }

************

************
tgt: protected type_1 method_1 ( java.lang.long ... var_1 ) { long var_2 = var_1 [ 0 ] ; type_1 show = method_2 ( var_2 ) ; if ( show != null ) { java.util.list < type_3 > var_4 = method_5 ( var_2 ) ; if ( var_4 != null ) { java.util.collections.sort ( var_4 , new type_4 ( ) ) ; type_5 . method_6 ( var_4 ) ; show . method_7 ( var_4 ) ; } } return show ; }
[0]: public void method_1 ( java.lang.string url, java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, long var_4 ) { type_1 var_5 = type_1. method_2 ( url ) ; type_2. method_3 ( var_6. getactivity ( ), var_5. tostring ( ), var_7 ). show ( ) ; android.content.intent intent = new android.content.intent ( var_8, var_5 ) ; var_6. getactivity ( ). method_4 ( intent ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ! ( ( this . var_1 ) instanceof type_2 ) ) { return this . var_1 . method_2 ( this . var_2 ) ; } else if ( ( ( ( type_2 ) ( this . var_1 ) ) . method_3 ( ) ) > ( this . var_2 ) ) { return this . var_1 . method_2 ( this . var_2 ) ; } else { return var_3 . method_4 ( ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1 ) ; type_2 var_2 = new type_2 ( int_2 ) ; java.lang.thread var_3 = new java.lang.thread ( var_1 ) ; java.lang.thread var_4 = new java.lang.thread ( var_2 ) ; var_3. start ( ) ; var_4. start ( ) ; type_3. main ( ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent var_3 ) { super . method_1 ( var_1 , var_2 , var_3 ) ; switch ( var_1 ) { case var_4 : if ( var_2 == ( var_5 ) ) { final type_1 var_6 = var_3 . getdata ( ) ; var_7 = type_2 . method_2 ( this , var_6 ) ; type_2 . method_3 ( this , var_8 , var_7 , int_1 ) ; if ( ( var_9 ) != null ) { var_9 . method_4 ( var_7 ) ; } } } }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( false ) ; type_2 < java.lang.object, java.lang.object > var_2 = type_2. method_3 ( ) ; var_2. method_4 ( int_1 ) ; var_2. method_5 ( int_2, var_3 ) ; var_2. method_6 ( int_3 ) ; var_2. method_7 ( method_8 ( ) ) ; var_2. method_9 ( new type_3 ( ) ) ; var_1. method_10 ( var_2 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . init ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2 . method_2 ( var_1 , string_2 ) ; java.lang.string var_4 = string_3 ; assertequals ( var_4 , var_3 . tostring ( ) , false ) ; }
[0]: public void method_1 ( int var_1, int var_2 ) { int var_3 = ( ( this. var_4. size ( ) ) - 1 ) - var_2 ; type_1 var_5 = this. var_4. get ( var_3 ) ; var_5. method_2 ( var_1 ) ; java.lang.system.out.println ( ( ( ( string_1 + var_5 ) + string_2 ) + var_1 ) ) ; }

************

************
tgt: private void method_1 ( type_1 target ) { type_2 var_1 = new type_2 ( ) ; var_1 . setenabled ( true ) ; var_2 . method_4 ( ) . method_5 ( ) . method_6 ( ) . method_7 ( ) . add ( var_1 ) ; method_8 ( target , var_1 ) ; var_3 . method_9 ( target ) ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string var_3 ) { var_4. method_2 ( var_1, var_2 ) ; if ( ( var_3!= null ) && ( ( var_1. method_3 ( ) )!= null ) ) { method_4 ( var_1. method_3 ( ), var_1 ) ; } }

************

************
tgt: protected java.util.list < type_1 > method_1 ( int var_1 ) { if ( var_2 ) { return new java.util.arraylist < type_1 > ( 0 ) ; } java.util.list < type_1 > var_3 = var_4 . method_1 ( var_1 ) ; if ( ( var_1 > 0 ) && ( ( var_3 . size ( ) ) == 0 ) ) { var_4 . method_2 ( ) ; var_2 = true ; } return var_3 ; }
[0]: protected type_1 method_1 ( ) { java.lang.string var_1 = method_2 ( var_2 ) ; try { return method_3 ( var_1, type_2. method_4 ( ) ) ; } catch ( type_3 var_3 ) { type_4. method_5 ( string_1, new java.lang.object [ ] { type_2. method_4 ( ), type_2. getname ( ), var_1 } ) ; return null ; } }

************

************
tgt: public void method_1 ( ) { while ( true ) { try { java.lang.string line = var_1 . method_2 ( ) ; var_2 = new type_1 ( line ) ; var_3 . method_3 ( ) . method_4 ( var_2 ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 1 ) ; } var_3 . method_5 ( ) ; } }
[0]: public type_1 method_1 ( ) { if ( ( var_1 )!= null ) { type_2 < type_1 >. var_2 node = first ; first = var_1 ; var_3 = null ; ( size ) -- ; return node. item ; } else if ( ( first )!= null ) { type_2 < type_1 >. var_2 node = first ; first = null ; var_4 = null ; ( size ) -- ; return node. item ; } else { throw new type_3 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , final type_2 var_2 ) { type_3 var_3 = type_4 . method_2 ( ) . method_3 ( var_1 . getint ( "type" ) ) ; if ( null == var_3 ) { var_2 . method_4 ( string_1 ) ; return ; } var_2 . method_5 ( type_4 . method_2 ( ) . method_1 ( var_1 . getint ( "type" ) ) ) ; }
[0]: public boolean equals ( java.lang.string var_1, java.lang.string var_2, int var_3, int var_4 ) { return ( ( ( ( this. var_1. equals ( var_1 ) ) && ( this. var_2. equals ( var_2 ) ) ) && ( this. var_3. equals ( var_3 ) ) ) && ( this. var_4. equals ( var_4 ) ) ; }

************

************
tgt: void method_1 ( android.content.intent intent , type_1 var_1 ) { type_2 var_2 = method_2 ( intent ) ; if ( var_2 == null ) { var_2 = new type_2 ( ) ; var_2 . intent = intent ; synchronized ( var_3 ) { var_3 . add ( var_2 ) ; } } var_2 . method_3 ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ). method_3 ( ) ) == ( var_2 ) ) { type_2 var_3 = var_1. method_4 ( ) ; try { int count = var_3. method_5 ( ) ; for ( int i = 0 ; i < count ; i ++ ) { } } finally { var_3. method_6 ( ) ; } } else { } }

************

************
tgt: public double method_1 ( ) { double var_1 = var_2 . get ( 0 ) . y ; for ( int i = 1 ; i < ( var_2 . size ( ) ) ; i ++ ) { double var_3 = var_2 . get ( i ) . y ; if ( var_3 < var_1 ) { var_1 = var_3 ; } } return var_1 ; }
[0]: public void method_1 ( java.lang.string [ ] [ ] var_1 ) { java.lang.system.out.println ( string_1 ) ; for ( java.lang.string [ ] i : var_1 ) { for ( java.lang.string x : i ) { java.lang.system.out.print ( ( x + string_2 ) ) ; } java.lang.system.out.println ( string_3 ) ; } java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( ) ; var_1 . method_2 ( string_1 ) ; java.io.file file = var_1 . method_3 ( this . method_4 ( ) . method_5 ( ) ) ; if ( file != null ) { var_2 . method_6 ( file ) ; var_2 . settext ( file . method_7 ( ) ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { while (! ( var_1. method_2 ( ) ) ) { var_2 += var_1. method_3 ( ) ; } var_3. add ( new type_2 ( new java.lang.stringbuilder ( var_2 ). method_4 ( ). tostring ( ) ) ) ; var_2 = string_1 ; var_3. add ( new type_2 ( new java.lang.stringbuilder ( var_2 ). method_4 ( ). tostring ( ) ) ) ; }

************

************
tgt: public java.lang.string method_1 ( final type_1 var_1 ) throws type_2 { return ( ( ( ( ( ( ( ( string_1 + ( getdata ( ) . method_2 ( ) ) ) + string_2 ) + ( getdata ( ) . method_3 ( ) ) ) + string_3 ) + ( getdata ( ) . method_4 ( ) ) ) + string_4 ) + ( getdata ( ) . method_5 ( ) ) ) + string_5 ) + string_6 ; }
[0]: public java.util.list < type_1 > method_1 ( int n ) { java.util.list < type_1 > var_1 = new java.util.arraylist ( this. var_2 ) ; type_2. method_2 ( var_1 ) ; if ( ( n > 0 ) && ( n < ( this. var_2. size ( ) ) ) ) var_1. method_3 ( 0, n ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_4 ( this . id ) ; var_1 . method_2 ( this . title ) ; var_1 . method_2 ( this . var_6 ) ; var_1 . method_3 ( this . var_7 ) ; var_1 . method_2 ( this . var_5 ) ; var_1 . method_2 ( this . var_4 ) ; var_1 . method_2 ( this . var_3 ) ; }
[0]: protected void method_1 ( type_1 result ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ). add ( result ) ; var_1. method_3 ( ) ; } else if ( ( var_2 )!= null ) { var_3. method_4 ( result ) ; } if ( ( var_4 )!= null ) { var_4. method_5 ( result ) ; } }

************

************
tgt: public void method_1 ( type_1 event ) { if ( event . method_2 ( ) ) { method_3 ( event . getdata ( ) ) ; return ; } type_2 . method_5 ( var_1 , ( string_1 + ( event . method_6 ( ) ) ) ) ; var_2 . method_7 ( ) ; }
[0]: public long method_1 ( ) { var_1 = this. method_2 ( var_2 ) ; long var_3 = var_1. method_3 ( getstring ( var_4 ), 0 ) ; if ( var_3 > 0 ) { var_5 = var_1. method_4 ( ) ; var_5. remove ( this. var_6 ) ; var_5. commit ( ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) throws type_4 , java.io.ioexception { var_1 . method_2 ( string_1 ) ; var_2 . method_2 ( string_1 ) ; type_5 var_4 = ( ( type_5 ) ( var_2 ) ) ; var_5 . get ( ) . method_3 ( ( ( type_6 ) ( var_1 ) ) ) ; var_4 . method_4 ( string_2 , string_3 ) ; var_3 . method_1 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( ) { this. method_2 ( var_1, var_2 ) ; this. remove ( var_3 ) ; this. method_3 ( ) ; var_4 = new type_1 ( this ) ; this. add ( var_4 ) ; this. method_4 ( ) ; }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_3 var_2 = new type_3 ( ) ; type_4 var_3 = new type_4 ( ) ; if ( var_1 == 1 ) { var_2 . method_2 ( ) ; var_2 . method_3 ( ) ; return type_5 . method_4 ( ) . method_5 ( var_2 ) ; } else { var_3 . method_2 ( ) ; var_3 . method_3 ( ) ; return type_5 . method_4 ( ) . method_5 ( var_3 ) ; } }
[0]: public boolean method_1 ( ) { java.util.set < java.lang.integer > set = new java.util.hashset < > ( ) ; for ( java.lang.string var_1 : var_2 ) { for ( type_1 var_3 : method_2 ( var_1 ) ) { if (! ( set. add ( java.lang.integer.parseint ( var_3. getdata ( ) ) ) ) ) { return false ; } } } return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_1 ( var_1 . getname ( ) ) ; while ( ! ( var_1 . method_2 ( ) . isempty ( ) ) ) { method_3 ( var_1 . method_2 ( ) . get ( 0 ) ) ; } var_4 . remove ( var_1 ) ; var_5 . remove ( var_1 ) ; }
[0]: protected void method_1 ( type_1 view, type_2 var_1 ) { float var_2 = ( ( float ) ( view. method_2 ( ) ) ) / ( var_3. x ) ; float var_4 = ( ( float ) ( view. method_3 ( ) ) ) / ( var_3. y ) ; float var_5 = type_3. method_4 ( var_2, var_4 ) ; var_2 = var_5 / var_2 ; var_4 = var_5 / var_4 ; method_5 ( view, var_1, var_2, var_4 ) ; }

************

************
tgt: public static void method_1 ( type_1 < ? extends type_1 < java.lang.double > > var_1 , int var_2 , type_2 out ) { boolean first = true ; out . method_2 ( string_1 ) ; for ( type_1 < java.lang.double > var_3 : var_1 ) { if ( first ) first = false ; else out . method_2 ( string_2 ) ; type_3 . method_3 ( var_3 , var_2 , out ) ; } out . method_2 ( ) ; out . method_2 ( string_3 ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = var_1 ; for ( type_3 var_4 : var_5 ) { var_3 = method_2 ( var_4, var_1 ) ; var_3 = method_3 ( var_4, var_3 ) ; var_3 = method_4 ( var_4, var_3, var_2 ) ; var_3 = method_5 ( var_4, var_3, null ) ; var_3 = method_6 ( var_4, var_3, null ) ; } return var_3 ; }

************

************
tgt: public java.util.set < java.lang.integer > method_1 ( ) { method_2 ( ) ; java.util.set < java.lang.integer > var_1 = new java.util.hashset < java.lang.integer > ( ) ; var_1 = method_3 ( int_1 ) ; java.util.set < java.lang.integer > var_2 ; var_2 = method_4 ( float_1 , int_1 , var_1 ) ; var_1 . method_5 ( var_2 ) ; var_2 = method_6 ( int_2 , var_1 ) ; var_1 . method_5 ( var_2 ) ; return var_1 ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; if ( var_2!= null ) { return ( ( super. method_1 ( var_1 ) ) + string_1 ) + ( var_2. getstring ( ""name"" ) ) ; } else { type_3. error ( string_2 ) ; return super. method_1 ( var_1 ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { int var_2 = ( var_3 ) | ( type_2 . diff ( var_4 , var_5 ) ) ; int var_6 = ( var_5 ) | ( type_2 . diff ( var_7 , var_3 ) ) ; type_3 var_8 = type_3 . method_2 ( var_9 ) ; var_8 . method_3 ( var_10 , var_11 ) ; type_3 var_12 = type_3 . method_2 ( var_11 ) ; var_12 . method_3 ( var_13 , var_9 ) ; return new type_1 ( var_2 , var_6 , var_8 , var_12 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( java.lang.double. method_3 ( var_3. gettext ( ). tostring ( ) ) ) ; var_4. update ( var_2 ) ; var_5. set ( var_6. method_4 ( ), var_2 ) ; if ( ( var_7 )!= null ) { var_7. method_5 ( var_5 ) ; } method_6 ( ) ; }

************

************
tgt: private int method_1 ( type_1 var_1 , int index , int var_2 , type_1 [ ] out ) { if ( index == var_2 ) { out [ 0 ] = var_1 ; return - 1 ; } var_2 ++ ; if ( ! ( var_1 . method_2 ( ) ) ) { for ( type_1 c : var_1 . method_3 ( ) ) { var_2 = method_1 ( c , index , var_2 , out ) ; if ( var_2 == ( - 1 ) ) { return - 1 ; } } } return var_2 ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( name ) ) + string_3 ) + ( type ) ) + string_4 ) + ( id ) ) + string_5 ) + ( title ) ) + string_6 ) + ( var_2 ) ) + string_7 ; }

************

************
tgt: public void method_1 ( ) { c . put ( 1 , 1 ) ; c . put ( int_1 , int_2 ) ; assertequals ( c . get ( 1 ) , 1 ) ; c . put ( int_3 , int_4 ) ; assertequals ( c . get ( 1 ) , 1 ) ; assertequals ( c . get ( int_1 ) , null ) ; assertequals ( c . get ( int_3 ) , int_4 ) ; }
[0]: public static void method_1 ( java.lang.object [ ] a ) { for ( int i = 1 ; i < ( a. length ) ; i ++ ) { int var_1 = type_1. method_2 ( 0, i ) ; java.lang.object x = a [ i ] ; a [ i ] = a [ var_1 ] ; a [ var_1 ] = x ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3 . method_2 ( int_1 , int_2 , 0 , 0 , string_1 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , int_3 , int_2 , 0 , 0 ) ; type_4 . method_5 ( var_2 ) ; var_1 = type_3 . method_2 ( int_1 , int_1 , 0 , 0 , string_1 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , 0 , int_1 , 0 , 0 ) ; type_4 . asserttrue ( var_2 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 < java.lang.string > var_1 = new type_1 ( var_2 ) ; long var_3 = var_1. method_1 ( ). method_2 ( ) ; int var_4 = int_1 ; for ( int i = 0 ; i < var_4 ; i ++ ) { var_1. method_3 ( ) ; } type_2. assertequals ( 0, var_3 ) ; type_2. assertequals ( var_4, var_1. method_1 ( ) ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ! ( var_1 instanceof type_1 ) ) return false ; type_1 n = ( ( type_1 ) ( var_1 ) ) ; return ( ( ( ( n . getid ( ) ) == ( this . getid ( ) ) ) && ( var_2 . equals ( this . var_3 ) ) ) && ( var_4 . equals ( this . label ) ) ) && ( this . var_5 . equals ( var_6 ) ) ; }
[0]: private java.lang.stringbuilder method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1. append ( string_1 ) ; for ( type_1 var_2 : this. var_3 ) { var_1. append ( var_2. method_2 ( ) ) ; } var_1. append ( string_2 ) ; return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { while ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) { var_1 = var_1 . method_2 ( ) ; } if ( var_1 != null ) { return type_4 . method_3 ( var_1 ) ; } return null ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { super. method_1 ( var_1, var_2 ) ; int var_3 = var_4. method_2 ( ) ; int var_5 = var_4. method_3 ( ) ; int var_6 = var_4. method_4 ( ) ; var_7. method_5 ( var_3, var_5, var_6 ) ; }

************

************
tgt: private static void method_1 ( ) { type_1 . method_2 ( ) ; if ( ( var_1 ) != null ) { type_2 . method_4 ( var_1 ) ; } type_2 . method_3 ( type_1 ) ; if ( ( type_2 . path ) != null ) { type_2 . method_4 ( type_2 . path , true ) ; } else { type_2 . method_4 ( new java.io.file ( var_2 , string_1 ) . method_5 ( ) , false ) ; } }
[0]: public void method_1 ( type_1 <? super type_2 > var_1 ) { type_3. method_2 ( var_1 ) ; for ( int i = 0 ; i < ( size ( ) ) ; i ++ ) { var_1. method_3 ( var_2. method_4 ( ). get ( i ), method_5 ( i ) ) ; } }

************

************
tgt: public static void method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; var_3 . str = var_1 . method_2 ( ) ; var_4 = new java.lang.string [ var_5 . length ( ) ] ; for ( int i = 0 ; i < ( var_5 . length ( ) ) ; i ++ ) { var_4 [ i ] = var_5 . substring ( i , ( i + 1 ) ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_1. method_1 ( args ) ; double var_4 = var_2. method_2 ( var_3 ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( ( string_2 + ( var_4 * int_1 ) ) + string_3 ) ) ; java.lang.system.out.println ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . method_2 ( ( ( this . state . get ( ) ) == ( var_1 ) ) , ( string_1 + ( this . state ) ) ) ; this . state . set ( var_2 ) ; var_3 . method_1 ( var_4 , var_5 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = type_1. method_2 ( var_2 class ) ; type_1. method_3 ( var_1. method_4 ( ) ). method_5 ( var_3 ) ; var_4 = type_1. method_2 ( var_5 class ) ; type_1. method_3 ( var_4. method_6 ( ) ). method_5 ( var_6 ) ; var_7 = new type_2 ( var_1 ) ; }

************

************
tgt: private void init ( ) { type_1 var_1 = new type_1 ( ) ; method_1 ( ) . method_2 ( ) . method_3 ( var_1 ) ; type_2 params = new type_2 ( true , false , var_1 . x , var_1 . y , int_1 , 1 , var_2 , true , 1 , var_3 , true ) ; type_3 . method_4 ( this , true , true , var_4 , type_4 . method_5 ( ) ) ; var_5 = new type_5 ( this , var_6 , params ) ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1. method_2 ( ) ) { type_2. i ( var_3, ( string_1 + ( var_2. method_3 ( ) ) ) ) ; type_3 var_4 = var_2. getvalue ( var_5 class ) ; var_6. settext ( var_7 ) ; var_8. settext ( java.lang.string. method_4 ( var_9 ) ) ; } }

************

************
tgt: static int method_1 ( int min , int var_1 ) { java.util.random var_2 = new java.util.random ( ) ; if ( min > var_1 ) { min = 0 ; var_1 = 0 ; } int var_3 = ( var_1 - min ) + 1 ; if ( var_3 <= 0 ) { var_3 = 1 ; } int var_4 = ( var_2 . method_2 ( var_3 ) ) + min ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( int a = 0 ; a < ( var_1. method_2 ( ) ) ; a ++ ) var_1. arg ( a ). method_3 ( this ) ; type_2 var_2 = var_3. get ( var_1 ) ; type_3 var_4 = var_5. get ( var_2 ) ; if ( var_4!= null ) var_5. set ( var_1, ( ( type_4 ) ( var_4 ) ). var_6 ) ; }

************

************
tgt: public void start ( type_1 var_1 , boolean var_2 ) { type_2 listener = type_3 . method_1 ( ) . get ( var_3 class ) ; if ( listener != null ) { listener . method_2 ( this ) ; method_3 ( listener . method_4 ( ) ) ; } super . start ( var_1 , var_2 ) ; }
[0]: private void method_1 ( java.lang.integer id, java.util.list < type_1 > var_1 ) { java.lang.string var_2 = var_3. method_2 ( string_1 ) ; for ( type_1 file : var_1 ) { try { type_2. method_3 ( new java.io.file ( ( ( ( ( var_2 + string_2 ) + id ) + string_3 ) + ( file. method_4 ( ) ) ) ), file. method_5 ( ) ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_6 ( ) ; } } }

************

************
tgt: public java.lang.string tostring ( final boolean var_1 ) { if ( ( number ) == null ) { if ( var_1 ) { return ( ( var_2 ) + ( var_3 ) ) + ( file . touppercase ( ) ) ; } else { return ( ( var_4 ) + ( var_3 ) ) + ( file . touppercase ( ) ) ; } } else { return ( ( method_1 ( number , var_1 ) ) + ( var_3 ) ) + ( file . touppercase ( ) ) ; } }
[0]: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; return new type_1 ( ( var_1!= null? ( ( type_3 ) ( var_1 ) ) : null ), method_3 ( ), ( ( var_2 )!= null? new java.util.arraylist < java.lang.long > ( var_2 ) : null ), var_3 ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( type_1 . method_2 ( getactivity ( ) , var_1 ) ) == ( var_2 ) ) { var_3 = true ; } else { type_2 . method_3 ( getactivity ( ) , new java.lang.string [ ] { var_1 } , var_4 ) ; } if ( var_3 ) { var_5 = type_3 . method_4 ( var_6 ) ; type_3 . method_5 ( var_6 , var_7 , this ) ; } }
[0]: private boolean method_1 ( final type_1 var_1, final type_1 var_2 ) { type_1 var_3 = method_2 ( var_1 ) ; if ( var_3 == null ) { return false ; } type_1 var_4 = var_3. method_3 ( var_5 ) ; if ( var_4 == null ) { return false ; } return! ( var_4. equals ( var_2 ) ) ; }

************

************
tgt: private void method_1 ( long var_1 , int var_2 , int state , int var_3 ) { java.lang.system.out.println ( ( ( ( ( var_2 + string_1 ) + state ) + string_1 ) + var_3 ) ) ; if ( ( var_2 == ( var_4 ) ) && ( state == 0 ) ) { var_5 = state == 1 ; var_6 = var_7 . method_2 ( var_8 . method_3 ( ) , float_1 ) ; } }
[0]: protected type_1 method_1 ( int var_1 ) throws java.lang.classnotfoundexception { if (! ( var_2. method_2 ( var_1 ) ) ) { java.lang.string var_3 = ( ( java.lang.string ) ( type_2. method_3 ( ). get ( 0 ). method_4 ( ) ) ) ; var_2. put ( var_1, method_5 ( var_3, var_1 ) ) ; } return var_2. get ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { if ( var_2 ) { var_3 . method_2 ( ) . method_3 ( ) ; try { return var_4 . method_4 ( var_1 ) ; } finally { var_3 . method_2 ( ) . method_5 ( ) ; } } else { return var_4 . method_4 ( var_1 ) ; } }
[0]: public void update ( int var_1 ) { switch ( var_1 ) { case var_2 : method_1 ( ) ; ( var_3 ) ++ ; break ; case var_4 : method_1 ( ) ; ( var_5 ) ++ ; break ; case var_6 : method_1 ( ) ; ( var_5 ) -- ; break ; case var_7 : method_1 ( ) ; method_2 ( ) ; break ; default : method_1 ( ) ; ( var_3 ) ++ ; break ; } }

************

************
tgt: public type_1 method_1 ( int position ) { if ( ( var_1 ) != null ) { if ( ( position >= 0 ) && ( position < ( var_1 . size ( ) ) ) ) { return var_1 . get ( position ) ; } type_2 . method_2 ( var_2 class , ( ( string_1 + position ) + string_2 ) ) ; } type_2 . method_2 ( var_2 class , string_3 ) ; return null ; }
[0]: public void method_1 ( float var_1 ) { this. var_2 = var_1 ; method_2 ( var_1 ) ; var_3. method_3 ( this. var_4 ) ; switch ( var_5. method_4 ( ) ) { case var_6 : var_5. method_5 ( var_5. method_6 ( ) ) ; method_7 ( var_1 ) ; break ; case var_7 : case var_8 : throw new type_1 ( ( ( string_1 + ( var_5. method_4 ( ) ) ) + string_2 ) ) ; case var_9 : break ; } }

************

************
tgt: public static void init ( android.content.context context ) { type_1 var_1 = type_1 . method_1 ( ) ; var_4 = context ; var_5 = type_2 . get ( context ) ; var_6 = type_3 . method_1 ( ) ; var_7 = new type_4 ( context . method_2 ( ) ) ; type_1 . method_3 ( ) ; }
[0]: public java.util.list < type_1 > method_1 ( int var_1, int var_2 ) { java.util.list < type_1 > var_3 = this. method_2 ( ) ; return var_3. method_1 ( ( var_1 - ( offset ) ), type_2. min ( var_2, var_4 ) ) ; }

************

************
tgt: public void method_1 ( type_1 result ) { ( ( type_2 ) ( getactivity ( ) ) ) . method_2 ( ) ; if ( ( result != null ) && ( result . method_3 ( ) ) ) { type_3 . method_4 ( var_1 , string_1 ) ; } method_7 ( ) ; }
[0]: public void method_1 ( java.lang.string filename ) { if ( filename. method_2 ( ( ( var_1 ) + string_1 ) ) ) var_2. settext ( filename. substring ( 0, ( ( filename. length ( ) ) - int_1 ) ) ) ; else var_2. settext ( filename ) ; }

************

************
tgt: public static type_1 method_1 ( int var_1 ) { type_2 var_2 = new type_2 ( var_1 ) ; int [ ] var_3 = var_2 . method_2 ( ) ; type_1 var_4 = new type_1 ( var_3 [ 0 ] , var_3 [ 1 ] , var_3 [ int_8 ] , var_3 [ int_2 ] , var_3 [ int_2 ] , var_3 [ int_3 ] , var_3 [ int_5 ] , var_3 [ int_1 ] , var_3 [ int_7 ] , var_3 [ int_6 ] ) ; var_4 . method_3 ( var_1 ) ; return var_4 ; }
[0]: public static double method_1 ( type_1 var_1 ) { double var_2 = type_2. method_2 ( var_1 ) ; double sum = 0 ; for ( java.lang.double var_3 : var_1 ) { sum += java.lang.math.pow ( ( var_3 - var_2 ), int_1 ) ; } return type_3. method_3 ( ( ( sum / ( var_1. size ( ) ) ) - 1 ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = var_3 . method_2 ( var_4 class ) . field ( var_5 ) . method_3 ( var_1 ) . method_4 ( ) ; if ( var_2 . isempty ( ) ) { return null ; } else { for ( type_1 var_6 : var_2 ) { return var_6 ; } return null ; } }
[0]: public boolean method_1 ( java.lang.string args ) { int i = args. method_2 ( ) ; if ( i > 0 ) { var_1 = args. substring ( 0, i ) ; id = type_1. method_3 ( args. substring ( i ) ) ; } return ( i > 0 ) && ( ( ( args.length ( ) ) - i ) > 0 ) ; }

************

************
tgt: private java.lang.string method_1 ( int var_1 , int var_2 ) throws java.lang.exception { byte [ ] response = new byte [ 0 ] ; try { response = var_3 . method_1 ( var_1 , var_2 ) ; } catch ( type_1 var_4 ) { throw new java.lang.exception ( var_4 . method_2 ( ) ) ; } return method_3 ( response , response . length ) ; }
[0]: protected void method_1 ( ) throws type_1 { var_1. method_2 ( false ) ; var_1. method_3 ( ) ; var_2 = var_3. method_4 ( ) ; for ( type_2 var_4 : var_2 ) { var_1. add ( var_4. getname ( ) ) ; } var_1. method_5 ( ) ; var_1. method_5 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_2 var_2 = var_1 . method_3 ( var_3 ) ; if ( var_2 == null ) { var_2 = new type_3 ( ) ; var_1 . method_4 ( ) . add ( var_3 , var_2 ) . commit ( ) ; var_4 = new type_4 ( int_1 , int_2 ) { public void method_5 ( long var_5 ) { } public void method_6 ( ) { method_7 ( ) ; method_8 ( ) ; } } ; var_4 . start ( ) ; } }
[0]: public type_1 method_1 ( final java.lang.string var_1, final long var_2 ) { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_2 var_3 = method_2 ( var_1, var_2 ) ; type_1 var_4 = this. var_5. method_3 ( var_6, var_3, new type_3 ( ) ) ; if ( var_4!= null ) { this. var_7. method_4 ( var_4, var_2 ) ; } return var_4 ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . getboolean ( var_2 , false ) ) { android.content.intent intent = new android.content.intent ( this , var_3 class ) ; method_2 ( intent ) ; } else { android.content.intent intent = new android.content.intent ( this , var_4 class ) ; type_1 . method_3 ( method_4 ( ) , string_1 , var_5 ) . show ( ) ; method_2 ( intent ) ; } }
[0]: public int method_1 ( ) { int var_1 = 0 ; for ( type_1 var_2 : this. var_3 ) { if ( ( var_2. method_2 ( ) ) == string_1 ) { var_1 = + int_1 ; } if ( ( var_2. method_2 ( ) ) == string_2 ) { var_1 = + int_2 ; } } return var_1 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ( ( var_1 . method_3 ( ) ) + 1 ) ) ; var_1 . method_4 ( ) ; var_1 . method_5 ( ( - ( var_2 . value ( ) ) ) ) ; if ( ( var_1 . value ( ) ) < 0 ) { var_1 . set ( 0 ) ; } var_2 . method_2 ( 0 ) ; method_6 ( 1 ) ; field . method_7 ( ) ; field . method_8 ( ) ; field . method_9 ( ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { java.io.bufferedreader var_1 = new java.io.bufferedreader ( new type_1 ( var_2 ) ) ; java.lang.system.out.println ( string_1 ) ; var_3 = java.lang.integer.parseint ( var_1. method_2 ( ) ) ; var_4 = java.lang.integer.parseint ( var_1. method_2 ( ) ) ; name = var_1. method_2 ( ) ; var_5 = java.lang.integer.parseint ( var_1. method_2 ( ) ) ; var_6 = java.lang.integer.parseint ( var_1. method_2 ( ) ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string id ) { try { var_2 = method_2 ( var_1 ) ; if ( ( var_2 ) != null ) { type_1 event = var_3 . method_3 ( id ) ; var_3 . delete ( event ) ; var_2 . method_4 ( ) . delete ( string_1 , event . method_5 ( ) ) . method_6 ( true ) . execute ( ) ; return true ; } } catch ( java.io.ioexception var_4 ) { java.lang.system.out.println ( string_2 ) ; } return false ; }
[0]: public java.util.list < java.util.map < java.lang.string, java.lang.object > > method_1 ( java.lang.integer var_1, java.lang.integer var_2 ) { java.util.list < java.util.map < java.lang.string, java.lang.object > > result = null ; int offset = ( var_1 * var_2 ) + 1 ; java.lang.string var_3 = string_1 ; result = method_2 ( ). query ( var_3, new java.lang.object [ ] { offset, offset + var_2 }, new type_1 ( ) ) ; return result ; }

************

************
tgt: private boolean contains ( java.io.file file ) { boolean result ; try { java.lang.string var_1 = file . tostring ( ) ; result = ( ( ( var_2 . length ( ) ) > 0 ) && ( var_1 . startswith ( var_2 . tostring ( ) ) ) ) || ( var_1 . startswith ( var_2 . method_1 ( ) . tostring ( ) ) ) ; } catch ( java.io.ioexception var_3 ) { result = false ; } return result ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, 0, 0 ) ; type_2. method_3 ( type_3. method_4 ( ), type_2. method_5 ( 1 ) ). method_6 ( ) ; type_2. method_3 ( var_2, type_2. method_5 ( 1 ) ). method_7 ( type_4. method_8 ( var_3 class ) ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 ; try { var_1 = new type_1 ( int_1 ) ; while ( true ) { type_2 var_2 = var_1 . method_2 ( ) ; type_3 var_3 = new type_3 ( var_2 ) ; var_3 . start ( ) ; } } catch ( java.io.ioexception var_4 ) { var_4 . method_5 ( ) ; } }
[0]: private java.util.map < java.lang.string, java.util.list < type_1 > > method_1 ( java.util.map < java.lang.string, java.util.list < type_1 > > var_1 ) { java.util.map < java.lang.string, java.util.list < type_1 > > var_2 = new java.util.hashmap < > ( ) ; if ( var_1!= null ) { method_1 ( var_1, var_2 ) ; } return var_2 ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; if ( var_2 != ( var_3 ) ) return ; switch ( var_1 ) { case var_4 : if ( ( data != null ) && ( data . method_2 ( string_1 , false ) ) ) { type_1 . method_3 ( this ) ; method_4 ( var_5 class ) ; method_5 ( ) ; } else { var_6 . method_6 ( ) . method_7 ( 0 ) ; } break ; } }
[0]: public final java.util.list < type_1 > method_1 ( final byte var_1, final type_2 var_2 ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; type_1 var_3 ; int i = 0 ; while ( ( var_3 = method_2 ( var_1, var_2, i ) )!= null ) { i ++ ; list. add ( i, var_3 ) ; } return list ; }

************

************
tgt: private void method_1 ( ) { if ( ! ( var_1 ) ) return ; final type_1 var_2 = var_3 . method_2 ( ) ; final int var_4 = ( ( var_5 . method_3 ( ) ) - ( var_5 . method_4 ( ) ) ) + 1 ; final int var_6 = type_2 . min ( type_2 . method_5 ( 1 , var_7 ) , var_4 ) ; var_5 . method_6 ( var_6 ) ; var_5 . setenabled ( ( var_6 != var_4 ) ) ; }
[0]: public static type_1 < type_2 [ ] > method_1 ( final java.lang.string name, final java.lang.string var_1 ) { type_3 var_2 ; try { var_2 = new type_3 ( var_1 ) ; } catch ( type_4 var_3 ) { throw new type_5 ( ( string_1 + var_1 ), var_3 ) ; } return type_6. method_1 ( name, var_2 ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 var_2 ) throws type_4 , type_5 { return method_2 ( method_3 ( method_4 ( ( ( var_1 . method_5 ( ) . size ( ) ) > 1 ? method_6 ( var_1 , var_2 ) . method_7 ( var_1 , var_2 ) : method_8 ( var_1 , var_2 ) ) , var_1 ) , var_1 ) , var_1 ) ; }
[0]: public java.lang.integer method_1 ( double var_1, double var_2, double offset, boolean var_3 ) { type_1 p = var_4. method_2 ( var_1, var_2, var_5 ) ; int y = ( ( p. y ) - ( var_6. y ) ) - ( ( method_3 ( ) ) / int_1 ) ; if ( var_3 ) { if ( ( y < 0 ) || ( y > ( method_3 ( ) ) ) ) return null ; } return y ; }

************

************
tgt: private void method_1 ( ) { for ( int var_1 = 0 ; var_1 < ( this . var_2 ) ; ++ var_1 ) { for ( int var_3 = 0 ; var_3 < ( this . height ) ; ++ var_3 ) { this . method_2 ( var_1 , var_3 , var_4 [ var_1 ] [ var_3 ] . getcolor ( ) ) ; } } }
[0]: public boolean method_1 ( int position, java.lang.string var_1 ) { if ( var_2 [ position ]. equals ( var_1 ) ) { return true ; } switch ( var_2 [ position ] ) { case string_1 : return false ; case string_2 : return false ; case string_3 : return false ; case string_4 : return false ; case string_5 : return false ; case string_6 : return false ; case string_7 : return false ; case string_8 : return false ; default : return true ; } } }

************

************
tgt: public void method_1 ( ) { var_1 = method_2 ( int_1 , var_2 ) ; type_1 var_4 = new type_1 ( var_1 , var_5 ) ; type_2 . assertequals ( var_4 . method_3 ( ) , true ) ; var_1 = method_2 ( int_1 , string_1 ) ; var_4 = new type_1 ( var_1 , var_5 ) ; type_2 . assertequals ( var_4 . method_3 ( ) , false ) ; }
[0]: private type_1 method_1 ( type_1 node, java.util.hashmap < type_1, type_1 > nodes ) { type_1 var_1 = new type_1 ( node. label ) ; nodes. put ( node, var_1 ) ; for ( type_1 var_2 : var_3 ) { type_1 var_4 = nodes. get ( var_2 ) ; if ( var_4 == null ) { var_4 = method_1 ( var_2, nodes ) ; } var_5. add ( var_4 ) ; } return node ; }

************

************
tgt: private boolean method_1 ( ) { boolean var_1 = false ; if ( ! ( this . method_2 ( ) . equals ( string_1 ) ) ) { if ( ( this . method_3 ( ) ) == 1 ) { var_1 = this . method_2 ( ) . equals ( this . method_4 ( ) ) ; } else { var_1 = ! ( this . method_2 ( ) . equals ( this . method_4 ( ) ) ) ; } } return var_1 ; }
[0]: public type_1 method_1 ( java.lang.integer var_1, java.lang.integer var_2, type_2 var_3 ) throws type_3, type_4 { type_5 var_4 = var_5. method_2 ( var_1 ) ; type_5 var_6 = var_5. method_2 ( var_2 ) ; if (! ( var_7. method_3 ( var_6, var_6. method_4 ( ) ) ) ) { throw new type_6 ( string_1 ) ; } return var_8. method_5 ( var_6, var_4, var_3 ) ; }

************

************
tgt: private void method_1 ( java.lang.string values ) { var_4 = new java.util.arraylist < java.lang.integer > ( ) ; java.lang.string [ ] var_1 = values . split ( string_1 ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { int num = var_2 ; try { num = java.lang.integer.parseint ( var_1 [ i ] ) ; } catch ( type_1 var_3 ) { break ; } var_4 . add ( num ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1, type_2 var_2, type_3 var_3 ) { type_1 info = new type_1 ( var_1, var_3 ) ; var_2. add ( info ). method_2 ( ). method_3 ( ). method_4 ( ). method_5 ( ) ; return info ; }

************

************
tgt: public final void method_1 ( type_1 var_1 , type_1 src ) { assert ( var_1 . method_2 ( ) . equals ( var_2 ) ) && ( src . method_2 ( ) . equals ( var_2 ) ) ; type_2 var_3 = new type_2 ( var_4 , false , false , false , false , target ) ; int var_5 = method_3 ( var_1 , var_6 , src , var_7 , var_8 , var_3 ) ; method_4 ( int_1 ) ; method_4 ( ( int_2 | var_5 ) ) ; }
[0]: public type_1 method_1 ( java.lang.integer id ) { try { type_1 var_1 = new type_1 ( string_1 ) ; type_2 var_2 = var_3. method_2 ( id ) ; var_1. method_3 ( string_2, var_2 ) ; var_1. method_3 ( string_3, string_4 ) ; return var_1 ; } catch ( java.lang.exception var_4 ) { return list ( ) ; } }

************

************
tgt: public void method_1 ( type_1 message , type_2 response ) throws java.io.ioexception { type_1 answer = var_1 . getvalue ( new type_3 ( message ) ) ; if ( answer != null ) { method_2 ( answer , response ) ; return ; } if ( var_2 ) { var_3 . put ( new type_4 ( message ) , response ) ; for ( type_5 var_4 : var_5 ) { var_6 . method_2 ( type_6 . method_3 ( message . method_4 ( ) ) , var_4 ) ; } } }
[0]: public boolean method_1 ( int var_1, type_1 [ ] var_2 ) { for ( type_1 a : var_2 ) for ( int i = 0 ; i < ( var_3. length ) ; i ++ ) { if ( var_3 [ i ]. equals ( this ) ) { method_1 ( var_1, var_4 [ i ] ) ; } } return true ; }

************

************
tgt: public type_1 method_1 ( java.util.list var_1 ) { type_1 var_2 = type_2 . method_2 ( context ) ; type_3 var_3 = var_2 . method_3 ( ) ; type_4 var_4 = new type_4 ( ) ; java.lang.string var_5 = var_4 . method_4 ( var_1 ) ; var_3 . method_5 ( var_6 , var_5 ) ; var_3 . method_6 ( ) ; return var_2 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; type_2. method_3 ( var_1. method_4 ( ) ) ; var_2. method_5 ( new type_3 ( var_3 ), null, var_1 ) ; var_1. method_6 ( true ) ; var_2. method_5 ( new type_3 ( var_3 ), null, var_1 ) ; type_4 var_4 = method_7 ( var_1 ) ; type_2. asserttrue ( var_4. method_4 ( ) ) ; }

************

************
tgt: private void method_1 ( java.util.map < type_1 , java.util.list < type_2 > > var_1 ) { method_2 ( ) ; var_2 . method_3 ( ( ( ( ( var_2 . method_4 ( ) ) + string_1 ) + ( var_1 . size ( ) ) ) + string_2 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { android.widget.linearlayout var_2 = ( ( android.widget.linearlayout ) ( method_2 ( var_3 ) ) ) ; type_1 var_4 ; var_4 = type_1. method_3 ( var_1, int_1, int_2, false ) ; type_2 var_5 = new type_2 ( this ) ; var_5. method_4 ( var_4 ) ; var_2. method_5 ( var_5 ) ; }

************

************
tgt: public type_1 method_1 ( ) { try { return type_1 . method_2 ( method_3 ( ) . tostring ( ) ) ; } catch ( type_2 | type_3 | type_4 var_1 ) { throw new type_5 ( ( string_1 + ( getname ( ) ) ) , var_1 ) ; } }
[0]: private static float [ ] method_1 ( float [ ] var_1 ) { float [ ] result = var_1. method_2 ( ) ; for ( int i = 0 ; i < ( result. length ) ; ++ i ) { result [ i ] += type_1. method_3 ( ) ; } return result ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( int var_1 , type_2 var_2 , type_3 var_3 ) throws type_4 { if ( ( ( var_4 ) == null ) || ( ( ! ( var_5 . equals ( var_2 ) ) ) && ( ( var_6 ) != var_1 ) ) ) { var_4 = new type_5 ( new type_6 ( var_2 ) , var_1 ) ; } type_5 var_7 = var_4 . method_2 ( ) ; return var_7 . method_3 ( ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) == null ) { final type_1 var_2 = ( ( type_1 ) ( type_2. method_2 ( ). method_3 ( var_3 ) ) ) ; var_1 = var_2. method_4 ( ) ; } else { type_3. method_5 ( var_4, string_1 ) ; } }

************

************
tgt: private void method_1 ( ) { switch ( var_1 ) { case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( ) ; break ; case var_4 : break ; case var_5 : break ; case var_6 : method_5 ( ) ; break ; } }
[0]: public final void method_1 ( final java.lang.string var_1, final type_1 response ) throws java.io.ioexception { type_2. info ( ( string_1 + var_1 ) ) ; java.util.map < java.lang.string, java.lang.object > parameters = new type_3 ( ). method_2 ( var_1, new type_4 < java.util.map < java.lang.string, java.lang.object > > ( ) { } ) ; response. method_3 ( ). method_4 ( new type_3 ( ). method_5 ( var_2. method_1 ( parameters ) ) ) ; }

************

************
tgt: public void method_1 ( ) { int counter = 0 ; while ( counter < ( this . num ) ) { java.lang.system.out.println ( ( ( ( string_1 + ( java.lang.thread . method_2 ( ) . getname ( ) ) ) + string_2 ) + ( var_1 . method_3 ( ) ) ) ) ; counter ++ ; } }
[0]: public void add ( int var_1 ) { if ( ( var_1 > ( ( var_2. size ( ) ) - 1 ) ) || ( var_1 < 0 ) ) { java.lang.system.out.println ( string_1 ) ; } else { var_3. add ( var_2. get ( var_1 ) ) ; java.lang.system.out.println ( ( ( var_3. get ( var_1 ). getname ( ) ) + string_2 ) ) ; var_4 += var_3. get ( ( ( var_3. size ( ) ) - 1 ) ). method_1 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ! ( method_2 ( ) ) ) ) { try { var_1 = var_2 . method_3 ( ) ; } catch ( type_2 var_3 ) { throw new type_3 ( var_3 ) ; } } return var_1 ; }
[0]: public void method_1 ( java.lang.charsequence c ) { if ( ( ( var_1 ) == null ) || ( ( var_1 ) == null ) ) { var_1 = ( ( java.lang.charsequence ) ( c ) ) ; } else if ( c. equals ( string_1 ) ) { var_1 = ( var_1. tostring ( ) ) + c ; } } }

************

************
tgt: public void method_1 ( java.lang.string url , java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , long var_4 ) { type_1 var_5 = type_1 . method_2 ( url ) ; android.content.intent intent = new android.content.intent ( var_8 , var_5 ) ; var_6 . getactivity ( ) . method_4 ( intent ) ; }
[0]: private void method_1 ( final java.util.list < java.lang.string > var_1 ) { if ( null!= var_1 ) { synchronized ( var_2 ) { java.util.map < java.lang.string, java.lang.integer > var_3 = var_4. method_2 ( ) ; for ( java.lang.string var_5 : var_1 ) { var_2. remove ( var_5 ) ; var_3. put ( var_5, var_6 ) ; } var_4. method_3 ( ) ; } } var_7 = false ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1 ) ; type_2 var_2 = new type_2 ( int_2 ) ; java.lang.thread var_3 = new java.lang.thread ( var_1 ) ; java.lang.thread var_4 = new java.lang.thread ( var_2 ) ; var_3 . start ( ) ; var_4 . start ( ) ; type_3 . main ( null ) ; }
[0]: public java.lang.object method_1 ( java.lang.string key ) { java.lang.object result = null ; try { result = this. var_1. getvalue ( key ) ; } catch ( type_1 var_2 ) { if ( this. var_3. error ( this, string_1, var_4, key ) ) { throw var_2 ; } } return result ; }

************

************
tgt: public type_1 method_1 ( ) { final type_1 var_1 = new type_1 ( ) ; final type_2 < java.lang.object , java.lang.object > var_2 = type_2 . method_3 ( ) ; var_1 . method_2 ( false ) ; var_2 . method_4 ( int_1 ) ; var_2 . method_5 ( int_2 , var_3 ) ; var_2 . method_6 ( int_3 ) ; var_2 . method_7 ( method_8 ( ) ) ; var_2 . method_9 ( new type_3 ( ) ) ; var_1 . method_10 ( var_2 ) ; return var_1 ; }
[0]: public void method_1 ( ) { int [ ] var_1 = var_2. method_2 ( ) ; if ( ( var_1. length ) > 0 ) { method_3 ( ). method_4 ( var_1, 1 ) ; method_5 ( type_1. method_6 ( var_1, ( - 1 ) ) ) ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { int var_3 = ( ( this . var_4 . size ( ) ) - 1 ) - var_2 ; type_1 var_5 = this . var_4 . get ( var_3 ) ; var_5 . method_2 ( var_1 ) ; }
[0]: private type_1 method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = null ; if ( var_2. method_2 ( ) ) { var_3 = type_3. method_3 ( var_1, var_4, var_5, var_2. method_4 ( ), var_2. method_5 ( ), var_6 ) ; } else { var_3 = type_3. method_3 ( var_1, var_4, var_7, var_2. method_4 ( ), var_2. method_5 ( ), var_6 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string var_3 ) { var_4 . method_2 ( var_1 , var_2 ) ; if ( ( var_3 != null ) && ( ( var_1 . method_3 ( ) ) != null ) ) { method_4 ( var_1 . method_3 ( ) , var_1 , null ) ; } }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) + string_3 ) + ( var_3 ) ) + string_4 ) + ( var_4 ) ) + string_5 ) + ( var_5 ) ) + string_6 ) + ( var_6 ) ) + string_7 ) + ( var_7 ) ) + string_8 ) + ( var_8 ) ) + string_9 ; }

************

************
tgt: protected type_1 method_1 ( ) { java.lang.string var_1 = method_2 ( var_2 ) ; try { return super . method_3 ( var_1 , type_2 . method_4 ( ) ) ; } catch ( type_3 var_3 ) { type_4 . method_5 ( string_1 , new java.lang.object [ ] { type_2 . method_4 ( ) , type_2 . getname ( ) , var_1 } ) ; return null ; } }
[0]: public void method_1 ( ) { if ( ( var_1 ) == null ) { method_2 ( new android.content.intent ( var_2, type_1. method_3 ( var_3 ) ) ) ; } else { var_1. open ( this, var_3, getstring ( var_4 ) ) ; } if ( ( var_5 )!= null ) { var_5. method_4 ( var_6, getstring ( var_7 ) ) ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( ( first ) == null ) { throw new type_3 ( ) ; } else if ( ( var_1 ) != null ) { type_2 < type_1 > . var_2 node = first ; first = var_1 ; var_3 = null ; ( size ) -- ; return node . item ; } else { type_2 < type_1 > . var_2 node = first ; first = null ; var_4 = null ; ( size ) -- ; return node . item ; } }
[0]: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; int i = 1 ; for ( type_1 var_2 : this ) { var_1 += ( ( ( string_1 + i ) + string_2 ) + ( var_2. tostring ( ) ) ) + ""\n"" ; } return var_1 ; }

************

************
tgt: public boolean equals ( java.lang.string var_1 , java.lang.string var_2 , int var_3 , int var_4 ) { return ( ( ( this . var_1 . equals ( var_1 ) ) && ( this . var_2 . equals ( var_2 ) ) ) && ( ( this . var_3 ) == var_3 ) ) && ( ( this . var_4 ) == var_4 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.util.list < type_3 > var_2 = method_2 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_3 var_4 : var_2 ) { var_3. add ( var_4. getname ( ) ) ; } type_4 var_5 = new type_4 ( this ) ; var_5. method_3 ( string_1 ) ; var_5. method_4 ( var_3. method_5 ( ), new type_5 ( ) { public void method_6 ( type_6 var_6, int var_7 ) { } } ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) . method_3 ( ) ) == ( var_2 ) ) { type_2 var_3 = var_1 . method_4 ( ) ; try { int count = var_3 . method_5 ( ) ; } finally { var_3 . method_6 ( ) ; } } }
[0]: public void method_1 ( type_1 node ) { var_1 = true ; method_2 ( ) ; type_2 var_2 = ( ( type_2 ) ( node. method_3 ( ) ) ) ; method_4 ( ). method_5 ( var_2 ) ; var_3. method_6 ( var_2 ) ; var_4. update ( ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; for ( java.lang.string [ ] i : var_1 ) { for ( java.lang.string x : i ) { java.lang.system.out.print ( ( x + string_2 ) ) ; } java.lang.system.out.println ( string_3 ) ; } java.lang.system.out.println ( string_1 ) ; }
[0]: public boolean method_1 ( type_1 data ) { if ( method_2 ( ) ) { var_1. method_3 ( data ) ; var_2 = var_1 ; ( size ) ++ ; return true ; } else { type_2 < type_1 > var_3 = new type_2 < type_1 > ( data ) ; var_3. method_4 ( var_1 ) ; var_1. method_5 ( var_3 ) ; var_1 = var_3 ; return true ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { while ( ! ( var_1 . method_2 ( ) ) ) { var_2 += var_1 . method_3 ( ) ; } if ( ( var_2 ) != string_1 ) { var_3 . add ( new type_2 ( new java.lang.stringbuilder ( var_2 ) . method_4 ( ) . tostring ( ) ) ) ; var_2 = string_1 ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( params ) ; var_1. method_3 ( ) ; var_1. method_3 ( ) ; java.util.list < type_1 > var_2 = var_1. method_4 ( ) ; type_2. assertequals ( var_2. method_5 ( var_3 ), var_3. method_5 ( var_2 ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( int n ) { java.util.list < type_1 > var_1 = new java.util.arraylist ( this . var_2 ) ; type_2 . method_2 ( var_1 ) ; if ( ( n > 0 ) && ( n < ( this . var_2 . size ( ) ) ) ) var_1 = var_1 . method_3 ( 0 , n ) ; return var_1 ; }
[0]: public void method_1 ( android.view.view view ) { if ( var_1 ) { method_2 ( ) ; method_3 ( string_1 ) ; } final type_1 var_2 = new type_1 ( ) ; final type_2 var_3 = new type_2 ( ) { public void method_4 ( ) { var_4. method_5 ( var_5, var_6, null, var_7 ) ; } } ; var_2. method_6 ( var_3, int_1 ) ; } }

************

************
tgt: protected void method_1 ( type_1 result ) { if ( ( var_1 ) != null ) { var_1 . method_3 ( ) ; } else if ( ( var_2 ) != null ) { var_3 . method_4 ( result ) ; } if ( ( var_4 ) != null ) { var_4 . method_5 ( result ) ; var_1 . method_3 ( ) ; } }
[0]: public synchronized java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = null ; java.lang.string url = method_2 ( var_1, var_2, string_1 ) ; java.lang.string var_3 = method_3 ( url, var_4, method_4 ( ) ). method_5 ( ) ; return java.util.arrays.aslist ( var_3. split ( string_2 ) ) ; }

************

************
tgt: public long method_1 ( ) { var_1 = this . method_2 ( var_2 ) ; long var_3 = var_1 . method_3 ( getstring ( var_4 ) , 0 ) ; if ( var_3 > 0 ) { var_5 = var_1 . method_4 ( ) ; var_5 . commit ( ) ; } return var_3 ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = var_3. method_2 ( ( ( var_1. getname ( ) ) + ( var_4 ) ), null ) ; type_2 var_5 = new type_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; var_3. method_5 ( var_2, new type_3 ( var_5, var_6 ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { this . method_2 ( var_1 , var_2 ) ; this . remove ( var_3 ) ; this . method_3 ( ) ; var_4 = new type_1 ( this ) ; this . add ( var_4 ) ; this . method_4 ( ) ; this . method_3 ( ) ; }
[0]: private static type_1 method_1 ( java.lang.string var_1 ) { switch ( var_1 ) { case string_1 : return var_2 ; case string_2 : return var_3 ; case string_3 : return var_4 ; case string_4 : return var_5 ; case string_5 : return var_6 ; case string_6 : return var_7 ; case string_7 : return var_8 ; case string_8 : return var_9 ; case string_9 : return var_10 ; case string_10 : return var_11 ; case string_11 : return var_12 ; default : type_2. method_2 ( string_12, var_1 ) ; return var_13 ; } }

************

************
tgt: public boolean method_1 ( ) { for ( java.lang.string var_1 : var_2 ) { java.util.set < java.lang.integer > set = new java.util.hashset < > ( ) ; for ( type_1 var_3 : method_2 ( var_1 ) ) { if ( ! ( set . add ( java.lang.integer.parseint ( var_3 . getdata ( ) ) ) ) ) { return false ; } } } return true ; }
[0]: protected type_1 method_1 ( int size ) { type_2 var_1 = new type_2 ( ( ( this. method_2 ( ) ) + ( size / int_1 ) ), ( ( this. method_3 ( ) ) + ( size / int_1 ) ), ( ( size / int_1 ) + int_2 ) ) ; var_1. method_4 ( int_3 ) ; return var_1 ; }

************

************
tgt: protected void method_1 ( type_1 view ) { float var_2 = ( ( float ) ( view . method_2 ( ) ) ) / ( var_3 . x ) ; float var_4 = ( ( float ) ( view . method_3 ( ) ) ) / ( var_3 . y ) ; float var_5 = type_3 . method_4 ( var_2 , var_4 ) ; var_2 = var_5 / var_2 ; var_4 = var_5 / var_4 ; method_5 ( view , var_2 , var_4 ) ; }
[0]: public void method_1 ( ) { if (! ( var_1. method_2 ( var_2 ) ) ) { return ; } java.util.list < type_1 > var_3 = var_4. method_3 ( var_5, new type_2 ( ) ) ; type_3 var_6 = var_7. method_4 ( var_5, var_3, new type_2 ( ) ) ; boolean var_8 = method_5 ( var_5, var_3, var_6 ) ; if (! var_8 ) { return ; } method_6 ( var_2, var_5 ) ; method_7 ( var_5, var_3, var_6 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = var_1 ; for ( type_3 var_4 : var_5 ) { var_3 = method_2 ( var_4 , var_3 ) ; var_3 = method_3 ( var_4 , var_3 ) ; var_3 = method_4 ( var_4 , var_3 , var_2 ) ; var_3 = method_5 ( var_4 , var_3 , null ) ; var_3 = method_6 ( var_4 , var_3 , null ) ; } return var_3 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2. method_2 ( type_3. method_3 ( string_1 ). method_4 ( var_1 ) ) ; type_1 var_3 = var_4. method_5 ( var_2, var_5 class, var_6 ) ; return var_3 ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; if ( var_2 != null ) { return ( ( super . method_1 ( var_1 ) ) + string_1 ) + ( var_2 . getstring ( "name" ) ) ; } else { return super . method_1 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 type_2, type_3 var_1 ) { super. method_1 ( type_2, var_1 ) ; method_2 ( var_1. method_3 ( ) ) ; type_4 state = var_2. method_4 ( var_3 ) ; var_2. method_5 ( var_3, state, state, int_1 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( java.lang.double . method_3 ( var_3 . gettext ( ) . tostring ( ) ) ) ; var_5 . set ( var_6 . method_4 ( ) , var_2 ) ; var_4 . update ( var_2 ) ; if ( ( var_7 ) != null ) { var_7 . method_5 ( var_5 ) ; } method_6 ( ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, type_1 var_2 ) { try { java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; new type_2 ( var_4 ). method_2 ( var_1, new type_3 ( var_5, var_3, var_2 ) ) ; return var_3. tostring ( ) ; } catch ( java.lang.exception var_6 ) { var_6. method_3 ( ) ; return var_1 ; } }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( name ) ) + string_4 ) + ( id ) ) + string_5 ) + ( title ) ) + string_6 ) + ( var_2 ) ) + string_7 ; }
[0]: public boolean method_1 ( type_1 view, java.lang.string url ) { view. method_2 ( url ) ; if ( ( ( url. startswith ( string_1 ) ) || ( url. startswith ( string_2 ) ) ) || ( url. startswith ( string_3 ) ) ) { android.content.intent intent = new android.content.intent ( var_1, type_2. method_3 ( url ) ) ; method_4 ( intent ) ; } return true ; }

************

************
tgt: public static void method_1 ( java.lang.object [ ] a ) { for ( int i = 1 ; i < ( a . length ) ; i ++ ) { int var_1 = type_1 . method_2 ( 0 , ( i + 1 ) ) ; java.lang.object x = a [ i ] ; a [ i ] = a [ var_1 ] ; a [ var_1 ] = x ; } }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { type_2. method_2 ( var_1. getcontext ( ), string_1, var_2 ) ; type_3 var_3 = var_4. method_3 ( position ) ; type_4 var_5 = type_4. method_4 ( var_3. method_5 ( ) ) ; android.content.intent var_6 = new android.content.intent ( var_7, var_5 ) ; method_6 ( var_6 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 class ) ; var_1 . method_3 ( type_1 . startswith ( string_1 ) ) ; var_1 . method_3 ( type_2 . method_4 ( string_2 ) ) ; new type_4 ( string_3 , var_4 , string_4 , null ) . build ( ) ; }
[0]: public void method_1 ( ) { if (! ( type_1. method_2 ( context, var_1, var_2 ) ) ) { return ; } if (! ( method_3 ( ) ) ) { return ; } if (! ( method_4 ( ) ) ) { return ; } android.content.intent var_3 = new android.content.intent ( context, var_4 class ) ; type_2 var_5 = ( ( type_2 ) ( context ) ) ; var_5. method_5 ( var_3, var_6 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 < java.lang.string > var_1 = new type_1 ( var_2 ) ; long var_3 = var_1 . method_1 ( ) . method_2 ( ) ; int var_4 = int_1 ; for ( int i = 0 ; i < var_4 ; i ++ ) { var_1 . method_3 ( ) ; } type_2 . assertequals ( 0 , var_3 ) ; type_2 . assertequals ( var_4 , var_1 . method_1 ( ) . intvalue ( ) ) ; }
[0]: public void update ( type_1 var_1, java.lang.object arg ) { type_2 var_2 = var_3. method_1 ( ). method_2 ( ). method_3 ( ) ; type_3 var_4 = var_5. method_4 ( ). get ( var_2 ) ; if ( type_4. equals ( var_4. getname ( ) ) ) { method_5 ( string_1, true ) ; } }

************

************
tgt: private java.lang.stringbuilder method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; if ( ! ( this . var_3 . isempty ( ) ) ) { var_1 . append ( string_1 ) ; for ( type_1 var_2 : this . var_3 ) { var_1 . append ( var_2 . method_2 ( ) ) ; } var_1 . append ( string_2 ) ; } return var_1 ; }
[0]: private boolean method_1 ( type_1 [ ] var_1 ) { type_2 var_2 = new type_2 ( var_3. method_2 ( ), var_1 ) ; var_2. method_3 ( var_4 ) ; int var_5 = var_2. open ( ) ; var_6 = var_2. method_4 ( ) ; return var_5 == 0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { super . method_1 ( var_1 , var_2 ) ; int var_3 = var_4 . method_2 ( ) ; int var_5 = var_4 . method_3 ( ) ; int var_6 = var_4 . method_4 ( ) ; if ( ( ( var_5 - 1 ) == var_6 ) && ( var_3 > 0 ) ) { var_7 . method_5 ( ) ; } }
[0]: public synchronized void method_1 ( type_1 var_1, type_2 key ) { type_3 var_2 = var_3. get ( key ) ; var_3. remove ( key ) ; var_4. remove ( key ) ; var_5. remove ( key ) ; var_6. remove ( key ) ; if ( var_2!= null ) { var_2. method_2 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? super type_2 > var_1 ) { type_3 . method_2 ( var_1 ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { var_1 . method_3 ( var_2 . method_4 ( ) . get ( i ) , method_5 ( i ) ) ; } }
[0]: public boolean method_1 ( java.lang.object context ) { type_1 var_1 = method_2 ( ( ( android.content.context ) ( context ) ) ) ; var_2 = var_1. getstring ( var_3, null ) ; var_4 = var_1. getstring ( var_5, null ) ; var_6 = type_2. method_3 ( context, null, var_2, type_3. method_4 ( context ) ) ; this. var_7 = null ; return true ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_1 . method_1 ( args ) ; double var_4 = var_2 . method_2 ( var_3 ) ; java.lang.system.out.println ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( ( string_2 + ( var_4 * int_1 ) ) + string_3 ) ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ) ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2 ) throws java.lang.exception { if ( var_1. equals ( string_1 ) ) { method_2 ( var_2 ) ; } if ( var_1. equals ( string_2 ) ) { method_3 ( var_2 ) ; } if ( var_1. equals ( string_3 ) ) { } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = type_1 . method_2 ( var_2 class ) ; type_1 . method_3 ( var_1 . method_4 ( ) ) . method_5 ( var_3 ) ; var_4 = type_1 . method_2 ( var_5 class ) ; var_7 = new type_2 ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { var_1. method_2 ( ( ( ( ( ( var_4. method_3 ( ) ) + ( var_5. method_3 ( ) ) ) + ( var_6. method_3 ( ) ) ) + ( var_7. method_3 ( ) ) ) + ( var_8. method_3 ( ) ) ) ) ; method_4 ( var_1 ) ; }

************

************
tgt: public void update ( ) { var_1 = var_2 . method_1 ( ) . method_2 ( ) ; height = var_2 . method_1 ( ) . method_3 ( ) ; var_3 . update ( ) ; if ( ( type_1 . method_4 ( ) ) != null ) type_1 . method_4 ( ) . update ( ) ; method_5 ( ) ; }
[0]: public void method_1 ( type_1 item ) { type_2 < type_1 >. type_3 var_1 = var_2 ; var_2 = new type_3 ( ) ; var_2. item = item ; var_3 = null ; if ( isempty ( ) ) first = var_2 ; else var_4 = var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1 . method_2 ( ) ) { type_3 var_4 = var_2 . getvalue ( var_5 class ) ; var_6 . settext ( var_7 ) ; var_8 . settext ( java.lang.string . method_4 ( var_9 ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1, int var_2 ) { for ( type_1 var_3 : this. method_2 ( ) ) { if ( var_1. equals ( var_3. method_3 ( ) ) ) { var_3. method_4 ( ( ( var_3. method_5 ( ) ) - 1 ) ) ; break ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int a = 0 ; a < ( var_1 . method_2 ( ) ) ; a ++ ) var_1 . arg ( a ) . method_3 ( this ) ; type_2 var_2 = var_3 . get ( var_1 ) ; type_3 var_4 = var_5 . get ( var_2 ) ; var_5 . set ( var_1 , ( ( type_4 ) ( var_4 ) ) . var_6 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { java.lang.string url = method_2 ( ( ( var_2 ) + ( var_3 ) ) ) ; url = type_3. method_3 ( url, method_4 ( ), false ) ; return method_5 ( url, var_4 class, var_1 ) ; }

************

************
tgt: private void method_1 ( java.lang.integer id , java.util.list < type_1 > var_1 ) { java.lang.string var_2 = var_3 . method_2 ( string_1 ) ; for ( type_1 file : var_1 ) { try { type_2 . method_3 ( new java.io.file ( ( ( ( ( var_2 + string_2 ) + id ) + string_3 ) + ( file . method_4 ( ) ) ) ) , file . method_5 ( ) ) ; } catch ( java.io.ioexception var_4 ) { } } }
[0]: public java.lang.thread method_1 ( int var_1, int var_2 ) { java.lang.thread var_3 = new java.lang.thread ( new type_1 ( var_1, var_2 ) ) ; var_3. start ( ) ; var_4. set ( var_1, ( ( var_4. get ( var_1 ) ) + 1 ) ) ; return null ; }

************

************
tgt: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; return new type_1 ( ( var_1 != null ? ( ( type_3 ) ( var_1 . method_1 ( ) ) ) : null ) , method_3 ( ) , ( ( var_2 ) != null ? new java.util.arraylist < java.lang.long > ( var_2 ) : null ) , var_3 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = null ; type_2 var_4 = null ; try { var_3 = var_4. method_2 ( var_1, var_2 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_3 ( ) ; } return var_3 ; }

************

************
tgt: private boolean method_1 ( final type_1 var_1 , final type_1 var_2 ) { type_1 var_3 = method_2 ( var_1 ) ; if ( var_3 == null ) { return false ; } type_1 var_4 = var_3 . method_3 ( var_5 ) ; if ( var_4 == null ) { return true ; } return ! ( var_4 . equals ( var_2 ) ) ; }
[0]: public type_1 method_1 ( final type_2 var_1 ) { method_2 ( string_1 ) ; var_1. method_2 ( string_2 ) ; if ( ( var_1. getvalue ( ). size ( ) )!= 1 ) { return new type_1 ( false ) ; } return new type_1 ( ( ( method_3 ( ) ) == ( var_1. method_4 ( 0 ) ) ) ) ; }

************

************
tgt: protected type_1 method_1 ( int var_1 ) throws java.lang.classnotfoundexception { if ( ! ( var_2 . method_2 ( var_1 ) ) ) { synchronized ( this ) { if ( ! ( var_2 . method_2 ( var_1 ) ) ) { java.lang.string var_3 = ( ( java.lang.string ) ( type_2 . method_3 ( ) . get ( 0 ) . method_4 ( ) ) ) ; var_2 . put ( var_1 , method_5 ( var_3 , var_1 ) ) ; } } } return var_2 . get ( var_1 ) ; }
[0]: public double method_1 ( double t ) { double var_1 = ( this. var_1 ) * float_1 ; if ( ( t *= int_1 ) < 1 ) { return float_2 * ( ( t * t ) * ( ( ( var_1 + 1 ) * t ) - var_1 ) ) ; } return float_2 * ( ( ( ( t -= int_1 ) * t ) * ( ( ( var_1 + 1 ) * t ) + var_1 ) ) + int_1 ) ; }

************

************
tgt: public void update ( int var_1 ) { switch ( var_1 ) { case var_2 : method_1 ( ) ; ( var_3 ) ++ ; break ; case var_4 : method_1 ( ) ; ( var_5 ) ++ ; break ; case var_6 : method_1 ( ) ; ( var_5 ) -- ; break ; case var_7 : method_1 ( ) ; method_2 ( ) ; break ; default : break ; } }
[0]: public type_1 < type_2 > method_1 ( type_3 < type_2 > param ) { type_1 < type_2 > var_1 = new type_1 < type_2 > ( ) { protected void method_2 ( type_2 item, boolean b ) { super. method_2 ( item, b ) ; if ( item!= null ) { method_3 ( ). method_4 ( item. method_5 ( ) ) ; } else { method_3 ( ). method_6 ( ) ; method_3 ( ). set ( string_1 ) ; } } } ; return var_1 ; }

************

************
tgt: public void method_1 ( float var_1 ) { this . var_2 = var_1 ; method_2 ( var_1 ) ; var_3 . method_3 ( this . var_4 ) ; switch ( var_5 . method_4 ( ) ) { case var_6 : var_5 . method_5 ( var_5 . method_6 ( var_1 ) ) ; method_7 ( var_1 ) ; break ; case var_7 : case var_8 : throw new type_1 ( ( ( string_1 + ( var_5 . method_4 ( ) ) ) + string_2 ) ) ; case var_9 : break ; } }
[0]: private java.lang.string method_1 ( int number ) throws java.lang.exception { java.lang.string value = null ; java.lang.string var_1 = var_2. method_2 ( ) ; java.lang.string var_3 = type_1. method_3 ( var_1 ) ; type_2 var_4 = method_4 ( var_3 ) ; for ( int i = number ; i!= 0 ; i -- ) value = var_4. method_5 ( ) ; return value. trim ( ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( int var_1 , int var_2 ) { java.util.list < type_1 > var_3 = this . method_2 ( ) ; return var_3 . method_1 ( ( var_1 - ( offset ) ) , type_2 . min ( ( ( var_1 - ( offset ) ) + var_2 ) , var_4 ) ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1. method_2 ( ) ) < ( var_2. method_2 ( ) ) ) { return - 1 ; } else if ( ( var_1. method_2 ( ) ) > ( var_2. method_2 ( ) ) ) { return 1 ; } return 0 ; }

************

************
tgt: public void method_1 ( java.lang.string filename ) { if ( filename != null ) { if ( filename . method_2 ( ( ( var_1 ) + string_1 ) ) ) var_2 . settext ( filename . substring ( 0 , ( ( filename . length ( ) ) - int_1 ) ) ) ; else var_2 . settext ( filename ) ; } }
[0]: public void method_1 ( int line, java.lang.string text ) { if ( ( text == null ) || ( text. isempty ( ) ) ) { method_2 ( line ) ; return ; } text = type_1. method_3 ( char_1, text ) ; if ( ( var_1. size ( ) ) <= line ) { method_4 ( line, text ) ; return ; } var_1. get ( line ). method_5 ( text ) ; }

************

************
tgt: public static double method_1 ( type_1 var_1 ) { double var_2 = type_2 . method_2 ( var_1 ) ; double sum = 0 ; for ( double var_3 : var_1 ) { sum += java.lang.math.pow ( ( var_3 - var_2 ) , int_1 ) ; } return type_3 . method_3 ( ( sum / ( ( var_1 . size ( ) ) - 1.0 ) ) ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( ( var_2. get ( i ). method_2 ( ) ) == var_1 ) { return var_2. get ( i ) ; } } return null ; }

************

************
tgt: public boolean method_1 ( java.lang.string args ) { int i = args . method_2 ( "\n" ) ; if ( ( i > 0 ) && ( ( i + 1 ) < ( args.length ( ) ) ) ) { var_1 = args . substring ( 0 , i ) ; id = type_1 . method_3 ( args . substring ( ( i + 1 ) ) ) ; } return ( i > 0 ) && ( ( ( args.length ( ) ) - i ) > 0 ) ; }
[0]: public void method_1 ( java.lang.throwable var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = ( ( var_3 class. getname ( ) ) + ( var_1. method_3 ( ) ) ) + ( var_1. method_2 ( ) ) ; type_1. method_4 ( var_4, var_2 ) ; }

************

************
tgt: private void method_1 ( ) throws type_1 { var_1 . method_2 ( false ) ; var_1 . method_3 ( ) ; var_2 = var_3 . method_4 ( ) ; for ( type_2 var_4 : var_2 ) { var_1 . add ( var_4 . getname ( ) ) ; } var_1 . method_5 ( ) ; }
[0]: private void method_1 ( ) { method_2 ( ) ; if ( ( var_1 ) == ( var_2 ) ) { if ( method_3 ( ) ) { type_1. method_4 ( string_1, ( string_2 + ( var_3 ) ) ) ; method_5 ( ) ; } } if ( ( var_1 ) == ( var_4 ) ) { if ( ( var_5. height ) > ( var_6 ) ) { type_1. method_4 ( string_1, ( string_3 + ( var_3 ) ) ) ; method_5 ( ) ; } } }

************

************
tgt: public type_1 method_1 ( final java.lang.string var_1 , final long var_2 ) { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } type_2 var_3 = method_2 ( var_1 , var_2 ) ; return this . var_5 . method_3 ( var_6 , var_3 , new type_3 ( ) ) ; }
[0]: public static double method_1 ( int i, double [ ] p, double [ ] var_1, double [ ] b ) { double var_2 = 0 ; for ( int var_3 = 0 ; var_3 < ( p. length ) ; var_3 ++ ) { double var_4 = ( p [ i ] ) * ( var_1 [ var_3 ] ) ; var_2 += type_1. method_2 ( var_4 ) ; } return var_2 ; }

************

************
tgt: public int method_1 ( ) { int var_1 = 0 ; for ( type_1 var_2 : this . var_3 ) { if ( ( var_2 . method_2 ( ) ) == string_1 ) { var_1 += int_1 ; } if ( ( var_2 . method_2 ( ) ) == string_2 ) { var_1 += int_2 ; } } return var_1 ; }
[0]: public boolean method_1 ( java.lang.string var_1, type_1 var_2 ) { if ( ( var_3. method_2 ( var_1 ) ) || ( var_1 == ( var_4 ) ) ) { return false ; } var_3. put ( var_1, var_2 ) ; var_5. method_3 ( var_1 ) ; var_6. method_3 ( var_1 ) ; method_4 ( ) ; return true ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { java.io.bufferedreader var_1 = new java.io.bufferedreader ( new type_1 ( var_2 ) ) ; java.lang.system.out.println ( string_1 ) ; var_3 = java.lang.integer.parseint ( var_1 . method_2 ( ) ) ; var_4 = java.lang.integer.parseint ( var_1 . method_2 ( ) ) ; name = var_1 . method_2 ( ) ; var_5 = java.lang.integer.parseint ( var_1 . method_2 ( ) ) ; }
[0]: protected type_1 method_1 ( type_2 var_1, type_3 var_2, type_4 var_3, java.util.set < type_5 > var_4, type_6 var_5 ) { type_1 var_6 = new type_1 ( null, type_7. method_2 ( var_1 ), new type_8 ( var_1 ), var_2, var_3, var_4, type_9. method_3 ( var_5. method_4 ( ) ), type_9. method_5 ( var_5. method_4 ( ) ) ) ; method_6 ( var_6. method_7 ( ), var_5 ) ; return var_6 ; }

************

************
tgt: public java.util.list < java.util.map < java.lang.string , java.lang.object > > method_1 ( java.lang.integer var_1 , java.lang.integer var_2 ) { java.util.list < java.util.map < java.lang.string , java.lang.object > > result = null ; int offset = ( ( var_1 - 1 ) * var_2 ) + 1 ; java.lang.string var_3 = string_1 ; result = method_2 ( ) . query ( var_3 , new java.lang.object [ ] { offset , offset + var_2 } , new type_1 ( ) ) ; return result ; }
[0]: private java.util.calendar method_1 ( java.util.date var_1, type_1 t ) { java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2. method_2 ( var_1 ) ; java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; var_3. method_2 ( t ) ; var_2. set ( var_4, var_3. get ( var_4 ) ) ; var_2. set ( var_5, var_3. get ( var_5 ) ) ; var_2. set ( var_6, var_3. get ( var_6 ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , 0 , 0 ) ; method_3 ( type_3 . method_4 ( ) , method_5 ( 1 ) ) . method_6 ( ) ; method_3 ( var_2 , method_5 ( 1 ) ) . method_7 ( method_8 ( var_3 class ) ) ; }
[0]: public final byte [ ] method_1 ( ) { byte [ ] var_1 = var_2 ; if ( var_1!= null ) return var_1 ; type_1 var_3 = var_4 ; if ( var_3!= null ) var_2 = var_3. method_2 ( ) ; if ( ( var_5 ) == 0 ) return var_2 = new byte [ 0 ] ; return var_2 = method_3 ( ) ; }

************

************
tgt: protected java.util.map < java.lang.string , java.util.list < type_1 > > method_1 ( java.util.map < java.lang.string , java.util.list < type_1 > > var_1 ) { java.util.map < java.lang.string , java.util.list < type_1 > > var_2 = new java.util.hashmap < > ( ) ; method_1 ( var_1 , var_2 ) ; return var_2 ; }
[0]: public type_1 method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = var_2. get ( 0 ) ; return var_1 ; } method_2 ( ) ; var_1 = var_2. get ( ( ( var_2. method_3 ( var_1 ) ) + 1 ) ) ; return var_1 ; }

************

************
tgt: public final java.util.list < type_1 > method_1 ( final byte var_1 , final type_2 var_2 ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; type_1 var_3 ; int i = 0 ; while ( ( var_3 = method_2 ( var_1 , var_2 , i ) ) != null ) { list . add ( i , var_3 ) ; i ++ ; } return list ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. remove ( var_3 ) ; var_2. method_2 ( ) ; var_2. method_3 ( ) ; var_3. method_4 ( this ) ; new java.lang.thread ( new type_2 ( ) { public void method_5 ( ) { method_6 ( ) ; } } ). start ( ) ; java.lang.system.out.println ( string_1 ) ; }

************

************
tgt: public static type_1 < type_2 [ ] > method_1 ( final java.lang.string name , final java.lang.string var_1 ) { type_3 var_2 ; try { var_2 = new type_3 ( var_1 ) ; } catch ( type_4 var_3 ) { throw new type_5 ( ( string_1 + var_1 ) ) ; } return type_6 . method_1 ( name , var_2 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2 = var_1 ; var_3 = var_4. method_2 ( ) ; var_5. method_3 ( this, var_1 ) ; var_6. method_4 ( var_1. getname ( ) ) ; var_6. method_5 ( var_1. method_6 ( ) ) ; var_6. method_7 ( var_3 ) ; method_8 ( ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 temp = null ; for ( type_1 var_2 : var_3 ) { if ( var_1 . trim ( ) . method_2 ( var_2 . name ( ) ) ) { temp = var_2 ; break ; } } return temp ; }
[0]: public int method_1 ( ) { if ( ( var_1 ) == ( ( var_2. length ) - 1 ) ) { var_1 = 0 ; return var_3. list [ ( ( var_1 ) ++ ) ] ; } return var_3. list [ ( ( var_1 ) ++ ) ] ; }

************

************
tgt: public java.lang.integer method_1 ( double var_1 , double var_2 , double offset , boolean var_3 ) { type_1 p = var_4 . method_2 ( var_1 , var_2 , var_5 ) ; int y = ( ( p . y ) - ( var_6 . y ) ) - ( ( method_3 ( ) ) / int_1 ) ; if ( var_3 && ( ( y < 0 ) || ( y > ( method_3 ( ) ) ) ) ) { return null ; } return y ; }
[0]: public void method_1 ( java.lang.void result ) { var_1. set ( var_2 ) ; open. set ( true ) ; if ( method_2 ( ) ) { var_3. method_3 ( new type_1 ( var_4. method_4 ( ), string_1 ) ) ; var_2. method_5 ( ). method_6 ( ) ; } else { var_5. method_7 ( string_2, var_4 ) ; var_6 = var_7 ; var_3. set ( null ) ; } }

************

************
tgt: public boolean method_1 ( int position , java.lang.string var_1 ) { if ( var_2 [ position ] . equals ( var_1 ) ) { return true ; } else { switch ( var_2 [ position ] ) { case string_1 : return false ; case string_2 : return false ; case string_3 : return false ; case string_4 : return false ; case string_5 : return false ; case string_6 : return false ; case string_7 : return false ; case string_8 : return false ; default : return true ; } } }
[0]: public type_1 method_1 ( type_2 file, type_3 var_1 ) throws java.io.ioexception { final java.lang.string var_2 = file. tostring ( ) ; final java.lang.string var_3 = type_4. getname ( var_2 ) ; if ( ( ( var_4 == null ) || ( var_4. method_2 ( var_5, var_3 ) ) ) && ( var_6 || ( file. method_3 ( ). equals ( var_7 ) ) ) ) { var_8. add ( new type_4 ( true, this, var_3 ) ) ; } return var_9 ; }

************

************
tgt: private type_1 method_1 ( type_1 node , java.util.hashmap < type_1 , type_1 > nodes ) { type_1 var_1 = new type_1 ( node . label ) ; nodes . put ( node , var_1 ) ; for ( type_1 var_2 : var_3 ) { type_1 var_4 = nodes . get ( var_2 ) ; if ( var_4 == null ) { var_4 = method_1 ( var_2 , nodes ) ; } var_5 . add ( var_4 ) ; } return var_1 ; }
[0]: public type_1 method_1 ( java.util.map < java.lang.integer, java.util.map < java.lang.integer, type_1 > > var_1, int var_2, int var_3 ) { type_1 var_4 = null ; if ( var_2 >= ( var_5 ) ) { var_2 = var_5 ; var_3 = var_6 ; } try { var_4 = var_1. get ( var_2 ). get ( var_3 ) ; } catch ( java.lang.nullpointerexception var_7 ) { var_4 = null ; } var_4. method_2 ( var_2 ) ; var_4. method_3 ( var_3 ) ; return var_4 ; }

************

************
tgt: public type_1 method_1 ( java.lang.integer var_1 , java.lang.integer var_2 , type_2 var_3 ) throws type_3 , type_4 { type_5 var_4 = var_5 . method_2 ( var_1 ) ; type_5 var_6 = var_5 . method_2 ( var_2 ) ; if ( ! ( var_7 . method_3 ( var_6 , var_4 . method_4 ( ) ) ) ) { throw new type_6 ( string_1 ) ; } return var_8 . method_5 ( var_6 , var_4 , var_3 ) ; }
[0]: public synchronized void method_1 ( ) throws java.io.ioexception { type_1. method_2 ( ( string_1 + ( var_1. getname ( ) ) ) ) ; if ( ( var_1 )!= null ) { var_1. method_3 ( ) ; var_1. method_1 ( ) ; } if ( ( var_2 )!= null ) { var_2. method_1 ( ) ; var_2 = null ; } if ( ( var_3. output )!= null ) { var_4. method_1 ( ) ; var_3. output = null ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , type_2 var_2 , type_3 var_3 ) { type_1 info = new type_1 ( var_1 , var_3 ) ; var_2 . add ( info ) . method_2 ( ) . method_4 ( ) . method_5 ( ) . method_3 ( ) ; return info ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { if ( ( type_3. method_2 ( ) ) == 0 ) { var_1. method_3 ( ( ( var_1. method_4 ( ) ) * int_1 ) ) ; var_1. method_5 ( ( ( method_6 ( ) ) - ( ( var_1. method_4 ( ) ) / int_1 ) ) ) ; type_3. method_7 ( 1 ) ; } type_3. method_8 ( int_2 ) ; remove ( method_9 ( ). method_10 ( ) ) ; } } }

************

************
tgt: public type_1 method_1 ( java.lang.integer id ) { try { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . method_3 ( string_2 , var_3 . method_2 ( id ) ) ; var_1 . method_3 ( string_3 , string_4 ) ; return var_1 ; } catch ( java.lang.exception var_4 ) { return list ( ) ; } }
[0]: private long method_1 ( java.lang.string var_1 ) { try { type_1 var_2 = new type_1 ( new type_2 ( method_2 ( new java.io.fileinputstream ( var_1 ) ) ) ) ; var_2. method_3 ( ) ; return ( var_2. method_4 ( ). method_5 ( ). method_6 ( ) ) / ( var_2. method_4 ( ). method_5 ( ). method_7 ( ) ) ; } catch ( java.io.ioexception var_3 ) { type_3. method_8 ( string_1, var_3. method_9 ( ) ) ; } return 0 ; }

************

************
tgt: public boolean method_1 ( int var_1 , type_1 [ ] var_2 ) { for ( type_1 a : var_2 ) { for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { if ( var_3 [ i ] . name . equals ( name ) ) { return method_1 ( var_1 , var_4 [ i ] ) ; } } } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_1 ; if ( ( var_2. method_2 ( ) ) && (! ( var_3. contains ( var_2 ) ) ) ) { var_3. add ( var_2 ) ; } var_4. method_3 ( ). method_4 ( var_5, var_3 ) ; var_4. method_3 ( ). method_5 ( var_5, var_2 ) ; method_6 ( ) ; method_7 ( ) ; var_4. method_8 ( ). method_9 ( var_6, string_1 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; type_2 . method_3 ( var_1 . method_4 ( ) ) ; var_2 . method_5 ( new type_3 ( var_3 ) , update , var_1 ) ; var_1 . method_6 ( true ) ; var_2 . method_5 ( new type_3 ( var_3 ) , update , var_1 ) ; type_4 var_4 = method_7 ( var_1 ) ; type_2 . asserttrue ( var_4 . method_4 ( ) ) ; }
[0]: void method_1 ( long var_1 ) { long var_2 = var_3 ; type_1 < type_2 > var_4 = var_5 ; for ( ; ; ) { type_2 var_6 = var_4. method_2 ( ) ; if ( ( var_6 == null ) || ( ( var_7 ) > var_1 ) ) { break ; } var_4. method_3 ( ) ; var_3 = var_7 ; var_6. method_4 ( ) ; } var_3 = var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) return ; android.widget.linearlayout var_2 = ( ( android.widget.linearlayout ) ( method_2 ( var_3 ) ) ) ; type_1 var_4 ; var_4 = type_1 . method_3 ( var_1 , int_1 , int_2 , false ) ; type_2 var_5 = new type_2 ( this ) ; var_5 . method_4 ( var_4 ) ; var_2 . method_5 ( var_5 ) ; }
[0]: private void init ( ) { if ( (! ( var_1 ) ) && ( ( method_1 ( ) )!= null ) ) { synchronized ( this ) { if ( (! ( var_1 ) ) && ( ( method_1 ( ) )!= null ) ) { var_2. method_2 ( method_1 ( ). method_3 ( ) ) ; var_1 = true ; } } } } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != ( - 1 ) ) { type_1 . method_2 ( new type_2 ( ) { public void method_1 ( ) { type_3 var_2 = new type_3 ( ) ; var_2 . method_3 ( var_1 ) ; var_3 . method_4 ( var_2 ) ; } } ) ; var_4 . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.lang.integer var_3 ) { var_4 = ( ( type_3 ) ( method_2 ( var_5 ) ) ) ; type_4. method_3 ( string_1, ( string_2 + ( var_4 ) ) ) ; type_5 var_6 = new type_5 ( new type_6 ( var_4, var_7 ) ) ; var_2. method_4 ( var_6 ) ; var_4. method_5 ( var_2, var_7 ) ; type_4. method_3 ( string_1, string_3 ) ; }

************

************
tgt: private static float [ ] method_1 ( float [ ] var_1 ) { float [ ] result = new float [ var_1 . length ] ; for ( int i = 0 ; i < ( result . length ) ; ++ i ) { result [ i ] = ( var_1 [ i ] ) + ( type_1 . method_3 ( ) ) ; } return result ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws type_2 { type_3 var_3 = null ; try { type_4. method_2 ( var_1 ) ; type_4. method_3 ( var_2 ) ; return type_1. method_4 ( var_3, var_1, var_2 ) ; } catch ( type_5 var_4 ) { throw new type_6 ( string_1 ) ; } catch ( type_7 var_4 ) { throw new type_8 ( string_2 ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { final type_1 var_2 = ( ( type_1 ) ( type_2 . method_2 ( ) . method_3 ( var_3 ) ) ) ; var_1 = var_2 . method_4 ( ) ; } else { type_3 . method_5 ( var_4 , string_1 ) ; } }
[0]: public void method_1 ( ) { method_2 ( ) ; type_1 var_1 = new type_1 ( var_2, var_3, var_4, var_5 ) ; type_2 var_6 = method_3 ( var_2 ) ; type_3. method_4 ( var_7 ) ; var_7. method_5 ( type_4. method_6 ( var_6 ) ) ; type_3. method_7 ( var_7 ) ; var_8. event ( new type_5 ( var_9, var_1 ) ) ; type_3. method_8 ( var_7 ) ; }

************

************
tgt: public final void method_1 ( final java.lang.string var_1 , final type_1 response ) throws java.io.ioexception { java.util.map < java.lang.string , java.lang.object > parameters = new type_3 ( ) . method_2 ( var_1 , new type_4 < java.util.map < java.lang.string , java.lang.object > > ( ) { } ) ; response . method_3 ( ) . method_4 ( new type_3 ( ) . method_5 ( var_2 . method_1 ( parameters ) ) ) ; }
[0]: public java.util.list < java.lang.double > method_1 ( java.util.list < java.lang.double > var_1, java.util.list < java.lang.double > var_2 ) { java.util.list < java.lang.double > var_3 = new java.util.arraylist < java.lang.double > ( ) ; int size = var_1. size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { var_3. set ( i, ( ( var_1. get ( i ) ) * ( var_2. get ( i ) ) ) ) ; } return var_3 ; }

************

************
tgt: public void add ( int var_1 ) { if ( ( var_1 > ( ( var_2 . size ( ) ) - 1 ) ) || ( var_1 < 0 ) ) { java.lang.system.out.println ( string_1 ) ; } else { var_3 . add ( var_2 . get ( var_1 ) ) ; java.lang.system.out.println ( ( ( var_2 . get ( var_1 ) . getname ( ) ) + string_2 ) ) ; var_4 += var_3 . get ( ( ( var_3 . size ( ) ) - 1 ) ) . method_1 ( ) ; } }
[0]: private void method_1 ( type_1 var_1, java.io.inputstream var_2 ) throws java.io.ioexception { type_2 var_3 = var_1. method_2 ( ) ; try { type_3. method_3 ( var_2, var_3, int_1 ) ; var_3. method_4 ( ) ; } finally { var_2. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.charsequence c ) { if ( ( ( ( var_1 ) == null ) || ( ( var_1 ) == "0" ) ) && ( c != string_1 ) ) { var_1 = ( ( java.lang.charsequence ) ( c ) ) ; } else if ( c == string_1 ) { var_1 = "0" ; } else { var_1 = ( var_1 . tostring ( ) ) + c ; } }
[0]: private static final java.lang.string method_1 ( java.io.file file ) throws java.io.ioexception { type_1 var_1 ; try { var_1 = type_1. method_2 ( string_1 ) ; } catch ( type_2 var_2 ) { var_1 = null ; } try ( java.io.inputstream var_3 = new java.io.fileinputstream ( file ) ) { new type_3 ( var_3, var_1 ) ; } return new type_4 ( 1, var_1. method_3 ( ) ). tostring ( int_1 ) ; }

************

************
tgt: private void method_1 ( final java.util.list < java.lang.string > var_1 ) { if ( null != var_1 ) { synchronized ( var_2 ) { java.util.map < java.lang.string , java.lang.integer > var_3 = var_4 . method_2 ( ) ; for ( java.lang.string var_5 : var_1 ) { var_2 . remove ( var_5 ) ; var_3 . put ( var_5 , var_6 ) ; } var_4 . method_3 ( var_3 ) ; } } var_7 = false ; }
[0]: public boolean method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : { type_1 var_3 = new type_1 ( ) ; var_4. method_2 ( var_3 ) ; method_3 ( var_4 ) ; return false ; } case var_5 : { method_3 ( var_6 ) ; return false ; } case var_7 : { var_8. method_4 ( ) ; method_3 ( var_8 ) ; return false ; } default : { return true ; } } }

************

************
tgt: public java.lang.object method_1 ( java.lang.string key ) { java.lang.object result = null ; try { result = this . var_1 . get ( key ) ; } catch ( type_1 var_2 ) { if ( this . var_3 . error ( this , string_1 , var_4 , key ) ) { throw var_2 ; } } return result ; }
[0]: public java.lang.boolean method_1 ( type_1 var_1 ) { final boolean var_2 =! ( type_2. method_2 ( var_1. name ( ) ) ) ; final boolean var_3 =! ( type_2. method_2 ( var_1. method_3 ( ) ) ) ; return var_2 || var_3 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 ) { java.lang.string var_3 = var_1 . method_2 ( ) ; java.lang.string var_4 ; try { var_4 = var_3 . substring ( int_1 ) ; } catch ( java.lang.nullpointerexception var_5 ) { var_3 = string_1 ; var_4 = string_2 ; } catch ( type_2 var_5 ) { var_4 = string_2 ; } var_1 . method_3 ( ( var_2 + var_4 ) ) ; }
[0]: public final void execute ( final type_1 <? super type_2 > var_1, final type_1 < java.lang.throwable > var_2, type_3 param ) { type_4. method_1 ( var_1, string_1 ) ; type_4. method_1 ( var_2, string_2 ) ; execute ( new type_5 < type_2 > ( ) { public void method_2 ( ) { } public void method_3 ( final java.lang.throwable var_3 ) { var_2. method_4 ( var_3 ) ; } public void method_5 ( final type_2 result ) { var_1. method_4 ( result ) ; } } ) ; } }

************

************
tgt: public void method_1 ( ) { int [ ] var_1 = var_2 . method_2 ( ) ; if ( ( var_1 . length ) > 0 ) { method_3 ( ) . method_4 ( var_1 , 1 ) ; method_5 ( method_6 ( var_1 , ( - 1 ) ) ) ; } }
[0]: public void method_1 ( long var_1 ) { type_1. method_2 ( var_2 ) ; type_1. method_2 ( ( ( var_3 ) > 0 ) ) ; var_1 = ( var_4. method_3 ( ) )? 0 : var_1 ; long var_5 = ( method_4 ( ) )? var_6 : var_7 ; var_7 = var_1 ; var_8 = var_1 ; if ( var_5 == var_1 ) { return ; } method_5 ( var_1 ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = null ; if ( var_2 . method_2 ( ) ) { var_3 = type_3 . method_3 ( var_1 , var_4 , var_5 , var_2 . method_4 ( ) , var_2 . method_5 ( ) ) ; } else { var_3 = type_3 . method_3 ( var_1 , var_4 , var_7 , var_2 . method_4 ( ) , var_2 . method_5 ( ) ) ; } return var_3 ; }
[0]: public void method_1 ( java.lang.string key, java.lang.object value ) { if ( ( ( key. equals ( string_1 ) ) == true ) && (! ( value. equals ( string_2 ) ) ) ) { method_2 ( var_1. getstring ( ( ( java.lang.string ) ( value ) ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { for ( int position = 0 ; position < ( var_2 . size ( ) ) ; position ++ ) { if ( method_2 ( position ) . method_3 ( ) ) { var_2 . remove ( position ) ; type_2 . method_4 ( position ) ; position -- ; } } }
[0]: public void method_1 ( type_1 var_1, int status, int var_2 ) { java.lang.string var_3 ; if ( var_2 == ( var_4 ) ) { var_3 = var_5 ; var_6 = var_7 ; method_2 ( var_3 ) ; var_8. method_3 ( ) ; } else if ( var_2 == ( var_9 ) ) { var_3 = var_10 ; var_6 = var_11 ; method_2 ( var_3 ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) + string_3 ) + ( var_3 ) ) + string_4 ) + ( var_4 ) ) + string_5 ) + ( var_5 ) ) + string_6 ) + ( var_6 ) ) + string_7 ) + ( var_7 . tostring ( ) ) ) + string_8 ) + ( var_8 ) ) + string_9 ; }
[0]: public boolean method_1 ( final type_1 < type_2 > var_1 ) { type_2 var_2 = ( var_1. method_2 ( ) )? type_3. method_3 ( var_1. data ( ) ) : var_3 ; return! ( method_4 ( ). method_5 ( ). equals ( var_2. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( boolean b ) { if ( ( var_1 ) == null ) { method_2 ( new android.content.intent ( var_2 , type_1 . method_3 ( var_3 ) ) ) ; } else { var_1 . open ( this , var_3 , getstring ( var_4 ) ) ; } if ( ( var_5 ) != null ) { var_5 . method_4 ( var_6 , getstring ( var_7 ) ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( ( type_1. method_2 ( this ) ) && (! ( type_1. method_3 ( this ) ) ) ) { method_4 ( type_2. method_5 ( ), string_1 ) ; } else { type_1. method_6 ( this ) ; method_9 ( ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; int i = 1 ; for ( type_1 var_2 : this ) { var_1 += ( ( ( string_1 + i ) + string_2 ) + ( var_2 . tostring ( ) ) ) + "\n" ; i ++ ; } return var_1 ; }
[0]: public type_1 method_1 ( ) { init ( ) ; if ( ( var_1 ) == null ) { synchronized ( this ) { if ( ( var_1 ) == null ) { type_2 var_2 = method_2 ( ) ; if ( var_2 == null ) { var_1 = var_3. method_1 ( ) ; } else { var_1 = var_2. method_3 ( var_3. method_1 ( ) ) ; } } } } return var_1 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.util.list < type_3 > var_2 = method_2 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_3 var_4 : var_2 ) { var_3 . add ( var_4 . getname ( ) ) ; } return null ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2. gettime ( ), var_3. gettime ( ), var_3. method_2 ( ), var_4 ) ; type_2 var_5 = new type_2 ( this ) ; if ( ( var_6 ) == ( var_7 ) ) { var_5. method_3 ( var_1 ) ; } else if ( ( var_6 ) == ( var_8 ) ) { var_5. method_4 ( var_1, var_6 ) ; } else { var_5. method_5 ( var_1, var_9 ) ; } }

************

************
tgt: public void method_1 ( type_1 node ) { var_1 = true ; method_2 ( ) ; type_2 var_2 = ( ( type_2 ) ( node . method_3 ( ) ) ) ; method_4 ( ) . method_5 ( var_2 ) ; var_3 . method_6 ( var_2 ) ; var_4 . update ( var_2 ) ; method_7 ( ) ; }
[0]: public void method_1 ( int var_1, java.lang.string var_2 ) { if ( ( var_1 < 0 ) || ( var_1 >= ( this. var_3. length ) ) ) { java.lang.system.out.println ( string_1 ) ; return ; } if ( ( var_2 == null ) || ( var_2. equals ( string_2 ) ) ) { java.lang.system.out.println ( string_3 ) ; return ; } this. var_3 [ ( var_1 - 1 ) ]. method_2 ( ) ; this. var_3 [ ( var_1 - 1 ) ]. method_3 ( var_2 ) ; }

************

************
tgt: public boolean method_1 ( type_1 data ) { if ( method_2 ( ) ) { var_1 . method_3 ( data ) ; var_2 = var_1 ; ( size ) ++ ; return true ; } else { type_2 < type_1 > var_3 = new type_2 < type_1 > ( data ) ; var_3 . method_4 ( var_1 ) ; var_1 . method_5 ( var_3 ) ; var_1 = var_3 ; ( size ) ++ ; return true ; } }
[0]: private void method_1 ( ) { if ( ( java.lang.double. tostring ( value ). length ( ) ) < int_1 ) { var_1 = java.lang.double. tostring ( value ). length ( ) ; height = 1 ; } else { var_1 = int_1 ; height = ( ( java.lang.double. tostring ( value ). length ( ) ) / ( var_1 ) ) + 1 ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( params ) ; var_1 . method_3 ( ) ; var_1 . method_3 ( ) ; java.util.list < type_1 > var_2 = var_1 . method_4 ( ) ; asserttrue ( var_3 . method_5 ( var_2 ) ) ; asserttrue ( var_2 . method_5 ( var_3 ) ) ; }
[0]: public void method_1 ( final type_1 var_1 ) throws java.io.ioexception { if ( ( ( var_2 )!= null ) || ( ( var_3 )!= null ) ) { method_2 ( var_1 ) ; } else { var_1. method_3 ( this. b, this. var_4, this. var_5 ) ; } var_1. method_4 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( var_1 ) { method_2 ( ) ; final type_1 var_2 = new type_1 ( ) ; final type_2 var_3 = new type_2 ( ) { public void method_4 ( ) { var_4 . method_5 ( var_5 , var_6 , null , var_7 ) ; } } ; var_2 . method_6 ( var_3 , int_1 ) ; } else { var_4 . method_5 ( var_5 , var_6 , null , var_7 ) ; } }
[0]: private type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws type_2 { type_3 var_3 = ( ( type_3 ) ( var_4 ) ) ; type_4 var_5 = method_2 ( var_3 ) ; type_5 answer = var_5. method_3 ( var_2, var_1, false, var_6, false, true, false, null ) ; return answer == null? null : answer. type ; }

************

************
tgt: public synchronized java.util.list < java.lang.string > method_1 ( final java.lang.string var_2 , final java.lang.string var_1 ) { java.lang.string url = method_2 ( var_1 , var_2 , string_1 ) ; java.lang.string var_3 = method_3 ( url , var_4 , method_4 ( ) ) . method_5 ( ) ; return java.util.arrays.aslist ( var_3 . split ( string_2 ) ) ; }
[0]: public void method_1 ( ) { try { if ( var_1 ) var_2. method_2 ( ) ; var_2 = type_1. method_3 ( ) ; type_2 var_3 = type_1. method_4 ( var_4 class. method_5 ( ( string_1 + ( var_5. getname ( ) ) ) ) ) ; var_2. open ( var_3 ) ; var_2. start ( ) ; var_1 = true ; } catch ( java.lang.exception var_6 ) { var_6. method_6 ( ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_5 ) { type_1 var_2 = var_3 . method_2 ( ( ( var_5 . getname ( ) ) + ( var_4 ) ) , null ) ; var_3 . method_5 ( var_2 , new type_3 ( var_5 , var_6 ) ) ; return var_2 ; }
[0]: public type_1 method_1 ( java.lang.long var_1 ) { if ( method_2 ( var_1 ). method_3 ( ). equals ( var_2. method_4 ( ) ) ) { type_1 var_3 = new type_1 ( ) ; var_3. method_5 ( method_2 ( var_1 ) ) ; var_3. method_6 ( var_2. method_4 ( ) ) ; return var_3 ; } return null ; }

************

************
tgt: private static type_1 method_1 ( java.lang.string var_1 ) { switch ( var_1 . tolowercase ( ) ) { case string_1 : return var_2 ; case string_2 : return var_3 ; case string_3 : return var_4 ; case string_4 : return var_5 ; case string_5 : return var_6 ; case string_6 : return var_7 ; case string_7 : return var_8 ; case string_8 : return var_9 ; case string_9 : return var_10 ; case string_10 : return var_11 ; case string_11 : return var_12 ; default : type_2 . method_2 ( string_12 , var_1 ) ; return var_13 ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( ) ; type_3 data = new type_3 ( ) ; data. put ( ""name"", var_1. getname ( ) ) ; data. put ( string_1, var_1. method_3 ( ) ) ; data. put ( string_2, var_1. method_4 ( ) ) ; data. put ( string_3, var_1. method_5 ( ) ) ; data. put ( string_4, var_1. method_6 ( ) ) ; var_2. method_1 ( string_5, null, data ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { int [ ] var_1 = method_2 ( ) ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { var_3 . method_3 ( var_4 [ var_1 [ i ] ] , ( ( var_1 [ i ] ) * ( var_5 ) ) ) ; } assertthat ( var_3 . method_4 ( ) , method_5 ( var_6 ) ) ; }
[0]: public void method_1 ( type_1 message ) { try { var_1. method_2 ( ) ; if ( ( message. method_3 ( ) ) == null ) { method_4 ( message ) ; } else { method_5 ( message. method_6 ( ), message. method_7 ( ), message. method_3 ( ) ) ; } } catch ( java.lang.exception var_2 ) { method_5 ( message. method_6 ( ), message. method_8 ( ), var_2 ) ; } }

************

************
tgt: public type_1 method_1 ( int size ) { type_2 var_1 = new type_2 ( ( ( this . method_2 ( ) ) + ( size / int_1 ) ) , ( ( this . method_3 ( ) ) + ( size / int_1 ) ) , ( ( size / int_1 ) + int_2 ) ) ; var_1 . method_4 ( 0 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = this. var_3. method_2 ( 0 ) ; type_2 var_4 = method_3 ( var_1 ) ; var_4. method_4 ( var_2 ) ; this. var_5. put ( var_1, var_4 ) ; var_1. method_5 ( java.lang.string.format ( string_1, ( var_2 + 1 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 . method_2 ( var_2 ) ) ) { return ; } java.util.list < type_1 > var_3 = var_4 . method_3 ( var_5 , new type_2 ( ) ) ; boolean var_8 = method_5 ( var_5 , var_3 ) ; if ( ! var_8 ) { return ; } method_6 ( var_2 , var_5 ) ; method_7 ( var_5 , var_3 ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.stringbuilder path = new java.lang.stringbuilder ( ) ; for ( type_2 var_2 : var_1. method_2 ( ) ) { if ( ( path. length ( ) ) > 0 ) { path. append ( char_1 ) ; } path. append ( type_3. method_3 ( var_2. tostring ( ) ) ) ; } return path. tostring ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2 . method_2 ( type_3 . method_3 ( string_1 ) . method_4 ( var_1 . tolowercase ( ) ) ) ; type_1 var_3 = var_4 . method_5 ( var_2 , var_5 class , var_6 ) ; return var_3 ; }
[0]: public boolean remove ( type_1 key ) { if ( ( var_1 )!= null ) { java.util.iterator < type_1 > var_2 = var_1. iterator ( ) ; while ( var_2. method_1 ( ) ) { type_1 var_3 = var_2. method_2 ( ) ; if ( var_3. equals ( key ) ) { return true ; } } } return false ; } }

************

************
tgt: public void method_1 ( type_1 type_2 , type_3 var_1 ) { super . method_1 ( type_2 , var_1 ) ; method_2 ( var_1 . method_3 ( ) ) ; type_4 state = this . var_2 . method_4 ( this . var_3 ) ; this . var_2 . method_5 ( this . var_3 , state , state , int_1 ) ; }
[0]: private type_1 [ ] method_1 ( type_1 [ ] var_1, type_1 [ ] var_2 ) { java.util.set < type_1 > var_3 = new java.util.hashset < type_1 > ( ) ; var_3. method_2 ( java.util.arrays.aslist ( var_1 ) ) ; var_3. method_2 ( java.util.arrays.aslist ( var_2 ) ) ; return var_3. method_3 ( new type_1 [ 0 ] ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , type_1 var_2 ) { try { java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; new type_2 ( var_4 ) . method_2 ( var_1 , new type_3 ( var_5 , var_3 , var_2 ) ) ; return var_3 . tostring ( ) ; } catch ( java.lang.exception var_6 ) { return var_1 ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { var_2. method_2 ( ) ; switch ( var_1. method_3 ( ) ) { case var_3 : method_4 ( string_1, null, var_4 ) ; break ; case var_5. update : type_2. method_5 ( getactivity ( ) ) ; break ; case var_6 : method_6 ( ) ; break ; case var_7 : method_4 ( string_2, null, var_4 ) ; break ; default : break ; } return true ; }

************

************
tgt: public boolean method_1 ( type_1 view , java.lang.string url ) { if ( ( ( url . startswith ( string_1 ) ) || ( url . startswith ( string_2 ) ) ) || ( url . startswith ( string_3 ) ) ) { android.content.intent intent = new android.content.intent ( var_1 , type_2 . method_3 ( url ) ) ; method_4 ( intent ) ; } return true ; }
[0]: private void method_1 ( ) { final type_1 var_1 = method_2 ( string_1, method_3 ( ) ) ; this. add ( var_1, var_2 ) ; var_3 = new type_2 ( type_3. method_4 ( ). method_5 ( ), null, new type_4 ( ), false, true ) ; this. add ( var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { type_3 var_3 = var_4 . method_3 ( position ) ; type_4 var_5 = type_4 . method_4 ( var_3 . method_5 ( ) ) ; android.content.intent var_6 = new android.content.intent ( var_7 , var_5 ) ; method_6 ( var_6 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : java.lang.system.out.println ( ( string_1 + ( type_1. method_2 ( ) ) ) ) ; var_3 = true ; method_3 ( ( ( android.widget.button ) ( var_1 ) ) ) ; break ; case var_4 : var_3 = false ; method_3 ( ( ( android.widget.button ) ( var_1 ) ) ) ; break ; } }

************

************
tgt: public void method_1 ( ) { if ( ! ( method_3 ( ) ) ) { return ; } if ( ! ( method_4 ( ) ) ) { return ; } android.content.intent var_3 = new android.content.intent ( context , var_4 class ) ; type_2 var_5 = ( ( type_2 ) ( context ) ) ; var_5 . method_5 ( var_3 , var_6 ) ; }
[0]: public void method_1 ( int var_1 ) { type_1 var_2 = var_3. get ( var_1 ) ; var_4 = y ; if ( ( var_5 ) == 0 ) { method_2 ( ) ; } if ( var_3. get ( var_1 ). var_6 ) { ( var_5 ) -- ; } method_3 ( ) ; method_4 ( ) ; method_3 ( ) ; }

************

************
tgt: public void update ( type_1 var_1 , java.lang.object arg ) { type_2 var_2 = var_3 . method_1 ( ) . method_2 ( ) . method_3 ( ) ; type_3 var_4 = var_5 . method_4 ( ) . get ( var_2 ) ; if ( var_4 != null ) { if ( type_4 . equals ( var_4 . getname ( ) ) ) { method_5 ( string_1 , true ) ; } } }
[0]: private java.util.arraylist < java.lang.boolean > method_1 ( java.util.arraylist < java.lang.boolean > var_1, java.util.arraylist < java.lang.boolean > var_2 ) { java.util.arraylist < java.lang.boolean > result = new java.util.arraylist < java.lang.boolean > ( ) ; result. add ( false ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( ( var_2. get ( i ) ) == true ) { result = method_2 ( result, var_1, i ) ; } } return result ; }

************

************
tgt: private boolean method_1 ( java.util.list < type_1 > var_1 ) { type_2 var_2 = new type_2 ( var_3 . method_2 ( ) , var_1 ) ; var_2 . method_3 ( var_4 ) ; int var_5 = var_2 . open ( ) ; var_6 = var_2 . method_4 ( ) ; return var_5 == 0 ; }
[0]: type_1 method_1 ( java.lang.string key ) { type_2 var_1 = method_2 ( key ) ; if ( var_1 == null ) throw new type_3 ( ( string_1 + key ) ) ; return new type_1 ( java.lang.float. method_3 ( element. method_4 ( string_2 ) ), java.lang.float. method_3 ( element. method_4 ( string_3 ) ) ) ; }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 , type_2 key ) { type_3 var_2 = var_3 . get ( key ) ; var_3 . remove ( key ) ; var_5 . remove ( key ) ; var_6 . remove ( key ) ; if ( var_2 != null ) { } }
[0]: public java.util.list < java.lang.integer > method_1 ( java.lang.string var_1, java.util.list < java.lang.object > var_2, java.lang.object var_3 ) { java.util.list < java.lang.integer > var_4 = super. method_1 ( var_1, var_2, var_3 ) ; var_5. method_2 ( var_3, null, var_6 ) ; return var_4 ; }

************

************
tgt: public boolean method_1 ( java.lang.object context ) { type_1 var_1 = method_2 ( ( ( android.content.context ) ( context ) ) ) ; var_2 = var_1 . getstring ( var_3 , null ) ; var_4 = var_1 . getstring ( var_5 , null ) ; if ( ( var_2 ) != null ) { var_6 = type_2 . method_3 ( context , null , var_2 , type_3 . method_4 ( context ) ) ; } this . var_7 = null ; return true ; }
[0]: public void put ( java.lang.string var_1, java.lang.object value ) { if ( value == null ) { var_2. put ( var_1, new type_1 ( var_1, null, var_3 ) ) ; } var_2. put ( var_1, new type_1 ( var_1, value, var_4 ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) throws java.lang.exception { if ( var_1 . equals ( string_1 ) ) { method_2 ( var_2 ) ; } if ( var_1 . equals ( string_2 ) ) { method_3 ( var_2 ) ; } if ( var_1 . equals ( string_3 ) ) { type ( var_2 ) ; } }
[0]: public static type_1 method_1 ( java.lang.string name, type_2 <? > var_1, final type_3 var_2, java.lang.string var_3 ) { if ( name == null ) { type_4. error ( string_1 ) ; return null ; } if ( var_1 == null ) { var_1 = type_5. method_2 ( ) ; } type_1. method_3 ( new type_1 ( name, var_2, var_1, true ) ) ; return type_1. method_4 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { var_1 . method_2 ( var_4 . method_3 ( ) ) ; var_1 . method_2 ( var_5 . method_3 ( ) ) ; var_1 . method_2 ( var_6 . method_3 ( ) ) ; var_1 . method_2 ( var_7 . method_3 ( ) ) ; var_1 . method_2 ( var_8 . method_3 ( ) ) ; method_4 ( var_1 ) ; }
[0]: public type_1 method_1 ( final type_2 var_1, final type_3 var_2, final type_4 context ) { final type_5 result = new type_5 ( ) ; result. method_2 ( string_1, var_1. method_3 ( ). method_4 ( ) ) ; result. method_2 ( string_2, java.lang.string. method_5 ( var_1. method_6 ( ) ) ) ; return result ; }

************

************
tgt: public void method_1 ( type_1 item ) { if ( isempty ( ) ) first = var_2 = new type_3 ( item ) ; else { type_2 < type_1 > . type_3 var_1 = var_2 ; var_2 = new type_3 ( item ) ; var_4 = var_2 ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { type_1. method_1 ( ) ; type_2 var_1 = new type_2 ( ) ; try { var_1. method_2 ( type_1. method_3 ( ) ) ; var_1. method_4 ( type_1. method_3 ( ) ) ; type_3 var_2 = new type_3 ( ) ; var_2. method_5 ( ) ; } catch ( java.lang.exception var_3 ) { var_3. method_6 ( ) ; } }

************

************
tgt: public int method_1 ( java.lang.string var_1 , int var_2 ) { for ( type_1 var_3 : this . method_2 ( ) ) { if ( var_1 . equals ( var_3 . method_3 ( ) ) ) { var_3 . method_4 ( ( ( var_3 . method_5 ( ) ) - 1 ) ) ; break ; } } return 1 ; }
[0]: private void method_1 ( ) { this. var_1 = var_2 ; this. var_3 = new java.util.hashmap < > ( ) ; type_1. method_2 ( this. var_4, this. var_5 ) ; try { java.lang.thread. method_3 ( int_1 ) ; } catch ( type_2 var_6 ) { var_6. method_4 ( ) ; } if ( this. method_5 ( this. var_5 ) ) { type_1. method_6 ( this. var_4, this. var_7 ) ; } else { this. method_7 ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { java.lang.string url = method_2 ( ( ( var_2 ) + ( var_3 ) ) ) ; url = method_3 ( url , method_4 ( ) , false ) ; return method_5 ( url , var_4 class , var_1 ) ; }
[0]: public type_1 method_1 ( type_1 var_1, int [ ] [ ] var_2 ) { type_1 temp = var_1. method_2 ( ) ; temp. method_3 ( ( ( var_1. method_4 ( ) [ 0 ] ) - 1 ), var_1. method_4 ( ) [ 1 ] ) ; method_5 ( temp, var_2 ) ; return temp ; }

************

************
tgt: public java.lang.thread method_1 ( int var_1 , int var_2 ) { java.lang.thread var_3 = new java.lang.thread ( new type_1 ( var_1 , var_2 , this ) ) ; var_3 . start ( ) ; var_4 . set ( var_1 , ( ( var_4 . get ( var_1 ) ) + 1 ) ) ; return null ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { if ( var_1!= null ) { var_2. show ( var_3 ) ; this. var_4 = new java.util.arraylist < type_1 > ( var_1 ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { type_2 var_5 = new type_2 ( var_3, this ) ; var_5. execute ( var_1. get ( i ) ) ; } } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = null ; type_2 var_4 = null ; try { var_4 = new type_2 ( ) ; var_3 = var_4 . method_2 ( var_1 , var_2 ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_3 ( ) ; } return var_3 ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if (! ( var_1 instanceof type_1 ) ) { return false ; } else { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( this. getname ( ). equals ( var_2. getname ( ) ) ) && ( ( this. getid ( ) ) == ( var_2. getid ( ) ) ) ; } }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 ) { method_2 ( string_1 ) ; var_1 . method_2 ( string_2 ) ; if ( ( var_1 . getvalue ( ) . size ( ) ) != 1 ) { return new type_1 ( false ) ; } return new type_1 ( method_3 ( ) . method_1 ( var_1 . method_4 ( 0 ) ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ). method_6 ( ). replace ( var_5, new type_3 ( ) ). commit ( ) ; method_7 ( ). method_8 ( true ) ; }

************

************
tgt: public double method_1 ( double t ) { if ( ( t *= int_1 ) < 1 ) { return float_2 * ( ( t * t ) * ( ( ( ( var_1 ) + 1 ) * t ) - ( var_1 ) ) ) ; } return float_2 * ( ( ( ( t -= int_1 ) * t ) * ( ( ( ( var_1 ) + 1 ) * t ) + ( var_1 ) ) ) + int_1 ) ; }
[0]: private void method_1 ( final type_1 var_1, java.util.collection < type_2 > var_2 ) { final type_3 var_3 = var_4 ; try { for ( final type_2 var_5 : method_2 ( ) ) { var_3. method_3 ( new type_4 ( ) { public void method_4 ( ) { var_6 this. method_5 ( var_5, var_1 ) ; } } ) ; } } finally { var_3. method_6 ( ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 < type_2 > param ) { return new type_1 < type_2 > ( ) { protected void method_2 ( type_2 item , boolean b ) { super . method_2 ( item , b ) ; if ( item != null ) { method_3 ( ) . method_4 ( item . method_5 ( ) ) ; } else { method_3 ( ) . method_6 ( ) ; method_3 ( ) . set ( string_1 ) ; } } } ; }
[0]: private int method_1 ( int var_1 ) { switch ( var_2 ) { case var_3 : return var_1 / int_1 ; case var_4 : case var_5 : return var_1 ; case var_6 : return var_1 ; case var_7 : return var_1 / int_2 ; case var_8 : return var_1 ; case var_9 : return var_1 - 1 ; case var_10 : return var_1 / ( var_11 ) ; default : throw new type_1 ( ) ; } }

************

************
tgt: private java.lang.string method_1 ( int number ) throws java.lang.exception { java.lang.string value = null ; java.lang.string var_1 = var_2 . method_2 ( ) ; java.lang.string var_3 = type_1 . method_3 ( var_1 ) ; type_2 var_4 = method_4 ( var_3 ) ; for ( int i = number ; i != 0 ; i -- ) value = var_4 . method_5 ( ) ; return value != null ? value . trim ( ) : null ; }
[0]: public java.lang.string gettext ( ) { java.lang.string text = null ; try { type_1 var_1 = method_1 ( ) ; text = var_2. tostring ( ) ; if (! ( text. method_2 ( ) ) ) { text = text + ( var_3 ) ; } } catch ( java.io.ioexception var_3 ) { throw new type_2 ( var_3 ) ; } return text ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 . method_2 ( ) ) < ( var_2 . method_2 ( ) ) ) { return 1 ; } else if ( ( var_1 . method_2 ( ) ) > ( var_2 . method_2 ( ) ) ) { return - 1 ; } return 0 ; }
[0]: private void method_1 ( final int var_1 ) { int index = var_1 ; do { if ( ( var_2. get ( index ) ) == ( var_3 ) ) { var_4 = index ; break ; } index = index + 1 ; } while ( index < ( var_2. size ( ) ) ) ; } while ( index < ( var_2. size ( ) ) ) ; }

************

************
tgt: public void method_1 ( int line , java.lang.string text ) { if ( ( text == null ) || ( text . isempty ( ) ) ) { method_2 ( line ) ; return ; } text = type_1 . method_3 ( char_1 , text ) ; if ( line >= ( var_1 . size ( ) ) ) { method_4 ( line , text ) ; return ; } var_1 . get ( line ) . method_5 ( text ) ; }
[0]: public void method_1 ( type_1 event, float x, float y, int var_1, type_2 var_2, type_3 target ) { this. method_2 ( ). method_3 ( true ) ; for ( type_3 var_3 : var_4 ) { var_5. method_4 ( var_3 ) ; } this. method_2 ( ). method_3 ( true ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_4 ) ) ) { type_1 var_5 = data . method_2 ( ) ; type_2 var_6 = ( ( type_2 ) ( var_5 . get ( string_1 ) ) ) ; method_3 ( var_6 ) ; } }
[0]: private void method_1 ( type_1 var_1, final type_2 result ) { java.util.map < java.lang.string, java.lang.string > var_2 = ( ( java.util.map < java.lang.string, java.lang.string > ) ( var_3 ) ) ; java.lang.string var_4 = var_2. get ( string_1 ) ; type_3 var_5 = type_4. method_2 ( var_6 ) ; var_7. method_3 ( var_5 ). method_4 ( var_8, new type_5 ( result ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( ( var_2 . get ( i ) . method_2 ( ) ) == null ? var_1 == null : var_2 . get ( i ) . method_2 ( ) . equals ( var_1 ) ) { return var_2 . get ( i ) ; } } return null ; }
[0]: private void method_1 ( java.lang.string filename ) { method_2 ( ) ; java.lang.system.out.println ( var_1. method_3 ( filename ) ) ; var_2 = new java.util.scanner ( var_3 ) ; var_4 = true ; while ( var_4 ) { java.util.arraylist < java.lang.string > output = method_4 ( ) ; for ( java.lang.string line : output ) { if ( output. equals ( var_5 ) ) { var_4 = false ; java.lang.system.out.println ( var_6 ) ; } } } }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( var_1 . method_2 ( ) ) ; java.lang.system.out.println ( var_1 . method_3 ( ) ) ; java.lang.string var_2 = ( ( var_3 class . getname ( ) ) + "\n" ) + ( var_1 . method_3 ( ) ) ; type_1 . method_4 ( var_4 , var_2 ) ; }
[0]: public void method_1 ( double var_1 ) { values. add ( ( int_1 * ( type_1. method_2 ( ( ( method_3 ( ) ) / var_1 ) ) ) ) ) ; type_2. method_4 ( string_1, java.lang.string. method_5 ( ( int_1 * ( type_1. method_2 ( ( ( method_3 ( ) ) / var_1 ) ) ) ) ) ) ; }

************

************
tgt: private void method_1 ( ) { method_2 ( ) ; if ( ( var_1 ) == ( var_2 ) ) { if ( method_3 ( ) ) { method_5 ( ) ; } } if ( ( var_1 ) == ( var_4 ) ) { if ( ( var_5 . height ) > ( var_6 ) ) { method_5 ( ) ; } } }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { var_2. add ( method_1 ( string_1 ) ) ; var_2. add ( method_2 ( ( ( string_2 + ( var_3 ) ) + string_3 ) ) ) ; for ( type_1 var_4 : var_1 ) { var_2. add ( method_1 ( ( ( string_4 + ( var_4. method_3 ( ) ) ) + string_5 ) ) ) ; } var_2. add ( method_2 ( ( ( string_2 + ( var_5 ) ) + string_3 ) ) ) ; }

************

************
tgt: public static double method_1 ( int i , double [ ] p , double [ ] var_1 , double [ ] b ) { double var_2 = 0 ; for ( int var_3 = 0 ; var_3 < ( p . length ) ; var_3 ++ ) { double var_4 = ( ( p [ i ] ) * ( var_1 [ var_3 ] ) ) + ( b [ var_3 ] ) ; var_2 += type_1 . method_2 ( var_4 ) ; } return var_2 ; }
[0]: public boolean method_1 ( type_1 view, java.lang.string url ) { type_2. method_2 ( var_1, ( string_1 + url ) ) ; boolean status = false ; if ( ( url!= null ) && ( url. startswith ( var_2 ) ) ) { status = true ; method_3 ( view, url ) ; } else { view. method_4 ( url ) ; } return status ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) { if ( ( var_3 . method_2 ( var_1 ) ) || ( var_1 == ( var_4 ) ) ) { return ; } var_3 . put ( var_1 , var_2 ) ; var_5 . method_3 ( var_1 ) ; var_6 . method_3 ( var_1 ) ; method_4 ( ) ; }
[0]: public void method_1 ( ) { java.lang.system.out.print ( string_1 ) ; var_1 = var_2. method_2 ( ) ; while (! ( method_3 ( var_1 ) ) ) { method_4 ( string_2 ) ; var_1 = var_2. method_2 ( ) ; } var_3 = java.lang.integer.parseint ( var_1 ) ; }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , type_3 var_2 , type_4 var_3 , java.util.set < type_5 > var_4 , type_6 var_5 ) { return new type_1 ( null , type_7 . method_2 ( var_1 ) , new type_8 ( var_1 ) , var_2 , var_3 , var_4 , type_9 . method_3 ( var_5 . method_4 ( ) ) , type_9 . method_5 ( var_5 . method_4 ( ) ) ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( type_2. format ( this. method_2 ( var_1 ) ) ) ; for ( final type_3 var_3 : this. method_3 ( ) ) { var_2. append ( ( ( ( ( ( var_4 ) + ( var_4 ) ) + ( type_2. format ( var_3. method_2 ( var_1 ) ) ) ) + ( var_4 ) ) + ( type_2. format ( var_3. method_2 ( var_1 ) ) ) ) ) ; } return var_2. tostring ( ) ; }

************

************
tgt: private java.util.calendar method_1 ( java.util.date var_1 , type_1 t ) { java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2 . method_2 ( var_1 ) ; if ( t == null ) { return var_2 ; } java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; var_3 . method_2 ( t ) ; var_2 . set ( var_4 , var_3 . get ( var_4 ) ) ; var_2 . set ( var_5 , var_3 . get ( var_5 ) ) ; var_2 . set ( var_6 , var_3 . get ( var_6 ) ) ; return var_2 ; }
[0]: public static final void method_1 ( java.lang.object source ) { try { type_1 var_1 = type_2. method_2 ( source. getclass ( ) ) ; var_1. method_1 ( source ) ; var_2 = true ; } catch ( java.lang.exception var_3 ) { type_3. method_3 ( var_4, string_1, var_3 ) ; } }

************

************
tgt: public final byte [ ] method_1 ( ) { byte [ ] var_1 = var_2 ; if ( var_1 != null ) return var_1 ; type_1 var_3 = var_4 ; if ( var_3 != null ) return var_2 = var_3 . method_2 ( ) ; if ( ( var_5 ) == 0 ) return var_2 = new byte [ 0 ] ; return var_2 = method_3 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { var_2. info ( string_1, var_1 ) ; type_2 type ; try { type = type_3. method_2 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { var_2. error ( string_2, var_3 ) ; throw var_4. method_3 ( var_5, var_1, var_3 ) ; } type_4 status = method_4 ( type ) ; return status!= null? status. method_5 ( ) : new type_1 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( var_1 ) == null ) { method_2 ( ) ; var_1 = var_2 . get ( 0 ) ; return var_1 ; } method_2 ( ) ; var_1 = var_2 . get ( ( ( var_2 . method_3 ( var_1 ) ) + 1 ) ) ; return var_1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2. method_2 ( var_2 class ) ; type_3 var_3 = type_2. method_3 ( var_4 class ) ; type_2. method_4 ( var_1. method_5 ( var_5 < java.lang.string [ ] > method_6 ( ) ) ). method_7 ( new type_4 ( string_1 ) ) ; type_5 var_6 = new type_5 ( var_3 ) ; var_6. method_8 ( var_1 ) ; type_2. method_9 ( var_1 ). method_5 ( var_5 < java.lang.string [ ] > method_6 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . remove ( var_3 ) ; var_2 . method_2 ( ) ; var_2 . method_3 ( ) ; new java.lang.thread ( new type_2 ( ) { public void method_5 ( ) { method_6 ( ) ; } } ) . start ( ) ; java.lang.system.out.println ( string_1 ) ; }
[0]: protected void method_1 ( ) { try { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } method_3 ( ) ; if ( var_2. method_4 ( ) ) { var_2. method_5 ( string_1 ) ; } } catch ( final java.lang.exception var_3 ) { if ( var_2. method_4 ( ) ) { var_2. method_5 ( string_2, var_3 ) ; } } finally { var_1 = null ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 = var_1 ; var_3 = true ; var_5 . method_3 ( this , var_1 ) ; var_6 . method_4 ( var_1 . getname ( ) ) ; var_6 . method_5 ( var_1 . method_6 ( ) ) ; var_6 . method_7 ( var_3 ) ; method_8 ( ) ; }
[0]: public void method_1 ( ) { try ( type_1 var_1 = type_2. method_2 ( var_2. method_3 ( ) ) ) { t. method_4 ( source, new type_3 ( var_3. out ) ) ; var_1. method_5 ( ) ; } catch ( java.lang.exception var_4 ) { var_4. method_6 ( ) ; } }

************

************
tgt: public int method_1 ( ) { if ( ( var_1 ) == ( ( var_2 . length ) - 1 ) ) { var_1 = 0 ; return var_3 . list [ var_1 ] ; } ( var_1 ) ++ ; return var_3 . list [ var_1 ] ; }
[0]: protected void method_1 ( ) { var_1 = 0 ; var_2. method_2 ( null ) ; for ( type_1 < type_2, type_3 > p : var_3 ) { var_4. method_3 ( p. first ) ; } var_5. method_1 ( ) ; var_3. method_1 ( ) ; var_2. method_2 ( null ) ; }

************

************
tgt: public void method_1 ( java.lang.void result ) { if ( method_2 ( ) ) { var_3 . method_3 ( new type_1 ( var_4 . method_4 ( ) , string_1 ) ) ; var_2 . method_5 ( ) . method_6 ( ) ; } else { var_5 . method_7 ( string_2 , var_4 ) ; var_1 . set ( var_2 ) ; open . set ( true ) ; var_6 = var_7 ; var_3 . set ( null ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( var_1 ) ; method_3 ( var_1 ) ; method_4 ( var_1, null ) ; method_5 ( var_1 ) ; int var_2 = type_2. method_6 ( var_1 ) ; if ( var_2 == ( var_3 ) ) { var_1. method_7 ( ) ; var_1. method_8 ( ) ; } if ( ( var_4 )!= null ) { var_4. method_9 ( var_5 ) ; } var_4 = null ; }

************

************
tgt: public type_1 method_1 ( type_2 file , type_3 var_1 ) throws java.io.ioexception { final java.lang.string var_2 = file . tostring ( ) ; final java.lang.string var_3 = type_4 . getname ( var_2 ) ; if ( ( ( var_4 == null ) || ( var_4 . method_2 ( var_5 , var_3 ) ) ) && ( var_6 || ( file . method_3 ( ) . equals ( var_7 ) ) ) ) { var_8 . add ( new type_4 ( true , var_5 , var_3 ) ) ; } return var_9 ; }
[0]: private void method_1 ( type_1 var_1, int position ) { type_2 var_2 = var_3. get ( position ) ; if ( var_2!= null ) { type_4. method_3 ( context ). method_4 ( var_2. method_5 ( ) ). method_6 ( ). method_7 ( new type_5 ( context, int_1, 0 ) ). method_8 ( var_1. method_9 ( ) ) ; var_1. method_10 ( ). settext ( var_2. method_11 ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.util.map < java.lang.integer , java.util.map < java.lang.integer , type_1 > > var_1 , int var_2 , int var_3 ) { type_1 var_4 = null ; if ( var_2 >= ( var_5 ) ) { var_2 = var_5 ; var_3 = var_6 ; } try { var_4 = var_1 . get ( var_2 ) . get ( var_3 ) ; var_4 . method_2 ( var_2 ) ; var_4 . method_3 ( var_3 ) ; } catch ( java.lang.nullpointerexception var_7 ) { var_4 = null ; } return var_4 ; }
[0]: public type_1 get ( int index ) { type_2 < type_1 >. var_1 < type_1 > item = main ; if ( ( index < 0 ) || ( index >= ( size ) ) ) { throw new type_3 ( ( ( ( ( string_1 + index ) + string_2 ) + ( size ) ) + string_3 ) ) ; } for ( int i = 0 ; i < index ; i ++ ) { item = var_2 ; } return item. item ; }

************

************
tgt: public synchronized void method_1 ( ) throws java.io.ioexception { if ( ( var_1 ) != null ) { var_1 . method_3 ( ) ; var_1 . method_1 ( ) ; } if ( ( var_2 ) != null ) { var_2 . method_1 ( ) ; var_2 = null ; } if ( ( output ) != null ) { output . method_1 ( ) ; output = null ; } }
[0]: protected void method_1 ( double x, double y, double var_1, boolean var_2, double var_3 ) { if ( var_2 ) { var_4 = var_1 ; var_5 = var_3 ; } else { var_4 = var_1 + ( var_6 ) ; var_5 = - var_3 ; } position. method_2 ( x ) ; position. method_3 ( y ) ; this. var_1 = var_1 ; this. var_2 = var_2 ; this. var_3 = var_3 ; position. method_2 ( x ) ; position. method_3 ( y ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { if ( ( type_3 . method_2 ( ) ) == 0 ) { var_1 . method_3 ( ( ( var_1 . method_4 ( ) ) * int_1 ) ) ; var_1 . method_5 ( ( ( var_1 . method_6 ( ) ) - ( ( var_1 . method_4 ( ) ) / int_1 ) ) ) ; type_3 . method_7 ( 1 ) ; } type_3 . method_8 ( int_2 ) ; remove ( method_9 ( ) . method_10 ( ) ) ; } }
[0]: private type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, byte [ ] data, java.util.map < java.lang.string, java.lang.string > var_3, java.util.map < java.lang.string, java.lang.string > var_4 ) throws type_2, type_3, type_4, type_5, java.io.ioexception, type_6 { method_2 ( var_1 ) ; return method_1 ( var_1, var_2, data, var_3, var_4, type_7. method_3 ( var_1 ), null ) ; }

************

************
tgt: private long method_1 ( java.lang.string var_1 ) { try { type_1 var_2 = new type_1 ( new type_2 ( new java.io.file ( var_1 ) ) ) ; var_2 . method_3 ( ) ; return ( var_2 . method_4 ( ) . method_5 ( ) . method_6 ( ) ) / ( var_2 . method_4 ( ) . method_5 ( ) . method_7 ( ) ) ; } catch ( java.io.ioexception var_3 ) { type_3 . method_8 ( string_1 , var_3 . method_9 ( ) ) ; } return 0 ; }
[0]: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = new type_2 ( var_3 ). method_2 ( new type_3 ( var_3. method_3 ( ) ). method_4 ( new type_4 ( ) ) ) ; final type_5 var_4 = var_5. method_5 ( false ) ; final type_6 var_6 = new type_6 ( var_2, var_4 ) ; final type_7 var_7 = new type_7 ( var_8, var_6 ) ; var_7. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_1 ; if ( ( var_2 . method_2 ( ) ) && ( ! ( var_3 . contains ( var_2 ) ) ) ) { var_3 . add ( var_2 ) ; } var_4 . method_3 ( ) . method_4 ( var_5 , var_3 ) ; var_4 . method_3 ( ) . method_5 ( var_5 , var_2 ) ; method_6 ( ) ; method_7 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { type_1 var_3 = var_2. get ( i ) ; if ( var_3. method_2 ( ). equals ( var_1 ) ) { if (! ( var_3. isempty ( ) ) ) { return var_3 ; } } else { throw new type_2 ( var_4 ) ; } } throw new type_2 ( var_5 ) ; } }

************

************
tgt: void method_1 ( long var_1 ) { long var_2 = var_3 ; type_1 < type_2 > var_4 = var_5 ; for ( ; ; ) { type_2 var_6 = var_4 . method_2 ( ) ; if ( ( var_6 == null ) || ( ( var_7 ) > var_1 ) ) { break ; } var_4 . remove ( var_6 ) ; var_3 = var_7 ; var_6 . method_4 ( ) ; } var_3 = var_1 ; }
[0]: public void method_1 ( ) { type_1. method_2 ( type_2. method_3 ( var_1 ) ). method_4 ( type_3. method_5 ( ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ), var_2 class ) ; intent. method_6 ( var_3, method_7 ( ). getintent ( ). method_8 ( var_3 ) ) ; getactivity ( ). method_9 ( intent ) ; assertequals ( method_7 ( ). getclass ( ), var_2 class ) ; }

************

************
tgt: private void init ( ) { if ( ! ( var_1 ) ) { synchronized ( this ) { if ( ! ( var_1 ) ) { if ( ( method_1 ( ) ) != null ) { var_2 . method_2 ( method_1 ( ) . method_3 ( ) ) ; } var_1 = true ; } } } }
[0]: public void set ( java.lang.boolean value ) { java.util.collection < java.lang.object > var_1 = var_2. get ( ) ; if ( value ) { if ( var_1!= null ) { if (! ( var_1. contains ( item ) ) ) { var_1. add ( item ) ; } } else { var_2. set ( type_1. list ( item ) ) ; } } else { if ( var_1!= null ) { var_1. remove ( item ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.lang.integer var_3 ) { var_4 = ( ( type_3 ) ( method_2 ( var_5 ) ) ) ; type_4 . method_3 ( string_1 , ( string_2 + ( var_4 ) ) ) ; if ( ( var_4 ) != null ) { type_5 var_6 = new type_5 ( new type_6 ( var_4 , var_7 ) ) ; var_2 . method_4 ( var_6 ) ; var_4 . method_5 ( var_2 , var_7 ) ; type_4 . method_3 ( string_1 , string_3 ) ; } }
[0]: protected synchronized void update ( ) { var_1 += ( method_1 ( ) ) * ( type_1. method_2 ( method_3 ( ) ) ) ; x = ( var_1 ) - ( ( var_2 ) / int_1 ) ; var_3 += ( method_1 ( ) ) * ( type_1. method_4 ( method_3 ( ) ) ) ; y = ( y ) - ( ( var_4 ) / int_1 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws type_2 { try { type_4 . method_2 ( var_1 ) ; type_4 . method_3 ( var_2 ) ; return type_1 . method_4 ( var_3 , var_1 , var_2 ) ; } catch ( type_5 var_4 ) { throw new type_6 ( string_1 ) ; } catch ( type_7 var_4 ) { throw new type_8 ( string_2 ) ; } }
[0]: public void method_1 ( java.lang.string token ) { var_1 = token ; method_2 ( ( token + string_1 ) ) ; method_2 ( java.lang.string. method_3 ( var_2. method_4 ( ). size ( ) ) ) ; if ( ( var_2. method_4 ( ). size ( ) ) < int_1 ) { type_1 var_3 = new type_1 ( ) ; var_2. method_5 ( var_4, true, var_3, token ) ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; type_1 var_1 = new type_1 ( var_2 , var_3 , var_4 , var_5 ) ; type_2 var_6 = method_3 ( var_2 ) ; method_4 ( var_7 ) ; var_7 . method_5 ( type_4 . method_6 ( var_6 ) ) ; method_7 ( var_7 ) ; var_8 . event ( new type_5 ( var_9 , var_1 ) ) ; method_8 ( var_7 ) ; }
[0]: private boolean method_1 ( ) { java.util.iterator var_1 = var_2. method_2 ( ). iterator ( ) ; while ( var_1. method_3 ( ) ) { java.util.map.entry var_3 = ( ( java.util.map.entry ) ( var_1. method_4 ( ) ) ) ; if (! ( var_3. getvalue ( ). equals ( string_1 ) ) ) { return true ; } var_1. remove ( ) ; } method_5 ( var_4. method_6 ( ). getstring ( var_5 ) ) ; return false ; } return false ; }

************

************
tgt: public java.util.list < java.lang.double > method_1 ( java.util.list < java.lang.double > var_1 , java.util.list < java.lang.double > var_2 ) { java.util.list < java.lang.double > var_3 = new java.util.arraylist < java.lang.double > ( ) ; int size = var_1 . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { var_3 . add ( i , ( ( var_1 . get ( i ) ) * ( var_2 . get ( i ) ) ) ) ; } return var_3 ; }
[0]: public int length ( int var_1, int var_2 ) { if ( var_1 == var_2 ) { return 0 ; } int var_3 = method_1 ( var_1, var_2 ) ; if ( var_3 == ( - 1 ) ) { return - 1 ; } type_1 var_4 = new type_1 ( var_5, var_1 ) ; type_1 var_6 = new type_1 ( var_5, var_2 ) ; return ( var_4. method_2 ( var_3 ) ) + ( var_6. method_2 ( var_3 ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.io.inputstream var_2 ) throws java.io.ioexception { type_2 var_3 = var_1 . method_2 ( ) ; try { type_3 . method_3 ( var_2 , var_3 ) ; var_3 . method_4 ( ) ; } finally { var_2 . method_5 ( ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view view = var_1. method_2 ( var_4, var_2, false ) ; type_4 var_5 = new type_4 ( view ) ; var_5. method_3 ( ). method_4 ( var_6. method_5 ( ) ) ; var_5. method_6 ( ). settext ( var_6. getname ( ) ) ; var_5. method_7 ( ). settext ( var_6. method_8 ( ) ) ; return view ; }

************

************
tgt: private static final java.lang.string method_1 ( java.io.file file ) throws java.io.ioexception { type_1 var_1 ; try { var_1 = type_1 . method_2 ( string_1 ) ; } catch ( type_2 var_2 ) { throw new java.io.ioexception ( var_2 ) ; } try ( java.io.inputstream var_3 = new java.io.fileinputstream ( file ) ) { new type_3 ( var_3 , var_1 ) ; } return new type_4 ( 1 , var_1 . method_3 ( ) ) . tostring ( int_1 ) ; }
[0]: public static void method_1 ( type_1 < type_2 > var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; if ( ( ( ( var_2 instanceof type_3 ) && ( var_3 ) ) && ( type_4. get ( ). var_4 ) ) && ( type_4. get ( ). var_5 ) ) { var_6 = true ; } }

************

************
tgt: protected boolean method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : { type_1 var_3 = new type_1 ( ) ; var_4 . method_2 ( var_3 ) ; method_3 ( var_4 ) ; return false ; } case var_5 : { method_3 ( var_6 ) ; return false ; } case var_7 : { var_8 . method_4 ( ) ; method_3 ( var_8 ) ; return false ; } default : { return true ; } } }
[0]: private int method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) instanceof java.lang.double ) { int var_3 = ( ( int ) ( ( long ) ( type_3. method_2 ( java.lang.math.abs ( ( ( java.lang.math.abs ( ( ( java.lang.double ) ( var_2 ) ) ) ) ) ) ) ) ) ; int var_4 = ( ( ( java.lang.double ) ( var_2 ) ) > 0 )? 1 : - 1 ; return var_3 * var_4 ; } throw new type_2 ( string_1 ) ; }

************

************
tgt: public java.lang.boolean method_1 ( type_1 var_1 ) { final boolean var_2 = ! ( type_2 . method_2 ( var_1 . name ( ) ) ) ; final boolean var_3 = ! ( type_2 . method_2 ( var_1 . method_3 ( ) ) ) ; return var_2 && var_3 ; }
[0]: public void method_1 ( ) throws java.lang.exception { final type_1 < type_2 > var_1 = new type_1 < type_2 > ( ) { public void method_2 ( final type_3 < type_2 > var_2 ) { type_4 var_3 = var_4 < type_2 > method_3 ( var_2 ) ; var_5 this. var_6. method_4 ( var_3 ) ; } } ; var_7 < type_2 > method_5 ( var_1 ) ; }

************

************
tgt: public final void execute ( final type_1 < ? super type_2 > var_1 , final type_1 < java.lang.throwable > var_2 , type_3 param ) { type_4 . method_1 ( var_1 , string_1 ) ; type_4 . method_1 ( var_2 , string_2 ) ; execute ( new type_5 < type_2 > ( ) { public void method_2 ( ) { } public void method_3 ( final java.lang.throwable var_3 ) { var_2 . method_4 ( var_3 ) ; } public void method_5 ( final type_2 result ) { var_1 . method_4 ( result ) ; } } , param ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string name, type_2 var_1 ) { java.util.list < type_1 > var_2 = type_3. method_2 ( ). method_3 ( ) ; type_4 < type_1 > var_3 = ( var_4 ) - >! ( type_5. method_4 ( var_4. getname ( ), var_1 ). tolowercase ( ). contains ( name ) ) ; var_2. method_5 ( var_3 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( long var_1 ) { type_1 . method_2 ( var_2 ) ; type_1 . method_2 ( ( ( var_3 ) > 0 ) ) ; long var_5 = ( method_4 ( ) ) ? var_6 : var_7 ; var_7 = var_1 ; var_8 = var_1 ; if ( var_5 == var_1 ) { return ; } method_5 ( var_1 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; var_2. method_3 ( new type_4 ( var_1 ) ) ; var_2. method_3 ( new type_5 ( var_1 ) ) ; var_2. method_3 ( new type_6 ( var_1. method_4 ( ) ) ) ; var_2. method_3 ( new type_6 ( var_1. method_4 ( ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string key , java.lang.object value ) { if ( ( ( key . equals ( string_1 ) ) == true ) && ( ! ( value . equals ( string_2 ) ) ) ) { method_2 ( ( ( java.lang.string ) ( value ) ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 [ ] var_2 = new type_1 [ 1 ] ; var_2 [ 0 ]. var_3 = ( var_4 ) + var_1 ; var_2 [ 0 ]. type = var_5 ; var_2 [ 0 ]. name = var_1 ; method_2 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int status , int var_2 ) { java.lang.string var_3 ; java.lang.system.out.println ( status ) ; if ( var_2 == ( var_4 ) ) { var_3 = var_5 ; var_6 = var_7 ; method_2 ( var_3 ) ; var_8 . method_3 ( ) ; } else if ( var_2 == ( var_9 ) ) { var_3 = var_10 ; var_6 = var_11 ; method_2 ( var_3 ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { final android.view.view view = var_1. method_2 ( var_4, var_2, false ) ; var_5 = type_4. method_3 ( this, view ) ; if ( ( method_4 ( ) )!= null ) { type_3 var_6 = method_4 ( ) ; var_7 = var_6. getint ( var_8, ( - 1 ) ) ; type_5. method_5 ( string_1, var_7 ) ; } var_9. method_6 ( var_10 ) ; return view ; }

************

************
tgt: boolean method_1 ( final type_1 < type_2 > var_1 ) { if ( ! ( var_1 . method_2 ( ) ) ) { return false ; } type_2 var_2 = var_1 . data ( ) ; return ! ( method_4 ( ) . method_5 ( ) . equals ( var_2 . method_5 ( ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( var_1 == null ) { var_2 = type_2. method_2 ( ) ; if (! ( var_3. method_3 ( ) ) ) { var_4. method_4 ( ) ; method_5 ( ). method_6 ( ). replace ( var_5, var_2 ). commit ( ) ; } } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( ( ! ( type_1 . method_2 ( this ) ) ) || ( type_1 . method_3 ( this ) ) ) { type_1 . method_6 ( this ) ; type_3 . method_7 ( ) . method_8 ( ) ; method_9 ( ) ; } }
[0]: private int [ ] method_1 ( int var_1 ) { int var_2 = ( ( int ) ( type_1. method_2 ( type_1. method_3 ( var_1 ) ) ) ) ; int var_3 = var_2 ; while ( ( var_2 * ( var_3 - 1 ) ) > var_1 ) { var_3 -- ; } return new int [ ] { var_2, var_3 } ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( ( var_1 ) == null ) { init ( ) ; synchronized ( this ) { if ( ( var_1 ) == null ) { type_2 var_2 = method_2 ( ) ; if ( var_2 == null ) { var_1 = var_3 . method_1 ( ) ; } else { var_1 = var_2 . method_3 ( var_3 . method_1 ( ) ) ; } } } } return var_1 ; }
[0]: private static java.util.list < type_1 > method_1 ( boolean var_1, type_2 var_2, boolean var_3, boolean var_4 ) { java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; if ( var_1 ) { result. add ( new type_3 ( ) ) ; } if ( var_2 == ( var_5 ) ) { result. add ( new type_4 ( var_3 ) ) ; } return result ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 . gettime ( ) , var_3 . gettime ( ) , var_3 . method_2 ( ) , var_4 ) ; type_2 var_5 = new type_2 ( this ) ; if ( ( var_6 ) == ( var_7 ) ) { var_5 . method_3 ( var_1 ) ; } else if ( ( var_6 ) == ( var_8 ) ) { var_5 . method_5 ( var_1 , var_9 ) ; } else { var_5 . method_4 ( var_1 , var_6 ) ; } }
[0]: public boolean method_1 ( long var_1, java.lang.integer var_2 ) throws java.io.ioexception { boolean var_3 = method_2 ( ) ; if ( var_3 ) { return true ; } var_3 = method_3 ( ( ( int ) ( var_1 ) ) ) ; if ( var_3 ) { return true ; } var_2 = - 1 ; var_3 = method_4 ( ) ; if ( var_3 ) { return true ; } return false ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string var_2 ) { if ( ( var_1 <= 0 ) || ( var_1 > ( this . var_3 . length ) ) ) { java.lang.system.out.println ( string_1 ) ; return ; } if ( ( var_2 == null ) || ( var_2 . equals ( string_2 ) ) ) { java.lang.system.out.println ( string_3 ) ; return ; } this . var_3 [ ( var_1 - 1 ) ] . method_2 ( ) ; this . var_3 [ ( var_1 - 1 ) ] . method_3 ( var_2 ) ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string error = string_1 ; switch ( this. var_1 ) { case string_2 : error = string_3 ; case string_4 : error = string_5 ; case string_6 : error = string_7 ; case string_8 : error = string_9 ; case string_10 : error = string_11 ; case string_12 : error = string_13 ; } switch ( this. var_1 ) { case string_2 : java.lang.system.out.println ( string_14 ) ; break ; case string_12 : java.lang.system.out.println ( string_15 ) ; } return error ; } }

************

************
tgt: public void method_1 ( ) { if ( ( java.lang.double . tostring ( value ) . length ( ) ) < int_1 ) { var_1 = java.lang.double . tostring ( value ) . length ( ) ; height = 1 ; } else { var_1 = int_1 ; height = ( ( java.lang.double . tostring ( value ) . length ( ) ) / ( var_1 ) ) + 1 ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = var_1. method_2 ( ) ; java.lang.string var_3 = var_1. method_3 ( string_1 ) ; java.util.list < type_4 > var_4 = var_5. method_4 ( var_3 ) ; int var_6 = method_5 ( var_2, var_3, var_4, var_1 ) ; return method_6 ( var_2, var_3, var_6, var_4 ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) throws java.io.ioexception { if ( ( ( var_2 ) != null ) || ( ( var_3 ) != null ) ) { method_2 ( var_1 ) ; } else { var_1 . method_3 ( this . b , this . offset , this . var_5 ) ; } var_1 . method_4 ( ) ; }
[0]: public void method_1 ( final type_1 var_1, int position ) { final type_2 var_2 = var_3. get ( position ) ; var_4. method_2 ( var_2. method_3 ( ) ) ; var_5. settext ( var_2. method_4 ( ) ) ; var_6. method_5 ( new type_3 ( ) { public void method_6 ( android.view.view var_7 ) { var_3. remove ( var_1. method_7 ( ) ) ; } } ) ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws type_2 { type_3 var_3 = ( ( type_3 ) ( var_4 ) ) ; type_4 var_5 = method_2 ( var_3 ) ; type_5 answer = var_5 . method_3 ( var_2 , var_1 , false , var_6 , false , true , false , null ) ; return answer == null ? null : answer . type ; }
[0]: public static void method_1 ( ) { android.content.intent intent = new android.content.intent ( type_1. method_2 ( ), var_1 class ) ; type_2 var_2 = type_2. method_3 ( type_1. method_2 ( ), type_3. method_4 ( type_1. method_2 ( ) ), intent, var_3 ) ; type_4 var_4 = ( ( type_4 ) ( type_1. method_2 ( ). method_5 ( var_5 ) ) ) ; var_4. method_6 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { try { if ( var_1 ) var_2 . method_2 ( ) ; var_2 = type_1 . method_3 ( ) ; type_2 var_3 = type_1 . method_4 ( var_4 class . method_5 ( ( string_1 + ( var_5 ) ) ) ) ; var_2 . open ( var_3 ) ; var_2 . start ( ) ; var_1 = true ; } catch ( java.lang.exception var_6 ) { var_6 . method_6 ( ) ; } }
[0]: private static boolean method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return false ; } for ( type_1 p : type_1. values ( ) ) { if ( p. tostring ( ). equals ( var_1 ) ) return true ; } return false ; }

************

************
tgt: private type_1 method_1 ( java.lang.long var_1 ) { if ( method_2 ( var_1 ) . method_3 ( ) . equals ( var_2 . method_4 ( ) ) ) { type_1 var_3 = new type_1 ( ) ; var_3 . method_5 ( method_2 ( var_1 ) ) ; var_3 . method_6 ( var_2 . method_4 ( ) ) ; return var_3 ; } return null ; }
[0]: public void method_1 ( int value, type_1 params, boolean var_1 ) { if ( var_1 ) { type_2. method_2 ( var_2, ( string_1 + ( string_2 + string_3 ) ), this. method_3 ( ). getname ( ) ) ; } else { var_3. setvalue ( value ) ; method_4 ( true ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( ) ; type_3 data = new type_3 ( ) ; data . put ( "name" , var_1 . getname ( ) ) ; data . put ( string_1 , var_1 . method_3 ( ) ) ; data . put ( string_2 , var_1 . method_4 ( ) ) ; data . put ( string_3 , var_1 . method_5 ( ) ) ; var_2 . method_1 ( string_5 , null , data ) ; }
[0]: protected static final void method_1 ( final type_1 var_1 ) { if ( ( var_1. method_2 ( ). method_3 ( ) ) <= 0 ) { var_2 = 0 ; var_3 = true ; var_1. method_4 ( ). setstate ( var_4 ) ; } else if ( var_1. method_5 ( ). method_5 ( ). isempty ( ) ) { var_2 = 0 ; var_5 = true ; ( var_6 ) -- ; } }

************

************
tgt: void method_1 ( type_1 message ) { try { var_1 . method_2 ( ) ; if ( ( message . method_3 ( ) ) == null ) { method_4 ( message ) ; } else { method_5 ( message . method_6 ( ) , message . method_8 ( ) , message . method_3 ( ) ) ; } } catch ( java.lang.exception var_2 ) { method_5 ( message . method_6 ( ) , message . method_8 ( ) , var_2 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1, float_1 ) ; assertequals ( string_1, var_1. method_2 ( ) ) ; assertequals ( float_1, var_1. method_3 ( ), 0 ) ; method_4 ( var_1. method_5 ( ) ) ; }

************

************
tgt: private type_2 method_3 ( type_1 var_1 ) { type_2 var_4 = this . var_5 . get ( var_1 ) ; if ( var_4 == null ) { var_4 = new type_2 ( var_1 ) ; this . var_5 . put ( var_1 , var_4 ) ; int var_2 = this . var_3 . method_2 ( 0 ) ; var_4 . method_4 ( var_2 ) ; } return var_4 ; }
[0]: public void start ( ) throws type_1 { if ( ( var_1 ) == null ) { if ( ( var_2 ) == null ) { throw new type_1 ( ( ( string_1 + ( method_1 ( ) ) ) + string_2 ) ) ; } var_1 = var_2 ; this. var_3 = true ; var_1. method_2 ( ) ; } }

************

************
tgt: private static java.lang.string method_1 ( type_1 var_1 ) { java.lang.stringbuilder path = new java.lang.stringbuilder ( ) ; for ( type_2 var_2 : var_1 . method_2 ( ) ) { if ( ( path . length ( ) ) > 0 ) { path . append ( char_1 ) ; } path . append ( type_3 . method_3 ( var_2 . tostring ( ) ) ) ; } return path . tostring ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws java.lang.exception { if ( ( var_2 ) == null ) { method_2 ( true ) ; } else { int var_3 = method_3 ( ). method_4 ( var_1. method_5 ( ) ) ; double var_4 = type_3. method_6 ( var_3 ) ; if ( var_4 < ( var_5 ) ) { method_2 ( true ) ; } } return super. method_1 ( var_1 ) ; } }

************

************
tgt: public boolean remove ( type_1 key ) { if ( ( var_1 ) != null ) { java.util.iterator < type_1 > var_2 = var_1 . iterator ( ) ; while ( var_2 . method_1 ( ) ) { type_1 var_3 = var_2 . method_2 ( ) ; if ( var_3 == key ) { var_2 . remove ( ) ; return true ; } } } return false ; }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1 ) > 0 ) { return java.lang.string.format ( string_1, ( ( var_1 ) / int_1 ), ( ( var_1 ) / int_2 ), ( ( var_1 ) % int_2 ) ) ; } return null ; }

************

************
tgt: private type_1 [ ] method_1 ( type_1 [ ] var_1 , type_1 [ ] var_2 ) { java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; var_3 . method_2 ( java.util.arrays.aslist ( var_1 ) ) ; var_3 . method_2 ( java.util.arrays.aslist ( var_2 ) ) ; return var_3 . method_3 ( new type_1 [ 0 ] ) ; }
[0]: public void method_1 ( ) { method_2 ( new type_1 ( ) { public void method_3 ( ) { var_1. method_4 ( ) ; java.util.list < type_2 > var_2 = method_5 ( ) ; assertnotnull ( var_2 ) ; assertthat ( var_2. size ( ), type_4. method_6 ( 1 ) ) ; assertthat ( var_2. get ( 0 ). getid ( ), type_4. method_6 ( string_1 ) ) ; } } ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { var_2 . method_2 ( ) ; switch ( var_1 . method_3 ( ) ) { case var_3 : method_4 ( string_1 , null , var_4 ) ; break ; case var_5 . update : update ( ) ; break ; case var_6 : method_6 ( ) ; break ; case var_7 : method_4 ( string_2 , null , var_4 ) ; break ; default : break ; } return true ; }
[0]: public type_1 method_1 ( ) { boolean var_1 = false ; for ( type_2 var_2 : var_3. method_2 ( ) ) { if ( var_2. getname ( ). startswith ( var_4 ) ) { var_1 = true ; break ; } } type_3 var_5 = ( var_1 )? new type_4 ( ) : new type_5 ( ) ; return var_5. method_1 ( ) ; }

************

************
tgt: private void method_1 ( ) { final type_1 var_1 = method_2 ( string_1 , method_3 ( ) ) ; this . add ( var_1 , var_2 ) ; var_3 = new type_2 ( type_3 . method_4 ( ) . method_5 ( ) , null , new type_4 ( ) , true , true ) ; this . add ( var_3 , var_4 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 f = new type_1 ( ) ; var_2 = getactivity ( ). method_2 ( ). method_3 ( ) ; type_2 var_3 = getactivity ( ). method_2 ( ). method_4 ( ) ; var_3. replace ( var_4, f ) ; var_3. method_5 ( ( string_1 + ( var_2 ) ) ) ; type_3. method_6 ( getcontext ( ), java.lang.string. method_7 ( var_2 ), var_5 ). show ( ) ; var_3. commit ( ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : var_3 = true ; method_3 ( ( ( android.widget.button ) ( var_1 ) ) ) ; break ; case var_4 : var_3 = false ; method_3 ( ( ( android.widget.button ) ( var_1 ) ) ) ; break ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_2 ( this. file, this. path, this. var_2 ) ; type_1 var_3 = new type_3 ( this. file, this. var_2 ) ; var_1. method_2 ( ) ; var_3. method_2 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { type_1 var_2 = var_3 . get ( var_1 ) ; if ( ( var_5 ) == 0 ) { method_2 ( ) ; } if ( var_3 . get ( var_1 ) . var_6 ) { ( var_5 ) -- ; } method_3 ( ) ; method_4 ( ) ; method_3 ( ) ; }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { type_1 var_1 = super. method_1 ( ) ; if (! ( var_1 == null ) ) { type_1 var_2 = new type_1 ( ) ; var_2. text = method_2 ( var_1. text ) ; var_3 = var_4 ; var_2. name = var_1. name ; type_2 var_5 = new type_2 ( var_6 ) ; var_5. method_3 ( var_1 ) ; } return var_1 ; }

************

************
tgt: private java.util.arraylist < java.lang.boolean > method_1 ( java.util.arraylist < java.lang.boolean > var_1 , java.util.arraylist < java.lang.boolean > var_2 ) { java.util.arraylist < java.lang.boolean > result = new java.util.arraylist < java.lang.boolean > ( ) ; result . add ( false ) ; for ( int i = 0 ; i != ( var_2 . size ( ) ) ; i ++ ) { if ( ( var_2 . get ( i ) ) == true ) { result = method_2 ( result , var_1 , i ) ; } } return result ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( ( ( ( java.lang.string. method_3 ( var_1. method_4 ( ) ) ) + string_1 ) + ( java.lang.string. method_3 ( var_1. method_5 ( ) ) ) ) ) ; if ( ( var_1. method_6 ( ) )!= null ) method_7 ( var_1. method_6 ( ) ) ; var_2. method_8 ( ) ; var_2. method_9 ( ) ; }

************

************
tgt: type_1 method_1 ( java.lang.string key ) { type_2 var_1 = method_2 ( key ) ; if ( var_1 == null ) return null ; return new type_1 ( java.lang.float . method_3 ( var_1 . method_4 ( string_2 ) ) , java.lang.float . method_3 ( var_1 . method_4 ( string_3 ) ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { final java.lang.string var_2 = ( var_1. gettext ( ) ) + ( var_3 ) ; type_3 var_4 = new type_4 ( type_5. method_2 ( var_2 ), new type_6 ( ) ) ; return new type_7 ( var_4, method_3 ( var_5. method_4 ( ) ), new java.util.arraylist < type_1 > ( ), null, null ) ; }

************

************
tgt: public java.util.list < java.lang.integer > method_1 ( java.lang.string var_1 , java.util.list < java.lang.object > var_2 , java.lang.object var_3 ) { var_5 . method_2 ( var_3 , null , var_6 ) ; java.util.list < java.lang.integer > var_4 = super . method_1 ( var_1 , var_2 , var_3 ) ; return var_4 ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, java.lang.string text, boolean i ) { java.lang.string var_2 = string_1 ; for ( java.lang.string var_3 : type_1. method_2 ( var_1, text, i ) ) { if ( var_3!= null ) var_2 += var_3 + ""\n"" ; } return var_2 ; }

************

************
tgt: public static double method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( ) ; double t = ( type_1 . method_2 ( var_1 ) ) * int_1 ; double var_3 = ( type_1 . method_3 ( var_1 ) ) * float_1 ; double y = ( type_1 . method_4 ( var_1 ) ) * float_1 ; var_4 = ( ( t + var_3 ) + y ) / int_2 ; return var_4 ; }
[0]: public type_1 [ ] method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = java.util.arrays.aslist ( method_2 ( var_1 ) ) ; if ( ( var_1. method_3 ( ) ) && ( var_1. method_4 ( ). method_5 ( string_1 ) ) ) { var_2. add ( type_3. method_6 ( var_1. method_4 ( ). getstring ( string_1 ) ) ) ; } return var_2. method_7 ( new type_1 [ var_2. size ( ) ] ) ; }

************

************
tgt: public void put ( java.lang.string var_1 , java.lang.object value ) { if ( value == null ) { var_2 . put ( var_1 , new type_1 ( var_1 , null , var_3 ) ) ; } else { var_2 . put ( var_1 , new type_1 ( var_1 , value , var_4 ) ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( method_2 ( var_1 ) ) && ( method_3 ( var_1 ) ) ) && ( method_4 ( var_1 ) ) ) && ( method_5 ( var_1 ) ) ) && ( method_6 ( var_1 ) ) ; }

************

************
tgt: private void method_1 ( ) { for ( int var_1 = 0 ; var_1 < ( var_2 . size ( ) ) ; var_1 ++ ) { for ( int var_3 = 0 ; var_3 < ( var_4 ) ; var_3 ++ ) { var_2 . get ( var_1 ) . add ( var_3 , new type_1 ( ) ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { float var_2 = ( ( var_3. method_2 ( ) ) * float_1 ) - float_2 ; float var_4 = ( ( var_3. method_2 ( ) ) * float_1 ) - float_2 ; return new type_3 ( ( ( var_5 ) - int_1 ), var_6, var_2, var_4, var_7 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string name , type_2 < ? > var_1 , final type_3 var_2 , java.lang.string var_3 ) { if ( name == null ) { type_4 . error ( string_1 ) ; return null ; } if ( var_1 == null ) { var_1 = type_5 . method_2 ( ) ; } return new type_1 ( name , var_2 , var_1 , true ) ; }
[0]: public void method_1 ( type_1 p, type_2 var_1, int index ) throws type_3 { p. method_2 ( var_1. getint ( ( index ++ ) ) ) ; p. method_3 ( var_1. getstring ( ( index ++ ) ) ) ; p. settext ( var_1. getstring ( ( index ++ ) ) ) ; }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 , final type_3 var_2 , final type_4 context ) { final type_5 result = new type_5 ( ) ; result . method_2 ( string_1 , var_1 . method_3 ( ) . method_4 ( ) ) ; result . method_2 ( string_2 , var_1 . method_6 ( ) ) ; return result ; }
[0]: public static void main ( java.lang.string [ ] var_1 ) throws java.io.ioexception { type_1 var_2 = new type_1 ( ) ; var_3 = new type_2 ( new java.io.file ( string_1 ) ) ; var_4 = new java.io.file ( string_2 ) ; var_5 = int_1 ; var_6 = int_2 ; var_7 = true ; type_3 var_8 = new type_3 ( var_2 ) ; type_4 var_9 = new type_4 ( var_8, int_3 ) ; var_9. method_1 ( ) ; var_8. method_2 ( var_1 [ int_4 ] ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_2 var_1 = new type_2 ( ) ; try { var_1 . method_2 ( type_1 . method_3 ( ) ) ; var_1 . method_4 ( type_1 . method_3 ( ) ) ; type_3 var_2 = new type_3 ( ) ; var_2 . method_5 ( ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_6 ( ) ; } }
[0]: public void execute ( type_1 var_1, type_2 type_3 ) { type_4 var_2 = type_3. method_1 ( ) ; if ( ( this. var_3 )!= null ) { var_2. method_2 ( this. var_3 ) ; } if ( ( this. var_4 )!= null ) { var_2. method_3 ( this. var_3 ) ; } }

************

************
tgt: private void method_1 ( ) { this . var_3 = new java.util.hashmap < > ( ) ; type_1 . method_2 ( this . var_4 , this . var_5 ) ; try { java.lang.thread . method_3 ( int_1 ) ; } catch ( type_2 var_6 ) { var_6 . method_4 ( ) ; } if ( this . method_5 ( this . var_5 ) ) { this . var_1 = var_2 ; } else { this . method_7 ( ) ; } }
[0]: public void method_1 ( int position ) { final type_1 var_1 = method_2 ( var_2, position ) ; if ( ( ( var_3 ) == ( var_4 ) ) && ( ( var_5 )!= null ) ) { method_3 ( ) ; } if ( var_1!= null ) { var_1. start ( ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , int [ ] [ ] var_2 ) { type_1 temp = var_1 . method_2 ( ) ; temp . method_3 ( var_1 . method_4 ( ) [ 0 ] , var_1 . method_4 ( ) [ 1 ] ) ; method_5 ( temp , var_2 ) ; return temp ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 ; java.lang.string content = string_1 ; for ( type_2 item : this. var_2 ) { int i = 0 ; if ( i == 0 ) { content = item. method_2 ( ) ; } else { content = ( content + string_2 ) + ( item. method_2 ( ) ) ; } i ++ ; } var_1 = new type_1 ( content, new type_2 ( string_3 ), var_3 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { if ( ( var_1 != null ) && ( ( var_1 . size ( ) ) > 0 ) ) { var_2 . show ( var_3 ) ; this . var_4 = new java.util.arraylist < type_1 > ( var_1 ) ; for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_2 var_5 = new type_2 ( var_3 , this ) ; var_5 . execute ( var_1 . get ( i ) ) ; } } }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2 ) { type_2 var_3 = var_4. get ( var_1 ) ; if ( ( var_5 )!= null ) var_5. method_1 ( ) ; } for ( type_3 var_6 : type_4. method_2 ( ) ) { var_7. method_1 ( ) ; } var_8. method_1 ( ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ! ( var_1 instanceof type_1 ) ) { return false ; } else { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return this . getname ( ) . equals ( var_2 . getname ( ) ) ; } }
[0]: int method_1 ( ) { if ( ( ( this ) == ( var_1 ) ) && ( ( var_2 ) == ( var_3 ) ) ) return var_4. method_1 ( ) ; if ( ( ( this )!= ( var_1 ) ) && ( ( var_2 ) > ( var_1. method_1 ( ) ) ) ) return var_1. method_1 ( ) ; return var_2 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_7 ( ) . method_8 ( true ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { var_1 = var_3 ; method_2 ( var_3. method_3 ( var_4 ) ) ; } else { var_1 = var_2 ; var_5. method_4 ( true ) ; var_6. method_4 ( false ) ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 , java.util.collection < type_2 > var_2 ) { final type_3 var_3 = var_4 ; try { for ( final type_2 var_5 : var_2 ) { var_3 . method_3 ( new type_4 ( ) { public void method_4 ( ) { var_6 this . method_5 ( var_5 , var_1 ) ; } } ) ; } } finally { var_3 . method_6 ( ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1, type_2 var_2, java.lang.integer var_3, java.lang.integer var_4 ) { type_3 var_5 = type_4. method_2 ( var_1 ) ; if ( var_5 == null ) { return new type_1 ( var_1, null, null, java.util.calendar.getinstance ( ) ) ; } var_5 = var_5. method_3 ( var_2 ) ; var_5 = var_5. method_4 ( int_1 ). method_5 ( int_2 ) ; return type_4. method_6 ( var_1, var_5 ) ; }

************

************
tgt: private int method_1 ( int var_1 ) { if ( var_1 == 0 ) return 0 ; switch ( var_2 ) { case var_3 : return var_1 / int_1 ; case var_4 : case var_5 : return var_1 - int_2 ; case var_6 : return var_1 ; case var_7 : return var_1 / int_2 ; case var_8 : return var_1 ; case var_9 : return var_1 - 1 ; case var_10 : return var_1 / ( var_11 ) ; default : throw new type_1 ( ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; type_1 var_2 = new type_1 ( var_3, 1 ) ; type_2 var_4 = var_2. method_3 ( type_3. method_4 ( type_4. classname ( string_1 ) ) ) ; var_4. method_5 ( ) ; type_1 var_5 = new type_1 ( var_3, 1 ) ; type_2 var_6 = var_2. method_3 ( type_3. method_4 ( type_4. classname ( string_2 ) ) ) ; }

************

************
tgt: public java.lang.string gettext ( ) { java.lang.string text ; try { type_1 var_1 = method_1 ( ) ; text = var_2 . tostring ( ) ; if ( ! ( text . method_2 ( "\n" ) ) ) { text = text + "\n" ; } } catch ( java.io.ioexception var_3 ) { throw new type_2 ( var_3 ) ; } return text ; }
[0]: public void method_1 ( final java.lang.string var_1, java.lang.string var_2, final java.lang.string var_3 ) throws java.io.ioexception { if ( var_2 == null ) var_2 = type_1. method_2 ( ). method_3 ( java.lang.string. method_4 ( var_4. method_5 ( ) ), false ) ; var_5. method_6 ( var_1, var_2, var_3 ) ; var_5. method_7 ( ) ; }

************

************
tgt: private void method_1 ( final int var_1 ) { int index = var_1 ; var_4 = - 1 ; while ( index < ( var_2 . size ( ) ) ) { if ( ( var_2 . get ( index ) ) == ( var_3 ) ) { var_4 = index ; break ; } index = index + 1 ; } }
[0]: public static void method_1 ( int i, java.lang.string msg ) { java.lang.system.out.println ( ( ( ( ( ( ( ( var_1 ) + ( var_2 ) ) + ( var_3 ) ) + i ) + string_1 ) + msg ) + ( method_2 ( ). method_3 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 event , float x , float y , int var_1 , type_2 var_2 , type_3 target ) { this . method_2 ( ) . method_3 ( true ) ; for ( type_3 var_3 : var_4 ) { var_3 . method_2 ( ) . remove ( ) ; var_5 . method_4 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 error ) { var_2. method_2 ( ) ; if ( var_1!= null ) { type_3. method_3 ( getactivity ( ), var_1. method_4 ( ), var_3 ). show ( ) ; if ( ( var_1. method_5 ( ) ) == int_1 ) { android.content.intent var_4 = new android.content.intent ( getactivity ( ), var_5 class ) ; method_6 ( var_4 ) ; } } else { type_3. method_3 ( getactivity ( ), string_1, var_3 ). show ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , final type_2 result ) { java.util.map < java.lang.string , java.lang.string > var_2 = ( ( java.util.map < java.lang.string , java.lang.string > ) ( var_3 ) ) ; java.lang.string var_6 = var_2 . get ( string_1 ) ; type_3 var_5 = type_4 . method_2 ( var_6 ) ; var_7 . method_3 ( var_5 ) . method_4 ( var_8 , new type_5 ( result ) ) ; }
[0]: public void method_1 ( float var_1 ) { var_2. method_2 ( 0, 0, 0, 1 ) ; var_2. method_3 ( var_3 ) ; var_4. method_4 ( var_5. view ) ; var_4. method_5 ( var_6 ) ; var_7. method_4 ( var_5. view ) ; var_7. method_5 ( var_6 ) ; var_8. method_6 ( var_4 ) ; var_9. method_6 ( ) ; var_10. method_1 ( var_11, var_6 ) ; }

************

************
tgt: private void method_1 ( java.lang.string filename ) { method_2 ( ) ; java.lang.system.out.println ( var_1 . method_3 ( filename ) ) ; var_2 = new java.util.scanner ( var_3 ) ; var_4 = true ; while ( var_4 ) { java.util.arraylist < java.lang.string > output = method_4 ( ) ; for ( java.lang.string line : output ) { java.lang.system.out.println ( line ) ; } } }
[0]: public static void method_1 ( ) { switch ( var_1 ) { case 1 : var_2. y += var_2. size ; break ; case int_1 : var_2. x += var_2. size ; break ; case int_2 : var_2. y -= var_2. size ; break ; case int_3 : var_2. x -= var_2. size ; break ; default : break ; } }

************

************
tgt: public void method_1 ( double var_1 ) { if ( ( int_1 * ( type_1 . method_2 ( ( ( method_3 ( ) ) / var_1 ) ) ) ) > 0 ) values . add ( ( int_1 * ( type_1 . method_2 ( ( ( method_3 ( ) ) / var_1 ) ) ) ) ) ; type_2 . method_4 ( string_1 , java.lang.string . method_5 ( ( int_1 * ( type_1 . method_2 ( ( ( method_3 ( ) ) / var_1 ) ) ) ) ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; type_3 var_3 = ( ( type_3 ) ( method_4 ( var_4 ) ) ) ; method_5 ( var_3 ) ; method_6 ( ). method_7 ( true ) ; var_5 = getintent ( ). method_8 ( var_6 ) ; method_6 ( ). method_9 ( var_5. name ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { var_2 . add ( method_1 ( string_1 ) ) ; for ( type_1 var_4 : var_1 ) { var_2 . add ( method_1 ( ( ( string_4 + ( var_4 . method_3 ( ) ) ) + string_5 ) ) ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = type_2. method_2 ( ). method_3 ( ) ; var_1. method_4 ( ) ; var_1. method_5 ( this ) ; if ( var_1. method_6 ( ) ) { var_1. method_7 ( ). method_8 ( var_2 ) ; } else { var_1. method_7 ( ). method_8 ( var_2 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 view , java.lang.string url ) { type_2 . method_2 ( var_1 , ( string_1 + url ) ) ; boolean status = false ; if ( ( url != null ) && ( url . startswith ( var_2 ) ) ) { method_3 ( view , url ) ; } else { view . method_4 ( url ) ; } return status ; }
[0]: public void method_1 ( type_1 value, type_2 var_1, type_3 var_2 ) throws java.io.ioexception { var_1. method_2 ( ) ; var_1. method_3 ( type_1. gettype ( ). method_4 ( ) ) ; var_1. method_5 ( string_1 ) ; if ( ( value. getvalue ( ) ) == null ) { var_1. method_6 ( ) ; } else { type_4. method_7 ( value, var_1 ) ; } var_1. method_8 ( ) ; }

************

************
tgt: private void method_1 ( ) { java.lang.system.out.print ( string_1 ) ; var_1 = var_2 . method_2 ( ) ; while ( ! ( method_3 ( var_1 ) ) ) { method_4 ( string_2 ) ; var_1 = var_2 . method_2 ( ) ; } var_3 = java.lang.integer.parseint ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2!= null ) var_3. method_2 ( var_4, var_1 ) ; else var_3. update ( var_4, ( ( ( var_5 ) + string_1 ) + ( var_2. get ( var_6 ) ) ), null, var_1 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( final type_3 var_3 : this . method_3 ( ) ) { var_2 . append ( ( "\n" + ( var_3 . method_2 ( var_1 ) ) ) ) ; } return var_2 . tostring ( ) ; }
[0]: private type_1 method_1 ( type_2 var_1, java.lang.string var_2, type_3 var_3 ) { final type_1 var_4 ; type_1 var_5 = null ; for ( type_1 var_6 : var_1. method_2 ( ) ) { if ( string_1. equals ( var_6. getname ( ) ) ) { var_5 = var_6 ; break ; } } if ( var_5!= null ) { var_4 = var_5 ; } else { var_4 = type_4. method_3 ( var_1, var_2, var_3 ) ; } return var_4 ; } }

************

************
tgt: public static final void method_1 ( java.lang.object source ) { try { type_1 var_1 = type_2 . method_2 ( source . getclass ( ) ) ; var_1 . method_1 ( source ) ; var_2 = false ; } catch ( java.lang.exception var_3 ) { type_3 . method_3 ( var_4 , string_1 , var_3 ) ; } }
[0]: private static void method_1 ( java.lang.string var_1, int var_2 ) { try { if ( var_3. contains ( var_1 ) ) { return ; } type_1 var_4 = type_2. method_2 ( string_1, var_2 ) ; var_5 = ( ( type_3 ) ( var_4. method_3 ( var_1 ) ) ) ; var_3. put ( var_1, var_5 ) ; } catch ( java.lang.exception var_6 ) { var_6. method_4 ( ) ; } } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 type ; try { type = type_3 . method_2 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { var_2 . error ( string_2 , var_3 ) ; throw var_4 . method_3 ( var_5 , var_1 , var_3 ) ; } type_4 status = method_4 ( type ) ; return status != null ? status . method_5 ( ) : new type_1 ( ) ; }
[0]: void method_1 ( final type_1 var_1, final java.util.list < type_2 > var_2 ) { final java.util.list < type_3 > var_3 = var_1. method_2 ( ). method_3 ( ) ; if ( type_4. method_4 ( var_3, var_1 ) ) { var_2. add ( new type_5 ( var_1, var_4, true ) ) ; } if ( type_4. method_5 ( var_3, var_1 ) ) { var_2. add ( new type_5 ( var_1, var_4, false ) ) ; } method_6 ( var_3, var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_3 var_3 = type_2 . method_3 ( var_4 class ) ; type_2 . method_4 ( var_1 . method_5 ( var_5 < java.lang.string [ ] > method_6 ( ) ) ) . method_7 ( new type_4 ( string_1 ) ) ; type_5 var_6 = new type_5 ( var_3 , var_1 ) ; var_6 . method_8 ( ) ; type_2 . method_9 ( var_1 ) . method_5 ( var_5 < java.lang.string [ ] > method_6 ( ) ) ; }
[0]: private java.io.file method_1 ( java.io.file var_1, type_1 params, java.util.properties var_2, java.lang.string var_3 ) throws java.io.ioexception { java.io.file var_4 = new java.io.file ( ( ( params. method_2 ( ) ) + string_1 ) ) ; java.lang.string var_5 = type_2. method_3 ( var_1, var_2, var_3 ) ; try ( type_3 writer = new java.io.filewriter ( var_4 ) ) { type_4. method_4 ( var_5, writer ) ; } return var_4 ; } }

************

************
tgt: protected void method_1 ( ) { try { method_3 ( ) ; if ( var_2 . method_4 ( ) ) { var_2 . method_5 ( string_1 ) ; } } catch ( final java.lang.exception var_3 ) { if ( var_2 . method_4 ( ) ) { var_2 . method_5 ( string_2 , var_3 ) ; } } }
[0]: public boolean method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) { return true ; } if ( var_1 instanceof java.lang.boolean ) { return ( ( java.lang.boolean ) ( var_1 ) ). method_2 ( ) ; } if ( var_1 instanceof java.util.collection ) { return ( ( ( java.util.collection ) ( var_1 ) ). size ( ) ) == 0 ; } return false ; }

************

************
tgt: public void method_1 ( ) { try ( type_1 var_1 = type_2 . method_2 ( var_2 . method_3 ( ) ) ) { t . method_4 ( source , new type_3 ( var_1 ) ) ; var_1 . method_5 ( ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_6 ( ) ; } }
[0]: protected type_1 method_1 ( ) { java.lang.string var_1 = var_2. getstring ( string_1, null ) ; java.lang.string var_3 = var_2. getstring ( string_2, null ) ; java.lang.string url = var_2. getstring ( string_3 ) ; return new type_2 ( var_1, var_3, url, false ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = 0 ; var_2 . method_2 ( null ) ; for ( type_1 < type_2 , type_3 > p : var_3 ) { var_4 . method_3 ( p . first ) ; } var_5 . method_1 ( ) ; var_3 . method_1 ( ) ; }
[0]: public void method_1 ( int var_1 ) { if ( var_1 == ( var_2 ) ) { if ( ( var_3. method_2 ( var_4 ) ) == ( var_5 ) ) { var_3. method_3 ( var_4 ) ; } } else if ( var_1 == ( var_6 ) ) { type_1. method_4 ( var_7, string_1, var_8 ). show ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( var_1 ) ; method_3 ( var_1 ) ; method_4 ( var_1 , null ) ; method_5 ( var_1 ) ; int var_2 = type_2 . method_6 ( var_1 ) ; if ( var_2 == ( var_3 ) ) { var_1 . method_7 ( ) ; var_1 . method_8 ( ) ; } if ( ( ( var_4 ) != null ) && ( ( var_5 ) != null ) ) { var_4 . method_9 ( var_5 ) ; var_5 = null ; } var_4 = null ; }
[0]: private void method_1 ( ) { java.lang.string var_1 = string_1 ; var_2 [ 0 ] = 1 ; var_3 [ 0 ] = 1 ; var_4 [ 0 ] = 1 ; android.widget.button var_5 = ( ( android.widget.button ) ( method_2 ( var_6 ) ) ) ; method_3 ( var_1, var_2 [ 0 ], var_3 [ 0 ], var_4 [ 0 ], var_5 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int position ) { type_2 var_2 = var_3 . get ( position ) ; type_3 . method_2 ( string_1 , var_2 . tostring ( ) ) ; if ( var_2 != null ) { var_1 . method_10 ( ) . settext ( var_2 . method_11 ( ) ) ; type_4 . method_3 ( context ) . method_4 ( var_2 . method_5 ( ) ) . method_6 ( ) . method_7 ( new type_5 ( context , int_1 , 0 ) ) . method_8 ( var_1 . method_9 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1. method_1 ( ) ; var_2. method_1 ( ) ; var_3. method_2 ( ) ; var_4 = 0 ; int var_5 = var_6. size ( ) ; for ( int i = 0 ; i < var_5 ; ++ i ) { var_6. get ( i ). method_3 ( ) ; } }

************

************
tgt: public type_1 get ( int index ) { type_2 < type_1 > . var_1 < type_1 > item = main ; if ( ( index < 0 ) || ( index >= ( size ) ) ) { throw new type_3 ( ( ( ( ( string_1 + index ) + string_2 ) + ( ( size ) - 1 ) ) + string_3 ) ) ; } for ( int i = 0 ; i <= index ; i ++ ) { item = var_2 ; } return item . value ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; if ( ( var_1 == ( var_3 ) ) && ( var_1 == ( var_4 ) ) ) { type_1 var_5 = data. getdata ( ) ; if ( var_5!= null ) { method_2 ( var_5 ) ; } } else { method_2 ( null ) ; } }

************

************
tgt: public void method_1 ( double x , double y , double var_1 , boolean var_2 , double var_3 ) { if ( var_2 ) { var_4 = var_1 ; var_5 = var_3 ; } else { var_4 = var_1 + ( var_6 ) ; var_5 = - var_3 ; } position . method_2 ( x ) ; position . method_3 ( y ) ; this . var_1 = var_1 ; this . var_2 = var_2 ; this . var_3 = var_3 ; }
[0]: public void handle ( type_1 var_1, type_2 var_2, type_3 response ) throws java.io.ioexception, type_4 { final boolean var_3 = var_1. method_1 ( ) ; if (! ( method_1 ( ) ) ) { var_1. method_2 ( false ) ; } try { var_4. method_3 ( var_2, response ) ; } finally { var_1. method_2 ( var_3 ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.util.map < java.lang.string , java.lang.string > var_3 , java.util.map < java.lang.string , java.lang.string > var_4 , byte [ ] data , int length ) throws type_2 , type_3 , type_4 , type_5 , java.io.ioexception , type_6 { method_2 ( var_1 ) ; return method_1 ( var_1 , var_2 , var_3 , var_4 , type_7 . method_3 ( var_1 ) , data , length ) ; }
[0]: public static boolean method_1 ( java.util.list < char [ ] > list, char [ ] array ) { for ( char [ ] element : list ) { if (! ( type_1. equals ( element, array ) ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = new type_2 ( var_3 ) . method_2 ( new type_3 ( var_3 . method_3 ( ) ) . method_4 ( new type_4 ( ) ) ) ; final type_5 var_4 = var_5 . method_5 ( false ) ; final type_6 var_6 = new type_6 ( var_2 , var_4 ) ; execute ( var_6 ) . method_1 ( var_1 ) ; }
[0]: protected type_1 method_1 ( java.lang.string... params ) { java.lang.string var_1 = params [ 0 ] ; java.lang.string attribute = params [ 1 ] ; var_2 = new type_1 ( ) ; switch ( var_1 ) { case string_1 : break ; case string_2 : try { var_2. method_2 ( var_4. method_3 ( attribute ) ) ; } catch ( type_2 var_5 ) { var_5. method_4 ( ) ; var_3 = var_5 ; } break ; default : break ; } return null ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { type_1 var_3 = var_2 . get ( i ) ; if ( var_3 . method_2 ( ) . equals ( var_1 ) ) { if ( var_3 . isempty ( ) ) { throw new type_2 ( var_5 ) ; } else { return var_3 ; } } } throw new type_2 ( var_4 ) ; }
[0]: public static < type_1 > void method_1 ( type_1 var_1, java.lang.class < type_1 > var_2, type_2 var_3 ) throws type_3 { type_4 var_4 = type_4. method_2 ( var_2 ) ; type_5 var_5 = var_4. method_3 ( ) ; var_5. method_4 ( var_6, true ) ; var_5. method_5 ( var_1, var_3 ) ; }

************

************
tgt: public void method_1 ( ) { android.content.intent intent = new android.content.intent ( getactivity ( ) , var_2 class ) ; intent . method_6 ( var_3 , method_7 ( ) . getintent ( ) . method_8 ( var_3 ) ) ; getactivity ( ) . method_9 ( intent ) ; }
[0]: private void start ( java.lang.string url ) { if (! ( var_1 ) ) { var_1 = true ; while ( var_1 ) { try { java.net.url ( url ). method_1 ( ) ; java.lang.thread. method_2 ( ( ( ( int_1 * int_2 ) * int_2 ) * int_3 ) ) ; } catch ( java.lang.exception var_2 ) { var_2. method_3 ( ) ; } } } } }

************

************
tgt: public void set ( java.lang.boolean value ) { java.util.collection < java.lang.object > var_1 = var_2 . get ( ) ; if ( value ) { if ( var_1 != null ) { if ( ! ( var_1 . contains ( item ) ) ) { var_1 . add ( item ) ; } } else { var_1 = type_1 . list ( item ) ; } } else { if ( var_1 != null ) { var_1 . remove ( item ) ; } } var_2 . set ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( ( ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_4 ) ) + string_4 ) ) ; var_1. method_2 ( ( string_5 + ( ( ( ( ( ( ( ( ( ( string_6 + string_7 ) + string_8 ) + string_9 ) + string_10 ) + string_11 ) + string_12 ) + string_13 ) + string_14 ) + string_15 ) ) ) ; }

************

************
tgt: protected synchronized void update ( ) { var_1 += ( method_1 ( ) ) * ( type_1 . method_2 ( method_3 ( ) ) ) ; x = ( var_1 ) - ( ( var_2 ) / int_1 ) ; var_3 += ( method_1 ( ) ) * ( type_1 . method_4 ( method_3 ( ) ) ) ; y = ( var_3 ) - ( ( var_4 ) / int_1 ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string result = string_1 ; int index = 0 ; for ( type_1 item : this. var_1 ) { result += java.lang.string.format ( string_2, index ) ; if ( item. method_2 ( ) ) { result += string_3 ; } result += java.lang.string.format ( string_4, item. getname ( ) ) ; index ++ ; } return result ; } }

************

************
tgt: public void method_1 ( java.lang.string token ) { var_1 = token ; method_2 ( ( token + string_1 ) ) ; method_2 ( java.lang.string . method_3 ( var_2 . method_4 ( ) . size ( ) ) ) ; type_1 var_3 = new type_1 ( ) ; var_2 . method_5 ( var_4 , true , var_3 , token ) ; }
[0]: public void method_1 ( ) { try { if ( method_2 ( ) ) { method_3 ( new type_1 ( var_1. method_1 ( ) ) ) ; return ; } var_2. method_1 ( ) ; } catch ( java.lang.exception var_3 ) { throw method_4 ( var_3 ) ; } finally { var_4. method_5 ( ) ; } }

************

************
tgt: private boolean method_1 ( ) { java.util.iterator var_1 = var_2 . method_2 ( ) . iterator ( ) ; while ( var_1 . method_3 ( ) ) { java.util.map.entry var_3 = ( ( java.util.map.entry ) ( var_1 . method_4 ( ) ) ) ; if ( ! ( var_3 . getvalue ( ) . equals ( string_1 ) ) ) { return true ; } } method_5 ( var_4 . method_6 ( ) . getstring ( var_5 ) ) ; return false ; }
[0]: public java.util.list < type_1 > method_1 ( ) throws type_2 { type_3 < java.util.list < type_1 > > var_1 = new type_3 < java.util.list < type_1 > > ( ) { public java.util.list < type_1 > method_2 ( ) throws java.lang.exception { return var_2. method_1 ( ) ; } } ; try { return method_3 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { type_4. error ( string_1, var_3 ) ; throw new type_2 ( var_3 ) ; } }

************

************
tgt: public int length ( int var_1 , int var_2 ) { if ( var_1 == var_2 ) { return 0 ; } int var_3 = method_1 ( var_1 , var_2 ) ; if ( var_3 == ( - 1 ) ) { return - 1 ; } type_1 var_4 = new type_1 ( var_5 , var_1 ) ; type_1 var_6 = new type_1 ( var_5 , var_2 ) ; return ( ( var_4 . method_2 ( var_3 ) ) + ( var_6 . method_2 ( var_3 ) ) ) - 1 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; new type_3 ( new type_4 ( this ) ). execute ( ) ; method_2 ( var_5 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view view = var_1 . method_2 ( var_4 , var_2 , false ) ; type_4 var_5 = new type_4 ( view ) ; var_5 . method_3 ( ) . method_4 ( var_6 . method_5 ( ) ) ; var_5 . method_6 ( ) . settext ( var_6 . getname ( ) ) ; var_5 . method_7 ( ) . settext ( var_6 . method_8 ( ) ) ; java.lang.system.out.println ( ) ; return view ; }
[0]: public java.lang.object method_1 ( ) { java.lang.object var_1 = var_2. method_1 ( id, var_3, var_4, var_5, params ) ; if ( var_1 == null ) { return new type_1 ( string_1 ) ; } method_2 ( var_1 ) ; if ( method_3 ( ) ) { return method_4 ( var_1 ) ; } return var_1 ; }

************

************
tgt: public static void method_1 ( type_1 < type_2 > var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; if ( ( ( var_2 instanceof type_3 ) && ( type_4 . get ( ) . var_4 ) ) && ( type_4 . get ( ) . var_5 ) ) { var_6 = true ; } }
[0]: private int [ ] method_1 ( int [ ] list, int var_1, int var_2 ) { if ( var_1 > var_2 ) return list ; int var_3 = method_2 ( list, var_1, var_2 ) ; method_1 ( list, var_1, ( var_3 - 1 ) ) ; method_1 ( list, ( var_3 + 1 ), var_2 ) ; return null ; }

************

************
tgt: private int method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) instanceof java.lang.double ) { int var_3 = ( ( int ) ( ( long ) ( type_3 . method_2 ( java.lang.math.abs ( ( ( java.lang.double ) ( var_2 ) ) ) ) ) ) ) ; int var_4 = ( ( ( java.lang.double ) ( var_2 ) ) >= 0 ) ? 1 : - 1 ; return var_3 * var_4 ; } throw new type_2 ( string_1 ) ; }
[0]: private java.lang.string method_1 ( java.lang.string value ) { try { return var_1. method_1 ( value ) ; } catch ( java.lang.exception var_2 ) { type_1. method_2 ( var_3, string_1, string_2, var_4, var_2 ) ; if (! ( type_2. method_3 ( value ) ) ) { type_1. method_4 ( var_3, java.lang.string.format ( string_3, value ) ) ; method_5 ( value ) ; type_1. method_4 ( var_3, java.lang.string.format ( string_4, value ) ) ; } } return null ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 < type_2 > var_1 = new type_1 < type_2 > ( ) { public void method_2 ( final type_3 < type_2 > var_2 ) { var_5 this . var_6 . method_4 ( var_4 < type_2 > method_3 ( var_2 ) ) ; } } ; var_7 < type_2 > method_5 ( var_1 ) ; }
[0]: public static type_1 method_1 ( java.io.file var_1, java.io.file var_2 ) { java.lang.system.out.print ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; java.util.map < java.lang.integer, type_2 > nodes = type_3. method_2 ( var_1 ) ; java.util.list < type_4 > var_3 = type_3. method_3 ( var_2, nodes ) ; if ( var_3 == null ) return null ; else return new type_1 ( nodes, var_3 ) ; }

************

************
tgt: public type_1 get ( type_2 var_1 , java.util.map < java.lang.string , java.lang.object > var_2 ) { type_3 < type_1 > var_3 = new type_3 ( name , var_2 , this . var_4 , this . var_5 , this . var_6 ) ; return var_3 . get ( var_1 ) ; }
[0]: public java.lang.string format ( type_1 var_1, type_2 var_2 ) { if ( var_1 == null ) { return string_1 ; } type_3 var_3 = var_1. method_1 ( ) ; long var_4 = var_3. method_2 ( var_1. method_3 ( ), false ) ; var_1 = new type_1 ( ( var_4 + ( offset ) ) ) ; return var_5. method_4 ( var_2 ). method_5 ( var_1 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string name , type_2 var_1 ) { java.util.list < type_1 > var_2 = type_3 . method_2 ( ) . method_3 ( ) ; type_4 < type_1 > var_3 = ( var_4 ) - > ! ( type_5 . method_4 ( var_4 . getname ( ) , var_1 ) . tolowercase ( ) . contains ( name . tolowercase ( ) ) ) ; var_2 . method_5 ( var_3 ) ; return var_2 ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { int var_3 = method_2 ( var_1, var_2 ) ; type_2. i ( string_1, string_2 ) ; if ( var_3 == 0 ) { var_3 = method_3 ( var_1, var_2 ) ; type_2. i ( string_1, string_3 ) ; if ( var_3 == 0 ) { var_3 = method_4 ( var_1, var_2 ) ; type_2. i ( string_1, string_4 ) ; } } return var_3 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { type_2 var_2 = type_3 . method_2 ( ) ; var_2 . method_3 ( new type_4 ( var_1 ) ) ; var_2 . method_3 ( new type_5 ( var_1 ) ) ; var_2 . method_3 ( new type_6 ( var_1 . method_4 ( ) ) ) ; } }
[0]: private java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 var_3 : var_1. gettype ( ) ) { if ( var_3. method_2 ( ). equals ( string_1 ) ) var_2. add ( var_3. method_3 ( ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 [ ] var_2 = new type_1 [ 1 ] ; var_2 [ 0 ] = new type_1 ( ) ; var_2 [ 0 ] . var_3 = ( var_4 ) + var_1 ; var_2 [ 0 ] . type = var_5 ; var_2 [ 0 ] . name = var_1 ; method_2 ( var_2 ) ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.string [ ] params ) { type_2 var_2 = new type_2 ( this. var_3 ) ; type_3 var_4 = var_1. method_2 ( params [ 0 ] ) ; type_3 var_5 = var_1. method_2 ( var_4. method_3 ( var_6 ) ) ; type_3 var_7 = var_1. method_2 ( params [ 1 ] ) ; return var_5. method_4 ( var_7 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { final android.view.view view = var_1 . method_2 ( var_4 , var_2 , false ) ; var_5 = type_4 . method_3 ( this , view ) ; if ( ( method_4 ( ) ) != null ) { type_3 var_6 = method_4 ( ) ; var_7 = var_6 . getint ( var_8 , ( - 1 ) ) ; type_5 . method_5 ( string_1 , var_7 ) ; } return view ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; var_1. method_2 ( ) ; type_1 var_2 = getactivity ( ). method_3 ( getstring ( var_3 ), 0 ) ; var_4 = var_2. getboolean ( string_1, true ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( var_1 == null ) { var_2 = type_2 . method_2 ( ) ; method_5 ( ) . method_6 ( ) . replace ( var_5 , var_2 ) . commit ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; var_1 = new type_1 ( type_3. method_3 ( var_2, string_1 ), false, new type_1 [ ] { type_2. method_2 ( ) }, var_1. method_4 ( string_2 ) ) ; type_2. method_5 ( var_1, false ) ; type_2. method_5 ( var_1, true, string_2, string_3 ) ; }

************

************
tgt: private int [ ] method_1 ( int var_1 ) { int var_2 = ( ( int ) ( type_1 . method_2 ( type_1 . method_3 ( var_1 ) ) ) ) ; int var_3 = var_2 ; while ( ( var_2 * ( var_3 - 1 ) ) >= var_1 ) { var_3 -- ; } return new int [ ] { var_2 , var_3 } ; }
[0]: public void method_1 ( java.io.inputstream var_1 ) { if ( ( var_2 )!= null ) { try { var_2. method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { } } var_2 = var_1 ; var_4 = new type_1 ( var_2 ) ; var_5 = new type_2 ( ) ; type_3. init ( ) ; } }

************

************
tgt: private static java.util.list < type_1 > method_1 ( boolean var_1 , type_2 var_2 , boolean var_3 ) { java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; if ( var_1 ) { result . add ( new type_3 ( ) ) ; } if ( var_2 == ( var_5 ) ) { result . add ( new type_4 ( var_3 ) ) ; } return result ; }
[0]: protected type_1 method_1 ( java.lang.string id ) { type_1 var_1 = super. method_1 ( id ) ; if ( var_1 == null ) { for ( type_1 var_2 : method_2 ( ) ) { if ( var_2 instanceof type_2 ) { type_3 var_3 = type_4. method_3 ( id, var_2, var_4. method_4 ( ), var_4. method_5 ( ) ) ; if ( var_3!= null ) { return var_3 ; } } } } return null ; }

************

************
tgt: public boolean method_1 ( long var_1 , java.lang.integer var_2 ) throws java.io.ioexception { if ( method_2 ( ) ) { return true ; } if ( method_3 ( ( ( int ) ( var_1 ) ) ) ) { return true ; } var_2 = - 1 ; return method_4 ( ) ; }
[0]: public void remove ( int id ) { try { java.lang.string query = string_1 ; type_1 var_1 = method_1 ( ) ; type_2 var_2 = var_1. method_2 ( query ) ; var_2. method_3 ( 1, id ) ; var_2. method_4 ( ) ; } catch ( type_3 var_3 ) { var_3. method_5 ( ) ; java.lang.system.out.println ( string_2 ) ; } }

************

************
tgt: private java.lang.string method_1 ( ) { switch ( this . var_1 ) { case string_2 : return string_3 ; case string_4 : return string_5 ; case string_6 : return string_7 ; case string_8 : return string_9 ; case string_10 : return string_11 ; case string_12 : return string_13 ; } return string_1 ; }
[0]: private int method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_2. get ( i ). method_2 ( ). method_3 ( var_1 ) ) { return i ; } } return - 1 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = var_1 . method_2 ( ) ; java.lang.string var_3 = var_1 . method_3 ( string_1 ) ; java.util.list < type_4 > var_4 = var_5 . method_4 ( var_3 ) ; int var_6 = method_5 ( var_2 , var_3 , var_4 , var_1 ) ; if ( var_6 > ( ( var_4 . size ( ) ) - 1 ) ) { var_6 = ( var_4 . size ( ) ) - 1 ; } return method_6 ( var_2 , var_3 , var_6 , var_4 ) ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_3. values ( ) ) { type_2 var_4 = var_2. method_2 ( ) ; type_2 var_5 = var_1. method_2 ( ) ; if ( type_3. method_3 ( var_5, var_4, false ) ) { return var_2 ; } else if ( type_3. method_3 ( var_4, var_5, false ) ) { return var_1 ; } } return null ; }

************

************
tgt: public synchronized void method_1 ( java.lang.string name , java.lang.string var_1 , java.lang.string var_2 , java.lang.string state , java.lang.string var_3 ) { type_1 var_5 = new type_1 ( ) ; type_2 var_6 ; int var_7 = var_8 . method_2 ( name , var_1 , var_2 , var_9 [ java.lang.integer.parseint ( state ) ] . method_3 ( var_9 [ java.lang.integer.parseint ( state ) ] . name ( ) ) . tostring ( ) , var_3 ) ; var_5 . method_2 ( var_7 , name , var_1 , var_2 , state , var_3 ) ; return ; }
[0]: protected java.util.list < type_1 > method_1 ( java.lang.integer... params ) { java.lang.string var_1 = ( ( params. length ) < 1 )? java.lang.string. method_2 ( params [ 0 ] ) : string_1 ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2. method_3 ( var_1 ) ; if ( var_3 == null ) { return new java.util.arraylist < type_1 > ( ) ; } return var_3. method_4 ( ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , int position ) { final type_2 var_2 = var_3 . get ( position ) ; var_4 . method_2 ( var_2 . method_3 ( ) ) ; var_5 . settext ( var_2 . method_4 ( ) ) ; var_1 . data = var_2 ; }
[0]: public static type_1 [ ] method_1 ( ) { return new type_1 [ ] { var_1, var_2, var_3, var_4, var_5, var_5, var_6, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 } ; }

************

************
tgt: public static void method_1 ( ) { android.content.intent intent = new android.content.intent ( type_1 . method_2 ( ) , var_1 class ) ; type_2 var_2 = type_2 . method_3 ( type_1 . method_2 ( ) , 0 , intent , var_3 ) ; type_4 var_4 = ( ( type_4 ) ( type_1 . method_2 ( ) . method_5 ( var_5 ) ) ) ; var_4 . method_6 ( var_2 ) ; }
[0]: public void method_1 ( int var_1 ) { if ( var_2 ) { return ; } if ( var_1 == ( - 1 ) ) { return ; } method_2 ( var_3, var_1 ) ; method_3 ( var_1, var_4 ) ; var_5 [ var_1 ] = true ; var_6. method_4 ( var_7, var_4, this ) ; method_5 ( ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return false ; } for ( type_1 p : type_1 . values ( ) ) { if ( p . tostring ( ) . equals ( var_1 ) ) return true ; } return false ; }
[0]: private void method_1 ( ) { int var_1 = 0 ; boolean var_2 = false ; while (! var_2 ) { var_1 ++ ; type_1 var_3 = var_4. method_2 ( ) ; method_3 ( var_3. method_4 ( ) ) ; var_2 = var_4. method_5 ( var_3, null, false, false ) ; if ( var_1 > int_1 ) { type_2. method_6 ( ( string_1 + string_2 ) ) ; this. var_5 = type_3. method_7 ( ). method_8 ( method_9 ( ) ) ; break ; } } }

************

************
tgt: public void method_1 ( int value , type_1 params , boolean var_1 ) { if ( var_1 ) { type_2 . method_2 ( var_2 , ( string_1 + ( string_2 + string_3 ) ) , this . method_3 ( ) . getname ( ) ) ; } var_3 . setvalue ( value ) ; method_4 ( true ) ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ). method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( ) ; var_3. method_3 ( var_4 class, new type_3 ( ) ) ; var_3. method_4 ( var_4 class, new type_4 ( ) ) ; var_1. method_5 ( var_3 ) ; var_1. method_5 ( method_6 ( ) ) ; var_1. method_5 ( new type_5 ( ) ) ; var_1. method_5 ( new type_6 ( ) ) ; return var_1 ; }

************

************
tgt: protected static final void method_1 ( final type_1 var_1 ) { if ( ( var_1 . method_2 ( ) . method_3 ( ) ) <= 0 ) { var_2 = 0 ; var_3 = true ; var_1 . method_4 ( ) . setstate ( var_4 ) ; } else if ( ( var_1 . method_5 ( ) . method_3 ( ) ) < 1 ) { var_2 = 0 ; var_5 = true ; ( var_6 ) -- ; } }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( this. var_1. method_2 ( ) ) == null ) { method_3 ( var_1. method_2 ( ). method_4 ( ), var_1. method_2 ( ). method_5 ( ) ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , float_1 ) ; assertequals ( string_1 , var_1 . method_2 ( ) ) ; assertequals ( float_1 , var_1 . method_3 ( ) , 0 ) ; assertnotnull ( var_1 . method_2 ( ) ) ; }
[0]: public boolean method_1 ( java.util.arraylist < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { var_2. method_2 ( ) ; } try { java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( string_1 ) ; type_2 out = new type_2 ( var_3 ) ; out. method_3 ( var_1 ) ; out. method_4 ( ) ; var_3. method_4 ( ) ; java.lang.system.out.println ( string_2 ) ; } catch ( java.io.ioexception i ) { java.lang.system.out.println ( string_3 ) ; i. method_5 ( ) ; } return true ; }

************

************
tgt: public void start ( ) throws type_1 { if ( ( var_2 ) == null ) { throw new type_1 ( ( ( string_1 + ( method_1 ( ) ) ) + string_2 ) ) ; } else { var_1 = var_2 ; this . var_3 = true ; var_1 . method_2 ( ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; if ( i == 0 ) var_2 super. method_3 ( ) ; if ( i == int_1 ) type_1. method_4 ( context, var_3, var_4 ). show ( ) ; var_5. method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws java.lang.exception { if ( ( ( var_2 ) == null ) || ( ( method_3 ( ) ) == null ) ) { method_2 ( true ) ; } else { int var_3 = method_3 ( ) . method_4 ( var_1 . method_5 ( ) ) ; double var_4 = type_3 . method_6 ( var_3 ) ; if ( var_4 < ( var_5 ) ) { method_2 ( true ) ; } } return super . method_1 ( var_1 ) ; }
[0]: private void method_1 ( ) { java.util.iterator < type_1 > var_1 = var_2. iterator ( ) ; while ( var_1. method_2 ( ) ) { ( ( type_1 ) ( var_1. method_3 ( ) ) ). method_4 ( var_3 ) ; } ( var_3 ) ++ ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( var_1 ) >= 0 ) { return java.lang.string.format ( string_1 , ( ( var_1 ) / int_1 ) , ( ( var_1 ) / int_2 ) , ( ( var_1 ) % int_2 ) ) ; } return null ; }
[0]: public type_1 method_1 ( int var_1, int var_2 ) { if ( int_1 < var_1 ) throw new type_2 ( ( string_1 + var_1 ) ) ; if ( 0 <= var_1 ) this. var_3 = var_1 ; if ( 0 <= ( var_4 ) ) this. var_4 = var_2 ; return this ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_4 ( ) ; java.util.list < type_2 > var_2 = method_5 ( ) ; type_3 . assertnotnull ( var_2 ) ; type_3 . assertthat ( var_2 . size ( ) , type_4 . method_6 ( 1 ) ) ; type_3 . assertthat ( var_2 . get ( 0 ) . getid ( ) , type_4 . method_6 ( string_1 ) ) ; }
[0]: private static void method_1 ( java.util.list < java.lang.integer > x, java.util.list < java.lang.integer > y, boolean [ ] a, boolean [ ] a, boolean [ ] b ) { int var_1 = type_1. method_2 ( a ) ; int var_2 = type_1. method_2 ( b ) ; if ( var_1 > var_2 ) { java.lang.system.out.print ( string_1 ) ; } else if ( var_1 == var_2 ) { type_1. method_3 ( x, y ) ; } else { java.lang.system.out.print ( string_2 ) ; } }

************

************
tgt: public type_1 method_1 ( ) { boolean var_1 = false ; for ( type_2 var_2 : var_3 ) { if ( var_2 . getname ( ) . startswith ( var_4 ) ) { var_1 = true ; break ; } } type_3 var_5 = ( var_1 ) ? new type_4 ( ) : new type_5 ( ) ; return var_5 . method_1 ( ) ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { java.lang.string var_1 = intent. method_2 ( ) ; java.lang.string token = intent. method_3 ( var_2 ) ; type_1. method_4 ( var_3, ( string_1 + var_1 ) ) ; type_1. method_4 ( var_3, ( string_1 + token ) ) ; if ( var_4 ) { method_5 ( token ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 f = new type_1 ( ) ; var_2 = getactivity ( ) . method_2 ( ) . method_3 ( ) ; type_2 var_3 = getactivity ( ) . method_2 ( ) . method_4 ( ) ; var_3 . replace ( var_4 , f ) ; var_3 . method_5 ( ( string_1 + ( var_2 ) ) ) ; var_3 . commit ( ) ; }
[0]: public final boolean method_1 ( java.lang.string var_1 ) { final type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( ). method_3 ( ). method_4 ( var_2. method_5 ( ). method_6 ( ). var_3 ) ; method_7 ( var_1, var_2 ) ; if ( ( var_4. method_8 ( ) ) == 1 ) { method_9 ( var_4 ) ; var_5. method_10 ( true ) ; } method_11 ( ) ; return true ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = var_1 . method_2 ( ) ; int size = var_2 . size ( ) ; for ( int i = 0 ; i < size ; i ++ ) { method_4 ( var_2 . method_3 ( ) . get ( i ) , null ) ; } }
[0]: public void add ( type_1 var_1 ) { var_2. add ( var_1 ) ; int index = ( var_2. size ( ) ) - 1 ; while ( ( index > 1 ) && ( ( var_2. get ( method_1 ( index ) ). compareto ( var_1 ) ) > 0 ) ) { var_2. set ( index, var_2. get ( method_1 ( index ) ) ) ; index = method_1 ( index ) ; var_2. set ( index, var_1 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_3 = new type_3 ( this . file , this . var_2 ) ; var_3 . method_2 ( ) ; type_1 var_1 = new type_2 ( this . file , this . path , this . var_2 ) ; var_1 . method_2 ( ) ; }
[0]: public void method_1 ( ) { get ( ). method_2 ( string_1, string_2, string_3 ). setvalue ( true ). method_3 ( string_4 ) ; get ( ). method_2 ( string_1, string_2, string_5 ). method_3 ( string_6 ) ; get ( ). method_2 ( string_1, string_2, string_5, string_7 ). setvalue ( string_8 ). method_3 ( string_9 ) ; get ( ). method_2 ( string_1, string_10, string_11 ). method_3 ( string_12 ) ; }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { type_1 var_1 = super . method_1 ( ) ; if ( ! ( var_1 == null ) ) { type_1 var_2 = new type_1 ( ) ; var_2 . text = method_2 ( var_1 . text ) ; var_3 = var_4 ; var_2 . name = var_1 . name ; java.lang.system.out.println ( var_2 . text ) ; type_2 var_5 = new type_2 ( var_6 ) ; var_5 . method_3 ( var_2 ) ; var_1 = var_2 ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; type_2 var_2 = this. method_3 ( ) ; type_3 values = method_4 ( var_1 ) ; long var_3 = var_2. method_5 ( var_4, null, values ) ; var_5 = ( ( int ) ( var_3 ) ) ; var_6 = false ; var_2. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_6 ( ) ) != null ) { method_7 ( var_1 . method_6 ( ) ) ; var_2 . method_8 ( ) ; var_2 . method_9 ( ) ; } else { var_2 . method_2 ( ( ( ( java.lang.string . method_3 ( var_1 . method_4 ( ) ) ) + string_1 ) + ( java.lang.string . method_3 ( var_1 . method_5 ( ) ) ) ) ) ; } }
[0]: public static < type_1, type_2 > type_3 < java.util.map.entry < type_1, type_2 > > method_1 ( final java.util.map < type_1, type_2 > var_1 ) { if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) { return type_4. method_2 ( ) ; } return type_4. method_1 ( var_1. method_3 ( ). iterator ( ) ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { final java.lang.string var_2 = ( var_1 . gettext ( ) ) + ( var_3 ) ; type_3 var_4 = new type_4 ( method_2 ( var_2 ) , new type_6 ( ) ) ; return new type_7 ( var_4 , method_3 ( var_5 . method_4 ( ) ) , new java.util.arraylist < type_1 > ( ) , null ) ; }
[0]: public void method_1 ( ) { java.util.map < java.lang.string, java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( string_1, string_2 ) ; type_1. method_2 ( ). method_3 ( ). method_4 ( var_1 ) ; type_1. method_2 ( ). method_5 ( null ) ; type_1. method_2 ( ). method_6 ( ) ; }

************

************
tgt: protected static java.lang.string method_1 ( java.lang.string var_1 , java.lang.string text , boolean i ) { java.lang.string var_2 = string_1 ; for ( java.lang.string var_3 : type_1 . method_2 ( var_1 , text , i ) ) { if ( var_3 != null ) var_2 += var_3 ; } return var_2 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_4 ( string_1 ) ; boolean var_4 = true ; var_2. method_2 ( var_3, 0, 0 ) ; var_2. method_2 ( var_3, 1, 1 ) ; var_2. method_2 ( var_3, int_1, int_1 ) ; boolean var_5 = var_1. method_3 ( var_3, var_2 ) ; assertthat ( var_5, method_4 ( var_4 ) ) ; }

************

************
tgt: public type_1 [ ] method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist ( java.util.arrays.aslist ( method_2 ( var_1 ) ) ) ; if ( ( var_1 . method_3 ( ) ) && ( var_1 . method_4 ( ) . method_5 ( string_1 ) ) ) { var_2 . add ( type_3 . method_6 ( var_1 . method_4 ( ) . getstring ( string_1 ) ) ) ; } return var_2 . method_7 ( new type_1 [ var_2 . size ( ) ] ) ; }
[0]: public void set ( type_1 var_1, type_2 var_2 ) { type_3. method_1 ( var_3, string_1 ) ; this. var_1 = var_1 ; this. var_4 = var_1. method_2 ( ) ; this. var_5 = var_2 ; type_3. method_1 ( var_3, string_2 ) ; var_6. method_3 ( var_7 ) ; var_8 = 0 ; var_9 = 0 ; var_10 = 0 ; var_11 = true ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { return ( method_3 ( var_1 ) ) && ( ( ( ( method_2 ( var_1 ) ) && ( method_4 ( var_1 ) ) ) && ( method_5 ( var_1 ) ) ) && ( method_6 ( var_1 ) ) ) ; }
[0]: protected java.lang.string method_1 ( java.lang.string path, java.lang.string var_1 ) { if ( ( path == null ) || ( var_1 == null ) ) { return string_1 ; } if ( ( path. startswith ( string_2 ) ) || ( path. startswith ( string_3 ) ) ) { return path ; } return ( ( ( string_4 + path ) + string_5 ) + var_1 ) + string_6 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { float var_2 = ( ( var_3 . method_2 ( ) ) * float_2 ) - 1.0f ; float var_4 = ( ( var_3 . method_2 ( ) ) * float_2 ) - 1.0f ; return new type_3 ( var_5 , var_6 , var_2 , var_4 , var_7 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws java.lang.exception { java.util.hashmap < java.lang.string, type_1 > var_2 = method_2 ( ). method_3 ( ) ; type_1 temp = var_2. get ( var_1. id ) ; temp. method_4 ( var_1. name ) ; if ( ( var_3 ) > 0 ) { temp. method_5 ( var_3 ) ; return temp ; } return null ; }

************

************
tgt: public void method_1 ( type_1 p , type_2 var_1 , int index ) throws type_3 { p . settext ( var_1 . getstring ( ( index ++ ) ) ) ; p . method_3 ( var_1 . getstring ( ( index ++ ) ) ) ; p . method_2 ( var_1 . getint ( ( index ++ ) ) ) ; }
[0]: private void method_1 ( ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { ( ( type_1 ) ( var_1. get ( i ) ) ). method_2 ( var_2, int_1 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] var_1 ) throws java.io.ioexception { type_1 var_2 = new type_1 ( ) ; var_3 = new type_2 ( new java.io.file ( string_1 ) ) ; var_4 = new java.io.file ( string_2 ) ; var_5 = int_1 ; var_6 = int_2 ; var_7 = true ; type_3 var_8 = new type_3 ( var_2 ) ; type_4 var_9 = new type_4 ( var_8 , int_3 ) ; var_9 . method_1 ( ) ; }
[0]: public void method_1 ( type_1 obj ) { for ( ; ; ) { try { var_1 [ ( ( var_2 ) ++ ) ] = obj ; return ; } catch ( type_2 var_3 ) { method_2 ( ) ; if ( ( var_2 ) >= ( var_1. length ) ) throw new type_3 ( string_1 ) ; } } } }

************

************
tgt: public void execute ( type_1 var_1 , type_2 type_3 ) { type_4 var_2 = type_3 . method_1 ( ) ; if ( ( this . var_3 ) != null ) { var_2 . method_2 ( this . var_3 ) ; } if ( ( this . var_4 ) != null ) { var_2 . method_3 ( this . var_4 ) ; } }
[0]: private void method_1 ( ) { method_2 ( ) ; var_1. set ( 0 ) ; type_1 [ ] parameters = new type_1 [ ( var_2. method_3 ( ) ) + 1 ] ; for ( int i = 0 ; i < ( parameters. length ) ; ++ i ) { parameters [ i ] = var_3. method_4 ( i ) ; } var_4 = new type_2 ( ) ; var_4. method_5 ( var_3, parameters ) ; method_6 ( ) ; }

************

************
tgt: public void method_1 ( int position ) { final type_1 var_1 = method_2 ( var_2 , position ) ; if ( ( ( var_3 ) == ( var_4 ) ) && ( ( var_5 ) != null ) ) { method_3 ( ) ; } if ( var_1 != null ) { var_1 . start ( ) ; } var_2 = position ; }
[0]: public void method_1 ( boolean value ) { var_1. method_2 ( value ) ; var_2. method_2 ( ( ( ( var_1. getvalue ( ) ) == null ) || (! ( var_1. getvalue ( ). equals ( var_3 ) ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 ; java.lang.string content = string_1 ; int i = 0 ; for ( type_2 item : this . var_2 ) { if ( i == 0 ) { content = item . method_2 ( ) ; } else { content = ( content + string_2 ) + ( item . method_2 ( ) ) ; } i ++ ; } var_1 = new type_1 ( content , new type_2 ( string_3 ) , var_3 ) ; return var_1 ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { method_2 ( ) ; synchronized ( var_2 ) { if ( ( var_2. size ( ) ) > 0 ) { for ( type_1 var_3 : var_2 ) { if ( type_2. equals ( var_1, var_4 ) ) { type_3. method_3 ( var_5, ( string_1 + var_1 ) ) ; return true ; } } } } type_3. method_3 ( var_5, ( string_2 + var_1 ) ) ; return false ; } }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : var_2 ) { type_2 var_3 = var_4 . get ( var_1 ) ; if ( ( var_5 ) != null ) var_5 . method_1 ( ) ; } for ( type_3 var_6 : type_4 . method_2 ( ) ) { var_7 . method_1 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception, type_2 { for ( int var_2 : var_3. method_2 ( var_1, var_4 ) ) { if ( ( var_5. method_3 ( int_1 ) ) > ( var_6. method_4 ( var_2 ) ) ) { method_5 ( var_1, var_2 ) ; } } }

************

************
tgt: int method_1 ( ) { if ( ( ( this ) == ( var_1 ) ) && ( ( var_2 ) == ( var_3 ) ) ) return var_4 . method_1 ( ) ; if ( ( ( this ) != ( var_1 ) ) && ( ( var_2 ) < ( var_1 . method_1 ( ) ) ) ) return var_1 . method_1 ( ) ; return var_2 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { type_3 var_2 = this. var_3. get ( var_1 ) ; if ( var_2!= null ) { throw new type_2 ( java.lang.string.format ( string_1, var_1 ) ) ; } return this. method_2 ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { var_1 = var_3 ; method_2 ( var_3 . method_3 ( var_4 ) , var_2 ) ; } else { var_1 = var_2 ; var_5 . method_4 ( true ) ; var_6 . method_4 ( false ) ; } }
[0]: public static void method_1 ( type_1 var_1, java.lang.string content ) { type_2 var_2 = new type_2 ( content ) ; type_3 var_3 = type_4. method_2 ( var_1. getcontext ( ), var_2, content, type_5. method_3 ( var_1 ), null ) ; var_1. settext ( var_3 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , type_2 var_2 , java.lang.integer var_3 , java.lang.integer var_4 ) { type_3 var_5 = type_4 . method_2 ( var_1 ) ; if ( var_5 == null ) { return new type_1 ( var_1 , null , null , java.util.calendar.getinstance ( ) ) ; } var_5 = var_5 . method_3 ( var_2 ) ; var_5 = var_5 . method_4 ( var_3 ) . method_5 ( var_4 ) ; return type_4 . method_6 ( var_1 , var_5 ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; java.util.list < type_1 > var_2 ; var_2 = var_3. method_3 ( ) ; var_4 = new type_2 ( this, var_5, var_2 ) ; type_3 var_6 = ( ( type_3 ) ( method_4 ( var_7 ) ) ) ; var_6. method_5 ( var_4 ) ; var_1. method_2 ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; type_1 var_2 = new type_1 ( var_3 , 1 ) ; type_2 var_4 = var_2 . method_3 ( type_3 . method_4 ( type_4 . classname ( string_1 ) ) ) ; var_4 . method_5 ( ) ; }
[0]: private double method_1 ( int var_1 ) { if ( var_1 < int_1 ) { return 0 ; } double a = java.lang.math.pow ( float_1, ( var_1 / int_1 ) ) ; double b = float_2 * ( ( java.lang.math.pow ( float_3, ( var_1 - int_1 ) ) ) - 1 ) ; return ( type_1. method_2 ( ( a + b ) ) ) / ( type_1. method_2 ( float_4 ) ) ; }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , java.lang.string var_2 , final java.lang.string var_3 ) throws java.io.ioexception { if ( var_2 == null ) var_2 = type_1 . method_2 ( ) . method_3 ( java.lang.string . method_4 ( var_4 . method_5 ( ) ) , false ) ; var_2 = type_1 . method_2 ( ) . method_3 ( var_2 , true ) ; var_5 . method_6 ( var_1 , var_2 , var_3 ) ; var_5 . method_7 ( ) ; }
[0]: public type_1 method_1 ( type_1 item ) { if (! ( var_1. method_2 ( item. getid ( ) ) ) ) { type_2. error ( string_1, item. getid ( ) ) ; throw new type_3 ( ( ( ( string_2 + ( item. getid ( ) ) ) + string_3 ) + ( item. method_3 ( ) ) ) ) ; } return var_1. method_4 ( item ) ; }

************

************
tgt: public static void method_1 ( int i , java.lang.string msg ) { i = i + 1 ; java.lang.system.out.println ( ( ( ( ( ( ( ( var_1 ) + ( var_2 ) ) + ( var_3 ) ) + i ) + string_1 ) + msg ) + ( method_2 ( ) . method_3 ( ) ) ) ) ; }
[0]: public void add ( type_1 var_1 ) { java.lang.string date = var_2. format ( var_1. method_1 ( ) ) ; boolean var_3 = var_4. method_2 ( date ) ; if (! var_3 ) { var_4. put ( date, new java.util.arraylist < > ( ) ) ; } var_4. get ( date ). add ( var_1 ) ; type_2. method_3 ( new type_1 [ ] { var_1 } ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 error ) { if ( var_1 != null ) { type_3 . method_3 ( getactivity ( ) , var_1 . method_4 ( ) , var_3 ) . show ( ) ; if ( ( var_1 . method_5 ( ) ) == int_1 ) { android.content.intent var_4 = new android.content.intent ( getactivity ( ) , var_5 class ) ; method_6 ( var_4 ) ; } } else { type_3 . method_3 ( getactivity ( ) , string_1 , var_3 ) . show ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { super. method_1 ( ) ; java.io.file var_1 = new java.io.file ( var_2 ) ; byte [ ] var_3 = new byte [ ( ( int ) ( var_1. length ( ) ) ) ] ; type_1 var_4 = new type_1 ( new java.io.fileinputstream ( var_1 ) ) ; var_4. method_2 ( var_3 ) ; var_5 = new type_2 ( var_3, int_1 ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { var_2 . method_2 ( 0 , 0 , 0 , 1 ) ; var_2 . method_3 ( var_3 ) ; var_5 . update ( ) ; var_4 . method_5 ( var_6 ) ; var_7 . method_5 ( var_6 ) ; var_8 . method_6 ( var_4 ) ; var_9 . method_6 ( ) ; var_10 . method_1 ( var_11 , var_6 ) ; }
[0]: private void method_1 ( java.lang.string state, java.util.arraylist < type_1 > var_1 ) { type_2 var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) { var_1. add ( new type_2 ( state ) ) ; } else { var_2. setvalue ( state ) ; } }

************

************
tgt: public static void method_1 ( ) { switch ( var_1 ) { case 1 : var_2 . y += var_2 . size ; var_1 = int_2 ; break ; case int_1 : var_2 . x += var_2 . size ; var_1 = int_3 ; break ; case int_2 : var_2 . y -= var_2 . size ; var_1 = 1 ; break ; case int_3 : var_2 . x -= var_2 . size ; var_1 = int_1 ; break ; default : break ; } }
[0]: private boolean method_1 ( boolean var_1, type_1 var_2 ) { boolean var_3 = var_4. method_2 ( var_2 ) ; if ( var_3 ) { boolean isempty = var_4. method_3 ( var_2 ) ; if ( var_1 && isempty ) { var_1 = false ; } else { var_1 = true ; } } return var_1 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_3 var_3 = ( ( type_3 ) ( method_4 ( var_4 ) ) ) ; method_5 ( var_3 ) ; method_6 ( ) . method_7 ( true ) ; var_5 = getintent ( ) . method_8 ( var_6 ) ; method_6 ( ) . method_9 ( var_5 . name ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_3 ) ) ; java.lang.system.out.print ( var_1 ) ; try { java.lang.string var_4 = var_2. method_2 ( ) ; return var_4 ; } catch ( java.io.ioexception var_5 ) { return string_1 ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 var_1 = type_2 . method_2 ( ) . method_3 ( ) ; var_1 . method_4 ( ) ; var_1 . method_5 ( this ) ; if ( var_1 . method_6 ( ) ) { type_2 . method_2 ( ) . method_3 ( ) . method_7 ( ) . method_8 ( var_2 ) ; } }
[0]: private type_1 method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( type_2. method_2 ( ). method_3 ( ) ) ; for ( type_3 var_2 : var_3 ) { var_1. remove ( var_2. method_4 ( ) ) ; } return var_1. get ( this. var_4. method_5 ( var_1. size ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 value , type_2 var_1 , type_3 var_2 ) throws java.io.ioexception { var_1 . method_2 ( ) ; var_1 . method_3 ( "type" , value . gettype ( ) . getname ( ) ) ; var_1 . method_5 ( string_1 ) ; if ( ( value . getvalue ( ) ) == null ) { var_1 . method_6 ( ) ; } else { type_4 . method_7 ( value , var_1 ) ; } var_1 . method_8 ( ) ; }
[0]: private void method_1 ( boolean var_1 ) { if ( ( var_2 ) == null ) return ; if ( ( var_3. method_2 ( ) ) == ( type_1. getid ( ) ) ) { var_2. method_3 ( ) ; if ( var_1 ) { method_4 ( ). method_5 ( var_4, var_2 ) ; } else { method_4 ( ). method_5 ( var_5, var_2 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 == null ) { var_3 . method_2 ( var_4 , var_1 ) ; } else { var_3 . update ( var_4 , ( ( ( var_5 ) + string_1 ) + ( var_2 . get ( var_6 ) ) ) , null , var_1 ) ; } }
[0]: private int method_1 ( ) { int var_1 = 0 ; method_2 ( 0.0 ) ; java.util.random var_2 = new java.util.random ( ) ; var_3 = ( ( var_2. method_3 ( ) ) * float_1 ) + 1.0 ; var_4 = 0.0 ; int var_5 = var_2. method_4 ( int_1 ) ; if ( var_5 == 0 ) var_1 = 0 ; if ( var_5 == 1 ) var_1 = 1 ; if ( var_5 == int_2 ) var_1 = int_2 ; if ( var_5 == int_3 ) var_1 = int_3 ; return var_1 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.lang.string var_2 , type_3 var_3 ) { final type_1 var_4 ; type_1 var_5 = null ; for ( type_1 var_6 : var_1 . method_2 ( ) ) { if ( var_2 . equals ( var_6 . getname ( ) ) ) { var_5 = var_6 ; break ; } } if ( var_5 != null ) { var_4 = var_5 ; } else { var_4 = method_3 ( var_1 , var_2 , var_3 ) ; } return var_4 ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view view = var_1. method_2 ( var_4, var_2, false ) ; var_5 = view. method_3 ( var_6 ) ; var_7 = view. method_3 ( var_8 ) ; var_9 = view. method_3 ( var_10 ) ; var_5. settext ( var_11 ) ; var_7. settext ( var_12 ) ; var_9. settext ( var_13 ) ; this. view = view ; return view ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 , int var_2 ) { try { type_1 var_4 = type_2 . method_2 ( string_1 , var_2 ) ; var_5 = ( ( type_3 ) ( var_4 . method_3 ( var_1 ) ) ) ; var_3 . put ( var_1 , var_5 ) ; java.lang.system.out.println ( ( string_2 + var_1 ) ) ; } catch ( java.lang.exception var_6 ) { var_6 . method_4 ( ) ; } }
[0]: public boolean method_1 ( ) { if ( ( var_1 ) < int_1 ) { return false ; } var_1 = ( var_1 ) - int_1 ; if ( ( var_2 ) == null ) { var_2 = new type_1 ( var_3 ) ; return true ; } switch ( var_2. method_2 ( ) ) { case var_4 : { var_2 = new type_1 ( var_5 ) ; break ; } default : return false ; } return false ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 , final java.util.list < type_2 > var_2 ) { final java.util.list < type_3 > var_3 = var_1 . method_2 ( ) . method_3 ( ) ; if ( type_4 . method_4 ( var_3 , var_1 ) ) { var_2 . add ( new type_5 ( var_1 , var_4 , true ) ) ; } if ( type_4 . method_5 ( var_3 , var_1 ) ) { var_2 . add ( new type_5 ( var_1 , var_4 , false ) ) ; } method_6 ( var_3 , var_1 , var_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { try { type_1 var_1 = new type_1 ( var_2, type_1. out ) ; var_1. method_1 ( var_3 ) ; var_1. method_2 ( true ) ; } catch ( java.lang.exception var_4 ) { var_4. method_3 ( ) ; } }

************

************
tgt: private void method_1 ( java.io.file var_1 , type_1 params , java.util.properties var_2 , java.lang.string var_3 ) throws java.io.ioexception { java.io.file var_4 = new java.io.file ( params . method_2 ( ) , var_1 . getname ( ) ) ; java.lang.string var_5 = type_2 . method_3 ( var_1 , var_2 , var_3 ) ; try ( type_3 writer = new java.io.filewriter ( var_4 ) ) { type_4 . method_4 ( var_5 , writer ) ; } }
[0]: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; method_2 ( string_1 ) ; method_3 ( true ) ; method_4 ( ) ; var_2. method_5 ( var_3. info ) ; var_2. method_6 ( var_4 ) ; var_5 = ( ( type_2 ) ( method_7 ( var_6 ) ) ) ; var_7 = ( ( android.widget.button ) ( method_7 ( var_8 ) ) ) ; var_9 = ( ( type_3 ) ( method_7 ( var_10 ) ) ) ; method_8 ( ) ; }

************

************
tgt: public boolean method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) { return true ; } if ( var_1 instanceof java.lang.boolean ) { return ! ( ( ( java.lang.boolean ) ( var_1 ) ) . method_2 ( ) ) ; } if ( var_1 instanceof java.util.collection ) { return ( ( ( java.util.collection ) ( var_1 ) ) . size ( ) ) == 0 ; } return false ; }
[0]: public boolean method_1 ( type_1 item ) { int id = item. method_2 ( ) ; if ( ( var_1. method_3 ( ) ) == ( var_2 ) ) type_2. method_4 ( ). method_5 ( ) ; if ( id == ( var_3 ) ) { type_3 var_4 = new type_3 ( ) ; method_6 ( ). method_7 ( ). replace ( var_5, var_4, string_1 ). commit ( ) ; return true ; } return super. method_1 ( item ) ; }

************

************
tgt: public type_1 method_1 ( ) { java.lang.string var_1 = var_2 . getstring ( string_1 , null ) ; java.lang.string var_3 = var_2 . getstring ( string_2 , null ) ; java.lang.string url = var_2 . getstring ( string_3 ) ; return new type_2 ( var_1 , var_3 , url ) ; }
[0]: public void method_1 ( float var_1, float var_2 ) { float var_3 = var_1 / int_1 ; float var_4 = var_2 / int_1 ; float var_5 = var_1 / ( ( float ) ( var_6 ) ) ; float var_7 = var_2 / ( ( float ) ( var_6 ) ) ; var_8 = type_1. method_2 ( var_3, var_4, var_5, var_7 ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { if ( var_1 == ( var_2 ) ) { var_3 . method_3 ( var_4 ) ; } else if ( var_1 == ( var_6 ) ) { type_1 . method_4 ( var_7 , string_1 , var_8 ) . show ( ) ; } }
[0]: public type_1 method_1 ( long var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4, int var_5 ) { type_2 var_6 = var_7. method_2 ( var_1 ) ; type_3 n = new type_3 ( ) ; n. method_3 ( var_3 ) ; n. method_4 ( var_4 ) ; n. method_5 ( var_5 ) ; var_8. method_6 ( n ) ; return new type_1 ( string_1 ) ; }

************

************
tgt: private void method_1 ( ) { var_1 [ 0 ] = string_1 ; var_2 [ 0 ] = 1 ; var_3 [ 0 ] = 1 ; var_4 [ 0 ] = 1 ; android.widget.button var_5 = ( ( android.widget.button ) ( method_2 ( var_6 ) ) ) ; method_3 ( var_1 [ 0 ] , var_2 [ 0 ] , var_3 [ 0 ] , var_4 [ 0 ] , var_5 ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. put ( var_3, id ). put ( var_4, name ). put ( var_5, date ). put ( var_6, var_7 ). put ( var_8, var_9 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_1 ( ) ; var_2 . method_1 ( ) ; var_3 . method_1 ( ) ; var_4 = 0 ; int var_5 = var_6 . size ( ) ; for ( int i = 0 ; i < var_5 ; ++ i ) { var_6 . get ( i ) . method_3 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( ( method_2 ( ) ) > 0 ) { method_3 ( var_2 ) ; type_2. method_4 ( this ) ; android.view.view content = type_3. method_5 ( this ). method_6 ( method_2 ( ), var_3, false ) ; if ( method_7 ( ) ) { type_4 var_4 = method_8 ( ) ; var_3. method_9 ( var_4 ) ; } var_3. method_9 ( content ) ; } }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_4 ) ) ) { type_1 var_5 = data . getdata ( ) ; if ( var_5 != null ) { method_2 ( var_5 ) ; } } }
[0]: private static void method_1 ( int var_1, int var_2 ) { for ( int var_3 : var_4. method_2 ( ) ) { if ( var_3!= var_2 ) { type_1 var_5 = var_4. get ( var_3 ) ; for ( int var_6 : var_5. method_3 ( ). method_2 ( ) ) { type_2 var_7 = var_5. method_3 ( ). get ( var_6 ) ; if ( ( var_8 ) == var_1 ) { var_7. method_1 ( ) ; } } } } }

************

************
tgt: public void handle ( type_1 var_1 , type_2 var_2 , type_3 response ) throws java.io.ioexception , type_4 { final boolean var_3 = var_1 . method_1 ( ) ; if ( ! ( method_1 ( ) ) ) { var_1 . method_2 ( false , null ) ; } try { var_4 . method_3 ( var_2 , response ) ; } finally { var_1 . method_2 ( var_3 , null ) ; } }
[0]: private static type_1 gettype ( java.lang.class <? > var_1, java.lang.class <? > var_2, java.lang.class <? > c, type_2 [ ] var_3 ) { for ( type_2 t : var_3 ) { type_1 p = type_3. gettype ( var_1, var_2, c, t ) ; if ( p!= null ) { return p ; } } return null ; }

************

************
tgt: public static boolean method_1 ( java.util.list < char [ ] > list , char [ ] array ) { for ( char [ ] element : list ) { if ( type_1 . equals ( element , array ) ) { return true ; } } return false ; }
[0]: private java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1. method_2 ( this. var_2 ) ; var_1. method_3 ( this. var_3 ) ; var_1. method_4 ( this. var_4 ) ; type_2 < java.lang.string > result = var_1. method_5 ( ) ; if ( result. method_6 ( ) ) { java.lang.system.out.println ( ( string_2 + ( result. get ( ) ) ) ) ; } return result. get ( ) ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string ... params ) { java.lang.string var_1 = params [ 0 ] ; java.lang.string attribute = params [ 1 ] ; var_2 = new type_1 ( ) ; var_3 = null ; switch ( var_1 ) { case string_1 : break ; case string_2 : try { var_2 . method_2 ( var_4 . method_3 ( attribute ) ) ; } catch ( type_2 var_5 ) { var_5 . method_4 ( ) ; var_3 = var_5 ; } break ; default : break ; } return var_2 ; }
[0]: public void add ( int var_1, type_1 obj, int var_2 ) { int var_3 = var_4. method_1 ( var_1 ). method_2 ( obj ) ; if ( var_3 == ( - 1 ) ) { var_4. method_1 ( var_1 ). add ( new type_2 < type_1 > ( obj, var_2 ) ) ; } else { var_4. method_1 ( var_1 ). var_5. method_1 ( var_3 ). method_3 ( var_2 ) ; } }

************

************
tgt: public static < type_1 > void method_1 ( type_1 var_1 , type_2 var_3 ) throws type_3 { type_4 var_4 = type_4 . method_2 ( var_1 . getclass ( ) ) ; type_5 var_5 = var_4 . method_3 ( ) ; var_5 . method_4 ( var_6 , true ) ; var_5 . method_5 ( var_1 , var_3 ) ; }
[0]: public void method_1 ( ) { ( var_1 ) ++ ; if ( ( var_1 ) == 1 ) { method_2 ( ) ; } else if ( ( var_1 ) == int_1 ) { method_3 ( ) ; } else if ( ( var_1 ) == int_2 ) { method_4 ( ) ; } else if ( ( var_1 ) == int_3 ) { method_5 ( ) ; } }

************

************
tgt: private void start ( java.lang.string url ) { if ( ! ( var_1 ) ) { var_1 = true ; while ( var_1 ) { try { new java.net.url ( url ) . method_1 ( ) ; java.lang.thread . method_2 ( ( ( ( int_1 * int_2 ) * int_2 ) * int_3 ) ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_3 ( ) ; } } } }
[0]: public java.lang.integer method_1 ( ) { java.lang.integer var_1 = 0 ; for ( java.lang.string var_2 : var_3 ) { var_1 += type_1. method_2 ( int_1, ( ( ( var_2. length ( ) ) * int_1 ) / ( var_4 ) ) ) ; } return type_1. min ( int_1, java.lang.long. method_3 ( java.lang.math.round ( ( var_1 / float_1 ) ) ). intvalue ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( ( ( ( ( ( ( string_1 + ( var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + ( var_4 ) ) + string_4 ) ) ; var_1 . method_2 ( ( string_5 + ( ( ( ( ( ( ( ( string_6 + string_7 ) + string_8 ) + string_10 ) + string_11 ) + string_12 ) + string_13 ) + string_14 ) + string_15 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = getview ( ). method_2 ( var_3 ) ; var_2. method_3 ( true ) ; var_2. method_4 ( new type_3 ( getcontext ( ) ) ) ; type_4 var_4 = new type_5 ( var_5 ) ; var_2. method_5 ( var_4 ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string result = string_1 ; int index = 1 ; for ( type_1 item : this . var_1 ) { result += java.lang.string.format ( string_2 , index ) ; if ( item . method_2 ( ) ) { result += string_3 ; } result += java.lang.string.format ( string_4 , item . getname ( ) ) ; index ++ ; } return result ; }
[0]: public void method_1 ( final java.lang.string var_1, boolean var_2 ) { for ( final type_1 var_3 : var_4 ) { if ( type_2. equals ( var_3. method_2 ( ), var_1 ) ) { var_4. get ( var_4. method_3 ( var_3 ) ). method_4 ( var_2 ) ; } else { throw new type_3 ( string_1 ) ; } } }

************

************
tgt: public void method_1 ( ) { try { if ( method_2 ( ) ) { method_3 ( new type_1 ( var_1 . method_1 ( ) ) ) ; return ; } var_2 . method_1 ( ) ; } catch ( java.lang.exception var_3 ) { throw method_4 ( var_3 ) ; } finally { var_4 . method_5 ( ) ; var_2 = null ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = ( ( type_2 ) ( getactivity ( ) ) ) ; if ( ( var_2. method_2 ( ) )!= null ) var_2. method_2 ( ). method_3 ( var_3 ) ; method_4 ( ) ; method_5 ( ) ; method_4 ( ) ; var_2. method_6 ( ). method_7 ( string_1 ) ; if ( ( var_2. method_8 ( ) )!= null ) { method_9 ( var_2. method_8 ( ) ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) throws type_2 { type_3 < java.util.list < type_1 > > var_1 = new type_3 < java.util.list < type_1 > > ( ) { public java.util.list < type_1 > method_2 ( ) throws java.lang.exception { return var_2 . method_1 ( ) ; } } ; try { return method_3 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { throw new type_2 ( var_3 ) ; } }
[0]: public static type_1 method_1 ( type_2 < type_3 > var_1 ) { type_2 < type_4 > var_2 = ( var_1. isempty ( ) )? var_1. method_2 ( ). method_3 ( ). method_4 ( ) : new type_2 ( ) ; return new type_1 ( type_1. method_5 ( var_1 ), var_2 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; new type_3 ( new type_4 ( this ) ) . execute ( ) ; }
[0]: public void method_1 ( java.lang.string result ) { type_1 tmp = type_2. method_2 ( result ) ; if ( result. contains ( string_1 ) ) { method_3 ( tmp. getstring ( string_2 ) ) ; } else { method_3 ( tmp. getstring ( string_3 ) ) ; } method_4 ( ( ( tmp. method_5 ( string_4 ) ) - int_1 ) ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = ! ( var_1 ) ; type_1 var_2 = ( var_1 ) ? new type_2 ( getactivity ( ) , int_1 ) : new type_3 ( getactivity ( ) ) ; type_4 var_3 = ( var_1 ) ? new type_5 ( var_4 ) : new type_6 ( var_4 ) ; var_5 . method_2 ( var_2 ) ; var_5 . method_3 ( var_3 , true ) ; }
[0]: public synchronized void method_1 ( ) throws type_1 { java.lang.thread var_1 = java.lang.thread. method_2 ( ) ; if (! ( var_2 ) ) throw new type_1 ( ) ; if ( ( var_2 ) && ( var_1!= ( var_3 ) ) ) throw new type_1 ( ) ; var_4 -= var_4 ; if ( ( var_4 ) == 0 ) { var_2 = false ; var_3 = null ; method_3 ( ) ; } }

************

************
tgt: public java.lang.object method_1 ( ) { java.lang.object var_1 = var_2 . method_1 ( id , var_3 , var_4 , var_5 , params ) ; if ( var_1 == null ) { return new type_1 ( ) ; } method_2 ( var_1 ) ; if ( method_3 ( ) ) { return method_4 ( var_1 ) ; } return var_1 ; }
[0]: public type_1 method_1 ( java.lang.class <? extends type_1 > var_1, java.lang.class var_2 ) { if ( ( var_2!= null ) && ( var_2. getclass ( ). method_2 ( ) ) ) { return new type_2 ( var_2. getclass ( ) ) ; } if ( var_1!= null ) { return method_3 ( var_1, var_2 ) ; } else { return method_1 ( var_2 ) ; } }

************

************
tgt: private int [ ] method_1 ( int [ ] list , int var_1 , int var_2 ) { if ( var_1 >= var_2 ) return list ; int var_3 = method_2 ( list , var_1 , var_2 ) ; method_1 ( list , var_1 , ( var_3 - 1 ) ) ; method_1 ( list , ( var_3 + 1 ) , var_2 ) ; return list ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = string_1 ; method_2 ( var_1, method_3 ( string_2, var_2 ), var_2 ) ; java.lang.string var_3 = string_3 ; method_2 ( var_3, method_3 ( string_4, var_2 ), var_2 ) ; }

************

************
tgt: private java.lang.string method_1 ( final java.lang.string key , java.lang.string value ) { try { return var_1 . method_1 ( value ) ; } catch ( java.lang.exception var_2 ) { type_1 . method_2 ( var_3 , string_1 , string_2 , var_4 , var_2 ) ; if ( ! ( type_2 . method_3 ( value ) ) ) { type_1 . method_4 ( var_3 , java.lang.string.format ( string_3 , key ) ) ; method_5 ( key ) ; type_1 . method_4 ( var_3 , java.lang.string.format ( string_4 , key ) ) ; } } return null ; }
[0]: public void method_1 ( int var_1 ) { if ( ( this. var_2 ) instanceof type_1 ) { ( ( type_1 ) ( this. var_2 ) ). method_1 ( var_1 ) ; } else { throw new type_2 ( ( ( string_1 + ( this. var_2. getclass ( ). tostring ( ) ) ) + string_2 ) ) ; } }

************

************
tgt: public static type_1 method_1 ( java.io.file var_1 , java.io.file var_2 ) { java.lang.system.out.println ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; java.util.map < java.lang.integer , type_2 > nodes = type_3 . method_2 ( var_1 ) ; java.util.list < type_4 > var_3 = type_3 . method_3 ( var_2 , nodes ) ; if ( var_3 == null ) return null ; else return new type_1 ( nodes , var_3 ) ; }
[0]: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; boolean var_2 ; for ( type_2 var_3 : var_4 ) { for ( type_2 var_5 : var_4 ) { var_2 = false ; for ( type_1 var_6 : var_1 ) { if ( var_6. method_2 ( var_3, var_5 ) ) var_2 = true ; } if (! var_2 ) var_1. add ( new type_1 ( var_3, var_5 ) ) ; } } } }

************

************
tgt: public java.lang.string format ( type_1 var_1 ) { if ( var_1 == null ) { return string_1 ; } type_3 var_3 = var_1 . method_1 ( ) ; long var_4 = var_3 . method_2 ( var_1 . method_3 ( ) , false ) ; var_1 = new type_1 ( ( var_4 + ( offset ) ) ) ; return var_5 . method_4 ( var_2 ) . method_5 ( var_1 ) ; }
[0]: public boolean method_1 ( double x, double y ) { if ( ( ( ( ( ( var_1 ) + ( error ) ) >= x ) || ( ( ( var_1 ) - ( error ) ) <= x ) ) || ( ( ( var_2 ) + ( error ) ) >= y ) ) || ( ( ( var_2 ) - ( error ) ) <= y ) ) { return true ; } else return false ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { int var_3 = method_2 ( var_1 , var_2 ) ; if ( var_3 == 0 ) { var_3 = method_3 ( var_1 , var_2 ) ; if ( var_3 == 0 ) { var_3 = method_4 ( var_1 , var_2 ) ; } } return var_3 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; var_1 = new type_1 ( ) ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( method_4 ( ), var_3 ) ; var_1. method_5 ( this ) ; var_1. method_6 ( this ) ; var_1. method_7 ( this ) ; if ( new type_2 ( this ). get ( string_1, var_4 class, false ) ) { var_1. method_8 ( true ) ; } }

************

************
tgt: private java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 var_3 : var_1 . gettype ( ) ) { if ( string_1 . equals ( var_3 . method_2 ( ) ) ) var_2 . add ( var_3 . method_3 ( ) ) ; } return var_2 ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, boolean var_2 ) { if (! var_2 ) { var_1 = var_1. replace ( string_1, string_2 ) ; } else { var_1 = var_1. replace ( string_5, string_6 ). replace ( string_7, string_8 ). replace ( string_9, string_10 ). replace ( string_11, string_12 ) ; } return var_1. replace ( string_5, string_6 ). replace ( string_7, string_8 ). replace ( string_9, string_10 ). replace ( string_11, string_12 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.string [ ] params ) { type_2 var_2 = new type_2 ( this . var_3 ) ; type_3 var_4 = var_1 . method_2 ( params [ 0 ] ) ; type_3 var_5 = var_1 . method_2 ( var_4 . method_3 ( var_6 ) ) ; type_3 var_7 = var_1 . method_2 ( params [ 1 ] ) ; if ( var_5 == null ) { return false ; } else { return var_5 . method_4 ( var_7 ) ; } }
[0]: private int method_1 ( int var_1 ) { int var_2 = 0 ; int var_3 = ( var_4 [ var_5 ] ) & var_1 ; switch ( var_1 ) { case var_6 : var_2 = var_3 > > > int_1 ; break ; case var_7 : var_2 = var_3 > > > int_2 ; break ; case var_8 : var_2 = var_3 > > > int_3 ; break ; case var_9 : var_2 = var_3 > > > int_4 ; break ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_1 . method_2 ( ) ; type_1 var_2 = getactivity ( ) . method_3 ( getstring ( var_3 ) , 0 ) ; var_4 = var_2 . getboolean ( string_1 , false ) ; method_4 ( ) ; }
[0]: public void method_1 ( android.view.view view, boolean var_1 ) { if ( var_1 ) { var_2. method_2 ( ) ; type_1. method_3 ( string_1, ( ( var_2. method_4 ( ) ) + string_2 ) ) ; } else { type_2 var_3 = ( ( type_2 ) ( getactivity ( ). method_5 ( var_4 ) ) ) ; var_3. method_6 ( view. method_7 ( ), 0 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) ; var_1 = new type_1 ( type_2 . name ( string_1 ) , false , new type_1 [ ] { type_2 . method_2 ( ) } , var_1 . method_4 ( string_2 ) ) ; type_2 . method_5 ( var_1 , false ) ; type_2 . method_5 ( var_1 , true , string_2 , string_3 ) ; }
[0]: public void method_1 ( ) { type_1 < type_2 < type_3 > > var_1 = var_2. method_2 ( var_3 class ). method_3 ( string_1, 1 ). method_4 ( string_2 ). method_5 ( 1 ) ; type_2 < type_3 > var_4 = var_1. get ( ) ; assertnotnull ( var_4 ) ; type_3 [ ] array = new type_3 [ ] { var_5 } ; int i = 0 ; for ( type_3 var_6 : var_4 ) { assertequals ( array [ i ], var_6 ) ; i ++ ; } } }

************

************
tgt: public void method_1 ( java.io.inputstream var_1 ) { if ( ( var_2 ) != null ) { try { var_2 . method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { } } var_2 = var_1 ; var_4 = new type_1 ( var_2 ) ; var_5 = new type_2 ( ) ; init ( ) ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( ( var_1. compareto ( var_2. get ( i ) ) ) == 0 ) { var_2. remove ( i ) ; if ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) { method_2 ( var_1 ) ; } return var_1 ; } } return null ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string id ) { type_1 var_1 = super . method_1 ( id ) ; if ( var_1 == null ) { for ( type_1 var_2 : method_2 ( ) ) { if ( var_2 instanceof type_2 ) { type_3 var_3 = type_4 . method_3 ( id , var_2 , var_4 . method_4 ( ) , var_4 . method_5 ( ) ) ; if ( var_3 != null ) { return var_3 ; } } } } return var_1 ; }
[0]: public static type_1 method_1 ( int var_1, int var_2, long var_3 ) { type_1. method_2 ( int_1, int_2 ) ; if (! ( type_1. method_3 ( var_3, var_1 ) ) ) { return null ; } type_1 var_4 = new type_1 ( ) ; var_5 = var_2 ; var_6 = var_1 ; var_7 = var_3 ; var_8 = type_2. method_4 ( ). tostring ( ) ; var_4. method_5 ( ) ; return var_4 ; }

************

************
tgt: public void remove ( int id ) { try { java.lang.string query = string_1 ; type_1 var_1 = method_1 ( ) ; type_2 var_2 = var_1 . method_2 ( query ) ; var_2 . method_3 ( 1 , id ) ; var_2 . method_4 ( ) ; } catch ( type_3 var_3 ) { java.lang.system.out.println ( string_2 ) ; } }
[0]: public java.lang.string method_1 ( ) { if ( var_1. isempty ( ) ) { return var_2. isempty ( )? null : var_2 ; } else { java.lang.string var_3 = var_1. get ( 0 ). getname ( ) ; for ( int i = 1 ; i < ( var_1. size ( ) ) ; i ++ ) { var_3 = string_1 + ( var_1. get ( i ). getname ( ) ) ; } return var_3 ; } }

************

************
tgt: private int method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( ( var_2 . size ( ) ) - 1 ) ; i ++ ) { java.lang.system.out.println ( var_2 . size ( ) ) ; if ( var_2 . get ( i ) . method_2 ( ) . contains ( var_1 ) ) { return i ; } } return - 1 ; }
[0]: public static type_1 method_1 ( type_2 context, java.lang.string var_1 ) { java.util.list < type_3 > var_2 = type_4. method_2 ( ( var_1 + ( context. getstring ( var_3 ) ) ) ) ; type_5 var_4 = type_4. method_3 ( context, var_1 ) ; type_1 var_5 ; if ( var_4!= null ) { var_5 = new type_1 ( var_2, java.util.arrays.aslist ( var_4 ) ) ; } else { var_5 = new type_1 ( var_2 ) ; } return var_5 ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_3 . values ( ) ) { type_2 var_4 = var_2 . method_2 ( ) ; type_2 var_5 = var_1 . method_2 ( ) ; if ( type_3 . method_3 ( gettype ( ) , var_5 , var_4 , false ) ) { return var_2 ; } else if ( type_3 . method_3 ( gettype ( ) , var_4 , var_5 , false ) ) { return var_1 ; } } return null ; }
[0]: public boolean method_1 ( final type_1 var_1 ) { try { method_2 ( type_2. method_3 ( var_1 ) ) ; return true ; } catch ( type_3 var_2 ) { type_4. method_4 ( ( string_1 + var_2 ) ) ; return false ; } catch ( type_5 var_3 ) { type_4. method_4 ( ( string_2 + var_3 ) ) ; return false ; } catch ( type_6 var_4 ) { return false ; } }

************

************
tgt: protected java.util.list < type_1 > method_1 ( java.lang.integer ... params ) { java.lang.string var_1 = ( ( params . length ) > 0 ) ? java.lang.string . method_2 ( params [ 0 ] ) : string_1 ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2 . method_3 ( var_1 ) ; return var_3 . method_4 ( ) ; }
[0]: private static java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_2. add ( type_1. method_2 ( i, var_4. get ( i ) ) ) ; } return var_2 ; }

************

************
tgt: public static type_1 [ ] method_1 ( ) { return new type_1 [ ] { var_1 , var_2 , var_3 , var_4 , var_5 , var_6 , var_7 , var_8 , var_9 , var_10 , var_11 , var_12 , var_13 , var_15 , var_16 , var_17 , var_18 , var_19 , var_20 } ; }
[0]: protected static java.lang.string method_1 ( java.lang.string value, boolean var_1 ) { java.lang.string var_2 = value. replaceall ( string_1, string_2 ). replaceall ( string_3, string_4 ). replaceall ( string_5, string_6 ). replaceall ( string_7, string_5 ). replaceall ( string_8, string_3 ) ; return var_1? ( string_5 + var_2 ) + string_5 : var_2 ; }

************

************
tgt: public void method_1 ( int var_1 ) { if ( ( var_2 ) || ( var_1 == ( - 1 ) ) ) { return ; } method_2 ( var_3 , var_1 ) ; method_3 ( var_1 , var_4 ) ; var_5 [ var_1 ] = true ; var_6 . method_4 ( var_7 , var_4 , this ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, type_2 var_3, type_3 type_4 ) { type_1 var_4 = new type_1 ( var_1 ). method_2 ( new type_5 ( var_2, true, true, true, false ) ). method_3 ( true ). method_4 ( true ). method_5 ( true ). method_6 ( true ). method_7 ( true ). method_8 ( ( ( string_1 + var_2 ) + string_2 ) ). method_9 ( var_3 ) ; var_3. method_10 ( var_4, type_4 ) ; return var_4 ; }

************

************
tgt: private void method_1 ( ) { int var_1 = 0 ; boolean var_2 = false ; while ( ! var_2 ) { var_1 ++ ; type_1 var_3 = var_4 . method_2 ( ) ; method_3 ( var_3 . method_4 ( ) ) ; var_2 = var_4 . method_5 ( var_3 , null , false ) ; if ( var_1 > int_1 ) { type_2 . method_6 ( ( string_1 + string_2 ) ) ; this . var_5 = type_3 . method_7 ( ) . method_8 ( method_9 ( ) ) ; break ; } } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. getvalue ( ) )!= null ) { type_2 var_2 = var_1. getvalue ( var_3 class ) ; if ( ( var_2. method_2 ( ) )!= null ) { if (! ( var_4 ) ) method_3 ( var_5 ) ; if (! ( var_6 ) ) var_7. method_4 ( ) ; } } else { var_8. method_5 ( var_9 ) ; } } }

************

************
tgt: public type_1 method_1 ( ) { final type_1 var_1 = new type_1 ( ) . method_2 ( var_2 ) ; var_1 . method_5 ( method_6 ( ) ) ; var_1 . method_5 ( new type_5 ( ) ) ; var_1 . method_5 ( new type_6 ( ) ) ; return var_1 ; }
[0]: public static void method_1 ( type_1 var_1 ) { try { type_2 var_2 = type_3. method_2 ( ) ; type_4 var_3 = var_2. method_3 ( ) ; var_3. method_4 ( ) ; var_3. update ( var_1 ) ; var_3. method_5 ( ). commit ( ) ; if ( var_3. method_6 ( ) ) { var_3. method_7 ( ) ; } } catch ( type_5 var_4 ) { var_4. method_8 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( this . var_1 . method_2 ( ) ) == null ) { method_3 ( var_1 . method_2 ( ) . method_4 ( ) , var_1 . method_2 ( ) . method_5 ( ) ) ; } else { method_3 ( var_1 . method_2 ( ) . method_4 ( ) , var_1 . method_2 ( ) . method_5 ( ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; android.content.intent intent = getintent ( ) ; java.lang.string var_2 = intent. method_2 ( var_3 ) ; type_2. method_3 ( string_1, ( string_2 + var_2 ) ) ; type_3 var_4 = new type_3 ( this ) ; var_4. method_4 ( int_1 ) ; var_4. settext ( ( ( ( var_5 ) + string_3 ) + var_2 ) ) ; method_5 ( var_4 ) ; }

************

************
tgt: public boolean method_1 ( java.util.arraylist < type_1 > var_1 ) { try { java.io.fileoutputstream var_3 = new java.io.fileoutputstream ( string_1 ) ; type_2 out = new type_2 ( var_3 ) ; out . method_3 ( var_1 ) ; out . method_4 ( ) ; var_3 . method_4 ( ) ; java.lang.system.out.println ( string_2 ) ; } catch ( java.io.ioexception i ) { java.lang.system.out.println ( string_3 ) ; i . method_5 ( ) ; } return true ; }
[0]: public static type_1 method_1 ( int var_1 ) { if ( var_1 == int_1 ) { return var_2 ; } else if ( var_1 == int_2 ) { return var_3 ; } else if ( ( var_1 == int_3 ) || ( var_1 == int_4 ) ) { return var_4 ; } else if ( var_1 <= int_5 ) { return var_5 ; } return null ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; if ( i == 0 ) var_2 super . method_3 ( ) ; if ( i == int_1 ) { method_2 ( ) ; type_1 . method_4 ( context , var_3 , var_4 ) . show ( ) ; } var_5 . method_5 ( ) ; }
[0]: private void method_1 ( java.lang.stringbuilder b ) { if ( ( var_1. size ( ) ) > 0 ) { java.lang.string [ ] var_2 = new java.lang.string [ var_1. size ( ) ] ; int i = 0 ; for ( java.lang.string var_3 : var_2 ) { var_2 [ ( i ++ ) ] = method_2 ( var_3 ) ; } type_1. method_3 ( b, var_2 ) ; i ++ ; } } }

************

************
tgt: private void method_1 ( ) { java.util.iterator < type_1 > var_1 = var_2 . iterator ( ) ; ( var_3 ) ++ ; while ( var_1 . method_2 ( ) ) { ( ( type_1 ) ( var_1 . method_3 ( ) ) ) . method_4 ( var_3 ) ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { if ( (! ( method_2 ( ) ) ) || (! ( var_1. method_2 ( ) ) ) ) { return new type_2 ( 0 ) ; } return new type_2 ( ( ( value ) - ( ( ( type_2 ) ( var_1 ) ). getvalue ( ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( int var_1 , int var_2 ) { if ( int_1 < var_1 ) throw new type_2 ( ( string_1 + var_1 ) ) ; if ( 0 <= var_1 ) this . var_3 = var_1 ; if ( 0 <= var_2 ) this . var_4 = var_2 ; return this ; }
[0]: public static boolean method_1 ( int [ ] [ ] array, int var_1, int c ) { return ( ( var_1 > 0 ) && ( var_1 < ( array. length ) ) ) && ( ( c > 0 ) && ( c < ( array [ var_1 ]. length ) ) ) ; }

************

************
tgt: private static void method_1 ( java.util.list < java.lang.integer > x , java.util.list < java.lang.integer > y , boolean [ ] a , boolean [ ] b ) { int var_1 = type_1 . method_2 ( a ) ; int var_2 = type_1 . method_2 ( b ) ; if ( var_1 > var_2 ) { java.lang.system.out.println ( string_1 ) ; } else if ( var_1 == var_2 ) { type_1 . method_3 ( x , y ) ; } else { java.lang.system.out.println ( string_2 ) ; } }
[0]: public java.lang.long method_1 ( java.lang.long var_1, type_1 var_2 ) { type_2 var_3 = var_4. method_2 ( var_1 ) ; if (! ( var_3. method_3 ( ). equals ( var_5 ) ) ) { throw new type_3 ( string_1 ) ; } type_4 var_6 = var_7. method_4 ( var_2 ) ; var_6. method_5 ( var_3 ) ; var_8. method_6 ( var_6 ) ; return var_6. getid ( ) ; }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { java.lang.string var_1 = intent . method_2 ( ) ; java.lang.string token = intent . method_3 ( var_2 ) ; type_1 . method_4 ( var_3 , ( string_1 + var_1 ) ) ; type_1 . method_4 ( var_3 , ( string_1 + token ) ) ; if ( var_4 ) { } }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { if ( method_2 ( var_1, var_2, var_3 ) ) { for ( int var_4 = 0 ; var_4 < ( var_5. length ) ; var_4 ++ ) { var_6 [ var_5 [ var_4 ] ] [ var_7 [ var_4 ] ] = var_8 ; var_1. method_3 ( ) ; } } }

************

************
tgt: public final boolean method_1 ( java.lang.string var_1 ) { final type_1 var_2 = new type_1 ( true ) ; var_2 . method_2 ( ) . method_3 ( ) . method_4 ( var_2 . method_5 ( ) . method_6 ( ) . var_3 ) ; method_7 ( var_1 , var_2 ) ; if ( ( var_4 . method_8 ( ) ) == 1 ) { method_9 ( var_4 ) ; var_5 . method_10 ( true ) ; } method_11 ( ) ; return true ; }
[0]: public boolean method_1 ( java.io.file var_1, java.lang.string name ) { return (! ( name. equals ( string_1 ) ) ) && (! ( ( ( name. method_2 ( string_2 ) ) && ( name. startswith ( string_3 ) ) ) && ( name. method_2 ( var_2 ) ) ) ) ; }

************

************
tgt: public void add ( type_1 n ) { var_2 . add ( null ) ; int index = ( var_2 . size ( ) ) - 1 ; while ( ( index > 0 ) && ( ( var_2 . get ( method_1 ( index ) ) . compareto ( n ) ) == 1 ) ) { var_2 . set ( index , var_2 . get ( method_1 ( index ) ) ) ; index = method_1 ( index ) ; } var_2 . set ( index , n ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) throws type_2 { java.lang.string var_2 = var_3. method_2 ( var_4, var_1 ) ; if ( var_2 == null ) { throw new type_2 ( java.lang.string.format ( type_3. get ( var_5 ), var_1. getname ( ) ), var_6 ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) { get ( ) . method_2 ( string_1 , string_2 , string_3 ) . setvalue ( false ) . method_3 ( string_4 ) ; get ( ) . method_2 ( string_1 , string_2 , string_5 ) . method_3 ( string_6 ) ; get ( ) . method_2 ( string_1 , string_2 , string_5 , string_7 ) . setvalue ( string_8 ) . method_3 ( string_9 ) ; get ( ) . method_2 ( string_1 , string_10 , string_11 ) . method_3 ( string_12 ) ; }
[0]: public static type_1 method_1 ( java.lang.string label, int var_1, boolean var_2 ) { type_1 var_3 = new type_1 ( label ) ; type_2. init ( var_3, var_2 ) ; var_3. method_2 ( new java.awt.font ( var_4, var_5, var_1 ) ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = this . method_3 ( ) ; type_3 values = method_4 ( var_1 ) ; long var_3 = var_2 . method_5 ( var_4 , null , values ) ; var_5 = ( ( int ) ( var_3 ) ) ; var_6 = false ; var_2 . method_6 ( ) ; }
[0]: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if (! ( obj instanceof type_1 ) ) return false ; final type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( ( type_2. equals ( this. var_2, var_3 ) ) && ( type_2. equals ( this. var_4, var_5 ) ) ) && ( type_2. equals ( this. var_6, var_7 ) ) ; }

************

************
tgt: public static < type_1 , type_2 > type_3 < java.util.map.entry < type_1 , type_2 > > method_1 ( final java.util.map < type_1 , type_2 > var_1 ) { if ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) { return type_4 . method_2 ( ) ; } return type_4 . method_1 ( var_1 . method_3 ( ) ) ; }
[0]: public type_1 method_1 ( ) throws java.lang.exception { type_2 < type_3 > response = this. var_1. method_2 ( this. method_3 ( ), this. key ) ; type_3 var_2 = response. method_4 ( ) ; this. method_5 ( var_2 ) ; method_6 ( ) ; return this ; }

************

************
tgt: public void method_4 ( ) { java.util.map < java.lang.string , java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( string_1 , string_2 ) ; type_1 . method_2 ( ) . method_3 ( ) . method_4 ( var_1 ) ; type_1 . method_2 ( ) . method_5 ( null ) ; type_1 . method_2 ( ) . method_6 ( ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { var_1. method_2 ( ( string_1 + ( var_4 ) ) ) ; var_1. method_2 ( ( string_1 + ( var_5 ) ) ) ; var_1. method_2 ( ( string_1 + ( var_6 ) ) ) ; var_1. method_2 ( ( string_1 + ( var_7 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_4 ( string_1 ) ; var_2 . method_2 ( var_3 , 0 , 0 ) ; var_2 . method_2 ( var_3 , 1 , 1 ) ; var_2 . method_2 ( var_3 , int_1 , int_1 ) ; boolean var_5 = var_1 . method_3 ( var_3 , var_2 ) ; assertthat ( var_5 , type_5 . method_4 ( true ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ). method_3 ( ) ; type_1 var_2 = method_4 ( ) ; int var_3 = ( var_4 ) / int_1 ; int var_5 = ( var_1. height ) / int_1 ; method_5 ( ( var_3 - ( ( var_6 ) / int_1 ) ), ( var_5 - ( ( var_2. height ) / int_1 ) ) ) ; method_6 ( ) ; method_7 ( var_7 ) ; }

************

************
tgt: public void set ( type_1 var_1 , type_2 var_2 ) { type_3 . method_1 ( var_3 , string_1 ) ; this . var_1 = var_1 ; this . var_4 = var_1 . method_2 ( ) ; this . var_5 = var_2 ; var_8 = 0 ; var_9 = 0 ; var_10 = 0 ; var_11 = true ; type_3 . method_1 ( var_3 , string_2 ) ; var_6 . method_3 ( var_7 ) ; }
[0]: public void start ( int var_1 ) { this. var_1 = var_1 ; try { var_2 = new type_1 ( var_1 ) ; byte [ ] var_3 = new byte [ int_1 ] ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; var_4 = true ; method_1 ( var_3 ) ; } catch ( type_2 var_5 ) { var_5. method_2 ( ) ; } }

************

************
tgt: protected java.lang.string method_1 ( java.lang.string path , java.lang.string var_1 ) { if ( ( ( path == null ) || ( path . equals ( string_1 ) ) ) || ( var_1 == null ) ) { return string_1 ; } if ( ( path . startswith ( string_2 ) ) || ( path . startswith ( string_3 ) ) ) { return path ; } return ( ( ( string_4 + path ) + string_5 ) + var_1 ) + string_6 ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.object var_2 ) { if ( method_2 ( ) ) { java.lang.string var_3 = type_2. method_3 ( method_4 ( ) ) ; if (! ( var_3. equals ( ( ( java.lang.string ) ( var_2 ) ) ) ) ) { type_2. method_5 ( method_4 ( ) ) ; } return true ; } else { type_3. method_6 ( method_4 ( ), var_4, var_5 ). show ( ) ; return false ; } } return false ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws java.lang.exception { java.util.hashmap < java.lang.string , type_1 > var_2 = method_2 ( ) . method_3 ( ) ; type_1 temp = var_2 . get ( var_1 . id ) ; temp . method_4 ( var_1 . name ) ; if ( ( var_3 ) < 0 ) { return null ; } temp . method_5 ( var_3 ) ; return temp ; }
[0]: private void method_1 ( ) { try { final int var_1 = ( ( var_2 ) == ( var_3 ) )? var_4 : var_5 ; var_6 = type_1. open ( var_1 ) ; } catch ( java.lang.exception var_7 ) { view. method_2 ( ) ; } if ( ( var_6 )!= null ) { view. init ( var_6 ) ; } }

************

************
tgt: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { ( ( type_1 ) ( var_1 . get ( i ) ) ) . method_2 ( var_2 , int_1 ) ; } }
[0]: public void method_1 ( final int var_1, final boolean var_2 ) { var_3 += var_1 ; if ( ( var_3 ) >= ( var_4. length ) ) { var_3 = ( var_4. length ) - 1 ; } var_5. method_2 ( new type_1 ( false, var_3 ) ) ; if ( var_2 ) { var_6 += var_1 ; if ( ( var_6 ) > ( var_3 ) ) { var_6 = var_3 ; } var_5. method_2 ( new type_1 ( true, var_6 ) ) ; } method_3 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 obj ) { for ( ; ; ) { try { var_1 [ ( ( var_2 ) ++ ) ] = obj ; return ; } catch ( type_2 var_3 ) { ( var_2 ) -- ; method_2 ( ) ; if ( ( var_2 ) >= ( var_1 . length ) ) throw new type_3 ( string_1 ) ; } } }
[0]: private boolean method_1 ( type_1 var_1, java.lang.string var_2 ) { boolean var_3 = true ; if ( ( var_1. method_2 ( ). method_3 ( ). method_4 ( string_1 ) ) && (! ( var_2. equals ( string_2 ) ) ) ) { int var_4 = java.lang.integer.parseint ( type_1. method_5 ( ). method_6 ( ). method_7 ( ). get ( string_3 ) ) ; if ( ( var_5. method_8 ( ) )!= var_4 ) { var_3 = false ; } } return var_3 ; }

************

************
tgt: private void method_1 ( ) { var_1 . set ( 0 ) ; method_2 ( ) ; type_1 [ ] parameters = new type_1 [ ( var_2 . method_3 ( ) ) + 1 ] ; for ( int i = 0 ; i < ( parameters . length ) ; ++ i ) { parameters [ i ] = var_3 . method_4 ( i ) ; } var_4 = new type_2 ( ) ; var_4 . method_5 ( var_3 , parameters ) ; method_6 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_1. method_2 ( this. getcontext ( ). getstring ( var_2 ), ( ( var_3 ) + ( ( var_4 ) * float_1 ) ), ( ( var_3 ) + ( ( var_4 ) * float_2 ) ), var_5 ) ; }

************

************
tgt: public void method_1 ( boolean value ) { var_1 . method_2 ( value ) ; var_2 . method_2 ( ( ( value || ( ( var_1 . getvalue ( ) ) == null ) ) || ( ! ( var_1 . getvalue ( ) . equals ( var_3 ) ) ) ) ) ; }
[0]: public void method_1 ( int var_1, java.lang.string var_2, boolean var_3 ) { var_4. format ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + var_3 ) + string_2 ) + var_2 ) ) ; var_5 = var_3 ; var_6 = false ; var_7 = new type_1 ( var_1 ) ; var_8 = new type_2 ( var_2 ) ; var_9 = new type_3 ( int_1, this ) ; var_9. start ( ) ; var_10 = new type_4 ( ) ; if ( var_5 ) { var_10. start ( ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { synchronized ( var_2 ) { if ( ( var_2 . size ( ) ) > 0 ) { method_2 ( ) ; for ( type_1 var_3 : var_2 ) { if ( type_2 . equals ( var_1 , var_4 ) ) { type_3 . method_3 ( var_5 , ( string_1 + var_1 ) ) ; return true ; } } } } type_3 . method_3 ( var_5 , ( string_2 + var_1 ) ) ; return false ; }
[0]: public void method_1 ( int x, int var_1, type_1 var_2 ) { type_2. method_2 ( var_2, string_1 ) ; method_3 ( x, var_1 ) ; this. var_3 [ ( ( x - ( this. start. method_4 ( ) ) ) | ( ( var_1 - ( this. start. method_5 ( ) ) ) < < int_1 ) ) ] = ( ( type_3 ) ( var_2 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception , type_2 { for ( int var_2 : var_3 . method_2 ( var_1 , var_4 ) ) { if ( ( var_5 . method_3 ( int_1 ) ) < ( var_6 . method_4 ( var_2 ) ) ) { method_5 ( var_1 , var_2 ) ; } } }
[0]: public void method_1 ( ) { java.lang.string var_1 = ( ( java.lang.string ) ( type_1. method_2 ( null, ( ( ( string_1 + ( var_2. method_3 ( ). step ( ) ) ) + string_2 ), string_3, var_3, null, null, string_4 ) ) ) ; var_4. put ( var_2. method_3 ( ). step ( ), var_1 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { type_3 var_2 = this . var_3 . get ( var_1 ) ; if ( var_2 == null ) { throw new type_2 ( java.lang.string.format ( string_1 , var_1 ) ) ; } return this . method_2 ( var_2 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2 ) ; var_3. method_3 ( ) ; var_1. method_4 ( var_3 ) ; var_4. method_2 ( var_5 ) ; var_6. method_3 ( ) ; var_4. method_4 ( var_6 ) ; ( ( type_1 ) ( var_7 ) ). method_5 ( false ) ; }

************

************
tgt: public static void method_1 ( final type_1 var_1 , java.lang.string filepath , java.lang.string content ) { type_2 var_2 = new type_2 ( content ) ; type_3 var_3 = type_4 . method_2 ( var_1 . getcontext ( ) , filepath , var_2 , content , type_5 . method_3 ( var_1 ) , null ) ; var_1 . settext ( var_3 ) ; }
[0]: public boolean method_1 ( ) { int var_1 = 0 ; int var_2 = 0 ; for ( type_1 p : var_3. method_2 ( ) ) { if ( p. method_3 ( ) ) { if ( ( p. method_4 ( ) ) == ( var_4 ) ) { var_1 ++ ; } else { var_2 ++ ; } } } return ( var_1 == 0 ) || ( var_1 >= ( var_2 - 1 ) ) ; }

************

************
tgt: private void method_1 ( ) { java.util.list < type_1 > var_2 ; var_2 = var_3 . method_3 ( ) ; var_4 = new type_2 ( this , var_5 , var_2 ) ; type_3 var_6 = ( ( type_3 ) ( method_4 ( var_7 ) ) ) ; var_6 . method_5 ( var_4 ) ; }
[0]: public void method_1 ( java.lang.string key, boolean value ) { if ( ( ( var_1. method_2 ( ) ) == null ) || ( ( var_1. method_2 ( ). gettype ( ) ) == ( var_2 ) ) ) { return ; } var_1. method_2 ( ). method_3 ( key, new type_1 ( type_2. method_4 ( ), value ) ) ; }

************

************
tgt: private double method_1 ( int var_1 ) { if ( var_1 < int_1 ) { return 0 ; } double a = java.lang.math.pow ( float_1 , ( var_1 / int_1 ) ) ; double b = float_2 * ( ( java.lang.math.pow ( float_3 , ( var_1 - int_1 ) ) ) - 1 ) ; return ( ( type_1 . method_2 ( ( a + b ) ) ) / ( type_1 . method_2 ( float_4 ) ) ) + 1 ; }
[0]: public boolean method_1 ( ) { return ( ( ( var_1. select ( ). count ( ) ) == 0 ) && (! ( var_2. contains ( var_3. method_2 ( ) ) ) ) ) || ( ( ( var_1. select ( ). count ( ) ) == int_1 ) && ( var_2. contains ( var_3. method_2 ( ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 item ) { if ( ! ( var_1 . method_2 ( item . getid ( ) ) ) ) { type_2 . error ( string_1 , item . getid ( ) ) ; return null ; } return var_1 . method_4 ( item ) ; }
[0]: public java.lang.string method_1 ( int var_1, int var_2 ) { java.util.list < java.lang.string > var_3 = var_4. method_2 ( ( var_1 - 1 ), var_2 ) ; java.lang.stringbuilder var_5 = new java.lang.stringbuilder ( ) ; for ( java.lang.string line : var_3 ) { if ( ( var_5. length ( ) )!= 0 ) { var_5. append ( var_6 ) ; } var_5. append ( line ) ; } return var_5. tostring ( ) ; }

************

************
tgt: private type_1 method_1 ( ) { java.util.linkedlist < type_1 > var_1 = var_2 . method_2 ( var_3 ) ; for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { if ( int_1 == ( var_1 . get ( i ) . method_3 ( ) ) ) { return var_1 . get ( i ) ; } } return null ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = new type_1 ( var_1. x, 0, var_3 ) ; var_4 = var_5. method_2 ( var_2 ) ; var_6. set ( var_5. method_3 ( var_4, var_2 ) ) ; var_6. method_4 ( var_1. method_5 ( ) ) ; var_7. set ( var_6. method_6 ( ), var_6. method_7 ( ) ) ; return var_6 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { method_2 ( ) . method_3 ( var_2 , var_1 ) ; var_3 = var_1 . method_4 ( var_4 ) ; var_5 = var_1 . method_4 ( var_6 ) ; if ( method_5 ( var_7 ) ) var_3 . method_6 ( var_8 ) ; if ( method_5 ( var_9 ) ) var_5 . method_6 ( var_10 ) ; return true ; }
[0]: public void method_1 ( boolean b ) { if ( b ) { assert ( state ) == ( var_1 ) ; setstate ( var_2 ) ; } else { assert ( state ) == ( var_2 ) ; setstate ( var_1 ) ; } var_3. method_2 ( var_4 ) ; }

************

************
tgt: public void add ( type_1 var_1 ) { java.lang.string date = var_2 . format ( var_1 . method_1 ( ) . gettime ( ) ) ; boolean var_3 = var_4 . method_2 ( date ) ; if ( ! var_3 ) { var_4 . put ( date , new java.util.arraylist < > ( ) ) ; } var_4 . get ( date ) . add ( var_1 ) ; type_2 . method_3 ( new type_1 [ ] { var_1 } ) ; }
[0]: public byte [ ] method_1 ( ) throws type_1 { java.lang.object var_1 = method_2 ( ) ; if ( var_1 == null ) { return null ; } type_2 var_2 = type. method_3 ( var_3 ) ; if ( var_2 == null ) { throw new type_1 ( string_1 ) ; } java.io.inputstream data = type_3. method_4 ( method_2 ( ), var_2. type, var_4 ) ; try { return type_4. method_5 ( data ) ; } catch ( java.io.ioexception var_5 ) { throw new type_1 ( var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_1 var_2 ) { try { try { java.lang.string result = var_3 . method_2 ( var_1 . method_3 ( ) , string_1 , var_2 ) ; type_2 . method_4 ( ( ( string_2 + result ) + string_3 ) ) ; } catch ( type_3 var_4 ) { } } catch ( java.lang.exception var_4 ) { type_2 . method_4 ( ( string_4 + var_4 ) ) ; } }
[0]: public static type_1 method_1 ( ) { type_2 var_1 = type_2. method_2 ( ) ; var_1. method_3 ( string_1, string_2 ) ; var_1. method_3 ( string_3, string_4 ) ; var_1. method_3 ( string_5, string_6 ) ; type_3 var_2 = new type_3 ( type_4. method_4 ( ), null ) ; var_2. method_5 ( ( ( string_7 + ( type_5. method_6 ( string_8 ) ) ) + string_9 ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { super . method_1 ( ) ; java.io.file var_1 = new java.io.file ( var_2 ) ; byte [ ] var_3 = new byte [ ( ( int ) ( var_1 . length ( ) ) ) ] ; type_1 var_4 = new type_1 ( new java.io.fileinputstream ( var_1 ) ) ; var_4 . method_2 ( var_3 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( this. var_2 ). method_3 ( var_1. method_4 ( ) ). method_5 ( var_3 ) ; var_4. settext ( var_1. getname ( ) ) ; var_5. settext ( var_1. method_6 ( ). get ( 0 ) ) ; var_6. settext ( ( ( string_1 + ( var_1. method_7 ( ) ) ) + string_2 ) ) ; }

************

************
tgt: private void method_1 ( java.lang.string state , java.util.list < type_1 > var_1 ) { type_2 var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) { var_1 . add ( new type_2 ( state ) ) ; } else { var_2 . setvalue ( state ) ; } }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = method_2 ( var_1 ) ; if ( ( var_1. method_3 ( ) ) == ( var_3 ) ) { var_2. method_4 ( ) ; } else if ( ( var_1. method_3 ( ) ) == ( var_4 ) ) { var_2. method_5 ( ) ; } return var_2. method_6 ( method_7 ( var_1. method_8 ( ) ) ) ; }

************

************
tgt: private boolean method_1 ( boolean var_1 , type_1 var_2 ) { boolean var_3 = var_4 . method_2 ( var_2 ) ; if ( var_3 ) { boolean isempty = var_4 . method_3 ( var_2 ) ; if ( isempty ) { var_1 = false ; } else { var_1 = true ; } } return var_1 ; }
[0]: public void method_1 ( java.awt.color var_1 ) { if ( ( ( this. var_1 )!= null ) && ( this. var_1. equals ( var_1 ) ) ) return ; this. var_1 = var_1 ; method_2 ( new type_1 ( this, var_2, string_1 ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_3 ) ) ; java.lang.system.out.print ( var_1 ) ; try { java.lang.string var_4 = var_2 . method_2 ( ) ; if ( var_4 == null ) var_4 = string_1 ; return var_4 ; } catch ( java.io.ioexception var_5 ) { return string_1 ; } }
[0]: public static type_1 method_1 ( type_1 var_1 ) { type_2. state ( string_1 ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1. method_2 ( ) ; type_2. method_3 ( ( float_1 + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( int_1 ) ) ) ) * float_1 ) ) ) ; } return var_1 ; }

************

************
tgt: private type_1 method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( type_2 . method_2 ( ) . method_3 ( ) ) ; for ( type_3 var_2 : var_3 ) { var_1 . remove ( var_2 . method_4 ( ) ) ; } if ( ( var_1 . size ( ) ) == 0 ) return null ; return var_1 . get ( this . var_4 . method_5 ( var_1 . size ( ) ) ) ; }
[0]: public static void method_1 ( ) { var_1 = var_2 ; var_3 = float_1 * ( var_4 ) ; var_5 = var_6 ; if ( ( var_7 )!= 0 ) { type_1. method_2 ( type_2. method_3 ( ), var_7, var_8 ) ; type_1. method_2 ( type_2. method_4 ( ), var_9, var_10 ) ; type_1. method_2 ( type_2. method_5 ( ), var_11, var_12 ) ; type_1. method_2 ( type_2. method_6 ( ), var_13, var_14 ) ; } }

************

************
tgt: private void method_1 ( boolean var_1 ) { if ( ( var_2 ) == null ) return ; var_2 . method_3 ( ) ; if ( ( var_3 . method_2 ( ) ) == ( type_1 . getid ( ) ) ) { if ( var_1 ) { method_4 ( ) . method_5 ( var_4 , var_2 ) ; } else { method_4 ( ) . method_5 ( var_5 , var_2 ) ; } } }
[0]: public type_1 method_1 ( final long var_1 ) { try { var_2. method_2 ( ) ; var_3. method_3 ( var_1, var_4 ) ; return method_1 ( ) ; } catch ( final type_2 var_5 ) { type_3. error ( var_5. method_4 ( ), var_5 ) ; } finally { var_2. method_5 ( ) ; } return null ; }

************

************
tgt: private int method_1 ( ) { method_2 ( 0.0 ) ; java.util.random var_2 = new java.util.random ( ) ; var_3 = ( ( var_2 . method_3 ( ) ) * float_1 ) + 1.0 ; var_4 = 0.0 ; int var_5 = var_2 . method_4 ( int_1 ) ; return var_5 ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, boolean var_3 ) { if ( ( method_2 ( var_2 ) ) && ( method_3 ( var_2 ) ) ) { type_3 var_4 = new type_3 ( this, string_1, var_5 ) ; if ( var_3 ) { var_4. method_4 ( this ). method_5 ( this ). method_6 ( this ) ; } var_6. method_7 ( var_4 ) ; } }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { view = var_1 . method_2 ( var_4 , var_2 , false ) ; var_5 = view . method_3 ( var_6 ) ; var_7 = view . method_3 ( var_8 ) ; var_9 = view . method_3 ( var_10 ) ; var_5 . settext ( var_11 ) ; var_7 . settext ( var_12 ) ; var_9 . settext ( var_13 ) ; return view ; }
[0]: public void method_1 ( int var_1, int var_2 ) { method_2 ( var_1, var_2 ) ; try { var_3 = new type_1 ( var_1 ) ; var_3. method_3 ( var_2 ) ; var_4 = var_3. method_4 ( ) ; method_5 ( ) ; java.lang.thread var_5 = new type_2 ( var_4 ) ; java.lang.thread var_6 = new type_3 ( var_4 ) ; var_6. start ( ) ; var_5. start ( ) ; } catch ( java.io.ioexception var_7 ) { var_7. method_6 ( ) ; } }

************

************
tgt: public boolean method_1 ( ) { if ( ( var_1 ) < int_1 ) { return false ; } var_1 = ( var_1 ) - int_1 ; if ( ( var_2 ) == null ) { return true ; } switch ( var_2 . method_2 ( ) ) { case var_4 : { break ; } default : return false ; } return false ; }
[0]: public java.util.set < type_1 > get ( type_1 k ) { method_1 ( ) ; java.util.map < type_1, java.lang.long > var_1 = var_2. get ( k ) ; java.util.set < type_1 > var_3 = null ; if ( var_1!= null ) var_3 = var_1. method_2 ( ) ; return var_3 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { try { type_1 var_1 = new type_1 ( var_2 , type_1 . out , type_1 . names ) ; var_1 . method_1 ( var_3 ) ; var_1 . method_2 ( true ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_3 ( ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_1. method_2 ( var_1 ) ; try { var_2 = var_3. method_1 ( var_2 ) ; } catch ( type_3 var_4 ) { throw new type_4 ( var_4. method_3 ( ) ) ; } catch ( type_5 var_4 ) { throw new type_6 ( var_4. method_3 ( ) ) ; } return var_2 ; }

************

************
tgt: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; method_2 ( string_1 ) ; method_3 ( true ) ; method_4 ( ) ; var_2 . method_5 ( var_3 . info ) ; var_2 . method_6 ( var_4 ) ; var_5 = ( ( type_2 ) ( method_7 ( var_6 ) ) ) ; var_7 = ( ( android.widget.button ) ( method_7 ( var_8 ) ) ) ; var_9 = ( ( type_3 ) ( method_7 ( var_10 ) ) ) ; this . method_8 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2 = var_1 ; this. var_3 = var_2. method_2 ( ) ; this. var_4 = var_3. method_3 ( ) ; if ( ( var_1. method_2 ( ) )!= null ) { method_4 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 item ) { int id = item . method_2 ( ) ; if ( id == ( var_3 ) ) { type_3 var_4 = new type_3 ( ) ; method_6 ( ) . method_7 ( ) . replace ( var_5 , var_4 , string_1 ) . commit ( ) ; return true ; } return super . method_1 ( item ) ; }
[0]: private boolean method_1 ( type_1 t ) { return ( ( ( ( t. method_2 ( ). equals ( string_1 ) ) || ( ( t. method_3 ( ). method_4 ( ) ) == null ) ) || ( ( t. method_5 ( ). method_6 ( ) ) == null ) ) || ( ( t. method_7 ( ). method_6 ( ) ) == null ) ) || ( t. method_8 ( ). equals ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( float var_1 , float var_2 ) { if ( ( ( var_8 ) != null ) && ( ( var_8 . size ( ) ) == 0 ) ) { float var_3 = var_1 / int_1 ; float var_4 = var_2 / int_1 ; float var_5 = var_1 / ( ( float ) ( var_6 ) ) ; float var_7 = var_2 / ( ( float ) ( var_6 ) ) ; var_8 = type_1 . method_2 ( var_3 , var_4 , var_5 , var_7 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( var_1. method_3 ( ), this : : method_4 ) ; method_2 ( var_1. method_5 ( ), this : : method_6 ) ; if ( ( var_1. method_7 ( ) )!= null ) method_8 ( var_1. method_7 ( ), var_1. method_9 ( ) ) ; method_2 ( var_1. method_10 ( ), this : : method_11 ) ; method_2 ( var_1. method_12 ( ), this : : method_13 ) ; }

************

************
tgt: public type_1 method_1 ( long var_1 , java.lang.string var_3 , java.lang.string var_4 , int var_5 ) { type_2 var_6 = var_7 . method_2 ( var_1 ) ; type_3 n = new type_3 ( ) ; n . method_3 ( var_3 ) ; n . method_4 ( var_4 ) ; n . method_5 ( var_5 ) ; var_8 . method_6 ( n ) ; return new type_1 ( string_1 ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( var_2 ) ) { var_1. method_3 ( var_2 ) ; return ; } var_3. method_4 ( ) ; type_1. method_5 ( var_4, ( string_1 + ( type_2. method_6 ( this ) ) ) ) ; super. method_1 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_2 = new type_1 ( ) ; var_2 . put ( var_3 , id ) . put ( var_4 , name ) . put ( var_5 , date ) . put ( var_6 , var_7 ) . put ( var_8 , var_9 ) ; return var_2 ; }
[0]: private boolean method_1 ( type_1 node ) { type_2 var_1 = new type_2 ( var_2. method_2 ( ) ) ; var_2. method_3 ( var_1 ) ; boolean var_3 = method_4 ( node. method_5 ( ) ) ; var_2. method_6 ( ) ; return var_3 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( method_2 ( ) ) > 0 ) { method_3 ( var_2 ) ; android.view.view content = type_3 . method_5 ( this ) . method_6 ( method_2 ( ) , var_3 , false ) ; if ( method_7 ( ) ) { type_4 var_4 = method_8 ( ) ; var_3 . method_9 ( var_4 ) ; } var_3 . method_9 ( content ) ; type_2 . method_4 ( this ) ; } }
[0]: private type_1 method_1 ( type_1 var_1, type_1 field ) { type_1 result = null ; if ( ( var_1!= null ) && ( field!= null ) ) { if ( ( var_1. getid ( ) ) == ( field. getid ( ) ) ) { return var_1 ; } else { for ( type_1 var_2 : var_1. method_2 ( ) ) { type_1 var_3 = method_1 ( var_2, field ) ; if ( var_3!= null ) { return var_3 ; } } } } return result ; } }

************

************
tgt: private static boolean method_1 ( int var_1 , int var_2 ) { for ( int var_3 : var_4 . method_2 ( ) ) { if ( var_3 != var_2 ) { type_1 var_5 = var_4 . get ( var_3 ) ; for ( int var_6 : var_5 . method_3 ( ) . method_2 ( ) ) { type_2 var_7 = var_5 . method_3 ( ) . get ( var_6 ) ; if ( ( var_8 ) == var_1 ) { var_7 . method_1 ( ) ; return true ; } } } } return false ; }
[0]: public void method_1 ( final type_1 <?,? > var_1, final type_2 <?,? > var_2, final java.lang.throwable var_3 ) { synchronized ( var_4 ) { if ( ( var_5 ) == ( var_6 ) ) { type_3. method_2 ( string_1, var_3 ) ; method_3 ( ) ; var_7 = null ; } } } }

************

************
tgt: private static type_1 gettype ( final java.lang.class < ? > var_1 , final java.lang.class < ? > var_2 , final java.lang.class < ? > c , final type_2 [ ] var_3 ) { for ( final type_2 t : var_3 ) { final type_1 p = type_3 . gettype ( var_1 , var_2 , c , t ) ; if ( p != null ) { return p ; } } return null ; }
[0]: public boolean method_1 ( final java.lang.string value ) throws java.io.ioexception { return ( ( ( ( value. startswith ( string_1 ) ) || ( value. startswith ( string_2 ) ) ) || ( value. equals ( ""true"" ) ) ) || ( type_1. method_2 ( value ). method_3 ( ) ) ; }

************

************
tgt: private java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . method_2 ( this . var_2 ) ; var_1 . method_3 ( this . var_3 ) ; var_1 . method_4 ( this . var_4 ) ; type_2 < java.lang.string > result = var_1 . method_5 ( ) ; if ( result . method_6 ( ) ) { java.lang.system.out.println ( ( string_2 + ( result . get ( ) ) ) ) ; return result . get ( ) ; } return null ; }
[0]: public void method_1 ( final type_1 < java.lang.string > source, final boolean var_1 ) { if ( var_1 ) { var_2. method_2 ( ) ; } var_3. method_3 ( type_2. method_4 ( var_4 ) ) ; type_3. method_5 ( string_1, new java.lang.object [ ] { source. method_6 ( ). method_7 ( ), var_1 } ) ; }

************

************
tgt: public void add ( int var_1 , type_1 obj , int var_2 ) { if ( var_4 . method_1 ( var_1 ) . contains ( obj ) ) { int var_3 = var_4 . method_1 ( var_1 ) . method_2 ( obj ) ; var_4 . method_1 ( var_1 ) . var_5 . method_1 ( var_3 ) . method_3 ( var_2 ) ; } else { var_4 . method_1 ( var_1 ) . add ( new type_2 < type_1 > ( obj , var_2 ) ) ; } }
[0]: public void method_1 ( java.lang.integer var_1 ) { ++ ( var_2 ) ; java.lang.integer count = 0 ; if ( var_3. method_2 ( var_1 ) ) { count = var_3. get ( var_1 ) ; } var_3. put ( var_1, ( ++ count ) ) ; if ( ( ( var_2 ) >= ( var_4 ) ) && ( ( ( var_2 ) % ( var_4 ) ) == 0 ) ) { method_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { ( var_1 ) ++ ; if ( ( ( var_1 ) % int_3 ) == 1 ) { method_2 ( ) ; } else if ( ( ( var_1 ) % int_3 ) == int_1 ) { method_3 ( ) ; } else if ( ( ( var_1 ) % int_3 ) == int_2 ) { method_4 ( ) ; } else if ( ( ( var_1 ) % int_3 ) == int_3 ) { method_5 ( ) ; } }
[0]: static type_1 method_1 ( type_1 target, type_1 var_1, type_1 var_2 ) { for ( int i = 0 ; i < int_1 ; i ++ ) { type_2 var_3 = var_4 [ i ] ; type_1 c = var_3. method_2 ( target ) ; if ( ( c!= var_1 ) && ( c!= var_2 ) ) return c ; } throw new type_3 ( string_1 ) ; }

************

************
tgt: public java.lang.integer method_1 ( ) { java.lang.integer var_1 = 0 ; for ( java.lang.string var_2 : var_3 ) { var_1 += type_1 . min ( int_1 , ( ( ( var_2 . length ( ) ) * int_1 ) / ( var_4 ) ) ) ; } return type_1 . min ( int_1 , java.lang.long . method_3 ( java.lang.math.round ( ( var_1 / float_1 ) ) ) . intvalue ( ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 response, type_3 var_2 ) throws java.io.ioexception, type_4 { type_5 var_3 = ( ( type_5 ) ( var_1 ) ) ; type_6 var_4 = ( ( type_6 ) ( response ) ) ; var_3. method_2 ( string_1 ) ; var_4. method_2 ( string_1 ) ; if ( method_3 ( var_3, var_4 ) ) { var_2. method_1 ( var_1, response ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = getview ( ) . method_2 ( var_3 ) ; var_2 . method_3 ( true ) ; var_2 . method_4 ( new type_3 ( getcontext ( ) ) ) ; var_4 = new type_5 ( var_5 ) ; var_2 . method_5 ( var_4 ) ; }
[0]: public static void method_1 ( ) { try { var_1. method_2 ( ) ; type_1. method_3 ( new java.io.file ( string_1 ) ) ; type_1. method_3 ( new java.io.file ( string_2 ) ) ; var_2. method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , boolean var_2 ) { for ( final type_1 var_3 : var_4 ) { if ( type_2 . equals ( var_3 . method_2 ( ) , var_1 ) ) { var_4 . get ( var_4 . method_3 ( var_3 ) ) . method_4 ( var_2 ) ; } } }
[0]: public type_1 method_1 ( java.lang.string var_1, type_1 var_2 ) { type_1 var_3 = method_2 ( var_2 ) ; if ( var_4 ) { var_3. method_3 ( var_5, var_1 ) ; } if ( var_6 ) { java.lang.string var_7 = var_3. method_4 ( var_8 ) ; int var_9 = 0 ; try { var_9 = java.lang.integer.parseint ( var_7 ) ; } catch ( java.lang.exception var_10 ) { var_9 = 0 ; } var_3. setvalue ( var_8, java.lang.integer.tostring ( ( var_9 ++ ) ) ) ; } return var_3 ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = ( ( type_2 ) ( getactivity ( ) ) ) ; if ( ( var_2 . method_2 ( ) ) != null ) var_2 . method_2 ( ) . method_3 ( var_3 ) ; method_5 ( ) ; method_4 ( ) ; var_2 . method_6 ( ) . method_7 ( string_1 ) ; }
[0]: public float method_1 ( ) { type_1 var_1 = new type_1 ( ( ( method_2 ( ). method_3 ( ) ) + ( method_4 ( ). method_3 ( ) ) ), ( ( method_2 ( ). method_5 ( ) ) + ( method_4 ( ). method_5 ( ) ) ) ) ; return var_1. method_6 ( new type_1 ( 1.0f, 0.0f ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 < type_3 > var_1 ) { type_2 < type_4 > var_2 = ( var_1 . isempty ( ) ) ? new type_2 ( ) : var_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) ; return new type_1 ( type_1 . method_5 ( var_1 ) , var_2 ) ; }
[0]: public type_1 [ ] [ ] method_1 ( ) { type_1 [ ] [ ] var_1 ; var_1 = new type_1 [ int_1 ] [ int_1 ] ; for ( int x = 0 ; x < int_1 ; x ++ ) { for ( int y = 0 ; x < int_1 ; y ++ ) { type_1 type = var_2 [ x ] [ y ]. gettype ( ) ; var_1 [ x ] [ y ] = type ; } } return var_1 ; }

************

************
tgt: public void method_1 ( java.lang.string result ) { type_1 tmp = type_2 . method_2 ( result ) ; if ( result . contains ( string_2 ) ) { method_3 ( tmp . getstring ( string_2 ) ) ; } else { method_3 ( tmp . getstring ( string_3 ) ) ; } method_4 ( ( ( ( tmp . method_5 ( string_4 ) ) - int_1 ) * int_2 ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 x = new type_1 ( ) ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { x. add ( java.lang.integer.parseint ( args [ i ] ) ) ; x. method_1 ( ) ; } java.lang.system.out.println ( x. method_2 ( ) ) ; }

************

************
tgt: public synchronized void method_1 ( ) throws type_1 { java.lang.thread var_1 = java.lang.thread . method_2 ( ) ; if ( ! ( var_2 ) ) throw new type_1 ( ) ; if ( ( var_2 ) && ( var_1 != ( var_3 ) ) ) throw new type_1 ( ) ; var_4 -= 1 ; if ( ( var_4 ) == 0 ) { var_2 = false ; var_3 = null ; method_3 ( ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) throws type_1, type_2 { var_2. method_2 ( var_3 ) ; method_3 ( ) ; var_4. settext ( string_1 ) ; var_5 = var_6. gettext ( ). tostring ( ) ; var_7 = var_8. gettext ( ). tostring ( ) ; if ( (! ( var_5. equals ( string_1 ) ) ) && (! ( var_7. equals ( string_1 ) ) ) ) { type_3 var_9 = new type_3 ( ) ; var_9. execute ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.class < ? extends type_1 > var_1 , java.lang.class var_2 ) { if ( ( var_2 != null ) && ( var_2 . method_2 ( ) ) ) { return new type_2 ( var_2 ) ; } if ( var_1 != null ) { return method_3 ( var_1 , var_2 ) ; } else { return method_1 ( var_2 ) ; } }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_1. replaceall ( string_1, string_2 ) ; try { return type_1. method_2 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { assert false ; var_3. method_3 ( ) ; } return string_3 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = string_1 ; type_1 . method_2 ( type_1 . method_3 ( string_2 , var_2 ) , var_2 ) ; java.lang.string var_3 = string_3 ; type_1 . method_2 ( type_1 . method_3 ( string_4 , var_2 ) , var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; type_2 var_2 = method_3 ( ) ; type_3 f = ( ( type_3 ) ( var_2. method_4 ( var_3 class. getname ( ) ) ) ) ; if ( f!= null ) { f. method_1 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { if ( ( this . var_2 ) instanceof type_1 ) { ( ( type_1 ) ( this . var_2 ) ) . method_1 ( var_1 ) ; } else if ( ( var_1 != 1 ) && ( var_1 != 0 ) ) { throw new type_2 ( ( ( string_1 + ( this . var_2 . getclass ( ) . tostring ( ) ) ) + string_2 ) ) ; } }
[0]: public type_1 method_1 ( final long time ) { if ( time < ( this. method_2 ( ) ) ) { return new type_1 ( time, this. method_3 ( ) ) ; } else if ( ( this. method_3 ( ) ) < time ) { return new type_1 ( this. method_2 ( ), this. end ) ; } else { return this ; } }

************

************
tgt: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; boolean var_2 ; for ( type_2 var_3 : var_4 ) { for ( type_2 var_5 : var_4 ) { if ( var_3 . equals ( var_5 ) ) continue ; var_2 = false ; for ( type_1 var_6 : var_1 ) { if ( var_6 . method_2 ( var_3 , var_5 ) ) var_2 = true ; } if ( ! var_2 ) var_1 . add ( new type_1 ( var_3 , var_5 ) ) ; } } }
[0]: public final void start ( final android.view.view var_1 ) { ( ( type_1 ) ( method_1 ( ) ) ). method_2 ( var_2 ) ; for ( type_2 var_3 : var_2. method_3 ( ) ) { var_3. method_4 ( string_1 ) ; var_3. method_5 ( ) ; } var_4. method_6 ( ) ; android.content.intent intent = new android.content.intent ( this, var_5 class ) ; method_7 ( intent ) ; }

************

************
tgt: public boolean method_1 ( double x , double y ) { if ( ( ( ( ( ( var_1 ) + ( error ) ) >= x ) && ( ( ( var_1 ) - ( error ) ) <= x ) ) && ( ( ( var_2 ) + ( error ) ) >= y ) ) && ( ( ( var_2 ) - ( error ) ) <= y ) ) { return true ; } else return false ; }
[0]: public java.lang.double [ ] method_1 ( ) { java.util.arraylist < java.lang.double > var_1 = var_2. remove ( 0 ) ; java.lang.double [ ] var_3 = new java.lang.double [ int_1 ] ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_3 [ i ] = var_1. remove ( 0 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_1 = new type_1 ( ) ; var_1 . method_3 ( method_4 ( ) , var_3 ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_5 ( this ) ; var_1 . method_6 ( this ) ; var_1 . method_7 ( this ) ; if ( new type_2 ( this ) . get ( string_1 , var_4 class , false ) ) { var_1 . method_8 ( true ) ; } }
[0]: public boolean method_1 ( final type_1 target, final type_2 < type_3 <? >, type_1 > var_1, final int var_2 ) { if ( null!= ( var_3 ) ) { type_4 < type_5 > var_4 = var_5. method_2 ( var_3, var_6. method_3 ( target, var_1, var_2 ) ) ; return method_4 ( var_4 ) ; } return true ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , boolean var_2 ) { if ( ! var_2 ) { var_1 = var_1 . replaceall ( string_1 , string_2 ) ; } else { var_1 = var_1 . replace ( string_3 , string_2 ) ; } return var_1 . replace ( string_5 , string_6 ) . replace ( string_7 , string_8 ) . replace ( string_9 , string_10 ) . replace ( string_11 , string_12 ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) { var_1. method_2 ( var_3 ) ; super. method_1 ( var_1, var_2 ) ; var_4. method_3 ( var_5 ) ; type_3 var_6 = var_4. method_4 ( var_7, var_8, var_5, ( ( var_7 ) == ( var_5 )? var_9 : null ) ) ; type_4. i ( string_1, string_2 ) ; main. method_5 ( var_6, var_10, false ) ; main. method_6 ( new type_5 ( var_6 ) ) ; return false ; }

************

************
tgt: public int method_1 ( int var_1 ) { int var_2 = 0 ; int var_3 = ( var_4 [ var_5 ] ) & var_1 ; switch ( var_1 ) { case var_6 : var_2 = var_3 > > > int_1 ; break ; case var_7 : var_2 = var_3 > > > int_2 ; break ; case var_8 : var_2 = var_3 > > > int_3 ; break ; case var_9 : var_2 = var_3 > > > int_4 ; break ; } return var_2 ; }
[0]: private void method_1 ( int i ) { type_1 var_1 ; android.content.intent intent ; var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, 0 ) ; intent = new android.content.intent ( this, var_2 class ) ; intent. method_3 ( var_1 ) ; this. method_1 ( intent ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view , boolean var_1 ) { if ( var_1 ) { var_2 . method_2 ( ) ; type_1 . method_3 ( string_1 , ( ( var_2 . method_4 ( ) ) + string_2 ) ) ; } else { type_2 var_3 = ( ( type_2 ) ( getactivity ( ) . method_5 ( var_4 ) ) ) ; var_3 . method_6 ( view . method_7 ( ) , 0 ) ; var_2 . show ( ) ; } }
[0]: private void method_1 ( final type_1 method ) { method. method_2 ( true ) ; if ( ( type_2. method_3 ( method ) )!= null ) { method_4 ( method ) ; } else if ( ( type_2. method_5 ( method ) )!= null ) { method_6 ( method ) ; } }

************

************
tgt: public void method_1 ( ) { type_2 < type_3 > var_4 = var_2 . method_2 ( var_3 class ) . method_3 ( string_1 , 1 ) . method_4 ( string_2 ) . method_5 ( 1 ) ; assertnotnull ( var_4 ) ; type_3 [ ] array = new type_3 [ ] { var_5 } ; int i = 0 ; for ( type_3 var_6 : var_4 ) { assertequals ( array [ i ] , var_6 ) ; i ++ ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_2 ) ; var_3 = new type_1 ( ) ; if ( type_2. method_3 ( string_1 ). tolowercase ( ). contains ( string_2 ) ) { method_4 ( ) ; } var_4 = type_3. method_1 ( var_3, new java.io.file ( var_1 ), var_5 ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( ( var_1 . compareto ( var_2 . get ( i ) ) ) == 0 ) { var_2 . remove ( i ) ; return var_1 ; } } java.lang.system.out.println ( string_1 ) ; return null ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { method_2 ( ). method_3 ( ). remove ( var_1 ). commit ( ) ; var_1 = null ; method_4 ( ) ; new type_1 ( ). execute ( var_2, this ) ; } }

************

************
tgt: public static type_1 method_1 ( int var_1 , int var_2 , long var_3 ) { type_1 . method_2 ( int_1 , int_2 ) ; if ( ! ( type_1 . method_3 ( var_3 ) ) ) { return null ; } type_1 var_4 = new type_1 ( ) ; var_5 = var_2 ; var_6 = var_1 ; var_7 = var_3 ; var_8 = type_2 . method_4 ( ) . tostring ( ) ; var_4 . method_5 ( ) ; return var_4 ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { type_1. method_2 ( var_2, string_1 ) ; var_1 = new type_2 ( this, var_3, var_4 ) ; var_5. method_3 ( var_1 ) ; } else { type_1. method_2 ( var_2, string_2 ) ; var_1. method_4 ( ) ; var_1. method_5 ( var_4 ) ; var_1. method_6 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { if ( var_1 . isempty ( ) ) { return var_2 . isempty ( ) ? null : var_2 ; } else { java.lang.string var_3 = var_1 . get ( 0 ) ; for ( int i = 1 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_3 = string_1 + ( var_1 . get ( i ) ) ; } return var_3 ; } }
[0]: public boolean method_1 ( java.lang.string name, java.lang.string var_1, int var_2, int x, int y ) { view. method_2 ( new type_1 ( var_3, var_1, var_2, var_4, type_2. method_3 ( name ), x, y ) ) ; return false ; }

************

************
tgt: public static type_1 method_1 ( type_2 context , java.lang.string var_1 ) { java.util.list < type_3 > var_2 = type_4 . method_2 ( context . getstring ( ( var_1 + ( var_3 ) ) ) ) ; type_5 var_4 = type_4 . method_3 ( context , var_1 ) ; type_1 var_5 ; if ( var_4 != null ) { var_5 = new type_1 ( var_2 , java.util.arrays.aslist ( var_4 ) ) ; } else { var_5 = new type_1 ( var_2 ) ; } return var_5 ; }
[0]: private int method_1 ( java.util.list < type_1 > var_1 ) { long var_2 = 0 ; int var_3 = 0 ; for ( type_1 var_4 : var_1 ) { var_2 += var_4. method_2 ( ) ; var_3 ++ ; } return ( ( int ) ( var_2 ) ) / var_3 ; }

************

************
tgt: public boolean method_1 ( final type_1 var_1 ) { try { method_2 ( type_2 . method_3 ( var_1 ) ) ; return true ; } catch ( type_3 var_2 ) { return false ; } catch ( type_5 var_3 ) { return false ; } catch ( type_6 var_4 ) { return false ; } }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, type_2 var_3 ) { if ( ( var_1!= null ) && (! ( var_1. isempty ( ) ) ) ) { type_3 var_4 = type_3. method_2 ( var_5 ) ; type_4 var_6 = new type_5 ( ). method_3 ( ). method_4 ( var_2 ). method_5 ( ). method_6 ( var_3 ). method_7 ( type_6. method_8 ( var_4 ) ) ; return method_1 ( var_1, var_6, var_3 ) ; } return null ; }

************

************
tgt: private static java.util.list < type_1 > method_1 ( final type_2 var_1 ) { final type_1 [ ] var_2 = new type_1 [ var_3 ] ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_2 [ i ] = type_1 . method_2 ( i , var_4 . get ( i ) ) ; } return java.util.arrays.aslist ( var_2 ) ; }
[0]: public void method_1 ( ) { java.util.set < java.lang.string > var_1 = var_2. method_2 ( ). method_3 ( ) ; for ( java.lang.string key : var_1 ) { type_1 var_3 = var_2. method_2 ( ). get ( key ) ; if ( var_3!= null ) var_3. method_4 ( ) ; } java.util.set < java.lang.string > var_4 = var_5. method_2 ( ). method_3 ( ) ; for ( java.lang.string key : var_4 ) { var_2. method_5 ( key ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string value , boolean var_1 ) { java.lang.string var_2 = value . replaceall ( string_1 , string_2 ) . replaceall ( string_3 , string_4 ) . replaceall ( string_5 , string_6 ) . replaceall ( string_7 , string_5 ) . replaceall ( string_8 , string_3 ) ; return var_1 ? ( string_5 + var_2 ) + string_5 : var_2 ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = null ; type_2 var_2 = type_3. method_2 ( this. var_3, var_4 class ) ; var_1 = new java.util.arraylist < type_1 > ( ) ; if ( var_2!= null ) { for ( type_4 var_5 : var_2. method_3 ( ) ) { var_1. add ( new type_1 ( var_5 ) ) ; } } return var_1 ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , int var_2 , type_2 var_3 , type_3 type_4 ) { type_1 var_4 = new type_1 ( var_1 ) . method_2 ( new type_5 ( var_2 , true , true , true , false ) ) . method_3 ( true ) . method_4 ( true ) . method_5 ( true ) . method_6 ( true ) . method_7 ( true ) . method_8 ( ( ( string_1 + var_2 ) + string_2 ) ) . method_9 ( var_3 ) ; var_3 . method_10 ( var_4 , type_4 ) ; return var_4 ; }
[0]: public void method_1 ( ) { try { var_1. remove ( ( ( var_1. size ( ) ) - 1 ) ) ; var_2. method_1 ( ) ; } catch ( java.io.ioexception var_3 ) { try { var_2. method_2 ( ) ; var_2. method_1 ( ) ; } catch ( java.io.ioexception var_4 ) { var_5. error ( var_3. method_3 ( ), var_3 ) ; } var_5. error ( ( string_1 + var_3 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . getvalue ( ) ) != null ) { type_2 var_2 = var_1 . getvalue ( var_3 class ) ; if ( ( var_2 . method_2 ( ) ) != null ) { if ( ! ( var_4 ) ) method_3 ( var_5 ) ; if ( ! ( var_6 ) ) var_7 . method_4 ( this ) ; } } else { var_8 . method_5 ( var_9 ) ; type_3 . method_6 ( string_1 , method_7 ( ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ). method_4 ( true ) ; method_5 ( ) ; type_2 var_3 = method_6 ( ). method_7 ( ) ; type_3 var_4 = new type_3 ( ) ; var_3. replace ( var_5, var_4 ) ; var_3. commit ( ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { try { type_2 var_2 = type_3 . method_2 ( ) ; type_4 var_3 = var_2 . method_3 ( ) ; var_3 . method_4 ( ) ; var_3 . update ( var_1 ) ; var_3 . method_5 ( ) . commit ( ) ; var_3 . method_7 ( ) ; } catch ( type_5 var_4 ) { var_4 . method_8 ( ) ; } }
[0]: public java.lang.string method_1 ( java.lang.long id, java.lang.string var_1 ) { var_2. info ( ( string_1 + id ) ) ; type_1 var_3 = var_4. method_2 ( id ) ; if ( ( var_3. method_3 ( ) ) == var_1 ) { return var_3. method_4 ( ) ; } else { return string_2 ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; android.content.intent intent = getintent ( ) ; java.lang.string var_2 = intent . method_2 ( var_3 ) ; type_2 . method_3 ( string_1 , ( string_2 + var_2 ) ) ; type_3 var_4 = new type_3 ( this ) ; var_4 . method_4 ( int_1 ) ; var_4 . settext ( ( ( ( getstring ( var_5 ) ) + string_3 ) + var_2 ) ) ; method_5 ( var_4 ) ; }
[0]: private void method_1 ( ) { java.util.list < type_1 > var_1 = method_2 ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( type_1 var_3 : var_1 ) { var_2. add ( var_3. method_3 ( ) ) ; } try { var_4. method_4 ( var_2, type_3. method_5 ( ) ) ; var_5. method_6 ( var_2 ) ; } catch ( type_4 var_6 ) { type_5. method_7 ( null, var_6. method_8 ( ), string_1, var_7 ) ; } }

************

************
tgt: public static type_1 method_1 ( int var_1 ) { if ( var_1 == int_1 ) { return var_2 ; } else if ( var_1 == int_2 ) { return var_3 ; } else if ( ( var_1 == int_3 ) || ( var_1 == int_4 ) ) { return var_4 ; } return null ; }
[0]: public static int method_1 ( java.util.scanner var_1, java.lang.string message ) { java.lang.integer var_2 = null ; do { java.lang.system.out.print ( ( message + string_1 ) ) ; try { var_2 = var_1. method_2 ( ) ; var_1. method_3 ( ) ; } catch ( type_1 var_3 ) { java.lang.system.out.println ( string_2 ) ; } } while ( var_2 == null ) ; return var_2 ; }

************

************
tgt: private void method_1 ( java.lang.stringbuilder b ) { if ( ( var_1 . size ( ) ) > 0 ) { java.lang.string [ ] var_2 = new java.lang.string [ var_1 . size ( ) ] ; int i = 0 ; for ( java.lang.string var_3 : var_1 ) { var_2 [ ( i ++ ) ] = method_2 ( var_3 ) ; } type_1 . method_3 ( b , var_2 ) ; } }
[0]: private void method_1 ( boolean var_1, boolean var_2, boolean var_3, boolean var_4, boolean var_5, boolean var_6, boolean var_7 ) { if ( var_1 ) ( var_8 ) ++ ; if ( var_2 ) ( var_9 ) ++ ; if ( var_2 && var_3 ) ( var_10 ) ++ ; if ( var_4 ) ( var_11 ) ++ ; if ( var_6 ) ( var_12 ) ++ ; if ( var_7 ) ( var_13 ) ++ ; if ( var_5 ) ( var_14 ) ++ ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( ( ! ( method_2 ( ) ) ) || ( ! ( var_1 . method_2 ( ) ) ) ) { return new type_2 ( ) ; } return new type_2 ( ( ( value ) - ( ( ( type_2 ) ( var_1 ) ) . getvalue ( ) ) ) ) ; }
[0]: private static type_1 method_1 ( type_1 var_1, type_2 data, int offset, java.lang.string name ) { int var_2 = data. method_2 ( ) [ int_1 ] ; type_3 var_3 = new type_3 ( name ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_3. add ( ( i + offset ), data. method_3 ( i ) ) ; } var_1. method_4 ( var_3 ) ; return var_1 ; }

************

************
tgt: public static boolean method_1 ( int [ ] [ ] array , int var_1 , int c ) { return ( ( var_1 >= 0 ) && ( var_1 < ( array . length ) ) ) && ( ( c >= 0 ) && ( c < ( array [ var_1 ] . length ) ) ) ; }
[0]: public void method_1 ( ) { int [ ] var_1 = new int [ ] { int_1, int_2, int_3, int_4, int_5, int_6, int_7, int_8, int_9 } ; for ( int num : var_1 ) { var_2. method_2 ( num ) ; } int key = int_5 ; assertequals ( int_5, var_2. method_3 ( key ) ) ; int var_3 = int_10 ; assertequals ( 0, var_2. method_3 ( var_3 ) ) ; }

************

************
tgt: public java.lang.long method_1 ( java.lang.long var_1 , type_1 var_2 ) { type_2 var_3 = var_4 . method_2 ( var_1 ) ; type_4 var_6 = var_7 . method_4 ( var_2 ) ; var_6 . method_5 ( var_3 ) ; var_8 . method_6 ( var_6 ) ; return var_6 . getid ( ) ; }
[0]: private static type_1 method_1 ( type_1 var_1, int value ) { var_1. method_2 ( ) ; type_2 var_2 = ( ( byte ) ( value & int_1 ) ) ; while ( var_1. method_3 ( ) ) { var_1. put ( var_2 ) ; } var_1. method_4 ( ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { if ( method_2 ( var_1 , var_2 , var_3 ) ) { for ( int var_4 = 0 ; var_4 < ( var_5 . length ) ; var_4 ++ ) { var_6 [ var_2 ] [ var_3 ] = var_8 ; var_6 [ var_5 [ var_4 ] ] [ var_7 [ var_4 ] ] = var_8 ; var_1 . method_3 ( ) ; } } }
[0]: private void method_1 ( ) { this. var_1. settext ( var_2 ) ; if ( var_3. equals ( string_1 ) ) this. var_4. settext ( string_2 ) ; else if ( var_3. equals ( string_3 ) ) this. var_4. settext ( string_4 ) ; else this. var_4. settext ( ""0"" ) ; }

************

************
tgt: public boolean method_1 ( java.io.file var_1 , java.lang.string name ) { return ( ( ! ( name . method_2 ( string_2 ) ) ) && ( ! ( name . method_2 ( var_2 ) ) ) ) && ( ! ( name . equals ( string_1 ) ) ) ; }
[0]: public type_1 method_1 ( java.io.inputstream source ) throws java.io.ioexception, type_2 { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; char [ ] var_2 = new char [ int_1 ] ; int length = - 1 ; type_3 var_3 = new java.io.bufferedreader ( new type_4 ( source ) ) ; while ( ( length = var_3. method_2 ( var_2 ) )!= ( - 1 ) ) { var_1. append ( var_2, 0, length ) ; } java.lang.string var_4 = var_1. tostring ( ) ; return method_1 ( var_4 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) throws type_2 { java.lang.string var_2 = var_3 . method_2 ( var_4 , var_1 ) ; if ( var_2 == null ) { throw new type_2 ( java.lang.string.format ( type_3 . get ( var_5 ) , var_1 . getname ( ) ) , var_6 ) ; } return var_2 ; }
[0]: public static double method_1 ( double value, int var_1 ) { type_1 var_2 = var_3 ; if ( java.lang.double. method_2 ( value ) ) { type_1 var_4 = new type_1 ( value ) ; int var_5 = var_1 - ( ( var_4. method_3 ( ) ) - ( var_4. method_4 ( ) ) ) ; var_2 = var_4. method_5 ( var_5, var_6 ) ; } return var_2. method_6 ( ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string label , int var_1 , boolean var_2 ) { type_1 var_3 = new type_1 ( label ) ; type_2 . init ( var_3 , var_2 , true ) ; var_3 . method_2 ( new java.awt.font ( var_4 , var_5 , var_1 ) ) ; return var_3 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; for ( type_1 < type_2 > var_2 : var_3 ) { type_2 f = var_2. get ( ) ; if ( f. method_3 ( ) ) { if ( f instanceof type_3 ) { ( ( type_3 ) ( f ) ). method_1 ( ) ; } } } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof type_1 ) ) return false ; final type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return type_2 . equals ( this . var_4 , var_5 ) ; }
[0]: private static java.lang.stringbuffer method_1 ( java.util.list < type_1 > var_1, java.lang.string var_2, java.lang.string var_3 ) { java.lang.stringbuffer var_4 = new java.lang.stringbuffer ( string_1 ) ; var_4. append ( string_2 ). append ( var_2 ). append ( string_3 ) ; var_4. append ( string_4 ). append ( var_3 ). append ( string_3 ) ; var_4. append ( string_5 ). append ( type_2. method_2 ( var_1 ) ). append ( string_6 ) ; return var_4 ; }

************

************
tgt: public type_1 method_1 ( ) throws java.lang.exception { type_2 < type_3 > response = this . var_1 . method_2 ( this . method_3 ( ) , this . name ( ) ) ; type_3 var_2 = response . method_4 ( ) ; this . method_5 ( var_2 ) ; method_6 ( ) ; return this ; }
[0]: public void method_1 ( int var_1, java.lang.string path, java.lang.object var_2 ) { var_3. commit ( ) ; type_1 event = new type_2 ( var_4, var_5, var_1, path, null, var_2, null, null, null, null, null, null, null ) ; var_4. method_2 ( var_6, event ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { var_1 . method_2 ( ( string_1 + ( var_4 ) ) ) ; var_1 . method_2 ( ( string_1 + ( var_5 ) ) ) ; var_1 . method_2 ( ( string_1 + ( var_6 ) ) ) ; }
[0]: private void method_1 ( java.lang.string var_1, type_1 var_2, type_2 var_3 ) { type_3 < type_1 > var_4 = type_4. method_2 ( var_1, var_2. method_3 ( ) ) ; type_5 < type_1 > var_5 = var_6. method_4 ( var_7, var_8, var_4 ) ; if ( (! ( var_5. method_5 ( ) ) ) && ( ( var_6. method_6 ( var_1 ) )!= null ) ) { var_3. put ( var_8, var_4, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) . method_3 ( ) ; type_1 var_2 = method_4 ( ) ; int var_3 = ( var_4 ) / int_1 ; int var_5 = ( var_1 . height ) / int_1 ; method_5 ( ( var_3 - ( ( var_6 ) / int_1 ) ) , ( var_5 - ( ( var_2 . height ) / int_1 ) ) ) ; method_7 ( var_7 ) ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { if ( ( view ) == null ) { view = var_1. method_2 ( var_4, null ) ; var_5 = ( ( type_4 ) ( method_3 ( ). method_4 ( var_6 ) ) ) ; var_7 = var_5. gettext ( ) ; view. method_5 ( var_8 ). method_6 ( new type_5 ( ) { public void method_7 ( android.view.view var_9 ) { method_8 ( ) ; } } ) ; } return view ; } return view ; }

************

************
tgt: public void start ( int var_1 ) { this . var_1 = var_1 ; if ( ! ( var_4 ) ) { try { var_2 = new type_1 ( var_1 ) ; byte [ ] var_3 = new byte [ int_1 ] ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; var_4 = true ; method_1 ( var_3 ) ; } catch ( type_2 var_5 ) { var_5 . method_2 ( ) ; } } }
[0]: public boolean method_1 ( type_1 < type_2 > var_1, type_2 var_2 ) { boolean var_3 ; if ( var_2 == ( var_4 ) ) { var_3 = type_3. contains ( var_1 ) ; } else if ( type_4. equals ( var_2. method_2 ( ) ) ) { var_3 = ( type_5. contains ( var_1 ) ) || ( type_6. contains ( var_1 ) ) ; } else { var_3 = type_5. contains ( var_1 ) ; } return var_3 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.object var_2 ) { if ( method_2 ( ) ) { type_2 . method_5 ( method_4 ( ) , ( ( java.lang.string ) ( var_2 ) ) ) ; return true ; } else { type_3 . method_6 ( method_4 ( ) , var_4 , var_5 ) . show ( ) ; return false ; } }
[0]: public void method_1 ( android.content.context var_1, type_1 < java.util.arraylist < type_2 > > data ) { java.lang.string var_2 = null ; if ( ( ( data!= null ) & ( ( data. method_2 ( ) )!= ( var_3 ) ) ) & ( type_3. method_3 ( data. getdata ( ) ) ) ) { var_2 = data. getdata ( ). get ( 0 ). method_4 ( ) ; } java.lang.string url = method_5 ( var_4, var_2 ) ; method_6 ( url ) ; }

************

************
tgt: private void method_1 ( ) { try { var_1 = ( ( var_2 ) == ( var_3 ) ) ? var_4 : var_5 ; var_6 = type_1 . open ( var_1 ) ; } catch ( java.lang.exception var_7 ) { view . method_2 ( ) ; } if ( ( var_6 ) != null ) { view . init ( var_6 ) ; } }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { if ( ( ( var_2!= null ) && ( var_2. method_2 ( ) ) ) && (! ( var_1. contains ( var_2 ) ) ) ) { var_3. method_3 ( var_2. method_4 ( ), var_2 ) ; } } type_2 var_4 = var_5. method_5 ( 0 ) ; ( ( type_3 ) ( var_4 ) ). method_6 ( var_3. method_7 ( ) ) ; }

************

************
tgt: public void method_1 ( final int var_1 , final boolean var_2 ) { var_3 += var_1 ; if ( ( var_3 ) >= ( var_4 . length ) ) { var_3 = ( var_4 . length ) - 1 ; } if ( var_2 ) { var_6 += var_1 ; if ( ( var_6 ) > ( var_3 ) ) { var_6 = var_3 ; } var_5 . method_2 ( new type_1 ( true , var_6 ) ) ; } var_5 . method_2 ( new type_1 ( false , var_3 ) ) ; method_3 ( ) ; }
[0]: public static java.lang.string method_1 ( ) { java.lang.string [ ] var_1 = var_2. method_2 ( ) ; int count = var_2. method_3 ( ) ; java.lang.string var_3 = string_1 ; for ( java.lang.string var_4 : var_1 ) { var_3 += var_4 + ( var_4 + ( var_4 + 1 ) ) ; } var_3 += string_2 + count ; return var_3 ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) . method_3 ( ) . method_4 ( string_1 ) ) { int var_4 = java.lang.integer.parseint ( type_1 . method_5 ( ) . method_6 ( ) . method_7 ( ) . get ( string_3 ) ) ; if ( ( var_5 . method_8 ( ) ) == var_4 ) { return true ; } } return false ; }
[0]: public void method_1 ( long var_1, type_1 var_2, type_2 var_3 ) { try { type_1 var_4 = var_5. method_1 ( var_1, var_2, null ) ; var_3. method_2 ( var_4 ) ; } catch ( java.lang.throwable t ) { var_3. method_3 ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . method_2 ( getcontext ( ) . getstring ( var_2 ) , ( ( var_3 ) + ( ( var_4 ) * float_1 ) ) , ( ( var_3 ) + ( ( var_4 ) * float_2 ) ) , var_5 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) { protected type_2 method_2 ( ) throws type_3 { return new type_2 ( this ) { protected void method_3 ( ) throws type_3, java.io.ioexception { } } ; } } ; try { type_4 out = var_1. method_4 ( ) ; fail ( ) ; } catch ( type_3 var_2 ) { type_5. assertthat ( var_2. method_5 ( ), type_6. method_6 ( string_1 ) ) ; } } }

************

************
tgt: void method_1 ( int var_1 , java.lang.string var_2 , boolean var_3 ) { var_5 = var_3 ; var_6 = false ; var_7 = new type_1 ( var_1 ) ; var_8 = new type_2 ( var_2 ) ; var_9 = new type_3 ( int_1 , this ) ; var_9 . start ( ) ; var_10 = new type_4 ( ) ; if ( var_5 ) { var_10 . start ( ) ; } }
[0]: public synchronized void method_1 ( char c ) { var_1. method_2 ( c ) ; java.lang.string var_2 = var_1. getstring ( ) ; if ( var_2!= null ) { java.lang.integer var_3 = var_4. get ( var_2 ) ; if ( var_3 == null ) { var_3 = 1 ; } else { var_3 ++ ; } var_4. put ( var_2, var_3 ) ; } } }

************

************
tgt: public void method_1 ( int x , int var_1 , type_1 var_2 ) { type_2 . method_2 ( var_2 , string_1 ) ; method_3 ( x , var_1 ) ; this . var_3 [ ( ( x - ( this . start . method_4 ( ) ) ) + ( ( var_1 - ( this . start . method_5 ( ) ) ) * ( this . size . method_4 ( ) ) ) ) ] = ( ( type_3 ) ( var_2 ) ) ; }
[0]: public void method_1 ( java.lang.object var_1 ) { type_1 var_2 = var_3. method_2 ( ). method_3 ( ) ; try { var_3. method_4 ( var_2 ) ; var_2. method_5 ( var_1 ) ; var_3. method_6 ( var_2 ) ; var_2. method_7 ( var_1 ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( string_1, var_4 ) ; var_3. method_8 ( var_2 ) ; } finally { var_3. method_9 ( var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = ( ( java.lang.string ) ( type_1 . method_2 ( null , ( ( ( string_1 + ( var_2 . method_3 ( ) . step ( ) ) ) + "\n" ) + string_2 ) , string_3 , var_3 , null , null , string_4 ) ) ) ; if ( var_1 != null ) var_4 . put ( var_2 . method_3 ( ) . step ( ) , var_1 ) ; }
[0]: public void method_1 ( ) { int j = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { j = ( ( j + ( var_1 [ i ] ) ) + ( key [ ( i % ( key. length ) ) ] ) ) % int_1 ; int temp = var_1 [ i ] ; var_1 [ i ] = var_1 [ j ] ; var_1 [ j ] = temp ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 ) ; var_3 . method_3 ( ) ; var_1 . method_4 ( var_3 ) ; var_4 . method_2 ( var_5 ) ; var_6 . method_3 ( ) ; var_4 . method_4 ( var_6 ) ; if ( ( var_7 ) instanceof type_1 ) { ( ( type_1 ) ( var_7 ) ) . method_5 ( false ) ; } }
[0]: public int method_1 ( int var_1, int num ) { int count = 0 ; for ( int var_2 = 0 ; var_2 < int_1 ; var_2 ++ ) { if ( ( this. var_3 [ var_2 ] [ var_1 ]. value ) == num ) count ++ ; } return count ; }

************

************
tgt: public boolean method_1 ( ) { int var_1 = 0 ; int var_2 = 0 ; for ( type_1 p : var_3 . method_2 ( ) ) { if ( p . method_3 ( ) ) { if ( ( p . method_4 ( ) ) == ( var_4 ) ) { var_1 ++ ; } else { var_2 ++ ; } } } return ( var_1 == 0 ) || ( var_1 >= var_2 ) ; }
[0]: public void method_1 ( ) { try { method_2 ( ) ; method_3 ( ) ; method_3 ( ) ; type_1. method_4 ( ). method_5 ( method_6 ( ) ). method_7 ( string_1 ). method_8 ( ). get ( string_2 ). method_9 ( ). method_10 ( int_1 ). method_11 ( string_3, type_2. method_12 ( int_2 ) ) ; } catch ( type_3 | type_4 | java.io.ioexception var_1 ) { var_1. method_13 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string key , boolean value ) { if ( ( ( ( var_1 ) == null ) || ( ( var_1 . method_2 ( ) ) == null ) ) || ( ( var_1 . method_2 ( ) . gettype ( ) ) == ( var_2 ) ) ) { return ; } var_1 . method_2 ( ) . method_3 ( key , new type_1 ( type_2 . method_4 ( ) , value ) ) ; }
[0]: public type_1 method_1 ( boolean var_1 ) { final type_1 b = super. method_1 ( var_1 ) ; if ( var_2 ) { if ( ( var_3 ) == null ) { try { var_3 = method_2 ( b ) ; var_2 = false ; } catch ( java.lang.nullpointerexception var_4 ) { type_2. method_3 ( var_5, ( string_1 + b ), var_4 ) ; } } } return b ; } }

************

************
tgt: public boolean method_1 ( ) { return ( ( ( var_1 . select ( ) . count ( ) ) == 0 ) && ( ! ( var_2 . contains ( var_3 . method_2 ( ) ) ) ) ) || ( ( var_1 . select ( ) . count ( ) ) == int_1 ) ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { if (! ( var_2 ) ) { var_3. method_2 ( java.lang.string.format ( string_1, var_4, var_5, var_6 ) ) ; method_3 ( ( ( type_2 ) ( var_7 ) ). method_4 ( ), ( ( type_2 ) ( var_7 ) ). method_5 ( ) ) ; var_2 = true ; } if ( ( var_1. size ( ) ) > 0 ) { var_3. method_2 ( java.lang.string. method_7 ( var_8 ) ) ; } }

************

************
tgt: public java.lang.string method_1 ( int var_1 , int var_2 ) { java.util.list < java.lang.string > var_3 = var_4 . method_2 ( var_1 , var_2 ) ; java.lang.stringbuilder var_5 = new java.lang.stringbuilder ( ) ; for ( java.lang.string line : var_3 ) { if ( ( var_5 . length ( ) ) != 0 ) { var_5 . append ( var_6 ) ; } var_5 . append ( line ) ; } return var_5 . tostring ( ) ; }
[0]: public int method_1 ( ) { int var_1 = int_1 ; type_1 var_2 = type_1. method_2 ( int_2 ) ; type_1 value = var_3 ; int sum = 0 ; value = var_2. method_3 ( var_1 ) ; java.lang.string str = value. tostring ( ) ; for ( int i = 0 ; i < ( ( str. length ( ) ) - 1 ) ; i ++ ) sum += ( ( int ) ( ( str. method_4 ( i ) ) - char_1 ) ) ; return sum ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = new type_1 ( var_1 . x , position . y , var_3 ) ; var_4 = var_5 . method_2 ( var_2 ) ; var_6 . set ( var_5 . method_3 ( var_4 , var_2 ) ) ; var_6 . method_4 ( var_1 . method_5 ( ) ) ; var_7 . set ( var_6 . method_6 ( ) , var_6 . method_7 ( ) ) ; return var_6 ; }
[0]: public void method_1 ( float var_1 ) { method_2 ( ) ; method_3 ( ) ; var_2. method_4 ( ) ; var_2. method_5 ( var_3, int_1, ( ( ( var_4 ) - ( var_3. method_6 ( ) ) ) - int_2 ) ) ; var_5. method_7 ( var_6. method_8 ( ) ) ; var_5. method_5 ( ) ; var_2. end ( ) ; }

************

************
tgt: public void method_1 ( boolean b ) { if ( b ) { if ( ( state ) == ( var_2 ) ) { return ; } setstate ( var_2 ) ; } else { if ( ( state ) == ( var_1 ) ) { return ; } setstate ( var_1 ) ; } var_3 . method_2 ( var_4 ) ; }
[0]: public static int method_1 ( java.lang.string format ) { try { int index = type_1. method_2 ( format ) ; if ( index == ( - 1 ) ) { throw new type_2 ( ) ; } return index ; } catch ( java.lang.exception var_1 ) { throw new type_2 ( ) ; } }

************

************
tgt: private void method_1 ( int i ) { type_1 var_1 = method_2 ( i ) ; if ( var_1 . method_3 ( ) ) { var_1 = var_1 . method_4 ( ) . get ( 0 ) ; } for ( type_1 to : var_1 . method_4 ( ) ) { var_1 . method_6 ( to ) ; method_7 ( to , var_1 ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 errors, type_3 var_2, final type_4 var_3 ) { if ( errors. method_2 ( ) ) { method_3 ( var_3 ) ; return string_1 ; } var_4. method_4 ( var_1 ) ; var_2. method_5 ( string_2, string_3 ) ; return string_4 + ( var_1. method_6 ( ) ) ; }

************

************
tgt: public byte [ ] method_1 ( ) throws type_1 { java.lang.object var_1 = method_2 ( ) ; if ( var_1 == null ) { return null ; } type_2 var_2 = type . method_3 ( var_3 ) ; if ( var_2 == null ) { throw new type_1 ( string_1 ) ; } java.io.inputstream data = type_3 . method_4 ( var_1 , var_2 . type , var_4 ) ; try { return type_4 . method_5 ( data ) ; } catch ( java.io.ioexception var_5 ) { throw new type_1 ( var_5 ) ; } }
[0]: public static void method_1 ( ) { for ( int var_1 = var_2 ; var_1 > 0 ; -- var_1 ) { type_1. method_2 ( var_3, string_1, type_2. method_3 ( new java.lang.integer ( ( var_1 - 1 ) ) ), type_2. method_3 ( new java.lang.integer ( var_1 ) ) ) ; } }

************

************
tgt: public static type_1 method_1 ( ) { type_2 var_1 = type_2 . method_2 ( ) ; var_1 . method_3 ( string_1 , string_2 ) ; var_1 . method_3 ( string_3 , string_4 ) ; var_1 . method_3 ( string_5 , string_6 ) ; type_3 var_2 = new type_3 ( type_4 . method_4 ( ) , var_1 ) ; var_2 . method_5 ( ( ( string_7 + ( type_5 . method_6 ( string_8 ) ) ) + string_9 ) ) ; return var_2 ; }
[0]: public static int method_1 ( java.util.date var_1, java.util.date var_2 ) { long var_3 = ( var_1. gettime ( ) ) - ( var_2. gettime ( ) ) ; int var_4 = ( ( int ) ( var_3 ) ) / ( ( ( int_1 * int_2 ) * int_2 ) * int_3 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 ) . method_3 ( var_1 . method_4 ( ) ) . method_5 ( var_3 ) ; var_4 . settext ( var_1 . getname ( ) ) ; var_5 . settext ( var_1 . method_6 ( ) . get ( 0 ) ) ; var_6 . settext ( ( ( string_1 + ( var_1 . method_7 ( ) ) ) + string_2 ) ) ; }
[0]: public void method_1 ( ) { try { method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_3 ( ) ; type_1. method_5 ( ). method_6 ( method_7 ( ) ). method_8 ( string_1 ). method_9 ( ). get ( string_2 ). method_10 ( ). method_11 ( int_1 ). method_12 ( string_3, type_2. method_13 ( int_2 ) ) ; } catch ( type_3 | type_4 | java.io.ioexception var_1 ) { var_1. method_14 ( ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( ) ; if ( ( var_1 . method_3 ( ) ) == ( var_3 ) ) { var_2 . method_4 ( ) ; } else if ( ( var_1 . method_3 ( ) ) == ( var_4 ) ) { var_2 . method_5 ( ) ; } return var_2 . method_6 ( method_7 ( var_1 . method_8 ( ) ) ) ; }
[0]: public byte [ ] method_1 ( ) throws java.io.ioexception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1 ) ; var_2. method_2 ( this ) ; var_2. method_3 ( ) ; var_2. method_4 ( ) ; var_1. method_4 ( ) ; return var_1. method_1 ( ) ; }

************

************
tgt: public boolean method_1 ( java.awt.color var_1 ) { if ( ( ( ( this . var_1 ) != null ) && ( this . var_1 . equals ( var_1 ) ) ) || ( ( ( this . var_1 ) == null ) && ( var_1 == null ) ) ) return false ; this . var_1 = var_1 ; method_2 ( new type_1 ( this , var_2 , string_1 ) ) ; return true ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1. method_2 ( ) ; type_2 var_2 = execute ( string_1, new java.lang.object [ ] { var_1 } ) ; assertthat ( var_2. method_3 ( ), method_4 ( 0l ) ) ; type_2 var_3 = execute ( string_2, new java.lang.object [ ] { string_3 } ) ; assertthat ( var_3. method_3 ( ), method_4 ( 0l ) ) ; } }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 ) { type_2 . state ( string_1 ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . method_2 ( true ) ; type_2 . method_3 ( ( float_1 + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( int_1 ) ) ) ) * float_1 ) ) ) ; } return var_1 ; }
[0]: void method_1 ( int var_1, int status, int var_2 ) { type_1. method_2 ( var_3, string_1 ) ; if ( var_4 ) { type_1. method_2 ( var_3, ( ( ( ( ( string_2 + var_2 ) + string_3 ) + status ) + string_4 ) + var_1 ) ) ; } if ( status!= 0 ) { } var_5. method_3 ( ) ; }

************

************
tgt: public static void method_1 ( ) { var_3 = float_1 * ( var_4 ) ; var_5 = var_6 ; if ( ( var_7 ) != 0 ) { type_1 . method_2 ( type_2 . method_3 ( ) , var_7 , var_8 ) ; type_1 . method_2 ( type_2 . method_4 ( ) , var_9 , var_10 ) ; type_1 . method_2 ( type_2 . method_5 ( ) , var_11 , var_12 ) ; type_1 . method_2 ( type_2 . method_6 ( ) , var_13 , var_14 ) ; } }
[0]: public static void method_1 ( int id ) { var_1. remove ( ( id - 1 ) ) ; for ( int i = id - 1 ; i < ( var_1. size ( ) ) ; i ++ ) { var_1. get ( i ). method_2 ( ( i + 1 ) ) ; var_2 -= 1 ; } }

************

************
tgt: public type_1 method_1 ( final long var_1 ) { try { var_2 . method_2 ( ) ; if ( var_1 < 0 ) var_3 . method_3 ( ) ; else var_3 . method_3 ( var_1 , var_4 ) ; return method_1 ( ) ; } catch ( final type_2 var_5 ) { type_3 . error ( var_5 . method_4 ( ) , var_5 ) ; } finally { var_2 . method_5 ( ) ; } return null ; }
[0]: public double method_1 ( double var_1 ) { double var_2 = type_1. method_2 ( ( - var_1 ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + float_1 ; p *= java.lang.math.random ( ) ; } while ( p > var_2 ) ; double var_3 = 1 / ( k - float_2 ) ; java.lang.system.out.println ( var_3 ) ; var_3 = method_3 ( ( var_3 * int_1 ) ) ; return var_3 ; }

************

************
tgt: private void method_1 ( final type_2 var_2 ) { if ( ( method_2 ( var_2 ) ) && ( method_3 ( var_2 ) ) ) { final type_3 var_4 = new type_3 ( this , string_1 , var_5 ) ; var_4 . method_4 ( this ) . method_5 ( this ) . method_6 ( this ) ; var_6 . method_7 ( var_4 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { int length = java.lang.integer.parseint ( arg [ 0 ] ) ; int var_1 = java.lang.integer.parseint ( arg [ 1 ] ) ; type_1 var_2 = new type_1 ( length, var_1 ) ; java.lang.string output = java.lang.string.format ( string_1, var_2. length, var_3, var_2. method_1 ( ), var_2. method_2 ( ) ) ; java.lang.system.out.println ( output ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { method_2 ( var_1 , var_2 ) ; try { var_3 = new type_1 ( var_1 ) ; var_3 . method_3 ( var_2 ) ; var_4 = var_3 . method_4 ( ) ; method_5 ( ) ; type_2 var_5 = new type_2 ( var_4 ) ; type_3 var_6 = new type_3 ( var_4 ) ; var_6 . start ( ) ; var_5 . start ( ) ; } catch ( java.io.ioexception var_7 ) { var_7 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { try { var_1 = new java.io.bufferedreader ( new type_1 ( var_2. method_2 ( ) ) ) ; while ( (! ( var_3 ) ) || ( var_1. method_3 ( ) ) ) { java.lang.string line = var_1. method_4 ( ) ; if ( line!= null ) { method_5 ( line ) ; } java.lang.thread. method_6 ( var_4 ) ; } var_1. method_7 ( ) ; } catch ( java.lang.exception var_5 ) { var_5. method_8 ( var_6 ) ; } } }

************

************
tgt: public java.util.set < type_1 > get ( type_1 k ) { java.util.map < type_1 , java.lang.long > var_1 = var_2 . get ( k ) ; java.util.set < type_1 > var_3 = null ; if ( var_1 != null ) var_3 = var_1 . method_2 ( ) ; return var_3 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_3 ( ) ; var_3. method_2 ( var_4 ) ; var_2. method_3 ( var_3 ) ; var_1. method_4 ( var_2 ) ; type_4. assertequals ( var_4, var_1. method_5 ( ) ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = type_2 . method_2 ( var_1 ) ; try { var_2 = var_3 . method_1 ( var_2 ) ; } catch ( type_3 var_4 ) { throw new type_4 ( var_4 . method_3 ( ) ) ; } catch ( type_5 var_4 ) { throw new type_6 ( var_4 . method_3 ( ) ) ; } return var_2 ; }
[0]: protected java.util.list < java.lang.string > method_1 ( type_1 output ) { java.util.list < type_2 > [ ] var_1 = method_2 ( output ) ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( int var_3 = 0, count = output. method_3 ( ) ; var_3 < count ; var_3 ++ ) { java.util.list < type_2 > var_4 = var_1 [ var_3 ] ; var_2. method_4 ( method_5 ( var_4 ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . var_2 = var_1 ; if ( ( var_1 . method_2 ( ) ) != null ) { this . var_3 = var_2 . method_2 ( ) ; this . var_4 = var_3 . method_3 ( ) ; method_4 ( ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string fieldname ) { java.lang.string result = string_1 ; if ( var_1. method_2 ( ). method_3 ( fieldname ) ) { result = var_1. method_2 ( ). get ( fieldname ). gettype ( ). method_4 ( ) ; } return result ; }

************

************
tgt: private boolean method_1 ( type_1 t ) { return ( ( ( ( ( t . method_2 ( ) ) == null ) || ( ( t . method_3 ( ) . method_4 ( ) ) == null ) ) || ( ( t . method_5 ( ) . method_6 ( ) ) == null ) ) || ( ( t . method_7 ( ) . method_6 ( ) ) == null ) ) || ( t . method_8 ( ) . equals ( string_1 ) ) ; }
[0]: private static java.lang.string method_1 ( type_1 event ) { return ( ( ( ( ( string_1 + ( event. method_2 ( ) ) ) + string_2 ) + ( ( ( type_2 ) ( event ) ). method_3 ( ) ) ) + string_3 ) + string_4 ) + ( event. method_2 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( var_1 . method_3 ( ) , this : : method_4 ) ; method_2 ( var_1 . method_5 ( ) , this : : method_6 ) ; if ( ( var_1 . method_7 ( ) ) != null ) method_8 ( var_1 . method_7 ( ) , var_1 . method_9 ( ) , this : : method_1 ) ; method_2 ( var_1 . method_10 ( ) , this : : method_11 ) ; method_2 ( var_1 . method_12 ( ) , this : : method_13 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( ) ; type_2 var_2 = method_3 ( ) ; var_3 = ( ( type_3 ) ( var_2. method_4 ( string_1 ) ) ) ; if ( ( var_3 ) == null ) { var_3 = new type_3 ( ) ; var_3. method_5 ( this, 0 ) ; var_2. method_6 ( ). add ( var_3, string_1 ). commit ( ) ; } var_4 = var_3. method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( var_2 ) ) { var_1 . method_3 ( var_2 ) ; return ; } if ( ! ( var_3 . method_4 ( ) ) ) { type_1 . method_5 ( var_4 , ( string_1 + ( type_2 . method_6 ( this ) ) ) ) ; super . method_1 ( ) ; } }
[0]: private type_1 <? > method_1 ( type_2 var_1, type_3 var_2 ) { type_4 < type_5 > var_3 = var_4. method_2 ( var_1 ) ; if ( var_3. method_3 ( ) ) { var_5. method_4 ( var_2, var_6, var_3. get ( ) ) ; return method_5 ( var_3. get ( ) ) ; } else { var_5. method_4 ( var_2, var_7, var_1 ) ; return type_1. status ( var_8 ). build ( ) ; } }

************

************
tgt: protected boolean method_1 ( type_1 node ) { type_2 var_1 = new type_2 ( var_2 . method_2 ( ) ) ; var_2 . method_3 ( var_1 ) ; boolean var_3 = method_4 ( node . method_5 ( ) ) ; var_2 . method_6 ( ) ; return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( ) ; if ( ( ( var_3 )!= null ) && ( ( var_3. size ( ) ) > 0 ) ) { var_4. method_3 ( var_3 ) ; } var_2. add ( var_4. method_4 ( ) ) ; var_2. show ( ) ; var_2. method_5 ( ) ; var_2. method_6 ( ). method_7 ( ). method_8 ( int_1 ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , type_1 field ) { type_1 result = null ; if ( ( var_1 != null ) && ( field != null ) ) { if ( var_1 . getid ( ) . equals ( field . getid ( ) ) ) { return var_1 ; } else { for ( type_1 var_2 : var_1 . method_2 ( ) ) { type_1 var_3 = method_1 ( var_2 , field ) ; if ( var_3 != null ) { return var_3 ; } } } } return result ; }
[0]: public static type_1 method_1 ( java.lang.class var_1, type_2 method ) { type_1 [ ] var_2 = var_1. method_2 ( ) ; type_1 field = null ; for ( type_1 f : var_2 ) if ( ( f. method_3 ( var_3 class ) ) == null ) if ( type_3. method_4 ( f. getname ( ) ). equals ( method. getname ( ) ) ) field = f ; return field ; }

************

************
tgt: public void method_1 ( final type_1 < ? , ? > var_1 , final type_2 < ? , ? > var_2 , final java.lang.throwable var_3 ) { synchronized ( var_4 ) { if ( ( var_5 ) == ( var_6 ) ) { type_3 . method_2 ( string_1 , var_3 ) ; method_3 ( var_1 ) ; var_7 = null ; } } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = var_3 ; method_2 ( var_4 ) ; var_5 = new type_2 ( this ) ; var_5. method_3 ( var_6 ) ; method_2 ( var_5 ) ; var_5. method_4 ( false ) ; var_7 = var_5. method_5 ( ) ; }

************

************
tgt: private boolean method_1 ( final java.lang.string value ) throws java.io.ioexception { return ( ( ( ( value . startswith ( string_1 ) ) || ( value . startswith ( string_2 ) ) ) || ( "true" . equals ( value ) ) ) || ( "false" . equals ( value ) ) ) || ( type_1 . method_2 ( value ) . method_3 ( ) ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { return false ; } type_2. method_3 ( var_2, ( string_1 + ( var_3 ) ) ) ; var_3 = var_1. method_4 ( ) ; var_4. method_5 ( var_1 ) ; if ( ( var_4. method_6 ( ) )!= null ) { return true ; } return super. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( final type_1 < java.lang.string > source , final boolean var_1 ) { if ( var_1 ) { var_2 . method_2 ( ) ; } type_3 . method_5 ( string_1 , new java.lang.object [ ] { source . method_6 ( ) . method_7 ( ) , var_1 } ) ; var_3 . method_3 ( type_2 . method_4 ( var_4 , new java.util.date ( ) ) ) ; }
[0]: public static < type_1 > boolean method_1 ( final type_2 < type_1 > source, final int var_1, final int end, type_3 < type_1 > var_2 ) { final java.util.iterator < type_1 > var_3 = method_2 ( source, var_1 ) ; for ( int i = var_1 ; i!= end ; ++ i ) { assert var_3. method_3 ( ) ; if ( var_2. method_4 ( var_3. method_5 ( ) ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( java.lang.integer var_1 ) { java.lang.integer count = 0 ; if ( var_3 . method_2 ( var_1 ) ) { count = var_3 . get ( var_1 ) ; } var_3 . put ( var_1 , ( ++ count ) ) ; ++ ( var_2 ) ; if ( ( ( var_2 ) >= ( var_4 ) ) && ( ( ( var_2 ) % ( var_4 ) ) == 0 ) ) { method_3 ( ) ; } }
[0]: public void method_1 ( int data ) { if ( ( size ) == 0 ) { var_1 = new type_1 ( data ) ; var_2 = var_3 ; } else { type_1 var_4 = new type_1 ( data ) ; var_5 = var_1 ; var_1 = var_4 ; } ++ ( size ) ; }

************

************
tgt: static type_1 method_1 ( type_1 target , type_1 var_1 , type_1 var_2 ) { for ( int i = 0 ; i < int_1 ; i ++ ) { type_2 var_3 = var_4 [ i ] ; if ( var_3 == null ) continue ; type_1 c = var_3 . method_2 ( target ) ; if ( ( c != var_1 ) && ( c != var_2 ) ) return c ; } throw new type_3 ( string_1 ) ; }
[0]: protected static void method_1 ( ) { java.lang.string var_1 = type_1. method_2 ( string_1, string_2 ) ; type_2. method_1 ( var_1 ) ; if ( (! ( type_2. method_3 ( ). method_4 ( ) ) ) || (! ( type_2. method_3 ( ). method_5 ( ) ) ) ) { type_3. fail ( ( string_3 + var_1 ) ) ; } else { type_3. fail ( ( string_3 + var_1 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 response , type_3 var_2 ) throws java.io.ioexception , type_4 { type_5 var_3 = ( ( type_5 ) ( var_1 ) ) ; type_6 var_4 = ( ( type_6 ) ( response ) ) ; var_3 . method_2 ( string_1 ) ; var_4 . method_2 ( string_1 ) ; method_3 ( var_3 , var_4 ) ; var_2 . method_1 ( var_1 , response ) ; }
[0]: public void method_1 ( type_1 node ) { int var_1 = node. method_2 ( ) ; var_2. get ( ( var_1 - 1 ) ). put ( node. method_3 ( ), node ) ; if (! ( var_2. get ( ( var_1 - 1 ) ). method_4 ( node. method_3 ( ) ) ) ) { java.lang.system.out.println ( string_1 ) ; } else { java.lang.system.out.println ( string_2 ) ; } }

************

************
tgt: public static void method_1 ( ) { try { var_1 . method_2 ( ) ; var_2 . method_4 ( ) ; type_1 . method_3 ( new java.io.file ( string_1 ) ) ; type_1 . method_3 ( new java.io.file ( string_2 ) ) ; } catch ( final java.io.ioexception var_3 ) { var_3 . method_5 ( ) ; } }
[0]: private < type_1 extends type_2 > boolean method_1 ( java.util.list < type_3 > line, type_4 var_1 ) { while ( ( line. size ( ) ) > 1 ) { type_3 var_2 = line. get ( 0 ) ; type_3 var_3 = line. get ( 1 ) ; if (! ( method_2 ( var_2, var_3, var_1 ) ) ) return false ; line. remove ( var_3 ) ; } return true ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , type_1 var_2 ) { type_1 var_3 = method_2 ( var_2 ) ; if ( var_4 ) { var_3 . method_3 ( var_5 , var_1 ) ; } if ( var_6 ) { java.lang.string var_7 = var_3 . method_4 ( var_8 ) ; int var_9 = 0 ; try { var_9 = java.lang.integer.parseint ( var_7 ) ; } catch ( java.lang.exception var_10 ) { var_9 = 0 ; } var_3 . setvalue ( var_8 , java.lang.integer.tostring ( ( ++ var_9 ) ) ) ; } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( false ) ; if ( ( var_2. getconfig ( ). method_3 ( ) ) == ( var_3 ) ) { var_4 = var_5 ; var_2. method_4 ( false ) ; var_6 = true ; } else { var_2. method_4 ( true ) ; } var_2. method_5 ( ) ; }

************

************
tgt: public float method_1 ( ) { type_1 var_1 = new type_1 ( ( ( method_2 ( ) . method_3 ( ) ) - ( method_4 ( ) . method_3 ( ) ) ) , ( ( method_2 ( ) . method_5 ( ) ) - ( method_4 ( ) . method_5 ( ) ) ) ) ; return var_1 . method_6 ( new type_1 ( 1.0f , 0.0f ) ) ; }
[0]: public void method_1 ( int [ ] array ) { for ( int i = 0 ; i < ( array. length ) ; i ++ ) { java.lang.system.out.print ( i ) ; if ( i!= ( ( array. length ) - 1 ) ) { java.lang.system.out.print ( string_1 ) ; } } }

************

************
tgt: public type_1 [ ] [ ] method_1 ( ) { type_1 [ ] [ ] var_1 ; var_1 = new type_1 [ int_1 ] [ int_1 ] ; for ( int x = 0 ; x < int_1 ; x ++ ) { for ( int y = 0 ; y < int_1 ; y ++ ) { type_1 type = var_2 [ x ] [ y ] . gettype ( ) ; var_1 [ x ] [ y ] = type ; } } return var_1 ; }
[0]: public void start ( ) { if (! ( var_1 ) ) { if (! ( ( ( method_1 ( ). getvalue ( ) )!= null ) || ( ( method_2 ( ). getvalue ( ) )!= null ) ) ) { method_3 ( null ) ; } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 x = new type_1 ( ) ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { x . add ( java.lang.integer.parseint ( args [ i ] ) ) ; } java.lang.system.out.println ( x . method_2 ( ) ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { java.lang.integer type_2 = new java.lang.integer ( var_1. method_2 ( ). split ( string_1 ) [ 0 ]. substring ( 1 ) ) ; java.lang.integer var_3 = new java.lang.integer ( var_2. method_2 ( ). split ( string_1 ) [ 0 ]. substring ( 1 ) ) ; return type_2. compareto ( var_3 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) throws type_1 , type_2 { method_3 ( ) ; var_4 . settext ( string_1 ) ; var_5 = var_6 . gettext ( ) . tostring ( ) ; var_7 = var_8 . gettext ( ) . tostring ( ) ; if ( ( ! ( var_5 . equals ( string_1 ) ) ) && ( ! ( var_7 . equals ( string_1 ) ) ) ) { var_2 . method_2 ( var_3 ) ; type_3 var_9 = new type_3 ( ) ; var_9 . execute ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { var_2. method_2 ( true ) ; for ( type_1 var_3 : var_1 ) { if ( ( var_2!= var_3 ) && ( ( var_2. getname ( ) )!= string_1 ) ) { if ( method_3 ( var_2, var_3 ) ) method_4 ( var_2, var_3 ) ; } } } return var_1 ; } return null ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { try { java.lang.string var_2 = var_1 . replaceall ( string_1 , string_2 ) ; return type_1 . method_2 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { assert false ; var_3 . method_3 ( ) ; } return string_3 ; }
[0]: public void method_1 ( ) { int var_1 = var_2 ; int var_3 = var_2 ; if ( ( var_4 ) == 0 ) { var_1 = var_5 ; } else if ( ( var_4 ) == ( ( var_6. method_2 ( ). size ( ) ) - 1 ) ) { var_3 = var_5 ; } var_7. method_3 ( var_1 ) ; var_8. method_3 ( var_3 ) ; var_9. method_4 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_2 ( ) ; type_2 var_2 = method_3 ( ) ; type_3 f = ( ( type_3 ) ( var_2 . method_4 ( var_3 class . getname ( ) ) ) ) ; if ( f != null ) { f . method_1 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_1 == null ) { type_1 var_3 = new type_1 ( string_2 ) ; var_3. put ( string_3, type_3. method_2 ( ) ) ; var_3. put ( string_4, type_4. method_3 ( ) ) ; method_4 ( var_3 ) ; type_3. method_5 ( ) ; } else { } }

************

************
tgt: public type_1 method_1 ( final long time ) { if ( time < ( this . method_2 ( ) ) ) { return new type_1 ( time , this . method_3 ( ) ) ; } else if ( ( this . method_3 ( ) ) < time ) { return new type_1 ( this . method_2 ( ) , time ) ; } else { return this ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { var_2 = var_1 ; java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; int var_4 = ( var_3. get ( var_5 ) ) - 1 ; java.lang.system.out.println ( var_1 ) ; if ( var_2. substring ( var_4, ( var_4 + 1 ) ). equals ( string_1 ) ) { var_6 = true ; } else { var_6 = false ; } } }

************

************
tgt: public final void start ( final android.view.view var_1 ) { ( ( type_1 ) ( method_1 ( ) ) ) . method_2 ( var_2 ) ; var_2 . remove ( null ) ; for ( type_2 var_3 : var_2 . method_3 ( ) ) { var_3 . method_4 ( string_1 ) ; var_3 . method_5 ( ) ; } var_4 . method_6 ( ) ; android.content.intent intent = new android.content.intent ( this , var_5 class ) ; method_7 ( intent ) ; }
[0]: public byte [ ] method_1 ( type_1 var_1, java.lang.string classname, java.lang.class <? > var_2, type_2 var_3, byte [ ] var_4 ) throws type_3 { try { return classname. equals ( var_5 )? method_2 ( classname, var_2, var_4 ) : var_4 ; } catch ( java.lang.throwable var_6 ) { var_6. method_3 ( ) ; return var_4 ; } }

************

************
tgt: public java.lang.double [ ] method_1 ( ) { if ( ( var_2 . size ( ) ) == 0 ) { return null ; } java.util.arraylist < java.lang.double > var_1 = var_2 . remove ( 0 ) ; java.lang.double [ ] var_3 = new java.lang.double [ int_1 ] ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_3 [ i ] = var_1 . remove ( 0 ) ; } return var_3 ; }
[0]: public void method_1 ( ) { if ( method_2 ( var_1 ) ) { if ( type_1. method_3 ( var_1 ) ) { var_2. method_4 ( ) ; method_5 ( ) ; } else { var_2. method_6 ( ) ; type_2. method_7 ( var_3, string_1 ) ; } } else { var_2. method_6 ( ) ; type_2. method_7 ( var_3, string_2 ) ; } } }

************

************
tgt: public boolean method_1 ( final type_1 target , final type_2 < type_3 < ? > , type_1 > var_1 , final int var_2 ) { if ( ( null != ( var_3 ) ) && ( null != target ) ) { type_4 < type_5 > var_4 = var_5 . method_2 ( var_3 , var_6 . method_3 ( target , var_1 , var_2 ) ) ; return method_4 ( var_4 ) ; } return false ; }
[0]: private boolean method_1 ( final type_1 var_1 ) { final long var_2 = method_2 ( var_1 ) ; if ( var_2 == ( - 1l ) ) { return false ; } final type_2 var_3 = var_1. method_3 ( ). method_4 ( ) ; final int var_4 = type_3. method_5 ( var_3. method_6 ( ) ) ; final long var_5 = method_7 ( ) ; return var_4 < ( ( ( 1.0 * ( var_6 ) ) * var_2 ) / var_5 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) { var_1 . method_2 ( var_3 ) ; super . method_1 ( var_1 , var_2 ) ; var_4 . method_3 ( var_5 ) ; type_3 var_6 = var_4 . method_4 ( var_7 , var_8 , var_5 , ( ( var_7 ) == ( var_5 ) ? var_9 : null ) ) ; type_4 . i ( string_1 , string_2 ) ; main . method_5 ( var_6 , var_10 , false , false ) ; main . method_6 ( new type_5 ( var_6 ) ) ; return false ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws type_1 { var_2. info ( string_1 ) ; var_2. info ( ( string_2 + ( var_3 ) ) ) ; type_2. method_2 ( string_3, java.lang.string. method_3 ( var_4 ) ) ; var_5 = new type_3 ( ) ; var_5. method_4 ( ). to ( type_4. method_5 ( string_4 ) ) ; }

************

************
tgt: private void method_1 ( int i ) { type_1 var_1 ; android.content.intent intent ; var_1 = new type_1 ( ) ; var_1 . method_2 ( string_1 , i ) ; intent = new android.content.intent ( this , var_2 class ) ; intent . method_3 ( var_1 ) ; this . method_1 ( intent ) ; method_4 ( ) ; }
[0]: public type_1 method_1 ( ) { int var_1 = 0 ; type_1 var_2 = method_2 ( ) ; if ( ( var_3 )!= null ) { while ( ( var_2. equals ( var_3 ) ) && ( var_1 < ( var_4 ) ) ) { type_2. method_3 ( string_1 ) ; var_2 = method_2 ( ) ; var_1 ++ ; } } return var_2 ; }

************

************
tgt: private void method_1 ( final type_1 method ) { method . method_2 ( true ) ; if ( ( type_2 . method_3 ( method ) ) != null ) { method_6 ( method ) ; } else if ( ( type_2 . method_5 ( method ) ) != null ) { method_4 ( method ) ; } }
[0]: public static int method_1 ( int var_1, int var_2, int var_3 ) { int var_4 = 0 ; java.lang.double var_5 = 0.0 ; for ( int i = var_1 ; i < var_2 ; i ++ ) { if ( ( var_6. get ( var_3 ). get ( i ) ) > var_5 ) { var_5 = var_6. get ( var_3 ). get ( i ) ; var_4 = i ; } } return var_4 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_1 ) ; var_3 = new type_1 ( ) ; if ( type_2 . method_3 ( string_1 ) . tolowercase ( ) . contains ( string_2 ) ) { method_4 ( ) ; } var_4 = type_3 . method_1 ( var_3 , new java.io.file ( var_1 ) , var_5 ) ; }
[0]: public type_1 method_1 ( java.lang.stringbuffer var_1 ) { if ( var_1 == null ) return method_2 ( ) ; int var_2 = var_1. length ( ) ; method_3 ( ( ( count ) + var_2 ) ) ; type_2. method_4 ( value, 0, value, count, count ) ; var_1. method_5 ( 0, var_2, value, 0 ) ; count += var_2 ; return this ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { method_2 ( ) . method_3 ( ) . remove ( var_1 ) . commit ( ) ; var_1 = null ; new type_1 ( ) . execute ( var_2 , this ) ; } }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { method_2 ( var_1, var_2 ) ; if ( var_2!= null ) { type_2. method_4 ( var_3, var_2. method_5 ( ). tostring ( ), getactivity ( ) ) ; method_6 ( var_2. method_5 ( ). tostring ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_2 ( this , var_3 , var_4 ) ; var_5 . method_3 ( var_1 ) ; } else { var_1 . method_4 ( ) ; var_1 . method_5 ( var_4 ) ; var_1 . method_6 ( ) ; } }
[0]: protected java.lang.string method_1 ( final java.lang.string var_1, final java.lang.string context ) { if ( var_2 ) { if ( ( string_1. contains ( var_1 ) ) || ( string_2. contains ( var_1 ) ) ) { return ( ( string_3 + ( var_3 ) ) + string_4 ) + context ; } else { return ( ( string_3 + ( var_3 ) ) + string_5 ) + context ; } } else { return ( string_3 + var_1 ) + context ; } }

************

************
tgt: public boolean method_1 ( java.lang.string name , java.lang.string var_1 , int var_2 , int x , int y ) { if ( end ) return false ; view . method_2 ( new type_1 ( var_3 , var_1 , var_2 , var_4 , type_2 . method_3 ( name ) , x , y ) ) ; return false ; }
[0]: public void method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( null!= var_1 ) && ( null!= var_2 ) ) { var_3 = method_2 ( ). method_3 ( ) ; var_3. method_4 ( var_1 ). method_4 ( var_2 ) ; } }

************

************
tgt: private int method_1 ( java.util.list < type_1 > var_1 ) { long var_2 = 0 ; int var_3 = 0 ; for ( type_1 var_4 : var_1 ) { var_2 += var_4 . method_2 ( ) ; var_3 ++ ; } if ( var_3 == 0 ) { return 0 ; } else { return ( ( int ) ( var_2 ) ) / var_3 ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = method_2 ( var_2 ) ; if ( var_3 == null ) return ; type_2 var_4 = ( ( type_2 ) ( new type_2 ( ). method_3 ( ( string_1 + ( var_3. getid ( ) ) ) ) ) ) ; var_4. delete ( ) ; new type_3 ( ). method_4 ( ( string_1 + ( var_3. getid ( ) ) ) ) ; var_3. delete ( ) ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_2 var_3 ) { if ( ( var_1 != null ) && ( ! ( var_1 . isempty ( ) ) ) ) { type_3 var_4 = type_3 . method_2 ( var_5 ) ; type_4 var_6 = new type_5 ( ) . method_3 ( ) . method_4 ( var_2 ) . method_5 ( ) . method_6 ( var_3 ) . method_7 ( type_6 . method_8 ( var_4 ) ) ; return method_1 ( var_1 , var_6 , var_3 ) ; } return null ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } var_2. method_3 ( ) ; try { if ( ( var_3 )!= null ) { method_4 ( var_4 ) ; } if ( ( var_5 )!= null ) { method_4 ( var_6 ) ; } } catch ( java.lang.exception var_7 ) { } }

************

************
tgt: public void method_1 ( ) { for ( java.lang.string key : var_2 . method_2 ( ) . method_3 ( ) ) { type_1 var_3 = var_2 . method_2 ( ) . get ( key ) ; if ( var_3 != null ) var_3 . method_4 ( ) ; } for ( java.lang.string key : var_5 . method_2 ( ) . method_3 ( ) ) { var_5 . method_5 ( key ) ; } }
[0]: private type_1 method_1 ( type_2 var_1 ) { java.lang.string path = type_3. method_2 ( var_1. method_3 ( ) ). method_4 ( ) ; java.lang.string [ ] var_2 = path. split ( string_1 ) ; java.lang.string var_3 = var_2 [ 1 ] ; java.lang.string query = type_3. method_2 ( var_1. method_3 ( ) ). method_5 ( ) ; java.lang.string [ ] var_4 = type_4. method_6 ( query ) ; return method_7 ( var_3, var_4 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; type_2 var_2 = type_3 . method_2 ( this . var_3 , var_4 class ) ; if ( var_2 != null ) { for ( type_4 var_5 : var_2 . method_3 ( ) ) { var_1 . add ( new type_1 ( var_5 ) ) ; } } return var_1 ; }
[0]: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = method_2 ( ) ; java.lang.string var_3 = method_3 ( var_2 ) ; type_2 var_4 = method_4 ( ) ; java.lang.string var_5 = method_3 ( var_4 ) ; type_2 var_6 = method_5 ( ) ; java.lang.string var_7 = method_3 ( var_6 ) ; var_1 = method_6 ( var_3, var_5, var_7, var_1 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . remove ( ( ( var_1 . size ( ) ) - 1 ) ) ; var_2 . method_1 ( ) ; } catch ( java.io.ioexception var_3 ) { try { var_2 . method_2 ( ) ; var_2 . method_1 ( ) ; } catch ( java.io.ioexception var_4 ) { var_5 . error ( var_3 . method_3 ( ) , var_3 ) ; } } }
[0]: public synchronized void fail ( java.lang.throwable error ) { int var_1 = ( ( var_2 ) == 0 )? int_1 : var_2 ; int var_3 = ( ( var_4 ) == 0 )? int_1 : var_4 ; method_1 ( method_2 ( var_1, var_3 ) ) ; ( ( type_1 < type_2 > ) ( state ) ). fail ( error ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( ( method_3 ( ) ) != null ) { method_3 ( ) . method_4 ( true ) ; } method_5 ( ) ; type_2 var_3 = method_6 ( ) . method_7 ( ) ; type_3 var_4 = new type_3 ( ) ; var_3 . add ( var_5 , var_4 ) ; var_3 . commit ( ) ; }
[0]: public void method_1 ( ) { type_1 item = method_2 ( ) ; type_2. method_3 ( string_1 ). method_4 ( var_1 ). method_5 ( type_2. method_6 ( ), type_2. method_7 ( item. method_8 ( ) ) ) ; var_1. method_9 ( item. method_8 ( ) ) ; type_2. method_10 ( var_1, type_2. method_11 ( 1 ) ). method_5 ( type_2. method_7 ( 0l ), type_2. method_7 ( item. method_8 ( ) ) ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.long id , java.lang.string var_1 ) { var_2 . info ( ( string_1 + id ) ) ; type_1 var_3 = var_4 . method_2 ( id ) ; java.lang.system.out.println ( var_3 . method_3 ( ) ) ; java.lang.system.out.println ( var_1 ) ; if ( var_3 . method_3 ( ) . equals ( var_1 ) ) { return var_3 . method_4 ( ) ; } else { return string_2 ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. i ( var_2, string_1 ) ; method_2 ( ) ; android.content.intent i = new android.content.intent ( method_4 ( ), var_4 class ) ; method_5 ( i ) ; method_6 ( ) ; }

************

************
tgt: private void method_1 ( ) { java.util.list < type_1 > var_1 = method_2 ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( type_1 var_3 : var_1 ) { var_2 . add ( var_3 . method_3 ( ) ) ; } try { var_4 . method_4 ( var_2 , type_3 . method_5 ( ) ) ; } catch ( type_4 var_6 ) { type_5 . method_7 ( null , var_6 . method_8 ( ) , string_1 , var_7 ) ; } }
[0]: public void method_1 ( int var_1 ) { for ( int i = var_1 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_2. get ( i ). method_2 ( ) ) var_2. get ( i ). method_3 ( false ) ; else break ; } }

************

************
tgt: public static int method_1 ( java.util.scanner var_1 , java.lang.string message ) { java.lang.integer var_2 = null ; do { java.lang.system.out.print ( ( message + string_1 ) ) ; try { var_2 = var_1 . method_2 ( ) ; var_1 . method_3 ( ) ; } catch ( type_1 var_3 ) { java.lang.system.out.println ( string_2 ) ; var_1 . method_3 ( ) ; } } while ( var_2 == null ) ; return var_2 ; }
[0]: public type_1 method_1 ( int index ) { if ( ( ( var_1. size ( ) ) <= 1 ) || ( method_2 ( index ) ) ) { return null ; } type_1 var_2 = var_1. remove ( index ) ; var_2. method_3 ( ) ; return var_2 ; }

************

************
tgt: public void method_1 ( boolean var_1 , boolean var_2 , boolean var_3 , boolean var_4 , boolean var_5 , boolean var_6 , boolean var_7 ) { if ( var_1 ) ( var_8 ) ++ ; if ( var_2 ) ( var_9 ) ++ ; if ( var_2 && var_3 ) ( var_10 ) ++ ; if ( var_4 ) ( var_11 ) ++ ; if ( var_6 ) ( var_12 ) ++ ; if ( var_7 ) ( var_13 ) ++ ; if ( var_5 ) ( var_14 ) ++ ; }
[0]: public void method_1 ( java.lang.string line ) { type_1. method_2 ( ( string_1 + line ) ) ; if ( line. trim ( ). isempty ( ) ) { return ; } java.util.regex.matcher var_1 = type_2. method_3 ( line ) ; while ( var_1. method_4 ( ) ) { type_3 var_2 = method_5 ( var_1 ) ; var_3. method_6 ( var_2 ) ; return ; } }

************

************
tgt: public static java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) throws type_1 { java.lang.string list = type_2 . method_2 ( var_1 ) ; if ( ( list != null ) && ( ! ( list . isempty ( ) ) ) ) { return java.util.arrays.aslist ( list . split ( string_1 ) ) ; } return null ; }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { if ( ( var_3 ) == null ) { return ; } if ( var_2 ) { var_3. method_2 ( java.lang.integer.parseint ( var_4. gettext ( ). tostring ( ) ) ) ; } else { var_3. method_2 ( int_1 ) ; } if ( var_5. method_3 ( ) ) { type_2. method_4 ( string_1, string_2 ) ; var_5. method_5 ( ) ; } } }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_2 data , int offset , java.lang.string name ) { int var_2 = data . method_2 ( ) [ int_1 ] ; type_3 var_3 = new type_3 ( name ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_3 . add ( ( i + offset ) , data . method_3 ( i ) ) ; } var_1 . method_4 ( var_3 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = method_3 ( ) ; var_3. method_4 ( string_1 ) ; var_3. method_5 ( true ) ; if ( ( getintent ( ) )!= null ) { method_6 ( getintent ( ) ) ; } }

************

************
tgt: public void method_1 ( ) { for ( int num : var_1 ) { var_2 . method_2 ( num ) ; } int key = int_5 ; assertequals ( int_5 , var_2 . method_3 ( key ) ) ; int var_3 = int_10 ; assertequals ( 0 , var_2 . method_3 ( var_3 ) ) ; }
[0]: public void method_1 ( type_1 event ) { type_2. method_2 ( getactivity ( ), event. method_3 ( ). getname ( ), var_1 ). show ( ) ; type_3 var_2 = new type_3 ( ) ; type_4 var_3 = new type_4 ( ) ; var_3. method_4 ( var_4, event. method_3 ( ) ) ; var_2. method_5 ( var_3 ) ; var_2. show ( method_6 ( ), string_1 ) ; }

************

************
tgt: private static type_1 method_1 ( type_1 var_1 , int value ) { var_1 . method_2 ( ) ; type_2 var_2 = ( ( byte ) ( 0 ) ) ; while ( var_1 . method_3 ( ) ) { var_1 . put ( var_2 ) ; } var_1 . method_4 ( ) ; return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1, type_2 var_2 ) { final type_3 var_3 = var_4. method_2 ( var_1 ) ; final type_4 var_5 = var_6. method_3 ( var_2, var_7 ) ; if ( ( var_5. method_4 ( ) ) <= 0 ) { var_6. method_5 ( var_3, var_5 ) ; } return type_1. method_6 ( var_8. method_7 ( var_3 ) ) ; }

************

************
tgt: private void method_1 ( ) { this . var_1 . settext ( var_2 ) ; java.lang.system.out.println ( var_3 ) ; if ( var_3 . equals ( string_1 ) ) { this . var_4 . settext ( string_2 ) ; } else if ( var_3 . equals ( string_3 ) ) { this . var_4 . settext ( string_4 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; for ( type_2 i : var_2 ) var_1. method_3 ( i ) ; for ( type_2 i : var_2 ) var_1. method_3 ( i ) ; for ( type_2 i : var_2 ) i. update ( var_1 ) ; for ( type_2 i : var_2 ) if (! ( i. method_4 ( var_1 ) ) ) i. method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( java.io.inputstream source ) throws java.io.ioexception , type_2 { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; char [ ] var_2 = new char [ int_1 ] ; int length ; type_3 var_3 = new java.io.bufferedreader ( new type_4 ( source ) ) ; while ( ( length = var_3 . method_2 ( var_2 ) ) != ( - 1 ) ) { var_1 . append ( var_2 , 0 , length ) ; } java.lang.string var_4 = var_1 . tostring ( ) ; return method_1 ( var_4 ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.lang.exception { if ( ( var_2. length ) == ( var_3 ) ) { var_4. method_2 ( var_5 [ int_1 ], var_1, var_6, false, counter ) ; } else { var_4. method_2 ( var_5 [ int_1 ], var_1, var_6, true, ( ( var_2. length ) - 1 ) ) ; } }

************

************
tgt: public static double method_1 ( double value , int var_1 ) { type_1 var_4 = new type_1 ( value ) ; int var_5 = var_1 - ( ( var_4 . method_3 ( ) ) - ( var_4 . method_4 ( ) ) ) ; type_1 var_2 = var_4 . method_5 ( var_5 , var_6 ) ; return var_2 . method_6 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string name ) { type_2 var_1 = method_2 ( ). method_3 ( method_4 ( ) ) ; var_1. add ( type_3. method_5 ( string_1, name ) ) ; return ( ( type_1 ) ( var_1. method_6 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; for ( type_1 < type_2 > var_2 : var_3 ) { type_2 f = var_2 . get ( ) ; if ( ( f instanceof type_3 ) && ( f . method_3 ( ) ) ) { ( ( type_3 ) ( f ) ) . method_1 ( ) ; } } }
[0]: protected void method_1 ( ) { method_2 ( ) ; method_3 ( method_4 ( string_1 ) ) ; add ( new type_1 ( string_2, new type_2 < java.lang.string > ( this, string_1 ) ) ) ; add ( new type_3 ( string_3 ) ) ; add ( new type_4 ( string_4, this ) ) ; type_5 var_1 = new type_5 ( string_5, this. getclass ( ) ) ; add ( var_1 ) ; }

************

************
tgt: private static java.lang.stringbuffer method_1 ( java.util.list < type_1 > var_1 , java.lang.string var_2 ) { java.lang.stringbuffer var_4 = new java.lang.stringbuffer ( string_1 ) ; var_4 . append ( string_2 ) . append ( var_2 ) . append ( string_3 ) ; var_4 . append ( string_5 ) . append ( type_2 . method_2 ( var_1 ) ) . append ( string_6 ) ; return var_4 ; }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( method_3 ( ) ) ) ) ; if ( var_1. method_4 ( var_2 ) ) { var_1. method_5 ( var_2 ) ; } else { method_6 ( ) ; method_7 ( new android.content.intent ( this, method_8 ( ) ) ) ; method_9 ( 0, 0 ) ; } }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string path , java.lang.object var_2 ) { var_3 . commit ( ) ; type_1 event = new type_2 ( var_4 , var_5 , var_1 , path , null , var_2 , null , null , null , null , null , null ) ; var_4 . method_2 ( var_6 , event ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { double [ ] var_2 = var_3. method_2 ( var_1, var_4, var_5 ) ; type_3 var_6 = new type_3 ( ) ; var_6. method_3 ( var_7 ) ; return var_6. method_4 ( var_3. method_5 ( ), var_4, var_2 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , type_1 var_2 , type_2 var_3 ) { type_3 < type_1 > var_4 = type_4 . method_2 ( var_1 , var_2 . method_3 ( ) ) ; type_5 < type_1 > var_5 = var_6 . method_4 ( var_7 , var_8 , var_4 ) ; if ( ( ! ( var_5 . method_5 ( ) ) ) && ( ( var_6 . method_6 ( var_1 ) ) != null ) ) { var_3 . put ( var_8 , var_4 , var_2 , true ) ; } }
[0]: private type_1 method_1 ( final type_2 var_1 ) { type_1 var_2 = ( ( type_1 ) ( type_3. method_2 ( this ). method_3 ( var_3, var_4, false ) ) ) ; if ( method_4 ( ) ) { method_5 ( this, var_2, var_1, var_5, var_6, false ) ; } else { method_5 ( this, var_2, var_1, null, null, false ) ; } return var_2 ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { if ( ( view ) == null ) { view = var_1 . method_2 ( var_4 , null ) ; var_5 = ( ( type_4 ) ( method_3 ( ) . method_4 ( var_6 ) ) ) ; view . method_5 ( var_8 ) . method_6 ( new type_5 ( ) { public void method_7 ( android.view.view var_9 ) { method_8 ( ) ; } } ) ; } return view ; }
[0]: public boolean method_1 ( ) { this. var_1. method_3 ( method_2 ( ), method_4 ( ) ) ; if ( ( ( this. var_1. method_5 ( ) )!= null ) && ( ( this. var_1. method_5 ( ). method_6 ( ) ) == ( var_2 ) ) ) { return true ; } java.lang.system.out.println ( string_2 ) ; return false ; }

************

************
tgt: public boolean method_1 ( type_1 < type_2 > var_1 , type_2 var_2 ) { boolean var_3 ; if ( var_2 . equals ( var_4 ) ) { var_3 = type_3 . contains ( var_1 ) ; } else if ( type_4 . equals ( var_2 . method_2 ( ) ) ) { var_3 = ( type_5 . contains ( var_1 ) ) || ( type_6 . contains ( var_1 ) ) ; } else { var_3 = type_5 . contains ( var_1 ) ; } return var_3 ; }
[0]: public void replace ( int position, java.lang.object content ) { if ( position > ( nodes ) ) return ; type_1 replace = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { replace = replace. method_1 ( ) ; } replace. method_2 ( content ) ; }

************

************
tgt: public void method_1 ( android.content.context var_1 , type_1 < java.util.arraylist < type_2 > > data ) { java.lang.string var_2 = null ; if ( ( ( data != null ) & ( ( data . method_2 ( ) ) == ( var_3 ) ) ) & ( type_3 . method_3 ( data . getdata ( ) ) ) ) { var_2 = data . getdata ( ) . get ( 0 ) . method_4 ( ) ; } java.lang.string url = method_5 ( var_4 , var_2 ) ; method_6 ( url ) ; }
[0]: public type_1 < type_2 > method_1 ( int var_1, java.lang.integer var_2, java.lang.integer var_3, type_3 var_4, java.lang.string var_5 ) { return this. var_6. method_2 ( this. var_7. method_3 ( var_1 ), new type_4 ( type_5. name ( ), null ), new type_6 ( var_2, var_3, ( var_4!= null? var_4 : var_8 ), var_5 ) ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { if ( ( var_2 != null ) && ( var_2 . method_2 ( ) ) ) { var_3 . method_3 ( var_2 . method_4 ( ) , var_2 ) ; } } type_2 var_4 = var_5 . method_5 ( 0 ) ; ( ( type_3 ) ( var_4 ) ) . method_6 ( var_3 . method_7 ( ) ) ; }
[0]: private void method_1 ( final type_1 var_1, final type_2 var_2, final java.util.collection < type_1 > var_3, final java.util.collection < type_2 > var_4 ) { new java.lang.thread ( ( ) - > { final type_3 var_5 = var_6. method_2 ( var_7 class ) ; var_5. method_3 ( var_1 ) ; var_5. method_4 ( var_2 ) ; var_5. method_5 ( new java.util.arraylist ( var_3 ) ) ; var_5. method_6 ( new java.util.arraylist ( var_4 ) ) ; } ). start ( ) ; } }

************

************
tgt: private static java.lang.string method_1 ( ) { java.lang.string [ ] var_1 = var_2 . method_2 ( ) ; int count = var_2 . method_3 ( ) ; java.lang.stringbuffer var_3 = new java.lang.stringbuffer ( string_1 ) ; for ( java.lang.string var_4 : var_1 ) { var_3 . append ( ( var_4 + "\n" ) ) ; } var_3 . append ( ( string_2 + count ) ) ; return var_3 . tostring ( ) ; }
[0]: private void method_1 ( int var_1, int height ) { final int var_2 = var_1 / int_1 ; final int var_3 = ( var_4 )? ( var_5. method_2 ( ) ) + ( var_5. method_3 ( ) ) : height ; final int var_6 = ( ( int ) ( ( var_5. method_3 ( ) ) * float_1 ) ) ; var_7. method_4 ( ( var_2 - var_6 ), ( var_3 - var_6 ), ( var_2 + var_6 ), ( var_3 + var_6 ) ) ; }

************

************
tgt: public void method_1 ( long var_1 , type_1 var_2 , type_2 var_3 ) { try { type_1 var_4 = var_5 . method_1 ( var_1 , var_2 ) ; var_3 . method_2 ( var_4 ) ; } catch ( java.lang.throwable t ) { var_3 . method_3 ( ) ; } }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.io.ioexception, type_2 { var_3. method_2 ( ) ; type_3 var_4 ; var_4 = var_5. method_3 ( var_1 ) ; if ( null == var_4 ) { var_3. method_4 ( var_6 ) ; } var_4. execute ( var_3 ) ; assert method_5 ( var_4 ) ; var_7. method_6 ( var_3, var_2 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) { protected type_2 method_2 ( ) throws type_3 { return new type_2 ( this ) { protected void method_3 ( ) throws type_3 , java.io.ioexception { } } ; } } ; try { type_4 out = var_1 . method_4 ( ) ; type_5 . fail ( ) ; } catch ( type_3 var_2 ) { type_5 . assertthat ( var_2 . method_5 ( ) , method_6 ( string_1 ) ) ; } }
[0]: private void method_1 ( int var_1 ) { android.content.intent var_2 = new android.content.intent ( this, var_3 class ) ; type_1. method_2 ( java.lang.string. method_3 ( var_4 ) ) ; method_4 ( var_2 ) ; type_1. method_5 ( var_1 ) ; var_5 = true ; method_6 ( ) ; }

************

************
tgt: public synchronized void method_1 ( char c ) { var_1 . method_2 ( c ) ; java.lang.string var_2 = var_1 . getstring ( ) ; if ( var_2 != null ) { java.lang.long var_3 = var_4 . get ( var_2 ) ; if ( var_3 == null ) { var_3 = 1l ; } else { var_3 ++ ; } var_4 . put ( var_2 , var_3 ) ; } }
[0]: public void method_1 ( type_1 node, java.awt.color var_1 ) { if (! ( var_2. method_2 ( node ) ) ) var_2. put ( node, new java.util.arraylist < java.awt.color > ( ) ) ; var_2. get ( node ). add ( var_1 ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 ) { type_1 var_2 = var_3 . method_2 ( ) . method_3 ( ) ; try { var_3 . method_4 ( var_2 ) ; var_2 . method_5 ( var_1 ) ; var_3 . method_6 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { var_5 . error ( string_1 , var_4 ) ; var_3 . method_8 ( var_2 ) ; } finally { var_3 . method_9 ( var_2 ) ; } }
[0]: public void update ( ) { type_1 var_1 = var_2. method_1 ( ) ; var_3 = ( type_2. getint ( var_1, var_4, 1 ) ) == 1 ; var_5 = ( type_2. getint ( var_1, var_6, 1 ) ) == 1 ; var_7 = ( type_3. method_2 ( var_1, var_8, 1, var_9 ) ) == 1 ; }

************

************
tgt: public void method_1 ( ) { int j = 0 ; int temp = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { j = ( ( j + ( var_1 [ i ] ) ) + ( key [ ( i % ( key . length ) ) ] ) ) % int_1 ; temp = var_1 [ i ] ; var_1 [ i ] = var_1 [ j ] ; var_1 [ j ] = temp ; temp = 0 ; } }
[0]: private void method_1 ( ) { var_1. method_2 ( string_1 ) ; var_1. method_3 ( var_2. method_4 ( ), var_3. method_5 ( ) ) ; var_2. method_6 ( ). remove ( var_2. method_4 ( ) ) ; ( var_4 ) -- ; }

************

************
tgt: public int method_1 ( int x , int num ) { int count = 0 ; for ( int var_2 = 0 ; var_2 < int_1 ; var_2 ++ ) { if ( ( this . var_3 [ var_2 ] [ x ] . value ) == num ) count ++ ; } return count ; }
[0]: public java.lang.object method_1 ( type_1 var_1 ) { java.lang.string var_2 = string_1 ; if ( var_1. method_2 ( ) ) { target = method_3 ( ) ; var_1. method_4 ( ). method_5 ( var_1. getname ( ), c ) ; var_2 = var_2. method_6 ( ( ( java.lang.string ) ( var_1. method_7 ( ). method_8 ( this ) ) ) ) ; var_2 = var_2. method_6 ( method_9 ( var_1. getname ( ), target ) ) ; return var_2 ; } return var_1. getname ( ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; method_3 ( ) ; method_3 ( ) ; type_1 . method_4 ( ) . method_5 ( method_6 ( ) ) . method_7 ( string_1 ) . method_8 ( ) . get ( string_2 ) . method_9 ( ) . method_10 ( int_1 ) . method_11 ( string_3 , type_2 . method_12 ( int_2 ) ) ; }
[0]: public void update ( type_1 var_1 ) { for ( int i = 0 ; i < ( this. position ) ; i ++ ) { if ( this. var_2 [ i ]. equals ( var_1 ) ) { this. var_2 [ i ] = var_1 ; } } }

************

************
tgt: public type_1 method_1 ( boolean var_1 ) { final type_1 b = super . method_1 ( var_1 ) ; if ( var_2 ) { if ( ( var_3 ) == null ) { try { var_2 = false ; } catch ( java.lang.nullpointerexception var_4 ) { type_2 . method_3 ( var_5 , ( string_1 + b ) , var_4 ) ; } } } return b ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( method_2 ( ). equals ( var_2 ) ) { try { method_3 ( ) ; } catch ( type_2 var_3 ) { type_3. method_4 ( string_1, var_3 ) ; } } synchronized ( var_4 ) { if ( var_4. isempty ( ) ) { method_5 ( ) ; } return var_4. get ( var_1 ) ; } }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { if ( ! ( var_2 ) ) { var_3 . method_2 ( java.lang.string.format ( string_1 , var_4 , var_5 , var_6 ) ) ; var_2 = true ; } else { if ( ( var_1 . size ( ) ) > 0 ) { method_6 ( ) ; var_3 . method_2 ( java.lang.string . method_7 ( var_8 ) ) ; } } }
[0]: private java.util.properties method_1 ( ) { java.util.properties var_1 = new java.util.properties ( ) ; var_1. put ( string_1, var_2. method_2 ( var_3 ) ) ; var_1. put ( string_2, var_2. method_2 ( var_4 ) ) ; var_1. put ( string_3, var_2. method_2 ( var_5 ) ) ; var_1. put ( string_4, var_2. method_2 ( var_6 ) ) ; return var_1 ; }

************

************
tgt: public int method_1 ( ) { int var_1 = int_1 ; type_1 var_2 = type_1 . method_2 ( int_2 ) ; type_1 value = var_3 ; int sum = 0 ; value = var_2 . method_3 ( var_1 ) ; java.lang.string str = value . tostring ( ) ; for ( int i = 0 ; i < ( str . length ( ) ) ; i ++ ) sum += ( ( int ) ( ( str . method_4 ( i ) ) - char_1 ) ) ; return sum ; }
[0]: private void method_1 ( ) { type_1 var_1 = var_2 ; if ( ( var_3. method_2 ( ) ) == ( var_4 ) ) { var_1 = var_5 ; } else if ( ( var_3. getdata ( ) ) instanceof type_2 ) { var_1 = var_6 ; } var_7. method_3 ( var_1 ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { method_2 ( ) ; method_3 ( ) ; var_5 . method_7 ( var_6 . method_8 ( ) ) ; var_5 . method_5 ( ) ; var_2 . method_4 ( ) ; var_2 . method_5 ( var_3 , 0 , 0 ) ; var_2 . end ( ) ; }
[0]: public boolean method_1 ( int var_1, int var_2 ) { if ( ( ( ( var_1 < ( ( rows ) - int_1 ) ) && ( var_2 < ( ( var_3 ) - int_1 ) ) ) && ( var_1 >= 0 ) ) && ( var_2 >= 0 ) ) { return true ; } return false ; }

************

************
tgt: public static int method_1 ( java.lang.string format ) { try { int index = type_1 . method_2 ( format ) ; if ( index == ( - 1 ) ) { throw new type_2 ( ) ; } return index + 1 ; } catch ( java.lang.exception var_1 ) { throw new type_2 ( ) ; } }
[0]: public static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { return new type_2 ( ). method_2 ( var_2 class ). method_3 ( var_3. method_4 ( type_3. method_5 ( var_1 ). method_6 ( ). method_7 ( ) ) ). method_8 ( type_4. method_9 ( var_4 ) ). method_10 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 errors , type_3 var_2 , final type_4 var_3 ) { if ( errors . method_2 ( ) ) { return string_1 ; } var_4 . method_4 ( var_1 ) ; var_2 . method_5 ( string_2 , string_3 ) ; return string_4 + ( var_1 . method_6 ( ) ) ; }
[0]: public static void method_1 ( int number ) { var_1. method_2 ( ) ; if ( number > 1 ) { var_2. method_2 ( ) ; } if ( number > int_1 ) { var_3. method_2 ( ) ; } new java.lang.thread ( new type_1 ( ) { public void method_3 ( ) { try { java.lang.thread. method_4 ( int_2 ) ; } catch ( type_2 var_4 ) { } finally { type_3. method_5 ( ) ; } } } ). method_3 ( ) ; } }

************

************
tgt: public static void method_1 ( ) { for ( int var_1 = var_2 ; var_1 > 0 ; -- var_1 ) { for ( int i = 0 ; i < var_1 ; ++ i ) { type_1 . method_2 ( var_3 , string_1 , type_2 . method_3 ( new java.lang.integer ( i ) ) , type_2 . method_3 ( new java.lang.integer ( var_1 ) ) ) ; } } }
[0]: public void method_1 ( java.lang.string title, type_1 < type_2 [ ] > var_1 ) { if ( var_2 ) var_3. show ( ) ; java.util.map < java.lang.string, java.lang.string > var_4 = new java.util.hashmap < > ( ) ; var_4. put ( ""name"", title ) ; new type_3 ( var_1, var_5 ). execute ( new type_4 < type_2 [ ] > ( string_1, var_4, type_2 [ ]. class ) ) ; }

************

************
tgt: public static int method_1 ( java.util.date var_1 , java.util.date var_2 ) { long var_3 = ( var_1 . gettime ( ) ) - ( var_2 . gettime ( ) ) ; return ( ( int ) ( var_3 ) ) / ( ( ( int_1 * int_2 ) * int_2 ) * int_3 ) ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( var_1 ) ) + string_3 ) + ( var_2 ) ) + char_1 ) + string_4 ) + ( var_3 ) ) + char_1 ) + string_5 ) + ( var_4 ) ) + char_1 ) + string_6 ) + ( var_5 ) ) + char_1 ) + string_7 ) + ( var_6 ) ) + char_2 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_3 ( ) ; type_1 . method_5 ( ) . method_6 ( method_7 ( ) ) . method_8 ( string_1 ) . method_9 ( ) . get ( string_2 ) . method_10 ( ) . method_11 ( int_1 ) . method_12 ( string_3 , type_2 . method_13 ( int_2 ) ) ; }
[0]: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( var_2, type_2. method_3 ( ) ) ; var_1. method_2 ( var_3, type_2. method_4 ( ) ) ; var_1. method_2 ( var_4, java.lang.string.format ( string_1, type_2. method_5 ( ), type_2. method_6 ( ) ) ) ; var_1. method_2 ( var_5, type_2. method_7 ( ) ) ; return var_1 ; }

************

************
tgt: public byte [ ] method_1 ( ) throws java.io.ioexception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1 ) ; var_2 . method_2 ( this ) ; var_2 . method_3 ( ) ; var_2 . method_4 ( ) ; return var_1 . method_1 ( ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 var_3 ) { if ( ( var_4 ) == null ) { var_4 = new type_2 ( var_5, var_6, var_7 ) ; } boolean var_8 = false ; var_8 = var_4. method_1 ( var_1, var_2, var_3 ) ; var_6 = var_4. method_2 ( ) ; return var_8 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1 . method_2 ( ) ; type_2 var_2 = execute ( string_1 , new java.lang.object [ ] { var_1 } ) ; assertthat ( var_2 . method_3 ( ) , method_4 ( 0l ) ) ; type_2 var_3 = execute ( string_2 , new java.lang.object [ ] { string_3 } ) ; assertthat ( var_3 . method_3 ( ) , method_4 ( 0l ) ) ; }
[0]: private void method_1 ( java.util.arraylist < type_1 > var_1, type_2 var_2 ) { for ( type_1 var_3 : var_1 ) { type_3 var_4 = new type_3 ( ) ; type_4 var_5 = new type_4 ( var_6, var_7 ) ; var_5. method_2 ( var_8 ) ; var_4. add ( var_5 ) ; type_5 var_9 = new type_5 ( var_2. method_3 ( ), var_10 ) ; var_9. method_2 ( var_8 ) ; var_4. add ( var_9 ) ; var_3. method_4 ( var_4 ) ; var_3. show ( ) ; } }

************

************
tgt: void method_1 ( int var_1 , int status , int var_2 ) { if ( var_4 ) { type_1 . method_2 ( var_3 , ( ( ( ( ( string_2 + var_2 ) + string_3 ) + status ) + string_4 ) + var_1 ) ) ; } if ( status != 0 ) { } var_5 . method_3 ( ) ; }
[0]: public < type_1 > type_1 execute ( type_2 < type_1, type_3 > f ) throws java.io.ioexception, type_4 { type_5 data = new type_5 ( ) ; type_3 var_1 = var_2. method_1 ( data. method_2 ( ), data. method_3 ( ), data. method_4 ( ), type_6. method_5 ( data. method_6 ( ) ) ) ; type_1 result = f. method_7 ( var_1 ) ; var_1. method_8 ( ) ; return result ; }

************

************
tgt: public static void method_1 ( int id ) { var_1 . remove ( ( id - 1 ) ) ; for ( int i = id - 1 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_2 ( ( i + 1 ) ) ; } }
[0]: public static type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = null ; if ( var_1 instanceof type_2 ) { var_2 = ( ( type_2 ) ( var_1 ) ). method_2 ( ) ; } else var_2 = var_1 ; if (! ( var_2 instanceof type_3 ) ) return null ; return ( ( type_3 ) ( var_2 ) ). method_1 ( ) ; }

************

************
tgt: public double method_1 ( double var_1 ) { double var_2 = type_1 . method_2 ( ( - var_1 ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + float_1 ; p *= java.lang.math.random ( ) ; } while ( p > var_2 ) ; double var_3 = 1 / ( k - float_2 ) ; var_3 = method_3 ( ( var_3 * int_1 ) ) ; return var_3 ; }
[0]: private static type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 ; if (! ( var_1. tolowercase ( ). equals ( string_1 ) ) ) { java.lang.system.out.print ( string_2 ) ; java.lang.string var_3 = var_4. method_2 ( ) ; try { var_2 = var_5. method_3 ( var_1, var_3 ) ; } catch ( java.lang.nullpointerexception var_6 ) { java.lang.system.out.println ( string_3 ) ; return null ; } return var_2 ; } else return var_7 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int length = java.lang.integer.parseint ( args [ 0 ] ) ; int var_1 = java.lang.integer.parseint ( args [ 1 ] ) ; type_1 var_2 = new type_1 ( length , var_1 ) ; java.lang.string output = java.lang.string.format ( string_1 , var_2 . length , var_3 , var_2 . method_1 ( ) , var_2 . method_2 ( ) ) ; java.lang.system.out.println ( output ) ; }
[0]: public void method_1 ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( event. method_2 ( ) ) ) ; if ( var_1!= null ) { var_1. method_3 ( ( string_1 + ( var_2. method_4 ( ) ) ) ) ; var_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 = new java.io.bufferedreader ( new type_1 ( var_2 . method_2 ( ) ) ) ; while ( ( ! ( var_3 ) ) || ( var_1 . method_3 ( ) ) ) { java.lang.string line = var_1 . method_4 ( ) ; if ( line != null ) { method_5 ( line ) ; } } var_1 . method_7 ( ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_8 ( var_6 ) ; } }
[0]: public static java.io.inputstream method_1 ( android.content.context context, java.lang.string filename, type_1 var_1, java.lang.string... var_2 ) { type_1 var_3 = type_2. method_2 ( var_1, var_2 ) ; if ( var_3 == null ) return null ; type_1 file = var_3. method_3 ( filename ) ; return type_2. method_1 ( context, file. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = new type_3 ( ) ; var_3 . method_2 ( var_4 ) ; var_2 . method_3 ( var_3 ) ; var_1 . method_4 ( var_2 ) ; assertequals ( var_4 , var_1 . method_5 ( ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2 ) ; if ( ( var_1. method_3 ( ). getid ( ) )!= null ) { var_1. method_4 ( var_3. method_5 ( var_1. method_3 ( ). getid ( ) ) ) ; } else { var_1. method_4 ( null ) ; } }

************

************
tgt: protected java.util.list < java.lang.string > method_1 ( type_1 output ) { java.util.list < type_2 > [ ] var_1 = method_2 ( output ) ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( int var_3 = 0 ; var_3 < ( output . method_3 ( ) ) ; var_3 ++ ) { java.util.list < type_2 > var_4 = var_1 [ var_3 ] ; var_2 . method_4 ( method_5 ( var_4 ) ) ; } return var_2 ; }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ) )!= ( var_2 ) ) { var_3 = var_4. method_3 ( ) ; var_5 = new type_1 ( var_3, var_6, var_7 ) ; if ( ( var_8 ) == ( var_9 ) ) type_2. method_4 ( var_3, var_10 ) ; else if ( ( var_8 ) == ( var_11 ) ) type_2. method_4 ( var_3, var_12 ) ; java.util.collections.sort ( var_3, var_13 ) ; var_14. method_5 ( var_5 ) ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string fieldname ) { java.lang.string result = string_1 ; if ( var_1 != null ) { if ( var_1 . method_2 ( ) . method_3 ( fieldname ) ) { result = var_1 . method_2 ( ) . get ( fieldname ) . gettype ( ) . method_4 ( ) ; } } return result ; }
[0]: public type_1 [ ] method_1 ( ) { return new type_1 [ ] { type_2. method_2 ( type_2. method_3 ( type_2. method_4 ( type_2. method_5 ( type_3. method_6 ( var_1 ) ) ) ), var_2. method_7 ( string_1 ) ), type_2. method_8 ( type_2. method_4 ( type_2. method_9 ( type_3. method_6 ( b ) ) ) ) } ; }

************

************
tgt: private static java.lang.string method_1 ( type_1 event ) { return ( ( ( ( ( ( string_1 + ( event . method_2 ( ) ) ) + string_2 ) + ( ( ( type_2 ) ( event ) ) . method_3 ( ) ) ) + string_3 ) + ( event . getid ( ) ) ) + ( ( ( type_2 ) ( event ) ) . getname ( ) ) ) + "\n" ; }
[0]: private static void method_1 ( type_1 var_1, java.lang.string url ) throws type_2 { type_3 var_2 = new type_3 ( new type_4 ( ), url ) ; java.lang.string var_3 = type_5. method_2 ( url ) ; type_6 var_4 = new type_6 ( var_2, var_1, var_3 ) ; var_5. method_3 ( ( string_1 + var_4 ) ) ; java.lang.thread var_6 = new java.lang.thread ( var_4, ( string_2 + var_3 ) ) ; var_6. start ( ) ; var_5. method_3 ( ( string_3 + var_6 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( ) ; type_2 var_2 = method_3 ( ) ; var_3 = ( ( type_3 ) ( var_2 . method_4 ( string_1 ) ) ) ; if ( ( var_3 ) == null ) { var_3 = new type_3 ( ) ; var_3 . method_5 ( this , 0 ) ; var_2 . method_6 ( ) . add ( var_3 , string_1 ) . commit ( ) ; } }
[0]: public void method_1 ( android.view.view var_1, boolean var_2 ) { if (! var_2 ) { if ( ( ( var_3 )!= null ) && ( ( var_3. length ( ) ) > int_1 ) ) { var_4. settext ( method_2 ( method_3 ( ) ) ) ; if ( ( var_5 ) == ( var_6 ) ) { var_7. method_4 ( method_5 ( ) ) ; } } } }

************

************
tgt: private type_1 < ? > method_1 ( type_2 var_1 , type_3 var_2 ) { type_4 < type_5 > var_3 = var_4 . method_2 ( var_1 ) ; if ( var_3 . method_3 ( ) ) { return method_5 ( var_3 . get ( ) ) ; } else { return type_1 . status ( var_8 ) . build ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { for ( type_1 var_1 : var_2 ) { if ( var_1. method_2 ( ). tostring ( ). contains ( var_3 ) ) { java.util.list < type_2 > var_4 = var_1. method_3 ( ) ; assertnotnull ( var_4 ) ; method_4 ( var_4. isempty ( ) ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( ) ; var_4 . method_3 ( var_3 ) ; var_2 . add ( var_4 . method_4 ( ) ) ; var_2 . show ( ) ; var_2 . method_5 ( ) ; var_2 . method_6 ( ) . method_7 ( ) . method_8 ( int_1 ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; if ( ( var_2 )!= null ) try { if ( ( var_3 )!= null ) var_3. method_3 ( var_2 ) ; } catch ( type_2 var_4 ) { var_4. method_4 ( ) ; } if ( ( var_3 )!= null ) var_3. method_5 ( ) ; var_5. method_6 ( ) ; var_5. method_7 ( ) ; super. method_1 ( ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.class var_1 , type_2 method ) { type_1 [ ] var_2 = type_3 . method_2 ( var_1 ) ; type_1 field = null ; for ( type_1 f : var_2 ) if ( ( f . method_3 ( var_3 class ) ) == null ) if ( type_3 . method_4 ( f . getname ( ) ) . equals ( method . getname ( ) ) ) field = f ; return field ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = this. var_2. method_2 ( ) ; type_2. method_3 ( this. var_3. method_4 ( var_1 ) ). method_5 ( type_3. method_6 ( int_1 ) ) ; this. var_4. method_7 ( type_4. get ( string_1 ) ). method_8 ( type_5. method_9 ( ) ). method_10 ( var_5 ) ; type_2. method_11 ( this. var_3 ). method_4 ( type_6. method_12 ( var_6 class ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = var_3 ; var_5 = new type_2 ( this ) ; var_5 . method_3 ( var_6 ) ; method_2 ( var_5 ) ; var_5 . method_4 ( false ) ; var_7 = var_5 . method_5 ( ) ; }
[0]: private static java.util.collection < java.lang.string > method_1 ( ) { java.util.collection < java.lang.string > var_1 = var_2. method_2 ( string_1, java.util.arrays.aslist ( var_3 ) ) ; if ( ( var_1 == null ) || ( ( var_1. size ( ) ) == 0 ) ) { var_1 = java.util.arrays.aslist ( var_3 ) ; } return var_1 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { return false ; } type_2 . method_3 ( var_2 , ( string_1 + ( var_3 ) ) ) ; var_3 = var_1 . method_4 ( ) ; var_4 . method_5 ( var_1 ) ; return ( ( var_4 . method_6 ( ) ) != null ) || ( super . method_1 ( var_1 ) ) ; }
[0]: private void method_1 ( type_1 type_2, type_3 var_1 ) { java.util.list var_2 = new java.util.arraylist ( type_2. method_2 ( ) ) ; int var_3 = int_1 ; var_1. method_3 ( string_1, ( ( var_2. size ( ) ) > var_3? var_2. method_4 ( 0, var_3 ) : var_2. method_4 ( 0, var_2. size ( ) ) ) ) ; var_1. method_3 ( string_2, true ) ; }

************

************
tgt: public static < type_1 > boolean method_1 ( final type_2 < type_1 > source , final int var_1 , final int end , type_3 < type_1 > var_2 ) { final java.util.iterator < type_1 > var_3 = method_2 ( source , var_1 ) ; for ( int i = var_1 ; i != end ; ++ i ) { assert var_3 . method_3 ( ) ; if ( var_2 . method_4 ( var_3 . method_5 ( ) ) ) { return false ; } } return true ; }
[0]: private void method_1 ( ) { boolean var_1 = false ; for ( byte b = this. var_2. getvalue ( ) ; b > 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) var_1 =! var_1 ; this. var_3. method_2 ( var_1, 0 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { int var_3 = var_4 . method_2 ( ) ; this . var_5 = var_3 + 1 ; this . var_7 . settext ( type_2 . method_3 ( ( ( ( string_1 + ( var_8 . getstring ( var_6 ) ) ) + string_2 ) + ( var_9 [ var_3 ] ) ) ) ) ; }
[0]: public boolean method_1 ( java.util.hashset < java.lang.string > var_1 ) { if ( var_1!= null ) { if ( var_1. isempty ( ) ) return true ; for ( java.lang.string str : var_1 ) { if ( this. label. method_2 ( str ) ) return true ; } return false ; } else { return true ; } } }

************

************
tgt: public void method_1 ( int data ) { if ( ( size ) == 0 ) { var_1 = new type_1 ( data ) ; var_2 = var_3 ; var_3 = var_1 ; } else { type_1 var_4 = new type_1 ( data ) ; var_5 = var_1 ; var_1 = var_4 ; } ++ ( size ) ; }
[0]: private int method_1 ( int var_1 ) { int var_2 = 0 ; boolean var_3 = false ; do { var_2 = var_1 + 1 ; var_4 = ( var_5 )!= ( var_6 ) ; if ( var_4 ) { var_3 = var_7 [ var_5 ]. var_8 ; } else { return - 1 ; } } while (! var_3 ) ; return var_2 ; }

************

************
tgt: public static void method_1 ( ) { java.lang.string var_1 = type_1 . method_2 ( string_1 , string_2 ) ; type_2 . method_1 ( var_1 ) ; if ( ( ! ( type_2 . method_3 ( ) . method_4 ( ) ) ) || ( ! ( type_2 . method_3 ( ) . method_5 ( ) ) ) ) { type_3 . fail ( ( string_3 + var_1 ) ) ; } }
[0]: public type_1 method_1 ( type_1... var_1 ) { int var_2 = var_3 ; type_1 var_4 = null ; for ( type_1 var_5 : var_1 ) { if (! ( var_6. equals ( var_7 ) ) ) { continue ; } if ( ( var_8 ) <= var_2 ) { continue ; } if ( var_9. method_2 ( var_10 ) ) { continue ; } var_4 = var_5 ; } return var_4 ; } return null ; }

************

************
tgt: public void method_1 ( type_1 node ) { int var_1 = node . method_2 ( ) ; var_2 . get ( ( var_1 - 1 ) ) . put ( node . method_3 ( ) , node ) ; if ( ! ( var_2 . get ( ( var_1 - 1 ) ) . method_4 ( node . method_3 ( ) ) ) ) { java.lang.system.out.println ( string_1 ) ; } else { } }
[0]: type_1 method_1 ( type_1 var_1 ) { if ( ( var_1 == null ) || ( (! ( this. method_2 ( ) ) ) && ( var_1. method_2 ( ) ) ) ) { return this ; } else { type_1 result = type_1. method_3 ( this, var_1 ) ; if ( ( this. var_2 ) && (! ( result. method_2 ( ) ) ) ) { result = result. method_4 ( ) ; } return result ; } } }

************

************
tgt: private boolean method_1 ( java.util.list < type_3 > line , type_4 var_1 ) { while ( ( line . size ( ) ) > 1 ) { type_3 var_2 = line . get ( 0 ) ; type_3 var_3 = line . get ( 1 ) ; if ( ! ( method_2 ( var_2 , var_3 , var_1 ) ) ) return false ; line . remove ( var_3 ) ; } return true ; }
[0]: public void method_1 ( type_1 var_1, type_2 value, type_3 info ) { int var_2 = ( var_3 ) + ( var_4. method_2 ( var_1 ) ) ; if ( var_2 < 0 ) throw new type_4 ( ( ( ( string_1 + ( var_1. name ) ) + string_2 ) + ( var_4 ) ) ) ; data. method_3 ( var_2, value, info ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( false ) ; if ( ( var_2 . getconfig ( ) . method_3 ( ) ) == ( var_3 ) ) { var_4 = var_5 ; var_2 . method_4 ( false ) ; } else { var_2 . method_4 ( true ) ; } var_6 = true ; var_2 . method_5 ( ) ; }
[0]: public void method_1 ( long var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4, java.lang.string status, java.lang.string var_5 ) { method_2 ( var_1, var_2, var_3 ). method_3 ( type_1. response ( ). method_4 ( var_6 ). method_5 ( var_7, var_8 ). method_6 ( method_7 ( var_4, var_1, status, var_5 ) ) ) ; }

************

************
tgt: void method_1 ( int [ ] array ) { for ( int i = 0 ; i < ( array . length ) ; i ++ ) { java.lang.system.out.print ( array [ i ] ) ; if ( i != ( ( array . length ) - 1 ) ) { java.lang.system.out.print ( string_1 ) ; } } }
[0]: protected java.util.list < java.lang.string > method_1 ( java.lang.string query ) { int index = 0 ; final int var_1 = query. length ( ) ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; while ( ( index + ( var_3 ) ) < var_1 ) { var_2. add ( query. substring ( index, ( index + ( var_3 ) ) ) ) ; index += var_4 ; } return var_2 ; }

************

************
tgt: public void start ( ) { if ( ! ( var_1 ) ) { if ( ! ( ( ( method_1 ( ) . getvalue ( ) ) == null ) && ( ( method_2 ( ) . getvalue ( ) ) == null ) ) ) { method_3 ( null ) ; } } }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = var_3. gettext ( ). tostring ( ) ; intent = new android.content.intent ( var_4, var_5 class ) ; intent. method_2 ( string_1, var_2 ) ; intent. method_2 ( string_2, filename. gettext ( ) ) ; java.lang.thread var_6 = new java.lang.thread ( new type_1 ( ) { public void method_3 ( ) { var_4. method_4 ( intent ) ; } } ) ; var_6. start ( ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { java.lang.integer type_2 = new java.lang.integer ( var_1 . method_2 ( ) . split ( string_1 ) [ 1 ] . substring ( 1 ) ) ; java.lang.integer var_3 = new java.lang.integer ( var_2 . method_2 ( ) . split ( string_1 ) [ 1 ] . substring ( 1 ) ) ; return type_2 . compareto ( var_3 ) ; }
[0]: public boolean equals ( final java.lang.object var_1 ) { if ( var_1 == ( this ) ) return true ; if (! ( super. equals ( var_1 ) ) ) return false ; final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( type_2. equals ( var_3, var_4 ) ) && ( type_2. equals ( var_5, var_6 ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { var_2 . method_2 ( true ) ; for ( type_1 var_3 : var_1 ) { if ( var_2 != var_3 ) { if ( method_3 ( var_2 , var_3 ) ) method_4 ( var_2 , var_3 ) ; } } } return var_1 ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { java.lang.string path = type_3. method_2 ( var_1. method_3 ( ) ). method_4 ( ) ; java.lang.string [ ] var_2 = path. split ( string_1 ) ; java.lang.string var_3 = var_2 [ 1 ] ; java.lang.string query = type_3. method_2 ( var_1. method_3 ( ) ). method_5 ( ) ; java.util.map < java.lang.string, java.lang.object > var_4 = type_4. method_6 ( query ) ; return method_7 ( var_3, var_4, true ) ; }

************

************
tgt: public void method_1 ( ) { int var_1 = var_2 ; int var_3 = var_2 ; if ( ( var_4 ) == 0 ) { var_1 = var_5 ; } if ( ( var_4 ) == ( ( var_6 . method_2 ( ) . size ( ) ) - 1 ) ) { var_3 = var_5 ; } var_7 . method_3 ( var_1 ) ; var_8 . method_3 ( var_3 ) ; var_9 . method_4 ( ) ; }
[0]: int method_1 ( ) { type_1. method_2 ( ( ( null == ( var_1 ) ) || ( ( var_1 ) > 0 ) ), string_1 ) ; java.lang.integer value = var_1 ; if ( null == value ) { value = type_2. method_3 ( ). method_4 ( ) ; } return value ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 == null ) { java.lang.system.out.println ( string_1 ) ; type_1 var_3 = new type_1 ( string_2 ) ; var_3 . put ( string_3 , type_3 . method_2 ( ) ) ; var_3 . put ( string_4 , type_4 . method_3 ( ) ) ; method_4 ( var_3 ) ; type_3 . method_5 ( ) ; } else { } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; final int var_2 = - 1 ; int result = var_1. method_2 ( ) ; type_2. assertequals ( var_2, result ) ; int var_3 = int_1 ; var_1. method_3 ( var_3 ) ; int var_4 = int_2 ; var_1. method_3 ( var_4 ) ; result = var_1. method_2 ( ) ; type_2. assertequals ( var_3, result ) ; result = var_1. method_2 ( ) ; type_2. assertequals ( var_3, result ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { var_2 = var_1 ; java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; int var_4 = ( var_3 . get ( var_5 ) ) - 1 ; if ( var_2 . substring ( var_4 , ( var_4 + 1 ) ) . equals ( string_1 ) ) { var_6 = true ; } else { var_6 = false ; } }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { type_2. i ( var_3, string_1 ) ; var_4. method_1 ( var_1, var_2 ) ; type_3 var_5 = var_1. method_2 ( type_4. method_3 ( var_6 ) ) ; type_2. i ( var_3, ( string_2 + ( var_5. method_4 ( ) ) ) ) ; var_5. setvalue ( var_7 ) ; var_4. method_5 ( var_5 ) ; }

************

************
tgt: public byte [ ] method_1 ( type_1 var_1 , java.lang.string classname , java.lang.class < ? > var_2 , type_2 var_3 , byte [ ] var_4 ) throws type_3 { try { return ( classname != null ) && ( classname . equals ( var_5 ) ) ? method_2 ( classname , var_2 , var_4 ) : var_4 ; } catch ( java.lang.throwable var_6 ) { var_6 . method_3 ( ) ; return var_4 ; } }
[0]: public void method_1 ( ) { var_1 = new type_1 ( true, null, var_2, var_3 ) ; method_2 ( var_4. method_3 ( var_3 ) ). method_4 ( 1 ) ; method_2 ( var_5. method_3 ( var_3 ) ). method_4 ( int_1 ) ; int var_6 = var_1. method_5 ( var_4, var_5 ) ; type_3. assertthat ( var_6, type_4. method_6 ( 0 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( method_2 ( var_1 ) ) { if ( type_1 . method_3 ( var_1 ) ) { var_2 . method_4 ( string_1 ) ; method_5 ( ) ; } else { var_2 . method_6 ( string_1 ) ; type_2 . method_7 ( var_3 , string_1 ) ; } } else { var_2 . method_6 ( string_2 ) ; type_2 . method_7 ( var_3 , string_2 ) ; } }
[0]: private void method_1 ( type_1 writer, java.lang.string classname, java.lang.class var_1 ) throws java.io.ioexception { final java.lang.string var_2 = type_2. method_2 ( classname ) ; if (! ( var_2. isempty ( ) ) ) { writer. append ( string_1 ). append ( var_2 ). append ( string_2 ). append ( var_3 ) ; } else { writer. append ( string_2 ). append ( var_3 ) ; } }

************

************
tgt: private boolean method_1 ( final type_1 var_1 ) { final long var_2 = method_2 ( var_1 ) ; if ( var_2 == ( - 1l ) ) { return false ; } final type_2 var_3 = var_1 . method_3 ( ) . method_4 ( ) ; final float var_4 = type_3 . method_5 ( var_3 . method_6 ( ) ) ; final long var_5 = method_7 ( ) ; return var_4 < ( ( ( 1.0f * ( var_6 ) ) * var_2 ) / var_5 ) ; }
[0]: private void method_1 ( type_1 response ) throws java.io.ioexception { response. method_2 ( ) ; java.lang.string var_1 = ( ( java.lang.string ) ( method_3 ( response ) ) ) ; response. add ( var_1 ) ; if ( method_4 ( var_1 ) ) { method_5 ( response ) ; } else { java.lang.object token ; while ( ( token = method_3 ( response ) )!= null ) { if (! ( token instanceof type_2 ) ) { response. add ( token ) ; } } } var_2 = true ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { var_2 . info ( string_1 ) ; var_2 . info ( ( string_2 + ( var_3 ) ) ) ; type_2 . method_2 ( string_3 , java.lang.string . method_3 ( var_4 ) ) ; var_5 = new type_3 ( ) ; var_5 . method_4 ( ) . to ( type_4 . method_5 ( string_4 ) ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( ( ( var_2 ) + string_1 ) ) ; method_2 ( var_1. method_3 ( ), var_1. method_4 ( string_2, method_5 ( var_3 class, var_3 class ), method_6 ( 1, int_1 ) ), var_1. method_4 ( string_2, method_5 ( var_3 class, var_3 class ), method_6 ( int_2, int_3 ) ) ) ; java.lang.string var_4 = string_3 ; method_7 ( method_8 ( var_4 ), new type_2 ( var_4 ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { int var_1 = 0 ; type_1 var_2 = method_2 ( ) ; if ( ( ( var_3 ) != null ) && ( var_2 != null ) ) { while ( ( var_2 . equals ( var_3 ) ) && ( var_1 < ( var_4 ) ) ) { type_2 . method_3 ( string_1 ) ; var_2 = method_2 ( ) ; var_1 ++ ; } } return var_2 ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if (! ( super. equals ( var_1 ) ) ) { return false ; } if (! ( var_1 instanceof type_1 ) ) { return false ; } type_1 value = ( ( type_1 ) ( var_1 ) ) ; if ( var_2 ) { if ( this. var_3. equals ( var_4 ) ) { return true ; } } return true ; } }

************

************
tgt: public static int method_1 ( int var_1 , int var_2 , int var_3 ) { int var_4 = 0 ; java.lang.double var_5 = 0.0 ; for ( int i = var_2 ; i < var_1 ; i ++ ) { if ( ( var_6 . get ( var_3 ) . get ( i ) ) > var_5 ) { var_5 = var_6 . get ( var_3 ) . get ( i ) ; var_4 = i ; } } return var_4 ; }
[0]: protected type_1 method_1 ( java.lang.throwable var_1 ) { type_2 var_2 = type_3. method_2 ( var_1 ) ; if ( var_2. method_3 ( ) ) { type_4. error ( string_1, var_1 ) ; } else { type_4. error ( string_2, var_1. method_5 ( ) ) ; } return method_6 ( var_2 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.stringbuffer var_1 ) { if ( var_1 == null ) return method_2 ( ) ; int var_2 = var_1 . length ( ) ; method_3 ( ( ( count ) + var_2 ) ) ; type_2 . method_4 ( value , 0 , value , var_2 , count ) ; var_1 . method_5 ( 0 , var_2 , value , 0 ) ; count += var_2 ; return this ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { method_2 ( var_1 ) ; method_3 ( ) ; method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( var_1 ) ; method_9 ( var_1 ) ; method_10 ( var_1 ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { method_2 ( var_1 , var_2 ) ; type_2 . info ( ( ( ( string_1 + ( method_3 ( ) ) ) + string_2 ) + ( var_1 . tostring ( ) ) ) ) ; if ( var_2 != null ) { type_2 . method_4 ( var_3 , var_2 . method_5 ( ) . tostring ( ) , getactivity ( ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; type_2. method_4 ( this, string_1, string_2 ) ; type_3. method_5 ( method_6 ( ) ) ; var_3 = ( ( type_4 ) ( method_7 ( var_4 ) ) ) ; }

************

************
tgt: protected java.lang.string method_1 ( final java.lang.string var_1 , final java.lang.string context ) { if ( var_2 ) { if ( ( string_1 . contains ( var_1 ) ) || ( string_2 . contains ( var_1 ) ) ) { return ( ( string_3 + ( var_3 ) ) + string_4 ) + context ; } return ( ( string_3 + ( var_3 ) ) + string_5 ) + context ; } return ( string_3 + var_1 ) + context ; }
[0]: public boolean method_1 ( type_1 var_1, int var_2, int var_3 ) { type_2. method_2 ( var_4, ( ( ( ( string_1 + string_2 ) + var_2 ) + string_3 ) + var_3 ) ) ; type_3. method_3 ( this, ( ( ( string_4 + var_2 ) + string_3 ) + var_3 ), var_5 ). show ( ) ; method_4 ( ) ; return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( null != var_1 ) && ( null != var_2 ) ) { var_3 = method_2 ( ) . method_3 ( ) ; var_3 . method_4 ( var_1 ) . method_4 ( var_2 ) ; var_3 . commit ( ) ; } }
[0]: public java.util.calendar method_1 ( java.util.calendar var_1 ) { java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2. method_2 ( var_1. gettime ( ) ) ; if ( ( var_2. get ( var_3 ) ) >= ( var_4 ) ) { var_2. add ( var_5, 1 ) ; } var_2. set ( var_3, var_6 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = method_2 ( var_2 ) ; if ( var_3 == null ) return ; new type_2 ( ) . method_4 ( ( string_1 + ( var_3 . getid ( ) ) ) ) ; new type_3 ( ) . method_4 ( ( string_1 + ( var_3 . getid ( ) ) ) ) ; var_3 . delete ( ) ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( ( var_1 ) == null ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; method_3 ( var_1 ) ; type_2 var_3 = method_4 ( ) ; if ( var_3!= null ) { var_3. method_5 ( var_4 ) ; var_3. method_6 ( var_5 ) ; var_3. method_7 ( true ) ; } } method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; } if ( ( var_2 ) != null ) { var_2 . method_3 ( ) ; } try { if ( ( var_3 ) != null ) { method_4 ( var_4 ) ; } if ( ( var_5 ) != null ) { method_4 ( var_6 ) ; } } catch ( java.lang.exception var_7 ) { } }
[0]: public static java.lang.string method_1 ( java.lang.string url, java.lang.string field, type_1 value ) { if ( null == value ) { return url ; } return url. contains ( string_1 )? ( ( string_2 + field ) + string_3 ) + value : ( ( string_1 + field ) + string_3 ) + value ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { java.lang.string path = type_3 . method_2 ( var_1 . method_3 ( ) ) . method_4 ( ) ; java.lang.string [ ] var_2 = path . split ( string_1 ) ; java.lang.string var_3 = var_2 [ 0 ] ; java.lang.string query = type_3 . method_2 ( var_1 . method_3 ( ) ) . method_5 ( ) ; java.lang.string [ ] var_4 = type_4 . method_6 ( query ) ; return method_7 ( var_3 , var_4 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { for ( type_1 var_2 : var_3 ) var_2. method_2 ( ). method_3 ( var_4, var_2, ( ( ( this. getname ( ) ) + string_1 ) + ( this. method_4 ( ) ) ) ) ; this. var_1 = var_1 ; }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.string var_3 = method_3 ( method_2 ( ) ) ; java.lang.string var_5 = method_3 ( method_4 ( ) ) ; java.lang.string var_7 = method_3 ( method_5 ( ) ) ; var_1 = method_6 ( var_3 , var_5 , var_7 ) ; return var_1 ; }
[0]: public static type_1 method_1 ( java.lang.string query ) { type_2 var_1 = var_2. method_2 ( var_3, var_4 ) ; type_3 var_5 = new type_3 ( string_1, string_2, new type_4 ( string_3, int_1 ), new type_4 ( string_3, int_2 ) ) ; return var_6. method_3 ( var_5, var_1, query, type_5. method_4 ( ) ) ; }

************

************
tgt: public synchronized void fail ( java.lang.throwable error ) { if ( ( var_2 ) == 0 ) var_2 = int_1 ; if ( ( var_4 ) == 0 ) var_4 = int_1 ; method_1 ( method_2 ( var_2 , var_4 ) ) ; ( ( type_1 < type_2 > ) ( state ) ) . fail ( error ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. i ( string_1 ) ; var_2 = var_1 ; this. var_3 = false ; type_3. method_2 ( ). method_3 ( ). method_4 ( string_2, string_3, java.lang.long. method_5 ( ( var_4? 1l : int_1 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 item = method_2 ( ) ; type_2 . method_3 ( null ) . method_4 ( var_1 ) . method_5 ( type_2 . method_6 ( ) , type_2 . method_7 ( item . method_8 ( ) ) ) ; var_1 . method_9 ( item . method_8 ( ) ) ; type_2 . method_10 ( var_1 , type_2 . method_11 ( 1 ) ) . method_5 ( type_2 . method_7 ( 0l ) , type_2 . method_7 ( item . method_8 ( ) ) ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string start ) { for ( int i = 0 ; i < int_1 ; i ++ ) { start = type_1. method_2 ( int_2, start ) ; start = type_1. method_3 ( start, int_2 ) ; } return start ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 . i ( var_2 , string_1 ) ; if ( method_2 ( ) ) { type_2 . method_3 ( this , string_2 , var_3 ) . show ( ) ; android.content.intent i = new android.content.intent ( method_4 ( ) , var_4 class ) ; method_5 ( i ) ; method_6 ( ) ; } }
[0]: public static boolean method_1 ( java.lang.string var_1 ) { for ( java.lang.string var_2 : var_3 ) { java.io.file path = new java.io.file ( var_1, var_2 ). method_2 ( ) ; if (! ( path. method_3 ( ) ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( int var_1 ) { var_2 . get ( var_1 ) . method_3 ( false ) ; for ( int i = var_1 + 1 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( var_2 . get ( i ) . method_2 ( ) ) var_2 . get ( i ) . method_3 ( false ) ; else break ; } }
[0]: public synchronized void method_1 ( final long var_1 ) { var_2. method_2 ( string_1, var_1 ) ; try { var_3. method_3 ( var_4, var_1 ) ; } catch ( type_1 var_5 ) { throw new type_2 ( ( string_2 + ( ( string_3 + string_4 ) + string_5 ) ), var_5 ) ; } }

************

************
tgt: public type_1 method_1 ( int index ) { if ( ( ( var_1 . size ( ) ) < 1 ) || ( method_2 ( index ) ) ) { return null ; } type_1 var_2 = var_1 . remove ( index ) ; var_2 . method_3 ( ) ; return var_2 ; }
[0]: public static type_1 method_1 ( java.lang.string type, java.lang.string var_1, boolean var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( type ) ; var_3. method_3 ( var_2 ) ; var_3. method_4 ( false ) ; var_3. method_5 ( type_2. method_1 ( var_1, true ) ) ; return var_3 ; }

************

************
tgt: public void method_1 ( java.lang.string line ) { type_1 . method_2 ( string_1 , line ) ; if ( line . trim ( ) . isempty ( ) ) { return ; } java.util.regex.matcher var_1 = type_2 . method_3 ( line ) ; while ( var_1 . method_4 ( ) ) { type_3 var_2 = method_5 ( var_1 ) ; var_3 . method_6 ( var_2 ) ; return ; } }
[0]: public type_1 method_1 ( ) throws java.io.ioexception, type_2, type_3 { type_4 var_1 = new type_4 ( ) ; var_1. method_2 ( true ) ; var_1. method_3 ( false ) ; type_5 var_2 = new type_5 ( ) ; var_2. method_4 ( var_1 ) ; var_2. method_5 ( new type_6 ( ) ) ; var_2. method_6 ( method_7 ( ) ) ; var_2. method_8 ( string_1 ) ; var_2. method_9 ( method_10 ( ) ) ; var_2. method_11 ( ) ; return var_2. method_12 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { if ( ( var_3 ) == null ) { return ; } if ( var_2 ) { var_3 . method_2 ( java.lang.integer.parseint ( var_4 . gettext ( ) . tostring ( ) ) ) ; } else { var_3 . method_2 ( 0 ) ; } if ( var_5 . method_3 ( ) ) { type_2 . method_4 ( string_1 , string_2 ) ; var_5 . method_5 ( ) ; } }
[0]: public int method_1 ( double x, type_1 var_1 ) { var_2. setvalue ( x ) ; int var_3 = var_1. method_2 ( ) ; int var_4 = var_1. method_3 ( ) ; return ( var_4 + ( var_2. method_4 ( var_5, var_6, ( ( var_3 - ( int_1 * var_4 ) ) - ( var_7 ) ) ) ) ) - ( var_1. method_5 ( ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = method_3 ( ) ; if ( ( var_3 ) != null ) { var_3 . method_4 ( string_1 ) ; var_3 . method_5 ( true ) ; } if ( ( getintent ( ) ) != null ) { method_6 ( getintent ( ) ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1. init ( ) ; int var_1 = type_1. method_1 ( ) ; while ( true ) { type_1. method_2 ( var_1 ) ; if ( var_1 == 0 ) break ; var_1 = type_1. method_1 ( ) ; } var_2. method_3 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_3 var_2 = new type_3 ( ) ; type_4 var_3 = new type_4 ( ) ; var_3 . method_4 ( var_4 , event . method_3 ( ) ) ; var_2 . method_5 ( var_3 ) ; var_2 . show ( method_6 ( ) , string_1 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws type_3 { var_3. method_2 ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; type_4 var_4 = var_5. method_3 ( string_3 ) ; var_4. method_4 ( 1, var_1. getname ( ) ) ; var_4. method_4 ( int_1, var_1. method_5 ( ). get ( 0 ). getid ( ) ) ; var_4. method_4 ( int_2, var_2. getname ( ) ) ; var_4. method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , type_2 var_2 ) { final type_3 var_3 = var_4 . method_2 ( var_1 ) ; final type_4 var_5 = var_6 . method_3 ( var_3 , var_2 , var_7 ) ; if ( ( var_5 . method_4 ( ) ) <= 0 ) { var_6 . method_5 ( var_3 , var_5 ) ; } return type_1 . method_6 ( var_8 . method_7 ( var_3 ) ) ; }
[0]: public type_1 add ( type_2 var_1, type_3 file ) { type_1 result = new type_1 ( ) ; try { var_2. method_1 ( var_1, file ) ; result. method_2 ( true ) ; result. method_3 ( string_1 ) ; return result ; } catch ( type_4 var_3 ) { type_5. error ( string_2, var_3 ) ; result. method_3 ( var_3. method_4 ( ) ) ; return result ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; for ( type_2 i : var_2 ) var_1 . method_3 ( i ) ; for ( type_2 i : var_2 ) i . update ( var_1 ) ; for ( type_2 i : var_2 ) if ( ! ( i . method_4 ( var_1 ) ) ) i . method_5 ( ) ; }
[0]: public type_1 method_1 ( type_2 < type_1 > var_1 ) throws type_3 { type_4 < type_1 > source = var_2. method_2 ( var_1 ) ; if ( ( source!= null ) && ( source. method_3 ( ) ) ) { var_1 = source. method_4 ( ) ; type_5 < type_1 > var_3 = type_6. method_5 ( source. method_6 ( ), var_1 ) ; type_1 var_4 = var_3. method_7 ( var_1, source ) ; return var_4 ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.lang.exception { if ( ( var_2 . length ) == ( var_3 ) ) { var_4 . method_2 ( var_5 [ int_1 ] , var_1 , var_6 , false ) ; } else { var_4 . method_2 ( var_5 [ int_1 ] , var_1 , var_6 , true ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_1. method_2 ( this. var_3 ) ; var_1. method_3 ( this. var_4 ) ; var_1. method_4 ( this. var_5 ) ; var_1. method_4 ( this. var_6 ) ; var_1. method_4 ( this. var_7 ) ; var_1. method_3 ( this. var_8 ) ; var_1. method_3 ( this. to ) ; var_1. method_2 ( this. var_9 ) ; var_1. method_3 ( this. var_2 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string name ) { type_2 var_1 = method_2 ( ) . method_3 ( method_4 ( ) ) ; var_1 . add ( type_3 . method_5 ( "name" , name ) ) ; return ( ( type_1 ) ( var_1 . method_6 ( ) ) ) ; }
[0]: private android.view.view method_1 ( int position, android.view.view var_1 ) { type_1 view ; if ( var_1 == null ) { view = new type_1 ( context, null ) ; } else if ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) view = new type_1 ( context, null ) ; else view = ( ( type_1 ) ( var_1 ) ) ; view. method_2 ( var_2. gettext ( position ), var_3. gettext ( position ) ) ; return view ; }

************

************
tgt: protected void method_1 ( ) { method_2 ( ) ; method_3 ( method_4 ( string_1 ) ) ; add ( new type_1 ( string_2 , new type_2 < java.lang.string > ( this , string_1 ) ) ) ; add ( new type_3 ( string_3 ) ) ; add ( new type_4 ( string_4 ) ) ; add ( new type_5 ( string_5 , this . getclass ( ) ) ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) throws type_3 { type_4 element = var_1. method_2 ( ) ; type_4 var_3 = type_5. method_3 ( element, var_4 ) ; type_6 var_5 = var_3. method_4 ( var_6 ) ; for ( int i = 0 ; i < ( var_5. method_5 ( ) ) ; ++ i ) method_6 ( var_5. item ( i ), var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( method_3 ( ) ) ) ) ; if ( var_1 . method_4 ( var_2 ) ) { var_1 . method_5 ( var_2 ) ; } else { super . method_1 ( ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, type_3 params ) { final type_1 var_2 = var_3. method_1 ( var_1, params ) ; return new type_1 ( ) { public java.lang.string method_2 ( ) { return var_4 ; } public void start ( type_4 listener ) { var_2. start ( listener ) ; } public void method_3 ( ) { var_2. method_3 ( ) ; } } ; }

************

************
tgt: private type_1 method_1 ( java.util.vector var_1 ) { double [ ] var_2 = var_3 . method_2 ( var_1 , var_4 , var_5 ) ; type_3 var_6 = new type_3 ( ) ; var_6 . method_3 ( var_7 ) ; return var_6 . method_4 ( var_3 . method_5 ( ) , var_4 , var_2 ) ; }
[0]: public java.net.url method_1 ( java.lang.string name ) { java.net.url url = var_2. method_3 ( name ) ; if ( url == null ) url = var_3. method_3 ( name ) ; if ( url!= null ) { var_1. method_2 ( string_2, name ) ; return url ; } var_1. method_2 ( string_3 ) ; return super. method_1 ( name ) ; }

************

************
tgt: private type_1 method_1 ( final type_2 var_1 ) { type_1 var_2 = ( ( type_1 ) ( type_3 . method_2 ( this ) . method_3 ( var_3 , var_4 , false ) ) ) ; if ( method_4 ( ) ) { method_5 ( this , var_2 , var_1 , var_6 , var_5 , false ) ; } else { method_5 ( this , var_2 , var_1 , null , null , false ) ; } return var_2 ; }
[0]: public void execute ( type_1 var_1, android.content.context var_2 ) { type_2 var_3 = type_2. method_1 ( var_2 ) ; if ( var_3. method_2 ( ) ) { var_3. method_3 ( true ) ; var_3. method_4 ( getconfig ( ). get ( string_1 ) ) ; type_3. method_5 ( var_2 ). method_6 ( getconfig ( ). get ( string_1 ), true ) ; } }

************

************
tgt: public boolean method_1 ( ) { this . var_1 . method_3 ( method_2 ( ) , method_4 ( ) ) ; if ( ( ( this . var_1 . method_5 ( ) ) != null ) && ( ( this . var_1 . method_5 ( ) . method_6 ( ) ) == ( var_2 ) ) ) { return true ; } return false ; }
[0]: public int [ ] [ ] method_1 ( ) { int [ ] [ ] out = new int [ var_1. length ] [ var_1 [ 0 ]. length ] ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) for ( int j = 0 ; j < ( var_1 [ 0 ]. length ) ; j ++ ) out [ i ] [ j ] = var_2 [ i ] [ j ] ; return out ; }

************

************
tgt: public java.io.inputstream method_1 ( ) { try { type_1 var_1 = method_2 ( ) ; type_2 var_2 = new type_2 ( var_1 . method_3 ( ) ) ; return var_2 ; } catch ( java.lang.exception var_3 ) { var_3 . method_4 ( ) ; throw new type_3 ( var_3 ) ; } }
[0]: public void method_1 ( ) { if ( ( (! ( this. method_2 ( ) ) ) && ( ( var_1. method_3 ( ) ) == ( var_2 ) ) ) || ( ( var_1. method_4 ( ) ) == ( var_2 ) ) ) { method_5 ( ) ; } }

************

************
tgt: public void replace ( int position , java.lang.object content ) { if ( ( position <= 0 ) || ( ( nodes ) <= 0 ) ) return ; if ( position > ( nodes ) ) return ; type_1 replace = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { replace = replace . method_1 ( ) ; } replace . method_2 ( content ) ; }
[0]: public static void method_1 ( double var_1, type_1 var_2, type_2 var_3 ) { if ( ( var_1 < ( var_4 ) ) || ( var_1 > ( var_5 ) ) ) { return ; } else { type_3 value = new type_3 ( var_1 ) ; type_4 key = type_4. method_2 ( var_2, var_3 ) ; type_5 var_6 = type_5. get ( var_2 ) ; var_7. put ( key, value ) ; var_6. method_3 ( ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( int var_1 , java.lang.integer var_2 , java.lang.integer var_3 , type_3 var_4 , java.lang.string var_5 ) { return this . var_6 . method_2 ( this . var_7 . method_3 ( var_1 ) , new type_4 ( type_5 . name ( ) , null ) , new type_6 ( var_2 , var_3 , var_4 , var_5 ) ) ; }
[0]: public void update ( ) { if ( var_1 ) { method_1 ( ) ; var_2. method_2 ( new type_1 ( var_3. method_3 ( ). method_4 ( ), var_3. method_3 ( ). method_5 ( ), 0.0f ) ) ; } if ( ( var_3. method_3 ( ). method_6 ( ) ) <= 0.0f ) { method_7 ( ) ; } if ( ( method_8 ( ) ) == ( type_2. method_9 ( ). var_4 ) ) method_10 ( ) ; }

************

************
tgt: private void method_1 ( final type_1 var_1 , final type_2 var_2 , final java.util.collection < type_1 > var_3 , final java.util.collection < type_2 > var_4 ) { new java.lang.thread ( ( ) - > { final type_3 var_5 = var_6 . method_2 ( var_7 class ) ; var_5 . method_5 ( new java.util.arraylist ( var_3 ) ) ; var_5 . method_3 ( var_1 ) ; var_5 . method_6 ( new java.util.arraylist ( var_4 ) ) ; var_5 . method_4 ( var_2 ) ; } ) . start ( ) ; }
[0]: public static void method_1 ( java.lang.string source, type_1 var_1, type_2 var_2, java.lang.string filename ) { type_3 var_3 = type_4. method_2 ( source, var_2, filename ) ; type_5 var_4 = new type_6 ( var_3. method_3 ( ), type_7. method_4 ( ), type_8. method_5 ( ), null, var_5, type_9. method_6 ( var_5, var_6 ) ) ; type_4. method_1 ( var_3, var_4, var_5, source, var_1 ) ; }

************

************
tgt: private void method_1 ( int var_1 , int height ) { final int var_2 = var_1 / int_1 ; final int var_3 = ( var_4 ) ? ( var_5 . method_2 ( ) ) + ( var_5 . method_3 ( ) ) : height / int_1 ; final int var_6 = ( ( int ) ( ( var_5 . method_3 ( ) ) * float_1 ) ) ; var_7 . method_4 ( ( var_2 - var_6 ) , ( var_3 - var_6 ) , ( var_2 + var_6 ) , ( var_3 + var_6 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 answer = var_1. method_2 ( null ) ; assertnotnull ( answer ) ; method_3 ( answer. method_4 ( ) ) ; assertequals ( type_2. method_5 ( ), answer. method_6 ( ) ) ; method_3 ( answer. method_7 ( ) ) ; method_3 ( answer. method_8 ( ) ) ; assertequals ( 0, answer. method_9 ( ) ) ; assertnotnull ( answer. getid ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.io.ioexception , type_2 { var_3 . method_2 ( ) ; type_3 var_4 ; var_4 = var_5 . method_3 ( var_1 ) ; if ( null == var_4 ) { var_3 . method_4 ( var_6 ) ; return var_3 ; } var_4 . execute ( var_3 ) ; assert method_5 ( var_4 ) ; var_7 . method_6 ( var_3 , var_2 ) ; return var_3 ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : android.content.intent var_2 = new android.content.intent ( this, var_3 class ) ; method_3 ( var_2 ) ; return true ; default : return super. method_1 ( item ) ; } }

************

************
tgt: private void method_1 ( int var_1 ) { android.content.intent var_2 = new android.content.intent ( this , var_3 class ) ; type_1 . method_2 ( java.lang.string . method_3 ( var_4 ) ) ; method_4 ( var_2 ) ; type_1 . method_5 ( var_1 ) ; var_5 = true ; type_1 . method_6 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.util.map < java.lang.string, java.lang.string [ ] [ ] > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( string_1, new java.lang.string [ ] [ ] { new java.lang.string [ ] { string_2, string_3, string_4 } } ) ; var_1. put ( string_5, new java.lang.string [ ] [ ] { new java.lang.string [ ] { string_2, string_3 }, new java.lang.string [ ] { string_2, string_3 }, new java.lang.string [ ] { string_4 } } ) ; method_2 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 node , java.awt.color var_1 ) { if ( ! ( var_2 . method_2 ( node ) ) ) var_2 . put ( node , new java.util.arraylist < java.awt.color > ( ) ) ; if ( ! ( var_2 . get ( node ) . contains ( var_1 ) ) ) var_2 . get ( node ) . add ( var_1 ) ; }
[0]: public void update ( ) { var_1. set ( var_2. method_1 ( string_1 ) ) ; var_3. set ( var_2. method_1 ( string_2 ) ) ; var_4. set ( false ) ; var_5 = var_2. method_2 ( ) ; var_6 = var_7. method_3 ( var_2. method_4 ( ) ) ; }

************

************
tgt: public void update ( ) { type_1 var_1 = var_2 . method_1 ( ) ; var_3 = ( type_2 . getint ( var_1 , var_4 , 1 ) ) == 1 ; var_5 = ( type_2 . getint ( var_1 , var_6 , 1 ) ) == 1 ; var_7 = ( type_3 . method_2 ( var_1 , var_8 , 0 , var_9 ) ) == 1 ; }
[0]: public static type_1 method_1 ( java.lang.string message ) { java.lang.string var_1 = type_2. method_2 ( ). getclass ( ). method_3 ( ). getname ( ) ; java.lang.string var_2 = var_1. substring ( var_1. method_4 ( ( string_1 + 1 ) ) ) ; switch ( var_2 ) { case string_2 : return new type_3 ( message ) ; default : throw new type_4 ( ( var_2 + string_3 ) ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( string_1 ) ; var_1 . method_3 ( var_2 . method_4 ( ) , var_3 . method_5 ( ) ) ; var_2 . method_6 ( ) . remove ( var_2 . method_4 ( ) ) ; if ( ( var_2 . method_6 ( ) . size ( ) ) > 0 ) { ( var_4 ) -- ; } }
[0]: public void method_1 ( java.lang.string var_1, int var_2 ) { long var_3 = int_1 ; final type_1 var_4 = var_5. method_2 ( var_1 ) ; final type_2 var_6 = new type_2 ( ( ( ( ( var_1 + string_1 ) + var_2 ) + string_1 ) + var_3 ) ) ; method_3 ( ( ( ( ( var_1 + string_1 ) + var_2 ) + string_1 ) + var_3 ), var_6, var_4 ) ; starttime = type_3. method_4 ( ) ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 ) { java.lang.string var_2 = string_1 ; if ( var_1 . method_2 ( ) ) { target = method_3 ( ) ; var_2 = var_2 . method_6 ( ( ( java.lang.string ) ( var_1 . method_7 ( ) . method_8 ( this ) ) ) ) ; var_2 = var_2 . method_6 ( method_9 ( var_1 . getname ( ) , target ) ) ; var_1 . method_4 ( ) . method_5 ( var_1 . getname ( ) , c ) ; return var_2 ; } return var_1 . getname ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( var_3 ) ; if ( var_4. isempty ( ) ) var_5. method_3 ( var_3, var_5. method_4 ( var_3, var_6 ) ) ; else var_5. method_3 ( var_3, var_4. method_5 ( ) ) ; var_5. method_6 ( var_7, var_8, var_3, var_6 ) ; }

************

************
tgt: public void update ( type_1 var_1 ) { for ( int i = 0 ; i < ( this . position ) ; i ++ ) { if ( this . var_2 [ i ] . getid ( ) . equals ( var_1 . getid ( ) ) ) { this . var_2 [ i ] = var_1 ; } } }
[0]: public void method_1 ( type_1 var_1 ) { try { java.lang.double value = ( ( java.lang.double ) ( var_1. getvalue ( ) ) ) ; if ( value!= null ) { var_2. method_2 ( path ). setvalue ( ( value + var_3 ) ) ; } else { var_2. method_2 ( path ). setvalue ( var_3 ) ; } } catch ( java.lang.exception var_4 ) { type_2. method_3 ( string_1, var_4. tostring ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( method_2 ( ) . equals ( var_2 ) ) { try { method_3 ( ) ; } catch ( type_2 var_3 ) { type_3 . method_4 ( var_3 , string_1 ) ; } } synchronized ( var_4 ) { if ( var_4 . isempty ( ) ) { method_5 ( ) ; } return var_4 . get ( var_1 ) ; } }
[0]: public java.lang.string tostring ( ) { return java.lang.string.format ( string_1, method_1 ( ). method_2 ( ), method_3 ( ). method_2 ( ), ( ( 1.0 - ( method_4 ( ) ) ) * float_1 ), this. var_1, ( method_1 ( ). method_5 ( )? 0 : 1 ), this. var_2, this. var_3, this. var_4, ( method_3 ( ). method_5 ( )? 0 : 1 ), this. var_5, this. var_6, this. var_7 ) ; }

************

************
tgt: private java.util.properties method_1 ( ) { java.util.properties var_1 = new java.util.properties ( ) ; var_1 . put ( string_1 , var_2 . method_2 ( var_3 ) ) ; var_1 . put ( string_2 , var_2 . method_2 ( var_4 ) ) ; var_1 . put ( string_3 , var_2 . method_2 ( var_5 ) ) ; return var_1 ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { java.util.list < type_2 > var_1 = var_2. method_2 ( ( string_1 + ( new java.io.file ( var_3 ). getname ( ) ) ), var_4, var_5, var_6 ) ; method_3 ( var_1 ) ; var_7. method_4 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = var_2 ; if ( ( var_3 . method_2 ( ) ) == ( var_4 ) ) { var_1 = var_5 ; } else if ( ( var_3 . getdata ( ) ) instanceof type_2 ) { var_1 = var_6 ; } if ( ( var_7 ) != null ) { var_7 . method_3 ( var_1 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( ). method_3 ( ) ; var_1. method_4 ( string_1 ). put ( string_1, string_2 ) ; var_1. commit ( ) ; assertequals ( 0l, method_5 ( ) ) ; var_1. method_6 ( ) ; try { method_2 ( ). method_7 ( ). method_3 ( ) ; fail ( ) ; } catch ( type_2 var_2 ) { var_2. method_8 ( ) ; assertequals ( string_3, var_2. method_9 ( ) ) ; } }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { if ( ( ( ( var_1 <= ( ( rows ) - int_1 ) ) && ( var_2 <= ( ( var_3 ) - int_1 ) ) ) && ( var_1 >= 0 ) ) && ( var_2 >= 0 ) ) { return true ; } return false ; }
[0]: private boolean method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( ) ; if ( type_1. method_3 ( var_1 ) ) { var_1 = method_4 ( ) ; } return ( type_1. method_5 ( var_1 ) ) && ( ( var_1. method_6 ( string_1 ) ) || ( var_1. method_6 ( string_2 ) ) ) ; }

************

************
tgt: public static java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { return new type_2 ( ) . method_2 ( var_2 class ) . method_3 ( var_3 . method_4 ( type_3 . method_5 ( var_1 ) . method_6 ( ) . method_7 ( ) ) ) . method_8 ( var_4 , true ) . method_10 ( ) ; }
[0]: public int compareto ( java.lang.object t ) { if ( ( var_1 ) > ( ( ( type_1 ) ( t ) ). var_1 ) ) return 1 ; else if ( ( var_1 ) < ( ( ( type_1 ) ( t ) ). var_1 ) ) return - 1 ; else return 0 ; }

************

************
tgt: public static void method_1 ( int number ) { var_1 . method_2 ( ) ; if ( number > 1 ) { var_2 . method_2 ( ) ; } if ( number > int_1 ) { var_3 . method_2 ( ) ; } new java.lang.thread ( new type_1 ( ) { public void method_3 ( ) { try { java.lang.thread . method_4 ( int_2 ) ; } catch ( type_2 var_4 ) { } finally { type_3 . method_5 ( ) ; } } } ) . start ( ) ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > var_1 = type_2. method_2 ( ) ; int i = 0 ; for ( type_3 var_2 : this. method_3 ( ) ) { if ( i <= ( var_1. size ( ) ) ) var_1. get ( i ). method_4 ( ( ( java.lang.string ) ( var_2. method_5 ( ). method_6 ( ) ) ) ) ; i ++ ; } }

************

************
tgt: public void method_1 ( java.lang.string title , type_1 < type_2 [ ] > var_1 ) { if ( var_2 ) var_3 . show ( ) ; new type_3 ( var_1 , var_5 ) . execute ( new type_4 < type_2 [ ] > ( string_1 , title , type_2 [ ] . class ) ) ; }
[0]: private void method_1 ( ) { new type_1 ( var_1 ). execute ( var_2. getid ( ) ) ; new type_2 ( var_3 ). execute ( var_2. getid ( ) ) ; try { var_4 = type_3. method_2 ( getactivity ( ), var_2. getid ( ) ) ; method_3 ( ) ; } catch ( java.lang.exception var_5 ) { type_4. method_4 ( var_6, ( string_1 + ( var_5. method_5 ( ) ) ), var_5 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( type_2 . method_3 ( ) ) != null ) { method_4 ( ) ; type_3 var_2 = type_4 . method_5 ( var_3 ) ; type_2 . method_3 ( ) . method_6 ( var_2 , var_4 ) ; type_2 . method_3 ( ) . method_6 ( type_4 . method_5 ( var_5 ) , var_6 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( string_1, string_2 ) ; if ( ( method_3 ( ) )!= null ) { var_2 = method_3 ( ). getstring ( var_3 ) ; var_4 = method_3 ( ). getstring ( var_5 ) ; } type_2. method_2 ( string_1, string_3 ) ; var_6 = type_3. method_4 ( ). method_5 ( ). method_6 ( string_4 ) ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( var_1 ) ) + string_3 ) + ( var_2 ) ) + char_1 ) + string_4 ) + ( var_3 ) ) + char_1 ) + string_5 ) + ( var_4 . getname ( ) ) ) + string_6 ) + ( var_5 ) ) + char_1 ) + string_7 ) + ( var_6 ) ) + char_2 ; }
[0]: public void method_1 ( boolean var_1 ) { if ( ( method_2 ( ) ) == null ) throw new type_1 ( string_1 ) ; if ( var_2 ) { method_3 ( true, method_4 ( ) ) ; } var_3. method_5 ( ( ( var_3. method_6 ( ) ) + 1 ), var_1 ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( var_2 , type_2 . method_3 ( ) ) ; var_1 . method_2 ( var_3 , type_2 . method_4 ( ) ) ; var_1 . method_2 ( var_4 , java.lang.string.format ( string_1 , type_2 . method_5 ( ) , type_2 . method_6 ( ) ) ) ; var_1 . method_2 ( var_5 , type_2 . method_7 ( ) ) ; return var_1 ; }
[0]: public java.io.bufferedwriter method_1 ( ) throws java.io.ioexception { if ( ( this. var_1 ) >= ( var_2 ) ) { this. var_3. method_2 ( this. file ) ; this. writer. method_3 ( ) ; this. var_1 = 0 ; this. file = this. method_4 ( ) ; this. writer = new java.io.bufferedwriter ( new java.io.filewriter ( this. file ) ) ; } ( this. var_1 ) ++ ; return this. writer ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 var_3 ) { if ( ( var_4 ) == null ) { } boolean var_8 = false ; var_8 = var_4 . method_1 ( var_1 , var_2 , var_3 ) ; var_6 = var_4 . method_2 ( ) ; return var_8 ; }
[0]: public type_1 method_1 ( type_2 context, type_3 method, type_1 [ ] args, type_4 var_1 ) { context. method_2 ( this, var_1 ) ; try { return method. execute ( this, args, var_1 ) ; } finally { context. method_3 ( ) ; } }

************

************
tgt: private void method_1 ( java.util.arraylist < type_1 > var_1 , type_2 var_2 ) { for ( type_1 var_3 : var_1 ) { type_3 var_4 = new type_3 ( ) ; type_4 var_5 = new type_4 ( var_6 , var_7 ) ; var_5 . method_2 ( var_8 ) ; var_4 . add ( var_5 ) ; var_2 . method_2 ( var_8 ) ; var_4 . add ( var_2 ) ; var_3 . method_4 ( var_4 ) ; var_3 . show ( ) ; } }
[0]: static boolean method_1 ( type_1 [ ] [ ] var_1, type_2 var_2 ) { if ( var_3 ) { return ( ( var_4 ) + 1 ) >= ( var_1 [ var_5 ]. length ) ; } return ( ( var_5 ) + 1 ) >= ( var_1. length ) ; }

************

************
tgt: public < type_1 > type_1 execute ( type_2 < type_1 , type_3 > f ) throws java.io.ioexception , type_4 { type_5 data = new type_5 ( ) ; type_3 var_1 = var_2 . method_1 ( data . method_2 ( ) , data . method_3 ( ) , data . method_4 ( ) , type_6 . method_5 ( data . method_6 ( ) ) ) ; try { type_1 result = f . method_7 ( var_1 ) ; return result ; } finally { var_1 . method_8 ( ) ; } }
[0]: private static java.lang.string method_1 ( java.lang.string data, java.lang.string filename, type_1 var_1 ) { java.lang.string var_2 = string_1 ; switch ( var_1 ) { case var_3 : var_2 = data ; break ; case var_4 : var_2 = type_2. method_2 ( data, filename ) ; break ; case var_5 : var_2 = type_2. method_3 ( data ) ; break ; default : break ; } return var_2 ; }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 ) { type_1 var_2 = ( var_1 instanceof type_2 ) ? ( ( type_2 ) ( var_1 ) ) . method_2 ( ) : var_1 ; if ( ! ( var_2 instanceof type_3 ) ) { return null ; } return ( ( type_3 ) ( var_2 ) ) . method_1 ( ) ; }
[0]: protected void method_1 ( ) { type_1 var_1 = method_2 ( ) ; var_1. method_3 ( ). method_4 ( ) ; type_2 var_2 = var_3. method_5 ( ) ; var_2. method_6 ( var_1. method_3 ( ) ) ; var_1. method_7 ( method_8 ( ( ( type_3 ) ( var_3 ) ) ) ) ; type_4. method_9 ( var_3. method_10 ( ), var_1 ) ; }

************

************
tgt: private static type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 ; if ( ! ( var_1 . tolowercase ( ) . equals ( string_1 ) ) ) { java.lang.system.out.print ( string_2 ) ; java.lang.string var_3 = var_4 . method_2 ( ) ; var_2 = var_5 . method_3 ( var_1 , var_3 ) ; return var_2 ; } else return var_7 ; }
[0]: private boolean method_1 ( type_1 var_1 ) { if ( var_2. contains ( var_1 ) ) return false ; var_2. method_2 ( var_1 ) ; var_3. info ( java.lang.string.format ( string_1, var_4, var_1 ) ) ; if ( ( var_2. size ( ) ) > ( var_5. method_3 ( var_6, var_6 ) ) ) method_4 ( var_2. method_5 ( ), var_6 ) ; return true ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_2 var_1 = ( ( type_2 ) ( event . method_2 ( ) ) ) ; if ( var_1 != null ) { var_1 . method_5 ( ) ; var_1 . method_3 ( ( string_1 + ( var_2 . method_4 ( ) ) ) ) ; } }
[0]: public void method_1 ( ) { method_2 ( var_1 ) ; if ( ( type_1. method_3 ( this ) ) && ( var_2. method_4 ( ) ) ) { int var_3 = type_2. method_5 ( this, var_4 ) ; if ( var_3!= ( var_5 ) ) { type_3. method_6 ( string_1, string_2 ) ; type_4. method_7 ( this, new java.lang.string [ ] { var_4 }, var_6 ) ; } else { var_8. show ( ) ; } } }

************

************
tgt: public static java.io.inputstream method_1 ( android.content.context context , java.lang.string filename , type_1 var_1 , java.lang.string ... var_2 ) { type_1 var_3 = type_2 . method_2 ( var_1 , var_2 ) ; if ( var_3 == null ) return null ; type_1 file = var_3 . method_3 ( filename ) ; if ( file == null ) return null ; return type_2 . method_1 ( context , file . method_4 ( ) ) ; }
[0]: public double method_1 ( type_1 var_1, type_1 var_2, int var_3 ) { int x = ( var_2. x ) - ( var_1. x ) ; int y = ( var_2. y ) - ( var_1. y ) ; double var_4 = ( java.lang.math.abs ( type_2. method_2 ( ( ( x * x ) + ( y * y ) ) ) ) ) * ( var_5. method_3 ( ) ) ; return var_4 / var_3 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 ) ; if ( ( ( var_1 . method_3 ( ) ) != null ) && ( ( var_1 . method_3 ( ) . getid ( ) ) != null ) ) { var_1 . method_4 ( var_3 . method_5 ( var_1 . method_3 ( ) . getid ( ) ) ) ; } }
[0]: public void method_1 ( ) { var_1. add ( new type_1 ( method_2 ( ). getstring ( var_2 ), method_2 ( ). getstring ( var_3 ) ) ) ; var_1. add ( new type_1 ( method_2 ( ). getstring ( var_4 ), method_2 ( ). getstring ( var_5 ) ) ) ; var_1. add ( new type_1 ( method_2 ( ). getstring ( var_6 ), method_2 ( ). getstring ( var_7 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) != ( var_2 ) ) { var_3 = var_4 . method_3 ( ) ; var_5 = new type_1 ( var_3 , this , var_6 , var_7 ) ; if ( ( var_8 ) == ( var_9 ) ) type_2 . method_4 ( var_3 , var_10 ) ; else if ( ( var_8 ) == ( var_11 ) ) type_2 . method_4 ( var_3 , var_12 ) ; java.util.collections.sort ( var_3 , var_13 ) ; var_14 . method_5 ( var_5 ) ; } }
[0]: protected void method_1 ( type_1 result ) { var_1 = result ; var_2. method_2 ( var_3 ) ; var_4. method_3 ( var_1 ) ; int position = var_1. method_4 ( var_5 ) ; var_4. method_6 ( position ) ; }

************

************
tgt: public type_1 [ ] method_1 ( ) { return new type_1 [ ] { type_2 . method_3 ( type_2 . method_2 ( type_2 . method_4 ( type_2 . method_5 ( type_3 . method_6 ( var_1 ) ) ) , var_2 . method_7 ( string_1 ) ) ) , type_2 . method_8 ( type_2 . method_4 ( type_2 . method_9 ( type_3 . method_6 ( b ) ) ) ) } ; }
[0]: public double method_1 ( ) { double var_2 = var_3. method_2 ( var_1. get ( 0 ) ) ; double var_4 = 0 ; for ( int i = 1 ; i < ( var_1. size ( ) ) ; i ++ ) { double var_5 = var_3. method_2 ( var_1. get ( i ) ) ; var_4 += var_5 - var_2 ; var_2 = var_5 ; } return var_4 / ( var_1. size ( ) ) ; }

************

************
tgt: private static void method_1 ( type_1 var_1 , java.lang.string url ) throws type_2 { type_3 var_2 = new type_3 ( url ) ; java.lang.string var_3 = type_5 . method_2 ( url ) ; type_6 var_4 = new type_6 ( var_2 , var_1 , var_3 ) ; var_5 . method_3 ( ( string_1 + var_4 ) ) ; java.lang.thread var_6 = new java.lang.thread ( var_4 , ( string_2 + var_3 ) ) ; var_6 . start ( ) ; var_5 . method_3 ( ( string_3 + var_6 ) ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; int var_2 = int_1 ; type_1 var_3 = method_2 ( var_4, var_1, var_2 ) ; var_5. method_3 ( var_3 ) ; type_2. assertequals ( 1, var_6. method_4 ( ) ) ; var_1 = string_2 ; var_2 = int_1 ; type_1 var_7 = method_2 ( var_4, var_1, var_2 ) ; var_5. method_3 ( var_7 ) ; type_2. assertequals ( int_2, var_6. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 , boolean var_2 ) { if ( ! var_2 ) { if ( ( ( var_3 ) != null ) && ( ( var_3 . length ( ) ) > int_1 ) ) { if ( ( var_5 ) == ( var_6 ) ) { var_7 . method_4 ( method_5 ( ) ) ; } var_4 . settext ( method_2 ( method_3 ( ) ) ) ; } } }
[0]: public double method_1 ( ) { if ( ( context. method_2 ( ) ) == 0 ) { return ( var_1 ) / ( ( var_2 ) + ( var_3 ) ) ; } else { return ( 1 - ( var_1 ) ) / ( ( var_2 ) + ( var_3 ) ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { for ( type_1 var_1 : var_2 ) { if ( var_1 . method_2 ( ) . tostring ( ) . contains ( var_3 ) ) { java.util.list < type_2 > var_4 = var_1 . method_3 ( ) ; assertnotnull ( var_4 ) ; method_4 ( var_4 . isempty ( ) ) ; assertequals ( 1 , var_4 . size ( ) ) ; } } }
[0]: public void method_1 ( ) { if ( ( ( this. method_2 ( ) ) & int_1 ) == 0 ) return ; if ( (! ( this. var_1 ) ) && ( ( var_2 )!= ( ( ( this. method_2 ( ) ) & int_2 )!= 0 ) ) ) { var_2 =! ( var_2 ) ; var_3 = true ; method_3 ( ) ; } else type_1. method_4 ( var_4, var_5, var_6, var_7, var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; if ( ( ( var_2 ) != null ) && ( ( var_3 ) != null ) ) try { var_3 . method_3 ( var_2 ) ; } catch ( type_2 var_4 ) { var_4 . method_4 ( ) ; } if ( ( var_3 ) != null ) var_3 . method_5 ( ) ; if ( ( var_5 ) != null ) { var_5 . method_6 ( ) ; var_5 . method_7 ( ) ; } super . method_1 ( ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string message ) { java.lang.string var_1 = string_1 ; final java.lang.string var_2 = string_2 ; int var_3 = ( ( var_2. length ( ) ) - ( message. length ( ) ) ) - int_1 ; for ( int i = 0 ; i < var_3 ; i ++ ) { var_1 = var_1 + string_3 ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = this . var_2 . method_2 ( ) ; type_2 . method_3 ( this . var_3 . method_4 ( type_6 . method_12 ( var_6 class ) ) ) . method_5 ( type_3 . method_6 ( int_1 ) ) ; this . var_4 . method_7 ( type_4 . get ( string_1 ) ) . method_8 ( type_5 . method_9 ( ) ) . method_10 ( var_5 ) ; }
[0]: public void method_1 ( type_1 context, type_2 var_1, type_3 value, java.lang.string var_2, type_4 event, type_5 < type_3 > var_3 ) { java.lang.string var_4 ; if ( var_2 == null ) { var_4 = method_2 ( value ) ; } else { var_4 = var_2 ; } if ( type_6. equals ( event. gettype ( ) ) ) { type_7. method_3 ( var_4, var_1 ) ; } }

************

************
tgt: public static java.util.collection < java.lang.string > method_1 ( ) { java.util.collection < java.lang.string > var_1 = var_2 . method_2 ( string_1 , java.util.arrays.aslist ( var_3 ) ) ; if ( ( var_1 == null ) || ( ( var_1 . size ( ) ) == 0 ) ) { var_1 = java.util.arrays.aslist ( var_3 ) ; } return var_1 ; }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ) )!= ( var_2 ) ) { var_1. method_1 ( ) ; } else { var_1. setstate ( var_3, true ) ; type_1 var_4 = new type_1 ( var_1, this ) ; var_5. method_3 ( var_1, ( ) - > { } ) ; } }

************

************
tgt: private void method_1 ( type_1 type_2 , type_3 var_1 ) { java.util.list var_2 = new java.util.arraylist ( new java.util.hashset ( type_2 . method_2 ( ) ) ) ; int var_3 = int_1 ; var_1 . method_3 ( string_1 , ( ( var_2 . size ( ) ) > var_3 ? var_2 . method_4 ( 0 , var_3 ) : var_2 . method_4 ( 0 , var_2 . size ( ) ) ) ) ; var_1 . method_3 ( string_2 , ( ( var_2 . size ( ) ) > var_3 ) ) ; }
[0]: private static type_1 method_1 ( type_1 field ) { type_1 [ ] var_1 = field. method_2 ( ) ; if ( ( ( ( var_1 [ 0 ] )!= null ) && ( string_1. equals ( var_1 [ 0 ]. name ( ) ) ) ) && ( type_2. equals ( var_1 [ 0 ]. type ( ) ) ) ) { return var_1 [ 0 ]. method_2 ( ) [ 0 ] ; } return field ; }

************

************
tgt: private void method_1 ( ) { boolean var_1 = false ; for ( byte b = this . var_2 . getvalue ( ) ; b != 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) var_1 = ! var_1 ; this . var_3 . method_2 ( var_1 , 0 ) ; }
[0]: private int method_1 ( type_1 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; if ( ( var_3 ) == 1 ) { if ( var_2. equals ( var_4 ) ) { int var_5 = var_6. method_3 ( var_7. length ) ; return var_7 [ var_5 ] ; } method_4 ( var_1, 1 ) ; } else { method_4 ( var_1, int_1 ) ; } return var_8. get ( var_2 ) ; } }

************

************
tgt: public boolean method_1 ( java.util.hashset < java.lang.string > var_1 ) { if ( var_1 != null ) { if ( var_1 . isempty ( ) ) return true ; for ( java.lang.string str : var_1 ) { if ( ( ( this . label ) != null ) && ( this . label . method_2 ( str ) ) ) return true ; } return false ; } else { return true ; } }
[0]: private void method_1 ( int id, java.lang.string var_1, java.lang.string name, java.lang.string var_2 ) { type_1 var_3 = new type_1 ( var_4. method_2 ( ), var_1, name, var_2 ) ; if ( var_5. method_1 ( var_3 ) ) { var_6. set ( id, var_3 ) ; var_7. method_3 ( ) ; } else { type_2. method_4 ( getcontext ( ), var_8, var_9 ). show ( ) ; } }

************

************
tgt: private int method_1 ( int var_1 ) { int var_2 = 0 ; boolean var_3 = false ; var_2 = var_1 + 1 ; do { var_4 = var_2 != ( var_6 ) ; if ( var_4 ) { var_3 = var_7 [ var_2 ] . var_8 ; if ( var_3 ) { break ; } else { var_2 ++ ; } } else { return - 1 ; } } while ( ! var_3 ) ; return var_2 ; }
[0]: private void method_1 ( ) { if ( var_1 ) { if ( ( ( var_2 ) == null ) || ( ( params ) == null ) ) { return ; } params = var_2. method_2 ( ) ; params. method_3 ( var_3 ) ; var_2. method_4 ( params ) ; var_2. method_5 ( ) ; var_1 = false ; var_4. method_6 ( var_5 ) ; } } }

************

************
tgt: public type_1 method_1 ( type_1 ... var_1 ) { int var_2 = var_3 ; type_1 var_4 = null ; for ( type_1 var_5 : var_1 ) { if ( ! ( var_6 . equals ( var_7 ) ) ) { continue ; } if ( ! ( var_9 . method_2 ( var_10 ) ) ) { continue ; } if ( ( var_8 ) <= var_2 ) { continue ; } var_4 = var_5 ; } return var_4 ; }
[0]: java.util.set < java.lang.string > method_1 ( java.net.url url, type_1 var_1 ) throws java.io.ioexception, type_2 { if ( ( url. method_2 ( ) ) == string_1 ) { return method_3 ( url, var_1 ) ; } else { try ( java.io.inputstream var_2 = url. method_4 ( ) ) { return var_1. method_5 ( var_2 ) ; } } } return null ; }

************

************
tgt: type_1 method_1 ( type_1 var_1 ) { if ( ( var_1 == null ) || ( ( ! ( this . method_2 ( ) ) ) && ( var_1 . method_2 ( ) ) ) ) { return this ; } type_1 result = type_1 . method_3 ( this , var_1 ) ; if ( ( this . var_2 ) && ( ! ( result . method_2 ( ) ) ) ) { result = result . method_4 ( ) ; } return result ; }
[0]: private void method_1 ( ) { try { if ( ( ( var_1 )!= null ) && (! ( var_1. method_2 ( ) ) ) ) { var_2. method_3 ( ) ; var_2. method_4 ( ) ; var_1. method_1 ( ) ; } } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 value , type_3 info ) { int var_2 = var_4 . method_2 ( var_1 ) ; if ( var_2 < 0 ) throw new type_4 ( ( ( ( string_1 + ( var_1 . name ) ) + string_2 ) + ( var_4 ) ) ) ; var_2 += var_3 ; data . method_3 ( var_2 , value , info ) ; }
[0]: public void method_1 ( java.lang.string var_1, int var_2, int var_3, long time ) { if ( var_4 ) { if ( time < ( var_5 ) ) var_6 = time ; } else { if ( time > ( var_6 ) ) var_5 = time ; } method_2 ( ) ; } }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 , java.lang.string status , java.lang.string var_5 ) { method_2 ( var_1 , var_2 , var_3 ) . method_3 ( type_1 . response ( ) . method_4 ( var_6 ) . method_5 ( var_7 , var_8 ) . method_6 ( method_7 ( var_4 , var_1 , status , var_5 ) ) ) ; }
[0]: public static type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( int i = 1 ; i <= int_1 ; i ++ ) { for ( int j = 0 ; j < int_2 ; j ++ ) { var_1. method_2 ( new type_2 ( i, false, type_3. values ( ) [ i ] ) ) ; } } var_1. method_3 ( var_2 ) ; return var_1 ; }

************

************
tgt: protected java.util.list < java.lang.string > method_1 ( java.lang.string query ) { final int var_1 = query . length ( ) ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( int index = 0 ; ( index + ( var_3 ) ) < var_1 ; index += var_4 ) { var_2 . add ( query . substring ( index , ( index + ( var_3 ) ) ) ) ; } return var_2 ; }
[0]: private void method_1 ( ) { java.util.properties var_1 = var_2. method_2 ( ) ; java.lang.string var_3 = var_1. method_3 ( var_4 ) ; var_3 = method_4 ( var_3, var_5 ) ; if (! ( var_3. equals ( var_6 ) ) ) { java.io.file var_7 = new java.io.file ( var_3 ) ; if ( var_7. method_5 ( ) ) { var_7. delete ( ) ; } } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = var_3 . gettext ( ) . tostring ( ) ; intent = new android.content.intent ( var_4 , var_5 class ) ; intent . method_2 ( string_1 , var_2 ) ; intent . method_2 ( string_2 , filename . gettext ( ) ) ; var_4 . method_4 ( intent ) ; }
[0]: public void method_1 ( ) { if ( var_1 ) { p. method_2 ( string_1 ) ; } if (! ( var_1 ) ) { var_2 = 0 ; var_3 = 0 ; var_4 = 0 ; var_5 = 0 ; var_6 = 0 ; var_7 = 0 ; var_8 = 0 ; var_1 = true ; } }

************

************
tgt: public boolean equals ( final java.lang.object var_1 ) { if ( var_1 == ( this ) ) return true ; if ( ! ( super . equals ( var_1 ) ) ) return false ; final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( type_2 . equals ( var_3 , var_4 ) ) && ( var_5 . equals ( var_6 ) ) ; }
[0]: public boolean method_1 ( java.lang.object var_1 ) { synchronized ( var_2 ) { if ( var_3 ) { return false ; } if ( var_4 ) { return false ; } type_1 var_5 = method_2 ( ) ; try { return method_3 ( var_1 ) ; } finally { var_3 = true ; var_5. method_4 ( ) ; } } } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { java.lang.string path = type_3 . method_2 ( var_1 . method_3 ( ) ) . method_4 ( ) ; java.lang.string [ ] var_2 = path . split ( string_1 ) ; java.lang.string var_3 = var_2 [ 0 ] ; java.lang.string query = type_3 . method_2 ( var_1 . method_3 ( ) ) . method_5 ( ) ; java.util.map < java.lang.string , java.lang.object > var_4 = type_4 . method_6 ( query ) ; return method_7 ( var_3 , var_4 ) ; }
[0]: private void method_1 ( type_1 p, java.lang.string msg ) { type_2 var_1 ; var_2 : for ( java.util.iterator var_3 = p. method_2 ( float_1, float_1, float_1 ). iterator ( ) ; var_3. method_3 ( ) ; ( ( type_1 ) ( var_1 ) ). method_4 ( msg ) ) { var_1 = ( ( type_2 ) ( var_3. method_5 ( ) ) ) ; if ( (! ( var_1 instanceof type_1 ) ) || ( var_1. equals ( p ) ) ) break ; } }

************

************
tgt: int method_1 ( ) { type_1 . method_2 ( ( ( null == ( var_1 ) ) || ( ( var_1 ) > 0 ) ) , string_1 , var_1 ) ; java.lang.integer value = var_1 ; if ( null == value ) { value = type_2 . method_3 ( ) . method_4 ( ) ; } return value ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( int var_2 = 0 ; var_2 < ( var_3. length ) ; var_2 ++ ) { var_4. method_2 ( ). add ( var_1. method_3 ( var_2, var_3 [ var_2 ] ) ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; final int var_2 = 0 ; int result = var_1 . method_2 ( ) ; type_2 . assertequals ( var_2 , result ) ; int var_3 = int_1 ; var_1 . method_3 ( var_3 ) ; int var_4 = int_2 ; var_1 . method_3 ( var_4 ) ; result = var_1 . method_2 ( ) ; type_2 . assertequals ( var_3 , result ) ; result = var_1 . method_2 ( ) ; type_2 . assertequals ( var_3 , result ) ; }
[0]: public type_1 get ( ) { type_2 var_1 ; try { var_1 = var_2. method_1 ( type_3. getid ( ) ) ; } catch ( type_4 var_3 ) { try { var_1 = type_5. method_2 ( var_4, type_3, string_1, var_5, var_6, null ) ; } catch ( type_6 | java.io.ioexception var_7 ) { throw type_7. method_3 ( var_7 ) ; } } return new type_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { type_2 . i ( var_3 , string_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_1 ( var_1 , var_2 ) ; type_3 var_5 = var_1 . method_2 ( type_4 . method_3 ( var_6 ) ) ; type_2 . i ( var_3 , ( string_2 + ( var_5 . method_4 ( ) ) ) ) ; var_5 . setvalue ( var_7 ) ; var_4 . method_5 ( var_5 ) ; } }
[0]: public static java.lang.string format ( final int var_1, final int var_2, final int var_3, final java.lang.string pattern ) { final java.util.calendar var_4 = java.util.calendar.getinstance ( type_1. method_1 ( string_1 ) ) ; var_4. set ( var_5, var_1 ) ; var_4. set ( var_6, var_2 ) ; var_4. set ( var_7, var_3 ) ; return new type_2 ( pattern ). format ( var_4. gettime ( ) ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( true , var_2 , var_2 , var_3 ) ; type_2 . method_2 ( var_4 . method_3 ( var_3 ) ) . method_4 ( 1 ) ; type_2 . method_2 ( var_5 . method_3 ( var_3 ) ) . method_4 ( int_1 ) ; int var_6 = var_1 . method_5 ( var_4 , var_5 ) ; type_3 . assertthat ( var_6 , type_4 . method_6 ( 0 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { boolean var_1 = false ; try { type_1. method_2 ( string_1 ) ; } catch ( type_2 var_2 ) { type_3. method_3 ( string_2 ) ; if ( var_2. method_4 ( ). contains ( string_3 ) ) { var_1 = true ; } } type_4. asserttrue ( var_1 ) ; java.lang.string var_3 = type_1. method_2 ( ( ( var_4 ) + string_1 ) ) ; org.testng.assert.assertequals ( var_3, string_1 ) ; }

************

************
tgt: private void method_1 ( type_1 writer , java.lang.string classname ) throws java.io.ioexception { final java.lang.string var_2 = type_2 . method_2 ( classname ) ; if ( ! ( var_2 . isempty ( ) ) ) { writer . append ( string_1 ) . append ( var_2 ) . append ( string_2 ) . append ( var_3 ) ; } }
[0]: protected < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1, java.util.map < java.lang.class <? >, java.lang.object > var_2 ) throws type_2 { type_1 var_3 ; var_3 = type_3. method_2 ( var_1 ) ; java.util.list < type_4 > var_4 = type_5. method_3 ( var_1 ) ; for ( type_4 field : var_4 ) { method_4 ( field, var_3, var_2 ) ; } return var_3 ; }

************

************
tgt: private void method_1 ( type_1 response ) throws java.io.ioexception { response . method_2 ( ) ; java.lang.string var_1 = ( ( java.lang.string ) ( method_3 ( response ) ) ) ; response . add ( var_1 ) ; if ( method_4 ( var_1 ) ) { method_5 ( response ) ; } else { java.lang.object token ; while ( ( token = method_3 ( response ) ) != null ) { if ( ! ( token instanceof type_2 ) ) { response . add ( token ) ; } } } }
[0]: protected java.lang.boolean method_1 ( java.lang.string... params ) { try { type_1 var_1 = var_2. method_2 ( params [ 0 ], var_3 class ) ; type_2. method_3 ( string_1, var_1. tostring ( ) ) ; var_4. add ( var_1 ) ; return true ; } catch ( java.io.ioexception var_5 ) { var_5. method_4 ( ) ; return false ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( ( ( var_2 ) + string_1 ) , false ) ; method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( string_2 , method_5 ( var_3 class , var_3 class ) , method_6 ( 1 , int_1 ) ) , var_1 . method_4 ( string_2 , method_5 ( var_3 class , var_3 class ) , method_6 ( int_2 , int_3 ) ) ) ; java.lang.string var_4 = string_3 ; method_7 ( method_8 ( var_4 ) , new type_2 ( var_4 ) ) ; }
[0]: public void method_1 ( ) { data. method_2 ( var_1, 1 ) ; this. method_3 ( ). x = var_2. x ; this. method_3 ( ). y = var_2. y ; type_1 var_3 = ( ( type_2 ) ( data. method_4 ( ) ) ). method_5 ( ) ; if ( var_3!= null ) method_6 ( var_3 ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( var_2 ) { type_1 value = ( ( type_1 ) ( var_1 ) ) ; if ( this . var_3 . equals ( var_4 ) ) { return true ; } return false ; } else { if ( ! ( super . equals ( var_1 ) ) ) { return false ; } if ( ! ( var_1 instanceof type_1 ) ) { return false ; } return true ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) throws java.lang.classnotfoundexception, type_1 { try { type_2 var_2 = type_3. method_2 ( var_1, type_2. method_3 ( ) ) ; type_2 var_3 = type_4. method_4 ( ). method_5 ( var_2 ) ; return new type_5 ( ). method_6 ( var_2 ) ; } catch ( java.lang.classnotfoundexception | type_1 | type_6 var_4 ) { return type_7. method_7 ( var_4. method_8 ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.stringbuffer var_1 = new java.lang.stringbuffer ( ) ; for ( int a = 0 ; a < int_1 ; a ++ ) for ( int b = 0 ; b < int_1 ; b ++ ) { append ( var_1 , a ) ; append ( var_1 , b ) ; } var_2 = var_1 . tostring ( ) ; }
[0]: private double method_1 ( final double param ) { final int var_1 = int_1 ; final int var_2 = int_2 ; final double result ; if ( ( var_3 ) >= int_3 ) { final double var_4 = ( ( var_3 ) - var_2 ) / float_1 ; result = param - ( ( float_2 * param ) * var_4 ) ; } else { final double var_4 = ( ( var_3 ) - var_1 ) / float_1 ; result = ( ( float_2 * param ) * var_4 ) - param ; } return result ; } }

************

************
tgt: protected type_1 method_1 ( java.lang.throwable var_1 ) { type_2 var_2 = type_3 . method_2 ( var_1 ) ; if ( var_2 . method_3 ( ) ) { type_4 . error ( string_1 , var_2 ) ; } else { type_4 . method_4 ( string_2 , var_1 . method_5 ( ) ) ; } return method_6 ( var_2 ) ; }
[0]: public java.lang.boolean method_1 ( java.lang.integer token, java.lang.integer var_1, java.lang.integer var_2 ) { assert method_2 ( token ) ; type_1 < java.lang.boolean > var_3 = type_2. method_3 ( ). method_4 ( new type_3 ( var_1, var_2 ) ) ; try { return var_3. get ( ) ; } catch ( type_4 var_4 ) { var_4. method_5 ( ) ; } catch ( type_5 var_4 ) { var_4. method_5 ( ) ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { method_2 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( var_1 ) ; method_9 ( var_1 ) ; method_10 ( var_1 ) ; method_3 ( ) ; method_4 ( var_1 ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; if ( ( var_2 )!= null ) { var_1. append ( ( var_3? type_1. method_2 ( var_2 ) : var_2 ) ). append ( string_1 ) ; } var_1. append ( ( var_3? getname ( ) : method_3 ( ) ) ) ; if ( method_4 ( ) ) { var_1. append ( string_2 ). append ( method_5 ( ) ) ; } return var_1. tostring ( ) ; } return null ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_3 . method_5 ( method_6 ( ) ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; type_2 . method_4 ( this , string_1 , string_2 ) ; var_3 = ( ( type_4 ) ( method_7 ( var_4 ) ) ) ; }
[0]: public int method_1 ( java.io.inputstream var_1, int offset, int var_2 ) throws java.io.ioexception { if ( ( ( var_3. length ) + offset ) < var_2 ) { byte [ ] var_4 = new byte [ var_2 + offset ] ; type_1. method_2 ( var_3, 0, var_4, 0, var_3. length ) ; var_3 = var_4 ; } var_5 = var_1. method_1 ( var_3, offset, var_2 ) ; return var_5 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int var_2 , int var_3 ) { type_2 . method_2 ( var_4 , ( ( ( ( string_1 + string_2 ) + var_2 ) + string_3 ) + var_3 ) ) ; type_3 . method_3 ( this , ( ( ( string_4 + var_2 ) + string_3 ) + var_3 ) , var_5 ) . show ( ) ; return false ; }
[0]: public void add ( type_1 t ) { if ( ( var_1 ) == null ) { var_1. setvalue ( t ) ; var_1. method_1 ( var_2 ) ; } else { type_2 < type_1 > var_3 = new type_2 ( ) ; var_3. method_2 ( var_1 ) ; var_3. method_1 ( var_1. method_3 ( ) ) ; var_1 = var_3 ; } }

************

************
tgt: public java.util.calendar method_1 ( java.util.calendar var_1 ) { java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2 . method_2 ( var_1 . gettime ( ) ) ; if ( ( var_4 ) > ( var_6 ) ) { var_2 . add ( var_5 , 1 ) ; } if ( ( var_2 . get ( var_3 ) ) >= ( var_4 ) ) { var_2 . add ( var_5 , 1 ) ; } var_2 . set ( var_3 , var_6 ) ; return var_2 ; }
[0]: private static java.util.set < java.lang.string > method_1 ( java.lang.string var_1 ) throws type_1 { if ( var_1. isempty ( ) ) { return type_2. method_2 ( ) ; } final java.util.collection < java.lang.string > var_2 = java.util.arrays.aslist ( var_1. method_3 ( string_1, string_2 ). split ( string_3 ) ) ; return new java.util.hashset < > ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( ( var_1 ) == null ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; method_3 ( var_1 ) ; type_2 var_3 = method_4 ( ) ; if ( var_3 != null ) { var_3 . method_5 ( var_4 ) ; var_3 . method_6 ( var_5 ) ; var_3 . method_7 ( true ) ; } } method_8 ( ) ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 )!= null ) && ( var_1. method_2 ( ) ) ) { var_1. method_3 ( ) ; var_1 = null ; } if (! ( var_2. method_4 ( ) ) ) { if ( var_2 instanceof type_1 ) { } else { new type_2 ( this ). method_5 ( var_3 ). method_6 ( var_4 ). method_7 ( var_5 ). method_8 ( false ). method_9 ( var_6, null ). show ( ) ; } } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string url , java.lang.string field , type_1 value ) { if ( null == value ) { return url ; } return url + ( url . contains ( string_1 ) ? ( ( string_2 + field ) + string_3 ) + value : ( ( string_1 + field ) + string_3 ) + value ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( ) ) { type_1 var_2 = var_1. method_3 ( ) ; if (! ( var_4 ) ) { try { java.io.inputstream var_5 = new type_2 ( var_2. getdata ( ) ) ; type_3. method_4 ( type_3. method_5 ( var_5 ), string_1, new java.io.file ( string_2 ) ) ; } catch ( java.io.ioexception var_6 ) { } var_4 = true ; } } else { java.lang.system.out.println ( string_3 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { this . var_1 = var_1 ; for ( type_1 var_2 : var_3 ) var_2 . method_2 ( ) . method_3 ( var_4 , var_2 , ( ( ( this . getname ( ) ) + string_1 ) + ( this . method_4 ( ) ) ) ) ; }
[0]: private java.util.collection < java.lang.string > method_1 ( ) { type_1 var_1 = new type_1 ( var_2, type_2. method_2 ( ) ) ; if ( var_3. method_3 ( var_1 ) ) { type_3 < type_4 > response = var_3. method_4 ( var_1 ) ; type_4 var_4 = response. method_5 ( ) ; return var_4. method_6 ( ) ; } return new java.util.hashset < java.lang.string > ( ) ; }

************

************
tgt: private static type_1 method_1 ( java.lang.string query ) { type_2 var_1 = var_2 . method_2 ( var_3 , var_4 ) ; type_3 var_5 = new type_3 ( string_1 , string_2 , new type_4 ( string_3 , int_1 ) , new type_4 ( string_3 , int_2 ) ) ; return var_6 . method_3 ( var_5 , var_1 , query , type_5 . method_4 ( ) ) ; }
[0]: public void method_1 ( int size ) { type_1 var_1 = var_2. method_2 ( ). method_3 ( ) ; type_2 array = new type_2 ( var_2, var_1, size ) ; var_3. method_4 ( var_4, array ) ; type_3 field = new type_3 ( var_2 ) ; array. method_5 ( 0, field ) ; for ( int i = 1 ; i < size ; i ++ ) { array. method_5 ( i, new type_3 ( var_2 ) ) ; } var_3 = field ; var_4 = 0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = var_1 ; this . var_3 = false ; type_3 . method_2 ( ) . method_3 ( ) . method_4 ( string_2 , string_3 , java.lang.long . method_5 ( ( var_4 ? 1l : int_1 ) ) ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; } var_2 = var_3. method_3 ( var_4 ) ; method_4 ( var_2 ) ; method_5 ( new type_1 ( this, var_5, var_2, new java.lang.string [ ] { var_6, string_1 }, new int [ ] { var_7, var_8 } ) ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string start ) { if ( ( start . length ( ) ) < 1 ) return start ; for ( int i = 0 ; i < int_1 ; i ++ ) { start = type_1 . method_2 ( int_2 , start ) ; start = type_1 . method_3 ( start , int_2 ) ; } return start ; }
[0]: public void method_1 ( int i ) { if ( var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_2. method_3 ( int_1 ) ; method_4 ( var_4 [ i ] ) ; type_2. i ( string_1, ( ( string_2 + i ) + string_3 ) ) ; } else { method_4 ( var_4 [ i ] ) ; type_2. i ( string_1, ( ( string_2 + i ) + string_4 ) ) ; } }

************

************
tgt: private static boolean method_1 ( java.lang.string var_1 ) { for ( java.lang.string var_2 : var_3 ) { java.io.file path = new java.io.file ( var_1 , var_2 ) . method_2 ( ) ; if ( ! ( path . method_3 ( ) ) ) { return false ; } } return true ; }
[0]: public static boolean method_1 ( java.lang.string line ) { if ( type_1. method_2 ( line ) ) { return true ; } if ( type_1. method_3 ( line ) ) { return true ; } if ( type_1. method_4 ( line ) ) { return true ; } if ( type_1. method_5 ( line ) ) { return true ; } return false ; }

************

************
tgt: public synchronized void method_1 ( final long var_1 ) { var_2 . method_2 ( string_1 , var_1 ) ; try { var_3 . method_3 ( var_4 , var_1 ) ; var_4 = var_1 ; } catch ( type_1 var_5 ) { throw new type_2 ( ( string_2 + ( ( string_3 + string_4 ) + string_5 ) ) , var_5 ) ; } }
[0]: public void method_1 ( ) { this. var_1. method_2 ( ). method_3 ( ) ; this. var_1. method_2 ( ). method_4 ( ) ; method_5 ( var_2 ) ; method_5 ( var_3 ) ; var_4 [ var_5 ] [ var_6 ]. method_6 ( this. var_1. method_7 ( ) ) ; var_4 [ var_5 ] [ var_6 ]. method_8 ( null ) ; method_9 ( ) ; this. var_1. method_10 ( var_7 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string type , type_1 var_1 , boolean var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( type ) ; var_3 . method_3 ( var_2 ) ; var_3 . method_4 ( false ) ; var_3 . method_5 ( var_1 ) ; return var_3 ; }
[0]: public static java.util.list < type_1 > method_1 ( type_2 < type_3,?,? > t ) throws java.io.ioexception { type_4 var_1 = t. method_2 ( type_5. get ( ). method_3 ( ) ) ; java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; while ( var_1. method_4 ( ) ) { var_2. add ( var_1. method_5 ( ) ) ; } return var_2 ; }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception , type_2 , type_3 { type_4 var_1 = new type_4 ( ) ; var_1 . method_2 ( true ) ; var_1 . method_3 ( false ) ; type_5 var_2 = new type_5 ( ) ; var_2 . method_4 ( var_1 ) ; var_2 . method_9 ( method_10 ( ) ) ; var_2 . method_6 ( method_7 ( ) ) ; var_2 . method_8 ( string_1 ) ; var_2 . method_11 ( ) ; return var_2 . method_12 ( ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string var_2 ) { for ( type_1 var_3 : var_1. method_2 ( var_2 ) ) { if ( ( var_3. method_3 ( var_2 ) )!= null ) { return var_3. method_3 ( var_2 ) ; } } return null ; }

************

************
tgt: public synchronized int method_1 ( double x , type_1 var_1 ) { var_2 . setvalue ( x ) ; int var_3 = var_1 . method_2 ( ) ; int var_4 = var_1 . method_3 ( ) ; int value = ( var_4 + ( var_2 . method_4 ( var_5 , var_6 , ( ( var_3 - ( int_1 * var_4 ) ) - ( var_7 ) ) ) ) ) - ( var_1 . method_5 ( ) ) ; return value ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; method_2 ( var_1. method_3 ( ) ) ; var_2. settext ( var_3 ) ; if ( ( ( type_1 ) ( getactivity ( ) ) ). method_4 ( ). method_5 ( ) ) { var_4. method_6 ( var_5 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 . init ( ) ; int var_1 = type_1 . method_1 ( ) ; while ( true ) { type_1 . method_2 ( var_1 ) ; if ( var_1 == 0 ) break ; var_1 = type_1 . method_1 ( ) ; } }
[0]: protected final java.lang.string method_1 ( ) { java.lang.string token = this. method_2 ( string_1 ) ; if ( token == null ) { token = this. method_3 ( string_1 ) ; if ( token == null ) { token = this. getstring ( string_1 ) ; } } return token ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) throws type_3 { var_3 . info ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; type_4 var_4 = var_5 . method_3 ( string_3 ) ; var_4 . method_4 ( 1 , var_1 . getname ( ) ) ; var_4 . method_4 ( int_1 , var_1 . method_5 ( ) . get ( 0 ) . getid ( ) ) ; var_4 . method_4 ( int_2 , var_2 . getname ( ) ) ; var_4 . method_6 ( ) ; }
[0]: public void method_1 ( type_1 path ) { if ( ( ( var_1 )!= null ) && ( var_2. contains ( var_1 ) ) ) method_2 ( var_2. method_3 ( var_1 ) ) ; var_1 = path ; if ( var_2. contains ( var_1 ) ) method_2 ( var_2. method_3 ( var_1 ) ) ; }

************

************
tgt: public type_1 add ( type_2 var_1 , type_3 file ) { type_1 result = new type_1 ( ) ; try { var_2 . method_1 ( var_1 , file ) ; result . method_2 ( true ) ; result . method_3 ( string_1 ) ; return result ; } catch ( java.lang.exception var_3 ) { type_5 . error ( string_2 , var_3 ) ; result . method_3 ( var_3 . method_4 ( ) ) ; return result ; } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_3. method_2 ( ) ) ) ; java.lang.integer var_4 = java.lang.integer.parseint ( ( ( java.lang.string ) ( var_5. method_2 ( ) ) ) ) ; var_6. method_3 ( var_7, var_2, var_4 ) ; var_8. method_4 ( ) ; method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 < type_1 > var_1 ) throws type_3 { type_4 < type_1 > source = var_2 . method_2 ( var_1 ) ; if ( ( source != null ) && ( source . method_3 ( ) ) ) { type_5 < type_1 > var_3 = type_6 . method_5 ( source . method_6 ( ) , var_1 ) ; type_1 var_4 = var_3 . method_7 ( var_1 , source ) ; return var_4 ; } return null ; }
[0]: public void method_1 ( android.view.view view ) { java.util.calendar var_1 = java.util.calendar.getinstance ( ) ; new type_1 ( context, var_2, var_1. get ( var_3 ), ( ( var_1. get ( var_4 ) ) + 1 ), var_1. get ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_2 ( this . var_3 ) ; var_1 . method_2 ( this . label ) ; var_1 . method_4 ( this . var_5 ) ; var_1 . method_4 ( this . var_6 ) ; var_1 . method_4 ( this . var_7 ) ; var_1 . method_3 ( this . var_8 ) ; var_1 . method_3 ( this . to ) ; var_1 . method_2 ( this . var_9 ) ; var_1 . method_3 ( this . var_2 ) ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { int var_2 = 0 ; int var_3 = 0 ; for ( type_2 var_4 : var_5 ) { var_2 += method_2 ( var_4, var_6 ) ; var_3 += method_2 ( var_4, var_7 ) ; } var_1. method_3 ( ( var_2 > var_3? var_8 : var_9 ) ) ; return var_1 ; }

************

************
tgt: private android.view.view method_1 ( int position , android.view.view var_1 ) { type_1 view ; if ( ( var_1 == null ) || ( ! ( var_1 instanceof type_1 ) ) ) { view = new type_1 ( context , null ) ; } else view = ( ( type_1 ) ( var_1 ) ) ; view . method_2 ( var_2 . gettext ( position ) , var_3 . gettext ( position ) ) ; return view ; }
[0]: public int method_1 ( android.content.intent intent, int var_1, int var_2 ) { type_1 var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) ; type_2 var_5 = new type_3 ( this ). method_3 ( string_1 ). method_4 ( string_2 ). method_5 ( var_6 ). method_6 ( true ). build ( ) ; method_7 ( var_7, var_5 ) ; return var_8 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 var_2 ) throws type_3 { type_4 element = var_1 . method_2 ( ) ; type_4 var_3 = type_5 . method_3 ( element , var_4 ) ; type_6 var_5 = var_3 . method_4 ( var_6 ) ; for ( int i = 0 ; i < ( var_5 . method_5 ( ) ) ; ++ i ) method_6 ( var_5 . item ( i ) , var_2 ) ; }
[0]: public java.lang.string method_1 ( java.lang.string id ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( ( var_1. get ( i ). method_2 ( ) ) == id ) { return var_1. get ( i ). getname ( ) ; } } return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 params ) { final type_1 var_2 = var_3 . method_1 ( var_1 , params ) ; if ( var_2 == null ) { return null ; } return new type_1 ( ) { public java.lang.string method_2 ( ) { return var_4 ; } public void start ( type_4 listener ) { var_2 . start ( listener ) ; } public void method_3 ( ) { var_2 . method_3 ( ) ; } } ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 [ ] var_2 = method_2 ( var_1 ) ; type_2. assertthat ( string_2, var_2. length, type_3. method_3 ( 1 ) ) ; method_4 ( string_3, var_2 [ 0 ], string_4, string_5, 1, null ) ; }

************

************
tgt: public java.net.url method_1 ( java.lang.string name ) { var_1 . method_2 ( string_1 , name ) ; java.net.url url = method_3 ( name ) ; if ( url != null ) { var_1 . method_2 ( string_2 , name ) ; return url ; } var_1 . method_2 ( string_3 ) ; return super . method_1 ( name ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; type_4 var_3 = var_2. method_3 ( ) ; var_3. method_4 ( ) ; var_3. method_5 ( var_1 ) ; var_3. method_6 ( ). commit ( ) ; }

************

************
tgt: public void execute ( type_1 var_1 , android.content.context var_2 ) { type_2 var_3 = type_2 . method_1 ( var_2 ) ; if ( var_3 . method_2 ( ) ) { var_3 . method_3 ( true ) ; type_3 . method_5 ( var_2 ) . method_6 ( getconfig ( ) . get ( string_1 ) , true ) ; } }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1. method_2 ( ) ; var_2. method_2 ( ) ; var_3. method_2 ( ) ; var_4. method_2 ( ) ; var_5. method_3 ( this ) ; var_6. method_4 ( false ) ; var_7. method_4 ( false ) ; var_8. method_4 ( false ) ; var_9 = false ; var_10 = false ; var_11 = false ; var_12 = false ; this. var_13 = var_14 ; }

************

************
tgt: public int [ ] [ ] method_1 ( ) { int [ ] [ ] out = new int [ var_2 . length ] [ var_2 [ 0 ] . length ] ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) for ( int j = 0 ; j < ( var_2 [ 0 ] . length ) ; j ++ ) out [ i ] [ j ] = var_2 [ i ] [ j ] ; return out ; }
[0]: public static void main ( java.lang.string... args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = var_1. method_1 ( type_3. method_2 ( ). method_3 ( string_1 ) ). method_1 ( type_3. method_2 ( ). method_3 ( string_2 ) ). method_4 ( ). method_5 ( ). build ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ! ( this . method_2 ( ) ) ) && ( ( ( var_1 . method_3 ( ) ) == ( var_2 ) ) || ( ( var_1 . method_4 ( ) ) == ( var_2 ) ) ) ) { method_5 ( ) ; } }
[0]: public void method_1 ( final char [ ] data ) { int var_1 = ( data. length ) * ( var_2 ) ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_3. method_4 ( type_1. method_5 ( data ), ( ( var_4 ) + ( position ) ), var_1 ) ; position += var_1 ; }

************

************
tgt: private static void method_1 ( double var_1 , type_1 var_2 , type_2 var_3 ) { if ( ( var_1 < ( var_4 ) ) || ( var_1 > ( var_5 ) ) ) { return ; } else { type_3 value = new type_3 ( var_1 ) ; type_4 key = type_4 . method_2 ( var_2 , var_3 ) ; type_5 var_6 = type_5 . get ( var_2 ) ; var_7 . put ( key , value ) ; var_6 . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { type_1 var_2 = var_3 ; var_4 = string_1 ; } else { var_4 = var_1. format ( var_5 ). tostring ( ) ; value = ( ( method_2 ( ) ) + string_2 ) + ( method_3 ( ) ) ; var_6 = var_1 ; } }

************

************
tgt: public void update ( ) { if ( var_1 ) { method_1 ( ) ; var_2 . method_2 ( new type_1 ( var_3 . method_3 ( ) . method_4 ( ) , var_3 . method_3 ( ) . method_5 ( ) , 0.0f ) ) ; if ( ( method_8 ( ) ) == ( type_2 . method_9 ( ) . var_4 ) ) method_10 ( ) ; if ( ( var_3 . method_3 ( ) . method_6 ( ) ) <= 0.0f ) { method_7 ( ) ; } } }
[0]: public void method_1 ( int position, float var_1, int var_2 ) { if ( position > 0 ) { if ( ( var_3 ) == 0 ) { var_3 = ( var_4. method_2 ( ) ) / ( var_4. method_3 ( ). method_4 ( ) ) ; } float var_5 = ( var_3 ) * ( var_1 + position ) ; method_5 ( var_5 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string source , type_1 var_1 , type_2 var_2 , java.lang.string filename ) { type_3 var_3 = type_4 . method_2 ( source , var_2 , filename ) ; type_5 var_4 = new type_6 ( var_3 . method_3 ( ) , type_7 . method_4 ( ) , type_8 . method_5 ( ) , null , var_5 , type_9 . method_6 ( var_5 , var_6 ) ) ; return type_4 . method_1 ( var_3 , var_4 , var_5 , source , var_1 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2. method_2 ( null, var_1 ) ; type_3 var_2 = new type_3 ( var_1 ) ; type_2. method_2 ( null, var_2 ) ; var_2. method_3 ( string_1 ) ; type_4. asserttrue ( var_2. method_4 ( ). get ( 0 ). equals ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 answer = var_1 . method_2 ( null ) ; assertnotnull ( answer ) ; method_3 ( answer . method_4 ( ) ) ; assertequals ( type_2 . method_5 ( ) , answer . method_6 ( ) ) ; method_3 ( answer . method_7 ( ) ) ; method_3 ( answer . method_8 ( ) ) ; assertequals ( ( ( java.lang.integer ) ( 0 ) ) , answer . method_9 ( ) ) ; assertnotnull ( answer . getid ( ) ) ; }
[0]: public void method_1 ( float var_1 ) { var_2 += var_1 ; if ( ( var_2 ) > ( var_3 ) ) { method_2 ( ) ; var_4. method_1 ( var_1 ) ; if ( var_4. method_3 ( ) ) var_4. method_2 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 item ) { if ( ( item . method_2 ( ) ) == ( var_1 ) ) { android.content.intent var_2 = new android.content.intent ( this , var_3 class ) ; method_3 ( var_2 ) ; return true ; } else return super . method_1 ( item ) ; }
[0]: public void method_1 ( ) { try { var_1. method_1 ( ) ; } catch ( java.lang.throwable t ) { type_1. error ( string_1, t ) ; } try { var_2. method_1 ( ) ; } catch ( java.lang.throwable t ) { type_1. error ( string_2, t ) ; } if ( ( var_3 )!= null ) { try { var_3. method_2 ( ) ; } catch ( java.lang.throwable t ) { type_1. error ( string_3, t ) ; } } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.util.map < java.lang.string , java.lang.string [ ] [ ] > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( string_1 , new java.lang.string [ ] [ ] { new java.lang.string [ ] { string_2 , string_3 , string_4 } } ) ; var_1 . put ( string_5 , new java.lang.string [ ] [ ] { new java.lang.string [ ] { string_2 , string_3 , string_4 } , new java.lang.string [ ] { string_2 , string_3 , string_4 } } ) ; method_2 ( var_1 ) ; }
[0]: public void execute ( ) throws java.lang.exception { var_1 = var_2. size ( ) ; for ( type_1 var_3 : var_2 ) { if ( var_4 ) { return ; } method_1 ( java.lang.string.format ( string_1, var_3. tostring ( ) ) ) ; try { var_3. method_2 ( ) ; } catch ( java.lang.exception var_5 ) { type_2. method_3 ( ). method_4 ( var_5 ) ; } ( var_6 ) ++ ; } } }

************

************
tgt: public void update ( ) { var_1 . set ( var_2 . method_1 ( string_1 ) ) ; var_3 . set ( var_2 . method_1 ( string_2 ) ) ; var_5 = var_2 . method_2 ( ) ; var_6 = var_7 . method_3 ( var_2 . method_4 ( ) ) ; }
[0]: public void method_1 ( final type_1 var_1, final int var_2 ) { android.content.intent intent = new android.content.intent ( this, var_3 class ) ; intent. method_2 ( string_1, var_1. method_3 ( ) ) ; intent. method_2 ( string_2, var_1. method_4 ( ) ) ; intent. method_5 ( string_3, ( ( java.util.arraylist <? extends type_2 > ) ( var_1. method_6 ( ) ) ) ) ; intent. method_2 ( string_4, var_2 ) ; method_7 ( intent ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string message ) { java.lang.string var_1 = type_2 . method_2 ( ) . getclass ( ) . method_3 ( ) . getname ( ) ; java.lang.string var_2 = var_1 . substring ( ( ( var_1 . method_4 ( string_1 ) ) + 1 ) ) ; switch ( var_2 ) { case string_2 : return new type_3 ( message ) ; default : throw new type_4 ( ( var_2 + string_3 ) ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1 ) ; java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; list. add ( var_1 ) ; var_2. method_3 ( list ) ; type_2. assertequals ( var_2. method_4 ( ), list ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , int var_2 ) { long var_3 = ( type_3 . method_4 ( ) ) - ( starttime ) ; final type_1 var_4 = var_5 . method_2 ( var_1 ) ; final type_2 var_6 = new type_2 ( ( ( ( ( var_1 + string_1 ) + var_2 ) + string_1 ) + var_3 ) ) ; method_3 ( ( ( ( ( var_1 + string_1 ) + var_2 ) + string_1 ) + var_3 ) , var_6 , var_4 ) ; starttime = type_3 . method_4 ( ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string path ) { if ( ( path == null ) || ( ( path. length ( ) ) == 0 ) ) return path ; java.lang.stringbuilder buf = type_1. method_1 ( null, path ) ; return buf == null? path : buf. tostring ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { long [ ] [ ] temp = new long [ n ] [ n ] ; var_5 . method_3 ( temp , var_3 ) ; var_2 . method_2 ( temp ) ; if ( var_4 . isempty ( ) ) var_5 . method_3 ( var_3 , var_5 . method_4 ( var_3 , var_6 ) ) ; else var_5 . method_3 ( var_3 , var_4 . method_5 ( ) ) ; var_5 . method_6 ( var_7 , var_8 , var_3 , var_6 ) ; }
[0]: public void method_1 ( ) throws type_1 { var_1 = new type_2 ( var_2 ) ; type_3 var_3 = new type_3 ( null ) ; var_3. execute ( ) ; var_3. method_2 ( new type_4 ( ) { public void method_3 ( java.lang.string var_4 ) { result = var_4 ; var_1. method_4 ( ) ; } } ) ; var_1. method_5 ( ) ; assertnotnull ( result ) ; assertequals ( string_1, result ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { java.lang.double value = setvalue ( var_1 . getvalue ( ) ) ; if ( value != null ) { var_2 . method_2 ( path ) . setvalue ( ( value + var_3 ) ) ; } else { var_2 . method_2 ( path ) . setvalue ( var_3 ) ; } } catch ( java.lang.exception var_4 ) { type_2 . method_3 ( string_1 , var_4 . tostring ( ) ) ; } }
[0]: public void method_1 ( ) { while ( ( var_1. size ( ) ) > 1 ) { type_1. method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( method_7 ( ) ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { return java.lang.string.format ( string_1 , method_1 ( ) . method_2 ( ) , method_3 ( ) . method_2 ( ) , ( 1.0 - ( method_4 ( ) ) ) , this . var_1 , ( method_1 ( ) . method_5 ( ) ? 0 : 1 ) , this . var_2 , this . var_3 , this . var_4 , ( method_3 ( ) . method_5 ( ) ? 0 : 1 ) , this . var_5 , this . var_6 , this . var_7 ) ; }
[0]: public type_1 method_1 ( type_2 id, java.lang.string name, type_3 var_1, java.lang.string var_2 ) { type_1 var_3 = null ; if ( method_2 ( id ) ) { var_3 = new type_1 ( id, name, var_1 ) ; var_4. add ( var_3, var_2 ) ; type_4. info ( string_1, id, name, var_1 ) ; } else { type_4. info ( string_2, id, name, var_1 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , type_1 { java.util.list < type_2 > var_1 = var_2 . method_2 ( ( string_1 + ( new java.io.file ( var_3 ) . getname ( ) ) ) , var_4 , var_5 , var_6 ) ; var_7 . method_3 ( var_1 ) ; var_7 . method_4 ( ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( java.lang.string. method_3 ( var_2. execute ( new int [ ] { - 1, var_3, - 1, - 1, - 1 }, var_1 ) ), 1 ) ; var_1. method_2 ( java.lang.string. method_3 ( var_2. execute ( new int [ ] { - 1, - 1, var_4, - 1, - 1 }, var_1 ) ), 1 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( ) . method_3 ( ) ; var_1 . method_4 ( string_1 ) . put ( string_1 , string_2 ) ; var_1 . commit ( ) ; assertequals ( 0l , method_5 ( var_1 ) ) ; var_1 . method_6 ( ) ; try { method_2 ( ) . method_7 ( ) . method_3 ( ) ; fail ( ) ; } catch ( type_2 var_2 ) { var_2 . method_8 ( ) ; assertequals ( string_3 , var_2 . method_9 ( ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_1. substring ( 0, 1 ) ; if ( var_2. equals ( var_3 ) ) { message = string_1 ; } else if ( var_2. equals ( var_4 ) ) { message = string_2 ; result = java.lang.integer.parseint ( var_1. split ( string_3 ) [ 1 ] ) ; } else { message = string_4 ; message += var_1. split ( string_3 ) [ 1 ] ; } }

************

************
tgt: private boolean method_1 ( ) { java.lang.string var_1 = var_2 . method_2 ( ) ; if ( type_1 . method_3 ( var_1 ) ) { var_1 = method_4 ( ) ; } return ( type_1 . method_5 ( var_1 ) ) && ( ( string_1 . method_6 ( var_1 ) ) || ( string_2 . method_6 ( var_1 ) ) ) ; }
[0]: public static type_1 method_1 ( final type_2 var_1, final type_3 t, final java.util.list < type_4 > var_2, final java.util.list < type_4 > var_3, final java.util.set < type_4 > var_4, final boolean var_5 ) { final type_1 result = type_5. method_2 ( t, var_2, var_3 ) ; if ( result!= null ) { return result ; } return type_5. method_3 ( var_1, t, var_2, var_3, var_4, var_5 ) ; }

************

************
tgt: public int compareto ( java.lang.object t ) { if ( ( var_1 ) < ( ( ( type_1 ) ( t ) ) . var_1 ) ) return 1 ; else if ( ( var_1 ) > ( ( ( type_1 ) ( t ) ) . var_1 ) ) return - 1 ; else return 0 ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string title ) { if ( var_2. method_2 ( title ) ) { var_3. add ( var_2. get ( title ). get ( 0 ) ) ; var_2. get ( title ). remove ( 0 ) ; } else { java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > var_1 = type_2 . method_2 ( ) ; int i = 0 ; for ( type_3 var_2 : this . method_3 ( ) ) { if ( i < ( var_1 . size ( ) ) ) var_1 . get ( i ) . method_4 ( ( ( java.lang.string ) ( var_2 . method_5 ( ) . method_6 ( ) ) ) ) ; i ++ ; } }
[0]: private int method_1 ( byte [ ] var_1 ) { int size = var_1. length ; int var_3 = ( var_4 ) - ( ( var_2 ) % ( var_4 ) ) ; if ( var_3 < size ) { var_2 += var_3 + ( var_5 ) ; } method_2 ( var_2 ) ; var_2 += method_3 ( var_6, var_2, var_1 ) ; return size ; }

************

************
tgt: private void method_1 ( ) { new type_1 ( var_1 ) . execute ( var_2 . getid ( ) ) ; new type_2 ( var_3 ) . execute ( var_2 . getid ( ) ) ; try { var_4 = type_3 . method_2 ( getactivity ( ) , var_2 . getid ( ) ) ; method_3 ( ) ; } catch ( java.lang.exception var_5 ) { type_4 . i ( var_6 , var_5 . method_5 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1 = false ; for ( int i = ( var_2 ) - 1 ; i > 0 ; i -- ) { int var_3 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2 ) ) ) + 1 ; type_1 temp = var_4 [ i ] ; var_4 [ i ] = var_4 [ var_3 ] ; var_4 [ var_3 ] = temp ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( method_3 ( ) ) != null ) { var_2 = method_3 ( ) . getstring ( var_3 ) ; var_4 = method_3 ( ) . getstring ( var_5 ) ; } }
[0]: public void method_1 ( android.view.view view ) { if ( (! ( var_1. equals ( string_1 ) ) ) && ( ( var_2 ) == 1 ) ) { method_2 ( ) ; } else type_1. method_3 ( method_4 ( ), string_2, var_3 ). show ( ) ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( ( method_2 ( ) ) == null ) throw new type_1 ( string_1 ) ; var_3 . method_5 ( ( ( var_3 . method_6 ( ) ) + 1 ) , var_1 ) ; if ( var_2 ) { method_3 ( true , method_4 ( ) ) ; } }
[0]: public type_1 method_1 ( ) throws type_2 { type_3 state = method_2 ( method_3 ( ) ) ; if ( state == ( var_1 ) ) { try { return method_4 ( method_5 ( ) ) ; } catch ( type_2 var_2 ) { if ( (! ( var_2. method_6 ( ). equals ( type_4. tostring ( ) ) ) ) || (! ( method_3 ( ) ) ) ) throw var_2 ; } } assert ( method_7 ( ) ) == ( var_3 ) ; var_4. info ( string_1 ) ; return method_8 ( ) ; } }

************

************
tgt: public java.io.bufferedwriter method_1 ( ) throws java.io.ioexception { if ( ( this . var_1 ) >= ( var_2 ) ) { this . method_3 ( ) ; this . var_1 = 0 ; this . file = this . method_4 ( ) ; this . writer = new java.io.bufferedwriter ( new java.io.filewriter ( this . file ) ) ; } ( this . var_1 ) ++ ; return this . writer ; }
[0]: public java.lang.object method_1 ( java.lang.string name ) { if ( var_1. method_2 ( ). contains ( name ) ) { return new type_1 ( false, name ) ; } else if ( var_2. method_3 ( ). contains ( name ) ) { return new type_1 ( true, var_2. get ( name ) ) ; } else { return null ; } }

************

************
tgt: public type_1 method_1 ( type_2 context , type_3 method , type_1 [ ] args , type_4 var_1 ) { context . method_2 ( this , this , var_1 ) ; try { return method . execute ( this , args , var_1 ) ; } finally { context . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return ; } switch ( var_3 ) { case var_4 : var_1. add ( var_2. getname ( ) ) ; break ; case var_5 : var_1. add ( type_2. method_2 ( string_1 ) ) ; break ; case var_6 : var_1. add ( type_2. method_2 ( string_2 ) ) ; break ; } }

************

************
tgt: static boolean method_1 ( type_1 [ ] [ ] var_1 , type_2 var_2 ) { if ( var_3 ) { return ( ( var_5 ) + ( var_2 . length ) ) >= ( var_1 . length ) ; } return ( ( var_4 ) + ( var_2 . length ) ) >= ( var_1 [ var_5 ] . length ) ; }
[0]: public void method_1 ( ) { try { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( var_2 class. method_3 ( string_1 ) ) ; type_2 var_3 = var_1. method_4 ( ) ; var_4. method_5 ( var_3 ) ; type_3 var_5 = var_1. method_6 ( ) ; var_5. method_7 ( this. var_6 ) ; } catch ( java.lang.exception var_7 ) { var_7. method_8 ( ) ; } }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string data , type_1 var_1 ) { java.lang.string var_2 = string_1 ; switch ( var_1 ) { case var_3 : var_2 = data ; break ; case var_4 : var_2 = type_2 . method_2 ( data ) ; break ; case var_5 : var_2 = type_2 . method_3 ( data ) ; break ; default : break ; } return var_2 ; }
[0]: private type_1 method_1 ( type_2 method, java.util.iterator < type_3 > var_1, type_1 handle ) { this. var_2 = var_3 ; type_4 var_4 = new type_4 ( handle ) ; if ( var_4. method_2 ( ) ) { this. method_3 ( method, var_1, var_4 ) ; } else { this. method_4 ( method, var_1, var_4 ) ; } return var_4. method_5 ( ) ; }

************

************
tgt: protected void method_1 ( ) { type_1 var_1 = method_2 ( ) ; type_2 var_2 = var_3 . method_5 ( ) ; var_2 . method_6 ( var_1 . method_3 ( ) ) ; var_1 . method_7 ( method_8 ( ( ( type_3 ) ( var_3 ) ) ) ) ; type_4 . method_9 ( var_3 . method_10 ( ) , var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { type_3 var_2 = new type_3 ( var_1 ) ; type_4 id = this. var_3. method_2 ( var_2 ) ; var_4. info ( java.lang.string.format ( string_1, id, var_1. getname ( ) ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { if ( var_2 . contains ( var_1 ) ) return false ; var_2 . method_2 ( var_1 ) ; if ( ( var_2 . size ( ) ) > ( var_5 . method_3 ( var_6 , var_6 ) ) ) method_4 ( var_2 . method_5 ( ) , var_6 ) ; return true ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { method_2 ( var_2 ) ; if ( ( var_3. method_3 ( ) ) <= ( var_1. method_3 ( ) ) ) { method_4 ( var_1 ) ; } method_2 ( var_4 ) ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; if ( ( type_1 . method_3 ( this ) ) && ( var_2 . method_4 ( ) ) ) { int var_3 = type_2 . method_5 ( this , var_4 ) ; if ( var_3 != ( var_5 ) ) { type_4 . method_7 ( this , new java.lang.string [ ] { var_4 } , var_6 ) ; } else { var_7 . method_8 ( ) ; } } else { var_8 . show ( ) ; } }
[0]: public static void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( string_1 ) ; java.lang.string time ; java.util.date date ; java.util.date date = var_1. method_2 ( string_2 ) ; time = var_1. format ( date ) ; java.io.file var_2 = new java.io.file ( string_3 ) ; type_2 var_3 = new type_2 ( int_1, var_4, string_4, string_5, string_6, string_7, var_2, int_2, var_5, time, 0, null, int_3 ) ; type_3 var_6 = new type_4 ( ) ; type_5 message = var_6. method_1 ( var_3 ) ; }

************

************
tgt: public double method_1 ( type_1 var_1 , type_1 var_2 , int var_3 ) { int x = ( var_2 . x ) - ( var_1 . x ) ; int y = ( var_2 . y ) - ( var_1 . y ) ; double var_4 = ( java.lang.math.abs ( type_2 . method_2 ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( var_5 . method_3 ( ) ) ; type_3 . i ( string_1 , ( string_2 + var_4 ) ) ; return var_4 / var_3 ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_2 == ( var_3 ) ) { type_1 var_4 = data. method_2 ( var_5 ) ; if ( null!= var_4 ) { switch ( var_1 ) { case var_6 : var_7. method_3 ( ( ( var_8. size ( ) ) - 1 ) ) ; break ; case var_9 : var_7. method_4 ( var_10 ) ; break ; } } } }

************

************
tgt: public void method_1 ( ) { var_1 . add ( new type_1 ( method_2 ( ) . getstring ( var_2 ) , method_2 ( ) . getstring ( var_3 ) ) ) ; var_1 . add ( new type_1 ( method_2 ( ) . getstring ( var_4 ) , method_2 ( ) . getstring ( var_5 ) ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, java.lang.throwable t ) { type_3. method_2 ( string_1, ( string_2 + ( t. tostring ( ) ) ) ) ; var_2. method_3 ( false ) ; type_4. method_4 ( var_3 ) ; var_4. method_5 ( var_5 ) ; var_6. method_6 ( ). method_7 ( 0 ) ; var_7. method_5 ( var_5 ) ; var_8. method_5 ( var_5 ) ; }

************

************
tgt: protected void method_1 ( type_1 result ) { var_1 = result ; var_2 . method_2 ( var_3 ) ; var_4 . method_3 ( var_1 ) ; if ( ( var_5 ) >= 0 ) { int position = var_1 . method_4 ( var_5 ) ; type_2 . method_5 ( var_6 , ( ( ( string_1 + ( var_5 ) ) + string_2 ) + position ) ) ; var_4 . method_6 ( position ) ; } }
[0]: public void method_1 ( ) { java.util.collections.sort ( method_2 ( ) ) ; for ( int var_1 : method_2 ( ) ) { java.util.set < java.lang.integer > var_2 = method_3 ( ). method_4 ( var_1, ( var_1 + int_1 ) ) ; for ( int var_3 : var_2 ) { int var_4 = var_3 - var_1 ; if ( ( var_4 > 0 ) && ( var_4 <= int_2 ) ) { ( method_5 ( ) [ ( var_4 - 1 ) ] ) ++ ; } } } }

************

************
tgt: public double method_1 ( ) { double var_2 = var_3 . method_2 ( var_1 . get ( 0 ) ) ; double var_4 = 0 ; for ( int i = 1 ; i < ( var_1 . size ( ) ) ; i ++ ) { double var_5 = var_3 . method_2 ( var_1 . get ( i ) ) ; var_4 += var_5 - var_2 ; var_2 = var_5 ; } return var_4 / ( ( var_1 . size ( ) ) - 1 ) ; }
[0]: public static void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { java.util.hashmap < java.lang.string, java.lang.object > var_2 = new java.util.hashmap < java.lang.string, java.lang.object > ( ) ; java.util.scanner var_3 = new java.util.scanner ( new java.io.filereader ( var_1 ) ) ; while ( var_3. method_2 ( ) ) { java.lang.string var_4 = var_3. method_3 ( ) ; var_2. put ( var_4, null ) ; } var_5 = var_2 ; java.lang.system.out.println ( var_5. size ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = string_1 ; int var_2 = int_1 ; type_1 var_3 = method_2 ( var_4 , var_1 , var_2 ) ; var_5 . method_3 ( var_3 ) . get ( ) ; type_2 . assertequals ( 1 , var_6 . method_4 ( ) ) ; var_1 = string_2 ; var_2 = int_1 ; type_1 var_7 = method_2 ( var_4 , var_1 , var_2 ) ; var_5 . method_3 ( var_7 ) . get ( ) ; type_2 . assertequals ( int_2 , var_6 . method_4 ( ) ) ; }
[0]: public < type_1 > type_1 method_1 ( type_2 < type_1 > var_1, type_3 var_2 ) { return ( ( var_2 == ( var_3 ) ) || ( var_2 == null ) ) && ( var_1 == ( var_4 ) )? ( ( type_1 ) ( var_5 ) ) : null ; }

************

************
tgt: public double method_1 ( ) { if ( ( context . method_2 ( ) ) == 0 ) { return ( var_1 ) / ( ( var_2 ) + ( var_3 ) ) ; } else { return ( ( var_2 ) - ( var_1 ) ) / ( ( var_2 ) + ( var_3 ) ) ; } }
[0]: public boolean method_1 ( int var_1, int var_2 ) { int var_3 = method_2 ( ) ; int var_4 = method_3 ( ) ; if ( (! ( method_4 ( ) ) ) || (! ( var_5 class. method_5 ( this ) ) ) ) { if ( this. method_6 ( ) ) { this. var_6 [ ( var_2 - var_4 ) ] = true ; return true ; } else { this. var_6 [ ( var_1 - var_3 ) ] = true ; return true ; } } return false ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( this . method_2 ( ) ) & ( - int_1 ) ) == 0 ) return ; if ( ( ! ( this . var_1 ) ) && ( ( var_2 ) != ( ( ( this . method_2 ( ) ) & int_2 ) != 0 ) ) ) { var_2 = ! ( var_2 ) ; var_3 = true ; method_3 ( ) ; } else type_1 . method_4 ( var_4 , var_5 , var_6 , var_7 , var_2 ) ; }
[0]: private void method_1 ( ) { if ( ( ( var_1 ) == null ) && ( ( getcontext ( ) )!= null ) ) { var_1 = new type_1 ( getcontext ( ), getcontext ( ). getstring ( var_2 ), getactivity ( ). method_2 ( var_3. content ) ) ; } var_1. method_3 ( ) ; }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string var_2 , java.lang.string message ) { java.lang.string var_1 = string_1 ; int var_3 = ( ( var_2 . length ( ) ) - ( message . length ( ) ) ) - int_1 ; for ( int i = 0 ; i < var_3 ; i ++ ) { var_1 = var_1 + string_3 ; } return var_1 ; }
[0]: private type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2. set ( string_1, string_2 ) ; type_3 < java.lang.string > var_3 = new type_3 < java.lang.string > ( string_3, var_2 ) ; type_4 < java.lang.string > results = var_4. method_2 ( var_1, var_5, var_3, var_6. string class ) ; try { type_1 var_7 = new type_1 ( results. method_3 ( ) ) ; return var_7 ; } catch ( type_5 var_8 ) { var_8. method_4 ( ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 context , type_2 var_1 , type_3 value , java.lang.string var_2 , type_4 event , type_5 < type_3 > var_3 ) { java.lang.string var_4 ; if ( var_2 == null ) { var_4 = method_2 ( value ) ; } else { var_4 = var_2 ; } if ( type_6 . equals ( event . gettype ( ) ) ) { type_7 . method_3 ( var_4 , var_1 ) ; } else { super . method_1 ( context , var_1 , value , event , var_3 ) ; } }
[0]: public static int method_1 ( ) { java.util.hashmap < java.lang.string, java.util.set < java.lang.string > > var_1 = var_2 ; int var_3 = 0 ; var_4. method_2 ( ) ; for ( java.lang.string url : var_5 ) { if ( type_1. method_3 ( url ) ) { var_3 ++ ; } else { var_6. method_4 ( ( ( string_1 + url ) + string_2 ) ) ; var_4. put ( url, var_1. get ( url ) ) ; } } return var_3 ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) != ( var_2 ) ) { var_1 . method_1 ( ) ; } else { var_1 . setstate ( var_3 , true ) ; type_1 var_4 = new type_1 ( var_1 , this ) ; var_5 . method_3 ( var_4 , ( ) - > { } ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.list < java.util.list < java.lang.integer > > list = new type_1 ( ). method_1 ( int_1, int_2 ) ; for ( int i = 0 ; i < ( list. size ( ) ) ; i ++ ) { for ( int k : var_1 ) java.lang.system.out.print ( ( k + string_1 ) ) ; } java.lang.system.out.println ( ) ; } }

************

************
tgt: private static type_1 method_1 ( type_1 field ) { type_1 [ ] var_1 = field . method_2 ( ) ; if ( ( ( ( ( var_1 . length ) > 0 ) && ( ( var_1 [ 0 ] ) != null ) ) && ( string_1 . equals ( var_1 [ 0 ] . name ( ) ) ) ) && ( type_2 . equals ( var_1 [ 0 ] . type ( ) ) ) ) { return var_1 [ 0 ] . method_2 ( ) [ 0 ] ; } return field ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( int i = var_2 ; i < ( var_3 ) ; i ++ ) { if (! ( var_1. isempty ( ) ) ) { var_1 += string_2 ; } var_1 += i + string_3 ; } return var_1 ; }

************

************
tgt: private int method_1 ( type_1 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; if ( var_2 . equals ( var_4 ) ) { int var_5 = var_6 . method_3 ( var_7 . length ) ; return var_7 [ var_5 ] ; } method_4 ( var_1 , 1 ) ; return var_8 . get ( var_2 ) ; }
[0]: public int method_1 ( int key ) { type_1 var_1 = this. var_2. method_2 ( ) ; int var_3 = 0 ; while ( ( var_1. method_3 ( ) )!= key ) { if ( key < ( var_1. method_3 ( ) ) ) { var_1 = var_4 ; } else { var_1 = var_5 ; } if ( var_1 == null ) return - 1 ; var_3 ++ ; } return var_3 ++ ; }

************

************
tgt: private void method_1 ( int id , java.lang.string var_1 , java.lang.string name , java.lang.string var_2 ) { type_1 var_3 = new type_1 ( var_4 . method_2 ( ) , var_1 , name , var_2 ) ; if ( var_5 . method_1 ( var_3 ) ) { var_6 . set ( id , var_3 ) ; var_7 . method_3 ( ) ; } else { type_2 . method_4 ( getactivity ( ) , var_8 , var_9 ) . show ( ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( index ) ; if ( ( var_3 )!= null ) { var_2. method_2 ( var_3. method_1 ( var_1 ) ) ; } else { var_2. method_2 ( var_1 ) ; } return var_2 ; }

************

************
tgt: private void method_1 ( ) { var_1 = false ; if ( ( ( var_2 ) == null ) || ( ( params ) == null ) ) { return ; } params = var_2 . method_2 ( ) ; params . method_3 ( var_3 ) ; var_2 . method_4 ( params ) ; var_2 . method_5 ( ) ; var_1 = false ; var_4 . method_6 ( var_5 ) ; }
[0]: public type_1 update ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = var_4. method_1 ( var_2 ) ; var_1. method_2 ( var_3. method_3 ( ) ) ; var_1. settext ( var_3. gettext ( ) ) ; return var_5. method_4 ( var_3 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; var_2 . append ( string_1 ) ; var_2 . append ( string_2 ) ; var_2 . append ( ( ( string_3 + var_1 ) + string_4 ) ) ; var_2 . append ( string_5 ) ; return var_2 . tostring ( ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { java.util.set < type_2 > var_2 = var_3. method_2 ( var_1 ) ; if ( ( var_2 == null ) || ( ( var_2. size ( ) ) == 0 ) ) { return false ; } var_1. method_3 ( true ) ; var_4. method_4 ( var_1 ) ; return true ; }

************

************
tgt: java.util.set < java.lang.string > method_1 ( java.net.url url , type_1 var_1 ) throws java.io.ioexception , type_2 { if ( string_1 . equals ( url . method_2 ( ) ) ) { return method_3 ( url , var_1 ) ; } else { try ( java.io.inputstream var_2 = url . method_4 ( ) ) { return var_1 . method_5 ( var_2 ) ; } } }
[0]: private void init ( android.content.context context ) { var_1 = type_1. get ( context ). method_1 ( ) ; var_2 = method_2 ( ). method_3 ( ). var_3 ; var_4 = type_1. get ( context ). method_4 ( ) ; var_5 = new type_2 ( ) ; var_2 = method_2 ( ). method_3 ( ). var_3 ; var_5 = new type_2 ( ) ; }

************

************
tgt: public void method_1 ( ) { try { if ( ( ( var_1 ) != null ) && ( ! ( var_1 . method_2 ( ) ) ) ) { var_2 . method_3 ( ) ; var_2 . method_4 ( ) ; var_1 . method_1 ( ) ; } } catch ( java.io.ioexception var_3 ) { var_3 . method_5 ( ) ; } }
[0]: public boolean method_1 ( java.lang.string name ) { java.lang.string var_1 = ( string_1 + name ) + string_2 ; boolean result = false ; try { type_1 var_2 = var_3. method_2 ( var_1 ) ; type_2 var_4 = var_2. method_3 ( ) ; var_2. method_4 ( ) ; if ( var_4. method_5 ( ) ) result = true ; } catch ( java.lang.exception var_5 ) { var_5. method_6 ( ) ; } return result ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , int var_2 , int var_3 , long time ) { if ( var_4 ) { if ( time < ( var_5 ) ) var_6 = time ; } else { if ( time > ( var_6 ) ) var_5 = time ; } method_2 ( true ) ; }
[0]: private float method_1 ( byte var_1 ) { try { var_2. method_2 ( var_1 ) ; var_2. method_3 ( ) ; return var_3. method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.err.println ( string_1 ) ; java.lang.system.exit ( 1 ) ; return - 1.0f ; } }

************

************
tgt: public static type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( int i = 1 ; i <= int_1 ; i ++ ) { for ( int j = 0 ; j < int_2 ; j ++ ) { var_1 . method_2 ( new type_2 ( i , false , type_3 . values ( ) [ j ] ) ) ; } } var_1 . method_3 ( var_2 ) ; return var_1 ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 < type_2 > var_3 = type_1. method_2 ( var_4 class ). method_3 ( var_5 class, new type_3 ( var_1 ) ). method_3 ( var_6 class, new type_4 ( var_2 ) ). build ( ) ; return var_3 ; }

************

************
tgt: private void method_1 ( java.util.properties var_1 ) { java.lang.string var_3 = var_1 . method_3 ( var_4 ) ; var_3 = method_4 ( var_3 , var_5 ) ; if ( ! ( var_3 . equals ( var_6 ) ) ) { java.io.file var_7 = new java.io.file ( var_3 ) ; if ( var_7 . method_5 ( ) ) { var_7 . delete ( ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2 ) ; var_1. method_3 ( ( ( x ) + ( ( var_3 ) / int_1 ) ), ( ( y ) + ( ( var_3 ) / int_1 ) ), var_4, var_4 ) ; var_1. method_4 ( x, y, var_3, var_3 ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { } if ( ! ( var_1 ) ) { p . method_2 ( string_1 ) ; var_2 = 0 ; var_3 = 0 ; var_4 = 0 ; var_5 = 0 ; var_6 = 0 ; var_7 = 0 ; var_8 = 0 ; var_1 = true ; } }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1. method_2 ( method_3 ( ) ). method_4 ( var_1. method_5 ( ) ) ; if ( var_1. method_6 ( ) ) { method_7 ( var_2 ) ; method_8 ( ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.object var_1 ) { synchronized ( var_2 ) { if ( var_3 ) { return false ; } if ( var_4 ) { return false ; } type_1 var_5 = method_2 ( ) ; try { return method_3 ( var_1 ) ; } finally { var_3 = true ; var_5 . method_4 ( ) ; } } }
[0]: private void method_1 ( ) { var_1 = getintent ( ). method_2 ( string_1 ) ; type_1 var_2 = getview ( var_3 ) ; var_4 = getview ( var_5 ) ; var_2. settext ( ( ( method_3 ( ). getstring ( var_6 ) ) + ( var_1 ) ) ) ; var_7 = getview ( var_8 ) ; var_9 = getview ( var_10 ) ; var_4. method_4 ( new type_2 ( ) { public void method_5 ( android.view.view var_11 ) { method_6 ( ) ; } } ) ; } }

************

************
tgt: public static void method_1 ( type_1 p , java.lang.string msg ) { type_2 var_1 ; var_2 : for ( java.util.iterator var_3 = p . method_2 ( float_1 , float_1 , float_1 ) . iterator ( ) ; var_3 . method_3 ( ) ; ( ( type_1 ) ( var_1 ) ) . method_4 ( msg ) ) { var_1 = ( ( type_2 ) ( var_3 . method_5 ( ) ) ) ; if ( ( ! ( var_1 instanceof type_1 ) ) || ( var_1 == p ) ) break var_2 ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( var_1. x ( ), var_1. y ( ) ) ; var_3. method_2 ( var_2, var_2 ) ; return new type_4 ( var_2. x, var_2. y ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { var_4 . method_2 ( ) . add ( var_1 . method_3 ( i , var_3 [ i ] ) ) ; } }
[0]: public java.lang.boolean method_1 ( java.lang.integer var_1, java.lang.integer var_2 ) throws type_1 { try { type_2 id = new type_2 ( ) ; id. method_2 ( var_2 ) ; id. method_3 ( var_1 ) ; type_3 var_3 = var_4. method_4 ( id ) ; return var_3. method_5 ( ) ; } catch ( type_4 var_5 ) { throw new type_1 ( var_5 ) ; } }

************

************
tgt: public type_1 get ( ) { type_2 var_1 ; try { var_1 = var_2 . method_1 ( type_3 . getid ( ) ) ; } catch ( type_4 var_3 ) { try { type_5 . method_2 ( var_4 , type_3 , string_1 , var_5 , var_6 , null ) ; var_1 = var_2 . method_1 ( type_3 . getid ( ) ) ; } catch ( type_6 | java.io.ioexception var_7 ) { throw type_7 . method_3 ( var_7 ) ; } } return new type_1 ( var_1 ) ; }
[0]: public void method_1 ( int var_1, boolean var_2, android.view.view view ) { if ( ( var_1 > 0 ) && ( var_1 < ( var_3. method_2 ( ) ) ) ) { if ( var_2 ) { var_4. put ( var_1, var_2 ) ; view. method_3 ( true ) ; } else { var_4. delete ( var_1 ) ; view. method_3 ( false ) ; } } }

************

************
tgt: public static java.lang.string format ( final int var_1 , final int var_2 , final int var_3 , final java.lang.string pattern ) { final java.util.calendar var_4 = java.util.calendar.getinstance ( type_1 . method_1 ( string_1 ) ) ; var_4 . set ( var_5 , var_1 ) ; var_4 . set ( var_6 , ( var_2 - 1 ) ) ; var_4 . set ( var_7 , var_3 ) ; return new type_2 ( pattern ) . format ( var_4 . gettime ( ) ) ; }
[0]: public void method_1 ( ) { boolean error = false ; for ( type_1 p : this. var_1. method_2 ( ) ) { if (! ( this. method_3 ( p. method_4 ( ) ) ) ) { if (! ( this. method_3 ( p. method_4 ( ) ) ) ) { error = true ; } } } if ( error ) { type_2. method_5 ( 1, string_1 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { boolean var_1 = false ; try { type_1 . method_2 ( string_1 ) ; } catch ( type_2 var_2 ) { type_3 . method_3 ( string_2 ) ; if ( var_2 . method_4 ( ) . contains ( string_3 ) ) { var_1 = true ; } } asserttrue ( var_1 ) ; java.lang.string var_3 = type_1 . method_2 ( ( ( var_4 ) + string_1 ) ) ; assertequals ( var_3 , string_1 ) ; }
[0]: public java.util.date method_1 ( ) { java.util.date var_1 = new java.util.date ( ) ; java.util.list < java.util.date > var_2 = new java.util.arraylist < java.util.date > ( ) ; for ( type_1 var_3 : var_4 ) { if ( var_3. method_2 ( var_1 ) ) var_2. add ( var_3. method_1 ( ) ) ; } java.util.collections.sort ( var_2 ) ; return var_2. get ( 0 ) ; }

************

************
tgt: protected < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1 , java.util.map < java.lang.class < ? > , java.lang.object > var_2 ) throws type_2 { type_1 var_3 = type_3 . method_2 ( var_1 ) ; java.util.list < type_4 > var_4 = type_5 . method_3 ( var_1 ) ; for ( type_4 field : var_4 ) { method_4 ( field , var_3 , var_2 ) ; } return var_3 ; }
[0]: public void method_1 ( double [ ] var_1, int offset, int length, type_1 var_2 ) { for ( int i = 0 ; i < length ; i ++ ) { var_1 [ i ] = ( ( type_2 ) ( var_3. method_2 ( var_1 [ i ], var_2. method_3 ( i ) ) ) ). method_4 ( ) ; } }

************

************
tgt: protected type_1 method_1 ( java.lang.string ... params ) { try { type_1 var_1 = var_2 . method_2 ( params [ 0 ] , var_3 class ) ; type_2 . method_3 ( string_1 , var_1 . tostring ( ) ) ; return var_1 ; } catch ( java.io.ioexception var_5 ) { var_5 . method_4 ( ) ; return null ; } }
[0]: public void method_1 ( ) { while ( true ) { try { var_1 = var_2. method_2 ( ) ; method_3 ( var_1 ) ; java.lang.system.out.println ( ( string_1 + ( java.lang.string. method_4 ( var_1 ) ) ) ) ; method_5 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { var_3. method_6 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { data . method_2 ( var_1 , 1 ) ; this . method_3 ( ) . x = var_2 . x ; this . method_3 ( ) . y = var_2 . y ; if ( ( var_3 ) == null ) { type_1 var_3 = ( ( type_2 ) ( data . method_4 ( ) ) ) . method_5 ( ) ; if ( var_3 != null ) { method_6 ( var_3 ) ; } } }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) throws type_2 { var_4 = new java.util.arraylist < > ( ) ; var_5 = new java.util.arraylist < > ( ) ; var_6. method_2 ( var_7 ) ; var_6. method_3 ( var_2 ) ; var_6. method_4 ( var_3 ) ; var_6. method_2 ( var_7 ) ; var_6. method_5 ( new type_3 ( 0, 0 ) ) ; var_8 = var_1 ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) throws java.lang.classnotfoundexception , type_1 { try { type_2 var_2 = type_3 . method_2 ( var_1 , type_2 . method_3 ( ) ) ; type_2 var_3 = type_4 . method_4 ( ) . method_5 ( var_2 ) ; return new type_5 ( ) . method_6 ( var_3 ) ; } catch ( java.lang.classnotfoundexception | type_1 | type_6 var_4 ) { return type_7 . method_7 ( var_4 . method_8 ( ) ) ; } }
[0]:  < type_1 extends type_2 < type_1 > > void method_1 ( type_1 [ ] var_1, type_1 [ ] var_2 ) { java.util.list < type_1 > list = java.util.arrays.aslist ( var_1 ) ; type_3. method_2 ( list ) ; boolean var_3 = type_4. equals ( list. method_3 ( new java.lang.object [ var_1. length ] ), var_1 ) ; asserttrue ( var_3 ) ; } }

************

************
tgt: private synchronized double method_1 ( final double param ) { final int var_1 = int_1 ; final int var_2 = int_2 ; final double result ; if ( ( var_3 ) >= int_3 ) { final double var_4 = ( ( var_3 ) - var_2 ) / float_1 ; result = param - ( ( float_2 * param ) * var_4 ) ; } else { final double var_4 = ( ( var_3 ) - var_1 ) / float_1 ; result = ( ( float_2 * param ) * var_4 ) - param ; } return result ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { super. method_1 ( context, intent ) ; type_1. method_2 ( string_1 ) ; if ( type_2. equals ( intent. method_3 ( ) ) ) { type_3 var_1 = type_3. method_4 ( context ) ; type_4 var_2 = new type_4 ( context, var_3 class ) ; int [ ] var_4 = var_1. method_5 ( var_2 ) ; var_1. method_6 ( var_4, var_5 ) ; } }

************

************
tgt: public java.lang.boolean method_1 ( java.lang.integer token , java.lang.integer var_1 , java.lang.integer var_2 ) { type_1 < java.lang.boolean > var_3 = type_2 . method_3 ( ) . method_4 ( new type_3 ( var_1 , var_2 ) ) ; try { return var_3 . get ( ) ; } catch ( type_4 var_4 ) { var_4 . method_5 ( ) ; } catch ( type_5 var_4 ) { var_4 . method_5 ( ) ; } return false ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( ( var_1. method_2 ( ) )!= null ) && ( ( var_2. method_2 ( ) )!= null ) ) { return var_1. method_3 ( ). method_4 ( var_1. method_2 ( ) ). compareto ( var_2. method_3 ( ). method_4 ( var_2. method_2 ( ) ) ) ; } else { return var_1. method_3 ( ). compareto ( var_2. method_3 ( ) ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1 . append ( getname ( ) ) ; if ( method_4 ( ) ) { var_1 . append ( string_2 ) . append ( method_5 ( ) ) ; } return var_1 . tostring ( ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { java.util.arraylist < type_2 > var_3 = method_2 ( var_1, var_2 ) ; for ( type_2 var_4 : var_3 ) { var_1. method_3 ( ). remove ( var_4 ) ; } var_1. method_3 ( ). remove ( var_2 ) ; var_1. method_3 ( ). remove ( var_2 ) ; }

************

************
tgt: public int method_1 ( java.io.inputstream var_1 , int offset , int var_2 ) throws java.io.ioexception { if ( ( offset + var_2 ) > ( var_3 . length ) ) { byte [ ] var_4 = new byte [ var_2 + offset ] ; type_1 . method_2 ( var_3 , 0 , var_4 , 0 , var_3 . length ) ; var_3 = var_4 ; } var_5 = var_1 . method_1 ( var_3 , offset , var_2 ) ; return var_5 ; }
[0]: public type_1 method_1 ( int var_1 ) { type_2 query = method_2 ( ). method_3 ( var_2 ) ; query. method_4 ( (id - 1 ), var_1 ) ; type_1 var_3 = ( ( type_1 ) ( query. method_5 ( ) ) ) ; type_3. method_6 ( var_3. method_7 ( ) ) ; return var_3 ; }

************

************
tgt: public void add ( type_1 t ) { if ( ( var_1 ) == null ) { var_1 = new type_2 ( ) ; var_1 . setvalue ( t ) ; var_1 . method_1 ( var_2 ) ; } else { type_2 < type_1 > var_3 = new type_2 ( ) ; var_3 . method_2 ( var_1 ) ; var_3 . setvalue ( t ) ; var_3 . method_1 ( var_1 . method_3 ( ) ) ; var_1 = var_3 ; } }
[0]: public void method_1 ( int var_1, java.lang.string var_2, java.lang.string name, java.lang.string var_3 ) { if ( ( ( var_4 ) || ( var_1!= ( var_5 ) ) ) || (! ( type_1. method_2 ( name ) ) ) ) { super. method_1 ( var_1, var_2, name, var_3 ) ; return ; } var_4 = true ; super. method_1 ( var_1, var_6, name, this. var_3 ) ; }

************

************
tgt: private static java.util.set < java.lang.string > method_1 ( java.lang.string var_1 ) throws type_1 { if ( var_1 . isempty ( ) ) { return type_2 . method_2 ( ) ; } final java.util.collection < java.lang.string > var_2 = java.util.arrays.aslist ( var_1 . method_3 ( string_1 , string_2 ) . split ( string_1 ) ) ; return new java.util.hashset < > ( var_2 ) ; }
[0]: private type_1 < java.lang.integer, java.lang.string > method_1 ( java.lang.string var_1, int var_2 ) { java.lang.integer value = java.lang.integer.parseint ( var_1. substring ( 0, var_2 ), int_1 ) ; java.lang.string result = var_1. substring ( var_2 ) ; return new type_1 ( value, result ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) != null ) && ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( ) ; } var_1 = null ; if ( ! ( var_2 . method_4 ( ) ) ) { new type_2 ( this ) . method_5 ( var_3 ) . method_6 ( var_4 ) . method_7 ( var_5 ) . method_8 ( false ) . method_9 ( var_6 , null ) . show ( ) ; } }
[0]: public void method_1 ( boolean var_1 ) { final int var_2 = 1 < < int_1 ; int var_3 = method_2 ( var_4 ) ; int var_5 = method_3 ( var_4 ) ; if ( var_1 ) { var_3 |= var_2 ; var_5 |= var_2 ; } else { var_3 &= ~ var_2 ; var_5 &= ~ var_2 ; } var_6. method_4 ( ( ( var_7 ) + ( offset ) ), var_3 ) ; method_5 ( var_5, var_4, var_7 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( ) ) { type_1 var_2 = var_1 . method_3 ( ) ; if ( ! ( var_4 ) ) { try { java.io.inputstream var_5 = new type_2 ( var_2 . getdata ( ) ) ; type_3 . method_4 ( type_3 . method_5 ( var_5 ) , string_1 , new java.io.file ( string_2 ) ) ; } catch ( java.io.ioexception var_6 ) { } var_4 = true ; } } else { } }
[0]: public void method_1 ( ) { if ( ( ( this. method_2 ( ) )!= null ) && ( ( this. method_3 ( ) )!= null ) ) { this. method_4 ( ( ( ( ( string_1 + ( this. method_3 ( ) ) ) + string_2 ) + ( this. method_2 ( ) ) ) + string_3 ) ) ; ( var_1 = new type_1 ( this, this. method_3 ( ) ). start ( ) ; } }

************

************
tgt: public < type_1 extends type_2 > type_3 method_1 ( java.lang.class < type_1 > var_1 , type_4 < java.lang.string , java.lang.string > var_2 , type_5 < java.lang.integer > var_3 , boolean var_4 , boolean var_5 ) throws type_6 , type_7 , type_8 , type_9 { return method_1 ( var_1 , var_2 , null , var_3 , var_4 , var_5 ) ; }
[0]: private java.lang.string method_1 ( java.lang.string key, java.lang.object... data ) { java.lang.string message = null ; try { message = var_1. getstring ( key ) ; } catch ( type_1 var_2 ) { return ( key + string_1 ) + ( type_2. tostring ( data ) ) ; } return type_3. format ( message, data ) ; }

************

************
tgt: private java.util.collection < java.lang.string > method_1 ( ) { type_1 var_1 = new type_1 ( var_2 , type_2 . method_2 ( ) ) ; if ( var_3 . method_3 ( var_1 ) ) { type_3 < type_4 > response = var_3 . method_4 ( var_1 ) ; type_4 var_4 = response . method_5 ( ) ; if ( null != var_4 ) { return var_4 . method_6 ( ) ; } } return new java.util.hashset < java.lang.string > ( ) ; }
[0]: private java.lang.string method_1 ( final java.lang.string url, final java.util.map < java.lang.string, java.lang.string > params ) { java.lang.string var_1 = url ; if ( params!= null ) { for ( java.util.map.entry < java.lang.string, java.lang.string > var_2 : params. method_2 ( ) ) { var_1 = method_3 ( var_1, var_2. method_4 ( ), var_2. getvalue ( ) ) ; } } return method_5 ( var_1 ) ; }

************

************
tgt: public void method_1 ( int size ) { type_1 var_1 = var_2 . method_2 ( ) . method_3 ( ) ; type_2 array = new type_2 ( var_1 , size ) ; var_3 . method_4 ( var_4 , array ) ; type_3 field = new type_3 ( ) ; array . method_5 ( 0 , field ) ; for ( int i = 1 ; i < size ; i ++ ) { array . method_5 ( i , new type_3 ( ) ) ; } var_3 = field ; var_4 = 0 ; }
[0]: private boolean method_1 ( double var_1, double var_2, double var_3, double var_4, double var_5 ) { double var_6 = var_3 - var_1 ; double var_7 = var_4 - var_2 ; double var_8 = ( var_6 * var_6 ) + ( var_7 * var_7 ) ; if ( var_8 < ( var_5 * var_5 ) ) { return true ; } else { return false ; } }

************

************
tgt: public void method_1 ( type_1 event ) { java.util.set < type_2 > var_1 = this . var_2 . get ( event . getclass ( ) ) ; if ( var_1 == null ) return ; for ( type_2 var_3 : var_1 ) { try { var_4 . method_2 ( var_5 , event ) ; } catch ( java.lang.exception var_6 ) { java.lang.system.err.println ( string_1 ) ; type_3 . method_3 ( ) . error ( var_6 . method_4 ( ) , var_6 ) ; } } }
[0]: public void method_1 ( type_1 response ) { if ( var_1 ) type_2. method_2 ( var_2, response. tostring ( ) ) ; try { type_3. method_3 ( this, string_1, var_3 ). show ( ) ; method_4 ( response ) ; } catch ( java.lang.exception var_4 ) { type_3. method_3 ( this, string_2, var_3 ). show ( ) ; } }

************

************
tgt: private void method_1 ( ) { var_2 = var_3 . method_3 ( var_4 ) ; method_4 ( var_2 ) ; method_5 ( new type_1 ( this , var_5 , var_2 , new java.lang.string [ ] { var_6 , string_1 } , new int [ ] { var_7 , var_8 } ) ) ; }
[0]: public void method_1 ( int var_1 ) { java.lang.string op ; switch ( var_1 ) { default : case var_2 : op = string_1 ; break ; case var_3 : op = string_2 ; break ; case var_4 : op = string_3 ; break ; } main. method_2 ( var_5, var_6, op, ( ( ( ( string_4 + ( var_7 ) ) + ( var_8 ) ) + string_5 ) + ( var_8 ) ), false ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( int_1 , int_2 ) ; var_2 . method_2 ( ( - int_1 ) , ( - int_2 ) ) ; var_1 . method_3 ( var_1 . method_4 ( ) . method_5 ( var_2 . method_4 ( ) ) ) ; assertequals ( ( - float_1 ) , var_1 . method_6 ( ) , float_2 ) ; assertequals ( float_3 , var_1 . method_7 ( ) , float_2 ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.io.ioexception { java.lang.string var_3 = method_2 ( var_1 ). trim ( ) ; java.lang.string var_4 = method_2 ( var_2 ). trim ( ) ; type_1 var_5 = new type_1 ( var_6 ) ; type_2 var_7 = var_5. method_3 ( var_3. method_4 ( ) ) ; java.lang.string var_8 = method_1 ( var_7 ) ; type_3. assertthat ( method_5 ( var_8. trim ( ) ) ). method_6 ( method_5 ( var_4 ) ) ; }

************

************
tgt: public void method_1 ( int i ) { if ( var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_2 . method_3 ( int_1 ) ; method_4 ( var_4 [ i ] ) ; } else { method_4 ( var_4 [ i ] ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { if (! ( var_1. method_2 ( ). equals ( var_2. method_2 ( ) ) ) ) { return false ; } if (! ( var_1. method_3 ( 1 ) ) ) { return false ; } java.lang.integer value = var_1. method_4 ( ). get ( var_2. method_5 ( ) ) ; return ( value!= null ) && ( value > 0 ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string line ) { return ( ( ( type_1 . method_2 ( line ) ) || ( type_1 . method_3 ( line ) ) ) || ( type_1 . method_4 ( line ) ) ) || ( type_1 . method_5 ( line ) ) ; }
[0]: public type_1 method_1 ( java.lang.string name ) { type_2 var_1 = type_2. method_2 ( string_1 ). method_3 ( var_2 ). method_4 ( string_2 ). method_3 ( var_3 ). method_4 ( name ) ; type_3 var_4 = type_3. query ( var_1 ) ; type_1 var_5 = var_6. method_5 ( var_4, var_7 class ) ; return var_5 ; }

************

************
tgt: public void method_1 ( ) { this . var_1 . method_2 ( ) . method_4 ( ) ; method_5 ( var_2 ) ; method_5 ( var_3 ) ; var_4 [ var_5 ] [ var_6 ] . method_6 ( this . var_1 . method_7 ( ) ) ; var_4 [ var_5 ] [ var_6 ] . method_8 ( null ) ; method_9 ( ) ; this . var_1 . method_10 ( var_7 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if (! ( type_1. isempty ( var_2 ) ) ) { android.content.intent intent = new android.content.intent ( getactivity ( ), var_3 class ) ; intent. method_2 ( string_1, var_2 ) ; intent. method_2 ( string_2, var_4 ) ; method_3 ( intent ) ; } }

************

************
tgt: public static java.util.list < type_1 > method_1 ( type_2 < type_3 , ? , ? > t ) throws java.io.ioexception { type_4 var_1 = t . method_2 ( type_5 . get ( ) . method_3 ( ) ) ; java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; while ( var_1 . method_4 ( ) ) { var_2 . add ( new type_1 ( var_1 . method_5 ( ) ) ) ; } return var_2 ; }
[0]: public void method_1 ( java.lang.object key, type_1 value, type_2 context ) throws java.io.ioexception, type_3 { java.lang.string [ ] split = value. tostring ( ). split ( string_1 ) ; var_1. set ( split [ 1 ] ) ; context. method_2 ( var_1, var_2 ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( var_1 != null ) { for ( type_1 var_3 : var_1 . method_2 ( var_2 ) ) { if ( ( var_3 . method_3 ( var_2 ) ) != null ) { return var_3 . method_3 ( var_2 ) ; } } } return null ; }
[0]: private boolean method_1 ( int var_1, int var_2 ) { java.util.set < java.lang.integer > var_3 = var_4. get ( var_1 ) ; if ( var_3 == null ) { return false ; } for ( java.lang.integer var_5 : var_3 ) { if ( var_5. equals ( var_2 ) ) { return true ; } if ( method_1 ( var_5, var_2 ) ) { return true ; } } return false ; } }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_2 . settext ( var_3 ) ; if ( ( ( type_1 ) ( getactivity ( ) ) ) . method_4 ( ) . method_5 ( ) ) { var_4 . method_6 ( var_5 ) ; } }
[0]: private static synchronized void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; var_2. starttime = type_2. method_3 ( ) ; var_3. method_4 ( var_4 ) ; type_1. method_2 ( var_1, ( string_2 + ( java.lang.long. tostring ( var_2. starttime ) ) ) ) ; }

************

************
tgt: public final java.lang.string method_1 ( ) { java.lang.string token = this . method_2 ( string_1 ) ; if ( token == null ) { token = this . method_3 ( string_1 ) ; if ( token == null ) { token = this . getstring ( string_1 ) ; } } return token ; }
[0]: protected void method_1 ( int position ) { type_1 var_1 = var_2. method_2 ( position ) ; android.content.intent intent = new android.content.intent ( getactivity ( ), var_3 class ) ; intent. method_3 ( var_4, var_5 ) ; intent. method_3 ( var_6, var_1. getid ( ) ) ; method_4 ( intent ) ; }

************

************
tgt: public void method_1 ( type_1 path ) { if ( ( ( var_1 ) != null ) && ( var_2 . contains ( var_1 ) ) ) method_2 ( var_2 . method_3 ( var_1 ) ) ; var_1 = path ; if ( ( ( var_1 ) != null ) && ( var_2 . contains ( var_1 ) ) ) method_2 ( var_2 . method_3 ( var_1 ) ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( ). method_3 ( var_1 ) ; type_2 result = method_4 ( var_2 ) ; type_3 listener = new type_3 ( ) ; listener. method_5 ( result ) ; listener. method_6 ( result ) ; java.io.file file = type_1. method_7 ( ) ; type_4. method_8 ( file. method_9 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_3 . method_2 ( ) ) ) ; if ( ( ( java.lang.string ) ( var_5 . method_2 ( ) ) ) == null ) return ; java.lang.integer var_4 = java.lang.integer.parseint ( ( ( java.lang.string ) ( var_5 . method_2 ( ) ) ) ) ; var_6 . method_3 ( var_7 , var_2 , var_4 ) ; var_8 . method_4 ( ) ; method_5 ( ) ; }
[0]: public static boolean method_1 ( type_1 var_1, type_2 var_2, java.lang.string var_3 ) { return var_2. method_2 ( ( ) - > { type_3 var_4 = var_2. method_3 ( ). method_4 ( ) ; try ( type_4 var_5 = var_4. method_5 ( null, null, null, new java.lang.string [ ] { string_1 } ) ) { while ( var_5. method_6 ( ) ) { if ( var_3. method_7 ( var_5. getstring ( string_2 ) ) ) { return true ; } } } return false ; } ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { java.util.calendar var_1 = java.util.calendar.getinstance ( ) ; new type_1 ( context , var_2 , var_1 . get ( var_3 ) , ( ( var_1 . get ( var_4 ) ) + 1 ) , var_1 . get ( var_5 ) ) . show ( ) ; }
[0]: public void method_1 ( int var_1, int position ) { switch ( var_1 ) { case var_2 : if ( position!= ( - 1 ) ) { var_3. method_2 ( ). remove ( position ) ; var_3. method_3 ( position ) ; } break ; case var_4 : var_3. method_2 ( ). set ( position, new type_1 ( ) ) ; var_3. method_4 ( position ) ; break ; default : break ; } } }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { double var_2 = 0.0 ; double var_3 = 0.0 ; for ( type_2 var_4 : var_5 ) { var_2 += method_2 ( var_4 , var_6 ) ; var_3 += method_2 ( var_4 , var_7 ) ; } var_1 . method_3 ( ( var_2 > var_3 ? var_8 : var_9 ) ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.list < type_2 > var_2 ; java.lang.string var_3 = var_1. method_2 ( ) ; if (! ( var_4. method_3 ( var_3 ) ) ) { var_2 = new java.util.arraylist < > ( ) ; } else { var_2 = var_4. get ( var_3 ) ; } var_2. add ( method_4 ( var_1 ) ) ; var_4. put ( var_3, var_2 ) ; var_5. commit ( ) ; type_3. method_5 ( string_1, var_3, var_1. method_6 ( ) ) ; }

************

************
tgt: public int method_1 ( android.content.intent intent , int var_1 , int var_2 ) { type_2 var_5 = new type_3 ( this ) . method_3 ( string_1 ) . method_4 ( string_2 ) . method_5 ( var_6 ) . method_6 ( true ) . build ( ) ; method_7 ( var_7 , var_5 ) ; return var_8 ; }
[0]: public void method_1 ( ) throws type_1, type_2 { type_3 var_1 = new type_3 ( ) ; var_1. method_2 ( type_4. method_3 ( ) ) ; var_1. method_4 ( var_2 ) ; type_5. method_5 ( new type_1 ( string_1 ) ). method_6 ( var_3 ). method_7 ( var_1 ) ; var_4. method_8 ( var_1 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string id ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { if ( var_1 . get ( i ) . method_2 ( ) . equals ( id ) ) { return var_1 . get ( i ) . getname ( ) ; } } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = var_1. method_2 ( ) ; if (! ( var_3. method_3 ( var_2 ) ) ) { var_3. put ( var_2, new java.util.hashset < > ( ) ) ; } java.util.set < type_1 > var_4 = var_3. get ( var_2 ) ; var_4. add ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 [ ] var_2 = method_2 ( var_1 ) ; type_2 . assertthat ( string_2 , var_2 . length , type_3 . method_3 ( 1 ) ) ; method_4 ( string_3 , var_2 [ 0 ] , string_4 , string_5 , 0 , null ) ; }
[0]: public void method_1 ( ) { type_1 [ ] temp = new type_1 [ var_1. method_2 ( ). size ( ) ] ; temp = var_1. method_2 ( ). method_3 ( temp ) ; for ( type_1 t : temp ) { if (! ( t. gettext ( ). equals ( string_1 ) ) ) var_1. method_2 ( ). remove ( t ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( ) ; type_4 var_3 = var_2 . method_3 ( ) ; var_3 . method_4 ( ) ; var_3 . method_5 ( var_1 ) ; var_3 . method_6 ( ) . commit ( ) ; return var_1 ; }
[0]: private java.lang.string method_1 ( java.lang.object value, type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( var_1. gettype ( ) ) ; type_3 var_4 = var_2. method_3 ( ). method_4 ( ) ; return type_4. method_5 ( var_4, var_2 ). method_6 ( value ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1 . method_2 ( ) ; var_2 . method_1 ( ) ; var_3 . method_1 ( ) ; var_4 . method_2 ( ) ; var_5 . method_3 ( this ) ; var_6 . method_4 ( false ) ; var_7 . method_4 ( false ) ; var_8 . method_4 ( false ) ; var_9 = false ; var_10 = false ; var_11 = false ; var_12 = false ; this . var_13 = var_14 ; }
[0]: public void method_1 ( type_1 var_1 ) { synchronized ( this ) { var_2. remove ( var_1 ) ; if ( ( ( var_3 ) > 0 ) && ( var_2. isempty ( ) ) ) { method_2 ( ) ; if ( ( var_4 )!= null ) { var_4. method_3 ( ) ; var_4 = null ; } } } }

************

************
tgt: public static void main ( java.lang.string ... args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = var_1 . method_1 ( type_3 . method_2 ( ) . method_3 ( string_1 ) ) . method_1 ( type_3 . method_2 ( ) . method_3 ( string_2 ) ) . method_4 ( ) . method_5 ( ) . build ( ) ; java.lang.system.out.println ( var_2 ) ; }
[0]: public void start ( type_1 var_1 ) throws java.lang.exception { type_2. method_1 ( ). method_2 ( var_1 ) ; type_3 var_2 = new type_4 ( ) ; type_5 var_3 = type_6. method_3 ( var_2 ) ; var_1. method_4 ( var_4 class. getname ( ), var_3, null ) ; }

************

************
tgt: public void method_1 ( final char [ ] data ) { int var_1 = ( data . length ) * ( var_2 ) ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_3 . method_4 ( type_1 . method_5 ( data ) , ( ( var_4 ) + ( position ) ) , var_1 ) ; position += var_1 ; end = ( ( position ) > ( end ) ) ? position : end ; }
[0]: public void method_1 ( ) { final type_1 var_1 = new type_1 ( ) ; type_2 var_2 = method_2 ( var_1 ) ; type_3 var_3 = new type_4 ( type_5. method_3 ( var_4 ) ) ; var_2. add ( var_5 ) ; java.util.list < type_1 > var_6 = var_3. method_4 ( 1, 1 ) ; asserttrue ( var_6. isempty ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { type_1 var_2 = var_3 ; var_4 = string_1 ; } else { var_4 = var_1 . format ( var_5 ) . tostring ( ) ; var_6 = var_1 ; if ( ( var_6 ) != null ) { value = ( ( method_2 ( ) ) + string_2 ) + ( method_3 ( ) ) ; } else { value = method_2 ( ) ; } } }
[0]: public static void init ( type_1 var_1 ) { java.io.file var_2 = ( ( java.io.file ) ( var_1. method_1 ( string_1 ) ) ) ; var_3 = new type_2 ( new type_3 ( var_4, var_2 ) ) ; var_3 = new type_2 ( new type_3 ( var_4, var_2 ) ) ; int var_5 = type_4. method_2 ( ) ; if ( var_5!= 0 ) { var_3. method_3 ( ( ( var_5 * int_1 ) * int_1 ) ) ; } }

************

************
tgt: public void method_1 ( int position , float var_1 , int var_2 ) { if ( ( var_3 ) == 0 ) { var_3 = ( var_4 . method_2 ( ) ) / ( var_4 . method_3 ( ) . method_4 ( ) ) ; } float var_5 = ( var_3 ) * ( var_1 + position ) ; method_5 ( var_5 ) ; }
[0]: public static type_1 method_1 ( int i ) { type_1 var_1 = new type_1 ( i ) ; for ( int j = 0 ; j < int_1 ; j ++ ) { type_2 t = type_3. method_2 ( ) ; type_4 var_2 = new type_4 ( ) ; var_2. method_3 ( t ) ; var_2. method_4 ( type_5. method_5 ( int_2, 1 ) ) ; var_1. add ( var_2 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 . method_2 ( null , var_1 ) ; type_3 var_2 = new type_3 ( var_1 ) ; type_2 . method_2 ( null , var_2 ) ; var_2 . method_3 ( string_1 ) ; type_4 . asserttrue ( var_2 . method_4 ( ) . contains ( string_1 ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) { type_3 var_3 = this. method_2 ( var_1. method_2 ( ). method_3 ( ), var_1. method_2 ( ). method_4 ( ) ) ; var_3. method_5 ( null ) ; var_1. method_2 ( ). method_5 ( null ) ; var_2. method_5 ( var_1 ) ; var_1. method_6 ( var_2 ) ; return new type_1 ( var_2. method_3 ( ), var_2. method_4 ( ), var_4, var_1, null, null ) ; }

************

************
tgt: public void method_1 ( float var_1 ) { var_2 += var_1 ; if ( ( var_2 ) > ( var_3 ) ) { method_2 ( ) ; if ( ( var_4 ) != null ) { var_4 . method_1 ( var_1 ) ; if ( var_4 . method_3 ( ) ) var_4 . method_2 ( ) ; } } }
[0]: private void method_1 ( ) { java.util.set < java.lang.integer > tmp = new java.util.hashset < > ( ) ; java.lang.string var_1 = var_2. get ( ) ; for ( java.lang.string var_3 : var_1. split ( string_1 ) ) { try { java.lang.integer.parseint ( var_3 ) ; } catch ( type_1 var_4 ) { return ; } } var_5. set ( tmp ) ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_1 ( ) ; } catch ( java.lang.throwable t ) { type_1 . error ( string_1 , t ) ; } try { var_2 . method_1 ( ) ; } catch ( java.lang.throwable t ) { type_1 . error ( string_2 , t ) ; } if ( ( var_3 ) != null ) { try { var_3 . method_2 ( ) ; } catch ( java.lang.throwable t ) { type_1 . error ( string_3 , t ) ; } } }
[0]: public java.util.hashset < type_1 > method_1 ( java.lang.string name ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; java.util.hashset < type_2 > var_2 = this. method_2 ( name ) ; for ( type_2 method : var_2 ) var_1. add ( method. gettype ( ) ) ; return var_1 ; }

************

************
tgt: public void execute ( ) throws java.lang.exception { if ( ( var_2 ) == null ) { return ; } var_1 = var_2 . size ( ) ; for ( type_1 var_3 : var_2 ) { if ( var_4 ) { return ; } method_1 ( java.lang.string.format ( string_1 , var_3 . tostring ( ) ) ) ; try { var_3 . method_2 ( ) ; } catch ( java.lang.exception var_5 ) { type_2 . method_3 ( ) . method_4 ( var_5 ) ; } ( var_6 ) ++ ; } }
[0]: public void update ( type_1 var_1 ) { this. method_1 ( var_1. method_2 ( ) ) ; var_2 = var_1. method_3 ( ) ; var_3 = var_1. method_4 ( ) ; this. method_5 ( var_1. method_6 ( ) ) ; if (! ( var_1. method_7 ( ). isempty ( ) ) ) { var_4 = var_1. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( final type_1 var_1 , final int var_2 ) { android.content.intent intent = new android.content.intent ( this , var_3 class ) ; if ( var_1 != null ) { intent . method_2 ( string_1 , var_1 . method_3 ( ) ) ; intent . method_2 ( string_2 , var_1 . method_4 ( ) ) ; intent . method_5 ( string_3 , ( ( java.util.arraylist < ? extends type_2 > ) ( var_1 . method_6 ( ) ) ) ) ; } intent . method_2 ( string_4 , var_2 ) ; method_7 ( intent ) ; }
[0]: boolean method_1 ( type_1 var_1 ) { type_2. method_2 ( var_1, string_1 ) ; if ( ( var_1 == ( var_2 ) ) && ( ( var_3 ) < 0 ) ) return true ; if ( ( var_4. get ( var_3 ). var_1 ) == var_1 ) return true ; return false ; }

************

************
tgt: public void method_3 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( string_1 ) ; java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; list . add ( var_1 ) ; var_2 . method_3 ( list ) ; type_2 . assertequals ( var_2 . method_4 ( ) , list ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( int_1, int_2 ) ; var_1. method_2 ( int_3 ) ; var_1. method_2 ( int_4 ) ; type_2. method_3 ( var_1, new long [ ] [ ] { new long [ ] { int_3, int_4 } } ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string path ) { if ( ( path == null ) || ( ( path . length ( ) ) == 0 ) ) return path ; java.lang.stringbuilder buf = type_1 . method_1 ( null , path , 0 ) ; return buf == null ? path : buf . tostring ( ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = new java.lang.string ( text ) ; java.lang.string var_2 ; for ( type_1 var_3 : var_4 ) { var_2 = method_2 ( var_3. method_3 ( ), var_3. method_4 ( ) ) ; if (! ( var_3. method_5 ( ). isempty ( ) ) ) var_2 = method_6 ( var_2, var_3 ) ; var_1 = var_1. replace ( var_3. method_3 ( ), var_2 ) ; var_1 = var_1. replaceall ( string_1, string_2 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws type_1 { var_1 = new type_2 ( var_2 ) ; type_3 var_3 = new type_3 ( null ) ; var_3 . execute ( getcontext ( ) ) ; var_3 . method_2 ( new type_4 ( ) { public void method_3 ( java.lang.string var_4 ) { result = var_4 ; var_1 . method_4 ( ) ; } } ) ; var_1 . method_5 ( ) ; assertnotnull ( result ) ; assertequals ( string_1 , result ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { out. add ( var_1. method_2 ( ). method_3 ( ) ) ; out. add ( var_1. method_4 ( ). method_3 ( ) ) ; out. add ( var_1. method_5 ( ). method_3 ( ) ) ; out. add ( var_1. method_2 ( ). method_3 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( ( var_1 . size ( ) ) > 1 ) { type_1 . method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( method_7 ( ) ) ; method_8 ( 0 ) ; method_9 ( ) ; method_10 ( ) ; } }
[0]: private static boolean method_1 ( char c ) { return ( ( ( c >= char_1 ) && ( c >= char_2 ) ) || ( ( c >= char_3 ) && ( c >= char_4 ) ) ) || ( ( c >= char_5 ) && ( c >= char_6 ) ) ; }

************

************
tgt: public type_1 method_1 ( type_2 id , java.lang.string name , java.lang.string var_2 , type_3 var_1 ) { type_1 var_3 = null ; if ( method_2 ( id ) ) { var_3 = new type_1 ( id , name , var_1 ) ; var_4 . add ( var_3 , var_2 ) ; type_4 . info ( string_1 , id , name , var_1 ) ; } else { type_4 . info ( string_2 , id , name , var_1 ) ; } return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string text = var_1. tostring ( ). trim ( ) ; var_2. method_2 ( ) ; for ( int i = 0 ; i < ( var_4. size ( ) ) ; i ++ ) { if ( var_4. get ( i ). getname ( ). contains ( text ) ) { var_2. add ( var_4. get ( i ) ) ; } } var_5. method_3 ( ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( java.lang.string . method_3 ( var_2 . execute ( new int [ ] { - 1 , var_3 , - 1 , - 1 , - 1 } , var_1 ) ) , 1 ) ; var_1 . method_2 ( java.lang.string . method_3 ( var_2 . execute ( new int [ ] { - 1 , var_4 , - 1 , var_4 , - 1 } , var_1 ) ) , 1 ) ; }
[0]: protected void method_1 ( ) { try { var_1. method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { type_1. method_3 ( var_3, string_1 ) ; type_1. method_3 ( var_3, var_2. tostring ( ) ) ; try { var_1. method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_5 ( ) ; } return ; } var_5. method_6 ( var_1, false, var_2 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_1 . substring ( 0 , 1 ) ; if ( var_2 . equals ( var_3 ) ) { message = string_1 ; } else if ( var_2 . equals ( var_4 ) ) { message = string_2 ; result = java.lang.integer.parseint ( var_1 . split ( string_3 ) [ 1 ] ) ; } else { message = string_4 ; message += var_1 ; } }
[0]: public type_1 method_1 ( ) { type_1 out = type_1. method_2 ( var_1 ) ; var_2. method_3 ( var_3. method_4 ( ) ) ; var_2. method_5 ( method_6 ( ) ) ; int var_4 = var_5. method_7 ( ) ; type_1 var_6 = var_5. method_1 ( ) ; var_2. method_3 ( ( var_4 == 0? 0 : var_6. method_8 ( ) ) ) ; if ( var_4 > 0 ) var_2. method_9 ( var_5. method_1 ( ) ) ; var_2. method_10 ( ) ; return out ; }

************

************
tgt: public static type_1 method_1 ( final type_2 var_1 , final type_3 t , final java.util.list < type_4 > var_2 , final java.util.list < type_4 > var_3 , final java.util.set < type_4 > var_4 , final boolean var_5 ) { final type_1 result = type_5 . method_2 ( t , var_2 , var_3 ) ; if ( result != null ) { return result ; } return type_5 . method_3 ( var_1 , t , var_2 , var_3 , var_4 ) ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( ) ; state = var_2 ; var_3 = var_4 ; var_5 = false ; var_6 = false ; var_7 = true ; var_8 = true ; var_9 = false ; var_10 = false ; method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; if ( ( var_11 ) == ( var_12 ) ) { method_5 ( ) ; java.lang.system.out.println ( string_1 ) ; method_6 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.string title ) { if ( var_2 . method_2 ( title ) ) { var_3 . add ( var_2 . get ( title ) . get ( 0 ) ) ; var_2 . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.system.out.println ( string_1 ) ; return false ; } }
[0]: public void method_1 ( type_1 var_1, int position, java.util.list < java.lang.object > var_2 ) { super. method_1 ( var_1, position, var_2 ) ; if ( ( var_2!= null ) && (! ( var_2. isempty ( ) ) ) ) { var_1. method_2 ( ( ( type_2 ) ( var_2. get ( 0 ) ) ) ) ; } else { var_1. method_2 ( null ) ; } }

************

************
tgt: private int method_1 ( byte [ ] var_1 ) { int size = var_1 . length ; int var_3 = ( var_4 ) - ( ( var_2 ) % ( var_4 ) ) ; if ( var_3 < size ) { var_2 += var_3 + ( var_5 ) ; } int tmp = var_2 ; method_2 ( var_2 ) ; var_2 += method_3 ( var_6 , var_2 , var_1 ) ; return tmp ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2, type_4 var_3, java.lang.string var_4, type_5 var_5 ) { int var_6 = var_5. getid ( ) ; type_1 var_7 = var_5. method_2 ( ) ; if ( var_7 == null ) { var_7 = new type_1 ( var_6 ) ; } var_7. method_3 ( var_1 ) ; var_7. method_4 ( var_2 ) ; var_7. method_5 ( var_3 ) ; var_7. method_6 ( var_5 ) ; var_7. method_7 ( var_4 ) ; var_8. method_8 ( var_7 ) ; return var_7 ; }

************

************
tgt: public void method_1 ( ) { var_1 = false ; for ( int i = ( var_2 ) - 1 ; i > 0 ; i -- ) { int var_3 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( var_2 ) ) ) ; type_1 temp = var_4 [ i ] ; var_4 [ i ] = var_4 [ var_3 ] ; var_4 [ var_3 ] = temp ; } }
[0]: private void method_1 ( float var_1 ) { var_2. settext ( ( string_1 + ( java.lang.string. method_2 ( var_1 ) ) ) ) ; if ( var_1 <= ( var_3 ) ) { var_3 = var_1 ; var_4. settext ( ( string_2 + ( var_3 ) ) ) ; } if ( var_1 >= ( var_5 ) ) { var_5 = var_1 ; var_6. settext ( ( string_3 + ( var_5 ) ) ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( ( var_2 ) == 1 ) || ( ! ( var_1 . equals ( string_1 ) ) ) ) { method_2 ( ) ; } else type_1 . method_3 ( method_4 ( ) , string_2 , var_3 ) . show ( ) ; }
[0]: private void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3. method_2 ( ) ; var_3. method_3 ( var_4. method_4 ( ). method_5 ( ) ) ; break ; case var_5 : var_6. method_2 ( ) ; method_6 ( var_7 ) ; break ; } var_8. method_7 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { type_3 state = method_2 ( method_3 ( ) ) ; if ( state == ( var_1 ) ) { try { return method_4 ( method_5 ( ) ) ; } catch ( type_2 var_2 ) { if ( ( ! ( type_4 . equals ( var_2 . method_6 ( ) ) ) ) || ( ! ( method_3 ( ) ) ) ) throw var_2 ; } } assert ( method_7 ( ) ) == ( var_3 ) ; var_4 . info ( string_1 ) ; return method_8 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ). var_2 ; if ( var_3 ) { super. method_1 ( ) ; } else if ( ( var_4 ) == null ) { var_5. method_1 ( ) ; var_6 = var_5 ; } else { this. var_7 = type_2. method_2 ( ). var_8. method_3 ( ) ; this. var_9 = type_2. method_2 ( ). var_10. method_3 ( ) ; } }

************

************
tgt: public java.lang.object method_1 ( java.lang.string name ) { if ( var_1 . method_2 ( ) . contains ( name ) ) { return new type_1 ( false , var_1 . method_1 ( name ) ) ; } else if ( var_2 . method_3 ( ) . contains ( name ) ) { return new type_1 ( true , var_2 . get ( name ) ) ; } else { return null ; } }
[0]: private void method_1 ( ) { try ( java.io.bufferedwriter writer = new java.io.bufferedwriter ( new type_1 ( new java.io.fileoutputstream ( file, true ), string_1 ) ) ) { writer.write ( ( ( ( type_2. method_2 ( var_1 ) ) + string_2 ) + ( var_2. gettext ( ) ) ) ) ; method_3 ( string_3 ) ; } catch ( java.io.ioexception var_3 ) { method_3 ( ( string_4 + ( var_3. method_4 ( ) ) ) ) ; var_3. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return ; } switch ( var_3 ) { case var_4 : case var_5 : var_1 . add ( var_2 . getname ( ) ) ; break ; case var_6 : var_1 . add ( type_2 . method_2 ( string_2 ) ) ; break ; } }
[0]: public void update ( ) { if ( ( var_1 ) < ( var_2 ) ) { var_1 += var_3 ; } if ( ( var_1 ) > ( var_2 ) ) { var_1 = var_2 ; } if ( ( var_4 ) < ( var_5 ) ) { var_4 += var_6 ; } if ( ( var_4 ) > ( var_5 ) ) { var_4 = var_5 ; } }

************

************
tgt: public void method_1 ( ) { try { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( var_2 class . method_3 ( string_1 ) ) ; type_2 var_3 = var_1 . method_4 ( ) ; var_4 . method_5 ( var_3 ) ; } catch ( java.lang.exception var_7 ) { var_7 . method_8 ( ) ; } }
[0]: public void append ( java.lang.string key, java.lang.string content ) { java.lang.string value = get ( key ) ; if ( value == null ) { put ( key, content ) ; } else { value = value + content ; } var_1. info ( ( ( ( ( ( string_1 + ( node. method_1 ( ) ) ) + string_2 ) + key ) + string_3 ) + value ) ) ; }

************

************
tgt: private type_1 method_1 ( type_2 method , java.util.iterator < type_3 > var_1 , type_1 handle ) { type_4 var_4 = new type_4 ( handle ) ; if ( var_4 . method_2 ( ) ) { this . method_3 ( method , var_1 , var_4 ) ; } else { this . method_4 ( method , var_1 , var_4 ) ; } return var_4 . method_5 ( ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string value ) { if ( value. trim ( ). isempty ( ) ) { return null ; } java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; java.lang.string [ ] var_2 = value. split ( var_3 ) ; for ( java.lang.string var_4 : var_2 ) { if (! ( var_4. trim ( ). isempty ( ) ) ) { var_1. add ( method_2 ( var_4 ) ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { type_3 var_2 = new type_3 ( var_1 ) ; type_4 id = this . var_3 . method_2 ( var_2 ) ; var_4 . info ( java.lang.string.format ( string_1 , id . intvalue ( ) , var_1 . getname ( ) ) ) ; }
[0]: public java.lang.boolean method_1 ( final java.lang.string var_1, final java.util.set < type_1 > var_2 ) { final type_2 var_3 = method_2 ( var_1 ) ; if ( var_3 == null ) return false ; else try { var_3. method_3 ( var_2 ) ; return true ; } catch ( final java.lang.exception var_4 ) { final java.lang.string var_5 = ( string_1 + var_1 ) + string_2 ; type_3. error ( var_5, var_4 ) ; throw new type_4 ( var_5, var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { method_1 ( var_2 ) ; if ( ( var_3 . method_3 ( ) ) <= ( var_1 . method_3 ( ) ) ) { java.lang.system.out.println ( var_1 ) ; method_4 ( var_1 ) ; } method_1 ( var_4 ) ; } }
[0]: public < type_1 extends type_2 > java.util.list < type_1 > method_1 ( java.lang.class < type_1 > var_1 ) { java.util.list < type_2 > list = method_2 ( ) ; java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_3 : list ) { if ( var_1. getclass ( ). method_3 ( var_3 ) ) { var_2. add ( ( ( type_1 ) ( var_3 ) ) ) ; } } return var_2 ; }

************

************
tgt: static void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( string_1 ) ; java.lang.string time ; java.util.date date = var_1 . method_2 ( string_2 ) ; time = var_1 . format ( date ) ; java.io.file var_2 = new java.io.file ( string_3 ) ; type_2 var_3 = new type_2 ( int_1 , var_4 , string_4 , string_5 , string_6 , string_7 , var_2 , int_2 , var_5 , time , 1 , null , int_3 ) ; type_3 var_6 = new type_4 ( ) ; type_5 message = var_6 . method_1 ( var_3 ) ; }
[0]: public void method_1 ( int var_1, int to ) { int var_2 = method_2 ( ) ; super. add ( to, super. remove ( var_1 ) ) ; var_3. method_3 ( ) ; if ( var_2 == var_1 ) method_4 ( to ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_2 == ( var_3 ) ) { type_1 var_4 = data . method_2 ( var_5 ) ; if ( null != var_4 ) { switch ( var_1 ) { case var_6 : var_7 . method_3 ( ( ( var_8 . size ( ) ) - 1 ) ) ; break ; case var_9 : var_7 . method_4 ( var_10 ) ; break ; default : break ; } } } }
[0]: public void method_1 ( type_1 message ) { type_2 var_1 = method_2 ( message ) ; boolean var_2 = var_1. method_3 ( ) ; method_4 ( var_1. method_5 ( ), type_3. method_6 ( var_1, false ), ( var_2? var_3 : var_4 ), ( var_2? 0 : 1 ), message. method_7 ( ), 0l ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , java.lang.throwable t ) { type_3 . method_2 ( string_1 , ( string_2 + ( t . tostring ( ) ) ) ) ; var_2 . method_3 ( false ) ; var_4 . method_5 ( var_5 ) ; var_6 . method_6 ( ) . method_7 ( 0 ) ; var_7 . method_5 ( var_5 ) ; var_8 . method_5 ( var_5 ) ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 time ) { synchronized ( this ) { ( var_2 ) ++ ; } type_2 var_3 = new type_2 ( var_1, 1, time ) ; if (! ( var_4. contains ( var_3 ) ) ) { var_4. add ( var_3 ) ; } else { type_2 var_5 = var_4. get ( var_4. method_2 ( var_3 ) ) ; var_5. method_3 ( ( ( var_5. method_4 ( ) ) + 1 ) ) ; var_5. method_5 ( time ) ; } }

************

************
tgt: public void method_1 ( ) { java.util.collections.sort ( method_2 ( ) ) ; for ( int var_1 : method_2 ( ) ) { java.util.set < java.lang.integer > var_2 = method_3 ( ) . method_4 ( var_1 , ( var_1 + int_1 ) ) ; for ( int var_3 : var_2 ) { var_4 = var_3 - var_1 ; if ( ( ( var_4 ) > 0 ) && ( ( var_4 ) <= int_2 ) ) { ( method_5 ( ) [ ( ( var_4 ) - 1 ) ] ) ++ ; } } } }
[0]: public java.io.inputstream method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { if ( var_1!= null ) { type_4 var_4 = var_5. method_2 ( var_6, true, false, var_7, var_2, var_3 ) ; return var_5. method_3 ( var_8. method_4 ( var_1 ). method_5 ( ), var_9, var_4, var_1. method_6 ( ) ) ; } else { return new type_5 ( 1l ) ; } }

************

************
tgt: public static void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { java.util.hashmap < java.lang.string , java.lang.object > var_2 = new java.util.hashmap < java.lang.string , java.lang.object > ( ) ; java.util.scanner var_3 = new java.util.scanner ( new java.io.filereader ( var_1 ) ) ; while ( var_3 . method_2 ( ) ) { java.lang.string var_4 = var_3 . method_3 ( ) ; var_2 . put ( var_4 , null ) ; } var_5 = var_2 ; }
[0]: public static java.lang.throwable method_1 ( java.lang.throwable t ) { java.lang.throwable var_1 = t ; java.lang.throwable var_2 = var_1. method_2 ( ) ; while ( ( var_2!= null ) && ( var_2!= var_1 ) ) { var_1 = var_2 ; var_2 = var_2. method_2 ( ) ; } return var_1 ; }

************

************
tgt: public < type_1 > type_1 method_1 ( type_2 < type_1 > var_1 , type_3 var_2 ) { return ( ( var_2 == ( var_3 ) ) || ( var_2 == null ) ) && ( var_1 == ( var_4 ) ) ? ( ( type_1 ) ( var_5 ) ) : super . method_1 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( ) { var_1 = false ; var_2 = false ; if ( ( var_3 )!= null ) { var_3. method_2 ( ) ; } var_4 = null ; var_5 = null ; var_6. method_3 ( ) ; var_6 = null ; method_4 ( true ) ; var_7. method_5 ( ) ; var_8 = null ; var_9 = null ; var_10 = false ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { int var_3 = method_2 ( ) ; int var_4 = method_3 ( ) ; if ( ( ! ( method_4 ( ) ) ) || ( ! ( var_5 class . method_5 ( this ) ) ) ) { if ( method_6 ( ) ) { this . var_6 [ ( var_2 - var_4 ) ] = true ; return true ; } else { this . var_6 [ ( var_1 - var_3 ) ] = true ; return true ; } } return false ; }
[0]: public boolean equals ( java.lang.object var_1 ) { return ( var_1 instanceof type_1? ( ( ( type_1 ) ( var_1 ) ). var_2. equals ( var_2 ) ) && ( ( ( type_1 ) ( var_1 ) ). var_3. equals ( var_3 ) ) : false ; }

************

************
tgt: private void method_1 ( ) { if ( ( ( var_1 ) == null ) && ( ( getcontext ( ) ) != null ) ) { var_1 = new type_1 ( getcontext ( ) , getcontext ( ) . getstring ( var_2 ) , getactivity ( ) . method_2 ( var_3 . content ) ) ; } if ( ( var_1 ) != null ) { var_1 . method_3 ( ) ; } }
[0]: private void method_1 ( type_1 var_1, java.lang.string [ ] var_2 ) { if (! ( var_2. equals ( null ) ) ) { java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( java.lang.string string : var_2 ) { var_3. add ( string ) ; } var_1. put ( string_1, var_3 ) ; } else { var_1. put ( string_1, null ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2 . set ( string_1 , string_2 ) ; type_3 < java.lang.string > var_3 = new type_3 < java.lang.string > ( string_3 , var_2 ) ; type_4 < java.lang.string > results = var_4 . method_2 ( var_1 , var_5 , var_3 , var_6 . string class ) ; try { type_1 var_7 = new type_1 ( results . method_3 ( ) ) ; return var_7 ; } catch ( type_5 var_8 ) { return null ; } }
[0]: public type_1 method_1 ( int var_1 ) { type_1 var_2 = new type_2 ( ). method_2 ( var_1 ). method_3 ( var_1 ). method_4 ( var_1 ). method_5 ( false ). method_6 ( true ). method_7 ( var_3 ). method_8 ( true ). method_9 ( var_4 ). method_10 ( new type_3 ( int_1 ) ). build ( ) ; return var_2 ; }

************

************
tgt: public static int method_1 ( ) { java.util.hashmap < java.lang.string , java.util.set < java.lang.string > > var_1 = var_2 ; int var_3 = 0 ; var_2 = new java.util.hashmap < java.lang.string , java.util.set < java.lang.string > > ( ) ; for ( java.lang.string url : var_5 ) { if ( type_1 . method_3 ( url ) ) { var_3 ++ ; } else { var_6 . method_4 ( ( ( string_1 + url ) + string_2 ) ) ; var_4 . put ( url , var_1 . get ( url ) ) ; } } return var_3 ; }
[0]: public int method_1 ( ) { var_1 = ( var_1 ) - ( int_1 * ( var_2 ) ) ; if ( ( var_1 ) < 0 ) { int buf = var_1 ; var_1 = 0 ; return ( var_2 ) + ( buf + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.list < java.util.list < java.lang.integer > > list = new type_1 ( ) . method_1 ( int_1 , int_2 ) ; for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { for ( int k : list . get ( i ) ) { java.lang.system.out.print ( ( k + string_1 ) ) ; } java.lang.system.out.println ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { var_2. method_3 ( false ) ; var_3 = new type_2 ( ) ; var_3. method_3 ( true ) ; var_4 = new type_3 ( var_3, var_5, var_2 ) ; var_5. method_4 ( var_4 ) ; } }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( int i = var_2 ; i <= ( var_3 ) ; i ++ ) { if ( ! ( var_1 . isempty ( ) ) ) { var_1 += string_2 ; } var_1 += i + string_3 ; } return var_1 ; }
[0]: public java.lang.string method_1 ( ) { int args = method. method_2 ( ). length ; return ( ( ( ( ( method_3 ( ). getname ( ) ) + string_1 ) + ( this. method. getname ( ) ) ) + string_2 ) + args ) + string_3 ; }

************

************
tgt: public int method_1 ( int key ) { type_1 var_1 = this . var_2 . method_2 ( ) ; int var_3 = 0 ; while ( ( var_1 . method_3 ( ) ) != key ) { if ( key < ( var_1 . method_3 ( ) ) ) { var_1 = var_4 ; } else { var_1 = var_5 ; } if ( var_1 == null ) return var_3 ++ ; var_3 ++ ; } return var_3 ++ ; }
[0]: protected java.lang.void method_1 ( java.lang.void... params ) { if ( var_1. method_2 ( string_1 ) ) method_3 ( ) ; else if ( var_1. method_2 ( string_2 ) ) { if ( var_2 ) method_4 ( ) ; else { method_5 ( ) ; method_4 ( ) ; } } else if ( var_1. method_2 ( string_3 ) ) try { method_6 ( ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.out.println ( ( string_4 + var_3 ) ) ; } return null ; } return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = ( ( index ) < 0 ) ? new type_1 ( null ) : new type_1 ( index ) ; if ( ( var_3 ) != null ) { var_2 . method_2 ( var_3 . method_1 ( var_1 ) ) ; } else { var_2 . method_2 ( var_1 ) ; } return var_2 ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = type_1. method_2 ( var_2, string_1 ) ; if ( var_1 == null ) { return ; } if ( var_1. equals ( string_2 ) ) { int var_3 = ( ( int ) ( java.lang.double. method_3 ( type_1. method_2 ( var_2, string_3 ) ) ) ) ; java.util.linkedlist < java.lang.integer > list = method_4 ( var_3, var_4 ) ; method_5 ( list, var_4, var_5 ) ; } else { method_6 ( var_4 ) ; } }

************

************
tgt: public type_1 update ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = var_4 . method_1 ( var_2 ) ; var_1 . method_2 ( var_3 . method_3 ( ) ) ; var_1 . settext ( var_3 . gettext ( ) ) ; return var_5 . method_4 ( var_1 ) ; }
[0]: public boolean equals ( final java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getclass ( ) )!= ( obj. getclass ( ) ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( ( id ) == null ) || (! ( id. equals ( var_1. id ) ) ) ) return false ; return true ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { java.util.set < type_2 > var_2 = var_3 . method_2 ( var_1 ) ; if ( ( var_2 == null ) || ( ( var_2 . size ( ) ) == 0 ) ) { return false ; } return true ; }
[0]: public void method_1 ( ) { type_1 var_1 = this. method_2 ( ) ; while ( var_1. method_3 ( this ) ) { type_2 var_2 = var_1. method_4 ( this ) ; var_2. method_5 ( ) ; type_1 var_3 = this. method_2 ( ) ; if ( ( var_2. getclass ( ) ) == ( this. getclass ( ) ) ) { while ( var_3. method_3 ( var_2 ) ) { java.lang.system.out.print ( string_1 ) ; var_3. method_4 ( var_2 ). method_5 ( ) ; } } } }

************

************
tgt: private void init ( android.content.context context ) { var_1 = type_1 . get ( context ) . method_1 ( ) ; var_4 = type_1 . get ( context ) . method_4 ( ) ; var_2 = method_2 ( ) . method_3 ( ) . var_3 ; var_5 = new type_2 ( ) ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { java.lang.system.out.println ( ( string_1 + key ) ) ; java.lang.string var_3 = var_1. method_2 ( ). method_3 ( ) ; java.lang.string var_4 = var_1. method_2 ( ). method_4 ( string_2 ). tostring ( ) ; java.lang.system.out.println ( ( string_3 + var_4 ) ) ; if ( key. equals ( var_3 ) ) { var_5. method_5 ( var_6 ) ; var_7. settext ( string_4 ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string name ) { java.lang.string var_1 = ( string_1 + name ) + string_2 ; boolean result = false ; try { type_1 var_2 = var_3 . method_2 ( var_1 ) ; type_2 var_4 = var_2 . method_3 ( ) ; if ( var_4 . method_5 ( ) ) result = true ; var_2 . method_4 ( ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_6 ( ) ; } return result ; }
[0]: private void method_1 ( type_1 listener, type_2 var_1, type_3 var_2 ) { var_1. method_2 ( listener ) ; var_3. remove ( var_2 ) ; var_4. remove ( var_1. method_3 ( ) ) ; if (! ( var_5. method_4 ( ). method_5 ( ) ) ) { var_5. method_1 ( var_2 ) ; } }

************

************
tgt: private boolean method_1 ( byte var_1 ) { try { var_2 . method_2 ( var_1 ) ; var_2 . method_3 ( ) ; return var_3 . method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { java.lang.system.err.println ( string_1 ) ; java.lang.system.exit ( 1 ) ; return false ; } }
[0]: public void method_1 ( ) { if ( var_1 ) { var_1 = false ; } else { var_1 = true ; } var_2 = var_3. method_2 ( ) ; var_4 = var_3. method_3 ( ) ; var_5 = var_3. method_4 ( ) ; var_3. method_5 ( ) ; var_3. method_6 ( ) ; var_6 = false ; method_7 ( ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { return type_1 . method_2 ( var_4 class ) . method_3 ( var_5 class , new type_3 ( var_1 ) ) . method_3 ( var_6 class , new type_4 ( var_2 ) ) . build ( ) ; }
[0]: public void start ( ) { java.util.arraylist < type_1 > var_1 = method_1 ( string_1 ) ; java.util.arraylist < type_1 > var_1 = method_1 ( string_2 ) ; var_3 = method_2 ( var_1 ) ; type_3. method_3 ( var_3 [ 0 ] ) ; type_3. method_3 ( var_3 [ 1 ] ) ; type_3. method_4 ( var_3 [ int_1 ] ) ; type_3. method_3 ( var_3 [ int_2 ] ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( x , y , var_4 , var_4 ) ; var_1 . method_4 ( ( ( ( x ) + ( ( var_4 ) / int_1 ) ) - ( ( var_3 ) / int_1 ) ) , ( ( ( y ) + ( ( var_4 ) / int_1 ) ) - ( ( var_3 ) / int_1 ) ) , var_3 , var_3 ) ; }
[0]: public static void main ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2. method_1 ( string_1 ) ; java.lang.system.out.println ( var_1. method_2 ( var_3 ) ) ; var_3 = var_2. method_1 ( string_2 ) ; java.lang.system.out.println ( var_1. method_2 ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_6 ( ) ) { method_7 ( var_2 ) ; method_8 ( ) ; } super . method_1 ( ) ; type_1 . method_2 ( method_3 ( ) ) . method_4 ( var_1 . method_5 ( ) ) ; }
[0]: private void method_1 ( ) throws java.io.ioexception, type_1 { java.lang.string var_1 = string_1 ; java.lang.string var_2 = string_2 ; type_2 var_3 = var_4. method_2 ( ) ; type_3 var_5 = var_3. method_3 ( ). method_4 ( var_1 ). method_5 ( ). method_6 ( ) ; if ( null == var_5 ) var_3. method_7 ( ). method_8 ( var_2 ). method_9 ( ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = getintent ( ) . method_2 ( string_1 ) ; type_1 var_2 = getview ( var_3 ) ; var_4 = getview ( var_5 ) ; var_2 . settext ( ( ( method_3 ( ) . getstring ( var_6 ) ) + ( var_1 ) ) ) ; var_7 = getview ( var_8 ) ; var_9 = getview ( var_10 ) ; }
[0]: public void method_1 ( java.lang.string path ) throws java.lang.exception { int i = 1 ; java.lang.stringbuilder buf = new java.lang.stringbuilder ( ) ; for ( java.io.file file : var_1 ) { buf. append ( method_2 ( file, ( i ++ ) ) ) ; } type_1 var_2 = new type_1 ( new java.io.filewriter ( ( path + string_1 ) ), true ) ; var_2. method_3 ( buf ) ; var_2. method_4 ( ) ; var_2. method_5 ( ) ; }

************

************
tgt: public type_2 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( var_1 . x ( ) , var_1 . y ( ) ) ; var_3 . method_2 ( var_2 , var_2 ) ; return new type_4 ( var_2 . x , var_2 . y ) ; }
[0]: public static int [ ] method_1 ( type_1 var_1 ) { int [ ] var_2 = new int [ var_1. length ( ) ] ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { var_2 [ i ] = var_1. method_2 ( i ) ; } return var_2 ; }

************

************
tgt: public java.lang.boolean method_1 ( java.lang.integer var_1 , java.lang.integer var_2 ) throws type_1 { try { type_2 id = new type_2 ( ) ; id . method_2 ( var_2 ) ; id . method_3 ( var_1 ) ; type_3 var_3 = var_4 . method_4 ( id ) ; if ( var_3 != null ) return var_3 . method_5 ( ) ; return false ; } catch ( type_4 var_5 ) { throw new type_1 ( var_5 ) ; } }
[0]: public void method_1 ( final java.lang.string var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_3. method_2 ( type_2. method_3 ( ) ) ) ) ; var_2. method_4 ( var_4 ) ; new type_3 ( ). method_5 ( new type_4 ( ) { public void method_6 ( ) { type_1 var_5 = ( ( type_1 ) ( var_3. method_2 ( var_1 ) ) ) ; var_5. method_7 ( ) ; } }, int_1 ) ; }

************

************
tgt: public void method_1 ( int var_1 , boolean var_2 , android.view.view view ) { if ( ( var_1 < 0 ) || ( var_1 >= ( var_3 . method_2 ( ) ) ) ) return ; if ( var_2 ) { var_4 . put ( var_1 , var_2 ) ; } else { var_4 . delete ( var_1 ) ; } view . method_3 ( var_2 ) ; }
[0]: public type_1 < java.util.list < type_2 > > method_1 ( ) { var_1 += var_2 ; return var_3. method_2 ( var_1 ). method_3 ( var_4 ). method_4 ( var_5 ). method_5 ( new type_3 < java.lang.throwable > ( ) { public void method_6 ( java.lang.throwable var_6 ) { var_1 -= var_2 ; } } ) ; } }

************

************
tgt: public void method_1 ( ) { boolean error = false ; for ( type_1 p : this . var_1 . method_2 ( ) ) { if ( ! ( this . method_3 ( p . method_4 ( ) ) ) ) { error = true ; } } if ( error ) { type_2 . method_5 ( 1 , string_1 ) ; } }
[0]: public void method_1 ( ) { init ( var_1, var_2 ) ; var_3. method_2 ( ) ; if ( ( var_4 )!= null ) { for ( type_1 var_5 : var_4 ) { var_5. method_1 ( ) ; } } if ( ( var_6 )!= null ) { for ( type_2 <? > var_7 : var_6 ) { var_7. method_1 ( ) ; } } } }

************

************
tgt: public java.util.date method_1 ( ) { java.util.date var_1 = new java.util.date ( ) ; java.util.list < java.util.date > var_2 = new java.util.arraylist < java.util.date > ( ) ; for ( type_1 var_3 : var_4 ) { if ( var_3 . method_2 ( var_1 ) ) var_2 . add ( var_3 . method_1 ( ) ) ; } java.util.collections.sort ( var_2 ) ; return var_2 . isempty ( ) ? null : var_2 . get ( 0 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_2 ( ( string_1 + ( ( char ) ( ( type_2. method_3 ( ) ) + char_1 ) ) ) ) ; type_2 = null ; var_2. method_4 ( true ) ; var_3. method_5 ( ) ; type_3. settext ( string_2 ) ; type_3. method_6 ( true ) ; var_4. method_6 ( true ) ; var_5. method_6 ( false ) ; }

************

************
tgt: public void method_1 ( double [ ] var_1 , int offset , int length , type_1 var_2 ) { for ( int i = 0 ; i < length ; i ++ ) { var_1 [ ( offset + i ) ] = ( ( type_2 ) ( var_3 . method_2 ( var_1 [ ( offset + i ) ] , var_2 . method_3 ( i ) ) ) ) . method_4 ( ) ; } }
[0]: private void method_1 ( android.view.view view ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( string_1, var_2 ) ; var_1. method_2 ( string_2, var_3 ) ; type_2 var_4 = new type_2 ( ) ; var_4. method_3 ( var_5 ) ; var_4. method_4 ( var_1 ) ; type_3 var_6 = method_5 ( ) ; type_4 var_7 = var_6. method_6 ( ) ; var_7. add ( var_4, string_3 ) ; var_7. commit ( ) ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { try { var_1 = var_2 . method_2 ( ) ; method_3 ( var_1 ) ; java.lang.system.out.println ( ( string_1 + ( java.lang.string . method_4 ( var_1 ) ) ) ) ; method_5 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { continue ; } } }
[0]: private boolean method_1 ( android.content.context context ) { java.lang.string date = type_1. method_2 ( string_1, java.util.calendar.getinstance ( ). gettime ( ) ) ; type_2 var_1 = context. method_3 ( var_2, var_3 ) ; java.lang.string var_4 = var_1. getstring ( var_5, null ) ; var_1. method_4 ( ). method_5 ( var_5, date ). method_6 ( ) ; return! ( date. equals ( var_4 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) throws type_2 { var_4 = new java.util.arraylist < > ( ) ; var_5 = new java.util.arraylist < > ( ) ; var_6 . method_2 ( var_7 ) ; var_6 . method_3 ( var_2 ) ; var_6 . method_4 ( var_3 ) ; var_6 . method_5 ( new type_3 ( 0 , 0 ) ) ; var_8 = var_1 ; }
[0]: public static java.lang.boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.util.hashmap < java.lang.string, java.lang.string > params = new java.util.hashmap < java.lang.string, java.lang.string > ( ) ; params. put ( var_3, var_1 ) ; params. put ( var_4, var_2 ) ; return var_5. method_2 ( params ) ; }

************

************
tgt: < type_1 extends type_2 < type_1 > > void method_1 ( type_1 [ ] var_1 , type_1 [ ] var_2 ) { java.util.list < type_1 > list = java.util.arrays.aslist ( var_1 ) ; type_3 . method_2 ( list ) ; boolean var_3 = type_4 . equals ( list . method_3 ( new java.lang.object [ var_1 . length ] ) , var_2 ) ; asserttrue ( var_3 ) ; }
[0]: public static type_1 method_1 ( ) { type_2 < type_3 > var_1 = type_2. method_2 ( var_2 class ) ; java.util.iterator < type_3 > var_3 = var_1. iterator ( ) ; if (! ( var_3. method_3 ( ) ) ) throw new type_4 ( string_1 ) ; type_3 var_4 ; while ( var_3. method_3 ( ) ) { var_4 = var_3. method_4 ( ) ; java.lang.system.out.println ( var_4. getclass ( ) ) ; } return var_4. method_5 ( ) ; }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { super . method_1 ( context , intent ) ; type_1 . method_2 ( string_1 ) ; if ( type_2 . equals ( intent . method_3 ( ) ) ) { type_3 var_1 = type_3 . method_4 ( context ) ; int [ ] var_4 = var_1 . method_5 ( new type_4 ( context , getclass ( ) ) ) ; var_1 . method_6 ( var_4 , var_5 ) ; } }
[0]: public type_1 method_1 ( ) throws type_2 { final java.util.list < type_3 > var_1 = new java.util.arraylist < > ( ) ; for ( type_4 var_2 : var_3 ) { var_1. add ( var_2. method_1 ( ) ) ; } final type_5 name = new type_5 ( this. name ) ; final type_6 var_4 = new type_6 ( var_1 ) ; return new type_1 ( name, var_4, null, null ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( ( var_1 . method_2 ( ) ) != null ) || ( ( var_2 . method_2 ( ) ) != null ) ) { return var_1 . method_3 ( ) . method_4 ( var_1 . method_2 ( ) ) . compareto ( var_2 . method_3 ( ) . method_4 ( var_2 . method_2 ( ) ) ) ; } else { return var_1 . method_3 ( ) . compareto ( var_2 . method_3 ( ) ) ; } }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { final type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( var_3. method_4 ( ) ) ; var_1. method_5 ( var_4. method_4 ( ) ) ; var_1. method_6 ( var_5 ) ; var_1. method_7 ( var_6 ) ; final java.util.map var_7 = var_8. method_8 ( var_9 ) ; var_1. method_9 ( var_7 ) ; return var_1 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { java.util.arraylist < type_2 > var_3 = method_2 ( var_1 , var_2 ) ; for ( type_2 var_4 : var_3 ) { method_1 ( var_1 , var_4 ) ; var_1 . method_3 ( ) . remove ( var_4 ) ; } var_1 . method_3 ( ) . remove ( var_2 ) ; }
[0]: public boolean method_1 ( ) { view. settext ( string_1 ) ; try ( java.io.fileinputstream file = method_2 ( ( string_2 + ( var_1 ) ) ) ) { java.util.scanner var_2 = new java.util.scanner ( file ) ; while ( var_2. method_3 ( ) ) { var_3. add ( ( ( var_2. method_4 ( ) ) + ( var_1 ) ) ) ; var_4. add ( var_2. method_4 ( ) ) ; } } catch ( java.lang.exception var_5 ) { return false ; } return true ; } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_2 query = method_2 ( ) . method_3 ( var_2 ) ; query . method_4 ( "id" , var_1 ) ; type_1 var_3 = ( ( type_1 ) ( query . method_5 ( ) ) ) ; type_3 . method_6 ( var_3 . method_7 ( ) ) ; type_3 . method_6 ( var_3 ) ; return var_3 ; }
[0]: public void method_1 ( ) { int var_1 = var_2. method_2 ( ) ; int var_3 = var_2. method_3 ( ) ; int var_4 = var_2. method_4 ( ) ; if ( ( var_4 * int_1 ) >= var_3 ) var_2. method_5 ( var_3 ) ; else var_2. method_5 ( ( var_4 * int_1 ) ) ; message. settext ( string_1 ) ; try { java.lang.thread. method_6 ( int_2 ) ; } catch ( type_1 var_5 ) { var_5. method_7 ( ) ; } var_2. method_8 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string name , java.lang.string var_3 ) { if ( ( ( var_4 ) || ( var_1 != ( var_5 ) ) ) || ( ! ( type_1 . method_2 ( name ) ) ) ) { super . method_1 ( var_1 , var_2 , name , var_3 ) ; return ; } var_4 = true ; super . method_1 ( var_1 , this . var_2 , name , this . var_3 ) ; }
[0]: private void method_1 ( type_1 event ) { var_1. method_2 ( null ) ; for ( type_2 var_2 : var_1. method_3 ( ) ) { var_2. method_4 ( null ) ; } var_1. method_5 ( ). method_6 ( ) ; var_3. method_7 ( var_1, var_4 ) ; var_1. method_2 ( event ) ; var_5. method_8 ( ) ; var_3. method_9 ( var_1, var_4 ) ; }

************

************
tgt: private type_1 < java.lang.integer , java.lang.string > method_1 ( java.lang.string var_1 , int var_2 ) { java.lang.integer value = java.lang.integer.parseint ( var_1 . substring ( 0 , var_2 ) , int_1 ) ; java.lang.string result = var_1 . substring ( var_2 ) ; return new type_1 < java.lang.integer , java.lang.string > ( value , result ) ; }
[0]: public java.lang.string method_1 ( ) { if ( var_1. isempty ( ) ) { int var_2 = ( ( int ) ( type_1. method_2 ( ). method_3 ( ). method_4 ( ). get ( string_1 ) ) ) ; try { var_3. method_5 ( var_2 ) ; } catch ( type_2 var_4 ) { var_5 = string_2 ; var_1 = string_3 ; return string_2 ; } return string_4 ; } }

************

************
tgt: public void method_1 ( boolean var_1 ) { final int var_2 = 1 < < int_1 ; int var_3 = method_2 ( var_4 ) ; int var_5 = method_3 ( var_4 ) ; if ( var_1 ) { var_3 |= var_2 ; var_5 |= var_2 ; } else { var_3 &= ~ var_2 ; var_5 &= ~ var_2 ; } var_6 . method_4 ( ( ( var_7 ) + ( offset ) ) , var_3 ) ; method_5 ( var_5 , var_4 , var_7 ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { var_2. info ( ( string_1 + var_1 ) ) ; var_2. info ( ( string_2 + var_1 ) ) ; var_3. delete ( var_1 ) ; try { this. var_4. method_2 ( ). delete ( this. var_5. getid ( ), var_1 ). execute ( ) ; } catch ( java.io.ioexception var_6 ) { var_2. error ( ( string_3 + var_1 ) ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( ( this . method_2 ( ) ) != null ) && ( ( this . method_3 ( ) ) != null ) ) { this . method_4 ( ( ( ( ( string_1 + ( this . method_3 ( ) ) ) + string_2 ) + ( this . method_2 ( ) ) ) + string_3 ) ) ; ( var_1 = new type_1 ( this ) ) . start ( ) ; } }
[0]: public boolean add ( final type_1 var_1 ) { final boolean var_2 = super. add ( var_1 ) ; if ( var_2 ) try { var_3. method_1 ( ) ; var_4. method_2 ( ) ; } finally { var_3. method_3 ( ) ; } return var_2 ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string key , java.lang.object ... data ) { java.lang.string message ; try { message = var_1 . getstring ( key ) ; } catch ( type_1 var_2 ) { return ( key + string_1 ) + ( type_2 . tostring ( data ) ) ; } return type_3 . format ( message , data ) ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { type_2 var_3 = var_2. get ( i ) ; if ( method_2 ( var_1. method_3 ( ), var_3 ) ) { this. view. method_4 ( i ) ; method_5 ( var_3 ) ; return ; } } }

************

************
tgt: private java.lang.string method_1 ( final java.lang.string url , final java.util.map < java.lang.string , java.lang.object > params ) { java.lang.string var_1 = url ; if ( params != null ) { for ( java.util.map.entry < java.lang.string , java.lang.object > var_2 : params . method_2 ( ) ) { var_1 = method_3 ( var_1 , var_2 . method_4 ( ) , var_2 . getvalue ( ) . tostring ( ) ) ; } } return method_5 ( var_1 ) ; }
[0]: private void method_1 ( ) { if ( type_1. isempty ( var_1 ) ) { return ; } method_2 ( var_2, var_3, new type_2 ( ) { public void method_3 ( type_3 var_4 ) { var_1 = string_1 ; for ( type_4 var_5 : var_6 ) { var_5. method_4 ( ) ; } } } ) ; } }

************

************
tgt: private boolean method_1 ( double var_1 , double var_2 , double var_3 , double var_4 , double var_5 ) { double var_6 = var_3 - var_1 ; double var_7 = var_4 - var_2 ; double var_8 = ( var_6 * var_6 ) + ( var_7 * var_7 ) ; return var_8 < ( var_5 * var_5 ) ; }
[0]: public static boolean method_1 ( java.util.list < short [ ] > list, short [ ] array ) { for ( short [ ] element : list ) { if ( type_1. equals ( element, array ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( type_1 response ) { if ( var_1 ) type_2 . method_2 ( var_2 , response . tostring ( ) ) ; try { method_4 ( response ) ; } catch ( java.lang.exception var_4 ) { type_3 . method_3 ( this , string_2 , var_3 ) . show ( ) ; } }
[0]: public java.lang.string method_1 ( java.util.map < java.lang.string, java.lang.string > var_1, type_1 var_2 ) { type_2. info ( ( string_1 + var_1 ) ) ; type_3 var_3 = var_4. method_2 ( var_5 ) ; var_2. method_3 ( string_2, var_3 ) ; type_2. info ( ( string_3 + var_2 ) ) ; var_6. method_4 ( var_5 ) ; return string_4 ; }

************

************
tgt: public void method_1 ( int var_1 ) { java.lang.string op ; switch ( var_1 ) { default : case var_2 : op = string_1 ; break ; case var_4 : op = string_3 ; break ; case var_3 : op = string_2 ; break ; } main . method_2 ( var_5 , var_6 , op , ( ( ( ( string_4 + ( var_7 ) ) + ( var_8 ) ) + string_5 ) + ( var_8 ) ) , false ) ; }
[0]: private static java.lang.string method_1 ( ) throws type_1 { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; java.lang.system.out.print ( string_1 ) ; java.lang.string var_3 ; if ( var_1. method_2 ( ) ) { var_3 = var_1. method_3 ( ) ; } else { throw new type_1 ( string_2 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.io.ioexception { java.lang.string var_3 = method_2 ( var_1 ) . trim ( ) ; java.lang.string var_4 = method_2 ( var_2 ) . trim ( ) ; type_1 var_5 = new type_1 ( var_6 ) ; type_2 var_7 = var_5 . method_3 ( method_5 ( var_3 ) . method_4 ( ) ) ; java.lang.string var_8 = method_1 ( var_7 ) ; type_3 . assertthat ( method_5 ( var_8 . trim ( ) ) ) . method_6 ( method_5 ( var_4 ) ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { if ( ( ( ( ( method_3 ( ) ) > ( var_1. method_4 ( ) ) ) && ( ( method_4 ( ) ) < ( var_1. method_3 ( ) ) ) ) && ( ( method_5 ( ) ) > ( var_1. method_6 ( ) ) ) ) && ( ( method_6 ( ) ) < ( var_1. method_5 ( ) ) ) ) { return true ; } } return false ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ! ( var_2 . method_2 ( ) . equals ( var_1 . method_2 ( ) ) ) ) { return false ; } if ( ! ( var_1 . method_3 ( 1 ) ) ) { return false ; } java.lang.integer value = var_1 . method_4 ( ) . get ( var_2 . method_5 ( ) ) ; return ( value != null ) && ( value > 0 ) ; }
[0]: public type_1 method_1 ( final type_2 < type_3 > var_1, final int var_2, final type_1 var_3 ) { if ( ( var_4. method_2 ( ) ) == null ) { return null ; } else if ( var_5 ) { final type_4 < type_3 > var_6 = type_5. method_3 ( ) ; final type_6 var_7 = var_6. method_4 ( var_4 ) ; var_8. method_5 ( var_7 ) ; var_3. method_5 ( 0, var_7 ) ; return var_3 ; } else { return var_3 ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string name , java.lang.string var_3 ) { type_2 var_1 = type_2 . method_2 ( string_1 ) . method_3 ( var_2 ) . method_4 ( string_2 ) . method_3 ( var_3 ) . method_4 ( "name" ) . method_3 ( name ) ; type_3 var_4 = type_3 . query ( var_1 ) ; type_1 var_5 = var_6 . method_5 ( var_4 , var_7 class ) ; return var_5 ; }
[0]: public boolean method_1 ( ) { boolean var_1 = false ; if ( type_1. method_2 ( ). method_3 ( var_2 class ) ) { type_2 var_3 = ( ( type_2 ) ( type_1. method_2 ( ). method_4 ( var_4 class ) ) ) ; if ( var_3!= null ) { var_1 = var_3. method_5 ( this ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ! ( type_1 . isempty ( var_2 ) ) ) { android.content.intent intent = new android.content.intent ( getactivity ( ) , var_3 class ) ; intent . method_2 ( string_1 , var_2 ) ; intent . method_2 ( string_2 , var_4 ) ; intent . method_2 ( string_3 , true ) ; method_3 ( intent ) ; } }
[0]: public int method_1 ( ) { int result = method_2 ( ). method_1 ( ) ; result = ( int_1 * result ) + ( method_3 ( ). method_1 ( ) ) ; result = ( int_1 * result ) + ( method_4 ( ). method_1 ( ) ) ; return result ; }

************

************
tgt: public void method_1 ( java.lang.object key , type_1 value , type_2 context ) throws java.io.ioexception , type_3 { java.lang.string [ ] split = value . tostring ( ) . split ( "\t" ) ; var_1 . set ( split [ 1 ] ) ; context . method_2 ( var_1 , var_2 ) ; }
[0]: private void method_1 ( type_1 var_1 ) throws java.lang.exception { if ( ( var_1. method_2 ( ) )!= 0 ) throw new type_2 ( var_2 ) ; if ( var_1. method_3 ( ). method_4 ( new java.util.date ( ) ) ) throw new type_3 ( var_3 ) ; else throw new type_3 ( var_3 ) ; }

************

************
tgt: private boolean method_1 ( int var_1 , int var_2 ) { java.util.set < java.lang.integer > var_3 = var_4 . get ( var_1 ) ; if ( var_3 == null ) { return false ; } for ( java.lang.integer var_5 : var_3 ) { if ( var_5 . equals ( var_2 ) ) { return true ; } if ( method_1 ( var_5 , var_2 ) ) { return true ; } } return false ; }
[0]: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception, type_1 { type_2 type_3 = new type_2 ( string_1, int_1 ) ; java.io.bufferedwriter var_2 = new java.io.bufferedwriter ( new type_4 ( type_3. method_2 ( ), type_5. method_3 ( string_2 ) ) ) ; if ( var_3 ) java.lang.system.out.println ( ( string_3 + var_1 ) ) ; var_2. method_4 ( ( ( string_3 + string_4 ) + var_1 ) ) ; var_2. method_5 ( ) ; var_2. method_6 ( ) ; type_3. method_6 ( ) ; }

************

************
tgt: private static synchronized void method_1 ( ) { if ( ( var_3 ) != null ) { type_1 . method_2 ( var_1 , string_1 ) ; var_2 . starttime = type_2 . method_3 ( ) ; var_3 . method_4 ( var_4 ) ; type_1 . method_2 ( var_1 , ( string_2 + ( java.lang.long . tostring ( var_2 . starttime ) ) ) ) ; } }
[0]: public type_1 method_1 ( ) { int var_1 = method_2 ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( i == var_1 ) { return var_2. get ( i ) ; } } return null ; }

************

************
tgt: protected void method_1 ( int position ) { if ( position != 0 ) { type_1 var_1 = var_2 . method_2 ( ( position - 1 ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ) , var_3 class ) ; intent . method_3 ( var_4 , var_5 ) ; intent . method_3 ( var_6 , var_1 . getid ( ) ) ; method_4 ( intent ) ; } }
[0]: public type_1 method_1 ( int var_1, type_2 var_2 ) { type_1 status = var_3. get ( type_3. key ( var_4, var_1 ) ) ; if ( status == null ) { return null ; } status. method_2 ( var_2 ) ; return var_3. put ( status. method_3 ( ), status ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( ) . method_3 ( var_1 ) ; type_2 result = method_4 ( var_2 ) ; type_3 listener = new type_3 ( ) ; listener . method_5 ( result ) ; listener . method_6 ( result ) ; java.io.file file = type_1 . method_7 ( ) ; method_8 ( file . method_9 ( ) ) ; }
[0]: public boolean method_1 ( ) { if ( ( ( var_1. method_2 ( ) ) && ( var_1. method_3 ( ) ) ) && ( var_1. method_4 ( ) ) ) { return true ; } else { method_5 ( var_2 ) ; return true ; } }

************

************
tgt: static boolean method_1 ( type_2 var_2 , java.lang.string var_3 ) { return var_2 . method_2 ( ( ) - > { type_3 var_4 = var_2 . method_3 ( ) . method_4 ( ) ; try ( type_4 var_5 = var_4 . method_5 ( null , null , null , new java.lang.string [ ] { string_1 } ) ) { while ( var_5 . method_6 ( ) ) { if ( var_3 . method_7 ( var_5 . getstring ( string_2 ) ) ) { return true ; } } } return false ; } ) ; }
[0]: public void method_1 ( ) { while ( var_1 ) { try { method_2 ( ) ; } catch ( type_1 var_2 ) { var_1 = false ; var_2. method_3 ( ) ; } catch ( type_2 var_2 ) { var_1 = false ; var_2. method_3 ( ) ; } while (! ( var_1 ) ) ; } } }

************

************
tgt: public void method_1 ( int var_1 , int position ) { switch ( var_1 ) { case var_2 : if ( position >= 0 ) { var_3 . method_2 ( ) . remove ( position ) ; var_3 . method_3 ( position ) ; } break ; case var_4 : var_3 . method_2 ( ) . set ( position , new type_1 ( ) ) ; var_3 . method_4 ( position ) ; break ; default : break ; } }
[0]: private static void method_1 ( java.io.file var_1, java.util.list < java.io.file > var_2 ) { if ( (! ( var_1. method_2 ( ) ) ) && (! ( var_1. method_3 ( ) ) ) ) { var_2. add ( var_1 ) ; } else { for ( java.io.file var_3 : var_1. method_4 ( ) ) { type_1. method_1 ( var_3, var_2 ) ; } } if (! ( var_1. method_2 ( ) ) ) { var_2. add ( var_1 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.list < type_2 > var_2 ; java.lang.string var_3 = var_1 . method_2 ( ) ; if ( ! ( var_4 . method_3 ( var_3 ) ) ) { var_2 = new java.util.arraylist < > ( ) ; } else { var_2 = var_4 . get ( var_3 ) ; } var_2 . add ( method_4 ( var_1 ) ) ; var_4 . put ( var_3 , var_2 ) ; type_3 . method_5 ( string_1 , var_3 , var_1 . method_6 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { type_2. method_2 ( var_2, var_1. method_3 ( ) ) ; } else { method_4 ( ) ; ( ( type_3 ) ( getactivity ( ) ) ). method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { type_3 var_1 = new type_3 ( ) ; var_1 . method_2 ( type_4 . method_3 ( ) ) ; var_1 . method_4 ( var_2 ) ; method_5 ( new type_1 ( string_1 ) ) . method_6 ( var_3 ) . method_7 ( var_1 ) ; var_4 . method_8 ( var_1 ) ; }
[0]: protected int method_1 ( ) throws java.io.ioexception, type_1 { int c = method_2 ( ) ; while ( ( type_2. method_3 ( c ) ) || ( c == char_1 ) ) { if ( c == char_1 ) { method_4 ( ) ; } else if ( c == char_2 ) { ( var_1 ) ++ ; } } method_5 ( c ) ; return c ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { nodes . add ( var_1 . method_2 ( ) ) ; nodes . add ( var_1 . to ( ) ) ; int var_2 = var_1 . method_2 ( ) ; if ( ! ( var_3 . method_3 ( var_2 ) ) ) { var_3 . put ( var_2 , new java.util.hashset < > ( ) ) ; } java.util.set < type_1 > var_4 = var_3 . get ( var_2 ) ; var_4 . add ( var_1 ) ; }
[0]: private java.lang.string method_1 ( ) { java.util.arraylist < java.lang.long > var_1 = new java.util.arraylist < > ( ) ; for ( long i : var_2 ) { if ( i > 0 ) { var_1. add ( i ) ; } } if ( ( var_1. size ( ) ) == 0 ) { return string_1 ; } return string_2 + ( type_1. method_2 ( type_2. method_3 ( var_1 ) ) ) ; } }

************

************
tgt: void method_1 ( ) { type_1 [ ] temp = new type_1 [ var_1 . method_2 ( ) . size ( ) ] ; temp = var_1 . method_2 ( ) . method_3 ( temp ) ; for ( type_1 t : temp ) { if ( ( t != null ) && ( ! ( t . gettext ( ) . equals ( string_1 ) ) ) ) var_1 . method_2 ( ) . remove ( t ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1. method_2 ( ) ) == null ) { method_3 ( ) ; } else { java.lang.object [ ] var_2 = new java.lang.object [ ] { var_3 [ 1 ], var_3 [ int_1 ] } ; int var_4 = var_1. method_4 ( string_1, string_2, var_2, var_5 ) ; if ( var_4!= ( var_6 ) ) { new type_1 ( var_1. method_2 ( ), ( var_4 + 1 ) ) ; } } } }

************

************
tgt: private java.lang.string method_1 ( java.lang.object value , type_1 var_1 ) { type_2 var_2 = var_3 . method_2 ( var_1 . gettype ( ) ) ; type_3 var_4 = var_2 . method_3 ( ) . method_4 ( ) ; return type_4 . method_5 ( var_4 , var_2 ) . method_6 ( value ) . tostring ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; android.content.intent var_5 = getintent ( ) ; int var_6 = var_5. method_5 ( string_1, 1 ) ; method_6 ( var_6 ) ; method_7 ( ). method_8 ( true ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { synchronized ( this ) { var_2 . remove ( var_1 ) ; if ( ( ( var_3 ) > 0 ) && ( var_2 . isempty ( ) ) ) { method_2 ( ) ; } if ( ( var_4 ) != null ) { var_4 . method_3 ( ) ; var_4 = null ; } } }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = method_2 ( string_1 ) ; for ( type_1 k : var_2 ) { if ( ( k. method_3 ( ) ) == ( java.lang.long.parselong ( var_1 ) ) ) { var_3 = k ; } } var_4. method_4 ( ). add ( new type_2 ( var_5, var_3 ) ) ; return string_2 ; }

************

************
tgt: protected void start ( type_1 var_1 ) throws java.lang.exception { type_2 . method_1 ( ) . method_2 ( var_1 ) ; type_3 var_2 = new type_4 ( ) ; type_5 var_3 = type_6 . method_3 ( var_2 ) ; var_1 . method_4 ( var_4 class . getname ( ) , var_3 , null ) ; }
[0]: protected static void method_1 ( java.util.set < type_1 > var_1, java.lang.class <? > var_2, java.lang.class <? > var_3, type_2 var_4, type_3 var_5 ) { java.lang.string name = ( type_4. method_2 ( var_5. getname ( ) ) ) + string_1 ; type_5. method_3 ( var_1, var_2, var_3, var_4, var_5, name, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = new type_1 ( "type" , string_1 ) ; type_2 var_2 = method_2 ( var_1 ) ; var_2 . add ( var_5 ) ; java.util.list < type_1 > var_6 = var_3 . method_4 ( 1 , 1 ) ; asserttrue ( var_6 . isempty ( ) ) ; }
[0]: public java.util.collection method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( ( var_1. length ( ) ) == 0 ) ) { return method_2 ( ) ; } else { type_1 var_2 = method_3 ( var_1 ) ; if ( var_2 == null ) { return new java.util.vector ( ) ; } return var_2. method_4 ( ) ; } } }

************

************
tgt: public static void init ( type_1 var_1 ) { java.io.file var_2 = ( ( java.io.file ) ( var_1 . method_1 ( string_1 ) ) ) ; var_3 = new type_2 ( new type_3 ( var_4 , var_2 ) ) ; int var_5 = type_4 . method_2 ( ) ; if ( var_5 != 0 ) { var_3 . method_3 ( ( ( var_5 * int_1 ) * int_1 ) ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = new type_1 ( this. var_2, int_1 ). tostring ( ) ; assertequals ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( this. method_2 ( ) ) ) + string_3 ) + string_4 ) + string_5 ) + string_6 ), var_1 ) ; }

************

************
tgt: public static type_1 method_1 ( int i ) { type_1 var_1 = new type_1 ( i ) ; for ( int j = 0 ; j < int_1 ; j ++ ) { type_2 t = type_3 . method_2 ( ) ; type_4 var_2 = new type_4 ( ) ; var_2 . method_3 ( t ) ; var_2 . method_4 ( type_5 . method_5 ( 1 , 1 ) ) ; var_1 . add ( var_2 ) ; } return var_1 ; }
[0]: private void method_1 ( ) { if ( ( var_1. method_2 ( ). method_3 ( ) ) > 0 ) { int var_2 = method_4 ( ) ; if ( var_2 > ( var_3 ) ) { var_3 = var_2 ; } if ( ( var_3 ) >= ( var_4. method_5 ( ) ) ) { var_1. method_6 ( ) ; } } else { var_3 = 0 ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 writer = new type_1 ( ) ; final type_2 var_1 = new type_2 ( new type_3 ( writer ) , true ) ; method_2 ( ) . method_3 ( type_5 . method_4 ( var_1 , method_5 ( int_1 ) ) ) . method_6 ( ) . method_7 ( string_1 , method_5 ( string_2 ) ) . method_8 ( ) . get ( string_3 ) ; type_6 . assertthat ( writer . tostring ( ) , method_9 ( string_4 ) ) ; }
[0]: public void method_1 ( int var_1, int var_2, boolean var_3 ) { if ( var_3 == false ) { this. method_2 ( ) ; } else if ( this. contains ( var_1, var_2 ) ) { if ( ( this. var_4 ) == true ) { this. method_3 ( var_1, this. var_5 ) ; } else { this. method_3 ( var_1, var_2 ) ; } } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 ) { type_3 var_3 = this . method_2 ( var_1 . method_2 ( ) . method_3 ( ) , var_1 . method_2 ( ) . method_4 ( ) ) ; var_3 . method_5 ( null ) ; var_2 . method_5 ( var_1 ) ; var_1 . method_6 ( var_2 ) ; return new type_1 ( var_2 . method_3 ( ) , var_2 . method_4 ( ) , var_4 , var_1 , null , null ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { type_3 < type_2 > var_3 = ( var_2!= null )? var_2. method_2 ( ) : null ; type_4 < type_1 > set = var_4. get ( var_3 ) ; if ( set == null ) { set = new type_5 < type_1 > ( new type_6 ( ) ) ; var_4. put ( var_3, set ) ; set. add ( var_1 ) ; } else { set. add ( var_1 ) ; } }

************

************
tgt: private void method_1 ( ) { java.util.set < java.lang.integer > tmp = new java.util.hashset < > ( ) ; java.lang.string var_1 = var_2 . get ( ) ; for ( java.lang.string var_3 : var_1 . split ( string_1 ) ) { try { tmp . add ( java.lang.integer.parseint ( var_3 ) ) ; } catch ( type_1 var_4 ) { return ; } } var_5 . set ( tmp ) ; }
[0]: public void method_1 ( int var_1, java.lang.string message ) { int size = java.lang.integer.parseint ( message ) ; byte [ ] buffer = new byte [ size + 1 ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = char_1 ; buffer [ size ] = 0 ; byte [ ] var_2 = type_1. method_2 ( buffer ) ; java.lang.string result = new java.lang.string ( var_2 ) ; method_3 ( var_1, result ) ; }

************

************
tgt: public java.util.hashset < type_1 > method_1 ( java.lang.string name ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; java.util.hashset < type_2 > var_2 = this . method_2 ( name ) ; if ( var_2 != null ) { for ( type_2 method : var_2 ) var_1 . add ( method . gettype ( ) ) ; return var_1 ; } else { return null ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = var_2. getname ( ) ; type_1 var_3 = type_2. method_2 ( ). method_3 ( ). method_4 ( var_1 ) ; var_2. method_5 ( ( ( ( ( var_3. method_6 ( ) ) + var_1 ) + ( var_3. method_7 ( ) ) ) + ( var_4 ) ) ) ; }

************

************
tgt: public void update ( type_1 var_1 ) { this . method_1 ( var_1 . method_2 ( ) ) ; var_3 = var_1 . method_4 ( ) ; this . method_5 ( var_1 . method_6 ( ) ) ; if ( ! ( var_1 . method_7 ( ) . isempty ( ) ) ) { var_4 = var_1 . method_7 ( ) ; } }
[0]: private void method_1 ( type_1 index, type_2 var_1, int var_2, java.util.arraylist < type_3 > var_3 ) { type_4 var_4 = type_5. method_2 ( var_1. type ) ; var_3. add ( new type_6 ( var_5, var_4 ) ) ; var_3. add ( new type_6 ( var_6, var_4 ) ) ; method_1 ( index, var_1. type, var_1. op, var_1. target, var_2, var_3 ) ; }

************

************
tgt: boolean method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_1 , string_1 ) ; if ( ( var_1 == ( var_2 ) ) && ( ( var_3 ) < 0 ) ) return true ; if ( ( var_3 ) < 0 ) return false ; if ( ( var_4 . get ( var_3 ) . var_1 ) == var_1 ) return true ; return false ; }
[0]: public static java.lang.string method_1 ( java.lang.string url ) throws type_1 { type_2 var_1 = new type_2 ( url ) ; java.lang.string var_2 = var_1. method_2 ( ) ; if ( var_2 == null ) { return url. replace ( string_1, string_2 ) ; } return var_2. replace ( string_1, string_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( int_1 , int_2 ) ; var_1 . method_2 ( int_3 ) ; var_1 . method_2 ( int_4 ) ; type_2 . method_3 ( var_1 , new long [ ] [ ] { new long [ ] { int_4 , int_3 } } ) ; }
[0]: private void method_1 ( type_1 context ) { type_2 var_1 = context. method_2 ( string_1 ) ; var_1. method_3 ( string_2, string_3 ). method_4 ( string_4, var_2 ). method_5 ( var_3 ) ; var_1. method_3 ( string_5, string_1 ). method_4 ( string_4, var_2 ). method_5 ( var_3 ) ; var_1. method_3 ( string_6 ). method_4 ( string_4, var_2 ). method_5 ( var_3 ) ; type_3 var_4 = var_1. build ( ) ; context. method_6 ( var_4 ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = new java.lang.string ( text ) ; java.lang.string var_2 ; for ( type_1 var_3 : var_4 ) { var_2 = method_2 ( var_3 . method_3 ( ) , var_3 . method_4 ( ) ) ; if ( ! ( var_3 . method_5 ( ) . isempty ( ) ) ) var_2 = method_6 ( var_2 , var_3 ) ; var_1 = var_1 . replace ( var_3 . method_3 ( ) , var_2 ) ; } return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( ) ) { if ( ( var_2. method_3 ( ) ) && ( var_1. method_4 ( ). method_5 ( ). method_3 ( ) ) ) { return var_2. equals ( var_1. method_4 ( ). method_5 ( ) ) ; } return var_2. method_1 ( var_1. method_4 ( ). method_5 ( ) ) ; } else { if ( var_1. method_6 ( ) ) { return true ; } return false ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { out . add ( var_1 . method_2 ( ) . method_3 ( ) ) ; out . add ( var_1 . method_4 ( ) . method_3 ( ) ) ; out . add ( var_1 . method_5 ( ) . method_3 ( ) ) ; out . add ( var_1 . getcontext ( ) . method_3 ( ) ) ; }
[0]: public boolean method_1 ( final java.awt.color var_1, final int number ) { for ( type_1 k : var_2. get ( var_3 ). method_2 ( ) ) { if ( ( k. method_3 ( ). equals ( var_1 ) ) && ( ( k. method_4 ( ) ) == number ) ) { method_5 ( k, var_4 ) ; var_2. get ( var_3 ). remove ( k ) ; return true ; } } return false ; }

************

************
tgt: private static boolean method_1 ( char c ) { return ( ( ( c >= char_1 ) && ( c <= char_2 ) ) || ( ( c >= char_3 ) && ( c >= char_4 ) ) ) || ( ( c >= char_5 ) && ( c >= char_6 ) ) ; }
[0]: public void method_1 ( ) { for ( type_1 t : var_1 ) { var_2. method_2 ( t. method_3 ( ). offset ( ), t. method_4 ( ), var_2. method_5 ( var_3. get ( t. type ( ) ) ), true ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string text = var_1 . tostring ( ) . trim ( ) ; var_2 . method_2 ( ) ; for ( int i = 0 ; i < ( var_4 . size ( ) ) ; i ++ ) { if ( var_4 . get ( i ) . getname ( ) . tolowercase ( ) . contains ( text . tolowercase ( ) ) ) { var_2 . add ( var_4 . get ( i ) ) ; } } var_5 . method_3 ( ) ; method_4 ( ) ; }
[0]: public int method_1 ( android.content.intent intent, int var_1, int var_2 ) { if ( type_1. equals ( intent. method_2 ( ), getstring ( var_3 ) ) ) { if ( var_4. method_3 ( ) ) { var_5. method_4 ( true ) ; } else { type_2. method_5 ( ). update ( ) ; } } return super. method_1 ( intent, var_1, var_2 ) ; }

************

************
tgt: protected void method_1 ( ) { try { var_1 . method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { try { var_1 . method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_5 ( ) ; } return ; } var_5 . method_6 ( var_1 , false ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.integer var_2 ; do { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; java.lang.system.out.println ( string_4 ) ; var_2 = var_1. method_2 ( ) ; } while ( var_1. method_3 ( var_2, 1, int_1 ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 out = type_1 . method_2 ( var_1 ) ; var_2 . method_3 ( var_3 . method_4 ( ) ) ; var_2 . method_5 ( method_6 ( ) ) ; int var_4 = var_5 . method_7 ( ) ; if ( var_4 == 0 ) { var_2 . method_3 ( 0 ) ; } else { type_1 var_6 = var_5 . method_1 ( ) ; var_2 . method_3 ( var_6 . method_8 ( ) ) ; var_2 . method_9 ( var_6 ) ; } var_2 . method_10 ( ) ; return out ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( ), new java.io.file ( var_2. method_2 ( ), string_1 ) ) ; type_3 var_3 = new type_3 ( ) ; var_4. method_3 ( var_3 ) ; var_1. method_3 ( var_3 ) ; type_4. asserttrue ( var_4. equals ( var_1 ) ) ; try { var_1. method_4 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( ) ; state = var_2 ; var_3 = var_4 ; var_5 = false ; var_6 = false ; var_7 = true ; var_8 = true ; var_9 = false ; var_10 = false ; method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; if ( ( var_11 ) == ( var_12 ) ) { method_5 ( ) ; method_6 ( ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; var_1 = true ; method_2 ( var_2, new type_1 ( var_3 ) ) ; type_1 var_4 = new type_1 ( ) ; var_4. method_3 ( var_5 ) ; var_4. method_3 ( var_6 ) ; method_2 ( var_7, var_4 ) ; boolean var_8 = false ; var_8 = var_9. method_4 ( ) ; type_2. method_5 ( string_1, ( string_2 + var_8 ) ) ; method_6 ( string_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position , java.util.list < java.lang.object > var_2 ) { super . method_1 ( var_1 , position , var_2 ) ; if ( ( var_2 != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { var_1 . method_2 ( ( ( type_2 ) ( var_2 . get ( 0 ) ) ) ) ; } }
[0]: public void method_1 ( ) { java.lang.object result ; type_1 var_1 ; var_1 = new type_1 ( var_2 ) ; result = var_1. method_2 ( string_1, 1 ) ; assertequals ( type_2. method_3 ( string_2, var_2 ), 1, result ) ; var_1 = new type_1 ( var_3 ) ; result = var_1. method_2 ( string_1, int_1 ) ; assertequals ( type_2. method_3 ( string_3, var_3 ), int_2, result ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 , type_4 var_3 , java.lang.string var_4 , type_5 var_5 ) { int var_6 = var_5 . getid ( ) ; type_1 var_7 = var_5 . method_2 ( ) ; if ( var_7 == null ) { var_7 = new type_1 ( var_6 ) ; } var_7 . method_3 ( var_1 ) ; var_7 . method_4 ( var_2 ) ; var_7 . method_5 ( var_3 ) ; var_7 . method_6 ( var_5 ) ; var_8 . method_8 ( var_7 ) ; return var_7 ; }
[0]: private static void method_1 ( final java.util.list < java.util.map < java.lang.string, java.lang.object > > var_1, final java.lang.string key ) { java.util.collections.sort ( var_1, ( var_2, var_3 ) - > { return ( java.lang.double. method_2 ( var_2. get ( key ). tostring ( ) ) ) <= ( java.lang.double. method_2 ( var_3. get ( key ). tostring ( ) ) )? 1 : - 1 ; } ) ; }

************

************
tgt: private void method_1 ( float var_1 ) { var_2 . settext ( ( string_1 + ( java.lang.string . method_2 ( var_1 ) ) ) ) ; if ( var_1 <= ( var_3 ) ) { var_3 = var_1 ; } if ( var_1 >= ( var_5 ) ) { var_5 = var_1 ; } var_4 . settext ( ( string_2 + ( var_3 ) ) ) ; var_6 . settext ( ( string_3 + ( var_5 ) ) ) ; }
[0]: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == 0 ) { var_1 = ( var_2. size ( ) ) - 1 ; method_2 ( var_2. get ( var_1 ) ) ; } else { var_1 -= 1 ; method_2 ( var_2. get ( var_1 ) ) ; } method_3 ( ) ; }

************

************
tgt: private void method_1 ( ) { switch ( var_1 ) { case var_2 : var_3 . method_2 ( ) ; var_3 . method_3 ( var_4 . method_4 ( ) . method_5 ( ) ) ; var_8 . method_7 ( ) ; break ; case var_5 : var_6 . method_2 ( ) ; method_6 ( var_7 ) ; break ; } }
[0]: public void method_1 ( final java.lang.string var_1, final int var_2 ) throws type_1 { type_2 < java.lang.void > var_3 = new type_2 < java.lang.void > ( ) { public java.lang.void method_2 ( ) throws java.lang.exception { var_4. method_1 ( var_1, var_2 ) ; return null ; } } ; try { method_3 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { type_3. error ( string_1, var_5 ) ; throw new type_1 ( var_5 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) . var_2 ; if ( ( var_4 ) == null ) { var_5 . method_1 ( ) ; var_6 = var_5 ; } else if ( var_3 ) { super . method_1 ( ) ; } else { this . var_7 = type_2 . method_2 ( ) . var_8 . method_3 ( ) ; this . var_9 = type_2 . method_2 ( ) . var_10 . method_3 ( ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1. method_2 ( ) ) && ( ( counter ) > int_1 ) ) { type_1 var_2 = new type_1 ( method_3 ( ), method_4 ( ), 0, 0, 0, 0, var_3 ) ; var_4. add ( var_2 ) ; var_5. method_5 ( ). method_6 ( var_2 ) ; counter = 0 ; } else { ( counter ) ++ ; } }

************

************
tgt: private void method_1 ( ) { try ( java.io.bufferedwriter writer = new java.io.bufferedwriter ( new type_1 ( new java.io.fileoutputstream ( file , true ) , string_1 ) ) ) { writer.write ( ( ( ( ( type_2 . method_2 ( var_1 ) ) + string_2 ) + ( var_2 . gettext ( ) ) ) + "\n" ) ) ; method_3 ( string_3 ) ; } catch ( java.io.ioexception var_3 ) { method_3 ( ( string_4 + ( var_3 . method_4 ( ) ) ) ) ; var_3 . method_5 ( ) ; } }
[0]: private type_1 < type_2 > method_1 ( type_1 < type_2 > var_1, type_2 value ) { if ( var_1 == null ) { return new type_1 < > ( value ) ; } if ( ( var_2. compareto ( value ) ) <= 0 ) { var_3 = method_1 ( var_3, value ) ; } else { var_4 = method_1 ( var_4, value ) ; } var_1. count = 1 + ( method_2 ( var_1 ) ) ; return var_1 ; }

************

************
tgt: public void update ( ) { if ( ( var_1 ) < ( var_2 ) ) { var_1 += var_3 ; } if ( ( var_1 ) > ( var_2 ) ) { var_1 = var_2 ; } if ( ( var_1 ) <= 0 ) { var_1 = 0 ; } if ( ( var_4 ) < ( var_5 ) ) { var_4 += var_6 ; } if ( ( var_4 ) > ( var_5 ) ) { var_4 = var_5 ; } if ( ( var_4 ) <= 0 ) { var_4 = 0 ; } }
[0]: public void method_1 ( ) { type_1. assertequals ( string_1, var_1. method_2 ( ) ) ; var_1. method_3 ( string_2 ) ; type_1. assertequals ( string_3, var_1. method_2 ( ) ) ; var_1. method_4 ( ) ; type_1. assertequals ( string_4, var_1. method_5 ( ) ) ; }

************

************
tgt: public void append ( java.lang.string key , java.lang.string content ) { java.lang.string value = get ( key ) ; if ( value != null ) { value += content ; } put ( key , value ) ; var_1 . info ( ( ( ( ( ( string_1 + ( node . method_1 ( ) ) ) + string_2 ) + key ) + string_3 ) + value ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { try { type_1. method_1 ( var_1, string_1, new java.lang.object [ ] { var_2, type_2. method_2 ( var_2 ) } ) ; } catch ( java.lang.exception var_3 ) { type_1. method_1 ( var_4, string_2, new java.lang.object [ ] { var_3. method_3 ( ) } ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string value ) { if ( value . trim ( ) . isempty ( ) ) { return null ; } java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; java.lang.string [ ] var_2 = value . split ( var_3 ) ; for ( java.lang.string var_4 : var_2 ) { if ( ! ( var_4 . trim ( ) . isempty ( ) ) ) { method_2 ( var_4 , var_1 ) ; } } return var_1 ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; type_4 var_6 = ( ( type_4 ) ( var_4. method_3 ( var_7 ) ) ) ; var_6. settext ( getstring ( var_8, method_4 ( ). getint ( var_9 ) ) ) ; return var_4 ; }

************

************
tgt: public java.lang.boolean method_1 ( final java.lang.string var_1 , final java.util.set < type_1 > var_2 ) throws type_4 { final type_2 var_3 = method_2 ( var_1 ) ; if ( var_3 == null ) return false ; else try { var_3 . method_3 ( var_2 ) ; return true ; } catch ( final java.lang.exception var_4 ) { final java.lang.string var_5 = ( string_1 + var_1 ) + string_2 ; type_3 . error ( var_5 , var_4 ) ; throw new type_4 ( var_5 , var_4 ) ; } }
[0]: static type_1 method_1 ( type_2 data ) { type_1 tmp = type_3. method_2 ( data ) ; if ( ( tmp. method_3 ( ) )!= null ) { tmp = tmp. method_4 ( ) ; tmp. method_5 ( data. getname ( ) ) ; } tmp = tmp. getview ( false ) ; tmp. method_6 ( var_1 class ) ; return tmp ; }

************

************
tgt: public < type_1 extends type_2 > java.util.list < type_1 > method_1 ( java.lang.class < type_1 > var_1 ) { java.util.list < type_2 > list = method_2 ( ) ; java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; for ( type_2 var_3 : list ) { if ( var_1 . method_3 ( var_3 ) ) { var_2 . add ( ( ( type_1 ) ( var_3 ) ) ) ; } } return var_2 ; }
[0]: public static java.lang.string [ ] method_1 ( type_1 var_1, java.lang.string... var_2 ) { type_2. method_2 ( var_2 ) ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { var_2 [ i ] = type_3. method_3 ( var_1, var_2 [ i ] ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( int var_1 , int to ) { int var_2 = method_2 ( ) ; super . add ( to , super . remove ( var_1 ) ) ; var_3 . method_3 ( ) ; if ( var_1 == var_2 ) method_4 ( to ) ; else if ( ( var_1 < var_2 ) && ( to >= var_2 ) ) method_4 ( ( var_2 - 1 ) ) ; else if ( ( var_1 > var_2 ) && ( to <= var_2 ) ) method_4 ( ( var_2 + 1 ) ) ; }
[0]: private void method_1 ( type_1 var_1, int var_2, type_2 var_3, type_3 var_4 ) throws type_4 { java.lang.string var_5 = string_1 ; type_5 var_6 = var_1. method_2 ( var_5 ) ; var_6. method_3 ( 1, var_2 ) ; var_6. method_3 ( int_1, var_3. getid ( ) ) ; var_6. method_3 ( int_2, var_4. method_4 ( ) ) ; var_6. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 message ) { type_2 var_1 = method_2 ( message ) ; boolean var_2 = ! ( var_1 . method_3 ( ) ) ; method_4 ( var_1 . method_5 ( ) , type_3 . method_6 ( var_1 , false ) , ( var_2 ? var_3 : var_4 ) , ( var_2 ? 0 : 1 ) , message . method_7 ( ) , 0l ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = method_2 ( ) ; type_1. assertthat ( var_2 [ 1 ]. isempty ( ) ) ; java.lang.string var_3 = var_2 [ 0 ] ; java.lang.string var_4 = type_2. method_3 ( var_3 ). replaceall ( string_1 ) ; if (! ( var_4. equals ( var_1 ) ) ) { var_5. method_4 ( string_2, var_1, var_4 ) ; } }

************

************
tgt: public synchronized void method_1 ( java.lang.string var_1 , type_1 time ) { ( var_2 ) ++ ; type_2 var_3 = new type_2 ( var_1 , 1 , time ) ; if ( ! ( var_4 . contains ( var_3 ) ) ) { var_4 . add ( var_3 ) ; } else { type_2 var_5 = var_4 . get ( var_4 . method_2 ( var_3 ) ) ; var_5 . method_3 ( ( ( var_5 . method_4 ( ) ) + 1 ) ) ; var_5 . method_5 ( time ) ; } }
[0]: private java.lang.charsequence method_1 ( final int var_1, final type_1 var_2, final java.lang.string var_3 ) { if ( 0 == var_1 ) { return string_1 ; } return java.lang.string.format ( ( ( ( var_3 + string_2 ) + var_3 ) + string_3 ), java.lang.integer. method_2 ( var_1 ), method_3 ( var_2. method_4 ( ), var_2. method_5 ( ). tostring ( ) ) ) ; }

************

************
tgt: public java.io.inputstream method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { if ( var_1 != null ) { type_4 var_4 = var_5 . method_2 ( var_6 , true , false , var_7 , var_2 , var_3 ) ; return var_5 . method_3 ( var_8 . method_4 ( var_1 , var_2 ) . method_5 ( ) , var_9 , var_4 , var_1 . method_6 ( ) ) ; } else { return new type_5 ( 1l ) ; } }
[0]: public void method_1 ( int var_1, int var_2, int height ) { type_1 var_3 = var_4. method_2 ( ) ; var_3. method_3 ( this. method_4 ( ), ( var_1 - ( ( this. method_4 ( ). method_5 ( ) ) / int_1 ) ), var_2, this. method_4 ( ). method_5 ( ), height, null ) ; method_6 ( ) ; }

************

************
tgt: public static java.lang.throwable method_1 ( java.lang.throwable t ) { if ( t == null ) { return null ; } java.lang.throwable var_1 = t ; java.lang.throwable var_2 = var_1 . method_2 ( ) ; while ( ( var_2 != null ) && ( var_2 != var_1 ) ) { var_1 = var_2 ; var_2 = var_2 . method_2 ( ) ; } return var_1 ; }
[0]: public boolean method_1 ( ) { for ( int var_1 = 0 ; var_1 < int_1 ; var_1 ++ ) { for ( int var_2 = 0 ; var_2 < int_1 ; var_2 ++ ) { var_3 [ var_1 ] [ var_2 ]. method_2 ( start [ var_1 ] [ var_2 ] ) ; } } var_4. settext ( java.lang.integer.tostring ( var_5 ) ) ; var_6. settext ( java.lang.integer.tostring ( var_7 ) ) ; method_3 ( ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( ) { var_2 = false ; if ( ( var_3 ) != null ) { var_3 . method_2 ( ) ; } var_4 = null ; var_5 = null ; var_6 . method_3 ( ) ; var_6 = null ; method_4 ( true ) ; var_7 . method_5 ( ) ; var_8 = null ; var_9 = null ; var_10 = false ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( var_2. method_2 ( var_1 ) ) { return var_2. get ( var_1 ) ; } else if ( var_1. equals ( var_3 ) ) { return var_4 ; } final type_2 var_5 = type_2. get ( var_1 ) ; if ( var_5 == null ) { return null ; } return var_5. method_1 ( var_6, var_7 ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { return ( ( var_1 instanceof type_1 ) && ( ( ( type_1 ) ( var_1 ) ) . var_2 . equals ( var_2 ) ) ) && ( ( ( type_1 ) ( var_1 ) ) . var_3 . equals ( var_3 ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2 ; type_2 var_3 = type_3. method_2 ( ). get ( var_4 ) ; type_4 var_5 = new type_4 ( method_3 ( ). method_4 ( ) ) ; var_6 = new type_5 ( var_7 ). method_5 ( var_8 ). method_6 ( var_5 ). method_7 ( var_1 ). method_8 ( var_9 ). build ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { response . method_2 ( string_1 ) ; type_4 var_2 = new type_4 ( ) ; try { java.util.list < type_5 > var_3 = var_2 . method_3 ( ) ; var_1 . method_4 ( var_4 , var_3 ) ; var_1 . method_4 ( string_3 , var_5 ) ; type_6 view = var_1 . method_5 ( var_6 ) ; view . method_6 ( var_1 , response ) ; } catch ( java.lang.exception var_7 ) { } }
[0]: protected boolean method_1 ( ) { if ( ( ( this. var_1 ) == int_1 ) && ( this. method_2 ( ) ) ) { var_2. get ( string_1 ). method_3 ( true ) ; var_3. method_4 ( string_1 ) ; return true ; } return false ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string [ ] var_2 ) { if ( var_2 != null ) { java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( java.lang.string string : var_2 ) { var_3 . add ( string ) ; } var_1 . put ( string_1 , var_3 ) ; } else { var_1 . put ( string_1 , null ) ; } }
[0]: private void info ( ) { try { java.lang.stringbuilder info = type_1. method_1 ( string_1 ) ; var_1. method_2 ( ( ( var_2 ) + ( info. tostring ( ) ) ) ) ; } catch ( java.lang.exception var_3 ) { java.lang.string error = string_2 ; type_2. method_3 ( char_1, this, error ) ; var_1. method_2 ( ( ( var_2 ) + error ) ) ; } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { return new type_2 ( ) . method_2 ( var_1 ) . method_3 ( var_1 ) . method_4 ( var_1 ) . method_5 ( false ) . method_6 ( true ) . method_7 ( var_3 ) . method_8 ( true ) . method_9 ( var_4 ) . method_10 ( new type_3 ( int_1 ) ) . build ( ) ; }
[0]: public void method_1 ( java.lang.throwable var_1, java.lang.string var_2 ) { if ( var_2. equals ( var_3 ) ) { if ( (! ( this. method_2 ( ) ) ) && ( this. method_3 ( ) ) ) { this. method_4 ( ) ; } type_1. open ( ) ; type_1. method_5 ( var_3 ) ; type_1. method_6 ( ) ; } } }

************

************
tgt: public int method_1 ( ) { var_1 = ( var_1 ) - ( var_2 ) ; if ( ( var_1 ) < 0 ) { int buf = var_1 ; var_1 = 0 ; return ( var_2 ) + ( buf + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }
[0]: public java.io.inputstream method_1 ( java.lang.string var_1 ) throws type_1 { try { type_2 var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) return null ; return var_2. method_1 ( ) ; } catch ( java.lang.exception var_3 ) { throw new type_1 ( ( ( string_1 + var_1 ) + string_2 ), var_3 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( ) ; var_2 . method_3 ( false ) ; var_3 = new type_2 ( ) ; var_3 . method_3 ( true ) ; var_4 = new type_3 ( var_3 , var_5 , var_2 ) ; var_5 . method_4 ( var_4 ) ; }
[0]: private boolean method_1 ( java.lang.string path, java.lang.string var_1 ) throws type_1 { java.util.list < type_2 > result ; result = var_2. method_2 ( path, var_1 ) ; for ( type_2 f : result ) { return f. equals ( var_3 ) ; } return false ; }

************

************
tgt: public java.lang.string method_1 ( ) { int args = this . method . method_2 ( ) . length ; return ( ( ( ( ( method_3 ( ) . getname ( ) ) + string_1 ) + ( this . method . getname ( ) ) ) + string_2 ) + args ) + string_3 ; }
[0]: public void method_1 ( int var_1 ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; type_1 event = var_2. method_2 ( ( ( var_3 ) ++ ) ) ; assertequals ( var_4, var_5 ) ; assertequals ( var_6, ( ( long ) ( var_1 ) ) ) ; }

************

************
tgt: protected java.lang.void method_1 ( java.lang.void ... params ) { if ( var_1 . method_2 ( string_1 ) ) method_3 ( ) ; else if ( var_1 . method_2 ( string_2 ) ) { method_4 ( ) ; } else if ( var_1 . method_2 ( string_3 ) ) try { method_6 ( ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.out.println ( ( string_4 + var_3 ) ) ; } return null ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( this ) ; method_3 ( var_2 ) ; super. method_4 ( ) ; type_2. method_2 ( this ) ; if ( var_1 == null ) { method_5 ( ). method_6 ( ). add ( var_3, new type_3 ( ) ). commit ( ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = type_1 . method_2 ( var_2 , string_1 ) ; if ( var_1 == null ) { return ; } if ( var_1 . equals ( string_2 ) ) { int var_3 = ( ( int ) ( java.lang.double . method_3 ( type_1 . method_2 ( var_2 , string_3 ) ) ) ) ; java.util.linkedlist < java.lang.integer > list = method_4 ( var_3 , var_4 ) ; method_5 ( list , var_4 , var_5 ) ; } else { method_6 ( var_4 ) ; } }
[0]: public void method_1 ( type_1 var_1, int offset, int length ) { if ( var_1. method_2 ( ) ) { method_3 ( var_1. array ( ), offset, length ) ; } else { for ( int var_2 = offset ; var_2 < ( offset + length ) ; var_2 ++ ) { method_4 ( var_1. get ( offset ) ) ; } } }

************

************
tgt: public boolean equals ( final java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getclass ( ) ) != ( obj . getclass ( ) ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( id ) != ( var_1 . id ) ) return false ; return true ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { switch ( var_1 ) { case var_2 : return new type_1 ( x, ( ( y ) -- ) ) ; case var_3 : return new type_1 ( x, ( ( y ) ++ ) ) ; case var_4 : return new type_1 ( ( ( x ) ++ ), y ) ; case var_5 : return new type_1 ( ( ( x ) -- ), y ) ; default : return null ; } } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = this . method_2 ( ) ; while ( var_1 . method_3 ( this ) ) { type_2 var_2 = var_1 . method_4 ( this ) ; var_2 . method_5 ( ) ; type_1 var_3 = this . method_2 ( ) ; if ( ( var_2 . getclass ( ) ) == ( this . getclass ( ) ) ) { while ( var_3 . method_3 ( var_2 ) ) { var_3 . method_4 ( var_2 ) . method_5 ( ) ; } } } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( var_3. method_3 ( ) ) ; var_2. method_4 ( java.lang.integer.parseint ( var_4. gettext ( ). tostring ( ) ) ) ; if (! ( var_5. gettext ( ). tostring ( ). equals ( string_1 ) ) ) { var_2. method_5 ( java.lang.integer.parseint ( var_5. gettext ( ). tostring ( ) ) ) ; } var_6 = true ; method_6 ( ) ; var_7. method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) { java.lang.system.out.println ( ( string_1 + key ) ) ; java.lang.string var_3 = var_1 . method_2 ( ) . method_3 ( ) ; java.lang.system.out.println ( ( string_3 + var_3 ) ) ; if ( key . equals ( var_3 ) ) { var_5 . method_5 ( var_6 ) ; var_7 . settext ( string_4 ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { try { type_1. method_2 ( ( var_2 + string_1 ), var_3, var_4, var_5, var_6 ) ; } catch ( type_2 var_7 ) { var_7. method_3 ( ) ; var_6. method_4 ( null, null, var_7 ) ; } }

************

************
tgt: private void method_1 ( type_1 listener , type_2 var_1 , type_3 var_2 ) { var_1 . method_2 ( listener ) ; var_3 . remove ( var_2 ) ; if ( ! ( var_5 . method_4 ( ) . method_5 ( ) ) ) { var_5 . method_1 ( var_2 ) ; } }
[0]: public double method_1 ( ) { double k = ( type_1. method_2 ( type_2. method_3 ( type_3. method_4 ( type_4. method_5 ( ( ( type_5 ) ( var_1 ) ), ( ( type_5 ) ( var_2 ) ) ), ( ( type_5 ) ( var_3 ) ) ) ) ) ) * ( method_6 ( ) ) ; if ( k < 0 ) k = k + int_1 ; return k / int_1 ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { var_1 = false ; } else { var_1 = true ; } var_4 = var_3 . method_3 ( ) ; var_5 = var_3 . method_4 ( ) ; var_3 . method_5 ( ) ; var_3 . method_6 ( ) ; var_6 = false ; method_7 ( ) ; }
[0]: private static void method_1 ( java.lang.string var_1 ) { type_1 var_2 ; try { var_2 = type_1. method_2 ( var_1 ) ; } catch ( type_2 var_3 ) { type_3. method_3 ( ( ) - > string_1 ) ; return ; } type_4 var_4 = type_5. method_4 ( ). method_5 ( var_5 class. method_6 ( ). getname ( ) ) ; var_4. method_7 ( var_2 ) ; for ( type_6 var_6 : var_4. method_8 ( ) ) { var_6. method_7 ( var_2 ) ; } } }

************

************
tgt: public void start ( ) { java.util.arraylist < type_1 > var_1 = method_1 ( string_1 ) ; java.util.hashmap [ ] var_3 = method_2 ( var_1 ) ; type_3 . method_3 ( var_3 [ 0 ] ) ; type_3 . method_3 ( var_3 [ 1 ] ) ; type_3 . method_4 ( var_3 [ int_1 ] ) ; type_3 . method_3 ( var_3 [ int_2 ] ) ; }
[0]: protected java.lang.void method_1 ( java.lang.string... params ) { type_1. method_2 ( var_1 ) ; java.lang.string var_1 = params [ 0 ] ; var_2 = type_1. method_3 ( var_1 ) ; var_3 = type_1. method_4 ( var_1 ) ; var_4 = type_1. method_5 ( var_1 ) ; var_4. method_6 ( getintent ( ). method_7 ( string_1 ) ) ; var_5 = var_4. method_8 ( ) ; return null ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2 . method_1 ( string_1 ) ; java.lang.system.out.println ( var_1 . method_2 ( var_3 ) ) ; var_3 = var_2 . method_1 ( string_2 ) ; java.lang.system.out.println ( var_1 . method_2 ( var_3 ) ) ; }
[0]: public void method_1 ( type_1 event ) { var_1 = getstring ( var_2 ) ; try { type_2. method_2 ( ) ; type_2. method_3 ( this, ( string_1 + ( var_1 ) ) ) ; } catch ( java.lang.nullpointerexception var_3 ) { type_3. method_4 ( ( string_2 + ( var_1 ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { type_2 var_3 = var_4 . method_2 ( ) ; type_3 var_5 = var_3 . method_3 ( ) . method_4 ( var_1 ) . method_5 ( ) . method_6 ( ) ; if ( null == var_5 ) var_3 . method_7 ( ) . method_8 ( var_2 ) . method_9 ( ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { this. status = var_2 ; return ; } for ( type_1 var_3 : var_1 ) { if ( ( ( var_3. method_2 ( ) ) == null ) || ( var_3. method_2 ( ). isempty ( ) ) ) { this. status = var_4 ; return ; } } this. status = var_2 ; } }

************

************
tgt: public void method_1 ( java.lang.string path ) throws java.lang.exception { int i = 1 ; java.lang.stringbuilder buf = new java.lang.stringbuilder ( ) ; for ( java.io.file file : var_1 ) { buf . append ( method_2 ( file , ( i ++ ) ) ) ; } type_1 var_2 = new type_1 ( new java.io.file ( ( path + string_1 ) ) ) ; var_2 . method_3 ( buf ) ; var_2 . method_5 ( ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = method_2 ( var_2 ) ; byte [ ] var_4 = type_2. method_3 ( var_1 ) ; byte [ ] var_5 = this. var_6. method_4 ( var_3. method_5 ( ) ). method_6 ( var_4 ) ; return type_2. method_7 ( var_5 ) ; }

************

************
tgt: public static int [ ] method_1 ( type_1 var_1 ) { if ( var_1 == null ) return null ; int [ ] var_2 = new int [ var_1 . length ( ) ] ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { var_2 [ i ] = var_1 . method_2 ( i ) ; } return var_2 ; }
[0]: public void method_1 ( ) throws java.io.ioexception, java.lang.classnotfoundexception, type_1, type_2, type_3, type_4, type_5, type_6, type_7 { var_1 = new type_8 ( ) ; if ( ( var_2 ) == null ) { var_2 = new java.lang.thread ( this ) ; var_2. method_2 ( true ) ; var_2. start ( ) ; } }

************

************
tgt: public void method_1 ( final java.lang.string var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_3 . method_2 ( var_1 ) ) ) ; var_2 . method_4 ( var_4 ) ; new type_3 ( ) . method_5 ( new type_4 ( ) { public void method_6 ( ) { type_1 var_5 = ( ( type_1 ) ( var_3 . method_2 ( var_1 ) ) ) ; var_5 . method_7 ( ) ; } } , int_1 ) ; }
[0]: public static type_1 method_1 ( java.lang.string name, java.util.map < java.lang.string, java.lang.object > var_1 ) throws type_2 { type_3 var_2 = type_4. method_2 ( ) ; type_5 < type_6 > var_3 = var_2. method_3 ( name, var_4 class ) ; var_2. method_4 ( var_3 ) ; type_7. method_5 ( var_3 ) ; return type_4. method_6 ( ). method_7 ( var_3, var_1 ) ; }

************

************
tgt: public type_1 < java.util.list < type_2 > > method_1 ( ) { var_1 += var_2 ; return var_3 . method_2 ( var_1 ) . method_3 ( var_5 ) . method_4 ( var_4 ) . method_5 ( new type_3 < java.lang.throwable > ( ) { public void method_6 ( java.lang.throwable var_6 ) { var_1 -= var_2 ; } } ) ; }
[0]: public static boolean method_1 ( java.io.file file ) throws type_1 { try { java.util.scanner var_1 = new java.util.scanner ( file ) ; while ( var_1. method_2 ( ) ) { java.lang.string var_2 = var_1. method_3 ( ). trim ( ) ; if ( ( var_2. length ( ) ) > 1 ) { return var_2. startswith ( string_1 ) ; } } } catch ( type_2 var_3 ) { throw new type_1 ( string_2, var_3 ) ; } return false ; } }

************

************
tgt: void method_1 ( ) { init ( var_1 , var_2 ) ; init ( ) ; var_3 . method_2 ( ) ; if ( ( var_4 ) != null ) { for ( type_1 var_5 : var_4 ) { var_5 . method_1 ( ) ; } } if ( ( var_6 ) != null ) { for ( type_2 < ? > var_7 : var_6 ) { var_7 . method_1 ( ) ; } } }
[0]: public void remove ( java.lang.object var_1 ) { if ( ( var_2 ) == null ) return ; for ( int var_3 = 0 ; var_3 < ( var_2. size ( ) ) ; var_3 ++ ) { if ( var_2. get ( var_3 ). method_1 ( ). equals ( var_1 ) ) { var_2. remove ( var_3 ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 . method_2 ( ( string_1 + ( ( char ) ( ( type_2 . method_3 ( ) ) + char_1 ) ) ) ) ; type_2 = null ; var_2 . method_4 ( true ) ; type_3 . settext ( string_2 ) ; type_3 . method_6 ( true ) ; var_4 . method_6 ( true ) ; var_5 . method_6 ( false ) ; }
[0]: public static java.lang.boolean method_1 ( final java.lang.object var_1 ) { if ( var_1 instanceof java.lang.string ) { if ( var_1 instanceof java.lang.string ) { if ( var_1. equals ( ""true"" ) ) { return var_2 ; } else if ( var_1 instanceof java.lang.boolean ) { return ( ( java.lang.boolean ) ( var_1 ) ) ; } return var_3 ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( string_1 , var_2 ) ; var_1 . method_2 ( string_2 , var_3 ) ; type_2 var_4 = new type_2 ( ) ; var_4 . method_3 ( var_5 ) ; var_4 . method_4 ( var_1 ) ; type_3 var_6 = method_5 ( ) ; type_4 var_7 = var_6 . method_6 ( ) ; var_7 . add ( var_4 , string_3 ) ; var_7 . commit ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.lang.exception { var_2 = var_3. method_2 ( var_1 ) ; if ( ( var_2 ) == null ) { throw new java.lang.exception ( string_1 ) ; } try { var_2. open ( var_4 ) ; } catch ( type_1 var_5 ) { var_2. open ( var_6 ) ; } }

************

************
tgt: private boolean method_1 ( android.content.context context ) { java.lang.string date = type_1 . method_2 ( string_1 , java.util.calendar.getinstance ( ) . gettime ( ) , context ) ; type_2 var_1 = context . method_3 ( var_2 , var_3 ) ; java.lang.string var_4 = var_1 . getstring ( var_5 , null ) ; var_1 . method_4 ( ) . method_5 ( var_5 , date ) . method_6 ( ) ; return ! ( date . equals ( var_4 ) ) ; }
[0]: public void method_1 ( type_1 c ) { for ( int i = 0 ; i < ( var_1 ) ; ++ i ) { if ( c. method_2 ( i ) ) continue ; else c. set ( i, var_2 [ ( ( int ) ( c. method_3 ( i ) ) ) ] ) ; } }

************

************
tgt: public static java.lang.boolean method_1 ( java.lang.string var_2 , java.lang.string var_1 ) { java.util.hashmap < java.lang.string , java.lang.string > params = new java.util.hashmap < java.lang.string , java.lang.string > ( ) ; params . put ( var_3 , var_1 ) ; params . put ( var_4 , var_2 ) ; return var_5 . method_2 ( params ) ; }
[0]: public boolean get ( long i ) { int var_1 = ( ( int ) ( i / ( var_2 ) ) ) ; int offset = ( ( int ) ( i % ( var_2 ) ) ) ; return ( ( var_3 [ var_1 ] ) & ( 1l < < offset ) ) == 1 ; }

************

************
tgt: public static type_1 method_1 ( ) { type_2 < type_3 > var_1 = type_2 . method_2 ( var_2 class ) ; java.util.iterator < type_3 > var_3 = var_1 . iterator ( ) ; if ( ! ( var_3 . method_3 ( ) ) ) throw new type_4 ( string_1 ) ; type_3 var_4 = null ; while ( var_3 . method_3 ( ) ) { var_4 = var_3 . method_4 ( ) ; java.lang.system.out.println ( var_4 . getclass ( ) ) ; } return var_4 . method_5 ( ) ; }
[0]: private java.util.list < java.lang.string > method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1. add ( string_1 ) ; var_1. add ( string_2 ) ; var_1. add ( string_3 ) ; var_1. add ( string_4 ) ; var_1. add ( string_5 ) ; return var_1 ; }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { final java.util.list < type_3 > var_1 = new java.util.arraylist < > ( ) ; for ( type_4 var_2 : var_3 ) { var_1 . add ( var_2 . method_1 ( ) ) ; } final type_5 name = new type_5 ( this . name ) ; final type_6 var_4 = new type_6 ( var_1 ) ; return new type_1 ( name , null , null , var_4 ) ; }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) throws type_4 { if ( ( var_2 == null ) || ( ( var_2. method_2 ( ) ) == null ) ) return ; java.util.map < java.lang.string, java.lang.string > params = var_2. method_2 ( ) ; if (! ( type_5. method_3 ( var_1, var_3, var_4 ) ) ) { params. remove ( var_5 ) ; params. remove ( var_6 ) ; } else { type_5. method_4 ( params, var_5 ) ; } }

************

************
tgt: public static java.lang.object method_1 ( java.lang.string fieldname , type_1 var_1 ) throws type_2 { java.lang.class var_2 = var_1 . getclass ( ) ; try { type_3 field = var_2 . method_2 ( fieldname ) ; field . method_3 ( true ) ; return field . get ( var_1 ) ; } catch ( type_4 | type_5 var_3 ) { throw new type_2 ( ( string_1 + fieldname ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ) ; var_5 = method_6 ( ) ; method_6 ( ). method_7 ( string_1 ) ; var_6 = new type_3 ( this ). method_8 ( var_7 ). build ( ) ; }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { final type_2 var_1 = new type_2 ( ) ; if ( ( var_2 ) != null ) { var_1 . method_2 ( var_2 . tostring ( ) ) ; } var_1 . method_3 ( var_3 . method_4 ( ) ) ; var_1 . method_5 ( var_4 . method_4 ( ) ) ; var_1 . method_6 ( var_5 ) ; var_1 . method_7 ( var_6 ) ; final java.util.map var_7 = var_8 . method_8 ( var_9 ) ; var_1 . method_9 ( var_7 ) ; return var_1 ; }
[0]: public void method_1 ( int x, int y, final java.lang.string var_1 ) { for ( type_1 var_2 : var_3. get ( var_1 ) ) { if ( var_2!= null ) { var_2. position ( x, y ) ; var_2. method_2 ( ) ; } } }

************

************
tgt: public boolean method_1 ( ) { view . settext ( string_1 ) ; try ( java.io.fileinputstream file = method_2 ( ( string_2 + ( var_1 ) ) ) ) { java.util.scanner var_2 = new java.util.scanner ( file ) ; while ( var_2 . method_3 ( ) ) { var_3 . add ( var_2 . method_4 ( ) ) ; var_4 . add ( var_2 . method_4 ( ) ) ; } } catch ( java.lang.exception var_5 ) { return false ; } return true ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { method_2 ( 0 ) ; var_3. method_3 ( ) ; for ( int i = 0 ; i < ( var_4 ) ; i ++ ) { if ( var_5. get ( i ). var_6. contains ( var_7. gettext ( ). tostring ( ) ) ) { var_3. add ( i ) ; } } var_8. method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { int var_1 = var_2 . method_2 ( ) ; int var_3 = var_2 . method_3 ( ) ; int var_4 = var_2 . method_4 ( ) ; if ( ( var_4 * int_1 ) >= var_3 ) var_2 . method_5 ( var_3 ) ; else var_2 . method_5 ( ( var_4 * int_1 ) ) ; message . settext ( string_1 ) ; try { java.lang.thread . method_6 ( int_2 ) ; } catch ( type_1 var_5 ) { var_5 . method_7 ( ) ; } }
[0]: public void method_1 ( java.io.file var_1 ) { if ( var_1!= null?! ( var_1. equals ( this. var_1 ) ) : var_1 == null ) { java.io.file var_2 = this. var_1 ; this. var_1 = var_1 ; var_3 = true ; var_4. method_2 ( string_1, var_2, var_1 ) ; } }

************

************
tgt: private void method_1 ( type_1 event ) { var_1 . method_2 ( null ) ; for ( type_2 var_2 : var_1 . method_3 ( ) ) { var_2 . method_4 ( null ) ; } var_1 . method_5 ( ) . method_6 ( ) ; var_3 . method_7 ( var_1 , var_4 ) ; var_1 . method_2 ( event ) ; var_3 . method_9 ( var_1 , var_4 ) ; var_5 . method_8 ( ) ; }
[0]: public static < type_1 extends type_2 > type_1 method_1 ( type_3 var_1, java.lang.class < type_1 > var_2 ) { return ( var_1. method_2 ( ) )!= null? var_2. method_3 ( var_1. method_2 ( ) )? var_2. method_4 ( var_1. method_2 ( ) ) : null ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( var_1 . isempty ( ) ) { int var_2 = ( ( int ) ( type_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) . get ( string_1 ) ) ) ; try { var_3 . method_5 ( var_2 ) ; } catch ( type_2 var_4 ) { var_5 = string_2 ; var_1 = string_3 ; return string_2 ; } return string_4 ; } return string_4 ; }
[0]: public type_1 method_1 ( long var_1, long var_2 ) throws type_2 { if ( ( var_3 [ int_1 ] ) == int_2 ) { var_4 [ 0 ] = new java.util.date ( ) ; var_5. method_2 ( ) ; var_3 [ int_1 ] = 0 ; } for ( int var_5 : var_3 ) { java.lang.system.out.print ( ( var_5 + string_2 ) ) ; } java.lang.system.out.println ( ) ; ( var_3 [ int_1 ] ) ++ ; return t. method_1 ( var_1, var_2 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { var_2 . info ( ( string_1 + var_1 ) ) ; var_3 . delete ( var_1 ) ; try { this . var_4 . method_2 ( ) . delete ( this . var_5 . getid ( ) , var_1 ) . execute ( ) ; } catch ( java.io.ioexception var_6 ) { var_2 . info ( ( string_3 + var_1 ) ) ; } }
[0]: public type_1 <? > method_1 ( ) { type_2. info ( string_1 ) ; java.util.list < type_3 > var_1 = var_2. method_1 ( ) ; if ( var_1 == null ) { type_2. error ( string_2 ) ; return new type_1 ( new type_4 ( string_2 ), var_3 ) ; } return new type_1 ( var_1, var_4 ) ; }

************

************
tgt: public boolean add ( final type_1 var_1 ) { boolean var_2 = false ; try { var_3 . method_1 ( ) ; var_2 = super . add ( var_1 ) ; if ( var_2 ) var_4 . method_2 ( ) ; } finally { var_3 . method_3 ( ) ; } return var_2 ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { int id = this. var_2. method_2 ( var_1. getstring ( string_1 ), var_1. getstring ( string_2 ) ) ; type_1 response = type_2. method_3 ( ). add ( string_4, 1 ). add ( string_5, ( id == ( - 1 )? method_4 ( int_1 ) : method_5 ( ) ) ). build ( ) ; return response. tostring ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { type_2 var_3 = var_2 . get ( i ) ; if ( method_2 ( var_1 . method_3 ( ) , var_3 ) ) { this . view . method_4 ( ( i + 1 ) ) ; method_5 ( var_3 ) ; return ; } } this . view . method_4 ( 0 ) ; method_5 ( null ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { int [ ] var_1 = new int [ ] { int_1, int_2, int_3, int_4, int_5, int_3, 1, int_6, int_1, 0 } ; java.lang.system.out.println ( type_1. method_1 ( var_1, var_2, var_2 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( type_1 . isempty ( var_1 ) ) { for ( type_4 var_5 : var_6 ) { var_5 . method_4 ( ) ; } return ; } method_2 ( var_2 , var_3 , new type_2 ( ) { public void method_3 ( type_3 var_4 ) { var_1 = string_1 ; for ( type_4 var_5 : var_6 ) { var_5 . method_4 ( ) ; } } } ) ; }
[0]: public boolean method_1 ( type_1 target, type_2 var_1 ) { if ( var_2. isempty ( ) ) { return true ; } if ( ( ( var_3. method_2 ( var_1 ) ) || (! ( this. method_3 ( var_1 ) ) ) ) || (! ( var_3. method_4 ( var_1 ) ) ) ) { return false ; } type_3 var_4 = var_2. get ( var_1 ) ; return var_4. method_5 ( target. method_6 ( ) ) ; }

************

************
tgt: public static boolean method_1 ( java.util.list < short [ ] > list , short [ ] array ) { for ( short [ ] element : list ) { if ( type_1 . equals ( element , array ) ) { return true ; } } return false ; }
[0]: public void getvalue ( ) { var_1 = type_1. method_1 ( var_2 ) ; var_3 = type_1. method_1 ( var_4 ) ; var_5 = type_1. method_1 ( var_6 ) ; var_7 = type_2. method_2 ( ) ; var_8 = type_2. method_3 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( java.util.map < java.lang.string , java.lang.string > var_1 , type_1 var_2 ) { type_2 . info ( ( string_1 + var_1 ) ) ; var_6 . method_4 ( var_5 ) ; type_3 var_3 = var_4 . method_2 ( var_5 ) ; var_2 . method_3 ( string_2 , var_3 ) ; type_2 . info ( ( string_3 + var_2 ) ) ; return string_4 ; }
[0]: public void method_1 ( int var_1, int var_2, int var_3, int var_4 ) { if (! ( var_5 ) ) return ; method_2 ( ) ; if ( ( state ) == ( var_6 ) ) return ; int diff = var_4 - var_2 ; if ( diff!= 0 ) var_7. method_3 ( ( - diff ) ) ; }

************

************
tgt: private static java.lang.string method_1 ( ) throws type_1 { java.lang.system.out.print ( string_1 ) ; java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; java.lang.string var_3 ; if ( var_1 . method_2 ( ) ) { var_3 = var_1 . method_3 ( ) ; } else { throw new type_1 ( string_2 ) ; } return var_3 ; }
[0]: public type_1 method_1 ( java.util.list < double [ ] > var_1, java.util.list < type_2 > var_2, type_3 params ) throws type_4 { var_3. method_2 ( string_1 ) ; type_1 result = method_3 ( ). method_4 ( params, var_1, var_2, new type_5 ( ) ) ; if (! ( result. isempty ( ) ) ) { var_3. method_2 ( string_2 ) ; method_5 ( result ) ; } return result ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( method_2 ( ) ) { if ( ( ( ( ( method_3 ( ) ) > ( var_1 . method_4 ( ) ) ) && ( ( method_4 ( ) ) < ( var_1 . method_3 ( ) ) ) ) && ( ( method_5 ( ) ) > ( var_1 . method_6 ( ) ) ) ) && ( ( method_6 ( ) ) < ( var_1 . method_5 ( ) ) ) ) { java.lang.system.out.println ( true ) ; return true ; } } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( ) ; var_2. method_2 ( int_1 ) ; var_2. method_3 ( int_1 ) ; var_2. method_4 ( var_3 ) ; if ( ( ( type_3. method_5 ( this, var_4 ) )!= ( var_5 ) ) && ( ( type_3. method_5 ( this, var_6 ) )!= ( var_5 ) ) ) { return ; } type_4. method_6 ( var_7, var_2, this ) ; }

************

************
tgt: public type_1 method_1 ( final type_2 < type_3 > var_1 , final int var_2 , final type_1 var_3 ) { if ( ( var_4 . method_2 ( ) ) == null ) { return null ; } else if ( var_5 ) { var_3 . method_5 ( 0 , var_7 ) ; return var_3 ; } else { return var_3 ; } }
[0]: public java.lang.string [ ] method_1 ( ) { java.lang.string [ ] names = new java.lang.string [ int_1 ] ; for ( int i = 0 ; i < int_1 ; i ++ ) { names [ i ] = this. var_1 [ i ]. gettext ( ) ; } return this. names ; }

************

************
tgt: public boolean method_1 ( ) { boolean var_1 = false ; if ( type_1 . method_2 ( ) . method_3 ( var_4 class ) ) { type_2 var_3 = ( ( type_2 ) ( type_1 . method_2 ( ) . method_4 ( var_4 class ) ) ) ; if ( var_3 != null ) { var_1 = var_3 . method_5 ( this ) ; } } return var_1 ; }
[0]: private void method_1 ( java.lang.string id ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = type_2. method_3 ( string_1, id ) ; var_1. method_4 ( var_3 ) ; android.content.context context = method_5 ( ) ; java.lang.charsequence var_4 = string_2 ; int var_5 = var_6 ; type_3. method_6 ( context, var_4, var_5 ). show ( ) ; }

************

************
tgt: public int method_1 ( ) { int result = ( ( method_2 ( ) ) != null ) ? method_2 ( ) . method_1 ( ) : 0 ; result = ( int_1 * result ) + ( ( method_3 ( ) ) != null ? method_3 ( ) . method_1 ( ) : 0 ) ; result = ( int_1 * result ) + ( ( method_4 ( ) ) != null ? method_4 ( ) . method_1 ( ) : 0 ) ; return result ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) < ( var_3 ) ) { ( var_2 ) ++ ; for ( type_2 var_4 : var_5 ) { if ( var_4. method_2 ( ). equals ( var_1 ) ) { var_4. method_3 ( ( ( var_4. method_4 ( ) ) + 1 ) ) ; return ; } } var_5. add ( new type_2 ( var_1, 1 ) ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.lang.exception { if ( ( var_1 . method_2 ( ) ) != 0 ) throw new type_2 ( var_2 ) ; if ( ( ( var_1 . method_3 ( ) ) != null ) && ( new java.util.date ( ) . method_4 ( var_1 . method_3 ( ) ) ) ) throw new type_3 ( var_3 ) ; }
[0]: private static type_1 method_1 ( type_2 var_1, java.io.inputstream var_2 ) throws java.io.ioexception { java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; type_3 var_4 = new type_3 ( var_2 ) ; type_1 var_5 = new type_1 ( var_1, var_4 ) ; var_5. method_2 ( var_6 ) ; var_5. method_3 ( var_4. method_4 ( ) ) ; var_5. method_5 ( var_3 ) ; var_5. method_6 ( var_3 ) ; var_5. method_7 ( ) ; return var_5 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception , type_1 { type_2 type_3 = new type_2 ( string_1 , int_1 ) ; java.io.bufferedwriter var_2 = new java.io.bufferedwriter ( new type_4 ( type_3 . method_2 ( ) , type_5 . method_3 ( string_2 ) ) ) ; if ( var_3 ) java.lang.system.out.println ( ( string_3 + var_1 ) ) ; var_2 . method_4 ( ( string_3 + var_1 ) ) ; var_2 . method_5 ( ) ; var_2 . method_6 ( ) ; type_3 . method_6 ( ) ; return ; }
[0]: public type_1 method_1 ( ) { type_1 item = array [ var_1 ] ; if ( item == null ) { throw new type_2 ( ) ; } array [ var_1 ] = null ; ( var_1 ) -- ; ( var_2 ) -- ; method_2 ( ) ; return item ; }

************

************
tgt: public type_1 method_1 ( ) { int var_1 = method_2 ( ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( i == var_1 ) { return var_2 . get ( i ) ; } } java.lang.system.out.println ( string_1 ) ; return new type_1 ( ) ; }
[0]: private void method_1 ( ) { this. var_1 = new type_1 < > ( ) ; for ( type_2 var_2 : this. method_2 ( ). method_3 ( ) ) { type_3 var_3 = new type_3 ( var_2. name ( ), var_2, this ) ; this. var_1. put ( var_2. name ( ), var_3 ) ; } }

************

************
tgt: public type_1 method_1 ( int var_1 , type_2 var_2 ) { type_1 status = var_3 . get ( var_1 ) ; if ( status == null ) { return null ; } status . method_2 ( var_2 ) ; return var_3 . put ( status . method_3 ( ) , status ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { if (! ( method_2 ( var_1. getname ( ) ) ) ) { var_2. add ( var_1 ) ; method_3 ( var_1 ) ; type_2. method_4 ( var_3, ( string_1 + ( var_1. getname ( ) ) ) ) ; } else { type_2. method_4 ( var_3, ( ( string_2 + ( var_1. getname ( ) ) ) + string_3 ) ) ; } }

************

************
tgt: boolean method_1 ( ) { if ( ( ( var_1 . method_2 ( ) ) && ( var_1 . method_3 ( ) ) ) && ( var_1 . method_4 ( ) ) ) { return true ; } else { method_5 ( var_2 ) ; return false ; } }
[0]: public static void update ( ) { synchronized ( var_1 class ) { if (! ( var_2 ) ) return ; type_1. method_1 ( var_3 ) ; var_4 = new type_1 <? > [ var_3. size ( ) ] ; for ( type_1 var_5 : var_3 ) var_4 [ var_6 ] = var_5 ; var_2 = false ; } }

************

************
tgt: public void method_1 ( ) { while ( var_1 ) { try { method_2 ( ) ; } catch ( type_1 var_2 ) { var_1 = false ; var_2 . method_3 ( ) ; } catch ( type_2 var_2 ) { var_1 = false ; var_2 . method_3 ( ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { if ( ( type_2 )!= null ) { if ( ( ( var_2 )!= null ) && ( ( var_3. type ) == 1 ) ) type_2. method_2 ( var_4 ) ; else type_2. method_2 ( var_5 ) ; } if ( ( type_3 )!= null ) { if ( ( ( var_2 )!= null ) && ( ( var_3. type ) == 1 ) ) type_3. method_2 ( var_4 ) ; else type_3. method_2 ( var_5 ) ; } }

************

************
tgt: private static void method_1 ( java.io.file var_1 , java.util.list < java.io.file > var_2 ) { if ( ! ( var_1 . method_2 ( ) ) ) { if ( ! ( var_1 . method_3 ( ) ) ) { var_2 . add ( var_1 ) ; } } else { for ( java.io.file var_3 : var_1 . method_4 ( ) ) { type_1 . method_1 ( var_3 , var_2 ) ; } } }
[0]: private void method_1 ( int var_1 ) { int start = var_2. size ( ) ; int end = type_1. min ( ( ( var_2. size ( ) ) + var_1 ), var_3. size ( ) ) ; for ( int i = start ; i < end ; i ++ ) { var_2. add ( var_3. get ( i ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { method_4 ( ) ; type_2 . method_2 ( var_2 , var_1 . method_3 ( ) ) ; } else { method_4 ( ) ; ( ( type_3 ) ( getactivity ( ) ) ) . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } if ( ( var_1 ) == ( var_2. length ) ) { var_2. method_2 ( ( int_1 * ( var_2. length ) ) ) ; } var_2 [ ( ( var_1 ) ++ ) ] = item ; ( var_1 ) ++ ; }

************

************
tgt: protected int method_1 ( ) throws java.io.ioexception , type_1 { int c = method_2 ( ) ; while ( ( type_2 . method_3 ( c ) ) || ( c == char_1 ) ) { if ( c == char_1 ) { method_4 ( ) ; } else if ( c == char_2 ) { ( var_1 ) ++ ; } c = method_2 ( ) ; } method_5 ( c ) ; return c ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = type_2. method_2 ( ). method_3 ( ). method_4 ( string_1, var_1. method_5 ( ), ( ( var_3 ) + ( this. method_6 ( ) ) ) ) ; if ( type_2. method_2 ( ). method_7 ( string_2, true ) ) { type_2. method_2 ( ). method_8 ( var_2 ) ; } else { var_1. method_9 ( var_2 ) ; } }

************

************
tgt: private java.lang.string method_1 ( ) { java.util.arraylist < java.lang.long > var_1 = new java.util.arraylist < > ( ) ; for ( long i : var_2 ) { if ( i > 0 ) { var_1 . add ( i ) ; } } if ( ( var_1 . size ( ) ) == 0 ) { return string_2 + "0" ; } return string_2 + ( type_1 . method_2 ( type_2 . method_3 ( var_1 ) ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { type_1 set = new type_1 ( ) ; java.io.file f = new java.io.file ( string_1 ) ; java.lang.string var_1 = new java.lang.string ( type_2. method_1 ( f. method_2 ( ) ), var_2 ) ; type_3 src = type_4. method_3 ( set, string_2, var_1 ) ; java.lang.system.out.println ( src ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) == null ) { method_3 ( ) ; } else { java.lang.object [ ] var_2 = new java.lang.object [ ] { var_3 [ 1 ] , var_3 [ int_1 ] } ; int var_4 = var_1 . method_4 ( string_1 , string_2 , var_2 , var_5 ) ; if ( var_4 != ( var_6 ) ) { new type_1 ( var_1 . method_2 ( ) , ( var_4 + 1 ) ) ; } } }
[0]: public boolean equals ( java.lang.object obj ) { if ( obj instanceof type_1 ) { type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( var_2. equals ( this. name ) ) && ( ( java.lang.double. method_1 ( var_3, this. var_4 ) ) == 0 ) ; } return false ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; android.content.intent var_5 = getintent ( ) ; int var_6 = var_5 . method_5 ( string_1 , 1 ) ; context = this ; method_6 ( var_6 ) ; method_7 ( ) . method_8 ( true ) ; }
[0]: public static void method_1 ( type_1 var_1, int var_2, java.lang.string file ) { type_2 item = type_2. method_2 ( var_1 ) ; type_3. method_3 ( item, var_2, new type_4 ( ( ( ( var_3 ) + string_1 ) + file ), string_2 ) ) ; java.lang.system.out.println ( ( ( ( ( string_3 + ( var_3 ) ) + string_1 ) + ( var_1. method_4 ( ). substring ( int_1 ) ) ) + string_4 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = method_2 ( string_1 ) ; for ( type_1 k : var_2 ) { if ( ( k . method_3 ( ) ) == ( java.lang.long.parselong ( var_1 ) ) ) { var_3 = k ; } } var_4 . method_4 ( ) . add ( new type_2 ( var_5 , var_3 , var_4 ) ) ; return string_2 ; }
[0]: public java.lang.long method_1 ( ) { if (! ( method_2 ( ) ) ) { throw new type_1 ( ) ; } long result = 0 ; while ( result == 0 ) { result = var_1 [ var_2 ] ; ( var_2 ) ++ ; } return result ; }

************

************
tgt: protected static void method_1 ( java.util.set < type_1 > var_1 , java.lang.class < ? > var_2 , type_2 var_4 , type_3 var_5 ) { java.lang.string name = ( type_4 . method_2 ( var_5 . getname ( ) ) ) + string_1 ; type_5 . method_3 ( var_1 , var_2 , var_4 , var_5 , name ) ; }
[0]: private void method_1 ( ) { final type_1 var_1 = new type_1 ( var_2. method_2 ( ) ) ; var_3 = ( type_2. method_3 ( var_4 ) [ 1 ] ) * ( ( float ) ( float_1 ) ) ; var_5 = ( type_2. method_3 ( var_4 ) [ 0 ] ) * ( ( float ) ( float_2 ) ) ; var_6 = 0 ; var_7 = ( var_8 ) - 1 ; var_2. method_4 ( var_1 ) ; var_2. method_5 ( var_1 ) ; }

************

************
tgt: public java.util.collection < type_1 > method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( ( var_1 . length ( ) ) == 0 ) ) { return method_2 ( ) ; } else { type_1 var_2 = method_3 ( var_1 ) ; return var_2 . method_4 ( ) ; } }
[0]: private static java.lang.string getname ( type_1 var_1 ) { if ( var_1. method_1 ( ). equals ( string_1 ) ) { return type_2. method_2 ( ( string_2 + ( var_1. method_3 ( ) ) ) ) ; } else { return type_2. method_2 ( ( string_3 + ( var_1. getname ( ) ) ) ) ; } }

************

************
tgt: void method_1 ( ) { java.lang.string var_1 = new type_1 ( this . var_2 , int_1 ) . tostring ( ) ; type_2 . assertequals ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( this . date ) ) + "\n" ) + string_3 ) + string_4 ) + string_5 ) + "\n" ) + string_6 ) , var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 message = ( ( type_2 ) ( var_1. obj ) ) ; if ( ( message. type ) == ( var_2 ) ) { listener. method_2 ( message. id, var_3, message. text ) ; } else if ( ( message. type ) == ( var_4 ) ) { } else if ( ( message. type ) == ( var_5 ) ) { } }

************

************
tgt: private void method_1 ( ) { int var_2 = method_4 ( ) ; if ( var_2 > ( var_3 ) ) { var_3 = var_2 ; } if ( ( var_3 ) >= ( var_4 . method_5 ( ) ) ) { var_1 . method_6 ( ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( ( type_1. method_2 ( ) )!= null ) { android.content.intent intent = new android.content.intent ( this, var_1 class ) ; method_3 ( intent ) ; } type_2. method_4 ( this ) ; method_5 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , boolean var_3 ) { if ( var_3 == false ) { this . method_2 ( ) ; } else if ( this . contains ( var_1 , var_2 ) ) { if ( ! ( this . var_4 ) ) { this . method_3 ( var_1 , var_2 ) ; } else { this . method_3 ( var_1 , this . var_5 ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; if ( ( var_2. count ) == 0 ) { return type_4. get ( ) ; } else if ( ( var_2. count ) == 1 ) { return type_5. method_2 ( 0 ) ; } return type_5. method_2 ( type_6. method_3 ( ( ( var_3 ) / ( ( var_2. count ) - 1 ) ) ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_3 < type_2 > var_3 ) { type_4 < type_1 > set = var_4 . get ( var_3 ) ; if ( set == null ) { set = new type_5 < type_1 > ( new type_6 ( ) ) ; var_4 . put ( var_3 , set ) ; } set . add ( var_1 ) ; }
[0]: public void method_1 ( ) { if ( type_1. method_2 ( ). method_3 ( var_1 ) ) { this. method_4 ( new type_2 ( ) { public void method_1 ( ) { var_2. method_5 ( ) ; method_6 ( ) ; } } ) ; } this. method_4 ( new type_2 ( ) { public void method_1 ( ) { method_6 ( ) ; } } ) ; } }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string message ) { int size = java.lang.integer.parseint ( message ) ; byte [ ] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = char_1 ; java.lang.string result = new java.lang.string ( buffer ) ; method_3 ( var_1 , result ) ; }
[0]: public float method_1 ( int var_1 ) { float var_2 = float_1 ; switch ( var_1 ) { case 1 : var_2 = float_1 ; break ; case int_1 : var_2 = float_2 ; break ; case int_2 : var_2 = float_3 ; break ; case int_3 : var_2 = float_4 ; break ; case int_4 : var_2 = float_5 ; break ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = var_2 . getname ( ) ; type_1 var_3 = type_2 . method_2 ( ) . method_3 ( ) . method_4 ( var_1 ) ; if ( var_3 != null ) var_2 . method_5 ( ( ( ( ( var_3 . method_6 ( ) ) + var_1 ) + ( var_3 . method_7 ( ) ) ) + ( var_4 ) ) ) ; else var_2 . method_5 ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { var_2. remove ( method_2 ( ). remove ( position ) ) ; method_2 ( ). remove ( position ) ; method_3 ( ). method_4 ( position ) ; type_2. method_5 ( getcontext ( ), string_1, var_3 ). show ( ) ; } else { type_2. method_5 ( getcontext ( ), var_1. method_6 ( ), var_3 ). show ( ) ; } }

************

************
tgt: private void method_1 ( type_1 index , type_2 var_1 , int var_2 , java.util.arraylist < type_3 > var_3 ) { type_4 var_4 = method_2 ( var_1 . type ) ; var_3 . add ( new type_6 ( var_5 , var_4 ) ) ; var_3 . add ( new type_6 ( var_6 , var_4 ) ) ; method_1 ( index , var_1 . type , var_1 . op , var_1 . target , var_2 , var_3 ) ; }
[0]: public type_1 method_1 ( ) { var_1. method_2 ( ) ; var_1. method_3 ( ) ; if ( type_2. equals ( var_1. method_4 ( ). getname ( ), string_1 ) ) { var_1. method_5 ( string_2 ) ; } else { var_1. method_6 ( var_2. method_7 ( var_1. method_4 ( ). method_8 ( ) ) ) ; } return new type_1 ( var_1 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string url ) throws type_1 { type_2 var_1 = new type_2 ( url ) ; java.lang.string var_2 = var_1 . method_2 ( ) ; if ( var_2 == null ) { return url . replaceall ( string_1 , string_2 ) ; } return var_2 . replaceall ( string_1 , string_2 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) method_2 ( var_2, var_3 ) ; else { try { var_4. method_3 ( ) ; type_1 var_5 = var_1 ; method_4 ( var_2, var_6, var_5 ) ; } catch ( java.io.ioexception var_7 ) { method_2 ( var_2, var_7 ) ; } finally { method_5 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 context ) { type_2 var_1 = context . method_2 ( string_1 ) ; var_1 . method_3 ( string_2 , string_3 ) . method_4 ( string_4 ) . method_5 ( var_3 ) ; var_1 . method_3 ( string_5 , string_1 ) . method_4 ( string_4 ) . method_5 ( var_3 ) ; var_1 . method_3 ( string_6 ) . method_4 ( string_4 ) . method_5 ( var_3 ) ; type_3 var_4 = var_1 . build ( ) ; context . method_6 ( var_4 ) ; }
[0]: public void method_1 ( type_1 error ) { java.util.hashmap < java.lang.string, java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( var_2, error. method_2 ( ) ) ; type_2. method_3 ( var_3, var_1 ) ; type_3. method_4 ( getview ( ), var_4, var_5 ) ; if ( ( var_6 )!= null ) { var_6. method_5 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) ) { if ( ( var_2 . method_3 ( ) ) && ( var_1 . method_4 ( ) . method_5 ( ) . method_3 ( ) ) ) { return var_2 . equals ( var_1 . method_4 ( ) . method_5 ( ) ) ; } return var_2 . method_1 ( var_1 . method_4 ( ) . method_5 ( ) ) ; } else if ( var_1 . method_6 ( ) ) { return true ; } return false ; }
[0]: private void method_1 ( ) { if (! ( type_1. gettext ( ). equals ( string_1 ) ) ) { type_1. settext ( string_1 ) ; java.lang.string message = type_1. gettext ( ). trim ( ) ; var_1. method_1 ( var_2, message ) ; method_2 ( message, var_1. method_3 ( ). method_4 ( ), false, false ) ; } }

************

************
tgt: public boolean method_1 ( final java.awt.color var_1 , final int number ) { for ( type_1 k : var_2 . get ( var_3 ) . method_2 ( ) ) { if ( ( k . method_3 ( ) . equals ( var_1 ) ) && ( ( k . method_4 ( ) ) == number ) ) { if ( method_5 ( k , var_4 ) ) { var_2 . get ( var_3 ) . remove ( k ) ; return true ; } } } return false ; }
[0]: private void method_1 ( ) { final int var_1 = 1 ; final int var_2 = 1 ; type_1 var_3 = type_2. method_2 ( var_1, var_2, 0 ) ; type_3 var_4 = type_2. method_3 ( this ) ; var_4. method_4 ( this ) ; var_4. method_5 ( this ) ; var_4. method_6 ( var_3 ) ; method_7 ( var_5 ) ; method_8 ( ) ; method_9 ( ) ; type_4. method_10 ( var_6, var_4. build ( ) ) ; }

************

************
tgt: public void method_1 ( ) { for ( type_1 t : var_1 ) { var_2 . method_2 ( t . method_3 ( ) . offset ( ) , t . length ( ) , var_2 . method_5 ( var_3 . get ( t . type ( ) ) ) , true ) ; } }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. split ( string_1 ) ; java.lang.string label = string_2 ; for ( java.lang.string var_3 : var_2 ) { if ( ( var_3. startswith ( string_3 ) ) && ( ( var_3. length ( ) ) > 1 ) ) { label = var_3. substring ( 1 ) ; break ; } } return label ; }

************

************
tgt: public int method_1 ( android.content.intent intent , int var_1 , int var_2 ) { if ( intent != null ) { if ( type_1 . equals ( intent . method_2 ( ) , getstring ( var_3 ) ) ) { if ( var_4 . method_3 ( ) ) { var_5 . method_4 ( true ) ; } else { type_2 . method_5 ( ) . update ( ) ; } } } return super . method_1 ( intent , var_1 , var_2 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 [ ] var_2 ) { type_3 var_3 = new type_3 ( ) ; var_3. assertequals ( new type_4 ( var_1. method_2 ( ) ), var_3. method_3 ( var_2 ), var_4, var_5 ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.integer var_2 ; do { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; java.lang.system.out.println ( string_4 ) ; var_2 = var_1 . method_2 ( ) ; } while ( ! ( var_1 . method_3 ( var_2 , 1 , int_1 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { try { var_2. method_2 ( var_1. method_3 ( ), string_1, string_2, var_1 ) ; var_2. method_2 ( var_1. method_3 ( ), string_3, string_4, var_1 ) ; var_2. method_2 ( var_1. method_3 ( ), string_5, string_6, var_1 ) ; var_2. method_2 ( var_1. method_3 ( ), string_7, string_8, var_1 ) ; } catch ( java.lang.exception var_3 ) { type_2. method_4 ( string_9, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( ) , new java.io.file ( var_2 . method_2 ( ) , filename ) ) ; type_3 var_3 = new type_3 ( ) ; var_4 . method_3 ( var_3 ) ; var_1 . method_3 ( var_3 ) ; type_4 . assertequals ( var_4 , var_1 ) ; try { var_1 . method_4 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_5 ( ) ; } }
[0]: public static java.lang.string method_1 ( ) throws type_1 { if ( ( var_1 ) == null ) { try { var_1 = type_2. tostring ( var_2 class. method_2 ( string_1 ), string_2 ) ; } catch ( java.io.ioexception var_3 ) { java.lang.string message = string_3 ; var_4. error ( message, var_3 ) ; throw new type_3 ( message, var_5 ) ; } } return var_6 ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; var_1 = true ; method_2 ( var_2 , new type_1 ( var_3 ) ) ; type_1 var_4 = new type_1 ( ) ; var_4 . method_3 ( var_5 ) ; var_4 . method_3 ( var_6 ) ; method_2 ( var_7 , var_4 ) ; boolean var_8 = false ; var_8 = var_9 . method_4 ( ) ; method_6 ( string_3 ) ; }
[0]: public int method_1 ( double [ ] var_1, double [ ] var_2, double var_3 ) throws java.lang.exception { int [ ] var_4 = new int [ ] { 0 } ; long var_5 = var_6. method_2 ( obj, var_1, var_2, ( ( long ) ( var_1. length ) ), ( ( long ) ( var_2. length ) ), var_3, var_4 ) ; type_1. method_3 ( var_4 ) ; return ( ( int ) ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( ) { int result ; type_1 var_1 ; var_1 = new type_1 ( var_2 ) ; result = var_1 . method_2 ( int . class , string_1 , 1 ) ; assertequals ( type_2 . method_3 ( string_2 , var_2 ) , 1 , result ) ; var_1 = new type_1 ( var_3 ) ; result = var_1 . method_2 ( int . class , string_1 , int_1 ) ; assertequals ( type_2 . method_3 ( string_3 , var_3 ) , int_2 , result ) ; }
[0]: protected type_1 method_1 ( java.lang.string name, java.lang.class <? > var_1, java.lang.class <? > var_2 ) { type_1 <?,? > var_3 = method_2 ( ) ; var_3. method_3 ( name ) ; var_3. method_4 ( var_4 ) ; var_3. method_5 ( 1 ) ; var_3. method_6 ( var_5 ) ; var_3. method_7 ( var_6 ) ; var_3. method_8 ( var_1, var_2 ) ; return var_3 ; }

************

************
tgt: private void method_1 ( ) { this . var_1 = new type_1 ( string_1 , this . var_2 ) ; this . var_1 . method_3 ( ( ( var_3 . method_2 ( ) ) * ( var_4 ) ) , ( ( var_3 . method_4 ( ) ) * ( var_5 ) ) ) ; this . var_6 . method_5 ( this . var_1 ) ; }
[0]: private java.lang.string method_1 ( type_1 data ) { if ( data. method_2 ( ) ) { return string_1 ; } type_2 var_1 = type_3. method_3 ( ). method_4 ( var_2 class ). get ( ) ; return var_1. get ( type_4. method_5 ( data. method_6 ( ), null ) ). method_7 ( type_5 : : getname ). method_8 ( string_2 ) ; }

************

************
tgt: private static void method_1 ( final java.util.list < java.util.map < java.lang.string , java.lang.object > > var_1 , final java.lang.string key ) { java.util.collections.sort ( var_1 , ( var_2 , var_3 ) - > { return java.lang.double . method_2 ( var_2 . get ( key ) . tostring ( ) ) . compareto ( java.lang.double . method_2 ( var_3 . get ( key ) . tostring ( ) ) ) ; } ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string result = type_1. method_2 ( var_1 ) ; if ( result. equals ( var_3 ) ) { new java.lang.thread ( new type_2 ( ) { public void method_3 ( ) { var_4. method_1 ( var_1, var_2 ) ; } } ). start ( ) ; } else { view. method_4 ( result ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == 0 ) { var_1 = ( var_2 . size ( ) ) - 1 ; method_2 ( var_2 . get ( var_1 ) ) ; } else { var_1 -= 1 ; method_2 ( var_2 . get ( var_1 ) ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) throws type_2 { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; java.lang.string type = var_2. method_2 ( ) ; int var_3 = type. method_3 ( char_1 ) ; if ( var_3 > 0 ) { type = type. substring ( 0, var_3 ) ; } return ( type. replace ( char_2, char_3 ) ) + string_1 ; }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , final int var_2 ) throws type_1 { type_2 < java.lang.void > var_3 = new type_2 < java.lang.void > ( ) { public java.lang.void method_2 ( ) throws java.lang.exception { var_4 . method_1 ( var_1 , var_2 ) ; return null ; } } ; try { method_3 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { throw new type_1 ( var_5 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; if ( var_2. method_3 ( ). contains ( var_3 ) ) { var_2. method_4 ( var_1, var_3 ) ; method_5 ( false ) ; } else { var_2. method_6 ( var_1, var_3 ) ; type_3 not = new type_3 ( var_2. method_7 ( ), var_2. getname ( ), 0 ) ; not. method_8 ( var_1, var_3 ) ; method_5 ( true ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) && ( ( counter ) > int_1 ) ) { type_1 var_2 = new type_1 ( method_3 ( ) , method_4 ( ) , 0 , 0 , 0 , 0 , var_3 , var_5 ) ; var_4 . add ( var_2 ) ; var_5 . method_5 ( ) . method_6 ( var_2 ) ; counter = 0 ; } else { ( counter ) ++ ; } }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = method_2 ( ) ; java.lang.string var_2 = ( ( ( ( string_1 + ( var_1. method_3 ( ) ) ) + string_2 ) + ( var_1. method_4 ( ) ) ) + string_3 ) + ( var_1. method_5 ( ) ) ; return var_2 ; }

************

************
tgt: private type_1 < type_2 > method_1 ( type_1 < type_2 > var_1 , type_2 value ) { if ( var_1 == null ) { return new type_1 < > ( value ) ; } if ( ( var_2 . compareto ( value ) ) >= 0 ) { var_3 = method_1 ( var_3 , value ) ; } else { var_4 = method_1 ( var_4 , value ) ; } var_1 . count = 1 + ( method_2 ( var_1 ) ) ; return var_1 ; }
[0]: public void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = ( ( ( ( ( ( ( var_2 ) + ( var_3 ) ) + string_1 ) + ( var_3 ) ) + string_2 ) + ( var_3 ) ) + string_3 ; type_1 var_4 = type_1. method_2 ( var_1 ) ; type_2 var_5 = new type_2 ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( string_1 , var_1 . method_2 ( ) ) ; var_1 . method_3 ( string_2 ) ; type_1 . assertequals ( string_3 , var_1 . method_2 ( ) ) ; var_1 . method_4 ( ) ; type_1 . assertequals ( string_1 , var_1 . method_2 ( ) ) ; type_1 . assertequals ( string_3 , var_1 . method_5 ( ) ) ; }
[0]: private type_1 < type_2 > method_1 ( type_3 var_1 ) { try { java.lang.object var_2 = method_2 ( var_1 ) ; type_1 < type_2 > var_3 = ( ( type_1 < type_2 > ) ( var_2 ) ) ; return var_3 ; } catch ( type_4 | type_5 | java.lang.classnotfoundexception | type_6 | type_7 | type_8 | type_9 var_4 ) { throw new type_10 ( var_4 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { try { type_1 . method_1 ( var_1 , string_1 , new java.lang.object [ ] { var_2 , type_2 . method_2 ( var_2 ) } ) ; } catch ( java.lang.exception var_3 ) { type_1 . method_1 ( var_4 , string_2 , new java.lang.object [ ] { var_3 } ) ; } }
[0]: public void method_1 ( int position ) { if (! ( var_1 ) ) return ; type_1 var_2 = method_2 ( ) ; if ( position == 0 ) { var_2. method_3 ( ). replace ( var_3, type_2. method_4 ( position ) ). commit ( ) ; } else { var_2. method_3 ( ). replace ( var_3, type_3. method_4 ( ( position + 1 ) ) ). commit ( ) ; } }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; type_4 var_6 = ( ( type_4 ) ( var_4 . method_3 ( var_7 ) ) ) ; var_6 . settext ( method_4 ( ) . getint ( var_9 ) ) ; return var_4 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2. method_2 ( ). method_3 ( int_1 ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1. set ( i, 0 ) ; } var_1. set ( 0, string_1 ) ; type_3 var_2 = var_3. method_4 ( var_1 ) ; org.testng.assert.assertequals ( int_2, var_2. size ( ) ) ; org.testng.assert.assertequals ( var_2. iterator ( ). method_5 ( ). size ( ), int_3 ) ; }

************

************
tgt: static type_1 method_1 ( type_2 data ) { type_1 tmp = type_3 . method_2 ( data ) ; if ( ( tmp . method_3 ( ) ) != null ) { tmp = tmp . method_4 ( ) ; tmp . method_5 ( data . getname ( ) ) ; } return tmp ; }
[0]: public void method_1 ( int var_1 ) { if ( ( var_2 )!= ( var_3 ) ) { return ; } var_4 = method_2 ( var_1 ) ; if ( ( var_4 ) == null ) { return ; } java.lang.string var_5 = var_6. method_3 ( ) ; var_4. method_4 ( var_5 ) ; var_4. method_5 ( new type_1 ( var_7 ) ) ; var_8. method_6 ( false ) ; var_9. method_6 ( true ) ; }

************

************
tgt: public static java.lang.string [ ] method_1 ( java.lang.string ... var_2 ) { type_2 . method_2 ( var_2 ) ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { var_2 [ i ] = type_3 . method_3 ( var_2 [ i ] ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2 ) { var_3. method_2 ( var_4, string_1, var_2 ) ; java.lang.string [ ] var_5 = var_2. split ( string_2, int_1 ) ; assert ( var_5. length ) > 0 ; var_1. method_3 ( method_4 ( var_5 [ 0 ] ) ) ; if ( ( var_5. length ) == int_1 ) { var_1. method_5 ( method_4 ( var_5 [ 1 ] ) ) ; } else { var_1. method_5 ( null ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , int var_2 , type_2 var_3 , type_3 var_4 ) throws type_4 { java.lang.string var_5 = string_1 ; type_5 var_6 = var_1 . method_2 ( var_5 ) ; var_6 . method_3 ( 1 , var_2 ) ; var_6 . method_3 ( int_1 , var_3 . getid ( ) ) ; var_6 . method_3 ( int_2 , var_4 . getid ( ) ) ; var_6 . method_5 ( ) ; }
[0]: public final type_1 method_1 ( ) { final boolean [ ] var_1 = new boolean [ var_2. length ] ; for ( int i = 1 ; i < ( var_2. length ) ; i ++ ) { var_1 [ ( i - 1 ) ] = var_2 [ i ] ; } var_1 [ var_2. length ] = false ; return new type_1 ( var_1 ) ; }

************

************
tgt: void method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = method_2 ( ) ; type_1 . assertthat ( var_2 [ 1 ] ) . isempty ( ) ; java.lang.string var_3 = var_2 [ 0 ] ; java.lang.string var_4 = type_2 . method_3 ( var_3 ) . replaceall ( string_1 ) ; if ( ! ( var_4 . equals ( var_1 ) ) ) { var_5 . method_4 ( string_2 , var_1 , var_4 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.lang.string var_1 = ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( this. var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + string_4 ) + ( var_4 ) ) + string_3 ) + string_5 ) + ( var_4 ) ) + string_6 ) + string_7 ) + ( var_5 ) ; return list ( var_1, ( - 1 ), ( - 1 ) ) ; }

************

************
tgt: private java.lang.charsequence method_1 ( final int var_1 , final type_1 var_2 , final java.lang.string var_3 ) { if ( 0 == var_1 ) { return string_1 ; } return java.lang.string.format ( ( ( ( var_3 + string_2 ) + var_3 ) + string_3 ) , var_1 , method_3 ( var_2 . method_4 ( ) , var_2 . method_5 ( ) . tostring ( ) ) ) ; }
[0]: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 + ( this. var_2. method_1 ( ) ) ; java.util.iterator < type_1 > var_3 = method_2 ( ). iterator ( ) ; while ( var_3. method_3 ( ) ) { var_1 = ( var_1 + string_2 ) + ( var_3. method_4 ( ). method_1 ( ) ) ; } var_1 = var_1 + string_3 ; return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( int var_1 , int var_2 , int height ) { type_1 var_3 = var_4 . method_2 ( ) ; var_3 . method_3 ( this . method_4 ( ) , ( var_1 - ( ( this . method_4 ( ) . method_5 ( ) ) / int_1 ) ) , var_2 , this . method_4 ( ) . method_5 ( ) , height , null ) ; java.lang.string name = method_6 ( ) ; return name ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { switch ( var_2. method_2 ( var_1 ) ) { case var_3 : case var_4 : case var_5 : return var_6 ; case var_7 : case var_8 : return var_9 ; case var_10 : case var_11 : return var_12 ; default : throw new type_2 ( ( string_1 + var_1 ) ) ; } }

************

************
tgt: public boolean method_1 ( ) { for ( int var_1 = 0 ; var_1 < int_1 ; var_1 ++ ) { for ( int var_2 = 0 ; var_2 < int_1 ; var_2 ++ ) { var_3 . get ( var_2 ) . get ( var_1 ) . method_2 ( start [ var_2 ] [ var_1 ] ) ; } } var_4 . settext ( java.lang.integer.tostring ( var_5 ) ) ; var_6 . settext ( java.lang.integer.tostring ( var_7 ) ) ; method_3 ( ) ; return true ; }
[0]: public int method_1 ( int p ) { position = p ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; var_1 = var_2. method_2 ( ) ; switch ( var_1 ) { case 1 : java.lang.system.out.println ( string_4 ) ; java.lang.system.out.println ( string_5 ) ; position = - 1 ; break ; case int_1 : java.lang.system.out.println ( string_6 ) ; position += var_3 ; break ; default : java.lang.system.out.println ( string_7 ) ; position = 0 ; break ; } var_2. method_3 ( ) ; return position ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( var_1 . equals ( var_3 ) ) { return var_4 ; } else if ( var_2 . method_2 ( var_1 ) ) { return var_2 . get ( var_1 ) ; } final type_2 var_5 = type_2 . get ( var_1 ) ; if ( var_5 == null ) { return null ; } return var_5 . method_1 ( var_6 , var_7 ) ; }
[0]: public type_1 method_1 ( ) { type_2 var_1 = new type_3 ( ) ; java.util.list < type_4 > list = var_1. method_2 ( ) ; type_5. method_3 ( ). method_4 ( list ) ; type_5. method_3 ( ). method_5 ( ) ; type_1 var_2 = new type_1 ( string_1 ) ; var_2. method_6 ( string_2, type_5. method_3 ( ). method_7 ( ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 ; type_4 var_5 = new type_4 ( method_3 ( ) . method_4 ( ) ) ; var_6 = new type_5 ( var_7 ) . method_5 ( var_8 ) . method_6 ( var_5 ) . method_7 ( var_1 ) . method_8 ( var_9 ) . build ( ) ; }
[0]: public type_1 build ( type_2 < type_1, type_3 > var_1 ) { return new type_4 ( name, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, ( ( java.lang.string [ ] ) ( var_11. method_1 ( ) ) ), ( ( type_1 [ ] ) ( var_12. method_1 ( ) ) ), var_13, var_14, var_15 ) { protected void execute ( type_3 event ) { var_1. method_2 ( this, event ) ; } } ; } return null ; }

************

************
tgt: protected boolean method_1 ( ) { if ( ( ( this . var_1 ) >= int_1 ) && ( this . method_2 ( ) ) ) { var_2 . get ( string_1 ) . method_3 ( true ) ; var_3 . method_4 ( string_1 ) ; return true ; } return false ; }
[0]: public void method_1 ( int label ) { for ( java.util.map < java.util.list < type_1 >, java.lang.integer > var_1 : var_2. values ( ) ) { for ( java.util.list < type_1 > list : var_1. method_2 ( ) ) { java.lang.integer i = var_1. get ( list ) ; if ( i == null ) { java.lang.system.out.println ( string_1 ) ; } if ( ( i. intvalue ( ) ) == label ) { var_1. remove ( list ) ; break ; } } } var_3. add ( label ) ; }

************

************
tgt: private void info ( java.lang.string [ ] message ) { try { java.lang.stringbuilder info = type_1 . method_1 ( string_1 ) ; var_1 . method_2 ( ( ( var_2 ) + ( info . tostring ( ) ) ) ) ; } catch ( java.lang.exception var_3 ) { java.lang.string error = string_2 ; type_2 . method_3 ( char_1 , this , error ) ; var_1 . method_2 ( ( ( var_2 ) + error ) ) ; } }
[0]: public boolean method_1 ( java.lang.object key ) { int var_1 = method_2 ( key ) ; if ( ( var_2 [ var_1 ] ) == null ) { return false ; } else { type_1 var_3 = var_2 [ var_1 ] ; while ( true ) { if ( var_4. equals ( key ) ) { return true ; } if ( ( var_5 ) == null ) { break ; } var_3 = var_5 ; } return false ; } } }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 , java.lang.string var_2 ) { if ( var_2 . equals ( var_3 ) ) { if ( ( ! ( this . method_2 ( ) ) ) && ( this . method_3 ( ) ) ) { this . method_4 ( ) ; } type_1 . open ( ) ; type_1 . method_5 ( var_2 ) ; type_1 . method_6 ( ) ; } }
[0]: public java.util.map method_1 ( ) { java.util.hashmap < java.lang.string, java.lang.object > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( string_1, var_2 ) ; var_1. put ( string_2, var_3 ) ; var_1. put ( string_3, var_4. method_1 ( ) ) ; return var_1 ; }

************

************
tgt: public java.io.inputstream method_1 ( java.lang.string var_1 ) throws type_1 { try { type_2 var_2 = method_2 ( var_1 ) ; return var_2 != null ? var_2 . method_1 ( ) : null ; } catch ( java.lang.exception var_3 ) { throw new type_1 ( ( ( string_1 + var_1 ) + string_2 ) , var_3 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { if ( var_1. method_2 ( var_2 ) ) { var_1. method_3 ( var_2 ) ; } method_4 ( var_3 ) ; if ( var_1. method_2 ( var_4 ) ) { var_1. method_3 ( var_4 ) ; } method_4 ( var_5 ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string path , java.lang.string var_1 ) throws type_1 { java.util.list < type_2 > result ; result = var_2 . method_2 ( path , var_1 ) ; for ( type_2 f : result ) { if ( var_3 . equals ( var_1 ) ) { return true ; } } return false ; }
[0]: public void method_1 ( ) { if ( this. method_2 ( ) ) { return ; } if ( this. var_1. method_3 ( ) ) { var_1. method_4 ( ) ; type_1 var_2 = var_1. method_5 ( ) ; if ( var_2!= null ) { method_6 ( var_2 ) ; } } else { method_7 ( ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; type_1 event = var_2 . get ( ( ( var_3 ) ++ ) ) ; assertequals ( var_4 , var_5 ) ; assertequals ( var_6 , ( ( long ) ( var_1 ) ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1, type_2 var_2 ) { if ( ( var_1 instanceof type_3 ) && ( var_2 instanceof type_3 ) ) { return method_1 ( ( ( type_3 ) ( var_1 ) ), ( ( type_3 ) ( var_2 ) ) ) ; } return null ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 . method_2 ( this ) ; method_3 ( var_2 ) ; super . method_4 ( ) ; if ( var_1 == null ) { method_5 ( ) . method_6 ( ) . add ( var_3 , new type_3 ( ) ) . commit ( ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3, type_4 < type_5, type_6 > var_4, type_7 var_5, boolean var_6 ) { this. var_1 = var_1 ; this. var_2 = var_2 ; this. var_4 = var_4 ; this. var_3 = var_3 ; this. var_7 = var_5 ; this. var_8 = var_8 ; this. var_9 = new type_8 ( ) ; this. var_1. method_2 ( this ) ; method_3 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int offset , int length ) { if ( var_1 . method_2 ( ) ) { method_3 ( var_1 . array ( ) , offset , length ) ; } else { for ( int var_2 = offset ; var_2 < ( offset + length ) ; var_2 ++ ) { method_4 ( var_1 . get ( var_2 ) ) ; } } }
[0]: public void method_1 ( type_1 var_1, java.lang.string name ) { var_2 = new type_2 ( var_3, var_4, this ) ; var_2. method_2 ( new type_3 ( var_5, var_5, true, true, 1, 1 ) ) ; var_2. method_3 ( var_1, name, string_1 ) ; var_2. method_4 ( var_6 ) ; var_6. method_5 ( ) ; var_3. method_6 ( true ) ; var_7. method_7 ( ) ; var_7. method_8 ( var_1. method_9 ( ). var_8 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { switch ( var_1 ) { case var_2 : return new type_1 ( x , ( ( y ) - 1 ) ) ; case var_3 : return new type_1 ( x , ( ( y ) + 1 ) ) ; case var_4 : return new type_1 ( ( ( x ) + 1 ) , y ) ; case var_5 : return new type_1 ( ( ( x ) - 1 ) , y ) ; default : return null ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_1. method_2 ( var_2, var_3 ) ; var_1. method_3 ( var_4, var_5. method_4 ( ) ) ; var_1. method_3 ( var_6, var_7. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( var_3 . method_3 ( ) ) ; var_2 . method_4 ( java.lang.integer.parseint ( var_4 . gettext ( ) . tostring ( ) ) ) ; if ( ! ( var_5 . gettext ( ) . tostring ( ) . equals ( string_1 ) ) ) { var_2 . method_5 ( java.lang.integer.parseint ( var_5 . gettext ( ) . tostring ( ) ) ) ; } var_6 = false ; method_6 ( ) ; var_7 . method_7 ( ) ; }
[0]: public int method_1 ( ) { int result = ( ( var_1 )!= null )? var_1. method_1 ( ) : 0 ; result = ( int_1 * result ) + ( type. method_1 ( ) ) ; result = ( int_1 * result ) + ( ( var_2 )!= null? var_2. method_1 ( ) : 0 ) ; result = ( int_1 * result ) + ( position ) ; return result ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { try { type_1 . method_2 ( var_2 , var_3 , var_4 , var_5 , var_6 ) ; } catch ( type_2 var_7 ) { var_7 . method_3 ( ) ; var_6 . method_4 ( null , null , var_7 ) ; } }
[0]: public void method_1 ( float var_1 ) { var_2. method_2 ( ) ; var_3. method_3 ( var_2 ) ; var_2. end ( ) ; if ( var_4. method_4 ( var_5 ) ) { type_1. method_5 ( ) ; var_6. method_6 ( new type_2 ( var_6 ) ) ; } }

************

************
tgt: public double method_1 ( ) { double k = ( type_1 . method_2 ( type_2 . method_3 ( type_3 . method_4 ( type_4 . method_5 ( ( ( type_5 ) ( var_1 ) ) , ( ( type_5 ) ( var_2 ) ) ) , ( ( type_5 ) ( var_3 ) ) ) ) ) ) * ( 1.0 - ( method_6 ( ) ) ) ; if ( k < 0 ) k = k + int_1 ; return k / int_1 ; }
[0]: protected java.util.list method_1 ( ) { if ( method_2 ( ). method_3 ( ). equals ( var_1 ) ) return var_2. method_4 ( ) ; if ( ( method_2 ( ). method_3 ( ). equals ( var_3 ) ) || ( method_2 ( ). method_3 ( ). equals ( var_4 ) ) ) return this. var_5. method_5 ( ). method_6 ( ). method_7 ( ) ; return new java.util.arraylist < > ( ) ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 ) { type_1 var_2 ; try { var_2 = type_1 . method_2 ( var_1 ) ; } catch ( type_2 var_3 ) { type_3 . method_3 ( ( ) - > string_1 ) ; return ; } type_4 var_4 = java.util.logging.logger.getlogger ( var_5 class . method_6 ( ) . getname ( ) ) ; var_4 . method_7 ( var_2 ) ; for ( type_6 var_6 : var_4 . method_8 ( ) ) { var_6 . method_7 ( var_2 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( var_3 ) ; var_4 = new type_1 ( ) ; method_3 ( ). method_4 ( ). method_5 ( var_5 ). replace ( var_6, var_4 ). commit ( ) ; var_7. method_7 ( ) ; }

************

************
tgt: protected java.lang.void method_1 ( java.lang.string ... params ) { type_1 . method_2 ( var_1 ) ; java.lang.string var_1 = params [ 0 ] ; var_2 = type_1 . method_3 ( var_1 ) ; var_3 = type_1 . method_4 ( var_1 ) ; var_4 = type_1 . method_5 ( var_1 ) ; var_5 = var_4 . method_8 ( ) ; return null ; }
[0]: public void method_1 ( ) { var_1. method_2 ( 1, 1, 1, 1 ) ; var_1. method_3 ( var_2 ) ; var_3. method_4 ( ) ; var_3. method_5 ( ) ; if ( ( var_4 ) < ( type_1. method_6 ( ) ) ) { if ( ( var_5 )!= null ) { var_5. method_7 ( ) ; } } }

************

************
tgt: public void method_1 ( type_1 event ) { var_1 = getstring ( var_2 ) ; try { type_2 . method_2 ( ) ; type_2 . method_3 ( this , var_1 ) ; } catch ( java.lang.nullpointerexception var_3 ) { type_3 . method_4 ( ( string_2 + ( var_1 ) ) ) ; } }
[0]: public type_1 get ( int key ) { int var_1 = method_1 ( key ) ; int var_2 = method_2 ( key ) ; if ( ( ( var_3 [ var_1 ] )!= null ) && ( ( var_3 [ var_1 ]. method_3 ( ) ) == key ) ) { return var_3 [ var_1 ]. getvalue ( ) ; } else { return var_3 [ var_2 ]. getvalue ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == null ) { this . status = var_2 ; return ; } for ( type_1 var_3 : var_1 ) { if ( ( ( var_3 . method_2 ( ) ) == null ) || ( var_3 . method_2 ( ) . isempty ( ) ) ) { this . status = var_4 ; return ; } } this . status = var_2 ; }
[0]: public int method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = method_2 ( var_1 ) ; int id = ( ( int ) ( java.lang.math.random ( ) ) ) * int_1 ; try { id = var_2. getint ( string_2 ) ; } catch ( type_2 var_3 ) { var_3. method_3 ( ) ; } return id ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = method_2 ( var_2 ) ; if ( var_3 == null ) return null ; byte [ ] var_4 = type_2 . method_3 ( var_1 ) ; byte [ ] var_5 = this . var_6 . method_4 ( var_3 . method_5 ( ) ) . method_6 ( var_4 ) ; return type_2 . method_7 ( var_5 ) ; }
[0]: public static int method_1 ( java.util.linkedlist < type_1 > var_1, byte value ) { int i = 0 ; while ( ( ( var_1. get ( i ) )!= value ) && ( i < ( var_1. size ( ) ) ) ) i ++ ; if ( i < ( var_1. size ( ) ) ) return i ; return - 1 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , java.lang.classnotfoundexception , type_1 , type_2 , type_3 , type_4 , type_5 , type_6 , type_7 { var_1 = new type_8 ( ) ; var_2 = new java.lang.thread ( this ) ; var_2 . method_2 ( true ) ; var_2 . start ( ) ; }
[0]: private void method_1 ( int var_1, int var_2 ) { int var_3 = 0 ; int var_4 = var_1 * var_2 ; int var_5 = var_4 ; while ( var_3 < var_2 ) { method_2 ( var_5, ( var_5 + 1 ), ( ( var_5 + var_2 ) + 1 ), ( var_5 + var_2 ) ) ; var_5 ++ ; var_3 ++ ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string name , java.util.map < java.lang.string , java.lang.object > var_1 ) throws type_2 { type_3 var_2 = type_4 . method_2 ( ) ; type_5 < type_6 > var_3 = var_2 . method_3 ( name , var_4 class ) ; var_2 . method_4 ( var_3 ) ; return type_4 . method_6 ( ) . method_7 ( var_3 , var_1 ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] name = type_1. values ( ) ; for ( type_1 var_2 : name ) { if ( var_2. getvalue ( ). trim ( ). equals ( var_1 ) ) { return var_2 ; } } return var_3 ; }

************

************
tgt: public static boolean method_1 ( java.io.file file ) throws type_1 { try { java.util.scanner var_1 = new java.util.scanner ( new java.io.bufferedreader ( new java.io.filereader ( file ) ) ) ; while ( var_1 . method_2 ( ) ) { java.lang.string var_2 = var_1 . method_3 ( ) . trim ( ) ; if ( ( var_2 . length ( ) ) > 1 ) { return var_2 . startswith ( string_1 ) ; } } } catch ( type_2 var_3 ) { throw new type_1 ( string_2 , var_3 ) ; } return false ; }
[0]: public java.lang.object method_1 ( ) { if ( null!= ( var_1 ) ) { return var_1 ; } try { long id = ( ( java.lang.long ) ( super. method_2 ( ) ) ) ; var_1 = type_1. method_3 ( ). method_4 ( ). method_5 ( id ) ; return var_1 ; } catch ( type_2 | type_3 var_2 ) { var_3. method_6 ( var_4, string_1, var_2 ) ; return null ; } }

************

************
tgt: public void remove ( java.lang.object var_1 ) { if ( ( var_2 ) == null ) return ; for ( int var_3 = 0 ; var_3 < ( var_2 . size ( ) ) ; var_3 ++ ) { if ( var_2 . get ( var_3 ) . method_1 ( ) . equals ( var_1 ) ) { var_2 . remove ( var_3 ) ; this . remove ( var_1 ) ; break ; } } }
[0]: public java.util.map method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1 ) ; type_3 < java.util.hashmap < java.lang.string, java.lang.object > > var_3 = new type_3 < java.util.hashmap < java.lang.string, java.lang.object > > ( ) { } ; try { return var_2. method_2 ( method_3 ( ), var_3 ) ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } return null ; }

************

************
tgt: public static java.lang.boolean method_1 ( final java.lang.object var_1 ) { if ( var_1 instanceof java.lang.string ) { if ( var_1 . equals ( "true" ) ) { return var_2 ; } else if ( var_1 . equals ( "false" ) ) { return var_3 ; } } else if ( var_1 instanceof java.lang.boolean ) { return ( ( java.lang.boolean ) ( var_1 ) ) ; } return null ; }
[0]: private double method_1 ( double var_1, double var_2, double a ) { double var_3 = method_2 ( ( a / ( type_1. method_3 ( type_1. method_4 ( var_1 ) ) ) ), int_1 ) ; double var_4 = method_2 ( ( a * ( type_1. method_3 ( type_1. method_4 ( var_2 ) ) ) ), int_1 ) ; return var_3 + var_4 ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) throws type_1 { var_2 = var_3 . method_2 ( var_1 ) ; if ( ( var_2 ) == null ) { throw new type_1 ( string_1 ) ; } try { var_2 . open ( var_4 ) ; } catch ( type_1 var_5 ) { var_2 . open ( var_6 ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, ( string_1 + ( var_2 ) ) ) ; method_3 ( ) ; if ( ( state )!= ( var_3 ) ) { final long var_4 = type_2. method_4 ( ) ; state = var_3 ; method_5 ( ) ; final int var_5 = ( ( int ) ( type_3. method_6 ( ( ( type_2. method_4 ( ) ) - var_4 ) ) ) ) ; var_6. method_7 ( var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 c ) { for ( int i = 0 ; i < ( var_1 ) ; ++ i ) { if ( ! ( c . method_2 ( i ) ) ) c . set ( i , var_2 [ ( ( int ) ( c . method_3 ( i ) ) ) ] ) ; } }
[0]: public boolean method_1 ( type_1 id ) { if ( id. gettype ( ). method_2 ( ) ) { type_2 <? > var_1 = method_3 ( id ) ; if ( ( var_1. method_4 ( ) ) && ( method_5 ( id, method_3 ( id ) ) ) ) { return false ; } } if ( ( var_2 ) == id ) { var_2 = null ; } var_3. remove ( id ) ; var_4. method_6 ( id ) ; return true ; } return false ; }

************

************
tgt: public boolean get ( long i ) { int var_1 = ( ( int ) ( i / ( var_2 ) ) ) ; int offset = ( ( int ) ( i % ( var_2 ) ) ) ; return ( ( var_3 [ var_1 ] ) & ( 1l < < offset ) ) != 0 ; }
[0]: public static type_1 method_1 ( type_1 var_1, int var_2, int var_3 ) throws java.io.ioexception { try { if (! ( ( ( var_1. method_2 ( ) ) <= var_2 ) && ( ( var_1. method_3 ( ) ) <= var_3 ) ) ) { type_1 var_4 = type_2. method_4 ( var_1, var_2, var_3, var_5 ) ; var_1. method_5 ( ) ; return var_4 ; } else { return var_1 ; } } catch ( java.lang.throwable var_6 ) { throw new java.io.ioexception ( var_6 ) ; } }

************

************
tgt: private java.util.list < java.lang.string > method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1 . add ( string_2 ) ; var_1 . add ( string_1 ) ; var_1 . add ( string_3 ) ; var_1 . add ( string_4 ) ; var_1 . add ( string_5 ) ; return var_1 ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_2. get ( ). var_3. size ( ) ) == 0 ) return var_4. method_2 ( ). method_3 ( var_1 ) ; return var_2. get ( ). method_4 ( ). get ( var_1, true, false ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) throws type_4 { if ( ( var_2 == null ) || ( ( var_2 . method_2 ( ) ) == null ) ) return ; java.util.map < java.lang.string , java.lang.string > params = var_2 . method_2 ( ) ; if ( ! ( type_5 . method_3 ( var_1 , var_3 , var_4 ) ) ) { params . remove ( var_5 ) ; } else { type_5 . method_4 ( params , var_5 ) ; } }
[0]: private type_1 method_1 ( type_1 node ) { while ( ( node!= null ) && ( node!= ( var_1. null ) ) ) { if ( node == var_2 ) { return null ; } node = var_3. get ( node ) ; return node ; } return null ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ) ; var_5 = method_6 ( ) ; method_6 ( ) . method_7 ( string_1 ) ; var_5 . method_7 ( string_1 ) ; var_6 = new type_3 ( this ) . method_8 ( var_7 ) . build ( ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ( var_2? var_3 : var_4 ) ) ; var_5. method_3 ( true ) ; var_5. method_4 ( string_1 ) ; var_6. method_2 ( var_7 ) ; var_8. method_2 ( var_7 ) ; var_9. method_2 ( var_7 ) ; }

************

************
tgt: public void method_1 ( int x , int y , final java.lang.integer var_1 ) { for ( type_1 var_2 : var_3 . get ( var_1 ) ) { if ( var_2 != null ) { var_2 . position ( x , y ) ; var_2 . method_2 ( ) ; } } }
[0]: private void method_1 ( java.lang.string var_1 ) { switch ( var_1 ) { case string_1 : var_2. settext ( var_3 [ counter ] ) ; break ; case string_2 : break ; case string_3 : break ; case string_4 : show ( counter ) ; break ; case string_5 : show ( counter ) ; ( counter ) ++ ; var_2. settext ( var_4 [ counter ] ) ; var_5. settext ( var_6 [ counter ] ) ; break ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { method_2 ( 0 ) ; var_3 . method_3 ( ) ; for ( int i = 0 ; i < ( var_4 ) ; ++ i ) { if ( var_5 . get ( i ) . var_6 . contains ( var_7 . gettext ( ) . tostring ( ) ) ) { var_3 . add ( i ) ; } } var_8 . method_4 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( ( var_1!= null ) && (! ( var_2 ) ) ) { if ( var_1. getboolean ( var_3 ) ) { var_4. show ( ) ; } else { var_4. method_2 ( ) ; } var_5 = var_1. getboolean ( var_6 ) ; } }

************

************
tgt: public void method_1 ( java.io.file var_1 ) { if ( var_1 != null ? ! ( var_1 . equals ( this . var_1 ) ) : ( this . var_1 ) == null ) { java.io.file var_2 = this . var_1 ; this . var_1 = var_1 ; var_3 = true ; var_4 . method_2 ( string_1 , var_2 , var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3, int var_4 ) { var_5. add ( ( ( ( ( ( var_4 + string_1 ) + ( var_3 < int_1? char_1 : string_2 ) ) + var_3 ) + string_1 ) + var_2 ) ) ; method_2 ( int_2 ) ; }

************

************
tgt: public static < type_1 extends type_2 > type_1 method_1 ( type_3 var_1 , java.lang.class < type_1 > var_2 ) { return ( ( var_1 != null ) && ( ( var_1 . method_2 ( ) ) != null ) ) && ( var_2 . method_3 ( var_1 . method_2 ( ) ) ) ? var_2 . method_4 ( var_1 . method_2 ( ) ) : null ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( ( string_1 + ( var_1. getid ( ) ) ) ) ; try { type_1 var_2 = type_2. method_2 ( var_1, var_3 ) ; var_1. method_3 ( var_2 ) ; var_2. method_4 ( var_1 ) ; java.lang.system.out.println ( string_2 ) ; } catch ( type_3 var_4 ) { try { type_4. method_5 ( var_1. getid ( ), var_5, var_4. method_6 ( ) ) ; } catch ( java.lang.exception var_6 ) { var_6. method_7 ( ) ; } } } }

************

************
tgt: public type_1 method_1 ( long var_1 , long var_2 ) throws type_2 { if ( ( var_3 [ int_1 ] ) == int_2 ) { var_4 [ 0 ] = new java.util.date ( ) ; var_5 . method_2 ( ) ; var_3 [ int_1 ] = 0 ; } java.lang.system.out.print ( string_1 ) ; for ( int var_5 : var_3 ) { java.lang.system.out.print ( ( var_5 + string_2 ) ) ; } java.lang.system.out.println ( ) ; ( var_3 [ int_1 ] ) ++ ; return t . method_1 ( var_1 , var_2 ) ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.string var_2, int var_3 ) { synchronized ( var_4 ) { if (! ( var_5. method_2 ( var_2 ) ) ) var_5. put ( var_2, new java.util.arraylist < type_1 > ( ) ) ; var_5. get ( var_2 ). set ( var_3, var_1 ) ; var_6. put ( var_1, var_2 ) ; } }

************

************
tgt: public type_1 < ? > method_1 ( ) { type_2 . info ( string_1 ) ; java.util.list < type_3 > var_1 = var_2 . method_1 ( ) ; if ( var_1 . isempty ( ) ) { type_2 . error ( string_2 ) ; return new type_1 ( new type_4 ( string_2 ) , var_3 ) ; } return new type_1 ( var_1 , var_4 ) ; }
[0]: private type_1 method_1 ( ) { type_2 var_1 = type_2. method_2 ( var_2. method_3 ( ), var_2. method_4 ( ) ) ; type_1 var_3 ; if ( ( var_3 = var_4. method_5 ( var_1 ) ) == null ) { method_6 ( type_3. method_7 ( var_5 ) ) ; type_4. method_8 ( ) ; return null ; } if (! ( var_3. method_9 ( ) ) ) { type_4. method_10 ( ) ; var_3. method_11 ( ) ; } return var_3 ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { int id = this . var_2 . method_2 ( var_1 . getstring ( string_1 ) , var_1 . getstring ( string_2 ) ) ; type_1 response = type_2 . method_3 ( ) . add ( "type" , string_3 ) . add ( string_4 , id ) . add ( string_5 , ( id == ( - 1 ) ? method_4 ( int_1 ) : method_5 ( ) ) ) . build ( ) ; return response . tostring ( ) ; }
[0]: public void method_1 ( ) { try { var_1. method_2 ( ) ; } catch ( type_1 var_2 ) { var_2. method_3 ( ) ; } java.lang.object [ ] var_3 = var_4. method_4 ( ) ; var_4. method_5 ( ) ; method_6 ( var_5, var_3, ( ( time ) / ( int_1 * int_2 ) ), string_1 ) ; var_6 = new type_2 ( int_3 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int [ ] var_1 = new int [ ] { int_3 , int_2 , int_4 , int_5 , 1 , int_3 , 0 } ; java.lang.system.out.println ( type_1 . method_1 ( var_1 , var_2 , var_2 , var_2 ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { var_1. method_2 ( ). add ( 0, string_1 ) ; if ( var_4 ) var_1. method_2 ( ). add ( 1, string_2 ) ; var_1. method_3 ( ). put ( string_3, var_5. method_4 ( ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 target , type_2 var_1 ) { if ( ( var_2 . isempty ( ) ) && ( var_3 . method_4 ( var_1 ) ) ) { return true ; } if ( ( ( var_3 . method_2 ( var_1 ) ) || ( ! ( this . method_3 ( var_1 ) ) ) ) || ( ! ( var_3 . method_4 ( var_1 ) ) ) ) { return false ; } type_3 var_4 = var_2 . get ( var_1 ) ; return var_4 . method_5 ( target . method_6 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = ( new java.util.date ( ). gettime ( ) ) / int_1 ; if ( ( ( var_2 ) - ( var_3 ) ) > ( var_4 ) ) { var_5. method_2 ( var_6, var_7 ) ; var_3 = var_2 ; } }

************

************
tgt: public void getvalue ( ) { var_1 = type_1 . method_1 ( var_2 ) ; var_3 = type_1 . method_1 ( var_4 ) ; var_5 = type_1 . method_1 ( var_6 ) ; var_7 = type_2 . method_2 ( ) ; if ( var_7 ) var_8 = type_2 . method_3 ( ) ; else var_8 = 0 ; }
[0]: public void method_1 ( int var_1, type_1 [ ] var_2, type_2 response ) { type_3 var_3 = new type_3 ( response ) ; var_3. method_2 ( ) ; var_3. method_3 ( ). method_2 ( ) ; if ( ( listener )!= null ) { listener. method_4 ( var_3. getid ( ) ) ; method_5 ( ) ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , int var_3 , int var_4 ) { if ( ! ( var_5 ) ) return ; method_2 ( ) ; int diff = var_4 - var_2 ; if ( diff != 0 ) var_7 . method_3 ( ( - diff ) ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { type_2 var_2 = var_3. get ( position ) ; android.content.intent var_4 = new android.content.intent ( var_5, var_6 class ) ; var_4. method_2 ( var_7, var_2. method_3 ( ). replaceall ( string_1, string_2 ) ) ; method_4 ( var_4 ) ; }

************

************
tgt: public type_1 method_1 ( java.util.list < double [ ] > var_1 , java.util.list < type_2 > var_2 , type_3 params ) throws type_4 { var_3 . method_2 ( string_1 ) ; type_1 result = method_3 ( ) . method_4 ( params , var_1 , var_2 , new type_5 ( ) ) ; if ( ! ( result . isempty ( ) ) ) { var_3 . method_2 ( string_2 ) ; method_5 ( result , params ) ; } return result ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; this. method_2 ( var_2 ) ; for ( type_3 var_3 : var_4 ) { var_3. method_1 ( var_1 ) ; } this. method_3 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( ) ; var_2 . method_4 ( var_3 ) ; if ( ( ( type_3 . method_5 ( this , var_4 ) ) != ( var_5 ) ) && ( ( type_3 . method_5 ( this , var_6 ) ) != ( var_5 ) ) ) { return ; } type_4 . method_6 ( var_7 , var_2 , this ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; float sum = 0.0f ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { java.lang.float f = var_1. method_1 ( ) ; if ( f <= 0 ) { continue ; } sum += f ; } sum /= var_3 ; java.lang.system.out.println ( ( string_1 + ( type_1. method_2 ( sum ) ) ) ) ; } }

************

************
tgt: public java.lang.string [ ] method_1 ( ) { java.lang.string [ ] names = new java.lang.string [ int_1 ] ; for ( int i = 0 ; i < int_1 ; i ++ ) { names [ i ] = this . var_1 [ i ] . gettext ( ) ; } return names ; }
[0]: public static type_1 getclass ( java.lang.string classname ) { java.util.list < type_1 > var_1 = var_2. method_1 ( ). method_2 ( ) ; for ( type_1 var_3 : var_1 ) { if ( classname. equals ( var_4 ) ) { return var_3 ; } } return null ; }

************

************
tgt: private void method_1 ( java.lang.string id ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = type_2 . method_3 ( string_1 , id ) ; var_1 . method_4 ( var_3 ) ; java.lang.charsequence var_4 = string_2 ; int var_5 = var_6 ; type_3 . method_6 ( this , var_4 , var_5 ) . show ( ) ; }
[0]: private void method_1 ( type_1 < type_2 > var_1, type_3 out ) { type_1 < type_4 > var_2 = method_2 ( var_1. method_3 ( 0 ) ) ; if ( method_4 ( var_2. gettype ( ), var_1 ) ) { out. method_5 ( var_2. method_6 ( ). getname ( ) ) ; } else { out. method_5 ( ( ( string_1 + ( var_2. method_6 ( ). getname ( ) ) ) + string_2 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) < ( var_3 ) ) { ( var_2 ) ++ ; for ( type_2 var_4 : var_5 ) { if ( var_4 . method_2 ( ) . equals ( var_1 ) ) { var_4 . method_3 ( ( ( var_4 . method_4 ( ) ) + 1 ) ) ; return ; } } var_5 . add ( new type_2 ( var_1 , 1 , this ) ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1, type_2 var_2 ) { java.util.map < java.lang.string, type_1 > var_3 = new java.util.hashmap < java.lang.string, type_1 > ( ) ; try { method_2 ( ). execute ( string_1, var_2, var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_3 ( ) ; } return new java.util.arraylist < type_1 > ( var_3. values ( ) ) ; }

************

************
tgt: private static type_1 method_1 ( type_2 var_1 , java.io.inputstream var_2 ) throws java.io.ioexception { java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; type_3 var_4 = new type_3 ( var_2 ) ; type_1 var_5 = new type_1 ( var_1 , var_4 ) ; var_5 . method_7 ( ) ; var_5 . method_2 ( var_6 ) ; var_5 . method_3 ( var_4 . method_4 ( ) ) ; var_5 . method_5 ( var_3 ) ; var_5 . method_6 ( var_3 ) ; return var_5 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( var_2, string_1 ) ; var_3. method_3 ( null ) ; var_1. method_4 ( string_2, query ) ; if ( ( var_4. method_5 ( ) )!= 0 ) { var_5 = var_4. getdata ( ) ; var_1. method_6 ( var_6, var_5 ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_1 item = array [ ( ( var_1 ) - 1 ) ] ; if ( item == null ) { throw new type_2 ( ) ; } array [ ( ( var_1 ) - 1 ) ] = null ; ( var_2 ) -- ; var_1 = var_2 ; method_2 ( ) ; return item ; }
[0]: public static float method_1 ( ) { float var_1 = 0.0f ; float sum = 1.0f ; int n = 1 ; while ( var_1 < sum ) { var_1 = sum ; n += 1 ; sum += 1.0 / n ; if ( ( n % int_1 ) == 0 ) { java.lang.system.out.println ( ( ( ( string_1 + n ) + string_2 ) + sum ) ) ; } } return sum ; }

************

************
tgt: private void method_1 ( ) { this . var_1 = new type_1 < > ( ) ; if ( ( this . method_2 ( ) . method_3 ( ) ) != null ) { for ( type_2 var_2 : this . method_2 ( ) . method_3 ( ) ) { type_3 var_3 = new type_3 ( var_2 . name ( ) , var_2 , this ) ; this . var_1 . put ( var_2 . name ( ) , var_3 ) ; } } }
[0]: private void method_1 ( ) { final int var_1 = int_1 ; if ( ( ( var_2 )!= null ) && ( ( var_2. method_2 ( ) ) == ( var_3 ) ) ) { method_3 ( ) ; } else { var_2 = new java.lang.thread ( ) { public void method_4 ( ) { try { var_2. method_5 ( var_1 ) ; method_3 ( ) ; } catch ( type_1 var_4 ) { java.lang.system.out.println ( ( string_1 + var_4 ) ) ; } } } ; var_2. start ( ) ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( ! ( method_2 ( var_1 . getname ( ) ) ) ) { type_2 . method_4 ( var_3 , ( string_1 + ( var_1 . getname ( ) ) ) ) ; var_2 . add ( var_1 ) ; method_3 ( var_1 ) ; } else { type_2 . method_4 ( var_3 , ( ( string_2 + ( var_1 . getname ( ) ) ) + string_3 ) ) ; } }
[0]: public static type_1 method_1 ( type_2 var_1 ) throws type_3 { java.lang.string var_2 = var_1. getstring ( string_1 ) ; java.lang.string var_3 = var_1. getstring ( string_2 ) ; java.lang.string var_4 = var_1. getstring ( string_2 ) ; java.lang.string var_5 = var_1. getstring ( string_3 ). getstring ( string_4 ) ; java.lang.string var_6 = var_1. method_2 ( string_3 ). getstring ( string_4 ) ; return new type_1 ( var_2, var_3, var_4, var_5, var_6 ) ; }

************

************
tgt: public static void update ( ) { if ( var_2 ) { synchronized ( var_1 class ) { if ( var_2 ) { type_1 . method_1 ( var_3 ) ; var_4 = new type_1 < ? > [ var_3 . size ( ) ] ; for ( type_1 var_5 : var_3 ) var_4 [ var_6 ] = var_5 ; var_2 = false ; } } } }
[0]: public void method_1 ( ) throws type_1 { final type_2 var_1 ; synchronized ( var_2 ) { var_3 = var_4. method_1 ( var_5, var_6 ) ; var_1 = var_3 ; } var_1. method_2 ( ) ; synchronized ( var_2 ) { while ( ( ( var_7 ) == null ) && ( ( var_1. method_3 ( ). method_4 ( ) ) || ( var_1. method_3 ( ). method_5 ( ) ) ) ) { var_2. method_6 ( ) ; } } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( type_2 ) != null ) { if ( ( ( var_2 ) != null ) && ( ( var_3 . type ) > 0 ) ) type_2 . method_2 ( var_4 ) ; else type_2 . method_2 ( var_5 ) ; } if ( ( type_3 ) != null ) { if ( ( ( var_2 ) != null ) && ( ( var_3 . type ) > 0 ) ) type_3 . method_2 ( var_4 ) ; else type_3 . method_2 ( var_5 ) ; } }
[0]: private void method_1 ( ) throws type_1, type_2 { java.lang.class <? extends type_3 > var_1 = var_2. method_2 ( ). method_3 ( ) ; type_4 var_3 = var_1. method_4 ( ) ; type_5 var_4 = new type_5 ( ) ; var_4. method_5 ( string_1, method_6 ( ). method_7 ( var_2. method_2 ( ) ) ) ; var_3. method_8 ( var_4 ) ; type_6 var_5 = var_6. method_9 ( ) ; var_5. replace ( var_7, var_3 ) ; var_5. commit ( ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { int start = var_2 . size ( ) ; int end = start + var_1 ; for ( int i = start ; i < end ; i ++ ) { var_2 . add ( var_3 . get ( i ) ) ; } }
[0]: protected void method_1 ( java.util.arraylist < type_1 > var_1 ) { super. method_1 ( var_1 ) ; var_2. method_2 ( ) ; var_3 = var_1 ; if ( var_1. isempty ( ) ) { method_3 ( string_1 ) ; method_4 ( ) ; } else { method_3 ( ( string_2 + ( java.lang.string. method_5 ( var_3. size ( ) ) ) ) ) ; method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } if ( ( var_1 ) == ( var_2 . length ) ) { method_2 ( ( int_1 * ( var_2 . length ) ) ) ; } var_2 [ ( ( var_1 ) ++ ) ] = item ; }
[0]: public boolean method_1 ( type_1 item ) { type_2. method_2 ( this, ( ( method_3 ( ). method_4 ( item. method_5 ( ) ) ) + string_1 ), var_1 ). show ( ) ; switch ( item. method_5 ( ) ) { case var_2 : method_6 ( ) ; return true ; case var_3 : method_7 ( ) ; return true ; case var_4 : method_8 ( var_5 ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = type_2 . method_2 ( ) . method_3 ( ) . method_4 ( string_1 , var_1 . method_5 ( ) , ( ( var_3 ) + ( this . method_6 ( ) ) ) , null ) ; if ( type_2 . method_2 ( ) . method_7 ( string_2 , true ) ) { type_2 . method_2 ( ) . method_8 ( var_2 ) ; } else { var_1 . method_9 ( var_2 ) ; } }
[0]: public type_1 method_1 ( int i ) { if ( i >= ( var_1. length ) ) return var_2 ; if ( ( var_1 [ i ] )!= ( var_2 ) ) { type_1 var_3 = var_1 [ i ] ; var_1 [ i ] = var_2 ; return var_3 ; } return var_2 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { type_1 set = new type_1 ( ) ; java.io.file f = new java.io.file ( string_1 ) ; java.lang.string var_1 = new java.lang.string ( type_2 . method_1 ( f . method_2 ( ) ) , var_2 ) ; type_4 . method_3 ( set , string_2 , var_1 ) ; }
[0]: public void handle ( java.io.inputstream var_1, type_1 var_2 ) throws java.io.ioexception { type_2 var_3 = type_2. method_1 ( var_1, var_4 ) ; type_3 var_5 = null ; try { var_3. method_2 ( ) ; var_5 = var_3. method_3 ( ) ; } catch ( type_4 var_6 ) { method_4 ( var_2, method_5 ( string_1, string_2, ( - int_1 ), string_3, null ) ) ; return ; } method_6 ( var_5, var_2 ) ; }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj instanceof type_1 ) { type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( ( ( ( var_1 . name ) == null ) && ( ( this . name ) == null ) ) || ( var_2 . equals ( this . name ) ) ) && ( ( java.lang.double . method_1 ( var_3 , this . var_4 ) ) == 0 ) ; } return false ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; var_3. method_1 ( var_1 ) ; method_4 ( ) ; var_4 = new type_3 ( var_5, method_5 ( ) ) ; var_4. method_6 ( ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , int var_2 , java.lang.string file ) { type_2 item = type_2 . method_2 ( var_1 ) ; type_3 . method_3 ( item , var_2 , new type_4 ( ( ( ( var_3 ) + string_1 ) + file ) , string_2 ) ) ; java.lang.system.out.println ( ( ( ( ( string_3 + ( var_3 ) ) + string_1 ) + ( type_2 . method_2 ( var_1 ) . method_4 ( ) ) ) + string_4 ) ) ; }
[0]: public void method_1 ( int p, int var_1 ) { int var_2 = method_2 ( p ) ; int var_3 = method_2 ( var_1 ) ; if ( ( var_4 [ var_2 ] ) > ( var_4 [ var_3 ] ) ) { set [ var_3 ] = var_3 ; } else { set [ var_2 ] = var_3 ; if ( ( var_4 [ var_2 ] ) == ( var_4 [ var_3 ] ) ) { ( var_4 [ var_3 ] ) ++ ; } } } }

************

************
tgt: public java.lang.long method_1 ( ) { long result = 0 ; while ( result == 0 ) { if ( ! ( method_2 ( ) ) ) { throw new type_1 ( ) ; } result = var_1 [ var_2 ] ; ( var_2 ) ++ ; } return result ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws type_1 { try { var_2. info ( ( string_1 + var_1 ) ) ; if ( ( var_3 ) == null ) return ; var_4. method_2 ( var_3. method_3 ( ) ) ; var_5. method_4 ( ) ; } catch ( java.lang.exception var_6 ) { throw new type_1 ( ( string_2 + ( var_6. method_5 ( ) ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { final type_1 var_1 = new type_1 ( var_2 . method_2 ( ) ) ; var_3 = ( type_2 . method_3 ( var_4 ) [ 1 ] ) * ( ( float ) ( float_2 ) ) ; var_5 = ( type_2 . method_3 ( var_4 ) [ 0 ] ) * ( ( float ) ( float_1 ) ) ; var_6 = 0 ; var_7 = ( var_8 ) - 1 ; var_2 . method_4 ( var_1 ) ; var_2 . method_5 ( var_1 ) ; }
[0]: public void method_1 ( type_1 message ) { type_2 var_1 = message. get ( 0 ) ; type_3 var_2 = message. get ( 1 ) ; java.lang.string var_3 = message. get ( int_1 ) ; synchronized ( var_4 ) { var_4. add ( new type_4 ( var_1, var_2, var_3 ) ) ; } method_2 ( ( ( ( ( string_1 + ( var_2. getname ( ) ) ) + string_2 ) + var_3 ) + string_3 ) ) ; method_3 ( ) ; }

************

************
tgt: private static java.lang.string getname ( type_1 var_1 ) { if ( var_1 . method_1 ( ) . equals ( string_1 ) ) { return method_2 ( ( string_2 + ( var_1 . method_3 ( ) ) ) ) ; } else { return method_2 ( ( string_3 + ( var_1 . getname ( ) ) ) ) ; } }
[0]: private static int method_1 ( ) { if ( ( var_1. equals ( var_2 ) ) || ( ( var_3 )!= null ) ) { var_4 = var_1 ; return var_5 ; } else { var_6 = var_1 ; type_1. method_2 ( ) ; type_1. method_3 ( ) ; return var_7 ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 message = ( ( type_2 ) ( var_1 . obj ) ) ; if ( ( message . type ) == ( var_2 ) ) { listener . method_2 ( message . id , message . status , message . text ) ; } else if ( ( message . type ) == ( var_4 ) ) { } else if ( ( message . type ) == ( var_5 ) ) { } }
[0]: public void method_1 ( ) { var_1. info ( string_1, var_2, var_3, var_4, var_5, var_6. method_2 ( ) ) ; var_7. get ( var_6. method_2 ( ) ). method_3 ( var_2, var_3, var_4, var_5 ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( ( type_1 . method_2 ( ) ) != null ) { android.content.intent intent = new android.content.intent ( this , var_1 class ) ; method_3 ( intent ) ; } type_2 . method_4 ( this ) ; }
[0]: public static final void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_3. method_2 ( var_2 ) ; var_4. method_2 ( var_2 ) ; var_5. method_2 ( var_2 ) ; type_3. method_3 ( new type_4 ( var_2 ), var_2 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; if ( ( var_2 . count ) <= 1 ) { return type_4 . get ( ) ; } return type_5 . method_2 ( type_6 . method_3 ( ( ( var_3 ) / ( ( var_2 . count ) - 1 ) ) ) ) ; }
[0]: private static void method_1 ( type_1 response, int var_1, java.lang.string message, type_2 var_2, java.lang.string var_3 ) { type_3 var_4 = null ; if ( message!= null ) { var_4 = new type_4 ( message. method_2 ( ) ) ; type_5. method_3 ( response, var_1, var_3, var_4, var_5, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( type_1 . method_2 ( ) . method_3 ( url ) ) { this . method_4 ( new type_2 ( ) { public void method_1 ( ) { var_2 . method_5 ( ) ; method_6 ( ) ; } } ) ; } this . method_4 ( new type_2 ( ) { public void method_1 ( ) { method_6 ( ) ; } } ) ; }
[0]: private void method_1 ( type_1 msg ) { android.content.intent intent = new android.content.intent ( this, var_1 class ) ; intent. method_2 ( ( ( ( var_2 ) | ( var_3 ) ) | ( var_4 ) ) ) ; intent. method_3 ( var_5, ( ( java.lang.string [ ] ) ( msg. obj ) ) ) ; method_4 ( intent ) ; }

************

************
tgt: private float method_1 ( int var_1 ) { float var_2 = float_1 ; switch ( var_1 ) { case 1 : var_2 = float_1 ; break ; case int_1 : var_2 = float_2 ; break ; case int_2 : var_2 = float_3 ; break ; case int_3 : var_2 = float_4 ; break ; case int_4 : var_2 = float_5 ; break ; } return var_2 ; }
[0]: private static < type_1 extends type_2 <? super type_1 > > void method_1 ( type_1 [ ] var_1, type_1 [ ] var_2, int var_3, int var_4 ) { final int var_5 = int_1 ; int var_6 = ( var_4 - var_3 ) + 1 ; if ( var_6 >= var_5 ) type_3. method_2 ( var_1, var_3, var_4 ) ; else type_3. method_3 ( var_1, var_2, var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { var_2 . remove ( method_2 ( ) . get ( position ) ) ; method_2 ( ) . remove ( position ) ; method_3 ( ) . method_4 ( position ) ; type_2 . method_5 ( getcontext ( ) , string_1 , var_3 ) . show ( ) ; } else { type_2 . method_5 ( getcontext ( ) , var_1 . method_6 ( ) , var_3 ) . show ( ) ; } }
[0]: private boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 [ i ]. length ) ; j ++ ) { if ( var_1 [ i ] [ j ] [ 0 ]. equals ( var_2 [ i ] [ j ] [ 0 ] ) ) return false ; } } return true ; } }

************

************
tgt: public java.lang.object method_1 ( ) { var_1 . method_2 ( ) ; var_1 . method_3 ( ) ; if ( type_2 . equals ( var_1 . method_4 ( ) . getname ( ) , string_1 ) ) { var_1 . method_5 ( string_2 ) ; return new type_1 ( var_1 ) ; } else { var_1 . method_6 ( var_2 . method_7 ( var_1 . method_4 ( ) . method_8 ( ) ) ) ; } return var_1 . method_4 ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3 ; if ( var_1!= null ) { java.util.list < type_3 > var_4 = var_5. method_2 ( type_4. method_3 ( var_1 ), new type_5 ( var_6, string_1 ) ) ; for ( type_3 var_7 : var_4 ) { var_2. add ( method_4 ( var_7 ) ) ; } } return var_2 ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) method_2 ( var_2 , var_3 ) ; else { try { var_4 . method_3 ( ) ; } catch ( java.io.ioexception var_7 ) { } type_1 var_5 = var_1 ; method_4 ( var_2 , var_6 , var_5 ) ; method_5 ( ) ; var_8 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( var_2 class ) ; type_3. method_3 ( var_1 ) ; type_4 var_3 = new type_4 ( ) ; type_3 var_4 = type_5. method_4 ( var_3 ) ; type_2. method_5 ( var_1 ). method_6 ( var_3, var_4 ) ; type_3. method_3 ( null ) ; }

************

************
tgt: public void method_1 ( type_1 error ) { java.util.hashmap < java.lang.string , java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( var_2 , error . method_2 ( ) ) ; type_2 . method_3 ( var_3 , var_1 ) ; if ( ( getview ( ) ) != null ) { type_3 . method_4 ( getview ( ) , var_4 , var_5 ) ; } if ( ( var_6 ) != null ) { var_6 . method_5 ( ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( string_1, ( ( this. tostring ( ) ) + string_2 ) ) ; type_2. method_3 ( null ) ; if ( ( type_2. method_4 ( ) )!= null ) type_2. method_4 ( ). method_5 ( ) ; if (! ( type_2. method_6 ( ) ) ) { android.content.intent intent = new android.content.intent ( this, var_2 class ) ; method_8 ( intent ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ! ( type_1 . gettext ( ) . equals ( string_1 ) ) ) { java.lang.string message = type_1 . gettext ( ) . trim ( ) ; type_1 . settext ( string_1 ) ; var_1 . method_1 ( var_2 , message ) ; method_2 ( message , var_1 . method_3 ( ) . method_4 ( ) , false ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = null ; if ( ( var_5 ) == 0 ) { var_4 = method_2 ( var_1, var_2, var_3 ) ; type_4 var_6 = ( ( type_4 ) ( var_4. method_3 ( var_7 ) ) ) ; if ( ( ( var_8 )!= null ) && ( var_6!= null ) ) var_6. settext ( var_8 ) ; } else { var_1. method_4 ( var_5, var_2, false ) ; } return var_4 ; }

************

************
tgt: private void method_1 ( ) { final int var_1 = 1 ; final int var_2 = 1 ; type_1 var_3 = type_2 . method_2 ( var_1 , var_2 , 0 ) ; type_3 var_4 = type_2 . method_3 ( this ) ; var_4 . method_4 ( this ) ; var_4 . method_5 ( this ) ; var_4 . method_6 ( var_3 ) ; method_7 ( var_5 ) ; method_8 ( ) ; type_4 . method_10 ( var_6 , var_4 . build ( ) ) ; }
[0]: protected void method_1 ( ) { type_1. method_2 ( ). method_3 ( string_1, string_2 ) ; type_2. i ( var_1, string_3 ) ; method_4 ( ) ; if ( ( ( var_2 )!= null ) && ( var_2. method_5 ( ) ) ) { var_2. method_6 ( ) ; } super. method_1 ( ) ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1 . split ( string_1 ) ; java.lang.string label = null ; for ( java.lang.string var_3 : var_2 ) { if ( ( var_3 . startswith ( string_3 ) ) && ( ( var_3 . length ( ) ) > 1 ) ) { label = var_3 . substring ( 1 ) ; break ; } } return label ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { type_1 var_4 = var_3. get ( i ) ; if ( ( var_5. equals ( var_1 ) ) && ( var_6. equals ( var_2 ) ) ) { var_7 = false ; var_6 = string_1 ; return ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 [ ] var_2 ) { try { type_3 var_3 = new type_3 ( ) ; var_3 . assertequals ( new type_4 ( var_1 . method_2 ( ) ) , var_3 . method_3 ( var_2 ) , var_4 , var_5 ) ; } finally { method_4 ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( (! ( var_2. equals ( string_1 ) ) ) || ( var_2. equals ( string_2 ) ) ) { java.lang.string value = ( ( string_3 + var_1 ) + string_4 ) + var_2 ; var_3 = ( ( var_3 ) + value ) + ( var_2. trim ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { var_2 . method_2 ( var_1 . method_3 ( ) , string_1 , string_2 , var_1 ) ; var_2 . method_2 ( var_1 . method_3 ( ) , string_3 , string_4 , var_1 ) ; var_2 . method_2 ( var_1 . method_3 ( ) , string_5 , string_6 , var_1 ) ; var_2 . method_2 ( var_1 . method_3 ( ) , string_7 , string_8 , var_1 ) ; } catch ( java.lang.exception var_3 ) { type_2 . method_4 ( ( string_9 + var_3 ) ) ; } }
[0]: private void method_1 ( ) { try { var_1. method_2 ( ) ; } catch ( final java.io.ioexception var_2 ) { var_2. method_3 ( ) ; var_3. method_4 ( ( ( ( string_1 + ( var_1 ) ) + ( var_2. method_5 ( ) ) ) + ( var_2. tostring ( ) ) ) ) ; } var_4. remove ( var_1 ) ; var_4. commit ( ) ; }

************

************
tgt: public static java.lang.string method_1 ( ) throws type_1 { if ( ( var_1 ) == null ) { try { var_1 = type_2 . tostring ( var_2 class . method_2 ( string_1 ) , string_2 ) ; } catch ( java.io.ioexception var_3 ) { java.lang.string message = string_3 ; var_4 . error ( message , var_3 ) ; throw new type_3 ( message , var_5 ) ; } } return var_1 ; }
[0]: public void method_1 ( android.view.view var_1 ) { int var_2 = ( ( type_1 ) ( this. method_2 ( ). method_3 ( ) ) ). method_4 ( ) ; this. method_5 ( type_1. method_6 ( string_1, ( var_2 + 1 ) ) ) ; }

************

************
tgt: public int method_1 ( double [ ] var_1 , double [ ] var_2 , double var_3 ) throws java.lang.exception { int [ ] var_4 = new int [ ] { 0 } ; long var_5 = var_6 . method_2 ( obj , var_1 , var_2 , var_1 . length , var_2 . length , var_3 , var_4 ) ; type_1 . method_3 ( var_4 ) ; return ( ( int ) ( var_5 ) ) ; }
[0]: private boolean method_1 ( int p ) { if ( p == int_1 ) return true ; if ( p < int_2 ) return false ; if ( ( p % int_1 ) == 0 ) return false ; for ( int i = int_2 ; ( i * i ) < p ; i += int_1 ) if ( ( p % i ) == 0 ) return false ; return true ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string name ) { type_1 < ? , ? > var_3 = method_2 ( ) ; var_3 . method_3 ( name ) ; var_3 . method_4 ( var_4 ) ; var_3 . method_5 ( 1 ) ; var_3 . method_6 ( var_5 ) ; var_3 . method_7 ( var_6 ) ; return var_3 ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_1 == ( var_3 ) ) { if ( var_2 == ( var_4 ) ) { var_5. method_2 ( ) ; var_6 = data. method_3 ( string_1, 1 ) ; method_4 ( ) ; } } else { var_5. method_2 ( ) ; var_6 = data. method_3 ( string_1, 1 ) ; } } }

************

************
tgt: private java.lang.string method_1 ( type_1 data ) { if ( ( data . method_6 ( ) ) == null ) { return string_2 ; } if ( data . method_2 ( ) ) { return string_1 ; } type_2 var_1 = type_3 . method_3 ( ) . method_4 ( var_2 class ) . get ( ) ; return var_1 . get ( type_4 . method_5 ( data . method_6 ( ) , null ) ) . method_7 ( type_5 : : getname ) . method_8 ( string_2 ) ; }
[0]: private java.lang.string method_1 ( int var_1 ) { var_2. method_2 ( var_3. method_3 ( ) ) ; var_4. method_4 ( var_4. method_5 ( ) ) ; if ( this. var_5 ) this. var_5 = false ; else var_4. method_6 ( ) ; msg. method_7 ( var_3. method_3 ( ), var_3. method_8 ( ) ) ; var_3. method_9 ( var_1 ) ; return string_1 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string result = type_1 . method_2 ( var_1 ) ; if ( result . equals ( var_3 ) ) { var_4 . method_1 ( var_1 , var_2 ) ; } else { view . method_4 ( result ) ; } }
[0]: public void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = method_2 ( ) ; type_1. method_3 ( this. var_2, type_1. method_4 ( ), var_1, false ). method_5 ( this. var_2. method_6 ( ). method_7 ( type_2. method_8 ( ). name ( var_1 ). build ( ) ) ). method_9 ( method_10 ( ) ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) throws type_2 { type_3 var_2 = ( ( type_3 ) ( var_1 ) ) ; java.lang.string type = var_2 . method_2 ( ) ; if ( type != null ) { int var_3 = type . method_3 ( char_1 ) ; if ( var_3 > 0 ) { type = type . substring ( 0 , var_3 ) ; } return ( type . replace ( char_2 , char_3 ) ) + string_1 ; } else { return null ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_2!= null ) { type_3. method_2 ( var_3, ( ( ( string_1 + var_4 ) + string_2 ) + ( var_2. method_3 ( ) ) ) ) ; return ; } if ( var_1!= null ) { type_3. method_4 ( var_3, string_3 ) ; if ( var_5!= null ) { var_5. method_5 ( var_1 ) ; } } } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) ; if ( var_2 . method_3 ( ) . contains ( var_3 ) ) { var_2 . method_4 ( var_1 , var_3 ) ; method_5 ( false ) ; } else { var_2 . method_6 ( var_1 , var_3 ) ; method_5 ( true ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( ) ; java.util.list < type_2 > var_1 = type_3. method_3 ( ). method_4 ( ) ; while ( ( var_1. size ( ) ) > 0 ) { this. method_5 ( var_1. get ( 0 ) ) ; } method_6 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = method_2 ( ) ; return ( ( ( ( string_1 + ( var_1 . method_3 ( ) ) ) + string_2 ) + ( var_1 . method_4 ( ) ) ) + string_3 ) + ( var_1 . method_5 ( ) ) ; }
[0]: protected void execute ( type_1 var_1 ) { try { type_2 view = ( ( type_2 ) ( type_3. method_1 ( ). method_2 ( ). method_3 ( ). method_4 ( var_2 ) ) ) ; view. method_5 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { type_4. get ( ). error ( string_1, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = ( ( ( ( ( ( var_2 ) + ( var_3 ) ) + string_1 ) + ( var_3 ) ) + string_2 ) + ( var_3 ) ) + string_3 ; type_1 var_4 = type_1 . method_2 ( var_1 ) ; new type_2 ( var_4 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_2 var_2 : var_3 ) { type_3 var_4 = var_2. method_2 ( ) ; if ( var_4. method_3 ( ). equals ( type_4. method_4 ( ) ) ) { type_5 var_5 = var_4. method_3 ( ). method_5 ( ) ; var_5. method_6 ( ) ; method_7 ( ) ; var_5. method_8 ( var_6, false ) ; var_5. method_9 ( true ) ; method_10 ( ) ; return ; } } method_10 ( ) ; } }

************

************
tgt: private type_1 < type_2 > method_1 ( type_3 var_1 ) { try { java.lang.object var_2 = method_2 ( var_1 ) ; return ( ( type_1 < type_2 > ) ( var_2 ) ) ; } catch ( type_4 | type_5 | java.lang.classnotfoundexception | type_6 | type_7 | type_8 | type_9 var_4 ) { throw new type_10 ( var_4 ) ; } }
[0]: private void method_1 ( ) { if ( var_1. equals ( var_2 ) ) { var_3. method_2 ( var_4 ) ; var_3. setvalue ( 0 ) ; } else if ( var_1. equals ( var_5 ) ) { var_3. method_2 ( var_4 ) ; var_6. method_2 ( var_4 ) ; var_3. setvalue ( 0 ) ; var_7. setvalue ( 0 ) ; } }

************

************
tgt: public void method_1 ( int position ) { if ( ! ( var_1 ) ) return ; type_1 var_2 = method_2 ( ) ; if ( position == 0 ) { var_2 . method_3 ( ) . replace ( var_3 , type_2 . method_4 ( this ) ) . commit ( ) ; } else { var_2 . method_3 ( ) . replace ( var_3 , type_3 . method_4 ( ( position + 1 ) ) ) . commit ( ) ; } }
[0]: public void method_1 ( type_1 var_1, int position ) { if (! ( var_2. method_2 ( position ) ) ) return ; android.content.context context = var_3. getcontext ( ) ; java.lang.string var_4 = var_2. getstring ( var_2. method_3 ( var_5 ) ) ; type_2 var_6 = var_3 ; type_3. method_4 ( var_7 ). method_5 ( var_4 ). method_6 ( int_1, int_2 ). method_7 ( var_6 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2 . method_2 ( ) . method_3 ( int_1 ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . set ( i , 0 ) ; } var_1 . set ( 0 , string_1 ) ; type_3 var_2 = var_3 . method_4 ( var_1 ) ; org.testng.assert.assertequals ( int_1 , var_2 . size ( ) ) ; org.testng.assert.assertequals ( var_2 . iterator ( ) . method_5 ( ) . size ( ) , int_3 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception, type_1 { if ( ( var_1. contains ( string_1 ) ) || ( var_1. contains ( string_2 ) ) ) { java.lang.string var_2 = string_3 ; type_2 var_3 = method_2 ( var_2, string_1 ) ; type_3. assertnotnull ( var_3 ) ; method_3 ( new long [ ] { int_1, int_2 }, var_3. method_4 ( ), var_2 ) ; } } }

************

************
tgt: void method_1 ( int var_1 ) { if ( ( var_2 ) != ( var_3 ) ) { return ; } var_4 = method_2 ( var_1 ) ; if ( ( var_4 ) == null ) { return ; } var_4 . method_4 ( var_6 . method_3 ( ) ) ; var_4 . method_5 ( new type_1 ( var_7 ) ) ; var_9 . remove ( 1 ) ; var_9 . add ( var_4 , null , 1 ) ; var_8 . method_6 ( false ) ; var_9 . method_6 ( true ) ; }
[0]: public void method_1 ( type_1 var_1, java.lang.boolean var_2 ) { if ( var_2 ) type_2. method_2 ( ) ; java.util.arraylist < type_2 > var_3 = new java.util.arraylist < type_2 > ( type_2. method_3 ( var_1 ) ) ; for ( type_3 i : var_4 ) { i. method_4 ( var_3, var_2 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 ) { var_3 . method_2 ( var_4 , string_1 , var_2 ) ; java.lang.string [ ] var_5 = var_2 . split ( string_2 , int_1 ) ; assert ( var_5 . length ) > 0 ; var_1 . method_3 ( method_4 ( var_5 [ 0 ] ) ) ; if ( ( var_5 . length ) == int_1 ) { var_1 . method_5 ( method_4 ( var_5 [ 1 ] ) ) ; } }
[0]: public static void method_1 ( type_1 var_1 ) { int index = var_1. method_2 ( ) ; if ( index == ( - 1 ) ) { index = 0 ; } var_1. method_3 ( ) ; if ( ( ++ index ) > ( ( var_1. method_4 ( ) ) - 1 ) ) { index = 0 ; } index = var_1. method_5 ( index ) ; var_1. method_6 ( index, index ) ; } }

************

************
tgt: public final type_1 method_1 ( ) { final boolean [ ] var_1 = new boolean [ var_2 . length ] ; for ( int i = 1 ; i < ( var_2 . length ) ; i ++ ) { var_1 [ ( i - 1 ) ] = var_2 [ i ] ; } var_1 [ ( ( var_2 . length ) - 1 ) ] = false ; return new type_1 ( var_1 ) ; }
[0]: public type_1 method_1 ( java.lang.string name ) { int var_1 ; while ( ( var_2 )!= null ) { var_2. method_1 ( name ) ; } for ( type_1 t : var_3 ) { var_1 = ( t. method_2 ( 0 ). gettype ( ). equals ( string_1 ) )? 0 : 1 ; if ( t. method_2 ( var_1 ). getname ( ). equals ( name ) ) return t ; } return null ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.lang.string var_1 = ( ( ( ( ( ( ( ( ( string_1 + ( this . var_2 ) ) + string_2 ) + ( var_3 ) ) + string_3 ) + string_4 ) + ( var_4 ) ) + string_3 ) + string_5 ) + ( var_4 ) ) + string_6 ; return list ( var_1 , ( - 1 ) , ( - 1 ) ) ; }
[0]: private type_1 [ ] method_1 ( ) { type_1 [ ] var_1 = new type_1 [ var_2. size ( ) ] ; for ( type_1 var_3 : var_4 ) { for ( int i = var_3. start ; i <= ( var_3. end ) ; i ++ ) { int var_5 = var_6 [ i ] ; var_1 [ var_5 ] = var_3 ; } } return var_1 ; }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 + ( this . var_2 . tostring ( ) ) ; java.util.iterator < type_1 > var_3 = method_2 ( ) . iterator ( ) ; while ( var_3 . method_3 ( ) ) { var_1 = ( var_1 + string_2 ) + ( var_3 . method_4 ( ) . tostring ( ) ) ; } var_1 = var_1 + string_3 ; return var_1 ; }
[0]: private java.lang.string method_1 ( final type_1 var_1 ) { java.lang.string var_2 = var_1. method_2 ( ). method_3 ( ). method_4 ( ) ; if ( var_2. method_5 ( string_1 ) ) { var_2 = var_2. substring ( 0, ( ( var_2. length ( ) ) - 1 ) ) ; } for ( type_2 var_3 : var_1. method_2 ( ). method_6 ( ) ) { var_2 += string_1 + ( var_3. method_7 ( ) ) ; } return var_2 ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { int i = var_2 . method_2 ( var_1 ) ; switch ( var_2 . method_2 ( var_1 ) ) { case var_3 : case var_4 : case var_5 : return var_6 ; case var_7 : case var_8 : return var_9 ; case var_10 : case var_11 : return var_12 ; default : throw new type_2 ( ( string_1 + var_1 ) ) ; } }
[0]: public boolean method_1 ( ) { method_2 ( ) ; int var_1 = var_2 ; type_1 x = this. var_3 ; while ( x!= ( var_4 ) ) { if ( ( method_3 ( x, new int [ int_1 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( var_5 ) < var_1 ) { return false ; } var_1 = var_5 ; x = var_6 ; } return true ; } }

************

************
tgt: public int method_1 ( int p ) { position = p ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( string_3 ) ; var_1 = var_2 . method_2 ( ) ; switch ( var_1 ) { case 1 : java.lang.system.out.println ( string_4 ) ; java.lang.system.out.println ( string_5 ) ; position = - 1 ; break ; case int_1 : java.lang.system.out.println ( string_6 ) ; position += var_3 ; break ; default : java.lang.system.out.println ( string_7 ) ; position = - 1 ; break ; } return position ; }
[0]: public void method_1 ( final android.content.intent intent, final java.lang.string var_1, final type_1 var_2, final type_2 var_3, final int var_4, final java.lang.string var_5, final type_3 var_6 ) { var_7. method_2 ( intent, new type_4 ( ) { public void method_3 ( final android.content.intent intent ) { var_8 super. method_1 ( intent, var_1, var_2, var_3, var_4, var_5, var_6 ) ; } } ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_5 . method_3 ( ) . method_5 ( ) ; type_2 var_1 = new type_3 ( ) ; java.util.list < type_4 > list = var_1 . method_2 ( ) ; type_5 . method_3 ( ) . method_4 ( list ) ; type_1 var_2 = new type_1 ( string_1 ) ; var_2 . method_6 ( string_2 , type_5 . method_3 ( ) . method_7 ( ) ) ; return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { try { try { var_2. method_2 ( var_1. method_3 ( ), string_1, string_2, var_1 ) ; } catch ( java.lang.exception var_3 ) { type_2. method_4 ( ( string_3 + var_3 ) ) ; } } catch ( java.lang.exception var_3 ) { type_2. method_4 ( ( string_4 + var_3 ) ) ; } }

************

************
tgt: public type_1 build ( type_2 < type_1 , type_3 > var_1 ) { return new type_4 ( name , var_2 , var_3 , var_4 , var_5 , var_6 , var_7 , var_8 , var_9 , var_10 , var_11 . method_1 ( new java.lang.string [ var_11 . size ( ) ] ) , var_12 . method_1 ( new type_1 [ var_12 . size ( ) ] ) , var_13 , var_14 , var_15 ) { protected void execute ( type_3 event ) { var_1 . method_2 ( this , event ) ; } } ; }
[0]: private boolean method_1 ( type_1 var_1 ) { type_2 target = var_1. method_2 ( ). method_3 ( ) ; type_3 var_2 = type_3. method_4 ( target ) ; if ( ( var_2. method_5 ( ( string_1 + ( var_3 ) ) ). length ( ) ) > 0 ) { var_4 = true ; } else { method_6 ( ) ; } return false ; }

************

************
tgt: public void method_1 ( int label ) { for ( java.util.map < java.util.list < type_1 > , java.lang.integer > var_1 : var_2 . values ( ) ) { synchronized ( var_1 ) { for ( java.util.list < type_1 > list : var_1 . method_2 ( ) ) { java.lang.integer i = var_1 . get ( list ) ; if ( ( i . intvalue ( ) ) == label ) { var_1 . remove ( list ) ; break ; } } } } var_3 . add ( label ) ; }
[0]: public void method_1 ( long var_1 ) { type_1 var_2 = var_3. method_2 ( ( ( int ) ( var_1 ) ) ) ; type_2 var_4 = new type_3 ( var_1, ( ( type_4. method_3 ( ) ) + ( int_1 * ( method_4 ( var_2. method_5 ( ) ) ) ) ) ) ; var_5. method_6 ( var_4 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.object key ) { int var_1 = method_2 ( key ) ; if ( ( var_2 [ var_1 ] ) == null ) { return false ; } else { type_1 var_3 = var_2 [ var_1 ] ; while ( var_3 != null ) { if ( var_4 . equals ( key ) ) { return true ; } var_3 = var_5 ; } return false ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( var_1. method_2 ( var_2 ) ) { type_2 list = var_1. method_3 ( var_2, var_3 ) ; for ( int i = 0 ; i < ( list. method_4 ( ) ) ; i ++ ) { var_4. add ( type_3. method_5 ( list. method_6 ( i ) ) ) ; } } }

************

************
tgt: public java.util.map method_1 ( ) { java.util.hashmap < java.lang.string , java.lang.object > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( string_1 , var_2 ) ; var_1 . put ( string_2 , var_3 ) ; if ( null != ( var_4 ) ) { var_1 . put ( string_3 , var_4 . method_1 ( ) ) ; } return var_1 ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.object var_2, int var_3, long key, java.lang.object var_4, java.lang.class c ) { if ( ( var_4!= null ) && (! ( c. method_2 ( var_4. getclass ( ) ) ) ) ) { var_4 = ( ( type_2 ) ( var_4 ) ). method_3 ( ) ; } var_1. method_4 ( var_2, key, var_4 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { try { if ( var_1 . method_2 ( var_4 ) ) { var_1 . method_3 ( var_4 ) ; } } finally { method_4 ( var_5 ) ; } try { if ( var_1 . method_2 ( var_2 ) ) { var_1 . method_3 ( var_2 ) ; } } finally { method_4 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = method_2 ( ). getint ( var_3 ) ; var_4 = new java.util.arraylist < > ( ) ; var_5 = new type_2 ( getactivity ( ), var_4 ) ; method_3 ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( this . method_2 ( ) ) { return ; } while ( ! ( this . var_1 . method_3 ( ) ) ) { method_7 ( ) ; } var_1 . method_4 ( ) ; type_1 var_2 = var_1 . method_5 ( ) ; if ( var_2 != null ) { method_6 ( var_2 ) ; } }
[0]: private void method_1 ( ) { var_1. method_2 ( new type_1 ( ) { public void method_3 ( type_2 var_2 ) { type_3 var_3 = new type_3 ( ) ; var_3. method_4 ( int_1, int_1 ) ; var_3. method_5 ( new type_4 ( var_4, string_1 ) ) ; var_3. method_6 ( true ) ; } } ) ; var_5. method_7 ( new type_5 ( ) { private boolean var_6 ; } ) ; } }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , type_1 var_2 ) { if ( var_1 . equals ( var_2 ) ) { return var_1 ; } if ( ( var_1 instanceof type_3 ) && ( var_2 instanceof type_3 ) ) { return method_1 ( ( ( type_3 ) ( var_1 ) ) , ( ( type_3 ) ( var_2 ) ) ) ; } return null ; }
[0]: public type_1 < type_2 < type_3, java.lang.object > > method_1 ( type_4 var_1, type_5 var_2, type_6 var_3, type_7 response ) { type_8. method_2 ( response, var_1. tostring ( ), var_3 ) ; type_8. method_3 ( response, var_3 ) ; return method_1 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , type_4 < type_5 , type_6 > var_4 , type_7 var_5 , boolean var_8 ) { this . var_1 = var_1 ; this . var_2 = var_2 ; this . var_4 = var_4 ; this . var_3 = var_3 ; this . var_7 = var_5 ; this . var_8 = var_8 ; this . var_9 = new type_8 ( ) ; this . var_1 . method_2 ( this ) ; method_3 ( ) ; }
[0]: private java.util.list < java.lang.integer > method_1 ( final java.util.list < type_1 > var_1 ) { java.util.list < java.lang.integer > var_2 = new java.util.arraylist ( var_1. size ( ) ) ; for ( type_1 var_3 : var_1 ) { var_2. add ( var_3. getcolor ( ). getvalue ( ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string name ) { var_2 = new type_2 ( var_3 , var_4 , this ) ; var_2 . method_2 ( new type_3 ( var_5 , var_5 , true , true , 1 , 1 ) ) ; var_7 . method_7 ( ) ; var_7 . method_8 ( var_1 . method_9 ( ) . var_8 ) ; var_2 . method_3 ( var_1 , name , string_1 ) ; var_2 . method_4 ( var_6 ) ; var_6 . method_5 ( ) ; var_3 . method_6 ( true ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_1 var_2 ) { type_2 min = ( ( var_3. compareto ( this. method_2 ( ) ) ) < 0 )? var_3 : this. method_2 ( ) ; return method_1 ( var_1. method_3 ( min ), var_2. method_3 ( min ), min ) ; }

************

************
tgt: private static void method_1 ( ) { java.util.collections.sort ( var_1 ) ; double var_2 = var_1 . get ( 0 ) . method_2 ( ) ; if ( var_2 > 0 ) { for ( type_1 var_3 : var_4 ) { var_3 . method_3 ( ( 1 - ( ( var_3 . method_2 ( ) ) / var_2 ) ) ) ; } } }
[0]: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) ; var_5 = ( ( android.widget.button ) ( method_2 ( var_6 ) ) ) ; var_7 = ( ( android.widget.button ) ( method_2 ( var_8 ) ) ) ; var_9 = ( ( android.widget.button ) ( method_2 ( var_10 ) ) ) ; var_11 = ( ( android.widget.button ) ( method_2 ( var_12 ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_1 . method_2 ( var_2 , var_3 ) ; if ( ( var_5 ) != null ) { var_1 . method_3 ( var_4 , var_5 . method_4 ( ) ) ; } if ( ( var_7 ) != null ) { var_1 . method_3 ( var_6 , var_7 . method_4 ( ) ) ; } }
[0]: public void method_1 ( ) { boolean [ ] var_1 = var_2. method_2 ( ) ; int var_3 = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { ++ var_3 ; if ( var_1 [ i ] ) { var_4 [ i ]. method_3 ( var_5 ) ; } else var_4 [ i ]. method_3 ( var_6 ) ; } var_3 = ( var_3 * int_2 ) / int_1 ; var_7. setvalue ( var_3 ) ; } }

************

************
tgt: public int method_1 ( ) { int result = ( ( var_1 ) != null ) ? var_1 . method_1 ( ) : 0 ; result = ( int_1 * result ) + ( type . method_1 ( ) ) ; result = ( int_1 * result ) + ( ( var_2 ) != null ? var_2 . method_1 ( ) : 0 ) ; return result ; }
[0]: public static int method_1 ( type_1 var_1 ) { int var_2 = 0 ; for ( int i = 1 ; i < int_1 ; i ++ ) { for ( int j = 0 ; j < int_2 ; j ++ ) { if ( ( var_3. get ( i ). get ( j ) ) >= 0 ) { var_2 += ( var_3. get ( i ). get ( j ) ) / int_3 ; } } } return var_2 ; }

************

************
tgt: public void method_1 ( float var_1 ) { var_2 . method_2 ( ) ; var_3 . method_3 ( var_2 ) ; var_2 . end ( ) ; if ( var_4 . method_4 ( var_5 ) ) { var_6 . method_6 ( new type_2 ( var_6 ) ) ; } }
[0]: protected java.lang.string method_1 ( int var_1 ) throws type_1 { type_2 select = new type_2 ( ) ; try { select. select ( var_2 ) ; select. method_2 ( var_3 class ) ; select. method_3 ( var_4 ) ; select. values ( var_1 ) ; type_3 var_5 = select. execute ( var_6 ) ; var_5. method_4 ( ) ; return var_5. method_5 ( 1 ) ; } catch ( type_4 var_7 ) { var_7. method_6 ( ) ; throw new type_1 ( string_1 ) ; } }

************

************
tgt: protected java.util.list method_1 ( ) { if ( ( method_2 ( ) . method_3 ( ) . equals ( var_1 ) ) || ( method_2 ( ) . method_3 ( ) . equals ( var_4 ) ) ) return var_2 . method_4 ( ) ; if ( method_2 ( ) . method_3 ( ) . equals ( var_3 ) ) return this . var_5 . method_5 ( ) . method_6 ( ) . method_7 ( ) ; return null ; }
[0]: public static void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_1. method_2 ( var_2, var_3 class ) ; var_1. method_2 ( var_2, var_4 class ) ; var_1. method_3 ( var_2, var_5 class ) ; var_1. method_2 ( var_2, var_6 class ) ; var_1. method_4 ( var_2, var_6 class ) ; var_1. method_2 ( var_2, var_7 class ) ; var_1. method_4 ( var_2, var_7 class ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_4 = new type_1 ( ) ; method_3 ( ) . method_4 ( ) . method_5 ( var_5 ) . replace ( var_6 , var_4 ) . method_6 ( null ) . commit ( ) ; var_7 . method_7 ( ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = string_1 ; for ( char var_3 : var_1. touppercase ( ). method_2 ( ) ) { int index = type_1. method_3 ( var_3 ) ; if ( index < 0 ) { var_2 += var_3 ; continue ; } int i = ( index - ( info. method_4 ( ) ) ) % int_1 ; var_2 += type_1. method_5 ( i ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( 1 , 1 , 1 , 1 ) ; var_1 . method_3 ( var_2 ) ; var_3 . method_4 ( ) ; var_3 . method_5 ( ) ; if ( ( ( var_4 ) < ( type_1 . method_6 ( ) ) ) && ( ( var_4 ) != 0 ) ) { if ( ( var_5 ) != null ) { var_4 = 0 ; var_5 . method_7 ( ) ; } } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; if ( ( args.length ) == int_1 ) { java.lang.string var_2 = args [ 0 ] ; java.lang.string var_3 = args [ 1 ] ; } else if ( ( args.length ) == 0 ) { type_2. method_1 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return ; } switch ( var_3 ) { case var_4 : break ; case var_5 : var_1 . method_3 ( var_2 . x , var_2 . y , var_6 , var_7 ) ; break ; } }
[0]: public final void method_1 ( ) { boolean var_1 = false ; final int var_2 = var_3. size ( ) ; for ( int var_4 = 0 ; var_2 < var_4 ; ++ var_4 ) { final type_1 var_5 = var_3. get ( var_4 ) ; if ( var_1 || ( var_6 ) ) { var_7 = false ; } else { var_7 = true ; var_1 = true ; } } } }

************

************
tgt: public type_1 get ( long key ) { int var_1 = method_1 ( key ) ; int var_2 = method_2 ( key ) ; if ( ( ( var_3 [ var_1 ] ) != null ) && ( ( var_3 [ var_1 ] . method_3 ( ) ) == key ) ) { return var_3 [ var_1 ] . getvalue ( ) ; } else { return var_3 [ var_2 ] . getvalue ( ) ; } }
[0]: public type_1 set ( int var_1, int var_2, int [ ] var_3, type_1 var_4 ) { int var_5 = var_2 - var_1 ; int var_6 = var_3. length ; for ( int i = 0 ; i < var_5 ; i ++ ) for ( int j = 0 ; j < var_6 ; j ++ ) { data [ ( var_1 + i ) ] [ var_3 [ j ] ] = var_4. data [ i ] [ j ] ; } return this ; }

************

************
tgt: public int method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = method_2 ( var_1 ) ; int id = - 1 ; try { id = var_2 . getint ( 1 ) ; } catch ( type_2 var_3 ) { var_3 . method_3 ( ) ; } return id ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( getactivity ( ) ) { protected int method_2 ( type_2 state ) { return int_1 ; } } ; var_2. method_3 ( var_1 ) ; var_3. method_4 ( this ) ; var_2. method_5 ( var_3 ) ; var_2. method_6 ( new type_3 ( ) ) ; }

************

************
tgt: public static int method_1 ( java.util.linkedlist < type_1 > var_1 , byte value ) { int i = 0 ; while ( ( i < ( var_1 . size ( ) ) ) && ( ( var_1 . get ( i ) ) != value ) ) i ++ ; if ( i < ( var_1 . size ( ) ) ) return i ; return - 1 ; }
[0]: public static boolean method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_2. get ( i ). method_2 ( var_1, new java.util.hashmap < > ( ), true ) ) { var_3. method_3 ( ( ( string_1 + i ) + 1 ) ) ; return true ; } } return false ; }

************

************
tgt: private void method_1 ( int var_1 , int var_2 ) { int var_3 = 0 ; int var_4 = ( var_1 * var_2 ) + 1 ; int var_5 = var_4 ; while ( var_3 < ( var_2 - 1 ) ) { method_2 ( var_5 , ( var_5 + 1 ) , ( var_5 + var_2 ) ) ; method_2 ( ( var_5 + 1 ) , ( ( var_5 + var_2 ) + 1 ) , ( var_5 + var_2 ) ) ; var_5 ++ ; var_3 ++ ; } }
[0]: public void method_1 ( int var_1, int source, int var_2, int var_3 ) throws type_1, type_2 { if ( var_1 == 1 ) { this. method_2 ( source, var_2 ) ; } else { this. method_1 ( ( var_1 - 1 ), source, var_2, var_3 ) ; this. method_2 ( source, var_2 ) ; this. method_1 ( ( var_1 - 1 ), var_3, source, var_2 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] name = type_1 . values ( ) ; for ( type_1 var_2 : name ) { if ( var_1 . contains ( var_2 . getvalue ( ) ) ) { return var_2 ; } } return var_3 ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1, java.util.list < type_1 > var_2 ) { var_1. method_2 ( var_3 ) ; var_2. method_2 ( var_3 ) ; assertequals ( var_1. size ( ), var_2. size ( ) ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { type_1 var_4 = var_1. get ( i ) ; type_1 var_5 = var_2. get ( i ) ; method_3 ( var_4, var_5 ) ; } }

************

************
tgt: public java.lang.object method_1 ( ) { if ( null != ( var_1 ) ) { return var_1 ; } try { long id = ( ( java.lang.long ) ( super . method_1 ( ) ) ) ; var_1 = type_1 . method_3 ( ) . method_4 ( ) . method_5 ( id ) ; return var_1 ; } catch ( type_2 | type_3 var_2 ) { var_3 . method_6 ( var_4 , string_1 , var_2 ) ; return null ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( var_3 ) ; var_2. open ( ) ; type_3 var_4 = var_2. method_2 ( ) ; if ( var_4!= null ) { method_3 ( var_4 ) ; } }

************

************
tgt: public java.util.map method_1 ( ) { if ( ( this . arg ) == null ) { return new java.util.hashmap ( ) ; } type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1 ) ; type_3 < java.util.hashmap < java.lang.string , java.lang.object > > var_3 = new type_3 < java.util.hashmap < java.lang.string , java.lang.object > > ( ) { } ; try { return var_2 . method_2 ( method_3 ( ) , var_3 ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } return null ; }
[0]: public type_1 put ( type_2 key, type_1 value ) { key = type_3. method_1 ( key ) ; value = type_3. method_1 ( value ) ; type_4 < type_1 > var_1 = var_2. put ( key, new type_4 < type_1 > ( value, var_3 ) ) ; if ( var_1 == null ) { return null ; } method_2 ( key, var_1. getvalue ( ), var_4 ) ; return var_1. getvalue ( ) ; }

************

************
tgt: private double method_1 ( double var_1 , double var_2 , double a ) { double var_3 = method_2 ( ( a * ( type_1 . method_3 ( type_1 . method_4 ( var_1 ) ) ) ) , int_1 ) ; double var_4 = method_2 ( ( a * ( type_1 . method_3 ( type_1 . method_4 ( var_2 ) ) ) ) , int_1 ) ; return var_3 + var_4 ; }
[0]: public void method_1 ( ) { try { if ( var_1. method_2 ( ) ) { if ( ( ( var_2 ) > 0 ) && ( ( var_3 ) > 0 ) ) var_1. method_3 ( var_2, var_3 ) ; var_1. method_4 ( false ) ; } else { var_2 = method_5 ( ) ; var_3 = method_6 ( ) ; var_1. method_4 ( true ) ; } method_7 ( ) ; } catch ( final java.lang.exception var_4 ) { var_4. method_8 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , ( string_1 + ( var_2 ) ) ) ; method_3 ( ) ; if ( ( state ) != ( var_3 ) ) { final long var_4 = type_2 . method_4 ( ) ; method_5 ( ) ; final int var_5 = ( ( int ) ( type_3 . method_6 ( ( ( type_2 . method_4 ( ) ) - var_4 ) ) ) ) ; var_6 . method_7 ( var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( ( ( var_3 ) < 0 ) || ( ( var_3 ) >= ( var_4 ) ) ) { throw new type_3 ( string_1 ) ; } try { var_5. method_2 ( ( ( long ) ( ( var_3 ) * ( var_6 ) ) ) ) ; var_5. method_3 ( var_2. getdata ( ) ) ; ( var_7 ) ++ ; } catch ( java.io.ioexception var_8 ) { type_4. method_4 ( var_8 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 id ) { if ( id . gettype ( ) . method_2 ( ) ) { type_2 < ? > var_1 = method_3 ( id ) ; if ( ( var_1 . method_4 ( ) ) && ( method_5 ( id , method_3 ( id ) ) ) ) { return false ; } } if ( ( var_2 ) == id ) { var_2 = null ; } var_4 . method_6 ( id ) ; var_3 . remove ( id ) ; return true ; }
[0]: private boolean method_1 ( type_1 var_1 ) { boolean var_2 = var_3. method_2 ( ) ; if ( var_2 ) { return true ; } long var_4 = var_1. method_3 ( ) ; type_2 var_5 = ( ( type_2 ) ( var_6. get ( java.lang.long. method_4 ( var_4 ) ) ) ) ; if ( var_5 == null ) { return false ; } var_5. method_5 ( var_1, true ) ; return true ; }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 , int var_2 , int var_3 ) throws java.io.ioexception { try { if ( ! ( ( ( var_1 . method_2 ( ) ) <= var_2 ) && ( ( var_1 . method_3 ( ) ) <= var_3 ) ) ) { type_1 var_4 = type_2 . method_4 ( var_1 , var_2 , var_3 , var_5 ) ; return var_4 ; } else { return var_1 ; } } catch ( java.lang.throwable var_6 ) { throw new java.io.ioexception ( var_6 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { for ( int i = 0 ; i < ( var_4. size ( ) ) ; i ++ ) { type_4 var_5 = var_4. get ( i ) ; final type_5 value = var_6. get ( i ) ; final type_6 var_7 = var_8. get ( i ) ; var_1. method_2 ( type_7. method_3 ( var_1, var_5, var_7, value ) ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { if ( ( ( var_2 . get ( ) ) == null ) || ( ( var_2 . get ( ) . var_3 . size ( ) ) == 0 ) ) return var_4 . method_2 ( ) . method_3 ( var_1 ) ; return var_2 . get ( ) . method_4 ( ) . get ( var_1 , true , false ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( ( ( ( ( ( var_2. method_3 ( ) ) + ( var_3. method_3 ( ) ) ) + ( var_4. method_3 ( ) ) ) + ( var_5. method_3 ( ) ) ) + ( var_6. method_3 ( ) ) ) ) ; }

************

************
tgt: private type_1 method_1 ( type_1 node ) { if ( ( node != null ) && ( node != ( var_1 . null ) ) ) { if ( node == var_2 ) { return null ; } node = var_3 . get ( node ) ; return node ; } return null ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; type_1 state ; while ( true ) { state = step ( ) ; if ( state == null ) { break ; } var_1. add ( state ) ; } for ( type_2 var_2 : var_3 ) { var_2. method_2 ( ) ; } return var_1 ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ( var_2 ? var_3 : var_4 ) ) ; var_5 . method_4 ( string_1 ) ; var_5 . method_3 ( true ) ; var_6 . method_2 ( var_7 ) ; var_8 . method_2 ( var_7 ) ; var_9 . method_2 ( var_7 ) ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { java.util.arraylist < java.lang.string > var_2 = method_2 ( var_1 ) ; int var_3 = method_3 ( method_4 ( var_2 ) ) ; java.lang.string date = method_5 ( var_2 ) ; if ( method_6 ( var_3 ) ) { return false ; } var_4. method_1 ( var_3, date ) ; return true ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { switch ( var_1 ) { case string_1 : var_2 . settext ( var_3 [ counter ] ) ; java.lang.system.out.println ( var_1 ) ; break ; case string_2 : break ; case string_3 : break ; case string_4 : show ( counter ) ; break ; case string_5 : show ( counter ) ; counter += 1 ; var_2 . settext ( var_4 [ counter ] ) ; var_5 . settext ( var_6 [ counter ] ) ; break ; } }
[0]: public static type_1 method_1 ( java.lang.string expr ) throws type_2 { type_3 var_1 = new type_3 ( ) ; type_1 var_2 ; try { var_2 = var_1. method_2 ( expr ) ; } catch ( type_4 var_3 ) { throw new type_2 ( type_5. method_3 ( ), var_3, var_3. method_4 ( ) ) ; } return type_6. method_5 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( ( var_1 != null ) && ( ! ( var_2 ) ) ) && ( ( var_4 ) != null ) ) { if ( var_1 . getboolean ( var_3 ) ) { var_4 . show ( ) ; } else { var_4 . method_2 ( ) ; } var_5 = var_1 . getboolean ( var_6 ) ; } }
[0]: public void method_1 ( ) { type_1. assertthat ( type_2. method_2 ( ( ( var_1 ) - ( ( ( 1 * int_1 ) * int_2 ) * int_2 ) ), var_1, false, getcontext ( ) ), type_3. method_3 ( method_4 ( var_3, 1 ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 , int var_4 ) { var_5 . add ( ( ( ( ( ( ( ( string_2 + ( var_4 < int_1 ? char_1 : string_2 ) ) + var_4 ) + string_1 ) + ( var_3 < int_1 ? char_1 : string_2 ) ) + var_3 ) + string_1 ) + var_2 ) ) ; method_2 ( int_2 ) ; }
[0]: public void method_1 ( long var_1, boolean var_2 ) { type_1. method_2 ( string_1, ( string_2 + var_1 ) ) ; if ( var_2 ) { method_1 ( ( ( var_3 ) + string_3 ), new java.lang.string [ ] { string_4 + var_1 } ) ; } else { method_1 ( ( ( ( ( var_3 ) + string_5 ) + ( var_4 ) ) + string_3 ), new java.lang.string [ ] { string_4 + var_1, string_6 } ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( ( string_1 + ( var_1 . getid ( ) ) ) ) ; try { type_1 var_2 = type_2 . method_2 ( var_1 , var_3 ) ; var_1 . method_3 ( var_2 ) ; var_2 . method_4 ( var_1 ) ; java.lang.system.out.println ( string_2 ) ; } catch ( java.lang.exception var_4 ) { try { type_4 . method_5 ( var_1 . getid ( ) , var_5 , var_4 . method_6 ( ) ) ; } catch ( java.lang.exception var_6 ) { var_6 . method_7 ( ) ; } } }
[0]: public static short method_1 ( java.lang.string var_1 ) { for ( short var_2 = 1 ; var_2 < int_1 ; var_2 ++ ) { for ( type_1 var_3 : var_4. method_2 ( ) ) { if ( ( var_3. method_3 ( ) ) == var_2 ) { if ( var_3. method_4 ( ). equals ( var_1 ) ) { if (! ( var_3. method_5 ( ) ) ) { return var_2 ; } } } } } return int_2 ; } }

************

************
tgt: public boolean method_1 ( long var_1 ) { if ( ( var_1 < 1 ) || ( var_1 > ( var_2 ) ) ) { return false ; } else if ( ( var_3 ) >= ( var_4 ) ) { return false ; } else { ++ ( var_3 ) ; var_5 . put ( var_6 , var_1 ) ; ++ ( var_6 ) ; return true ; } }
[0]: private void method_1 ( final java.lang.string var_1, final type_1 var_2 ) { final android.content.intent intent = new android.content.intent ( var_1 ) ; if ( var_2 == null ) { method_2 ( intent ) ; return ; } type_2. method_3 ( var_3, var_2. method_4 ( 0 ) ) ; if ( type_3. equals ( var_2. method_5 ( ) ) ) { java.lang.string value = var_2. method_4 ( 0 ) ; intent. method_6 ( var_4, value ) ; method_2 ( intent ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.string var_2 , int var_3 ) { synchronized ( var_4 ) { if ( ! ( var_5 . method_2 ( var_2 ) ) ) var_5 . put ( var_2 , new java.util.arraylist < type_1 > ( ) ) ; var_5 . get ( var_2 ) . add ( var_3 , var_1 ) ; var_6 . put ( var_1 , var_2 ) ; } }
[0]: private static void method_1 ( final type_1 var_1, final java.lang.string msg, final int length ) { type_2 var_2 = new type_2 ( ) { public void method_2 ( ) { type_3. method_3 ( var_1, msg, length ). show ( ) ; } } ; if ( type_4. method_4 ( ) ) { var_2. method_2 ( ) ; } else { type_4. method_5 ( var_2 ) ; } }

************

************
tgt: private type_1 method_1 ( ) { type_2 var_1 = type_2 . method_2 ( var_2 . method_3 ( ) , var_2 . method_4 ( ) ) ; type_1 var_3 ; if ( ( var_3 = var_4 . method_5 ( var_1 ) ) == null ) { method_6 ( type_3 . method_7 ( var_2 , var_5 ) ) ; type_4 . method_8 ( ) ; return null ; } if ( ! ( var_3 . method_9 ( ) ) ) { type_4 . method_10 ( ) ; var_3 . method_11 ( ) ; } return var_3 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.util.list < type_1 > var_2 ) { var_3 = string_1 ; for ( type_1 var_4 : var_2 ) { if ( var_1. equals ( var_4. method_2 ( ) ) ) { var_3 = string_2 ; } else if ( var_1. equals ( var_4. method_3 ( ) ) ) { var_3 = string_3 ; } else var_3 = string_1 ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_2 ( ) ; } catch ( type_1 var_2 ) { var_2 . method_3 ( ) ; } java.lang.object [ ] var_3 = var_4 . method_4 ( ) ; var_4 . method_5 ( ) ; method_6 ( var_5 , var_3 , ( ( time ) / ( int_1 * int_2 ) ) , string_1 ) ; var_6 = new type_2 ( int_2 ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1, type_3 var_2 ) { java.util.list < type_1 > result = type_4. method_2 ( ) ; for ( int i = 1 ; i < int_1 ; ++ i ) { result. add ( new type_1 ( i ) ) ; } return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { var_1 . method_2 ( ) . add ( 0 , string_1 ) ; var_1 . method_2 ( ) . add ( 1 , string_2 ) ; var_1 . method_3 ( ) . put ( string_3 , var_5 . method_4 ( ) ) ; }
[0]: public boolean equals ( java.lang.object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof type_1 ) { type_1 node = ( ( type_1 ) ( obj ) ) ; return ( var_1 ) == ( node. method_1 ( ) ) ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = ( new java.util.date ( ) . gettime ( ) ) / int_1 ; if ( ( ( var_2 ) - ( var_3 ) ) > ( var_4 ) ) { if ( ( var_5 ) != null ) { var_5 . method_2 ( var_6 , var_7 ) ; var_3 = var_2 ; } } }
[0]: private java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( type_1. method_2 ( var_1 ) ) return null ; if ( type_1. method_2 ( var_2 ) ) return var_1 ; if ( var_1. equals ( var_2 ) ) { return null ; } else { return var_1 ; } }

************

************
tgt: public void method_1 ( int var_1 , type_1 [ ] var_2 , type_2 response ) { type_3 var_3 = new type_3 ( response ) ; var_3 . method_2 ( ) ; var_3 . method_3 ( ) . method_2 ( ) ; if ( ( listener ) != null ) { listener . method_4 ( var_3 . getid ( ) ) ; listener = null ; } }
[0]: public void method_1 ( ) { while (! ( var_1 ) ) { try { java.lang.object response = var_2. method_2 ( ) ; if ( method_3 ( ( ( type_1 ) ( response ) ) ) ) { } else { try { var_3. put ( ( ( type_1 ) ( response ) ) ) ; } catch ( type_2 var_4 ) { var_4. method_4 ( ) ; } } } catch ( java.io.ioexception | java.lang.classnotfoundexception var_5 ) { java.lang.system.out.println ( string_2 ) ; } } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { android.content.intent var_4 = new android.content.intent ( var_5 , var_6 class ) ; var_4 . method_2 ( var_7 , var_3 . get ( position ) . method_3 ( ) . replaceall ( string_1 , string_2 ) ) ; method_4 ( var_4 ) ; }
[0]: public void method_1 ( type_1 position ) { if ( ( var_1 ) == null ) { this. position = position ; } this. position = position. method_2 ( var_1. method_3 ( ) ). method_4 ( ( - ( var_1. method_5 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; this . method_2 ( var_2 ) ; for ( type_3 var_3 : var_4 ) { if ( var_3 != null ) { var_3 . method_1 ( var_1 ) ; } } this . method_3 ( var_2 ) ; }
[0]: public int method_1 ( int i ) { method_2 ( ) ; int var_1 = i ; for ( int j = 0 ; j < ( ( type_1. method_3 ( var_2. method_4 ( ) ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue ; var_1 += i * ( method_5 ( j ) ) ; } return ( type_1. offset ( method_6 ( ) ) ) + var_1 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; float sum = 0.0f ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { float f = var_1 . method_1 ( ) ; if ( f <= 0 ) { continue ; } sum += f ; } sum /= var_3 ; java.lang.system.out.println ( ( string_1 + ( type_1 . method_2 ( sum ) ) ) ) ; }
[0]: public void method_1 ( ) { try { type_1 var_1 = type_2. method_2 ( ) ; java.net.url var_2 = type_3. method_3 ( var_3 ) ; java.io.file var_4 = new java.io.file ( var_2. method_4 ( ) ) ; type_4 var_5 = type_2. method_5 ( var_4 ) ; var_1. open ( var_5 ) ; var_1. start ( ) ; var_1. method_6 ( var_6 ) ; } catch ( java.lang.exception var_7 ) { java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: public static type_1 getclass ( java.lang.string classname ) { java.util.list < type_1 > var_1 = var_2 . method_1 ( ) . method_2 ( ) ; for ( type_1 var_3 : var_1 ) { if ( var_4 . equals ( classname ) ) { return var_3 ; } } return null ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; if ( var_1 == ( var_3 ) ) { if ( data!= null ) { final int var_4 = ( data. method_2 ( ) ) & ( ( var_5 ) | ( var_6 ) ) ; method_3 ( ). method_4 ( data. getdata ( ), var_4 ) ; var_7. settext ( data. method_5 ( ) ) ; } } }

************

************
tgt: private void method_1 ( type_1 < type_2 > var_1 ) { type_1 < type_4 > var_2 = method_2 ( var_1 . method_3 ( 0 ) ) ; if ( method_4 ( var_2 . gettype ( ) , var_1 ) ) { out . method_5 ( var_2 . method_6 ( ) . getname ( ) ) ; } else { out . method_5 ( ( ( string_1 + ( var_2 . method_6 ( ) . getname ( ) ) ) + string_2 ) ) ; } }
[0]: public void method_1 ( java.lang.string name, java.lang.string var_1, int var_2 ) { try { type_1 c = new type_1 ( ) ; c = var_3. get ( var_1 ) ; c. name = name ; var_4 = var_2 ; var_5. put ( name, c ) ; } catch ( java.lang.exception var_6 ) { java.lang.system.out.println ( ( string_1 + name ) ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 , type_2 var_2 ) { java.util.map < java.lang.string , type_1 > var_3 = new java.util.hashmap < java.lang.string , type_1 > ( ) ; try { method_2 ( ) . execute ( var_1 , var_2 , var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_3 ( ) ; } return new java.util.arraylist < type_1 > ( var_3 . values ( ) ) ; }
[0]: public void method_1 ( ) { type_1 <?,? > var_1 = method_2 ( string_1 ) ; type_2. assertthat ( method_3 ( var_1 ). size ( ), type_3. method_4 ( int_1 ) ) ; type_4 var_2 = method_5 ( string_2, string_1, var_1 ) ; method_6 ( var_2 ) ; method_7 ( ) ; method_8 ( var_3 ) ; method_9 ( var_2 ) ; method_7 ( ) ; type_2. assertthat ( var_4. method_10 ( ), method_11 ( not ( method_12 ( string_2 ) ) ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_1 . method_4 ( string_2 , query ) ; if ( ( var_4 . method_5 ( ) ) != 0 ) { var_5 = var_4 . getdata ( ) ; var_1 . method_6 ( var_6 , var_5 ) ; } }
[0]: private void method_1 ( final type_1 var_1 ) { if ( method_2 ( var_2 ) ) { final type_2 var_3 = method_3 ( ) ; type_3 var_4 = new type_3 ( ) ; var_4. method_4 ( null, var_2, var_5, null ) ; var_4. show ( var_3, var_6 ) ; } }

************

************
tgt: public static float method_1 ( ) { float var_1 = 0.0f ; float sum = 1.0f ; int n = 1 ; while ( var_1 < sum ) { var_1 = sum ; sum += 1.0f / n ; n += 1 ; if ( ( n % int_1 ) == 0 ) { java.lang.system.out.println ( ( ( ( string_1 + n ) + string_2 ) + sum ) ) ; } } java.lang.system.out.println ( ( ( ( string_1 + n ) + string_2 ) + sum ) ) ; return sum ; }
[0]: public static void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = var_2. method_2 ( ) ; switch ( var_1 ) { case string_1 : type_1. method_3 ( ) ; break ; case string_2 : type_1. method_4 ( ) ; break ; case string_3 : type_1. method_5 ( ) ; break ; case string_4 : type_1. method_6 ( ) ; break ; case string_5 : type_1. method_7 ( ) ; default : type_1. method_7 ( ) ; } }

************

************
tgt: private void method_1 ( ) { method_3 ( ) ; final int var_1 = int_1 ; if ( ( ( var_2 ) != null ) && ( ( var_2 . method_2 ( ) ) == ( var_3 ) ) ) { } else { var_2 = new java.lang.thread ( ) { public void method_4 ( ) { try { var_2 . method_5 ( var_1 ) ; } catch ( type_1 var_4 ) { java.lang.system.out.println ( ( string_1 + var_4 ) ) ; } } } ; var_2 . start ( ) ; } }
[0]: public void update ( int x, int y, double var_1, java.util.arraylist < type_1 > var_2, java.util.arraylist < type_2 > var_3 ) { if ( ( var_4 ) <= 0 ) { var_5 = true ; } int var_6 = this. x ; int var_7 = this. y ; this. x += x ; this. y += y ; this. var_1 += var_1 ; method_1 ( var_6, var_7, var_3 ) ; method_2 ( var_2 ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) throws type_3 { int var_2 = var_1 . getint ( "id" ) ; java.lang.string var_3 = var_1 . getstring ( string_1 ) ; java.lang.string var_4 = var_1 . getstring ( string_2 ) ; java.lang.string var_5 = var_1 . method_2 ( string_3 ) . getstring ( "type" ) ; java.lang.string var_6 = var_1 . method_2 ( string_3 ) . getstring ( string_4 ) ; return new type_1 ( var_2 , var_3 , var_4 , var_5 , var_6 ) ; }
[0]: public void method_1 ( int var_1 ) { if ( ( ( ( ( var_2 ) + ( var_3. get ( var_1 ). var_4. size ( ) ) ) - ( var_3. get ( var_1 ). var_5. size ( ) ) ) <= 0 ) || ( ( ( var_6. size ( ) ) + 1 ) == 1 ) ) { method_2 ( var_1 ) ; } }

************

************
tgt: void method_1 ( ) throws type_1 { final type_2 var_1 ; synchronized ( var_2 ) { var_3 = var_4 . method_1 ( var_5 , var_6 ) ; var_1 = var_3 ; } var_1 . method_2 ( ) ; synchronized ( var_2 ) { while ( ( ( var_7 ) == null ) && ( var_1 . method_3 ( ) . method_4 ( ) ) ) { var_2 . method_6 ( ) ; } } }
[0]: public type_1 < java.lang.integer > method_1 ( ) { var_1 = var_2. method_2 ( ) ; type_1 < java.lang.integer > var_3 = new type_1 < > ( ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { java.lang.integer [ ] var_4 = var_2. method_3 ( var_1 [ i ] ) ; if ( ( var_4 [ 0 ] ) == null ) { var_3. add ( var_1 [ i ] ) ; } } return var_3 ; }

************

************
tgt: private void method_1 ( ) throws type_1 , type_2 { java.lang.class < ? extends type_3 > var_1 = method_2 ( ) . method_3 ( ) ; type_4 var_3 = var_1 . method_4 ( ) ; type_5 var_4 = new type_5 ( ) ; var_4 . method_5 ( string_1 , method_6 ( ) . method_7 ( method_2 ( ) ) ) ; var_3 . method_8 ( var_4 ) ; type_6 var_5 = var_6 . method_9 ( ) ; var_5 . replace ( var_7 , var_3 ) ; var_5 . commit ( ) ; }
[0]: public static < type_1, type_2 > type_3 < type_2 > method_1 ( java.lang.string var_1, type_1... var_2 ) { type_4. method_2 ( var_1, string_1 ) ; type_4. method_3 ( var_2, string_2 ) ; return type_5. method_1 ( var_1, type_6. method_4 ( var_2 ) ) ; }

************

************
tgt: protected void method_1 ( java.util.arraylist < type_1 > var_1 ) { super . method_1 ( var_1 ) ; var_2 . method_2 ( ) ; var_3 = var_1 ; if ( var_1 . isempty ( ) ) { method_3 ( string_1 ) ; method_4 ( ) ; } else { method_6 ( ) ; } }
[0]: public static final java.lang.string method_1 ( type_1 var_1, java.lang.string key, java.lang.string var_2 ) { if ( var_1 == null ) { return null ; } if ( var_3 ) { var_4. put ( key, var_2 ) ; } return var_1. method_2 ( key, var_2 ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_5 ( ) ) { case var_2 : method_6 ( ) ; return true ; case var_3 : method_7 ( ) ; return true ; case var_4 : method_8 ( var_5 ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { for ( type_1 c : var_1 ) if ( c. method_2 ( ) ) { type_2. method_3 ( null, ( ( ( ( ( string_1 + ( c. method_4 ( ) ) ) + string_2 ) + ( c. method_4 ( ) ) ) + string_3 ) + ( c. method_5 ( ) ) ) ) ; } }

************

************
tgt: public type_1 method_1 ( int i ) { if ( i >= ( var_1 . length ) ) return var_2 ; if ( ! ( var_1 [ i ] . isempty ( ) ) ) { type_1 var_3 = var_1 [ i ] ; var_1 [ i ] = var_2 ; return var_3 ; } return var_2 ; }
[0]: private int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1. method_2 ( ) ) > ( var_2. method_2 ( ) ) ) return 1 ; if ( ( var_1. method_2 ( ) ) < ( var_2. method_2 ( ) ) ) return - 1 ; if ( ( var_1. method_2 ( ) ) == ( var_2. method_2 ( ) ) ) return 0 ; throw new type_2 ( string_1 ) ; }

************

************
tgt: public int handle ( java.io.inputstream var_1 , type_1 var_2 ) throws java.io.ioexception { type_2 var_3 = type_2 . method_1 ( var_1 , var_4 ) ; type_3 var_5 = null ; try { var_3 . method_2 ( ) ; var_5 = var_3 . method_3 ( ) ; } catch ( type_4 var_6 ) { method_4 ( var_2 , method_5 ( string_1 , string_2 , ( - int_1 ) , string_3 , null ) ) ; return - int_1 ; } return method_6 ( var_5 , var_2 ) ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + string_2 ) + ( id ) ) + string_3 ) + ( name ) ) + char_1 ) + string_4 ) + ( type_1. tostring ( var_1 ) ) ) + char_2 ) + ( var_3 ) ) + char_2 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; var_3 . method_1 ( var_1 ) ; method_4 ( ) ; var_4 = new type_3 ( this , var_5 ) ; var_4 . method_6 ( ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( var_2 ) ) { var_1. method_3 ( var_2 ) ; } else if ( ( var_3. size ( ) ) > 0 ) { var_4 = false ; var_5. method_4 ( var_3. method_5 ( ). intvalue ( ) ) ; var_4 = true ; } else if ( var_3. method_6 ( ) ) { super. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( int p , int var_1 ) { int var_2 = method_2 ( p ) ; int var_3 = method_2 ( var_1 ) ; if ( ( var_4 [ var_2 ] ) > ( var_4 [ var_3 ] ) ) { set [ var_3 ] = var_2 ; } else { set [ var_2 ] = var_3 ; if ( ( var_4 [ var_2 ] ) == ( var_4 [ var_3 ] ) ) { ( var_4 [ var_3 ] ) ++ ; } } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_2 ( ). method_2 ( ) ; type_3 f = var_1. method_3 ( var_2 ) ; type_4. method_4 ( var_1, var_3 ) ; type_3 var_4 = var_1. method_3 ( var_5 ) ; type_5. assertequals ( var_2, f. getname ( ) ) ; type_5. assertequals ( var_5, var_4. getname ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws type_1 { try { var_2 . info ( ( string_1 + var_1 ) ) ; if ( ( var_3 ) == null ) return ; var_4 . method_2 ( var_3 . get ( var_1 ) . method_3 ( ) ) ; var_5 . method_4 ( ) ; } catch ( java.lang.exception var_6 ) { throw new type_1 ( ( string_2 + ( var_6 . method_5 ( ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( var_2, string_1, var_3 ). show ( ) ; type_3 var_4 = getintent ( ). method_3 ( var_5 ) ; if ( var_4!= null ) { if ( var_4. getboolean ( var_6 ) ) { type_4. method_4 ( this, var_7 class ) ; } } else { type_4. method_4 ( this, var_8 class ) ; } method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 message ) { type_2 var_1 = message . get ( 0 ) ; type_3 var_2 = message . get ( 1 ) ; java.lang.string var_3 = message . get ( int_1 ) ; var_4 . add ( new type_4 ( var_1 , var_2 , var_3 ) ) ; method_2 ( ( ( ( ( string_1 + ( var_2 . getname ( ) ) ) + string_2 ) + var_3 ) + string_3 ) ) ; method_3 ( ) ; }
[0]: public type_1 add ( type_1 var_1 ) { if ( (! ( method_1 ( ) ) ) || (! ( var_1. method_1 ( ) ) ) ) { return new type_2 ( 0 ) ; } return new type_2 ( ( ( value ) + ( ( ( type_2 ) ( var_1 ) ). getvalue ( ) ) ) ) ; }

************

************
tgt: private static int method_1 ( ) { if ( ( var_1 . equals ( var_2 ) ) || ( ( var_6 ) != null ) ) { var_4 = var_1 ; return var_5 ; } else { var_3 = var_1 ; type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; return var_7 ; } }
[0]: public void method_1 ( java.util.arraylist < java.lang.integer > var_1, java.util.arraylist < java.lang.integer > var_2, int var_3 ) { var_4 = new type_1 ( var_1 ) ; var_5 = new type_1 ( var_2 ) ; var_6 = var_3 ; var_7 = new type_2 ( getcontext ( ), var_4, var_5, var_8, var_9, var_6 ) ; var_7. method_2 ( ) ; var_10 = new type_3 ( ) ; var_10. method_3 ( this, var_8, var_9, var_6, false ) ; method_4 ( ) ; }

************

************
tgt: public java.lang.void method_1 ( ) { var_1 . info ( string_1 , var_2 , var_3 , var_4 , var_5 , var_6 . method_2 ( ) ) ; var_7 . get ( var_6 . method_2 ( ) ) . method_3 ( var_2 , var_3 , var_4 , var_5 ) ; return null ; }
[0]: public int method_1 ( ) throws type_1 { if ( ( var_1. isempty ( ) ) && ( var_2. isempty ( ) ) ) return ( ( int ) ( var_3. method_2 ( ) ) ) ; return var_3. method_3 ( method_4 ( 0, var_1 ) ) ; }

************

************
tgt: public static final void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_3 . method_2 ( var_2 ) ; var_4 . method_2 ( var_2 ) ; var_5 . method_2 ( var_2 ) ; } }
[0]: private static void method_1 ( java.util.properties var_1 ) { var_1. method_2 ( ). method_3 ( ). method_4 ( ( key ) - > { java.lang.string var_2 = type_1. method_5 ( key ) ; if ( type_2. method_6 ( var_2 ) ) { var_1. method_7 ( key, var_2 ) ; } } ) ; } }

************

************
tgt: public static void method_1 ( type_1 response , int var_1 , java.lang.string message , type_2 var_2 , java.lang.string var_3 ) { type_3 var_4 = null ; if ( message != null ) { var_4 = new type_4 ( message . method_2 ( ) ) ; } type_5 . method_3 ( response , var_1 , var_3 , var_4 , var_5 , var_2 ) ; }
[0]: public int method_1 ( ) { var_1 = ( var_1 ) - ( var_2 ) ; if ( ( var_1 ) < 0 ) { var_3 = true ; int buf = var_1 ; var_1 = 0 ; return ( var_2 ) + ( buf + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }

************

************
tgt: public void method_1 ( type_1 msg ) { android.content.intent intent = new android.content.intent ( this , var_1 class ) ; intent . method_2 ( ( ( ( var_2 ) | ( var_3 ) ) | ( var_4 ) ) ) ; intent . method_3 ( var_5 , ( ( java.lang.string [ ] ) ( msg . obj ) ) ) ; method_4 ( intent ) ; }
[0]: public void start ( type_1 var_1 ) { type_2. method_1 ( var_2 ) ; method_2 ( ) ; var_3. start ( var_1 ) ; type_3. method_3 ( ). method_4 ( new type_4 ( type_5. method_3 ( ). method_5 ( ) ) ) ; var_4. method_6 ( var_5, var_6 ) ; }

************

************
tgt: private static < type_1 extends type_2 < ? super type_1 > > void method_1 ( type_1 [ ] var_1 , type_1 [ ] var_2 , int var_3 , int var_4 ) { final int var_5 = int_1 ; int var_6 = ( var_4 - var_3 ) + 1 ; if ( var_6 > var_5 ) type_3 . method_3 ( var_1 , var_2 , var_3 , var_4 ) ; else type_3 . method_2 ( var_1 , var_3 , var_4 ) ; }
[0]: public void method_1 ( byte [ ] data, type_1 var_1 ) { if ( var_1 == null ) { type_2. method_2 ( string_1, string_2 ) ; type_3. method_3 ( data ) ; var_2. add ( type_3 ) ; var_3. method_4 ( int_1 ) ; var_4 = new type_4 ( getactivity ( ), var_5, var_2 ) ; method_5 ( var_4 ) ; } else { } }

************

************
tgt: private boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 [ i ] . length ) ; j ++ ) { if ( ! ( var_1 [ i ] [ j ] [ 0 ] . equals ( var_2 [ i ] [ j ] [ 0 ] ) ) ) return false ; } } return true ; }
[0]: public static void method_1 ( java.lang.exception var_1, int var_2 ) { java.lang.string var_3 = var_1. tostring ( ) ; int i = 0 ; for ( type_1 var_4 : var_1. method_2 ( ) ) { if ( i == var_2 ) { break ; } var_3 += string_1 + ( var_4. tostring ( ) ) ; } var_1. method_3 ( ) ; type_2. method_4 ( string_2, var_3 ) ; var_1. method_3 ( ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = var_3 ; if ( var_1 != null ) { java.util.list < type_3 > var_4 = var_5 . method_2 ( type_4 . method_3 ( var_1 ) , new type_5 ( var_6 , string_1 ) ) ; for ( type_3 var_7 : var_4 ) { var_2 = var_2 . add ( method_4 ( var_7 ) ) ; } } return var_2 ; }
[0]: public int method_1 ( type_1 var_1, int x, int y, int var_2 ) { return ( var_1. method_2 ( x, y, var_2 ) )!= null? method_1 ( var_1. method_2 ( x, y, var_2 ). method_3 ( ), x, y, var_2 ) : null ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_3 . method_3 ( var_1 ) ; type_4 var_3 = new type_4 ( ) ; type_3 var_4 = type_5 . method_4 ( var_3 ) ; type_2 . method_5 ( var_1 ) . method_6 ( var_3 , var_4 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1, float var_2 ) { java.util.date date = new java.util.date ( ( ( type_3. method_2 ( ) ) + ( ( long ) ( ( var_3 ) * var_2 ) ) ) ) ; type_4. method_3 ( string_1, var_1. tostring ( ), date. tostring ( ) ) ; return type_5. method_1 ( var_1, date ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( string_1 , ( ( this . tostring ( ) ) + string_2 ) ) ; if ( ! ( type_2 . method_6 ( ) ) ) { type_3 . method_7 ( this , string_3 , var_1 ) . show ( ) ; android.content.intent intent = new android.content.intent ( this , var_2 class ) ; method_8 ( intent ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = source. method_2 ( ) ; while ( ( ( ( var_2 )!= null ) && ( ( var_2 )!= char_1 ) ) && ( ( var_2 )!= char_2 ) ) { source. method_3 ( ) ; var_1 = source. method_2 ( ) ; } }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = null ; if ( ( var_5 ) == 0 ) { var_4 = method_2 ( var_1 , var_2 , var_3 ) ; type_4 var_6 = ( ( type_4 ) ( var_4 . method_3 ( var_7 ) ) ) ; if ( ( ( var_8 ) != null ) && ( var_6 != null ) ) var_6 . settext ( var_8 ) ; } else { var_4 = var_1 . method_4 ( var_5 , var_2 , false ) ; } return var_4 ; }
[0]: public void method_1 ( int i, type_1 [ ] var_1, byte [ ] var_2 ) { var_3. method_2 ( type_2. method_3 ( var_2, 0, var_2. length ) ) ; ( var_4 [ 0 ] ) ++ ; if ( ( var_4 [ 0 ] ) == ( ( var_5. size ( ) ) / int_1 ) ) { var_6. method_4 ( new type_3 ( getcontext ( ), var_7, var_5 ) ) ; var_6. method_5 ( ) ; } }

************

************
tgt: protected void method_1 ( ) { type_1 . method_2 ( ) . method_3 ( string_1 , string_2 ) ; type_2 . i ( var_1 , string_3 ) ; if ( ( ( var_2 ) != null ) && ( var_2 . method_5 ( ) ) ) { method_4 ( ) ; var_2 . method_6 ( ) ; } super . method_1 ( ) ; }
[0]: public boolean method_1 ( ) throws java.lang.exception { method_2 ( ) ; method_2 ( string_1, string_2, string_3 ) ; method_2 ( 1, int_1, int_2, int_3 ) ; method_2 ( 1 ) ; method_3 ( null ) ; method_3 ( string_4, string_5, null ) ; method_3 ( null, null, null ) ; return true ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { synchronized ( var_3 ) { for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { type_1 var_4 = var_3 . get ( i ) ; if ( ( var_5 . equals ( var_1 ) ) && ( var_6 . equals ( var_2 ) ) ) { var_7 = false ; var_6 = string_1 ; return ; } } } }
[0]: public static void method_1 ( long id ) { type_1 var_1 = type_2. method_2 ( ) ; type_1 var_2 = type_2. method_2 ( ) ; var_1. put ( string_1, var_2 ) ; var_2. put ( string_1, string_2 ) ; var_1. put ( string_3, id ) ; type_3. method_3 ( var_1 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( ( ! ( var_2 . equals ( string_1 ) ) ) && ( ! ( var_2 . equals ( string_2 ) ) ) ) { java.lang.string value = ( ( string_3 + var_1 ) + string_4 ) + var_2 ; var_3 = ( ( var_3 ) + value ) + "\n" ; } }
[0]: public void method_1 ( ) { try { if (! ( var_1. method_2 ( string_1 ) ) ) { var_1. method_3 ( string_1 ) ; type_1 var_2 = new type_2 ( string_2, string_3 ) ; var_2. put ( string_4, string_3 ) ; var_2. put ( string_1, string_3 ) ; var_1. method_4 ( string_1 ). method_5 ( var_2 ) ; } } catch ( java.lang.exception var_3 ) { type_3. method_6 ( ( string_5 + ( var_3. method_7 ( ) ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { try { var_1 . method_2 ( ) ; } catch ( final java.io.ioexception var_2 ) { var_2 . method_3 ( ) ; var_3 . method_4 ( ( ( ( string_1 + ( var_1 ) ) + ( var_2 . method_5 ( ) ) ) + ( var_2 . tostring ( ) ) ) ) ; } finally { var_4 . remove ( var_1 ) ; } }
[0]: private boolean method_1 ( java.lang.string var_1 ) { final java.util.set < java.lang.string > var_2 = var_3. get ( var_1 ) ; if ( var_2!= null ) { for ( java.lang.string var_4 : var_2 ) { if ( method_2 ( var_4 ) ) { return ( ( method_3 ( ) )!= null ) || ( method_4 ( var_4 ) ) ; } } } return false ; } return true ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( this . method_2 ( ) . method_3 ( ) ) instanceof type_1 ) { int var_2 = ( ( type_1 ) ( this . method_2 ( ) . method_3 ( ) ) ) . method_4 ( ) ; this . method_5 ( type_1 . method_6 ( string_1 , ( var_2 + 1 ) ) ) ; } else { this . method_5 ( type_1 . method_6 ( string_1 , 0 ) ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3. gettext ( ) ; java.lang.string var_4 = new java.lang.string ( var_5. method_2 ( ) ) ; java.lang.string var_6 = new java.lang.string ( var_7. method_2 ( ) ) ; boolean var_8 = method_3 ( var_2, var_4, var_6 ) ; if (! var_8 ) { var_8 = method_3 ( var_2, var_4, var_6 ) ; } java.lang.string var_9 = ( var_2 + string_1 ) + var_4 ; method_4 ( var_9 ) ; }

************

************
tgt: private boolean method_1 ( int p ) { if ( p == int_1 ) return true ; if ( p < int_2 ) return false ; if ( ( p % int_1 ) == 0 ) return false ; for ( int i = int_2 ; ( i * i ) <= p ; i += int_1 ) if ( ( p % i ) == 0 ) return false ; return true ; }
[0]: public static type_1 method_1 ( byte [ ] data ) { int var_1 = type_2. method_2 ( data [ 0 ] ) ; int var_2 = type_2. method_2 ( data [ 1 ] ) ; byte [ ] var_3 = type_3. method_3 ( data, int_1, data. length ) ; return new type_1 ( var_1, var_2, new type_4 ( var_3 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string str ) { type_1 var_1 = new type_1 ( ) ; long [ ] time = var_1 . method_2 ( str ) ; java.util.date var_2 = new java.util.date ( time [ 0 ] ) ; type_2 var_3 = new type_2 ( string_1 ) ; var_3 . method_3 ( type_3 . method_4 ( string_2 ) ) ; java.lang.string var_4 = var_3 . format ( var_2 ) ; return var_4 ; }
[0]: public void method_1 ( ) { this. var_1 = true ; int var_2 = ( ( ( ( int ) ( int_1 ) ) * ( var_3 [ ( ( this. var_4 ) - 1 ) ] ) ) * ( var_3 [ ( ( this. var_5 ) - 1 ) ] ) ) * ( method_2 ( this. var_6 ) ) ; type_1 var_7 = type_1. method_3 ( this. var_8 ) ; int var_9 = var_7. method_4 ( ) ; var_7. method_5 ( ( var_9 + var_2 ) ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_1 == ( var_3 ) ) { if ( var_2 == ( var_4 ) ) { var_6 = data . method_3 ( string_1 , 1 ) ; method_4 ( ) ; } } }
[0]: private void method_1 ( java.lang.string response ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = null ; type_3 var_3 = new type_4 < type_2 > ( ) { }. gettype ( ) ; var_2 = var_1. method_2 ( response, var_3 ) ; this. method_3 ( var_2, response ) ; }

************

************
tgt: private java.lang.string method_1 ( int var_1 ) { var_2 . method_2 ( var_3 . method_3 ( ) ) ; var_4 . method_4 ( var_4 . method_5 ( ) ) ; if ( ( this . count ) > 0 ) var_4 . method_6 ( ) ; msg . method_7 ( var_3 . method_3 ( ) , var_3 . method_8 ( ) ) ; var_3 . method_9 ( var_1 ) ; return string_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1. method_2 ( var_3 ) ) ) ; this. var_4. method_3 ( ). method_4 ( var_5, var_2. getstring ( var_6 ) ) ; this. var_4. method_3 ( ). method_4 ( var_7, var_2. getstring ( var_8 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = method_2 ( ) ; type_1 . method_3 ( this . var_2 , type_1 . method_4 ( ) , var_1 , true ) . method_5 ( this . var_2 . method_6 ( ) . method_7 ( type_2 . method_8 ( ) . name ( var_1 ) . build ( ) ) ) . method_9 ( method_10 ( ) ) ; }
[0]: public void method_1 ( ) { while (! ( type_1. method_2 ( 0 ). var_1 ) ) { type_1. method_2 ( 0 ). var_1 = true ; type_1. method_2 ( 0 ). method_3 ( ) ; type_1. method_2 ( 0 ). var_1 = false ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 != null ) { type_3 . method_2 ( var_3 , ( ( ( string_1 + var_4 ) + string_2 ) + ( var_2 . method_3 ( ) ) ) ) ; return ; } if ( var_1 != null ) { type_3 . method_4 ( var_3 , string_3 ) ; if ( listener != null ) { listener . method_5 ( var_1 ) ; } } }
[0]: public void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { java.lang.string name = var_1. method_2 ( ) ; java.lang.string args = var_1. method_2 ( string_1 ) ; java.lang.string error = null ; if ( error!= null ) { response. method_3 ( ( string_2 + error ) ) ; } else { response. method_3 ( string_3 ) ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; java.util.list < type_2 > var_1 = type_3 . method_3 ( ) . method_4 ( ) ; while ( ( var_1 . size ( ) ) > 0 ) { this . method_5 ( var_1 . get ( 0 ) ) ; } method_6 ( ) ; }
[0]: public boolean method_1 ( int var_1, int var_2 ) throws type_1 { if ( ( this. var_3 [ var_1 ] ) == ( var_4 ) ) { type_2 var_5 ; if ( ( var_2 % int_1 ) == 0 ) { var_5 = var_6 ; } else { var_5 = var_7 ; } if ( method_2 ( var_1, var_5 ) ) { var_3 [ var_1 ] = var_5 ; method_3 ( var_1, var_5 ) ; return true ; } } return false ; } }

************

************
tgt: protected void execute ( type_1 var_1 ) { try { type_2 view = ( ( type_2 ) ( type_3 . method_1 ( ) . method_2 ( ) . method_3 ( ) . method_4 ( var_2 ) ) ) ; view . method_5 ( var_1 , true ) ; } catch ( java.lang.exception var_3 ) { type_4 . get ( ) . error ( string_1 , var_3 ) ; } }
[0]: public java.lang.string method_1 ( ) throws java.io.ioexception { type_1 var_1 = new type_1 ( var_2 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_1 ) ; java.lang.stringbuilder var_4 = new java.lang.stringbuilder ( ) ; java.lang.string line ; do { line = var_3. method_2 ( ) ; var_4. append ( line ) ; if ( line. equals ( string_1 ) ) break ; } while ( var_3. method_3 ( ) ) ; return var_4. tostring ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_2 var_2 : var_3 ) { type_3 var_4 = var_2 . method_2 ( ) ; if ( var_4 . method_3 ( ) . equals ( type_4 . method_4 ( ) ) ) { type_5 var_5 = var_4 . method_3 ( ) . method_5 ( ) ; var_5 . method_6 ( ) ; method_7 ( ) ; var_5 . method_8 ( var_6 , true ) ; var_5 . method_9 ( true ) ; method_10 ( ) ; return ; } } method_10 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( var_2 ) { try { type_2. method_2 ( var_3 ) ; } catch ( type_3 var_4 ) { java.lang.system.out.println ( var_4 ) ; } var_5. method_3 ( ) ; var_2 = false ; java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: private void method_1 ( ) { if ( var_1 . equals ( var_2 ) ) { var_3 . method_2 ( var_4 ) ; var_3 . setvalue ( 1 ) ; } else if ( var_1 . equals ( var_5 ) ) { var_3 . method_2 ( var_4 ) ; var_6 . method_2 ( var_4 ) ; var_3 . setvalue ( 1 ) ; var_7 . setvalue ( 1 ) ; } }
[0]: public static type_1 method_1 ( type_2 var_1 ) { return new type_1 ( var_1. getname ( ), var_1. method_2 ( ), var_1. method_3 ( ), var_1. method_4 ( ), type_3. method_5 ( var_1. method_6 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { if ( ! ( var_2 . method_2 ( position ) ) ) return ; android.content.context context = var_3 . getcontext ( ) ; java.lang.string var_4 = var_2 . getstring ( var_2 . method_3 ( var_5 ) ) ; type_2 var_6 = var_3 ; type_3 . method_4 ( context ) . method_5 ( var_4 ) . method_6 ( int_1 , int_2 ) . method_7 ( var_6 ) ; }
[0]: public static void main ( final java.lang.string [ ] args ) throws java.lang.exception { java.util.list < type_1 > var_1 = method_1 ( ) ; type_2. method_2 ( string_1, var_1 ) ; final java.util.list < type_1 > var_2 = method_3 ( ) ; type_2. method_2 ( string_2, var_2 ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception , type_1 { if ( ( var_1 . contains ( string_1 ) ) || ( var_1 . contains ( string_2 ) ) ) { java.lang.string var_2 = string_3 ; type_2 var_3 = method_2 ( var_2 , string_1 ) ; type_3 . assertnotnull ( var_3 ) ; method_3 ( new long [ ] { int_1 , int_2 } , var_3 . method_4 ( ) , var_2 ) ; } }
[0]: public int method_1 ( java.lang.charsequence var_1 ) { int id ; if ( var_2. method_2 ( var_1 ) ) { id = var_2. size ( ) ; var_2. put ( var_1, id ) ; } else { id = var_2. get ( var_1 ) ; } return id ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.boolean var_2 ) { if ( var_2 ) type_2 . method_2 ( ) ; java.util.arraylist < type_2 > var_3 = new java.util.arraylist < type_2 > ( type_2 . method_3 ( var_1 , var_2 ) ) ; for ( type_3 i : var_4 ) { i . method_4 ( var_3 , var_2 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { if ( ( var_3 ) == null ) { type_2. method_2 ( var_4, string_1 ) ; return ; } var_1. method_3 ( ) ; switch ( var_2 ) { case 0 : var_3. method_4 ( var_5 ) ; break ; case 1 : var_3. method_4 ( var_6 ) ; break ; case int_1 : var_3. method_4 ( var_7 ) ; break ; case int_2 : var_3. method_4 ( var_8 ) ; break ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { int index = var_1 . method_2 ( ) ; if ( index == ( - 1 ) ) { index = 0 ; } var_1 . method_3 ( ) ; if ( ( ++ index ) > ( ( var_1 . method_4 ( ) ) - 1 ) ) { index = 0 ; } var_1 . method_6 ( index , index ) ; }
[0]: public boolean equals ( java.lang.object obj ) { boolean var_1 = false ; try { var_1 = ( ( obj. getclass ( ) )!= ( var_2 class ) ) && ( type_1. equals ( this. var_3, ( ( type_2 ) ( obj ) ). method_1 ( ) ) ) ; } catch ( java.lang.exception var_4 ) { var_4. method_2 ( ) ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( java.lang.string name ) { if ( ( var_2 ) != null ) { var_2 . method_1 ( name ) ; } else { for ( type_1 t : var_3 ) { if ( t . method_2 ( 0 ) . getname ( ) . equals ( name ) ) return t ; } } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_1 ; type_2. assertthat ( var_1. method_2 ( ) ). method_3 ( var_3 ) ; type_2. assertthat ( var_1. method_4 ( ). method_5 ( ) ). method_3 ( string_1 ) ; type_2. assertthat ( var_1. method_4 ( ). method_6 ( ). method_7 ( ) ). method_8 ( string_2 ) ; }

************

************
tgt: private type_1 [ ] method_1 ( ) { type_1 [ ] var_1 = new type_1 [ var_2 . size ( ) ] ; for ( type_1 var_3 : var_4 ) { if ( ( var_3 . length ) == 0 ) { continue ; } for ( int i = var_3 . start ; i <= ( var_3 . end ) ; i ++ ) { int var_5 = var_6 [ i ] ; var_1 [ var_5 ] = var_3 ; } } return var_1 ; }
[0]: public void method_1 ( java.lang.string name, java.lang.object source, java.lang.object target ) { var_1. method_2 ( ). method_3 ( ) ; try { type_1 var_2 = ( ( type_1 ) ( var_1. method_4 ( var_3, null, name, source, target ) ) ) ; } finally { var_1. method_2 ( ). method_5 ( ) ; } }

************

************
tgt: private java.lang.string method_1 ( final type_1 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) ; if ( var_2 . method_5 ( string_1 ) ) { var_2 = var_2 . substring ( 0 , ( ( var_2 . length ( ) ) - 1 ) ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1, java.util.map < java.lang.string, java.lang.object > values ) { if ( var_1!= null ) { type_2 [ ] var_2 = var_1. value ( ) ; for ( type_2 attribute : var_2 ) { values. put ( attribute. key ( ), attribute. value ( ) ) ; if ( attribute. method_2 ( ) ) { var_3. put ( attribute. key ( ), attribute. value ( ) ) ; } } } }

************

************
tgt: public boolean method_1 ( ) { method_2 ( ) ; int var_1 = - ( var_2 ) ; type_1 x = this . var_3 ; while ( x != ( var_4 ) ) { if ( ( method_3 ( x , new int [ int_1 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( var_5 ) <= var_1 ) { return false ; } var_1 = var_5 ; x = var_6 ; } return true ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { type_2. method_2 ( var_2 ) ; for ( type_1 var_3 : var_4 ) { if (! ( var_3. getname ( ). method_3 ( var_1. getname ( ) ) ) ) { var_3. method_4 ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( final android.content.intent intent , final java.lang.string var_1 , final type_1 var_2 , final type_2 var_3 , final int var_4 , final java.lang.string var_5 , final type_3 var_6 ) { var_7 . method_2 ( intent , new type_4 ( ) { public void method_3 ( ) { var_8 super . method_1 ( intent , var_1 , var_2 , var_3 , var_4 , var_5 , var_6 ) ; } } ) ; }
[0]: protected java.lang.class < type_1 > [ ] method_1 ( java.lang.object... var_1 ) { java.lang.class < type_1 > [ ] var_2 = ( ( java.lang.class < type_1 > [ ] ) ( type_2. method_2 ( var_3 class, var_1. length ) ) ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_2 [ i ] = ( ( java.lang.class < type_1 > ) ( var_1 [ i ]. getclass ( ) ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { try { var_2 . method_2 ( var_1 . method_3 ( ) , string_1 , string_2 , var_1 ) ; } catch ( java.lang.exception var_3 ) { type_2 . method_4 ( string_3 , var_3 ) ; } } catch ( java.lang.exception var_3 ) { type_2 . method_4 ( string_4 , var_3 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; method_3 ( string_1 ) ; method_4 ( ) ; var_1 = new type_1 ( ) ; var_1. method_5 ( var_2 ) ; type_2 var_3 = new type_2 ( ) ; var_3. method_6 ( var_1 ) ; java.util.map < java.lang.class <? extends type_3 >, type_4 > var_4 = new java.util.hashmap < java.lang.class <? extends type_3 >, type_4 > ( ) ; var_4. put ( var_5 class, var_3 ) ; var_1. method_7 ( var_4 ) ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { type_2 target = var_1 . method_2 ( ) . method_3 ( ) ; type_3 var_2 = type_3 . method_4 ( target ) ; if ( ( var_2 . method_5 ( ( string_1 + ( var_3 ) ) ) . length ( ) ) > 0 ) { var_4 = true ; } else { method_6 ( ) ; } return true ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { if ( ( null == ( var_4 ) ) && ( var_5 ) ) { var_4 = method_2 ( var_1, var_2, var_3 ) ; } var_6 = type_4. method_3 ( this, var_4 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( long var_1 ) { type_1 var_2 = var_3 . method_2 ( ( ( int ) ( var_1 ) ) ) ; type_2 var_4 = new type_3 ( ( ( type_4 . method_3 ( ) ) + ( method_4 ( var_2 ) ) ) , var_1 ) ; var_5 . method_6 ( var_4 ) ; }
[0]: void method_1 ( java.lang.string op, boolean var_1 ) { if ( ( ( method_2 ( ) )!= char_1 ) && ( ( op. method_3 ( 0 ) )!= char_2 ) ) { append ( string_1 ) ; } append ( op ) ; if ( var_1 ) { append ( string_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( var_2 ) ) { type_2 list = var_1 . method_3 ( var_2 , var_3 ) ; for ( int i = 0 ; i < ( list . method_4 ( ) ) ; i ++ ) { var_4 . add ( type_3 . method_5 ( list . method_6 ( i ) ) ) ; } } }
[0]: private static void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = type_1. method_2 ( var_1 ) ; java.lang.string var_3 = type_1. method_3 ( var_1 ) ; java.lang.string var_4 = type_1. method_4 ( var_3 ) ; type_2 var_5 = new type_2 ( var_3, var_2 ) ; var_5. method_5 ( ) ; var_5. method_6 ( ) ; type_3 var_6 = new type_3 ( var_4, var_2 ) ; var_6. method_7 ( ) ; var_6. method_7 ( ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.object var_2 , int var_3 , long key , java.lang.object var_4 , java.lang.class c ) { if ( ( ( c != null ) && ( var_4 != null ) ) && ( ! ( c . method_2 ( var_4 . getclass ( ) ) ) ) ) { var_4 = ( ( type_2 ) ( var_4 ) ) . method_3 ( ) ; } var_1 . method_4 ( var_2 , key , var_4 ) ; }
[0]: public int method_1 ( java.lang.string id ) { int counter = - 1 ; java.lang.string var_1 = type_1. method_2 ( id ) ; try { counter = java.lang.integer.parseint ( new type_2 ( ). execute ( string_1, var_1 ). get ( ) ) ; } catch ( type_3 var_2 ) { var_2. method_3 ( ) ; } catch ( type_4 var_2 ) { var_2. method_3 ( ) ; } return counter ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = method_2 ( ) . getint ( var_3 ) ; var_4 = new java.util.arraylist < > ( ) ; var_5 = new type_2 ( getactivity ( ) , var_4 , this ) ; method_3 ( ) ; }
[0]: public void method_1 ( ) throws type_1, type_2 { final type_3 var_1 = method_2 ( ) ; final type_4 var_2 = var_1. method_3 ( ) ; type_5. assertequals ( var_3, var_2. method_4 ( ). size ( ) ) ; final type_6 var_4 = var_2. method_4 ( ). get ( 0 ). method_5 ( ) ; final java.lang.double var_5 = method_6 ( ). method_7 ( var_4 ) ; type_5. assertequals ( ( - float_1 ), var_5, var_6 ) ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( new type_1 ( ) { public void method_3 ( type_2 var_2 ) { type_3 var_3 = new type_3 ( ) ; var_3 . method_4 ( int_1 , int_1 ) ; var_3 . method_5 ( new type_4 ( var_4 , string_1 ) ) ; var_3 . method_6 ( true ) ; } } ) ; }
[0]: public void method_1 ( ) { final type_1 var_1 = type_2. method_2 ( context ) ; if ( ( method_3 ( ). method_4 ( var_2 ) ) > ( - 1 ) ) { if ( ( var_3 ) < 0 ) { var_3 = 0 ; } } else { var_1. show ( ) ; type_3. get ( ). method_5 ( new type_4 ( ) { public void method_6 ( ) { var_1. method_7 ( ) ; } } ) ; } } }

************

************
tgt: public type_1 < type_2 < type_3 , java.lang.object > > method_1 ( type_4 var_1 , type_6 var_3 , java.lang.string token , type_7 response ) { type_8 . method_2 ( response , var_1 . tostring ( ) , var_3 ) ; type_8 . method_3 ( response , var_3 ) ; return method_1 ( var_1 , var_3 , token ) ; }
[0]: private void method_1 ( int var_1, android.content.intent var_2 ) { if ( var_1 == ( var_3 ) ) { type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; var_6 = var_7. method_3 ( ) ; type_2. method_4 ( var_6, this, var_4 ) ; } else { var_7 = null ; } }

************

************
tgt: private java.util.list < java.lang.integer > method_1 ( final java.util.list < type_1 > var_1 ) { java.util.list < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( var_1 . size ( ) ) ; for ( type_1 var_3 : var_1 ) { var_2 . add ( var_3 . getcolor ( ) . getvalue ( ) ) ; } return var_2 ; }
[0]: public void method_1 ( java.lang.object var_1 ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; method_2 ( var_2, var_1 ) ; method_2 ( var_3, var_1 ) ; method_2 ( var_4, var_1 ) ; method_2 ( var_5, var_1 ) ; method_2 ( var_6, var_1 ) ; type_1 node = new type_1 ( string_2, string_3 ) ; node. method_3 ( string_4, string_5 ) ; node. method_3 ( string_6, ( string_7 + ( var_1. method_4 ( ) ) ) ) ; method_5 ( string_8, node ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_1 var_2 ) { type_2 min = type_1 . min ( var_1 . method_2 ( ) , var_2 . method_2 ( ) ) ; return method_1 ( var_1 . method_3 ( min ) , var_2 . method_3 ( min ) , min ) ; }
[0]: public void method_1 ( java.util.map < java.lang.string, java.lang.string > result ) { int var_1 = java.lang.integer.parseint ( result. get ( string_1 ) ) ; int out = java.lang.integer.parseint ( result. get ( string_2 ) ) ; var_2 = var_1 + out ; java.lang.system.out.println ( ( ( ( ( ( ( java.lang.thread. method_2 ( ). getid ( ) ) + ( var_3 ) ) + string_3 ) + ( label ) ) + string_4 ) + ( var_2 ) ) ) ; var_4. update ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_3 = ( ( type_1 ) ( method_2 ( var_4 ) ) ) ; var_5 = ( ( android.widget.button ) ( method_2 ( var_6 ) ) ) ; var_7 = ( ( android.widget.button ) ( method_2 ( var_8 ) ) ) ; var_11 = ( ( android.widget.button ) ( method_2 ( var_12 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1. method_2 ( ) ; if ( var_2!= null ) { type_1 var_3 = method_3 ( var_2 ) ; var_3. method_4 ( var_1 ) ; } var_4. remove ( var_1. method_5 ( ) ) ; var_5. remove ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) { boolean [ ] var_1 = var_2 . method_2 ( ) ; int var_3 = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { if ( var_1 [ i ] ) { ++ var_3 ; var_4 [ i ] . method_3 ( var_5 ) ; } else var_4 [ i ] . method_3 ( var_6 ) ; } var_3 = ( var_3 * int_2 ) / int_1 ; var_7 . setvalue ( var_3 ) ; }
[0]: private type_1 method_1 ( long start, long end, java.lang.string title ) { java.util.calendar starttime = java.util.calendar.getinstance ( ) ; java.util.calendar endtime = java.util.calendar.getinstance ( ) ; starttime. method_2 ( start ) ; endtime. method_2 ( end ) ; type_1 event = new type_1 ( 1, method_3 ( starttime, title ), starttime, endtime ) ; event. method_4 ( method_5 ( ). getcolor ( var_1 ) ) ; var_2. method_6 ( ) ; return event ; }

************

************
tgt: public static int method_1 ( type_1 var_1 ) { int var_2 = 0 ; for ( int i = 1 ; i < int_1 ; i ++ ) { for ( int j = 0 ; j < int_2 ; j ++ ) { if ( ( var_3 . get ( i ) . get ( j ) ) >= 0 ) { var_2 += var_3 . get ( i ) . get ( j ) ; } } } return var_2 / int_3 ; }
[0]: public double method_1 ( type_1 var_1 ) { if ( ( this. compareto ( var_1 ) ) == 0 ) { return var_2 ; } if ( ( this. x ) == ( var_1. x ) ) { return var_3 ; } return ( ( double ) ( ( var_1. y ) - ( this. y ) ) ) / ( ( var_1. x ) - ( this. x ) ) ; }

************

************
tgt: protected java.lang.string method_1 ( int var_1 ) throws type_1 { type_2 select = new type_2 ( ) ; try { select . select ( var_2 ) ; select . method_2 ( var_3 class ) ; select . method_3 ( var_4 ) ; select . values ( var_1 ) ; type_3 var_5 = select . execute ( var_6 ) ; var_5 . method_4 ( ) ; return var_5 . method_5 ( 1 ) ; } catch ( type_4 var_7 ) { throw new type_1 ( string_1 ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view view = var_1. method_2 ( var_4, var_2, false ) ; method_3 ( view ) ; type_4. method_4 ( ). method_5 ( new type_5 ( ) { public void method_6 ( ) { var_5. method_7 ( ) ; } } ) ; return view ; }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_1 . method_2 ( var_2 , var_3 class ) ; var_1 . method_2 ( var_2 , var_4 class ) ; var_1 . method_4 ( var_2 , var_4 class ) ; var_1 . method_3 ( var_2 , var_5 class ) ; var_1 . method_2 ( var_2 , var_6 class ) ; var_1 . method_4 ( var_2 , var_6 class ) ; var_1 . method_2 ( var_2 , var_7 class ) ; var_1 . method_4 ( var_2 , var_7 class ) ; }
[0]: private void method_1 ( float var_1, float height ) { var_2. method_2 ( var_1, height ) ; var_3. method_2 ( var_1, height ) ; var_4. method_2 ( var_1, height ) ; float var_5 = method_3 ( ) ; float var_6 = method_4 ( ) ; var_2. method_5 ( var_5, var_6 ) ; var_3. method_5 ( var_5, var_6 ) ; var_4. method_5 ( var_5, var_6 ) ; var_2. method_5 ( var_5, var_6 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = string_1 ; for ( char var_3 : var_1 . touppercase ( ) . method_2 ( ) ) { int index = type_1 . method_3 ( var_3 ) ; if ( index < 0 ) { var_2 += var_3 ; continue ; } int i = index - ( info . method_4 ( ) ) ; if ( i < 0 ) { i = int_1 + i ; } i = i % int_1 ; var_2 += type_1 . method_5 ( i ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2. method_2 ( ). method_3 ( type_2. method_4 ( ), ( string_1 + ( var_1. getname ( ) ) ) ) ; method_5 ( var_1 ) ; method_6 ( var_1, string_2 ) ; method_6 ( var_1, var_2 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) == int_1 ) { java.lang.string var_2 = args [ 0 ] ; java.lang.string var_3 = args [ 1 ] ; } else if ( ( args.length ) == 0 ) { type_2 . method_1 ( ) ; } }
[0]: public java.lang.object method_1 ( int var_1, int var_2, int var_3, type_1 context, type_2 var_4, type_3 var_5 ) throws java.io.ioexception, type_4 { java.util.calendar var_6 = type_5. method_2 ( var_1, var_2, var_3 ) ; type_6 var_7 = type_5. method_3 ( var_6 ) ; return new java.util.hashmap < > ( ) ; }

************

************
tgt: final void method_1 ( ) { boolean var_1 = false ; final int var_2 = var_3 . size ( ) ; for ( int var_4 = 0 ; var_4 < var_2 ; ++ var_4 ) { final type_1 var_5 = var_3 . get ( var_4 ) ; if ( var_1 || ( var_6 ) ) { var_7 = false ; } else { var_7 = true ; var_1 = true ; } } }
[0]: public void method_1 ( type_1 event ) throws java.io.ioexception { int i ; try { i = java.lang.integer.parseint ( var_1. gettext ( ) ) ; } catch ( java.lang.exception var_2 ) { return ; } method_2 ( ) ; method_3 ( ) ; method_4 ( i ) ; method_5 ( i ) ; }

************

************
tgt: public type_1 set ( int var_1 , int var_2 , int [ ] var_3 , type_1 var_4 ) { int var_5 = ( var_2 - var_1 ) + 1 ; int var_6 = var_3 . length ; for ( int i = 0 ; i < var_5 ; i ++ ) for ( int j = 0 ; j < var_6 ; j ++ ) { data [ ( var_1 + i ) ] [ var_3 [ j ] ] = var_4 . data [ i ] [ j ] ; } return this ; }
[0]: public void method_1 ( ) { try { var_1 = new type_1 ( var_2 ) ; java.lang.system.out.println ( ( ( string_1 + ( var_2 ) ) + string_2 ) ) ; while ( true ) { type_2 var_3 = var_1. method_2 ( ) ; type_3 type_4 = new type_3 ( var_3, var_4 ) ; var_5. method_3 ( type_4 ) ; java.lang.system.out.println ( string_3 ) ; } } catch ( java.io.ioexception var_6 ) { var_6. method_4 ( ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( getactivity ( ) ) { protected int method_2 ( type_2 state ) { return int_1 ; } } ; var_2 . method_3 ( var_1 ) ; var_2 . method_5 ( var_3 ) ; var_2 . method_6 ( new type_3 ( ) ) ; }
[0]: private boolean method_1 ( ) { if ( ( ( method_2 ( ( ( var_1 ) - 1 ) ) ) < 0 ) && ( ( var_2 ) == int_1 ) ) { var_2 = 0 ; return true ; } else if ( ( ( method_2 ( ( ( var_1 ) - 1 ) ) ) < 0 ) && ( ( var_2 ) == int_2 ) ) { var_2 = 0 ; return true ; } return false ; }

************

************
tgt: static boolean method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( var_2 . get ( i ) . method_2 ( var_1 , new java.util.hashmap < > ( ) , true ) ) { var_3 . method_3 ( ( string_1 + ( i + 1 ) ) ) ; return true ; } } return false ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { var_3, var_4 } ; int [ ] var_5 = new int [ ] { var_6, var_7 } ; int var_8 ; if ( var_9 ) var_8 = var_10 ; else var_8 = var_11 ; type_1 var_12 = new type_1 ( var_13. method_2 ( ), var_8, var_1, var_2, var_5 ) ; return var_12 ; }

************

************
tgt: public void method_1 ( int var_1 , int source , int var_2 , int var_3 ) throws type_1 , type_2 { if ( var_1 == 1 ) { this . method_2 ( source , var_2 ) ; } else { this . method_1 ( ( var_1 - 1 ) , source , var_3 , var_2 ) ; this . method_2 ( source , var_2 ) ; this . method_1 ( ( var_1 - 1 ) , var_3 , var_2 , source ) ; } }
[0]: public void getname ( ) throws java.lang.exception { type_1 var_1 = method_1 ( var_2 class ) ; method_2 ( var_1 ). method_3 ( var_3 ). method_4 ( ) ; var_3. getname ( ) ; method_5 ( var_3 ). method_4 ( ) ; method_5 ( var_1 ). method_6 ( ) ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 , java.util.list < type_1 > var_2 ) { var_1 . method_2 ( var_3 ) ; var_2 . method_2 ( var_3 ) ; assertequals ( var_1 , var_2 ) ; for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_1 var_4 = var_1 . get ( i ) ; type_1 var_5 = var_2 . get ( i ) ; method_3 ( var_4 , var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { double var_2 = method_2 ( var_1 ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { double a = ( ( var_3 ) * ( var_4 ) ) * ( ( position [ i ] ) - ( var_1. position [ i ] ) ) ; var_5 [ i ] += a / ( ( var_2 * var_2 ) * var_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( var_3 ) ; var_2 . open ( ) ; type_3 var_4 = var_2 . method_2 ( ) ; if ( var_4 != null ) { java.lang.system.out.println ( ( string_1 + var_4 ) ) ; setvalue ( var_4 ) ; } }
[0]: private void method_1 ( ) { int sum = method_2 ( ) ; for ( int var_1 = 1 ; var_1 < ( method_3 ( ). size ( ) ) ; var_1 ++ ) { type_1 var_2 = method_3 ( ). get ( var_1 ) ; float var_3 = type_2. method_4 ( ( ( ( var_4 ) / sum ) * ( var_5 ) ) ) ; if ( var_3 < 1 ) { var_6. remove ( var_2 ) ; sum = 0 ; } } }

************

************
tgt: public type_1 put ( type_2 key , type_1 value ) { type_3 . method_1 ( key ) ; type_3 . method_1 ( value ) ; type_4 < type_1 > var_1 = var_2 . put ( key , new type_4 < type_1 > ( value , var_3 ) ) ; if ( var_1 == null ) { return null ; } method_2 ( key , var_1 . getvalue ( ) , var_4 ) ; return var_1 . getvalue ( ) ; }
[0]: private void method_1 ( ) { var_1 = var_2. method_2 ( ). method_3 ( ). method_4 ( var_3 ) ; if ( null == ( var_1 ) ) { var_1 = new type_1 ( ) ; var_4 = var_3 ; var_5 = getintent ( ). method_5 ( var_6 ) ; if ( type_2. isempty ( var_5 ) ) { var_5 = var_3 ; } var_7 = getintent ( ). method_5 ( var_8 ) ; } else { var_7 = null ; } }

************

************
tgt: public void method_1 ( ) { try { if ( var_1 . method_2 ( ) ) { var_1 . method_4 ( false ) ; if ( ( ( var_2 ) > 0 ) && ( ( var_3 ) > 0 ) ) var_1 . method_3 ( var_2 , var_3 ) ; } else { var_2 = var_1 . method_5 ( ) ; var_3 = var_1 . method_6 ( ) ; var_1 . method_4 ( true ) ; } method_7 ( ) ; } catch ( final java.lang.exception var_4 ) { var_4 . method_8 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_1. method_2 ( ) ) ; i ++ ) { this. var_2. method_3 ( var_1. method_4 ( i ), i ) ; } this. var_3. method_5 ( 0, type_2. method_6 ( ). method_7 ( this. var_4, this. var_2. method_8 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( ( ( var_3 ) < 0 ) || ( ( var_3 ) >= ( var_4 ) ) ) { throw new type_3 ( ( string_1 + ( var_3 ) ) ) ; } try { var_5 . method_2 ( ( ( long ) ( ( var_3 ) * ( var_6 ) ) ) ) ; var_5 . method_3 ( var_2 . getdata ( ) ) ; ( var_7 ) ++ ; } catch ( java.io.ioexception var_8 ) { type_4 . method_4 ( var_8 ) ; } }
[0]: private double method_1 ( java.util.hashmap < java.lang.string, java.lang.double > var_1 ) { double result = 0.0 ; for ( java.lang.string key : var_1. method_2 ( ) ) { double temp = var_1. get ( key ) ; result += temp * temp ; } return type_1. method_3 ( ( result / ( var_1. method_2 ( ). size ( ) ) ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { boolean var_2 = var_3 . method_2 ( ) ; if ( var_2 ) { return true ; } long var_4 = var_1 . method_3 ( ) ; type_2 var_5 = ( ( type_2 ) ( var_6 . get ( java.lang.long . method_4 ( var_4 ) ) ) ) ; var_6 . remove ( var_4 ) ; if ( var_5 == null ) { return false ; } var_5 . method_5 ( var_1 , true ) ; return true ; }
[0]: private void method_1 ( ) { android.content.intent i = new android.content.intent ( ) ; i. method_2 ( var_1 ) ; i. method_3 ( var_2, var_3 ) ; i. method_3 ( var_4, var_5 ) ; type_1. method_4 ( method_5 ( ) ). method_6 ( i ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { for ( int i = 0 ; i < ( var_4 . size ( ) ) ; i ++ ) { type_4 var_5 = var_4 . get ( i ) ; if ( var_5 != null ) { final type_5 value = var_6 . get ( i ) ; final type_6 var_7 = var_8 . get ( i ) ; var_1 . method_2 ( type_7 . method_3 ( var_1 , var_5 , var_7 , value ) ) ; } } }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2, var_3, var_4 ) ; type_1 var_5 = var_1. method_2 ( var_2, var_6, var_7 ) ; var_1. method_3 ( var_2, var_5 ) ; assertequals ( 1, var_2. method_4 ( ). size ( ) ) ; assertequals ( var_4, var_2. method_5 ( ). method_6 ( ) ) ; method_7 ( var_2. method_5 ( ). method_8 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 . method_3 ( ) ) ; var_1 . method_2 ( var_3 . method_3 ( ) ) ; var_1 . method_2 ( var_4 . method_3 ( ) ) ; var_1 . method_2 ( var_5 . method_3 ( ) ) ; var_1 . method_2 ( var_6 . method_3 ( ) ) ; }
[0]: public void start ( ) { if (! ( var_1 ) ) { var_1 = true ; type_1. i ( var_2, string_1 ) ; var_3 = new type_2 ( string_2 ) ; var_3. start ( ) ; var_4 = new type_3 ( var_3. method_1 ( ) ) ; var_4. method_2 ( new type_4 ( ) { public void method_3 ( ) { method_4 ( ) ; } } ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; type_1 state ; while ( true ) { state = step ( ) ; if ( state == null ) { break ; } var_1 . add ( state ) ; } for ( type_2 var_2 : var_3 ) { var_2 . method_2 ( ) ; } return var_1 ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 )!= null ) && ( var_1. method_2 ( ) ) ) { var_1. method_3 ( ) ; } if ( ( var_2 )!= null ) { var_2. method_4 ( var_3 ) ; } var_4. method_4 ( ) ; var_3 = null ; var_2 = null ; view = null ; var_1 = null ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { java.util.arraylist < java.lang.string > var_2 = method_2 ( var_1 ) ; int var_3 = method_3 ( method_4 ( var_2 ) ) ; java.lang.string date = method_5 ( var_2 ) ; if ( method_6 ( var_3 ) ) { return false ; } return var_4 . method_1 ( var_3 , date ) ; }
[0]: public type_1 method_1 ( type_2 var_1, int i ) throws type_3 { try { return new type_1 ( var_1. getint ( ""id"" ), var_1. getstring ( string_1 ), var_1. getstring ( string_2 ), var_1. getstring ( string_3 ), var_1. getstring ( string_4 ), var_1. getstring ( string_5 ), var_1. getstring ( string_6 ), var_1. getint ( string_7 ) ) ; } catch ( type_3 var_2 ) { throw new type_4 ( var_2 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string expr ) throws type_2 { type_3 var_1 = new type_3 ( ) ; type_1 var_2 ; try { var_2 = var_1 . method_2 ( expr ) ; } catch ( type_4 var_3 ) { throw new type_2 ( type_5 . method_3 ( ) , var_3 , expr ) ; } return type_6 . method_5 ( var_2 ) ; }
[0]: private boolean method_1 ( type_1 [ ] var_1 ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { type_1 var_2 = var_1 [ i ] ; if ( var_2. method_2 ( ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertthat ( type_2 . method_2 ( ( ( var_1 ) - ( ( int_1 * int_2 ) * int_2 ) ) , var_1 , false , getcontext ( ) ) , type_3 . method_3 ( method_4 ( var_3 , 1 ) ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1, type_1 status, java.util.scanner var_2 ) { java.lang.system.out.println ( string_1 ) ; status = var_3 ; method_2 ( var_1, status ) ; var_4 = method_3 ( ) ; while ( ( var_4 )!= 0 ) { method_4 ( var_1, status, var_2 ) ; ( var_4 ) -- ; break ; } return status ; }

************

************
tgt: public void method_1 ( long var_1 , boolean var_2 ) { type_1 . method_2 ( string_1 , ( string_2 + var_1 ) ) ; if ( var_2 ) { method_1 ( ( ( var_3 ) + string_3 ) , new java.lang.string [ ] { string_4 + var_1 } ) ; } else { method_1 ( ( ( ( ( var_3 ) + string_5 ) + ( var_4 ) ) + string_3 ) , new java.lang.string [ ] { string_4 + var_1 , "0" } ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.util.list < type_2 > list = var_1. method_2 ( ) ; for ( int i = 0 ; i < ( list. size ( ) ) ; i ++ ) { if (! ( this. var_2. method_3 ( list. get ( i ), true ) ) ) { this. var_3. method_4 ( list. get ( i ) ) ; this. var_1. add ( list. get ( i ). method_5 ( ). title ) ; } } }

************

************
tgt: public static short method_1 ( java.lang.string var_1 ) { for ( short var_2 = 1 ; var_2 < int_1 ; var_2 ++ ) for ( short var_2 = 1 ; var_2 < int_1 ; var_2 ++ ) { for ( type_1 var_3 : var_4 . method_2 ( ) ) { } } return int_2 ; }
[0]: public int method_1 ( ) { int result = super. method_1 ( ) ; result = ( int_1 * result ) + ( ( var_1 )!= null? var_1. method_1 ( ) : 0 ) ; result = ( int_1 * result ) + ( ( var_2 )!= null? var_2. method_1 ( ) : 0 ) ; return result ; }

************

************
tgt: private void method_1 ( final java.lang.string var_1 , final type_1 var_2 ) { final android.content.intent intent = new android.content.intent ( var_1 ) ; if ( var_2 == null ) { this . method_2 ( intent ) ; return ; } type_2 . method_3 ( var_3 , var_2 . method_4 ( 0 ) ) ; if ( type_3 . equals ( var_2 . method_5 ( ) ) ) { java.lang.string value = var_2 . method_4 ( 0 ) ; intent . method_6 ( var_4 , value ) ; this . method_2 ( intent ) ; } }
[0]: public boolean method_1 ( android.view.view var_1, type_1 event ) { switch ( event. method_2 ( ) ) { case var_2 : this. x = event. method_3 ( ) ; this. y = event. method_4 ( ) ; return true ; case var_3 : case var_4 : this. method_5 ( event. method_3 ( ), event. method_4 ( ) ) ; return true ; default : return false ; } }

************

************
tgt: private static void method_1 ( final type_1 var_1 , final java.lang.string msg , final int length ) { type_2 var_2 = new type_2 ( ) { public void method_2 ( ) { type_3 . method_3 ( var_1 , msg , length ) . show ( ) ; } } ; type_4 . method_5 ( var_2 ) ; }
[0]: public void method_1 ( int var_1, boolean var_2, type_1 var_3 ) { if ( var_1 == ( - 1 ) ) return ; if ( ( var_4 ) == null ) var_4 = type_2. method_2 ( int_1 ) ; var_4. method_3 ( ) ; var_3. get ( var_4 ) ; var_4. method_4 ( ) ; method_5 ( var_1, var_2, var_4 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.util.list < type_1 > var_2 ) { var_3 = string_1 ; for ( type_1 var_4 : var_2 ) { if ( var_1 . equals ( var_4 . method_2 ( ) ) ) { var_3 = string_2 ; break ; } else if ( var_1 . equals ( var_4 . method_3 ( ) ) ) { var_3 = string_3 ; break ; } } return var_3 ; }
[0]: public void method_1 ( type_1 < type_2 > list, type_3 var_1 ) { type_1 < java.lang.string > var_2 = new type_4 < > ( ) ; if ( var_1 == null ) { type_5. method_2 ( list ) ; for ( type_2 var_3 : list ) { var_2. add ( var_3. method_3 ( ) ) ; } } if ( var_2!= null ) { listener. method_4 ( var_2 ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 , type_3 var_2 ) { java.util.list < type_1 > result = type_4 . method_2 ( ) ; for ( int i = 1 ; i < int_1 ; ++ i ) { result . add ( new type_1 ( i , null ) ) ; } return result ; }
[0]: public void method_1 ( type_1 message ) { java.lang.string var_1 = message. method_2 ( ) ; java.lang.string var_2 = message. method_3 ( ) ; java.lang.string var_3 = type_2. method_4 ( ). format ( new java.util.date ( message. method_5 ( ) ) ) ; final type_3 var_4 = new type_3 ( var_3, var_2, var_1 ) ; new java.lang.thread ( new type_4 ( ) { public void method_6 ( ) { var_5. method_7 ( type_5. method_8 ( var_4 ) ) ; } } ). start ( ) ; } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof type_1 ) { type_1 node = ( ( type_1 ) ( obj ) ) ; return var_1 . equals ( node . method_1 ( ) ) ; } return false ; }
[0]: public void method_1 ( ) { int counter = int_1 ; while ( counter!= 0 ) { type_1 [ ] var_1 = method_2 ( ) ; if ( var_1!= null ) { for ( type_1 p : var_1 ) { var_2. method_3 ( p ). method_4 ( int_2 ) ; counter -- ; } } } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( var_1 == null ) return null ; if ( var_2 == null ) return var_1 ; if ( var_1 . equals ( var_2 ) ) { return null ; } else { return var_1 ; } }
[0]: public java.lang.string method_1 ( ) { java.lang.string result = string_1 ; java.util.list < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : this. method_2 ( ) ) { var_1. add ( var_2. method_1 ( ) ) ; } result = java.lang.string. method_3 ( string_2, var_1 ) ; return result ; }

************

************
tgt: public void method_1 ( ) { while ( ! ( var_1 ) ) { try { java.lang.object response = var_2 . method_2 ( ) ; java.lang.system.out.println ( string_1 ) ; if ( method_3 ( ( ( type_1 ) ( response ) ) ) ) { } else { try { var_3 . put ( ( ( type_1 ) ( response ) ) ) ; } catch ( type_2 var_4 ) { var_4 . method_4 ( ) ; } } } catch ( java.io.ioexception | java.lang.classnotfoundexception var_5 ) { java.lang.system.out.println ( string_2 ) ; var_1 = true ; } } }
[0]: public java.lang.integer [ ] method_1 ( java.lang.string var_1, type_1 var_2 ) { java.lang.integer [ ] var_3 = type_2. method_2 ( var_1. split ( "" "" ) ) ; type_2. method_3 ( type_2. method_4 ( var_3, var_4 ), var_2 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 position ) { if ( ( var_1 ) == null ) { this . position = position ; return ; } this . position = position . method_2 ( var_1 . method_3 ( ) ) . method_4 ( ( - ( var_1 . method_5 ( ) ) ) ) ; }
[0]: public type_1 method_1 ( boolean var_1, int var_2 ) throws type_2 { type_3 result ; result = ( ( type_3 ) ( var_3. method_1 ( var_1, var_2 ) ) ) ; var_4. add ( result ) ; result. method_2 ( this ) ; return result ; }

************

************
tgt: public int method_1 ( int i ) { method_2 ( ) ; int var_1 = i ; for ( int j = 0 ; j < ( ( type_1 . method_3 ( var_2 ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue ; var_1 += i * ( method_5 ( j ) ) ; } return ( type_1 . offset ( method_6 ( ) ) ) + var_1 ; }
[0]: public boolean start ( ) { try { var_1 = java.lang.integer.parseint ( var_2. getvalue ( type_1. key ( ) ) ) ; } catch ( type_2 var_3 ) { var_1 = int_1 ; } var_4 = type_3. method_2 ( 1, new type_4 ( string_1 ) ) ; var_4. method_3 ( new type_5 ( ), var_1, var_1, var_5 ) ; return true ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( int_1 , int_2 , int_3 ) ; type_1 var_2 = null ; method_3 ( var_3 . method_4 ( var_1 ) ) . method_5 ( var_1 ) ; java.lang.object var_4 = var_5 . method_6 ( var_2 , var_1 , var_6 class , var_6 class ) ; assertthat ( var_4 , type_3 . method_7 ( var_6 class ) ) ; assertequals ( var_1 , var_4 ) ; method_8 ( var_3 , method_9 ( 1 ) ) . method_4 ( var_1 ) ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { switch ( var_1 ) { case var_3 : boolean var_4 = var_2 == ( var_5 ) ; method_2 ( var_4, false ) ; break ; case var_6 : if ( data!= null ) { java.lang.string var_7 = data. method_3 ( ). getstring ( string_1 ) ; type_1 var_8 = var_9. get ( var_7 ) ; new type_2 ( ). execute ( var_8 ) ; } break ; default : break ; } }

************

************
tgt: public void method_1 ( ) { try { type_1 var_1 = type_2 . method_2 ( ) ; type_4 var_5 = type_2 . method_5 ( type_3 . method_3 ( var_3 ) ) ; var_1 . open ( var_5 ) ; var_1 . start ( ) ; var_1 . method_6 ( var_6 ) ; } catch ( java.lang.exception var_7 ) { java.lang.system.out.println ( string_1 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 var_3 ) { java.util.list < java.util.hashmap > var_4 = var_5. method_2 ( var_2 ) ; type_2 var_6 = var_7. method_3 ( var_1 ) ; java.util.list < type_3 > var_8 = var_9. method_4 ( ) ; var_3. method_5 ( string_1, var_8 ) ; var_3. method_5 ( string_2, var_6 ) ; var_3. method_5 ( string_3, var_2 ) ; var_3. method_5 ( string_4, var_4 ) ; return string_5 ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; if ( var_1 == ( var_3 ) ) { if ( data != null ) { int var_4 = data . method_2 ( ) ; var_4 &= ( var_5 ) | ( var_6 ) ; method_3 ( ) . method_4 ( data . getdata ( ) , var_4 ) ; var_7 . settext ( data . method_5 ( ) ) ; } } }
[0]: public type_1 method_1 ( type_1 result ) { type_2 var_1 = result. method_2 ( ) ; java.util.map var_2 = var_3. get ( ). method_3 ( var_1 ) ; java.util.hashset < type_3 > var_4 = var_3. get ( ). method_4 ( var_2 ) ; result. method_5 ( var_4 ) ; var_5. method_6 ( result ) ; return result ; }

************

************
tgt: public void method_1 ( java.lang.string name , java.lang.string var_1 , int var_2 ) { try { type_1 c = new type_1 ( ) ; c = var_3 . get ( var_1 ) ; c . name = name ; var_4 = var_2 ; var_5 . put ( name , c ) ; } catch ( java.lang.exception var_6 ) { } }
[0]: public type_1 method_1 ( ) { if (! ( method_2 ( ) ) ) { boolean var_1 = method_3 ( var_2 ) ; boolean var_3 = method_3 ( var_4 ) ; if ( var_1 && var_3 ) { var_5 = true ; this. var_6 = true ; } else if ( ( this. var_7 ) > ( var_8 ) ) { var_5 = true ; this. var_6 = true ; } ( this. var_7 ) ++ ; } return this. var_9. method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < ? , ? > var_1 = method_2 ( string_1 , string_2 ) ; type_2 . assertthat ( method_3 ( var_1 ) . size ( ) , type_3 . method_4 ( int_1 ) ) ; type_4 var_2 = method_5 ( string_2 , string_1 , var_1 ) ; method_6 ( var_2 ) ; method_7 ( ) ; method_8 ( var_3 ) ; method_9 ( var_2 ) ; method_7 ( ) ; type_2 . assertthat ( var_4 . method_10 ( ) , method_11 ( not ( method_12 ( string_2 ) ) ) ) ; }
[0]: public int method_1 ( java.lang.string var_1, int var_2 ) { int output = 0 ; switch ( var_1 ) { case string_1 : { output = var_3 [ var_2 ] ; } case string_2 : { output = var_4 [ var_2 ] ; } case string_3 : { output = var_5 [ var_2 ] ; } } return output ; } }

************

************
tgt: private void method_1 ( ) { if ( method_2 ( var_2 ) ) { final type_2 var_3 = method_3 ( ) ; type_3 var_4 = new type_3 ( ) ; var_4 . method_4 ( null , var_2 , var_5 , null ) ; var_4 . show ( var_3 , var_6 ) ; } }
[0]: public void start ( ) throws type_1, type_2 { if ( ( var_1 )!= null ) { return ; } var_1 = new type_3 ( ) ; type_4 var_2 = ( ( type_4 ) ( var_1. method_1 ( var_3. method_2 ( ) ) ) ) ; type_5 var_4 = new type_5 ( var_2 ) ; type_6 var_5 = var_4. method_3 ( new type_7 ( var_6, var_3. method_4 ( ) ) ) ; this. var_7 = new type_8 ( var_5 ) ; method_5 ( ) ; }

************

************
tgt: private static void method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = var_2 . method_2 ( ) ; switch ( var_1 ) { case string_1 : type_1 . method_3 ( ) ; break ; case string_2 : type_1 . method_4 ( ) ; break ; case string_3 : type_1 . method_5 ( ) ; break ; case string_4 : type_1 . method_6 ( ) ; break ; case string_5 : type_1 . method_7 ( ) ; default : type_1 . method_7 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( 1, 0, method_3 ( ) ) ; if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3. setenabled ( false ) ; var_4 [ 1 ] [ 0 ] = method_3 ( ) ; ( var_5 ) ++ ; }

************

************
tgt: public void update ( int x , int y , double var_1 , java.util.arraylist < type_1 > var_2 , java.util.arraylist < type_2 > var_3 ) { if ( ( var_4 ) <= 0 ) { var_5 = true ; } int var_6 = this . x ; int var_7 = this . y ; this . x += x ; this . y += y ; this . var_1 = var_1 ; method_1 ( var_6 , var_7 , var_3 ) ; method_2 ( var_2 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1 ) { return new type_3 ( ). method_2 ( var_1. method_3 ( ) ). method_4 ( var_1. method_5 ( ) ). method_6 ( var_1. method_7 ( ) ). method_8 ( var_1. method_9 ( ) ). method_10 ( var_1. method_11 ( ) ). method_12 ( var_1. method_13 ( ) ). build ( ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { if ( var_1 < ( var_3 . size ( ) ) ) { if ( ( ( ( ( var_2 ) + ( var_3 . get ( var_1 ) . var_4 . size ( ) ) ) - ( var_3 . get ( var_1 ) . var_5 . size ( ) ) ) <= 0 ) || ( ( ( var_6 . size ( ) ) + 1 ) == 1 ) ) { method_2 ( var_1 ) ; } } }
[0]: public type_1 < type_2, type_3 >. var_1 get ( type_2 k ) { if ( ( k!= null ) && ( k. equals ( key ) ) ) { return this ; } if ( ( var_2 ) == null ) { return null ; } return var_2. get ( key ) ; }

************

************
tgt: public type_1 < java.lang.integer > method_1 ( ) { var_1 = var_2 . method_2 ( ) ; type_1 < java.lang.integer > var_3 = new type_1 < > ( ) ; for ( int i = 0 ; i < ( size ) ; i ++ ) { java.lang.integer [ ] var_4 = var_2 . method_3 ( var_1 [ i ] ) ; if ( var_4 == null ) { var_3 . add ( var_1 [ i ] ) ; } } return var_3 ; }
[0]: public void method_1 ( final java.util.map < type_1, type_1 > var_1 ) { for ( final java.util.map.entry < type_1, type_1 > var_2 : var_3. method_2 ( ) ) { assert new java.io.file ( var_2. method_3 ( ) ). method_4 ( ) ; assert new java.io.file ( var_2. getvalue ( ) ). method_4 ( ) ; } this. var_1 = var_1 ; }

************

************
tgt: public static < type_2 , type_1 > type_3 < type_2 > method_1 ( java.lang.string var_1 , type_1 ... var_2 ) { type_4 . method_2 ( var_1 , string_1 ) ; type_4 . method_3 ( var_2 , string_2 ) ; return type_5 . method_1 ( var_1 , type_6 . method_4 ( var_2 ) ) ; }
[0]: private java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( type_2 p : var_2 ) { type_3 obj = new type_3 ( ) ; obj. append ( string_1, p. x ) ; obj. append ( string_2, p. y ) ; obj. append ( string_3, var_3 ) ; obj. append ( string_4, var_4 ) ; var_1. put ( obj ) ; } return var_1. tostring ( ) ; }

************

************
tgt: public static final java.lang.string method_1 ( type_1 var_1 , java.lang.string key , java.lang.string var_2 ) { if ( var_1 == null ) { return var_2 ; } if ( var_3 ) { var_4 . put ( key , var_2 ) ; } return var_1 . method_2 ( key , var_2 ) ; }
[0]: public java.lang.object method_1 ( java.lang.string var_1, java.lang.object var_2 ) { java.lang.string name = ( this. var_3 )? var_1 : var_1. tolowercase ( ) ; type_1 field = this. var_4. get ( var_1 ) ; try { return field. get ( var_2 ) ; } catch ( type_2 var_5 ) { throw new type_3 ( ( ( ( string_1 + ( field. getname ( ) ) ) + string_2 ) + ( var_2. getclass ( ). tostring ( ) ) ), var_5 ) ; } }

************

************
tgt: public boolean method_1 ( ) { for ( type_1 c : var_1 ) if ( c . method_2 ( ) ) { type_2 . method_3 ( null , ( ( ( ( ( string_1 + ( c . method_4 ( ) ) ) + string_2 ) + ( c . method_4 ( ) ) ) + string_3 ) + ( c . method_5 ( ) ) ) ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { double var_1 ; double var_2 ; java.lang.string title ; int var_3 ; values. method_2 ( ) ; var_4. method_2 ( ) ; var_5 = getactivity ( ). method_3 ( ). query ( var_6, null, null, null, null, null ) ; while ( var_5. method_4 ( ) ) { type_1 p = new type_1 ( var_5, getactivity ( ) ) ; values. add ( p ) ; } var_5. method_5 ( ) ; method_6 ( ) ; }

************

************
tgt: private int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 . method_2 ( ) ) > ( var_2 . method_2 ( ) ) ) return 1 ; if ( ( var_1 . method_2 ( ) ) < ( var_2 . method_2 ( ) ) ) return - 1 ; if ( ( var_1 . method_2 ( ) ) == ( var_2 . method_2 ( ) ) ) return 0 ; return 0 ; }
[0]: public java.lang.string execute ( ) { java.lang.string result = var_1 ; try { var_2 = type_1. method_1 ( name, var_3, var_4, var_5, var_6, var_7, var_8 ) ; var_9 = type_1. method_2 ( name, var_3, var_4, var_5, var_6, var_7 ) ; } catch ( type_2 var_10 ) { type_3. error ( var_10. method_3 ( ), var_10. method_4 ( ) ) ; var_11 = new type_4 ( var_10. method_4 ( ) ) ; result = var_12 ; } return result ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( string_1 + string_2 ) + ( id ) ) + string_3 ) + ( name ) ) + char_1 ) + string_4 ) + ( type_1 . tostring ( var_1 ) ) ) + char_2 ; }
[0]: public void method_1 ( type_1 t ) { if ( ( t. method_2 ( ) ) == 0 ) { return ; } if ( ( ( var_1 )!= null ) && ( ( var_1. gettype ( ) )!= null ) ) { try { var_1. method_3 ( new type_2 ( ). method_4 ( t. method_5 ( ), var_1. gettype ( ) ) ) ; } catch ( java.lang.exception var_2 ) { var_1. method_6 ( string_1, string_2 ) ; var_2. method_7 ( ) ; } } } }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( var_2 ) ) { var_1 . method_3 ( var_2 ) ; } else if ( ! ( var_3 . method_6 ( ) ) ) { var_4 = false ; var_5 . method_4 ( var_3 . method_5 ( ) . intvalue ( ) ) ; var_4 = true ; } else { super . method_1 ( ) ; } }
[0]: public void remove ( java.lang.string [ ] var_1 ) { java.lang.string var_2 = var_1 [ 0 ] ; type_1. method_1 ( var_3, ( var_2 + ( var_3. method_2 ( ) ) ) ) ; if ( ( ( var_4 )!= null ) && ( var_4. method_3 ( var_2 ) ) ) { int id = var_4. get ( var_2 ) ; var_4. remove ( var_2 ) ; if ( ( var_5 )!= null ) { var_5. method_4 ( id ) ; } } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_2 ( ) . method_2 ( ) ; type_3 f = var_1 . method_3 ( var_2 ) ; type_4 . method_4 ( var_1 , var_3 ) ; type_3 var_4 = var_1 . method_3 ( var_5 ) ; java.lang.system.out.println ( f ) ; java.lang.system.out.println ( var_4 ) ; java.lang.system.out.println ( var_1 ) ; assertequals ( var_2 , f . getname ( ) ) ; assertequals ( var_5 , var_4 . getname ( ) ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2. get ( var_3 ) ) ; var_4. method_2 ( var_1, to ) ; if ( ( var_5 ) == ( var_3 ) ) { var_6. method_3 ( var_7 ) ; var_6. method_4 ( var_8, var_7 ) ; } ( var_9 ) ++ ; ( var_3 ) ++ ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 , string_1 , var_3 ) . show ( ) ; type_3 var_4 = getintent ( ) . method_3 ( var_5 ) ; if ( var_4 != null ) { if ( var_4 . getboolean ( var_6 ) ) { type_4 . method_4 ( context , var_7 class ) ; } } else { type_4 . method_4 ( context , var_8 class ) ; } method_5 ( ) ; }
[0]: private int method_1 ( java.lang.string date, java.lang.string var_1 ) { boolean var_2 = false ; int min = method_2 ( date, string_1, var_2 ) ; do { var_2 = true ; while (! ( type_1. method_3 ( min, var_3 ). equals ( var_1 ) ) ) { min ++ ; } } while ( min < ( type_2. method_4 ( var_3 ) ) ) ; return min + ( int_1 * int_2 ) ; }

************

************
tgt: public type_1 add ( type_1 var_1 ) { if ( ( ! ( method_1 ( ) ) ) || ( ! ( var_1 . method_1 ( ) ) ) ) { return new type_2 ( ) ; } return new type_2 ( ( ( value ) + ( ( ( type_2 ) ( var_1 ) ) . getvalue ( ) ) ) ) ; }
[0]: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( type_3. getconfig ( ) ) ; return var_1 ; case 1 : return new type_4 ( ) ; default : return null ; } }

************

************
tgt: public void method_1 ( java.util.arraylist < java.lang.integer > var_1 , java.util.arraylist < java.lang.integer > var_2 , int var_3 ) { var_4 = new type_1 ( var_1 ) ; var_5 = new type_1 ( var_2 ) ; var_6 = var_3 ; var_7 = new type_2 ( getcontext ( ) , var_4 , var_5 , var_6 ) ; var_7 . method_2 ( ) ; var_10 = new type_3 ( ) ; var_10 . method_3 ( this , var_8 , var_9 , var_6 , false ) ; method_4 ( ) ; }
[0]: private void method_1 ( java.lang.object source, java.lang.object var_1 ) { type_1. method_2 ( source, string_1 ) ; type_1. method_2 ( source, string_2 ) ; type_1. method_3 ( method_4 ( source ), string_3 ) ; type_1. method_3 ( method_4 ( source ), string_4 ) ; type_1. method_3 ( method_4 ( source ), var_1 ) ; }

************

************
tgt: public int method_1 ( ) throws type_1 { if ( ( var_1 . isempty ( ) ) && ( var_2 . isempty ( ) ) ) return ( ( int ) ( var_3 . method_3 ( null ) ) ) ; return var_3 . method_3 ( method_4 ( 0 , var_1 ) ) ; }
[0]: public java.lang.object method_1 ( type_1 var_1, int position ) { android.view.view var_2 ; var_2 = var_3. method_2 ( var_4, var_1, false ) ; type_2 var_5 = ( ( type_2 ) ( var_2. method_3 ( var_6 ) ) ) ; method_4 ( var_7 [ position ], var_1. getcontext ( ), var_5 ) ; var_1. method_5 ( var_2 ) ; return var_2 ; }

************

************
tgt: private void method_1 ( short var_1 , short var_2 , short var_3 ) { type_1 var_4 = type_2 . method_2 ( ) . method_3 ( ) ; var_4 . method_4 ( ) . method_5 ( var_1 , var_3 , var_2 ) ; var_4 . method_6 ( ) . method_7 ( var_2 , true ) ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ). method_3 ( ). method_4 ( ) ; if ( var_2!= null ) { var_2. method_5 ( ). method_6 ( ). method_7 ( type_4. values ( ) [ var_3. method_8 ( ) ] ) ; } }

************

************
tgt: private static void method_1 ( java.util.properties var_1 ) { var_1 . method_2 ( ) . method_4 ( ( key ) - > { java.lang.string var_2 = type_1 . method_5 ( key ) ; if ( type_2 . method_6 ( var_2 ) ) { var_1 . method_7 ( key , var_2 ) ; } } ) ; }
[0]: public void method_1 ( int data ) { int index = 0 ; while ( index < ( var_1 ) ) { var_2 [ index ]. method_1 ( data ) ; if ( var_2 [ index ]. method_2 ( ) ) { index ++ ; } else { method_3 ( index ) ; } } }

************

************
tgt: public int method_1 ( ) { var_1 = ( var_1 ) - ( int_1 * ( var_2 ) ) ; if ( ( var_1 ) < 0 ) { var_3 = true ; int buf = var_1 ; var_1 = 0 ; return ( var_2 ) + ( buf + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) + string_3 ) + ( var_3 ) ) + string_4 ) + ( var_4 ) ) + string_5 ) + ( var_5 ) ) + string_6 ; }

************

************
tgt: public void start ( type_1 var_1 ) { method_2 ( ) ; var_3 . start ( var_1 ) ; type_3 . method_3 ( ) . method_4 ( new type_4 ( type_5 . method_3 ( ) . method_5 ( ) ) ) ; var_4 . method_6 ( var_5 , var_6 ) ; }
[0]: public boolean method_1 ( type_1 var_1, android.view.view var_2, int var_3, int var_4, long id ) { var_5. method_2 ( var_6. get ( var_3 ). var_7. get ( var_4 ). getid ( ), var_3, var_4 ) ; return false ; }

************

************
tgt: public void method_1 ( byte [ ] data , type_1 var_1 ) { if ( var_1 == null ) { type_2 . method_2 ( string_1 , string_2 ) ; type_3 . method_3 ( data ) ; var_2 . add ( type_3 ) ; var_3 . method_4 ( int_1 ) ; var_4 = new type_4 ( getactivity ( ) , var_5 , var_2 ) ; method_5 ( var_4 ) ; } }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_2 = var_1. split ( var_3. token ) ; if ( ( var_2. length ) == 1 ) { try { throw new java.lang.exception ( string_2 ) ; } catch ( java.lang.exception var_4 ) { var_4. method_2 ( ) ; } } try { method_3 ( ) ; } catch ( type_1 | type_2 var_4 ) { var_4. method_2 ( ) ; } } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 var_3 ) { if ( var_4 . method_2 ( ) ) { var_1 = null ; } if ( ( var_4 . method_3 ( ) ) == false ) { var_1 = null ; } return var_5 . method_4 ( var_1 , var_3 . getname ( ) , var_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; int n ; java.lang.system.out.print ( string_1 ) ; n = var_1. method_1 ( ) ; java.lang.system.out.print ( ( ( ( string_2 + n ) + string_3 ) + ( type_1. method_2 ( n ) ) ) ) ; java.lang.system.out.println ( ) ; }

************

************
tgt: public static void method_1 ( java.lang.exception var_1 , int var_2 ) { java.lang.string var_3 = var_1 . tostring ( ) ; int i = 0 ; for ( type_1 var_4 : var_1 . method_2 ( ) ) { if ( i == var_2 ) { break ; } var_3 += string_1 + ( var_4 . tostring ( ) ) ; i ++ ; } var_1 . method_3 ( ) ; type_2 . method_4 ( string_2 , var_3 ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = var_2. method_2 ( var_3 ) ; if ( var_1. method_3 ( var_4 ) ) { var_5. method_4 ( var_1 ) ; var_2. method_5 ( var_1 ) ; return type_2. tostring ( ) ; } else { return type_3. tostring ( ) ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , int x , int y , int var_2 ) { return ( var_1 . method_2 ( x , y , var_2 ) ) != null ? method_1 ( var_1 . method_2 ( x , y , var_2 ) . method_3 ( ) , x , y , var_2 ) : 0 ; }
[0]: private void method_1 ( ) { try { java.net.url url = new java.net.url ( string_1, var_1, int_1, var_2 ) ; var_3 = ( ( type_1 ) ( url. method_2 ( ) ) ) ; var_3. method_3 ( string_2, string_3 ) ; var_3. method_3 ( string_4, string_3 ) ; var_3. method_4 ( string_5 ) ; var_3. method_5 ( true ) ; var_3. method_6 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_7 ( ) ; } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 , float var_2 ) { java.util.date date = new java.util.date ( ( ( type_3 . method_2 ( ) ) + ( ( long ) ( ( var_3 ) * var_2 ) ) ) ) ; type_4 . method_3 ( string_1 , var_1 , date . tostring ( ) ) ; return type_5 . method_1 ( var_1 , date ) ; }
[0]: private void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( ) ; var_1. method_2 ( string_1 ) ; var_1. method_3 ( string_2 ) ; { try { var_1. method_4 ( string_2. method_5 ( string_3 ) ) ; } catch ( type_3 var_2 ) { var_2. method_6 ( ) ; } } type_4. method_7 ( string_4, ( ( string_2. method_5 ( ) ) + string_5 ) ) ; var_1. update ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = source . method_2 ( ) ; while ( ( ( ( var_2 ) != null ) && ( ( var_2 ) != char_1 ) ) && ( ( var_2 ) != char_2 ) ) { source . method_3 ( ) ; var_1 = source . method_2 ( ) ; } if ( ( var_2 ) == char_1 ) { source . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1, int position ) { type_2 var_2 = var_3. get ( position ) ; java.lang.string var_4 = ( ( java.lang.integer.tostring ( var_2. method_2 ( ) ) ) + string_1 ) + ( java.lang.double. tostring ( var_2. method_3 ( ) ) ) ; var_5. settext ( var_4 ) ; type_3. method_4 ( string_2, var_4 ) ; }

************

************
tgt: public void method_1 ( int i , type_1 [ ] var_1 , byte [ ] var_2 ) { var_3 . method_2 ( type_2 . method_3 ( var_2 , 0 , var_2 . length ) ) ; if ( ( var_4 [ 0 ] ) == ( ( var_5 . size ( ) ) / int_1 ) ) { var_6 . method_4 ( new type_3 ( getcontext ( ) , var_7 , var_5 ) ) ; var_6 . method_5 ( ) ; } ( var_4 [ 0 ] ) ++ ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( ) ) return ; var_1. method_3 ( true ) ; var_1. method_4 ( null ) ; if ( ( var_2. size ( ) ) == 1 ) return ; for ( type_2 var_3 : method_5 ( var_1. getid ( ) ) ) { var_3. method_6 ( var_1. getid ( ) ) ; method_7 ( var_3, var_1. getid ( ) ) ; } }

************

************
tgt: public boolean method_1 ( ) throws java.lang.exception { method_2 ( ) ; method_2 ( string_1 , string_2 , string_3 ) ; method_2 ( 1 , int_1 , int_2 , int_3 ) ; method_2 ( 1 ) ; method_3 ( 1 , null ) ; method_3 ( string_4 , string_5 , null ) ; method_3 ( null , null , null ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { type_1 < java.lang.object, java.lang.string > var_2 = var_3. method_2 ( var_4 ) ; java.util.list < type_2 > var_5 = ( ( java.util.list < type_2 > ) ( var_2. method_3 ( var_1 ) ) ) ; var_6 = var_5 ; var_1 = null ; } else { var_6 = null ; } }

************

************
tgt: public void method_1 ( long id ) { type_1 var_1 = type_2 . method_2 ( ) ; type_1 var_2 = type_2 . method_2 ( ) ; var_1 . put ( string_1 , var_2 ) ; var_2 . put ( string_1 , string_2 ) ; var_1 . put ( string_3 , id ) ; method_3 ( var_1 ) ; }
[0]: public void method_1 ( ) { file. method_2 ( string_1 ) ; type_1 < type_2 > list = var_1. method_3 ( ) ; for ( type_2 var_2 : list ) { java.lang.string var_3 = var_2. method_4 ( ) ; file. method_2 ( ( ( ( ( string_2 + var_3 ) + string_3 ) + var_3 ) + string_4 ) ) ; } }

************

************
tgt: private void method_1 ( ) { try { if ( ! ( var_1 . method_2 ( string_1 ) ) ) { var_1 . method_3 ( string_1 ) ; } type_1 var_2 = new type_2 ( string_2 , string_3 ) ; var_2 . put ( string_4 , string_3 ) ; var_2 . put ( "name" , string_3 ) ; var_1 . method_4 ( string_1 ) . method_5 ( var_2 ) ; } catch ( java.lang.exception var_3 ) { type_3 . method_6 ( ( string_5 + ( var_3 . method_7 ( ) ) ) ) ; } }
[0]: public int getvalue ( type_1 var_1 ) { int var_2 = var_1. method_1 ( ) ; int var_3 ; switch ( var_2 ) { case 0 : var_3 = this. method_2 ( var_4, var_1 ) ; break ; case 1 : var_3 = this. method_2 ( var_5, var_1 ) ; break ; case int_1 : var_3 = this. method_2 ( var_6, var_1 ) ; break ; case int_2 : var_3 = this. method_2 ( var_7, var_1 ) ; break ; default : var_3 = 0 ; } return var_3 ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { final java.util.set < java.lang.string > var_2 = this . var_3 . get ( var_1 ) ; if ( var_2 != null ) { for ( java.lang.string var_4 : var_2 ) { if ( method_2 ( var_4 ) ) { return ( ( method_3 ( ) ) != null ) || ( method_4 ( var_4 ) ) ; } } } return false ; }
[0]: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = new type_2 ( method_3 ( ) ) ; type_3 var_4 = new type_3 ( ) ; var_5 = var_4. method_4 ( var_3. method_5 ( ), var_6, var_7 ) ; var_8 = new type_4 ( this, var_5 ) ; var_1. method_6 ( var_8 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3 . gettext ( ) ; java.lang.string var_4 = new java.lang.string ( var_5 . method_2 ( ) ) ; java.lang.string var_6 = new java.lang.string ( var_7 . method_2 ( ) ) ; boolean var_8 = method_3 ( var_2 , var_4 , var_6 ) ; if ( ! var_8 ) { var_8 = method_3 ( var_2 , var_4 , var_6 ) ; } else { java.lang.string var_9 = ( var_2 + string_1 ) + var_4 ; method_4 ( var_9 ) ; } }
[0]: private android.widget.button method_1 ( ) { android.widget.button var_1 = null ; if ( ( getcontext ( ) )!= null ) { var_1 = ( ( android.widget.button ) ( ( ( type_1 ) ( getcontext ( ) ) ). method_2 ( var_2 ) ) ) ; } return var_1 ; }

************

************
tgt: public static type_1 method_1 ( byte [ ] data ) { if ( ( data == null ) || ( ( data . length ) < int_1 ) ) { return null ; } int var_1 = type_2 . method_2 ( data [ 0 ] ) ; int var_2 = type_2 . method_2 ( data [ 1 ] ) ; byte [ ] var_3 = type_3 . method_3 ( data , int_1 , data . length ) ; return new type_1 ( var_1 , var_2 , new type_4 ( var_3 ) ) ; }
[0]: private java.util.set < java.lang.string > method_1 ( type_1 var_1 ) { java.util.set < java.lang.string > result = new java.util.hashset < > ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < > ( ) ; var_2. add ( var_3 ) ; var_2. add ( var_4 ) ; result. method_2 ( method_3 ( var_1. method_4 ( ) ) ) ; result. method_2 ( method_5 ( var_1. method_6 ( ), var_2 ) ) ; return result ; }

************

************
tgt: public void method_1 ( ) { this . var_1 = true ; int var_2 = ( ( int ) ( ( ( int_1 * ( var_3 [ ( ( this . var_4 ) - 1 ) ] ) ) * ( var_3 [ ( ( this . var_5 ) - 1 ) ] ) ) * ( method_2 ( this . var_6 ) ) ) ) ; type_1 var_7 = type_1 . method_3 ( this . var_8 ) ; int var_9 = var_7 . method_4 ( ) ; var_7 . method_5 ( ( var_9 + var_2 ) ) ; }
[0]: private boolean method_1 ( java.lang.class var_1, type_1 var_2 ) { java.lang.string var_3 = var_2. getname ( ) ; java.lang.class [ ] var_4 = var_2. method_2 ( ) ; java.lang.class var_5 = var_2. method_3 ( ) ; try { type_1 method = var_1. method_4 ( var_3, var_4 ) ; return! ( method. method_3 ( ). equals ( var_5 ) ) ; } catch ( type_2 var_6 ) { } return false ; }

************

************
tgt: private void method_1 ( java.lang.string response ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 ; type_3 var_3 = new type_4 < type_2 > ( ) { } . gettype ( ) ; var_2 = var_1 . method_2 ( response , var_3 ) ; this . method_3 ( var_2 ) ; }
[0]: public static boolean method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( var_1 ) ; if ( ( var_2!= null ) && ( ( var_2. method_3 ( ) ) > 0 ) ) return true ; return ( ( var_3 ) > 0 ) || ( ( type_3. method_4 ( ). size ( ) ) < ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 . method_2 ( var_3 ) ) ) ; if ( var_2 == null ) { var_2 = new type_1 ( ) ; } this . var_4 . method_3 ( ) . method_4 ( var_5 , var_2 . getstring ( var_6 ) ) ; this . var_4 . method_3 ( ) . method_4 ( var_7 , var_2 . getstring ( var_8 ) ) ; }
[0]: public static java.lang.string method_1 ( java.lang.charsequence text, int offset ) { if ( ( ( text. length ( ) ) == 0 ) || ( offset == 0 ) ) return string_1 ; if ( offset > 0 ) { return text. method_2 ( ( offset - 1 ), offset ). tostring ( ) ; } return string_1 ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { if ( ( type_1 . method_2 ( 0 ) . var_1 ) == ( ! true ) ) { type_1 . method_2 ( 0 ) . var_1 = true ; type_1 . method_2 ( 0 ) . method_3 ( ) ; type_1 . method_2 ( 0 ) . var_1 = false ; } } }
[0]: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == true ) { type_1. method_2 ( method_3 ( ). getcolor ( var_2 ) ) ; type_2. method_4 ( int_1 ) ; method_5 ( ) ; } else { type_1. method_2 ( method_3 ( ). getcolor ( var_3 ) ) ; method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { java.lang.string error = null ; if ( error != null ) { response . method_3 ( ( string_2 + error ) ) ; } else { response . method_3 ( string_3 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { int var_1 = method_2 ( ) ; if ( var_1 < 1 ) { return ; } var_2 = type_1. method_3 ( var_1, true ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) throws type_1 { if ( ( this . var_3 [ var_1 ] ) == ( var_4 ) ) { type_2 var_5 ; if ( ( var_2 % int_1 ) == 0 ) { var_5 = var_6 ; } else { var_5 = var_7 ; } if ( method_2 ( var_1 , var_5 ) ) { var_3 [ var_1 ] = var_5 ; method_3 ( var_1 , var_5 ) ; return true ; } } return false ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 var_2 = var_1. method_2 ( this ) ; var_3 = ( ( type_3 ) ( var_2. method_3 ( string_1, new type_3 ( ) ) ) ) ; var_4 = ( ( type_4 ) ( var_2. method_3 ( string_2, var_5 ) ) ) ; var_6 = ( ( type_4 ) ( var_2. method_3 ( string_3, var_7 ) ) ) ; }

************

************
tgt: private java.lang.string method_1 ( ) throws java.io.ioexception { type_1 var_1 = new type_1 ( var_2 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_1 ) ; java.lang.stringbuilder var_4 = new java.lang.stringbuilder ( ) ; java.lang.string line ; do { line = var_3 . method_2 ( ) ; var_4 . append ( line ) ; if ( line . equals ( string_1 ) ) break ; } while ( var_3 . method_3 ( ) ) ; return var_4 . tostring ( ) ; }
[0]: public void method_1 ( boolean show ) { if ( ( var_1 )!= show ) { var_1 = show ; if ( show ) { type_1. method_2 ( method_3 ( ) ) ; } else { type_1. method_4 ( method_3 ( ) ) ; } } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_2 ) { new java.lang.thread ( ( ) - > { try { type_2 . method_2 ( var_3 ) ; } catch ( type_3 var_4 ) { java.lang.system.out.println ( var_4 ) ; } java.lang.system.out.println ( string_1 ) ; var_2 = false ; var_5 . method_3 ( ) ; } ) . start ( ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 view = this. getview ( ) ; if ( view!= null ) { int var_2 = java.lang.integer.parseint ( var_1. method_2 ( string_1 ) ) ; java.util.hashmap var_3 = this. var_4. get ( var_5 ) ; type_3 var_6 = ( ( type_3 ) ( var_3. get ( var_2 ) ) ) ; var_3. remove ( var_2 ) ; view. method_3 ( var_6 ) ; } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) { return var_1 == null ? null : new type_1 ( var_1 . getname ( ) , var_1 . method_2 ( ) , var_1 . method_3 ( ) , var_1 . method_4 ( ) , type_3 . method_5 ( var_1 . method_6 ( ) ) ) ; }
[0]: private void method_1 ( java.lang.string name, type_1 time, int index ) { if ( index < ( ( var_1. length ) - 1 ) ) { method_1 ( names [ ( index + 1 ) ], var_1 [ ( index + 1 ) ], ( index + 1 ) ) ; names [ index ] = name ; var_1 [ index ] = new type_1 ( time ) ; } }

************

************
tgt: public static void main ( final java.lang.string [ ] args ) throws java.lang.exception { java.util.list < type_1 > var_1 = type_2 . method_1 ( ) ; type_2 . method_2 ( string_1 , var_1 ) ; final java.util.list < type_1 > var_2 = type_2 . method_3 ( ) ; type_2 . method_2 ( string_2 , var_2 ) ; }
[0]: public int method_1 ( java.lang.string field, java.lang.string value, java.lang.long id ) { if ( ( field!= null ) && ( value!= null ) ) { try { type_1. method_1 ( field, value, id ) ; } catch ( java.lang.exception var_1 ) { var_1. method_2 ( ) ; } return 1 ; } return 0 ; }

************

************
tgt: public int method_1 ( java.lang.charsequence var_1 ) { int id ; if ( ! ( var_2 . method_2 ( var_1 ) ) ) { id = var_2 . size ( ) ; var_2 . put ( var_1 , id ) ; } else { id = var_2 . get ( var_1 ) ; } return id ; }
[0]: private void method_1 ( java.lang.string title ) { android.view.view view = type_1. method_2 ( getactivity ( ) ). method_3 ( var_1, null ) ; type_2 var_2 = ( ( type_2 ) ( view. method_4 ( var_3 ) ) ) ; var_2. settext ( title ) ; var_4. method_5 ( view ) ; var_4. method_5 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { if ( ( var_3 ) == null ) { type_2 . method_2 ( var_4 , string_1 ) ; return ; } var_1 . method_3 ( ) ; switch ( var_2 ) { case 0 : var_3 . method_4 ( var_5 ) ; break ; case 1 : var_3 . method_4 ( var_6 ) ; break ; case int_1 : var_3 . method_4 ( var_8 ) ; break ; case int_2 : var_3 . method_4 ( var_7 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { try { type_2 var_2 = var_3. method_2 ( string_1 ) ; var_2. method_3 ( 1, var_1. method_4 ( ). method_5 ( ). tostring ( ) ) ; var_2. method_3 ( int_1, var_4. method_6 ( ). method_7 ( ) ) ; var_2. execute ( ) ; var_2. method_8 ( ) ; } catch ( java.lang.exception var_5 ) { var_5. method_9 ( ) ; } }

************

************
tgt: public boolean equals ( java.lang.object obj ) throws java.lang.nullpointerexception { boolean var_1 = false ; if ( obj != null ) { var_1 = ( ( obj . getclass ( ) ) != ( var_2 class ) ) && ( type_1 . equals ( this . var_3 , ( ( type_2 ) ( obj ) ) . method_1 ( ) ) ) ; } return var_1 ; }
[0]: public static void main ( java.lang.string [ ] args ) { double var_1 ; double var_2 ; counter = 0 ; for ( var_1 = 1 ; var_1 <= int_1 ; var_1 ++ ) var_2 = var_1 / float_1 ; java.lang.system.out.println ( ( ( ( var_1 + string_1 ) + var_2 ) + string_2 ) ) ; ( counter ) ++ ; if ( ( counter ) == int_2 ) { counter = 0 ; } } }

************

************
tgt: void method_1 ( type_1 var_1 ) { var_2 = var_1 ; type_2 . assertthat ( var_1 . method_2 ( ) ) . method_3 ( var_3 ) ; type_2 . assertthat ( var_1 . method_4 ( ) . method_6 ( ) . method_7 ( ) ) . method_8 ( string_2 ) ; }
[0]: private void method_1 ( android.content.context context ) { for ( int i = 0 ; i < ( ( var_1 ) * ( var_2 ) ) ; i ++ ) { type_1 var_3 = new type_1 ( context ) ; int var_4 = 0 ; if ( ( i % ( var_1 ) ) == 0 ) { var_3. method_2 ( ( var_4 ++ ) ) ; } var_3. method_3 ( ( i % ( var_1 ) ) ) ; var_5. add ( var_3 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string name , java.lang.object source , java.lang.object target ) { var_1 . method_2 ( ) . method_3 ( ) ; try { var_1 . method_4 ( var_3 , null , name , source , target ) ; } finally { var_1 . method_2 ( ) . method_5 ( ) ; } }
[0]: protected java.lang.string method_1 ( type_1 var_1, long var_2 ) throws java.lang.exception { java.util.list < type_2 > var_3 = type_3. method_2 ( var_2, false, var_4, 0, 1 ) ; if ( ( var_3. size ( ) ) > 0 ) { type_2 var_5 = var_3. get ( 0 ) ; return type_4. method_3 ( var_5, var_1 ) ; } return null ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.util.map < java.lang.string , java.lang.object > values ) { if ( var_1 == null ) return ; type_2 [ ] var_2 = var_1 . value ( ) ; for ( type_2 attribute : var_2 ) { values . put ( attribute . key ( ) , attribute . value ( ) ) ; if ( attribute . method_2 ( ) ) { var_3 . put ( attribute . key ( ) , attribute . value ( ) ) ; } } }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) return false ; boolean var_2 = var_3. remove ( var_1 ) ; if ( var_2 ) { var_4 -= var_1. method_2 ( ) ; var_5 -= var_1. method_3 ( ) ; method_4 ( var_3 ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) { for ( type_1 var_3 : var_4 ) { if ( ! ( var_3 . getname ( ) . method_3 ( var_1 . getname ( ) ) ) ) { var_3 . method_4 ( var_2 ) ; } } }
[0]: public void method_1 ( ) { int var_1 = var_2 ; boolean var_3 = var_4. method_2 ( ) ; if ( ( var_2 = var_4. method_3 ( ) ) < 0 ) { var_2 = var_1 ; return ; } if ( (! var_3 ) && (! ( var_5 ) ) ) { method_4 ( ) ; } }

************

************
tgt: private static < type_1 > java.lang.class < type_1 > [ ] method_1 ( java.lang.object ... var_1 ) { java.lang.class < type_1 > [ ] var_2 = ( ( java.lang.class < type_1 > [ ] ) ( type_2 . method_2 ( var_3 class , var_1 . length ) ) ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_2 [ i ] = ( ( java.lang.class < type_1 > ) ( var_1 [ i ] . getclass ( ) ) ) ; } return var_2 ; }
[0]: public type_1 method_1 ( ) { final java.util.list < type_2 > var_1 = var_2. method_1 ( ) ; final java.util.list < type_3 > var_3 = new java.util.arraylist < > ( ) ; for ( final type_2 type_4 : var_1 ) { final type_3 var_4 = var_5. method_2 ( type_4 ) ; var_3. add ( var_4 ) ; } return type_1. method_3 ( ). method_4 ( var_3. get ( 0 ) ). build ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_3 ( string_1 ) ; var_1 = new type_1 ( ) ; var_1 . method_5 ( var_2 ) ; type_2 var_3 = new type_2 ( ) ; var_3 . method_6 ( var_1 ) ; java.util.map < java.lang.class < ? extends type_3 > , type_4 > var_4 = new java.util.hashmap < java.lang.class < ? extends type_3 > , type_4 > ( ) ; var_4 . put ( var_5 class , var_3 ) ; var_1 . method_7 ( var_4 ) ; }
[0]: public void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2. method_2 ( ) ) ) ; java.lang.string var_3 = ( ( java.lang.string ) ( var_2. method_2 ( ) ) ) ; if ( var_3. equals ( string_1 ) ) { type_2. method_3 ( string_2, string_3 ) ; } else if ( var_3. equals ( string_4 ) ) { type_2. method_3 ( string_2, string_5 ) ; } else { type_2. method_3 ( string_2, string_6 ) ; } if ( ( var_1 )!= null ) var_1. start ( ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { if ( ( null == ( var_4 ) ) || ( var_5 ) ) { var_4 = method_2 ( var_1 , var_2 , var_3 ) ; } var_6 = type_4 . method_3 ( this , var_4 ) ; return var_4 ; }
[0]: public void method_1 ( ) { java.lang.string text = ( string_1 + ( var_1 ) ) + string_2 ; type_1 var_2 = ( ( type_1 ) ( var_3. method_2 ( text ) ) ) ; type_2. assertthat ( var_4, type_3. method_3 ( type_4. method_4 ( var_5 ) ) ) ; }

************

************
tgt: void method_1 ( java.lang.string op , boolean var_1 ) { if ( var_1 ) { if ( ( ( method_2 ( ) ) != char_1 ) && ( ( op . method_3 ( 0 ) ) != char_2 ) ) { append ( string_1 ) ; } append ( op ) ; append ( string_1 ) ; } else { append ( op ) ; } }
[0]: public void method_1 ( type_1 key, type_2 < type_3 > values, type_4 context ) { var_1. method_2 ( key. tostring ( ), new type_5 ( ) ) ; type_5 var_2 = var_1. get ( key. tostring ( ) ) ; for ( type_3 var_3 : values ) { if ( var_3. get ( ) ) { var_2. method_3 ( ) ; } else { var_2. method_4 ( ) ; } } }

************

************
tgt: private static void method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = type_1 . method_2 ( var_1 ) ; java.lang.string var_3 = type_1 . method_3 ( var_1 ) ; java.lang.string var_4 = type_1 . method_4 ( var_3 ) ; type_2 var_5 = new type_2 ( var_3 , var_2 ) ; var_5 . method_5 ( ) ; var_5 . method_6 ( ) ; type_3 var_6 = new type_3 ( var_4 , var_2 ) ; }
[0]: public type_1 method_1 ( boolean var_1 ) { if ( var_1 || ( ( var_2 ) == null ) ) { java.lang.string var_3 = this. method_2 ( var_4 ) ; if ( method_3 ( var_3 ) ) { var_5 = new type_1 ( var_3 ) ; } else { var_5 = null ; throw new type_2 ( java.lang.string.format ( string_1, var_4, var_3 ) ) ; } } return var_5 ; }

************

************
tgt: public int method_1 ( java.lang.string id ) { int counter = - 1 ; java.lang.string var_1 = type_1 . method_2 ( id ) ; try { counter = java.lang.integer.parseint ( new type_2 ( ) . execute ( string_1 , var_1 ) . get ( ) . trim ( ) ) ; } catch ( type_3 var_2 ) { var_2 . method_3 ( ) ; } catch ( type_4 var_2 ) { var_2 . method_3 ( ) ; } return counter ; }
[0]: public void method_1 ( type_1 var_1, java.util.list < type_2 > var_2, java.util.list < type_1 > var_3 ) { var_4. method_2 ( null ) ; var_4 = var_1 ; if ( ( var_1. method_3 ( ) )!= null ) { this. var_5 = var_4. method_3 ( ). method_4 ( ) ; } var_4. method_2 ( this ) ; var_4. method_5 ( var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { final type_3 var_1 = method_2 ( ) ; final type_4 var_2 = var_1 . method_3 ( ) ; final type_6 var_4 = var_2 . method_4 ( ) . get ( 0 ) . method_5 ( ) ; final java.lang.double var_5 = method_6 ( ) . method_7 ( var_4 ) ; type_5 . assertequals ( ( - float_1 ) , var_5 , var_6 ) ; }
[0]: public void method_1 ( java.lang.string response ) { super. method_1 ( response ) ; if ( type_1. isempty ( response ) ) return ; type_2 var_1 = new type_3 ( ). method_2 ( response, var_2 class ) ; if ( ( var_1. id ) == 1 ) { method_3 ( ) ; var_3. method_4 ( var_4 ) ; } else type_4. method_5 ( context, var_1. msg ) ; }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = type_2 . method_2 ( context ) ; var_1 . show ( ) ; type_3 . get ( ) . method_5 ( new type_4 ( ) { public void method_6 ( ) { var_1 . method_7 ( ) ; } } ) ; }
[0]: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 data : var_2 ) { if ( var_3. contains ( data ) ) { type_1 temp = var_3. get ( var_3. method_2 ( data ) ) ; method_3 ( temp ) ; var_1. add ( var_3. get ( var_3. method_2 ( data ) ) ) ; continue ; } return var_1 ; } return var_1 ; }

************

************
tgt: private void method_1 ( int var_1 , android.content.intent var_2 ) { if ( var_1 == ( var_3 ) ) { type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; var_6 = var_7 . method_3 ( ) ; type_2 . method_4 ( var_6 , this , var_4 ) ; } else { var_7 = null ; var_6 = null ; type_3 . method_5 ( this , string_1 , var_8 ) . show ( ) ; } }
[0]: public static void method_1 ( ) { type_1. method_2 ( ) ; type_1. method_3 ( ) ; method_4 ( var_1, var_2, string_1, string_2 ) ; method_5 ( var_1, var_3, string_1 ) ; method_5 ( var_4, var_3, string_3 ) ; method_4 ( var_4, var_5, string_4 ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 ) { method_2 ( var_2 , var_1 ) ; method_2 ( var_3 , var_1 ) ; method_2 ( var_4 , var_1 ) ; method_2 ( var_5 , var_1 ) ; method_2 ( var_6 , var_1 ) ; type_1 node = new type_1 ( string_2 , string_3 ) ; node . method_3 ( string_4 , string_5 ) ; node . method_3 ( string_6 , ( string_7 + ( var_1 . method_4 ( ) ) ) ) ; method_5 ( string_8 , node ) ; }
[0]: public void method_1 ( ) { int var_1 = int_1 ; int var_2 = int_2 ; var_3. method_2 ( var_3. method_3 ( ). get ( 0 ) ) ; var_3. method_4 ( var_2 ) ; var_3. method_5 ( var_1 ) ; var_3. method_6 ( ) ; type_1. assertequals ( var_3. method_3 ( ). get ( 0 ), var_3. method_7 ( ) ) ; int var_4 = var_3. method_8 ( ) ; type_1. assertequals ( ( var_1 * int_3 ), var_4 ) ; }

************

************
tgt: public void method_1 ( java.util.map < java.lang.string , java.lang.string > result ) { int var_1 = java.lang.integer.parseint ( result . get ( string_1 ) ) ; int out = java.lang.integer.parseint ( result . get ( string_2 ) ) ; var_2 = var_1 + out ; java.lang.system.out.println ( ( ( ( ( ( var_3 ) + string_3 ) + ( label ) ) + string_4 ) + ( var_2 ) ) ) ; var_4 . update ( var_2 ) ; }
[0]: public final java.util.map < java.lang.string, java.lang.object > method_1 ( ) { final java.util.map < java.lang.string, java.lang.object > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( var_2, method_2 ( ) ) ; var_1. put ( var_3, method_3 ( ) ) ; var_1. put ( var_4, method_4 ( ) ) ; var_1. put ( var_5, var_6. method_5 ( ) ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return ; } java.lang.string var_2 = var_1 . method_2 ( ) ; if ( var_2 != null ) { type_1 var_3 = method_3 ( var_2 ) ; if ( var_3 != null ) var_3 . method_4 ( var_1 ) ; } var_4 . remove ( var_1 . method_5 ( ) ) ; var_5 . remove ( var_1 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = var_3. result ( var_1, string_1, string_1, string_1 ) ; assertequals ( string_2, var_2. method_2 ( ) ) ; assertequals ( null, var_2. method_3 ( ). get ( string_3 ) ) ; assertequals ( string_1, var_2. method_3 ( ). get ( string_4 ) ) ; }

************

************
tgt: private type_1 method_1 ( long start , long end , java.lang.string title ) { java.util.calendar starttime = java.util.calendar.getinstance ( ) ; java.util.calendar endtime = java.util.calendar.getinstance ( ) ; starttime . method_2 ( start ) ; endtime . method_2 ( end ) ; type_1 event = new type_1 ( counter , method_3 ( starttime , title ) , starttime , endtime ) ; event . method_4 ( method_5 ( ) . getcolor ( var_1 ) ) ; var_2 . method_6 ( ) ; return event ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; var_4 = new type_2 ( this, this, var_3. get ( var_5 ), var_3. get ( var_6 ), var_3. get ( var_7 ) ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; }

************

************
tgt: public double method_1 ( type_1 var_1 ) { if ( ( this . compareto ( var_1 ) ) == 0 ) { return var_2 ; } if ( ( this . x ) == ( var_1 . x ) ) { return var_3 ; } if ( ( this . y ) == ( var_1 . y ) ) { return 0 ; } return ( ( double ) ( ( var_1 . y ) - ( this . y ) ) ) / ( ( var_1 . x ) - ( this . x ) ) ; }
[0]: private void method_1 ( boolean var_1, boolean var_2, boolean var_3, boolean var_4 ) { boolean update = var_4 ; if ( var_1 ) { update |= method_2 ( var_5 ) ; update |= method_3 ( ) ; } if ( var_2 ) update |= method_4 ( ) ; if ( var_3 ) update |= method_5 ( ) ; if ( update ) { var_6. method_6 ( ). method_7 ( new type_1 ( ) { public void method_8 ( ) { var_6. method_9 ( ) ; } } ) ; } } }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view view = var_1 . method_2 ( var_4 , var_2 , false ) ; type_4 . method_4 ( ) . method_5 ( new type_5 ( ) { public void method_6 ( ) { var_5 . method_7 ( ) ; } } ) ; return view ; }
[0]: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = ( ( type_2 ) ( var_3. method_2 ( ). method_3 ( ). method_4 ( ) ) ) ; var_2. method_5 ( ). method_6 ( new type_3 ( ) { protected void method_7 ( type_4 var_4 ) { var_1. method_8 ( ( ( method_9 ( ) ) == null ) ) ; } } ) ; }

************

************
tgt: private void method_1 ( float var_1 , float height ) { var_2 . method_2 ( var_1 , height ) ; var_3 . method_2 ( var_1 , height ) ; var_4 . method_2 ( var_1 , height ) ; float var_5 = method_3 ( ) ; float var_6 = method_4 ( ) ; var_2 . method_5 ( var_5 , ( var_6 - height ) ) ; var_3 . method_5 ( var_5 , ( var_6 + height ) ) ; var_4 . method_5 ( var_5 , var_6 ) ; }
[0]: private void init ( ) { method_1 ( ) ; var_1. method_2 ( var_2. method_3 ( ) ) ; var_3 = new type_1 ( var_4, var_5 ) ; var_6 = new type_2 ( int_1, int_2, var_3 ) ; method_4 ( ) ; var_7. method_5 ( new type_3 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 . method_2 ( ) . method_3 ( type_2 . method_4 ( ) , ( string_1 + ( var_1 . getname ( ) ) ) ) ; method_6 ( var_1 , string_2 ) ; method_6 ( var_1 , var_2 ) ; }
[0]: public static type_1 method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; type_2 var_3 = type_3. method_2 ( var_4 class ) ; method_3 ( var_1. method_4 ( type_4. method_5 ( ), type_4. method_5 ( ) ) ). method_6 ( var_3 ) ; return var_1 ; }

************

************
tgt: public java.lang.object method_1 ( int var_1 , int var_2 , int var_3 ) throws java.io.ioexception , type_4 { java.util.calendar var_6 = type_5 . method_2 ( var_1 , var_2 , var_3 ) ; type_6 var_7 = type_5 . method_3 ( var_6 ) ; return new java.util.hashmap < > ( ) ; }
[0]: public int method_1 ( ) { final int var_1 = int_1 ; int var_2 = 1 ; var_2 = ( var_1 * var_2 ) + ( ( var_3 ) == null? 0 : var_3. method_1 ( ) ) ; var_2 = ( var_1 * var_2 ) + ( ( data ) == null? 0 : data. method_1 ( ) ) ; var_2 = ( var_1 * var_2 ) + ( ( var_4 ) == null? 0 : var_4. method_1 ( ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 event ) throws java.io.ioexception { java.lang.system.out.println ( string_1 ) ; int i ; try { i = java.lang.integer.parseint ( var_1 . gettext ( ) ) ; } catch ( java.lang.exception var_2 ) { return ; } method_3 ( ) ; method_5 ( i ) ; method_4 ( i ) ; method_2 ( ) ; }
[0]: public java.lang.string gettext ( type_1 var_1 ) { if ( ( ( var_2 )!= null ) && (! ( var_2. isempty ( ) ) ) ) { return var_2 ; } if ( ( var_3. length ( ) ) > 0 ) { return ( var_3 ) + string_1 ; } else { return ( string_2 + ( var_1. method_1 ( ). get ( 0 ). method_2 ( ) ) ) + string_1 ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 = new type_1 ( var_2 ) ; java.lang.system.out.println ( ( ( string_1 + ( var_2 ) ) + string_2 ) ) ; while ( true ) { type_2 var_3 = var_1 . method_2 ( ) ; type_3 type_4 = new type_3 ( var_3 , var_4 , this ) ; var_5 . method_3 ( type_4 ) ; java.lang.system.out.println ( string_3 ) ; } } catch ( java.io.ioexception var_6 ) { var_6 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = type_2. method_3 ( this ) ; var_4 = var_3. method_4 ( int_1 ) ; java.util.list < type_3 > var_5 = new java.util.arraylist < type_3 > ( ) ; this. var_6 = new type_4 ( this, var_7, var_5 ) ; method_5 ( var_6 ) ; android.content.intent intent = getintent ( ) ; method_6 ( intent ) ; }

************

************
tgt: private boolean method_1 ( ) { if ( ( ( method_2 ( ( ( var_1 ) - 1 ) ) ) < 0 ) && ( ( var_2 ) == int_1 ) ) { java.lang.system.out.println ( string_1 ) ; var_2 = 0 ; return true ; } var_2 = 0 ; if ( ( ( method_2 ( ( ( var_1 ) - 1 ) ) ) < 0 ) && ( ( var_2 ) == int_2 ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = 0 ; return true ; } var_2 = 0 ; return false ; }
[0]: public int method_1 ( java.lang.string name ) { type_1 var_1 = this. method_2 ( ) ; type_2 values = new type_2 ( ) ; values. put ( ""name"", name ) ; try { var_1. method_3 ( string_1, null, values ) ; } catch ( type_3 var_2 ) { return 1 ; } var_1. method_4 ( ) ; return 0 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { var_3 , var_4 } ; int [ ] var_5 = new int [ ] { var_6 , var_7 } ; int var_8 ; if ( var_9 ) var_8 = var_10 ; else var_8 = var_11 ; type_1 var_12 = new type_1 ( var_13 , var_8 , var_1 , var_2 , var_5 ) ; return var_12 ; }
[0]: public void method_1 ( type_1 event ) { type_2 data = ( ( type_2 ) ( type_3. method_2 ( ). get ( ( ( long ) ( var_1. method_3 ( ) ) ), true ) ) ) ; if ( data == null ) { var_2 = new type_4 ( var_1, var_3. method_4 ( ) ) ; var_2. execute ( ) ; } else { var_4. method_5 ( new type_5 ( var_5, var_1, var_3. method_4 ( ) ) ) ; } }

************

************
tgt: public void method_6 ( ) throws java.lang.exception { type_1 var_1 = method_1 ( var_2 class ) ; method_2 ( var_1 ) . method_3 ( var_3 ) . method_4 ( ) ; var_3 . method_6 ( ) ; method_5 ( var_3 ) . method_4 ( ) ; method_5 ( var_1 ) . method_6 ( ) ; }
[0]: public static < type_1 extends type_2 > void method_1 ( type_1 [ ] var_1 ) { java.lang.string var_2 = string_1 ; for ( type_1 var_3 : var_1 ) { type_3. method_1 ( var_2 ) ; type_3. method_1 ( var_3 ) ; var_2 = string_2 ; } var_2 = ( var_2. equals ( string_1 ) )? string_3 : string_4 ; type_3. method_1 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { double var_2 = method_2 ( var_1 ) ; double sum = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { double a = ( ( var_3 ) * ( var_4 ) ) * ( ( var_1 . position [ i ] ) - ( position [ i ] ) ) ; var_5 [ i ] += a / ( ( var_2 * var_2 ) * var_2 ) ; sum += var_5 [ i ] ; } }
[0]: public void execute ( java.lang.string var_1, java.lang.string var_2 ) { type_1. method_1 ( string_1, var_2 ) ; type_2 var_3 = new type_2 ( ) ; var_3. method_2 ( new java.lang.string [ ] { string_2, var_1 }, var_2, type_1. out, var_4 ) ; }

************

************
tgt: private void method_1 ( ) { int sum = method_2 ( ) ; for ( int var_1 = 0 ; var_1 < ( method_3 ( ) . size ( ) ) ; var_1 ++ ) { type_1 var_2 = method_3 ( ) . get ( var_1 ) ; float var_3 = type_2 . method_4 ( ( ( ( var_4 ) / sum ) * ( var_5 ) ) ) ; if ( var_3 < 1 ) { var_6 . remove ( var_2 ) ; } } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > value = null ; type_1 var_2 = type_2. method_2 ( ) ; type_1 var_3 = type_2. method_2 ( ) ; value. add ( var_2 ) ; value. add ( var_3 ) ; return value ; }

************

************
tgt: private boolean method_1 ( ) { var_1 = var_2 . method_2 ( ) . method_3 ( ) . method_4 ( var_3 ) ; if ( null == ( var_1 ) ) { var_1 = new type_1 ( ) ; var_4 = var_3 ; var_5 = getintent ( ) . method_5 ( var_6 ) ; if ( type_2 . isempty ( var_5 ) ) { var_5 = var_3 ; } var_7 = getintent ( ) . method_5 ( var_8 ) ; return true ; } return false ; }
[0]: protected void method_1 ( java.lang.charsequence var_1, type_1 results ) { type_2. method_2 ( string_1, ( ( var_1 + string_2 ) + ( results. count ) ) ) ; var_2 = ( ( java.util.list < type_3 > ) ( results. values ) ) ; if ( 0 < ( results. count ) ) { method_3 ( ) ; } else { method_4 ( ) ; } var_3. method_5 ( results. count ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_1 . method_2 ( ) ) ; i ++ ) { this . var_2 . method_5 ( ( i + 1 ) , var_1 . method_4 ( i ) ) ; } if ( ( this . var_4 ) != null ) this . var_3 . method_5 ( 0 , type_2 . method_6 ( ) . method_7 ( this . var_4 , this . var_2 . method_8 ( ) ) ) ; }
[0]: public int method_1 ( final int var_1, final java.lang.string var_2 ) { int var_3 = 0 ; for ( int i = 0 ; i < ( var_4. method_2 ( var_1 ) ) ; i ++ ) { if ( ( ( var_4. method_3 ( var_1, i ) )!= null ) && ( ( var_4. method_3 ( var_1, i ). tostring ( ) ) == var_2 ) ) { var_3 ++ ; } } return var_3 ; }

************

************
tgt: private double method_1 ( java.util.hashmap < java.lang.string , java.lang.double > var_1 ) { double result = 0.0 ; for ( java.lang.string key : var_1 . method_2 ( ) ) { double temp = var_1 . get ( key ) ; result += temp * temp ; } return type_1 . method_3 ( result ) ; }
[0]: protected void method_1 ( ) throws java.lang.exception { if ( var_1. method_2 ( 1, var_2, var_3 ) ) { throw new type_1 ( ) ; } java.lang.integer key = method_3 ( var_4 ) ; type_2 f = ( ( type_2 ) ( var_5. method_4 ( key, key ) ) ) ; f. method_5 ( this ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_3 ) != null ) { android.content.intent i = new android.content.intent ( ) ; i . method_2 ( var_1 ) ; i . method_3 ( var_2 , var_3 ) ; i . method_3 ( var_4 , var_5 ) ; type_1 . method_4 ( method_5 ( ) ) . method_6 ( i ) ; } }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { type_2 var_2 = new type_2 ( ) ; for ( type_1 var_3 : var_1 ) { if ( ( var_4 ) == ( var_5 ) ) var_2. method_2 ( var_6 ) ; else if ( ( var_4 ) == ( var_7 ) ) var_2. method_2 ( var_8 ) ; } method_3 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 , var_3 , var_4 ) ; type_1 var_5 = var_1 . method_2 ( var_2 , var_6 , var_7 ) ; var_1 . method_3 ( var_2 , var_5 ) ; type_2 . assertequals ( 1 , var_2 . method_4 ( ) . size ( ) ) ; type_2 . assertequals ( var_4 , var_2 . method_5 ( ) . method_6 ( ) ) ; type_2 . asserttrue ( var_2 . method_5 ( ) . method_8 ( ) ) ; }
[0]: private void method_1 ( java.lang.long var_1 ) { try { int var_2 = var_3. method_2 ( var_1 ) ; var_3. method_3 ( var_1, ( var_2 + 1 ) ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( string_1, var_4 ) ; } }

************

************
tgt: public void start ( ) { if ( ! ( var_1 ) ) { type_1 . i ( var_2 , string_1 ) ; var_1 = true ; var_4 . method_2 ( new type_4 ( ) { public void method_3 ( ) { method_4 ( ) ; } } ) ; } }
[0]: public void add ( int index, long element ) { method_1 ( index ) ; method_2 ( 1 ) ; type_1. method_3 ( array, index, array, ( index + 1 ), ( ( end ) - index ) ) ; array [ index ] = element ; method_2 ( index ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) != null ) && ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( ) ; } if ( ( var_2 ) != null ) { var_2 . method_4 ( var_3 ) ; } var_3 = null ; var_2 = null ; view = null ; var_1 = null ; }
[0]: private type_1 method_1 ( type_2 var_1, java.util.collection < type_2 > var_2 ) { type_1 var_3 = type_1. method_2 ( var_1, new type_2 ( 1, 1, 1 ) ) ; for ( type_2 var_4 : var_2 ) { var_3. method_3 ( var_4 ) ; } return var_3 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int i ) throws type_3 { try { return new type_1 ( var_1 . getint ( "id" ) , var_1 . getstring ( string_1 ) , var_1 . getstring ( string_2 ) , var_1 . getstring ( string_3 ) , var_1 . getstring ( string_4 ) , var_1 . getstring ( string_5 ) , var_1 . getstring ( string_6 ) , var_1 . getstring ( string_7 ) ) ; } catch ( type_3 var_2 ) { throw new type_4 ( var_2 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string path ) { if ( ( var_1 ) == null ) { return path ; } for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] [ 0 ]. equals ( path ) ) || ( new java.lang.string ( ( ( var_1 [ i ] [ 0 ] ) + string_1 ) ). equals ( path ) ) ) { return var_1 [ i ] [ 1 ] ; } } return path ; } return null ; }

************

************
tgt: private boolean method_1 ( java.util.list < type_1 > var_1 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_1 var_2 = var_1 . get ( i ) ; if ( var_2 . method_2 ( ) ) { return true ; } } return false ; }
[0]: public java.util.list < type_1 > method_1 ( ) { type_1 [ ] var_1 = ( ( type_1 [ ] ) ( this. var_2. method_2 ( new type_1 [ 0 ] ) ) ) ; java.util.list < type_1 > list = new java.util.arraylist < > ( var_1. length ) ; for ( type_1 var_3 : var_1 ) { list. add ( var_3 ) ; } return list ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_1 status , java.util.scanner var_2 ) { java.lang.system.out.println ( string_1 ) ; status = var_3 ; method_2 ( var_1 , status ) ; var_4 = method_3 ( ) ; java.lang.system.out.println ( ( string_2 + ( var_4 ) ) ) ; while ( ( var_4 ) != 0 ) { method_4 ( var_1 , status , var_2 ) ; ( var_4 ) -- ; method_2 ( var_1 , status ) ; } return status ; }
[0]: public void method_1 ( ) throws java.io.ioexception { var_1. method_2 ( this. var_2 ) ; var_1. method_3 ( ) ; if ( ( this. state ) == ( var_3 ) ) { this. var_4. method_4 ( this. var_5. method_5 ( ) ) ; this. var_4. method_6 ( ) ; this. var_5. method_6 ( ) ; if ( this. var_6 ) { this. method_7 ( ) ; this. var_6 = false ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.list < type_2 > list = var_1 . method_2 ( ) ; for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { if ( ! ( this . var_2 . method_3 ( list . get ( i ) , true ) ) ) { this . var_3 . add ( list . get ( i ) ) ; this . var_1 . add ( list . get ( i ) . method_5 ( ) . title ) ; } } }
[0]: public void method_1 ( android.content.context var_1, java.lang.string var_2 ) { if ( ( var_2 == null ) || ( var_2. equals ( string_1 ) ) ) { method_1 ( var_1 ) ; return ; } java.lang.string var_3 = this. method_2 ( var_1 ) ; if ( var_3. startswith ( var_2 ) ) { return ; } java.lang.string var_4 = var_2 + ( type_1. method_3 ( var_1 ) ) ; method_4 ( var_1, var_4 ) ; }

************

************
tgt: public int method_1 ( ) { int result = ( ( var_1 ) != null ) ? var_1 . method_1 ( ) : 0 ; result = ( int_1 * result ) + ( ( var_2 ) != null ? var_2 . method_1 ( ) : 0 ) ; return result ; }
[0]: public static int method_1 ( type_1 var_1, int var_2, int var_3 ) { final int height = var_4 ; final int var_5 = var_6 ; int var_7 = 1 ; if ( ( height > var_3 ) || ( var_5 > var_2 ) ) { final int var_8 = height / int_1 ; final int var_9 = var_5 / int_1 ; while ( ( ( var_8 / var_7 ) > var_3 ) && ( ( var_9 / var_7 ) > var_2 ) ) { var_7 *= int_1 ; } } return var_7 ; } return 0 ; }

************

************
tgt: public boolean method_1 ( android.view.view var_1 , type_1 event ) { switch ( event . method_2 ( ) ) { case var_2 : this . x = event . method_3 ( ) ; this . y = event . method_4 ( ) ; return true ; case var_3 : this . method_5 ( event . method_3 ( ) , event . method_4 ( ) ) ; return true ; default : return false ; } }
[0]: public void method_1 ( int var_1, int var_2 ) { this. var_1 = var_1 + ( var_2 / int_1 ) ; this. var_2 = var_2 % int_1 ; this. settext ( java.lang.string.format ( string_1, this. var_1, this. var_2 ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , boolean var_2 , type_1 var_3 ) { if ( var_1 == ( - 1 ) ) return ; if ( ( var_4 ) == null ) var_4 = type_2 . method_2 ( int_1 ) ; var_4 . method_3 ( ) ; var_3 . get ( var_4 ) ; method_5 ( var_1 , var_2 , var_4 ) ; }
[0]: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return type_2. method_2 ( ) ; case 1 : return type_3. method_2 ( ) ; case int_1 : return type_4. method_2 ( ) ; case int_2 : return type_5. method_2 ( ) ; default : return type_6. method_2 ( ( position + 1 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 > list , type_3 var_1 ) { type_1 < java.lang.string > var_2 = new type_4 < > ( ) ; if ( var_1 == null ) { type_5 . method_2 ( list ) ; for ( type_2 var_3 : list ) { if ( var_2 . contains ( var_3 . method_3 ( ) ) ) { } else { var_2 . add ( var_3 . method_3 ( ) ) ; } } } listener . method_4 ( var_2 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1 ) throws type_3 { java.lang.string var_2 = type_4. method_2 ( var_1 ) ; if ( var_2. method_3 ( string_1 ) ) return var_3 ; java.lang.string var_4 = type_4. method_4 ( var_1 ) ; if ( ( var_2. method_3 ( string_2 ) ) || ( var_4. equals ( string_3 ) ) ) return var_5 ; if ( var_2. method_3 ( string_4 ) ) return var_6 ; type_5. method_5 ( var_1 ) ; return var_7 ; }

************

************
tgt: public void method_1 ( type_1 message ) { java.lang.string var_1 = message . method_2 ( ) ; java.lang.string var_2 = message . method_3 ( ) ; java.lang.long var_3 = message . method_5 ( ) ; final type_3 var_4 = new type_3 ( var_3 , var_2 , var_1 ) ; new java.lang.thread ( new type_4 ( ) { public void method_6 ( ) { var_5 . method_7 ( type_5 . method_8 ( var_4 ) ) ; } } ) . start ( ) ; }
[0]: public void method_1 ( type_1 status, java.lang.string message, type_2 var_1 ) { method_2 ( ) ; if ( status == ( var_2 ) ) { method_3 ( message ) ; return ; } if ( ( status == ( var_3 ) ) && ( var_4. method_4 ( var_1 ) ) ) { var_5. method_5 ( type_3. method_6 ( ). method_7 ( ) ) ; } else { message = var_4. method_8 ( message ) ; var_5. method_9 ( message ) ; } }

************

************
tgt: private void method_1 ( ) { int counter = int_1 ; while ( counter != 0 ) { type_1 [ ] var_1 = method_2 ( ) ; if ( var_1 != null ) { for ( type_1 p : var_1 ) { var_2 . method_3 ( p ) . method_4 ( int_2 ) ; } counter -- ; } } }
[0]: public void method_1 ( int var_1, int var_2, java.lang.object... var_3 ) { switch ( var_1 ) { case var_4 : if ( var_2 == ( var_5 ) ) { type_1. method_2 ( ). method_3 ( ( ( java.lang.string ) ( var_3 [ 0 ] ) ) ) ; } break ; case var_6 : if ( var_2 == ( var_5 ) ) { type_2. method_4 ( ). method_5 ( ) ; method_6 ( ) ; } } } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string result = string_1 ; java.util.list < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : this . method_2 ( ) ) { if ( var_2 != null ) var_1 . add ( var_2 . method_1 ( ) ) ; } result = java.lang.string . method_3 ( string_2 , var_1 ) ; return result ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, type_1 var_2, type_2 var_3 ) { type_3. method_2 ( string_1, var_2. method_3 ( ) ) ; boolean var_4 = var_5. method_4 ( var_2. method_3 ( ) ) ; type_3. method_2 ( string_2, var_4 ) ; var_3. method_5 ( string_3, string_4 ) ; return string_5 ; }

************

************
tgt: private java.lang.integer [ ] method_1 ( java.lang.string var_1 , type_1 var_2 ) { java.lang.integer [ ] var_3 = type_2 . method_2 ( var_1 . split ( "\n" ) ) ; type_2 . method_3 ( type_2 . method_4 ( var_3 , var_4 ) , var_2 , var_3 ) ; return var_3 ; }
[0]: private void method_1 ( ) { java.lang.string [ ] var_1 = ( ( java.lang.string [ ] ) ( type_1. method_2 ( var_2, type_2. tostring ( ), var_3 ) ) ) ; if ( var_1!= null ) { for ( java.lang.string var_4 : var_1 ) { type_3 var_5 = new type_3 ( var_4 ) ; type_4. method_3 ( var_4, var_5 ) ; } } }

************

************
tgt: public type_1 method_1 ( boolean var_1 , int var_2 ) throws type_2 { type_3 result = ( ( type_3 ) ( var_3 . method_1 ( var_1 , var_2 ) ) ) ; var_4 . add ( result ) ; result . method_2 ( this ) ; return result ; }
[0]: public int [ ] method_1 ( int id ) { int [ ] var_1 = new int [ int_1 ] ; java.lang.string result = string_1 ; int counter = 0 ; while ( ( var_2. method_2 ( string_2, id ) )!= string_3 ) { counter ++ ; } var_1 [ 0 ] = 1 + counter ; counter = 0 ; while ( ( var_2. method_2 ( string_4, id ) )!= string_3 ) { counter ++ ; } var_1 [ 1 ] = 1 + counter ; return var_1 ; }

************

************
tgt: public boolean start ( ) { try { var_1 = java.lang.integer.parseint ( var_2 . getvalue ( type_1 . key ( ) ) ) ; } catch ( type_2 var_3 ) { var_1 = int_1 ; } var_4 = type_3 . method_2 ( 1 , new type_4 ( string_1 ) ) ; var_4 . method_3 ( new type_5 ( ) , var_1 , var_1 , var_5 ) ; return true ; }
[0]: private void method_1 ( final type_1 var_1, type_2 var_2, java.lang.string var_3 ) throws type_3 { type_4 <? > [ ] var_4 = var_1. method_2 ( ( ( java.lang.string ) ( null ) ), var_3 ) ; for ( type_4 <? > var_5 : var_4 ) { var_2. method_3 ( new type_5 ( var_6, var_5, null ) ) ; } }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { switch ( var_1 ) { case var_3 : var_4 = var_2 == ( var_5 ) ; method_2 ( var_4 , false ) ; break ; case var_6 : if ( data != null ) { java.lang.string var_7 = data . method_3 ( ) . getstring ( string_1 ) ; type_1 var_8 = var_9 . get ( var_7 ) ; new type_2 ( ) . execute ( var_8 ) ; } break ; default : break ; } }
[0]: private void method_1 ( final type_1 node, final type_2 < type_3 <? >, type_1 > var_1, final boolean var_2 ) { var_3. method_2 ( ) ; if ( ( null!= node ) && var_2 ) { var_3. method_3 ( var_1 ) ; var_3. method_3 ( node ) ; } else if ( null!= node ) { var_3. method_4 ( var_1 ) ; var_3. method_4 ( node ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 var_3 ) { java.util.list < java.util.hashmap > var_4 = var_5 . method_2 ( var_2 ) ; var_6 = var_7 . method_3 ( var_1 ) ; java.util.list < type_3 > var_8 = var_9 . method_4 ( ) ; var_3 . method_5 ( string_1 , var_8 ) ; var_3 . method_5 ( string_2 , var_6 ) ; var_3 . method_5 ( string_3 , var_2 ) ; var_3 . method_5 ( string_4 , var_4 ) ; return string_5 ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 )!= null ) { java.lang.string var_3 = var_4. gettext ( ). tostring ( ) ; if (! ( method_2 ( var_5 ). equals ( var_3 ) ) ) { var_2. method_3 ( var_3 ) ; } } }

************

************
tgt: public type_1 method_1 ( type_1 result ) { type_2 var_1 = result . method_2 ( ) ; java.util.map var_2 = var_3 . get ( ) . method_3 ( var_1 ) ; java.util.hashset < type_3 > var_4 = var_3 . get ( ) . method_4 ( var_2 ) ; result . method_5 ( var_4 ) ; result = var_5 . method_6 ( result ) ; return result ; }
[0]: public static java.util.set < type_1 > method_1 ( type_1 var_1, java.util.set < type_2 > var_2, java.util.set < type_2 > var_3, int var_4, java.util.set < type_1 > var_5, java.util.set < type_1 > var_6 ) { java.util.set < type_1 > var_7 = new java.util.hashset < > ( ) ; var_7. add ( var_1 ) ; java.util.list < java.util.list < type_1 > > var_8 = type_3. method_2 ( var_1, var_7, var_2, var_3, var_4, var_5, var_6, var_9 ) ; return type_3. method_3 ( var_8 ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ! ( method_2 ( ) ) ) { boolean var_1 = method_3 ( var_2 ) ; boolean var_3 = method_3 ( var_4 ) ; if ( var_1 || var_3 ) { var_5 = true ; this . var_6 = true ; } else if ( ( this . var_7 ) > ( var_8 ) ) { var_5 = true ; this . var_6 = true ; } ( this . var_7 ) ++ ; } return this . var_9 . method_4 ( ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { super. method_1 ( var_1, var_2, var_3 ) ; if (! ( var_4 ) ) { var_3 = type_2. method_2 ( var_3 ) ; var_4 = true ; var_1. method_3 ( var_3 ) ; var_4 = false ; } }

************

************
tgt: public int method_1 ( java.lang.string var_1 , int var_2 ) { int output = 0 ; switch ( var_1 ) { case string_1 : { output = var_3 [ var_2 ] ; break ; } case string_2 : { output = var_4 [ var_2 ] ; break ; } case string_3 : { output = var_5 [ var_2 ] ; break ; } } return output ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( ) ; var_3. method_3 ( var_2. method_4 ( ) ) ; var_3. method_5 ( new type_1 ( ) { public void method_6 ( ) { var_3. method_7 ( ) ; } } ) ; }

************

************
tgt: public void start ( ) throws type_1 , type_2 { if ( ( var_1 ) != null ) { return ; } var_1 = new type_3 ( ) ; type_4 var_2 = ( ( type_4 ) ( var_1 . method_1 ( var_3 . method_2 ( ) ) ) ) ; type_5 var_4 = new type_5 ( var_2 ) ; this . var_7 = new type_8 ( var_4 , var_3 . method_4 ( ) ) ; method_5 ( ) ; }
[0]: public type_1 < java.lang.string > method_1 ( java.lang.string text, type_2 var_1 ) { try { final java.lang.string var_2 = var_3. method_2 ( var_1, text ) ; var_4. info ( string_1, var_1. getid ( ), var_1. method_3 ( ), var_2 ) ; return type_1. method_4 ( var_2 ) ; } catch ( type_3 var_5 ) { var_4. error ( string_2, var_5 ) ; return type_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3 . setenabled ( false ) ; var_4 [ 1 ] [ 0 ] = method_3 ( ) ; ( var_5 ) ++ ; }
[0]: private void method_1 ( ) { int var_1 = ( var_2. size ( ) ) - ( var_3 ) ; if ( var_1 < ( var_2. size ( ) ) ) { var_4. method_2 ( var_2. get ( var_1 ). method_3 ( ) ) ; var_5 = true ; var_6 = var_7 ; } else { var_4. method_2 ( string_1 ) ; var_8 = true ; } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) { return new type_3 ( ) . method_2 ( var_1 . method_3 ( ) ) . method_4 ( var_1 . method_5 ( ) ) . method_6 ( var_1 . method_7 ( ) ) . method_10 ( var_1 . method_11 ( ) ) . method_12 ( var_1 . method_13 ( ) ) . build ( ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_1. method_2 ( position ) ) ) ; if ( position > 0 ) { var_3 = var_2 ; type_2. method_3 ( method_4 ( ), var_2, var_4 ). show ( ) ; } }

************

************
tgt: type_1 < type_2 , type_3 > . var_1 get ( type_2 k ) { if ( ( k != null ) && ( k . equals ( key ) ) ) { return this ; } if ( ( var_2 ) == null ) { return null ; } return var_2 . get ( k ) ; }
[0]: private java.util.list < type_1 > method_1 ( java.lang.integer var_1, type_2 var_2 ) { type_3 var_3 = method_2 ( var_2 ) ; java.util.list < type_1 > list = var_3. method_3 ( var_1, var_4, method_4 ( ) ) ; if ( ( list. size ( ) ) == 0 ) { var_1 -- ; method_5 ( ). method_6 ( string_1, var_1 ) ; list = var_3. method_3 ( var_1, var_4, method_4 ( ) ) ; } return list ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; type_1 t = type_1 . method_3 ( ( int_1 * int_2 ) ) ; method_4 ( new type_2 ( ) , method_5 ( ) . add ( t ) ) ; type_3 . method_8 ( this . method_9 ( ) , string_2 , var_2 ) ; }
[0]: public void method_1 ( java.lang.integer var_1 ) { java.util.list < type_1 > var_2 = type_2. get ( ). method_2 ( var_1 ) ; for ( type_1 var_3 : var_2 ) { type_2. get ( ). method_3 ( var_3 ) ; } type_3. get ( ). delete ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . length ( ) ) == int_1 ) method_2 ( ) ; var_2 += var_1 . method_3 ( ) ; method_4 ( var_2 ) ; if ( ( var_3 ) != null ) { var_3 . method_5 ( ) ; } }
[0]: protected void method_1 ( int var_1, double var_2, double var_3 ) { if ( ( var_4 )!= null ) { type_1 var_5 = var_6. method_2 ( var_1 ) ; if ( var_5 == null ) return ; this. var_7 = var_8 ; this. var_9 = var_10 ; } else this. var_7 = new type_2 ( ) ; this. var_7. method_3 ( var_2, var_3 ) ; this. var_7 = new type_2 ( ) ; this. var_7. method_3 ( var_2, var_3 ) ; } }

************

************
tgt: public void method_1 ( final java.util.map < type_1 , type_1 > var_1 ) { for ( final java.util.map.entry < type_1 , type_1 > var_2 : var_3 . method_2 ( ) ) { assert var_2 . method_3 ( ) . method_4 ( ) ; assert var_2 . getvalue ( ) . method_4 ( ) ; } this . var_1 = var_1 ; }
[0]: protected void method_1 ( float var_1, float var_2 ) { super. method_1 ( var_1, var_2 ) ; var_3. method_1 ( ) ; var_4 = var_5. method_2 ( this ) ; this. method_3 ( true ) ; var_6 = var_7. method_4 ( this ) ; this. method_5 ( ) ; }

************

************
tgt: private java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( type_2 p : var_2 ) { type_3 obj = new type_3 ( ) ; obj . put ( string_1 , p . x ) ; obj . put ( string_2 , p . y ) ; obj . put ( string_3 , var_3 ) ; obj . put ( string_4 , var_4 ) ; var_1 . put ( obj ) ; } return var_1 . tostring ( ) ; }
[0]: public java.util.collection < type_1 > method_1 ( java.util.collection < type_1 > var_1 ) { type_2 var_2 = this. method_2 ( ) ; try { for ( type_1 var_3 : var_1 ) { method_3 ( var_2 ). method_1 ( var_3 ) ; } var_2. commit ( ) ; } finally { type_3. method_4 ( var_2 ) ; } return var_1 ; }

************

************
tgt: public java.lang.object method_1 ( java.lang.string var_1 , java.lang.object var_2 ) { java.lang.string name = ( this . var_3 ) ? var_1 : var_1 . tolowercase ( ) ; type_1 field = this . var_4 . get ( name ) ; try { return field . get ( var_2 ) ; } catch ( type_2 var_5 ) { throw new type_3 ( ( ( ( string_1 + ( field . getname ( ) ) ) + string_2 ) + ( var_2 . getclass ( ) . tostring ( ) ) ) , var_5 ) ; } }
[0]: private void method_1 ( ) { if ( var_1. method_2 ( ) ) if ( ( var_1. method_3 ( ) ) == ( var_2 ) ) { var_3. method_4 ( true ) ; var_4. method_4 ( false ) ; } else { var_3. method_4 ( false ) ; var_4. method_4 ( true ) ; } }

************

************
tgt: public void method_1 ( ) { values . method_2 ( ) ; var_4 . method_2 ( ) ; var_5 = getactivity ( ) . method_3 ( ) . query ( var_6 , null , null , null , null , null ) ; while ( var_5 . method_4 ( ) ) { type_1 p = new type_1 ( var_5 , getactivity ( ) ) ; values . add ( p ) ; } var_5 . method_5 ( ) ; method_6 ( ) ; }
[0]: protected void method_1 ( type_1 view, type_2 var_1 ) { if ( ( ( var_2. y ) <= ( view. method_2 ( ) ) ) && ( ( var_2. x ) <= ( view. method_3 ( ) ) ) ) { method_4 ( view, var_1 ) ; } else { method_5 ( view, var_1 ) ; } }

************

************
tgt: public java.lang.string execute ( ) { java.lang.string result = var_1 ; try { var_2 = type_1 . method_1 ( name , var_3 , var_5 , var_4 , var_6 , var_7 , var_8 ) ; var_9 = type_1 . method_2 ( name , var_3 , var_5 , var_4 , var_6 , var_7 ) ; } catch ( type_2 var_10 ) { type_3 . error ( var_10 . method_3 ( ) , var_10 . method_4 ( ) ) ; var_11 = new type_4 ( var_10 . method_4 ( ) ) ; result = var_12 ; } return result ; }
[0]: private void method_1 ( int... var_1 ) { type_1 var_2 = new type_1 ( ( int_1 * int_2 ) ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] )!= 0 ) { var_2. set ( i ) ; } } type_2. assertthat ( var_3. method_2 ( ) ). method_3 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 t ) { if ( ( t . method_2 ( ) ) == 0 ) { return ; } if ( ( var_1 ) != null ) { try { this . var_1 . method_3 ( new type_2 ( ) . method_4 ( t . string ( ) , this . var_1 . gettype ( ) ) ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_7 ( ) ; } } }
[0]: public void method_3 ( int var_3, java.lang.string var_4 ) { type_2. method_2 ( context, int_1, new type_3 ( ) { public void method_3 ( int var_3, java.lang.string var_4 ) { type_4. i ( string_1, ( string_2 + var_3 ) ) ; type_4. i ( string_1, ( string_3 + var_4 ) ) ; } } ) ; }

************

************
tgt: public void remove ( java.lang.string [ ] var_1 ) { java.lang.string var_2 = var_1 [ 0 ] ; type_1 . method_1 ( var_3 , var_2 ) ; if ( ( ( var_4 ) != null ) && ( var_4 . method_3 ( var_2 ) ) ) { int id = var_4 . get ( var_2 ) ; var_4 . remove ( var_2 ) ; if ( ( var_5 ) != null ) { var_5 . method_4 ( id ) ; } } }
[0]: private boolean method_1 ( java.util.map < java.lang.integer, type_1 > nodes, java.util.list < java.lang.string [ ] > var_1 ) { boolean result = false ; for ( java.lang.string [ ] type_2 : var_1 ) { result = method_1 ( nodes, type_2 ) ; } if (! result ) { result = true ; } return result ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 . get ( var_3 ) ) ; java.lang.system.out.println ( ( string_1 + ( var_1 . tostring ( ) ) ) ) ; var_4 . method_2 ( var_1 , to ) ; if ( ( var_5 ) == ( var_3 ) ) { var_6 . method_4 ( var_8 , var_7 ) ; } ( var_9 ) ++ ; ( var_3 ) ++ ; }
[0]: public int method_1 ( type_1 value ) { int var_1 = 0 ; switch ( var_2 ) { case string_1 : var_1 = method_2 ( value ) ; break ; case string_2 : var_1 = method_3 ( value ) ; break ; default : java.lang.system.out.println ( string_3 ) ; java.lang.system.exit ( 0 ) ; } return var_1 ; }

************

************
tgt: private int method_1 ( java.lang.string date , java.lang.string var_1 ) { boolean var_2 = false ; int min ; do { min = method_2 ( date , string_1 , var_2 ) ; var_2 = true ; while ( ! ( type_1 . method_3 ( min , var_3 ) . equals ( var_1 ) ) ) { min ++ ; } } while ( min < ( type_2 . method_4 ( var_3 ) ) ) ; return min + ( int_1 * int_2 ) ; }
[0]: public type_1 < type_2 < type_3 > > method_1 ( final type_2 var_1, final java.util.set < type_2 < type_3 > > var_2 ) { final java.util.set < type_2 < type_3 > > var_3 = new java.util.hashset ( var_2 ) ; var_3. add ( var_1 ) ; return var_3 ; }

************

************
tgt: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : type_2 var_1 = new type_2 ( ) ; type_2 . method_2 ( type_3 . getconfig ( ) ) ; return var_1 ; case 1 : return new type_4 ( ) ; default : return null ; } }
[0]: private static void method_1 ( ) { var_1 = new int [ ] { int_1, int_1, 0, 0, 0, 0, int_2, int_3, 0, int_4, 0, int_5, int_2, int_6, 0, int_6, 0, int_2, 0, int_4, int_4, 0, int_7, int_8, 0, 0, 0, int_9, int_10, 0, int_11 } ; }

************

************
tgt: private void method_1 ( java.lang.object source , java.lang.object var_1 ) { type_1 . method_2 ( source , string_1 ) ; type_1 . method_2 ( var_1 , string_2 ) ; type_1 . method_3 ( method_4 ( source ) , string_3 ) ; type_1 . method_3 ( method_4 ( var_1 ) , string_4 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if (! ( var_2. method_2 ( ) ) ) { switch ( var_3 ) { case var_4 : case var_5 : method_3 ( ). method_4 ( var_6. main, var_1 ) ; break ; case var_7 : case var_8 : default : method_3 ( ). method_4 ( var_9, var_1 ) ; break ; } method_5 ( ) ; return true ; } return super. method_1 ( var_1 ) ; } }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 , int position ) { android.view.view var_2 ; if ( ( var_7 . length ) > 0 ) { var_2 = var_3 . method_2 ( var_4 , var_1 , false ) ; type_2 var_5 = ( ( type_2 ) ( var_2 . method_3 ( var_6 ) ) ) ; method_4 ( var_7 [ position ] , var_1 . getcontext ( ) , var_5 ) ; var_1 . method_5 ( var_2 ) ; return var_2 ; } else { return null ; } }
[0]: public long method_1 ( java.lang.string name ) { java.lang.string var_1 = method_2 ( name ) ; if ( var_1 == null ) { return - 1l ; } for ( type_1 var_2 : var_3 ) { try { java.util.date date = var_2. method_3 ( var_1 ) ; return date. gettime ( ) ; } catch ( type_2 var_4 ) { } } throw new type_3 ( ( string_1 + var_1 ) ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( ) . method_3 ( ) . method_4 ( ) ; if ( ( var_2 . method_5 ( ) ) == null ) return ; var_2 . method_5 ( ) . method_6 ( ) . method_7 ( type_4 . values ( ) [ var_3 . method_8 ( ) ] ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { if ( type_2. equals ( var_1. method_2 ( ) ) ) { if ( var_1. method_3 ( ) ) { return type_3. getname ( ) ; } else { return type_4. getname ( ) ; } } else { if ( var_1. method_3 ( ) ) { return type_5. getname ( ) ; } else { return type_6. getname ( ) ; } } } return null ; }

************

************
tgt: public void method_1 ( int data ) { int index = 0 ; while ( index < ( var_1 ) ) { if ( var_2 [ index ] . method_2 ( ) ) { var_2 [ index ] . method_1 ( data ) ; index ++ ; } else { method_3 ( index ) ; } } }
[0]: private type_1 method_1 ( type_2 n ) { java.util.map < java.lang.string, type_2 > var_1 = new java.util.hashmap < java.lang.string, type_2 > ( ) ; for ( type_3 var_2 : var_3 ) { var_1. put ( var_2. name ( ). tolowercase ( ), n ) ; } return method_1 ( var_1 ) ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( string_1 + ( this . var_1 ) ) + string_2 ) + ( this . var_2 ) ) + string_3 ) + ( this . var_3 ) ) + string_4 ) + ( this . var_4 ) ) + string_5 ) + ( this . var_5 ) ) + string_6 ; }
[0]: public int method_1 ( ) { int var_1 ; if ( ( var_2 ) < ( var_3 ) ) var_1 = var_3 ; else var_1 = var_2 ; if ( var_1 > ( var_4 ) ) var_1 = var_4 ; var_1 = ( ( ( var_2 ) + ( var_3 ) ) + ( var_4 ) ) - var_1 ; return var_1 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , android.view.view var_2 , int var_3 , int var_4 , long id ) { if ( ( var_6 . get ( var_3 ) ) != null ) var_5 . method_2 ( var_6 . get ( var_3 ) . var_7 . get ( var_4 ) . getid ( ) , var_3 , var_4 ) ; return false ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; if ( ( var_2 )!= null ) { var_2. method_2 ( ) ; var_2 = null ; } try { var_3. method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_5. method_4 ( var_6, string_1, var_4 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( var_1 ) ; var_2 = var_1 . split ( var_3 . token ) ; if ( ( var_2 . length ) == 1 ) { try { throw new java.lang.exception ( string_2 ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_2 ( ) ; } } try { method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_2 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( string_1 ) ; type_2 var_2 = new type_3 ( ) ; var_2. method_3 ( var_1 ) ; var_3. method_4 ( string_1, var_2, string_2, new type_4 ( ) ) ; type_5. method_5 ( var_4 ). method_6 ( new type_6 ( string_1, string_2 ) ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; long n ; java.lang.system.out.print ( string_1 ) ; n = var_1 . method_1 ( ) ; java.lang.system.out.print ( ( ( ( string_2 + n ) + string_3 ) + ( type_1 . method_2 ( n ) ) ) ) ; }
[0]: public type_1 < type_2 >. var_1 method_1 ( type_2 value ) { type_1 < type_2 >. var_1 x = var_2 ; while ( ( x!= ( var_3 ) ) && ( ( x. key )!= value ) ) { x = var_4 ; } return x ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = var_2 . method_2 ( var_3 ) ; if ( ( var_1 != null ) && ( var_1 . method_3 ( var_4 ) ) ) { var_5 . method_4 ( var_1 ) ; return type_2 . tostring ( ) ; } else { return type_3 . tostring ( ) ; } }
[0]: public void method_1 ( type_1 p ) { if (! ( var_1. contains ( p ) ) ) { method_2 ( p ) ; type_2. method_3 ( p, var_2. method_4 ( ). method_5 ( ) ) ; } else method_2 ( p ) ; }

************

************
tgt: private boolean method_1 ( ) { try { java.net.url url = new java.net.url ( string_1 , var_1 , int_1 , var_2 ) ; var_3 = ( ( type_1 ) ( url . method_2 ( ) ) ) ; var_3 . method_3 ( string_2 , string_3 ) ; var_3 . method_3 ( string_4 , string_3 ) ; var_3 . method_4 ( string_5 ) ; var_3 . method_5 ( true ) ; var_3 . method_6 ( ) ; return true ; } catch ( java.io.ioexception var_4 ) { var_4 . method_7 ( ) ; return false ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( true ) ; var_2 = new type_2 ( var_3 ) ; if ( ( var_2. method_3 ( ) )!= null ) { var_4 = var_2. method_3 ( ) ; type_3. method_4 ( ) ; } if (! ( type_4. method_5 ( ) ) ) { method_6 ( getactivity ( ) ) ; var_3 = getactivity ( ). method_7 ( ) ; } }

************

************
tgt: private void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( ) ; var_1 . method_2 ( string_1 ) ; var_1 . method_3 ( string_2 ) ; var_1 . method_4 ( string_2 . method_5 ( ) ) ; type_4 . method_7 ( string_4 , ( ( string_2 . method_5 ( ) ) + string_5 ) ) ; var_1 . update ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( method_2 ( ). method_3 ( var_2 ) ) { var_3 = method_2 ( ). getstring ( var_2 ) ; var_4 = type_2. get ( var_3 ) ; type_3 var_5 = new type_3 ( var_3 ) ; var_5. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { type_2 var_2 = var_3 . get ( position ) ; java.lang.string var_4 = ( ( java.lang.integer.tostring ( var_2 . method_2 ( ) ) ) + string_1 ) + ( java.lang.double . tostring ( var_2 . method_3 ( ) ) ) ; var_5 . settext ( var_4 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; if ( var_2 ) type_1. method_3 ( type_2. method_4 ( ), method_5 ( ), var_3 ) ; else type_1. method_3 ( type_2. method_4 ( ), method_6 ( ), var_3 ) ; var_2 =! ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) ) return ; var_1 . method_3 ( true ) ; var_1 . method_4 ( null ) ; if ( ( var_2 . size ( ) ) == 1 ) return ; for ( type_2 var_3 : method_5 ( var_1 . getid ( ) ) ) { var_3 . method_6 ( var_1 . getid ( ) ) ; method_7 ( var_3 , var_1 . getid ( ) , 0 ) ; } }
[0]: private void method_1 ( int var_1, java.lang.string var_2 ) { method_2 ( ) ; var_3 = var_1 ; var_4. method_3 ( false ) ; var_5. method_4 ( var_6 ) ; var_7. method_4 ( var_8 ) ; if ( var_9. method_5 ( var_1 ) ) { var_9. method_6 ( var_1 ) ; var_9. method_7 ( var_1 ) ; } else { method_8 ( getstring ( var_10 ) ) ; type_1. method_9 ( ). method_10 ( var_1, var_2, this ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { type_1 < java.lang.object , java.lang.string > var_2 = var_3 . method_2 ( var_4 ) ; java.util.list < type_2 > var_5 = ( ( java.util.list < type_2 > ) ( var_2 . method_3 ( var_1 ) ) ) ; var_6 = var_5 ; var_1 = null ; } else { var_6 = new java.util.linkedlist < > ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_1. method_2 ( ) ; type_2 var_2 = type_2. method_2 ( ) ; type_3 var_3 = ( ( type_3 ) ( var_2. method_3 ( var_4 ) ) ) ; for ( type_4 var_5 : var_6 ) { type_5 var_7 = new type_5 ( var_5. name, var_5. url ) ; var_2. method_4 ( type_6. method_5 ( var_7 ), var_7 ) ; var_3. add ( var_7 ) ; } var_3. method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) { file . method_2 ( string_1 ) ; type_1 < type_2 > list = var_1 . method_3 ( ) ; for ( type_2 var_2 : list ) { if ( ! ( var_2 . method_4 ( ) . startswith ( string_4 ) ) ) { java.lang.string var_3 = var_2 . method_4 ( ) ; file . method_2 ( ( ( ( ( string_2 + var_3 ) + string_3 ) + var_3 ) + string_4 ) ) ; } } }
[0]: public java.util.arraylist < type_1 > method_1 ( type_2 var_1 ) { if (! ( var_2 ) ) { return null ; } var_1. method_2 ( var_3, string_1 ) ; java.util.arraylist < type_1 > var_4 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 var_5 : var_6 ) { if ( ( var_5. method_3 ( var_1 ) ) && ( var_5. method_4 ( var_1 ) ) ) { var_4. add ( var_5 ) ; } } type_3. method_5 ( var_4 ) ; return var_4 ; }

************

************
tgt: public int getvalue ( type_1 var_1 ) { int var_2 = var_1 . method_1 ( ) ; int var_3 ; switch ( var_2 ) { case 0 : var_3 = this . var_4 . method_2 ( var_1 ) ; break ; case 1 : var_3 = this . var_5 . method_2 ( var_1 ) ; break ; case int_1 : var_3 = this . var_6 . method_2 ( var_1 ) ; break ; case int_2 : var_3 = this . var_7 . method_2 ( var_1 ) ; break ; default : var_3 = 0 ; } return var_3 ; }
[0]: public boolean method_1 ( char var_1 ) { int var_2 = ( var_3 ) + 1 ; if ( ( var_2 + 1 ) >= ( var_4. length ( ) ) ) return false ; char c = var_4. method_2 ( var_2 ) ; while ( method_3 ( ) ) { ++ var_2 ; if ( var_2 >= ( var_4. length ( ) ) ) return false ; c = var_4. method_2 ( var_2 ) ; } return c == var_1 ; }

************

************
tgt: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = new type_2 ( method_3 ( ) ) ; type_3 var_4 = new type_3 ( ) ; var_5 = var_4 . method_4 ( var_3 . method_5 ( ) , var_6 , var_7 , true ) ; var_8 = new type_4 ( this , var_5 ) ; var_1 . method_6 ( var_8 ) ; }
[0]: public void method_1 ( type_1 var_1, java.lang.boolean var_2 ) { if ( var_2 ) { type_2. method_2 ( ) ; for ( type_3 i : var_3 ) { i. method_3 ( new java.util.arraylist < type_2 > ( ), true ) ; } return ; } java.util.arraylist < type_2 > c = type_2. method_4 ( var_1 ) ; for ( type_3 i : var_3 ) { i. method_3 ( c, false ) ; } } }

************

************
tgt: public android.widget.button method_1 ( ) { android.widget.button var_1 = null ; if ( ( getcontext ( ) ) != null ) { var_1 = ( ( android.widget.button ) ( ( ( type_1 ) ( getcontext ( ) ) ) . method_2 ( var_2 ) ) ) ; } return var_1 ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( var_1 ) < ( var_3 ) ) ) var_4 = method_2 ( var_5 ) ; else if ( ( ( var_1 ) >= ( var_3 ) ) && ( ( var_1 ) < ( var_6 ) ) ) var_4 = method_2 ( var_7 ) ; var_4 = method_2 ( var_8 ) ; java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: private java.util.set < java.lang.string > method_1 ( type_1 var_1 ) { java.util.set < java.lang.string > result = new java.util.hashset < > ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < > ( ) ; var_2 . add ( var_3 ) ; var_2 . add ( var_4 ) ; result . method_2 ( method_3 ( var_1 . method_4 ( ) ) ) ; result . method_2 ( method_5 ( var_1 . method_6 ( ) , var_2 , var_1 . getname ( ) ) ) ; return result ; }
[0]: private type_1 method_1 ( ) { java.lang.string var_1 = null ; try { var_1 = type_2. method_2 ( ). method_3 ( string_1 ) ; } catch ( java.lang.exception var_2 ) { } if ( var_1 == null ) { var_1 = string_2 ; } type_1 var_3 = new type_1 ( var_1 ) ; return var_3 ; }

************

************
tgt: private boolean method_1 ( java.lang.class var_1 , type_1 var_2 ) { java.lang.string var_3 = var_2 . getname ( ) ; java.lang.class < ? > [ ] var_4 = var_2 . method_2 ( ) ; java.lang.class < ? > var_5 = var_2 . method_3 ( ) ; try { return ! ( var_1 . method_4 ( var_3 , var_4 ) . method_3 ( ) . equals ( var_5 ) ) ; } catch ( type_2 var_6 ) { } return false ; }
[0]: private void method_1 ( type_1 var_1 ) throws type_2 { type_3 date = new type_3 ( var_1. method_2 ( ). gettime ( ) ) ; var_1. method_3 ( new type_4 ( string_1 ). format ( date ) ) ; var_1. settext ( var_1. getname ( ) ) ; var_1. method_4 ( false ) ; var_1. method_5 ( string_2 ) ; }

************

************
tgt: public static boolean method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( var_1 ) ; if ( ( var_2 != null ) && ( ( var_2 . method_3 ( ) ) > 0 ) ) return true ; return ( ( var_3 ) < 0 ) || ( ( type_3 . method_4 ( ) . size ( ) ) < ( var_3 ) ) ; }
[0]: public void method_1 ( boolean var_1 ) { if ( var_1 ) { if ( ( - 1 ) == ( var_2. method_2 ( ). method_3 ( var_3 ) ) ) { var_2 = var_2. method_4 ( ). method_5 ( var_3 ). build ( ) ; } } else { var_2. method_2 ( ). remove ( var_3 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.charsequence str , int offset ) { if ( ( ( str . length ( ) ) == 0 ) || ( offset == 0 ) ) return string_1 ; if ( offset > 0 ) { return str . method_2 ( ( offset - 1 ) , offset ) . tostring ( ) ; } return string_1 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( int_1, int_2, int_3 ) ; type_2. assertequals ( int_4, var_1. method_2 ( ) ) ; type_2. assertequals ( int_1, var_1. method_3 ( ) ) ; type_2. assertequals ( int_2, var_1. method_4 ( ) ) ; type_2. assertequals ( int_3, var_1. method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == true ) { type_1 . method_2 ( method_3 ( ) . getcolor ( var_2 ) ) ; method_5 ( ) ; } else { type_1 . method_2 ( method_3 ( ) . getcolor ( var_3 ) ) ; method_6 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1. method_2 ( ) ) ) ; type_3. method_3 ( var_1. getactivity ( ), ( string_1 + ( var_2. method_4 ( type_4. method_5 ( ) ) ) ), var_3 ). show ( ) ; var_1. method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { int var_1 = method_2 ( ) ; if ( var_1 < 1 ) { return ; } var_2 = type_1 . method_3 ( var_1 , false ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; }
[0]: public void method_1 ( ) { if (! ( var_1. method_2 ( var_2 ) ) ) { var_3. method_3 ( var_4 ) ; method_4 ( ) ; } else if (! ( method_5 ( ) ) ) { var_3. method_3 ( var_4 ) ; method_6 ( ) ; } else { var_3. method_3 ( var_5 ) ; type_1 var_6 = new type_2 ( ) ; var_1. method_7 ( var_2, int_1, int_2, var_6 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 var_2 = var_1 . method_2 ( this ) ; var_3 = ( ( type_3 ) ( var_2 . method_3 ( string_1 , new type_3 ( ) ) ) ) ; var_4 = ( ( type_4 ) ( var_2 . method_3 ( string_2 , null ) ) ) ; if ( ( var_4 ) == null ) { var_4 = new type_4 ( ) ; } var_6 = ( ( type_4 ) ( var_2 . method_3 ( string_3 , var_7 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( ( var_3 )!= null ) { var_2. method_2 ( var_4, var_1 ) ; final type_3 var_5 = var_1. method_3 ( var_6 ) ; new type_4 ( getcontext ( ), var_3, var_5, 0 ) ; } }

************

************
tgt: public void method_1 ( boolean show ) { if ( ( var_1 ) != show ) { if ( show ) { var_1 = true ; type_1 . method_2 ( method_3 ( ) ) ; } else { type_1 . method_4 ( method_3 ( ) ) ; var_1 = false ; } } }
[0]: public void method_1 ( java.lang.long var_1 ) { type_1 var_2 = var_3. get ( ). get ( java.lang.string.format ( string_1, var_1 ), var_4 class ) ; java.lang.string var_5 = var_6. method_2 ( var_1 ) ; type_2 var_7 = var_8. method_3 ( var_9, var_5 ) ; if ( var_2 == null ) { if ( var_7!= null ) method_4 ( var_5 ) ; else { if ( var_7 == null ) { method_5 ( var_5 ) ; } else { method_6 ( var_5 ) ; } } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 view = this . getview ( ) ; if ( view != null ) { java.lang.string id = var_1 . method_2 ( string_1 ) ; java.util.hashmap var_3 = this . var_4 . get ( var_5 ) ; type_3 var_6 = ( ( type_3 ) ( var_3 . get ( id ) ) ) ; var_3 . remove ( id ) ; view . method_3 ( var_6 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. add ( var_2 ) ; final type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( var_4 ) ; var_3. method_3 ( var_5 ) ; var_3. method_4 ( string_1 ) ; final type_2 < type_3, type_4 > result = new type_2 < type_3, type_4 > ( ) ; var_3. method_5 ( result ) ; type_5. method_6 ( result. method_7 ( ) ) ; var_6 = method_8 ( result ) ; }

************

************
tgt: private void method_1 ( java.lang.string name , type_1 time , int index ) { if ( index < ( ( var_1 . length ) - 1 ) ) { method_1 ( names [ index ] , var_1 [ index ] , ( index + 1 ) ) ; names [ index ] = name ; var_1 [ index ] = new type_1 ( time ) ; } }
[0]: public boolean method_1 ( type_1 t ) { if ( ( t == null ) && ( ( this. var_1 ) == null ) ) { return true ; } if ( t == null ) { return false ; } return t. equals ( t ) ; }

************

************
tgt: public int method_1 ( java.lang.string field , java.lang.string [ ] value , java.lang.long id ) { if ( ( field != null ) && ( value != null ) ) { try { type_1 . method_1 ( field , value , id ) ; } catch ( java.lang.exception var_1 ) { var_1 . method_2 ( ) ; } return 1 ; } return 0 ; }
[0]: public int method_1 ( type_1 var_1 ) { int var_2 = method_2 ( var_3 ) ; int var_4 = method_2 ( var_5 ) ; if ( var_2 == var_4 ) { return ( ( int ) ( ( java.lang.math.pow ( int_1, var_2 ) ) + ( method_1 ( var_5 ) ) ) ) ; } else return ( ( int ) ( java.lang.math.pow ( int_1, var_4 ) ) ) + ( method_1 ( var_3 ) ) ; }

************

************
tgt: private void method_1 ( java.lang.string title ) { android.view.view view = type_1 . method_2 ( getactivity ( ) ) . method_3 ( var_1 , null ) ; type_2 var_2 = ( ( type_2 ) ( view . method_4 ( var_3 ) ) ) ; var_2 . settext ( title ) ; if ( ( var_4 ) != null ) var_4 . method_5 ( view ) ; }
[0]: private boolean method_1 ( java.lang.string var_1, int var_2 ) { try { type_1 var_3 = new type_1 ( var_1, var_2 ) ; type_2 out = new type_2 ( var_3. method_2 ( ), true ) ; java.io.bufferedreader var_4 = new java.io.bufferedreader ( new type_3 ( var_3. method_3 ( ) ) ) ; int data = var_4. method_4 ( ) ; var_3. method_5 ( ) ; return data!= 0 ; } catch ( java.io.ioexception var_5 ) { } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { type_2 var_2 = var_3 . method_2 ( string_1 ) ; var_2 . method_3 ( 1 , var_1 . method_4 ( ) . method_5 ( ) . tostring ( ) ) ; var_2 . method_3 ( int_1 , var_4 . method_6 ( ) . method_7 ( ) . trim ( ) ) ; var_2 . execute ( ) ; var_2 . method_8 ( ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_9 ( ) ; } }
[0]: private void method_1 ( int t ) { var_1 [ t ] = var_1 [ ( t + 1 ) ] ; type_1 var_2 = var_1 [ t ] ; var_2. method_2 ( var_3 [ t ] ) ; float var_4 = var_2. method_3 ( ) ; type_1 var_5 = var_1 [ ( t + 1 ) ] ; var_5. method_4 ( var_3 [ t ] ) ; float var_6 = var_5. method_3 ( ) ; var_7 += var_6 - var_4 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { double var_1 ; double var_2 ; int counter ; counter = 0 ; for ( var_1 = 1 ; var_1 <= int_1 ; var_1 ++ ) { var_2 = var_1 / float_1 ; java.lang.system.out.println ( ( ( ( var_1 + string_1 ) + var_2 ) + string_2 ) ) ; counter ++ ; if ( counter == int_2 ) { java.lang.system.out.println ( ) ; counter = 0 ; } } }
[0]: public boolean method_1 ( java.lang.object var_1, java.lang.object var_2, type_1 var_3 ) { if ( ( var_4 [ index ] ) == null ) { var_5 [ index ]. method_2 ( method_3 ( ( ( var_6 ) + index ) ) ) ; } return true ; }

************

************
tgt: private void method_1 ( android.content.context context ) { for ( int x = 0 ; x <= ( var_1 ) ; x ++ ) { for ( int y = 0 ; y < ( var_2 ) ; y ++ ) { type_1 var_3 = new type_1 ( context ) ; var_3 . method_3 ( x ) ; var_3 . method_2 ( y ) ; var_5 . add ( var_3 ) ; } } }
[0]: public synchronized void method_1 ( type_1 var_1, type_2 var_2 ) { java.util.list < type_2 > var_3 = var_4. get ( var_1 ) ; var_3. add ( var_2 ) ; var_4. put ( var_1, var_3 ) ; if ( var_5. method_2 ( var_1 ) ) { this. method_3 ( new type_3 ( var_1 ), var_2 ) ; } }

************

************
tgt: protected java.lang.string method_1 ( type_1 var_1 , long var_2 ) throws java.lang.exception { java.util.list < type_2 > var_3 = type_3 . method_2 ( var_2 , false , var_4 , false , 0 , 1 ) ; if ( ( var_3 . size ( ) ) > 0 ) { type_2 var_5 = var_3 . get ( 0 ) ; return type_4 . method_3 ( var_5 , var_1 ) ; } return null ; }
[0]: public void init ( ) { var_1. method_1 ( string_1, string_2 ) ; var_2. method_2 ( ) ; type_1. method_3 ( string_3 ) ; var_3 = var_4. get ( string_4 ) ; var_3. method_4 ( var_5 ) ; var_3. method_5 ( var_6 ) ; var_3. method_5 ( var_7 ) ; var_8 = var_4. get ( string_5 ) ; var_8. method_5 ( var_6 ) ; var_8. method_5 ( var_7 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) return false ; boolean var_2 = var_3 . remove ( var_1 ) ; if ( var_2 ) { var_4 -= var_1 . method_2 ( ) ; var_5 -= var_1 . method_3 ( ) ; method_4 ( ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string filename ) { type_2 var_2 = new type_2 ( method_2 ( ) ) ; java.io.file var_3 = var_2. method_3 ( ) ; type_3. method_4 ( var_4, ( string_1 + var_3 ) ) ; java.io.file var_5 = new java.io.file ( var_3, filename ) ; java.io.fileoutputstream var_6 ; try { var_6 = new java.io.fileoutputstream ( var_5 ) ; var_1. method_5 ( var_7, int_1, var_6 ) ; } catch ( java.lang.exception var_8 ) { var_8. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { int var_1 = var_2 ; boolean var_3 = var_4 . method_2 ( ) ; if ( ( var_2 = var_4 . method_3 ( ) ) < 0 ) { var_2 = var_1 ; return ; } if ( ( ! var_3 ) && ( ! ( var_5 ) ) ) { method_4 ( ) ; var_2 = var_1 ; } else { return ; } }
[0]: public java.util.hashset < type_1 > method_1 ( ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; if ( ( var_2. size ( ) ) == 0 ) return var_1 ; else { var_1 = var_2. get ( 0 ) ; for ( java.util.hashset < type_1 > var_3 : var_2 ) { var_1. method_2 ( var_3 ) ; } } return var_1 ; } }

************

************
tgt: public java.util.list < type_3 > method_1 ( ) { final java.util.list < type_2 > var_1 = var_2 . method_1 ( ) ; final java.util.list < type_3 > var_3 = new java.util.arraylist < > ( ) ; for ( final type_2 type_4 : var_1 ) { final type_3 var_4 = var_5 . method_2 ( type_4 ) ; var_3 . add ( var_4 ) ; } return var_3 ; }
[0]: public void method_1 ( ) throws type_1 { if ( null == ( var_1 ) ) { var_1 = var_2. method_2 ( ). method_3 ( ) ; } else if ( false == ( var_1 ) ) { throw new type_1 ( string_1 ) ; } var_2. method_4 ( false ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_3 = ( ( java.lang.string ) ( var_2 . method_2 ( ) ) ) ; if ( var_3 == string_1 ) { type_2 . method_3 ( string_2 , string_3 ) ; } else if ( var_3 == string_4 ) { type_2 . method_3 ( string_2 , string_5 ) ; } else { type_2 . method_3 ( string_2 , string_6 ) ; } if ( ( var_1 ) != null ) var_1 . start ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2. add ( var_1 ) ; if ( ( this. var_2. size ( ) ) > ( var_3 ) ) { this. var_2 = ( ( java.util.arraylist < type_1 > ) ( this. var_2. method_2 ( ( ( this. var_2. size ( ) ) - ( var_3 ) ), ( ( this. var_2. size ( ) ) - 1 ) ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string text = ( string_1 + ( var_1 ) ) + string_2 ; type_1 var_2 = ( ( type_1 ) ( var_3 . method_2 ( text ) ) ) ; type_2 . assertthat ( var_4 , type_3 . method_3 ( type_4 . method_4 ( var_5 ) ) ) ; type_2 . assertthat ( var_4 . getvalue ( ) , type_3 . method_3 ( type_3 . method_4 ( var_5 . getvalue ( ) ) ) ) ; }
[0]: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = var_2. method_2 ( ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.string var_4 : var_1 ) { java.lang.string var_5 = method_3 ( var_4 ) ; type_1 var_6 = method_4 ( var_5 ) ; if ( ( var_6!= null ) && ( ( var_6. method_5 ( ) )!= null ) ) { var_3. add ( var_6 ) ; } } var_2. method_6 ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 key , type_2 < type_3 > values , type_4 context ) { var_1 . method_2 ( key . tostring ( ) , new type_5 ( ) ) ; type_5 var_2 = var_1 . get ( key . tostring ( ) ) ; for ( type_3 var_3 : values ) { if ( var_3 . get ( ) ) { var_2 . method_3 ( ) ; } else { var_2 . method_4 ( ) ; } } var_1 . put ( key . tostring ( ) , var_2 ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; if ( ( var_1. method_3 ( 0 ) ) == null ) { android.view.view var_3 = method_4 ( ). method_5 ( var_4, var_1, false ) ; var_1. method_6 ( var_3 ) ; } if ( ( var_1. method_3 ( 0 ) )!= null ) { android.view.view var_3 = var_1. method_3 ( 0 ) ; if ( var_5 ) { var_3. method_7 ( var_6 ) ; } } }

************

************
tgt: public type_1 method_1 ( boolean var_1 ) { if ( var_1 || ( ( var_5 ) == null ) ) { java.lang.string var_3 = this . method_2 ( var_4 ) ; if ( method_3 ( var_3 ) ) { var_5 = new type_1 ( var_3 ) ; } else { var_5 = null ; throw new type_2 ( java.lang.string.format ( string_1 , var_4 , var_3 ) ) ; } } return var_5 ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) throws type_1 { type_2 var_2 = null ; type_3 var_3 = null ; try { var_2 = var_4. method_2 ( ). method_3 ( ) ; var_3 = var_2. method_4 ( ( ( ( string_1 + string_2 ) + var_1 ) + string_3 ) ) ; if ( var_3. method_5 ( ) ) { return var_3. getboolean ( 1 ) ; } } finally { var_3. method_6 ( ) ; var_2. method_6 ( ) ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.util.list < type_2 > var_2 , java.util.list < type_1 > var_3 ) { var_4 . method_2 ( null ) ; var_4 = var_1 ; if ( ( ( var_1 . method_3 ( ) ) != null ) && ( ( var_1 . method_3 ( ) . method_4 ( ) ) > ( this . var_5 ) ) ) { this . var_5 = var_4 . method_3 ( ) . method_4 ( ) ; } var_4 . method_2 ( this ) ; var_4 . method_5 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( android.view.view view ) { java.lang.system.out.println ( string_1 ) ; type_1 var_1 = new type_1 ( ) ; type_2 var_2 = getactivity ( ). method_2 ( ). method_3 ( ) ; var_2. replace ( var_3, var_1 ) ; var_2. commit ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string response ) { super . method_1 ( response ) ; if ( type_1 . isempty ( response ) ) return ; type_2 var_1 = new type_3 ( ) . method_2 ( response , var_2 class ) ; if ( ( var_1 . id ) == 1 ) { var_3 . method_4 ( var_4 ) ; method_3 ( ) ; } else type_4 . method_5 ( context , var_1 . msg ) ; }
[0]: protected static java.lang.string method_1 ( java.util.arraylist < type_1 > var_1 ) { boolean var_2 = false ; java.lang.string var_3 = string_1 ; while (! var_2 ) { java.lang.system.out.println ( string_2 ) ; var_3 = var_4. method_2 ( ) ; if ( ( type_2. method_3 ( var_1, var_3 ) ) == ( - 1 ) ) { java.lang.system.out.println ( string_3 ) ; } else { var_2 = false ; } } return var_3 ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 data : var_2 ) { if ( var_3 . contains ( data ) ) { type_1 temp = var_3 . get ( var_3 . method_2 ( data ) ) ; method_3 ( temp ) ; var_1 . add ( temp ) ; continue ; } return null ; } return var_1 ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_2 ) { return var_1 ; } if ( type_1. isempty ( var_1 ) ) { return null ; } java.lang.string source = null ; try { source = new java.lang.string ( type_2. method_1 ( type_3. method_2 ( var_1 ) ), string_1 ) ; } catch ( java.lang.exception var_3 ) { var_3. method_3 ( ) ; } return source ; } }

************

************
tgt: public static void method_1 ( ) { type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; method_5 ( var_1 , var_2 , string_1 , string_2 ) ; method_5 ( var_1 , var_3 , string_1 ) ; method_5 ( var_4 , var_3 , string_3 ) ; method_4 ( var_4 , var_5 , string_4 ) ; }
[0]: private java.util.list method_1 ( ) { java.util.list var_1 = new java.util.arraylist ( var_2 ) ; for ( type_1 var_3 : var_4 ) { type_2 var_5 = var_3. method_2 ( ) ; type_2 var_6 = new type_2 ( var_5. method_3 ( ), var_5. method_4 ( ) ) ; var_1. add ( var_6 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { int var_1 = int_1 ; int var_2 = int_2 ; var_3 . method_2 ( var_3 . method_3 ( ) . get ( 0 ) ) ; var_3 . method_4 ( var_2 ) ; var_3 . method_5 ( var_1 ) ; var_3 . method_6 ( 0 ) ; type_1 . assertequals ( var_3 . method_3 ( ) . get ( 0 ) , var_3 . method_7 ( ) ) ; int var_4 = var_3 . method_8 ( ) ; type_1 . assertequals ( ( var_1 * int_3 ) , var_4 ) ; }
[0]: public void method_1 ( final int target ) { new java.lang.thread ( new type_1 ( ) { public void method_2 ( ) { if ( method_3 ( ) ) { method_4 ( new android.content.intent ( var_1 this, var_2 class ). method_5 ( string_1, var_3 ). method_5 ( string_2, target ) ) ; } else { type_2. method_6 ( ) ; method_7 ( ) ; type_2. method_8 ( ) ; } } } ). start ( ) ; } }

************

************
tgt: public final java.util.map < java.lang.string , java.lang.object > method_1 ( ) { final java.util.map < java.lang.string , java.lang.object > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( var_2 , method_2 ( ) ) ; var_1 . put ( var_3 , method_3 ( ) ) ; var_1 . put ( var_4 , method_4 ( ) ) ; var_1 . put ( var_5 , ( ( var_6 ) != null ? var_6 . method_5 ( ) : 0 ) ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = 0 ; method_2 ( var_3 ) ; method_3 ( ) ; if ( var_4 ) { var_4 = false ; if ( var_1. method_4 ( ) ) { method_5 ( ) ; } } if ( ( var_5 ) > 0 ) { method_6 ( var_5 ) ; var_5 = - 1 ; } method_7 ( ) ; method_8 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = var_3 . result ( var_1 , string_1 , string_1 , string_1 , string_1 ) ; type_3 . assertequals ( string_2 , var_2 . method_2 ( ) ) ; type_3 . assertequals ( null , var_2 . method_3 ( ) . get ( string_3 ) ) ; type_3 . assertequals ( string_1 , var_2 . method_3 ( ) . get ( string_4 ) ) ; }
[0]: public void remove ( double var_1 ) { if ( ( var_2 )!= null ) { if ( ( var_2. getvalue ( ) ) == var_1 ) { type_1 var_3 = new type_1 ( 0 ) ; var_3. method_1 ( var_2 ) ; var_2. method_2 ( var_1, var_3 ) ; var_2 = var_3. method_3 ( ) ; size -= 1 ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.util.calendar var_3 = java.util.calendar.getinstance ( ) ; var_4 = new type_2 ( this , this , var_3 . get ( var_5 ) , var_3 . get ( var_6 ) , var_3 . get ( var_7 ) ) ; method_3 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; }
[0]: public char method_1 ( int x, int y ) throws java.io.ioexception { var_1. method_2 ( ( ( ( ( string_1 + x ) + string_2 ) + y ) + string_2 ) + y ) ) ; java.lang.string response = var_2. method_3 ( ) ; return response. method_4 ( 0 ) ; }

************

************
tgt: private void method_1 ( boolean var_1 , boolean var_2 , boolean var_3 , boolean var_4 ) { boolean update = var_4 ; if ( var_1 ) { update |= method_2 ( var_5 ) ; update |= method_3 ( ) ; } if ( var_2 ) update |= method_4 ( ) ; update |= method_5 ( ) ; if ( update ) { var_6 . method_6 ( ) . method_7 ( new type_1 ( ) { public void method_8 ( ) { var_6 . method_9 ( ) ; } } ) ; } }
[0]: public static boolean method_1 ( type_1 var_1 ) { for ( type_1 obj : type_2. method_2 ( ). method_3 ( ) ) { if (! ( obj. equals ( var_1 ) ) ) { return type_3. method_4 ( var_1, obj ) ; } } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = ( ( type_2 ) ( var_3 . method_2 ( ) . method_3 ( ) . method_4 ( ) ) ) ; var_2 . method_5 ( ) . method_6 ( new type_3 ( ) { protected void method_7 ( type_4 var_4 ) { var_1 . method_8 ( ( ( method_9 ( ) ) == null ) ) ; } } ) ; if ( ( method_9 ( ) ) != null ) { var_1 . method_8 ( false ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) { final long var_3 = ( ( int_1 * int_2 ) * int_3 ) * int_3 ; type_1 var_4 = new type_4 ( var_1, var_2, var_3, true ) ; var_4. method_2 ( ) ; return var_4 ; }

************

************
tgt: private void init ( ) { method_1 ( ) ; var_1 . method_2 ( var_2 . method_3 ( ) ) ; var_3 = new type_1 ( var_4 , var_5 ) ; var_6 = new type_2 ( var_4 , var_5 , var_3 ) ; method_4 ( ) ; var_7 . method_5 ( new type_3 ( ) ) ; }
[0]: public void method_1 ( long var_1, long var_2, type_1 var_3 ) throws type_2 { method_2 ( true ) ; method_3 ( false ) ; if ( var_4. method_4 ( ). contains ( var_3 ) ) { var_5 = ( var_6 )? var_7 : var_8 ; } else { method_2 ( false ) ; method_3 ( true ) ; var_5 = var_7 ; } var_5. method_1 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public static type_1 method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; type_2 var_3 = method_2 ( var_4 class ) ; method_3 ( var_1 . method_4 ( type_4 . method_5 ( ) , type_4 . method_5 ( ) ) ) . method_6 ( var_3 ) ; return var_1 ; }
[0]: private static type_1 method_1 ( type_2 var_1, java.lang.double var_2, type_3 var_3 ) throws java.lang.exception { type_4 var_4 = null ; while ( var_4 == null ) { var_4 = var_1. method_2 ( var_2 ) ; if ( var_4 == null ) { java.lang.thread. method_3 ( int_1 ) ; } } return type_5. method_4 ( var_1. method_5 ( ), var_4, var_3 ) ; }

************

************
tgt: public int method_1 ( ) { final int var_1 = int_1 ; int var_2 = 1 ; var_2 = ( var_1 * var_2 ) + ( ( data ) == null ? 0 : data . method_1 ( ) ) ; var_2 = ( var_1 * var_2 ) + ( ( var_3 ) == null ? 0 : var_3 . method_1 ( ) ) ; return var_2 ; }
[0]: public type_1 method_1 ( long var_1 ) throws java.io.ioexception { if ( var_2. method_2 ( var_1 ) ) return var_2. get ( var_1 ) ; java.util.list < type_1 > var_3 = null ; try { var_4. method_3 ( java.lang.string.format ( string_1, var_1 ), null, null ) ; } catch ( type_2 var_5 ) { type_3. error ( var_5. method_4 ( ) ) ; } if ( var_3!= null ) return var_3. get ( 0 ) ; return null ; }

************

************
tgt: public java.lang.string gettext ( type_1 var_1 ) { if ( ( ( var_2 ) != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { return var_2 ; } if ( ( ( var_3 ) != null ) && ( ( var_3 . length ( ) ) > 0 ) ) { return ( var_3 ) + string_1 ; } else { return ( string_2 + ( var_1 . method_1 ( ) . get ( 0 ) . method_2 ( ) ) ) + string_1 ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( ). get ( url ) ; java.lang.string var_1 = type_2. method_3 ( var_2 ) ; try { type_2. method_4 ( var_2, string_1 ) ; type_3. method_5 ( var_3 ) ; } finally { type_2. method_4 ( var_2, var_1 ) ; } type_4. fail ( string_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = type_2 . method_3 ( this ) ; var_4 = var_3 . method_4 ( int_1 , false , null ) ; java.util.list < type_3 > var_5 = new java.util.arraylist < type_3 > ( ) ; this . var_6 = new type_4 ( this , var_7 , var_5 ) ; method_5 ( var_6 ) ; android.content.intent intent = getintent ( ) ; method_6 ( intent ) ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string key ) { switch ( key ) { case var_2 : if ( var_1. getstring ( key, string_1 ). equals ( string_1 ) ) { var_3. method_2 ( ) ; } else { var_3. method_3 ( ) ; } case var_4 : if ( var_1. getboolean ( key, false ) ) { var_3. method_4 ( int_1 ) ; } else { var_3. method_4 ( 1 ) ; } break ; } } }

************

************
tgt: public int method_1 ( java.lang.string name ) { type_1 var_1 = this . method_2 ( ) ; type_2 values = new type_2 ( ) ; values . put ( "name" , name ) ; try { var_1 . method_3 ( string_1 , null , values ) ; } catch ( type_3 var_2 ) { var_1 . method_4 ( ) ; return 1 ; } var_1 . method_4 ( ) ; return 0 ; }
[0]: public void method_1 ( ) { type_1 result = type_2. method_2 ( ). method_3 ( var_1 class, null ) ; type_3. assertequals ( false, result. method_5 ( ) ) ; result = type_2. method_2 ( ). method_3 ( var_1 class, string_1 ) ; type_3. assertequals ( string_2, result. method_4 ( ) ) ; type_3. assertequals ( true, result. method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_2 data = ( ( type_2 ) ( type_3 . method_2 ( ) . get ( var_1 , true ) ) ) ; if ( data == null ) { var_2 = new type_4 ( var_1 , var_3 . method_4 ( ) ) ; var_2 . execute ( ) ; } else { var_4 . method_5 ( new type_5 ( var_5 , var_1 , var_3 . method_4 ( ) ) ) ; } }
[0]: public boolean method_1 ( type_1 var_1, type_1 var_2 ) { if ( var_2 == null ) { return false ; } if ( var_1 instanceof type_2 ) { type_3 var_3 = ( ( type_2 ) ( var_2 ) ). method_2 ( ) ; if ( method_3 ( var_3, null ) ) { return true ; } } return ( var_2!= null ) && ( method_3 ( var_2, null ) ) ; }

************

************
tgt: public static void method_1 ( int [ ] var_1 ) { java.lang.string var_2 = string_1 ; for ( int var_3 : var_1 ) { type_3 . method_1 ( var_2 ) ; type_3 . method_1 ( var_3 ) ; var_2 = string_2 ; } var_2 = ( var_2 . equals ( string_1 ) ) ? string_3 : string_4 ; type_3 . method_1 ( var_2 ) ; }
[0]: public java.lang.object method_1 ( int t ) { if ( t == 0 ) { return var_1 ; } t = t - 1 ; method_2 ( string_1 ) ; method_3 ( t ) ; if ( t >= ( size ) ) { return type_1. method_4 ( name, var_1 ). method_5 ( ) ; } else { return var_2 [ method_6 ( t ) ] ; } }

************

************
tgt: public int execute ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 . method_1 ( string_1 , var_2 ) ; type_2 var_3 = new type_2 ( ) ; int result = var_3 . method_2 ( new java.lang.string [ ] { string_2 , var_1 } , var_2 , type_1 . out , var_4 ) ; return result ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception, type_3 { asserttrue ( ( ( var_1. method_2 ( ). length ) > 0 ) ) ; for ( java.lang.string name : var_1. method_3 ( ) ) { if ( name. equals ( method_4 ( var_2 ). getstring ( var_3 ) ) ) { return var_1. method_5 ( name ) ; } } var_1. method_6 ( ) ; return null ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > value = new java.util.arraylist ( ) ; type_1 var_2 = type_2 . method_2 ( ) ; type_1 var_3 = type_2 . method_2 ( ) ; value . add ( var_2 ) ; value . add ( var_3 ) ; return value ; }
[0]: private static int method_1 ( int var_1, boolean var_2 ) { switch ( var_1 ) { case 1 : if ( var_2 ) return 0 ; else return int_1 ; case int_1 : if ( var_2 ) return 1 ; else return 0 ; case int_2 : if ( var_2 ) return 1 ; else return int_1 ; default : if ( var_2 ) return int_1 ; else return 1 ; } }

************

************
tgt: protected void method_1 ( java.lang.charsequence var_1 , type_1 results ) { var_2 = ( ( java.util.list < type_3 > ) ( results . values ) ) ; if ( 0 < ( results . count ) ) { method_3 ( ) ; } else { method_4 ( ) ; } var_3 . method_5 ( results . count ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( var_1 ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < > ( ) ; var_3. method_2 ( method_3 ( var_2 ) ) ; for ( type_1 var_4 : var_3 ) { type_2 var_5 = var_4. method_4 ( ) ; if ( var_1. equals ( var_5 ) ) { return var_4 ; } } return null ; }

************

************
tgt: private int method_1 ( final int var_1 , final java.lang.string var_2 ) { int var_3 = 0 ; for ( int i = 0 ; i < ( var_4 . method_2 ( var_1 ) ) ; i ++ ) { if ( ( ( var_4 . method_3 ( var_1 , i ) ) != null ) && ( ( var_4 . method_3 ( var_1 , i ) . tostring ( ) ) == var_2 ) ) { var_3 ++ ; } } return var_3 ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( java.lang.string var_2 : var_3. method_2 ( ) ) { java.lang.integer value = var_3. get ( var_2 ) ; java.lang.string var_4 = ( ( ( ( ( string_2 + var_2 ) + string_2 ) + string_3 ) + ( value. tostring ( ) ) ) + string_4 ) + ( var_4. tolowercase ( ) ) ; var_1 = var_1 + var_4 ; } return var_1 ; }

************

************
tgt: protected void method_1 ( ) throws java.lang.exception { if ( ! ( var_1 . method_2 ( 1 , var_2 , var_3 ) ) ) { throw new type_1 ( ) ; } java.lang.integer key = method_3 ( var_4 ) ; type_2 f = ( ( type_2 ) ( var_5 . method_4 ( key , key ) ) ) ; f . method_5 ( this ) ; }
[0]: public static float method_1 ( final float [ ] array, final int offset, final int length ) { final float var_1 = type_1. method_2 ( array, offset, length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - var_1 ; sum += ( diff * diff ) / ( array. length ) ; } return ( ( float ) ( sum ) ) ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2 . method_2 ( var_6 ) ; for ( type_1 var_3 : var_1 ) { if ( ( var_4 ) == ( var_7 ) ) var_2 . method_2 ( var_8 ) ; } method_3 ( var_2 ) ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1. method_2 ( ) ; type_2 var_3 = ( ( type_2 ) ( var_4. get ( var_2 ) ) ) ; if ( var_3 == null ) { var_5. method_3 ( ( ( string_1 + var_2 ) + string_2 ) ) ; return null ; } else { type_1 var_6 = new type_1 ( var_1. method_4 ( ), var_3, var_1. method_5 ( ) ) ; return var_6 ; } }

************

************
tgt: private void method_1 ( java.lang.long var_1 ) throws java.lang.exception { try { int var_2 = var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( var_1 , ( var_2 + 1 ) ) ; } catch ( java.lang.exception var_4 ) { var_5 . error ( string_1 , var_4 ) ; throw var_4 ; } }
[0]: public void method_1 ( android.view.view view ) { if ( var_1. gettext ( ). equals ( string_1 ) ) { var_1. settext ( ( ( var_2 ) + string_2 ) ) ; } else if (! ( method_2 ( var_1. gettext ( ). tostring ( ) ) ) ) { var_1. append ( string_2 ) ; } method_3 ( var_3 ) ; }

************

************
tgt: public void add ( int index , long element ) { if ( index == ( size ( ) ) ) { add ( element ) ; } else { method_1 ( index ) ; method_2 ( 1 ) ; type_1 . method_3 ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2. method_2 ( ) ) == false ) { try { c. method_3 ( string_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_4 ( ) ; } } else { try { c. method_3 ( string_2 ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_4 ( ) ; } } if ( ( var_4 [ 1 ] [ int_1 ] ) == null ) { var_5. method_5 ( false ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.util.collection < type_2 > var_2 ) { type_1 var_3 = type_1 . method_2 ( var_1 , new type_2 ( 1 , 1 , 1 ) ) ; for ( type_2 var_4 : var_2 ) { var_3 = var_3 . method_3 ( var_4 ) ; } return var_3 ; }
[0]: public void method_1 ( ) { if ( ( contains ( var_1, var_2 [ y ] [ x ] ) ) && ( ( var_3 ) == true ) ) { ( y ) -- ; method_2 ( ) ; method_3 ( 0, 0, 0, ( ( var_4 ) / int_1 ) ) ; var_5. method_4 ( var_6 ) ; } else { var_5. method_4 ( var_7 ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string path ) { if ( ( var_1 ) == null ) { return path ; } for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] [ 0 ] . equals ( path ) ) || ( ( ( var_1 [ i ] [ 0 ] ) + string_1 ) . equals ( path ) ) ) { return var_1 [ i ] [ 1 ] ; } } return path ; }
[0]: public static void method_1 ( int id ) { type_1 var_1 = type_2. method_2 ( id ) ; if (! ( var_1. method_3 ( ) ) ) { var_1. method_4 ( true ) ; type_2. method_5 ( var_1 ) ; } java.util.calendar var_2 = type_3. method_6 ( var_1 ) ; type_4. i ( ( string_1 + id ), var_2. gettime ( ). tostring ( ) ) ; type_3. method_7 ( id, var_2 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { if ( ( this . var_2 . size ( ) ) == 0 ) return new java.util.arraylist < > ( ) ; type_1 [ ] var_1 = this . var_2 . method_2 ( new type_1 [ 0 ] ) ; java.util.list < type_1 > list = new java.util.arraylist < > ( var_1 . length ) ; for ( type_1 var_3 : var_1 ) { list . add ( var_3 ) ; } return list ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.string result = new java.lang.string ( ) ; type_2 var_2 = new type_3 ( string_1 ) ; result = var_2. format ( var_1 ) ; java.lang.system.out.println ( ( ( var_1 + string_2 ) + result ) ) ; return result ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 . method_3 ( ) ; if ( ( this . state ) == ( var_3 ) ) { this . var_4 . method_4 ( this . var_5 . method_5 ( ) ) ; this . var_4 . method_6 ( ) ; this . var_5 . method_6 ( ) ; if ( this . var_6 ) { this . method_7 ( ) ; this . var_6 = false ; } } }
[0]: public type_1 method_1 ( ) throws type_2 { type_1 var_1 = new type_1 ( ) ; double var_2 = var_3. method_2 ( ) ; try { for ( int i = var_3. method_3 ( var_2 ) ; i >= 0 ; i -- ) { var_1. method_4 ( var_3. get ( i ) ) ; } } catch ( java.lang.exception var_4 ) { throw new type_2 ( string_1 ) ; } return var_1 ; }

************

************
tgt: public boolean method_1 ( android.content.context var_1 , java.lang.string var_2 ) { if ( ( var_2 == null ) || ( var_2 . equals ( string_1 ) ) ) { return method_1 ( var_1 ) ; } java.lang.string var_3 = this . method_2 ( var_1 ) ; if ( var_3 . startswith ( var_2 ) ) { return true ; } java.lang.string var_4 = var_2 + ( type_1 . method_3 ( var_1 ) ) ; method_4 ( var_1 , var_4 ) ; return true ; }
[0]: private void method_1 ( ) { if ( var_1. method_2 ( ) ) { var_2 = false ; if ( var_1. method_3 ( var_3 ) ) { var_4. method_4 ( ) ; var_5. method_4 ( ) ; } method_6 ( ) ; } }

************

************
tgt: public static int method_1 ( type_1 var_1 , final int var_2 , final int var_3 ) { final int height = var_4 ; final int var_5 = var_6 ; int var_7 = 1 ; if ( ( height > var_3 ) || ( var_5 > var_2 ) ) { final int var_8 = height / int_1 ; final int var_9 = var_5 / int_1 ; while ( ( ( var_8 / var_7 ) > var_3 ) || ( ( var_9 / var_7 ) > var_2 ) ) { var_7 *= int_1 ; } } return var_7 ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = var_4. method_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; if ( var_3!= null ) { var_2. method_5 ( string_1, var_3 ) ; var_2. method_5 ( string_2, var_3. method_6 ( ) ) ; return string_3 ; } else { var_2. method_5 ( string_4, string_5 ) ; return string_6 ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { if ( var_2 < 0 ) var_2 = 0 ; if ( var_1 < 0 ) var_1 = 0 ; this . var_1 = var_1 + ( var_2 / int_1 ) ; this . var_2 = var_2 % int_1 ; this . settext ( java.lang.string.format ( string_1 , this . var_1 , this . var_2 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { final java.lang.string var_2 = var_1. gettext ( ) ; if ( method_2 ( var_2 ) ) { if (! ( ( ( ( ( var_3 ) && ( method_3 ( var_1 ) ) ) || ( method_4 ( var_2 ) ) ) || ( ( var_4 ) && ( method_5 ( var_2, var_5 ) ) ) ) || ( ( var_6 ) && ( method_5 ( var_2, var_7 ) ) ) ) ) { method_6 ( var_1. method_7 ( ), string_1 ) ; } } } }

************

************
tgt: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return type_2 . method_2 ( ) ; case 1 : return type_3 . method_2 ( ) ; case int_1 : return type_4 . method_2 ( ) ; case int_2 : return type_5 . method_2 ( ) ; } }
[0]: public void method_1 ( ) { java.lang.double var_1 = ( ( type_1 ) ( var_2. method_2 ( ) ) ). method_3 ( ) ; java.lang.system.out.println ( var_1 ) ; var_1 = type_2. method_4 ( var_1 ) ; java.lang.system.out.println ( var_1 ) ; method_5 ( string_1 ) ; method_6 ( var_1. tostring ( ) ) ; type_1 b = type_1. method_7 ( var_1 ). method_8 ( var_3 ) ; var_2. method_9 ( b ) ; var_4. method_9 ( b ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws type_3 { java.lang.string var_2 = type_4 . method_2 ( var_1 ) ; if ( var_2 . method_3 ( string_1 ) ) return var_3 ; java.lang.string var_4 = type_4 . method_4 ( var_1 ) ; if ( ( var_2 . method_3 ( string_2 ) ) || ( var_4 . equals ( string_3 ) ) ) return var_5 ; if ( var_2 . method_3 ( string_4 ) ) return var_6 ; method_5 ( var_1 ) ; return var_7 ; }
[0]: public void method_1 ( android.view.view var_1 ) { int var_2 = ( ( java.lang.integer ) ( var_1. method_2 ( ) ) ) ; type_1 var_3 ; if ( ( var_1. getid ( ) ) == ( var_4 ) ) { var_3 = var_5 ; } else if ( ( var_1. getid ( ) ) == ( var_6 ) ) { var_3 = var_7 ; } else { var_3 = var_8 ; } var_9. method_3 ( var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 status , java.lang.string message , type_2 var_1 ) { method_2 ( ) ; if ( ( status == ( var_3 ) ) && ( var_4 . method_4 ( var_1 ) ) ) { var_5 . method_5 ( type_3 . method_6 ( ) . method_7 ( ) ) ; } else { message = var_4 . method_8 ( message ) ; var_5 . method_9 ( message ) ; } }
[0]: public boolean method_1 ( ) { for ( java.util.map.entry < java.lang.string, java.util.list < java.lang.string > > var_1 : this. method_2 ( ) ) { java.lang.string key = var_1. method_3 ( ) ; for ( java.lang.string value : var_1. getvalue ( ) ) { if ( ( key. tolowercase ( ). contains ( string_2 ) ) && ( value. tolowercase ( ). contains ( string_2 ) ) ) { return true ; } } } return false ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , java.lang.object ... var_3 ) { switch ( var_1 ) { case var_4 : if ( var_2 == ( var_5 ) ) { type_1 . method_2 ( ) . method_3 ( ( ( java.lang.string ) ( var_3 [ 0 ] ) ) ) ; } break ; case var_6 : if ( var_2 == ( var_5 ) ) { type_2 . method_4 ( ) . method_5 ( ) ; method_6 ( ) ; } break ; } }
[0]: public void init ( ) { if ( var_1 ) { return ; } if (! ( var_2 ) ) { method_1 ( ) ; method_2 ( ) ; } method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , type_1 var_2 , type_2 var_3 ) { type_3 . method_2 ( string_1 , var_2 . method_3 ( ) ) ; boolean var_4 = var_5 . method_4 ( var_2 . method_3 ( ) ) ; type_3 . method_2 ( string_2 , var_4 ) ; var_3 . method_5 ( string_3 , true ) ; return string_5 ; }
[0]: public type_1 method_1 ( type_2 file ) { try { java.lang.string var_1 ; var_1 = var_2. method_2 ( file. method_3 ( ) ) ; return type_1. method_4 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { var_3. method_5 ( ) ; return type_1. fail ( var_3. method_6 ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.object [ ] var_1 = type_1 . method_2 ( var_2 , type_2 . tostring ( ) , var_3 ) ; if ( var_1 != null ) { for ( java.lang.object var_4 : var_1 ) { type_3 var_5 = new type_3 ( var_4 . tostring ( ) ) ; type_4 . method_3 ( var_4 . tostring ( ) , var_5 ) ; } } }
[0]: void method_1 ( type_1 target ) throws java.io.ioexception { java.io.bufferedreader var_1 = new java.io.bufferedreader ( new type_2 ( target. method_2 ( ) ) ) ; while (! ( var_1. method_3 ( ) ) ) { } while ( var_1. method_3 ( ) ) { try { java.lang.string msg = var_1. method_4 ( ) ; var_2. put ( msg ) ; } catch ( java.lang.exception var_3 ) { type_3. method_5 ( ( ) - > method_6 ( var_3. method_7 ( ) ) ) ; var_3. method_8 ( ) ; } } }

************

************
tgt: public int [ ] method_1 ( int id ) { int [ ] var_1 = new int [ int_1 ] ; int counter = 0 ; while ( ! ( var_2 . method_2 ( string_2 , id ) . equals ( string_3 ) ) ) { counter ++ ; } var_1 [ 0 ] = 1 + counter ; counter = 0 ; while ( ! ( var_2 . method_2 ( string_4 , id ) . equals ( string_3 ) ) ) { counter ++ ; } var_1 [ 1 ] = 1 + counter ; return var_1 ; }
[0]: public void method_1 ( ) { try { while ( ( var_1. method_2 ( var_2 ) ) == ( var_3 ) ) { java.lang.thread. method_3 ( int_1 ) ; } var_1. method_4 ( var_2, true ) ; } catch ( java.lang.exception var_4 ) { type_1. error ( string_1, var_4 ) ; var_2. method_5 ( var_5 ) ; var_6. method_6 ( var_2 ) ; } var_2. method_5 ( var_7 ) ; var_6. method_6 ( var_2 ) ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 , type_2 var_2 , java.lang.string var_3 ) throws type_3 { type_4 < ? > [ ] var_4 = var_1 . method_2 ( ( ( java.lang.string ) ( null ) ) , var_3 ) ; if ( var_4 != null ) { for ( type_4 < ? > var_5 : var_4 ) { var_2 . method_3 ( new type_5 ( var_6 , var_5 ) ) ; } } }
[0]: public void method_1 ( final type_1 n ) { final java.util.set < java.lang.string > var_1 = var_2 ; final type_2 id = ( ( type_2 ) ( n. method_2 ( ). gettype ( ) ) ) ; final java.lang.string token = id. method_3 ( ) ; var_1. add ( token ) ; final type_2 var_3 = ( ( type_2 ) ( n. method_4 ( ). gettype ( ) ) ) ; final java.lang.string var_4 = var_3. method_3 ( ) ; var_1. add ( var_4 ) ; }

************

************
tgt: private void method_1 ( final type_1 node , final type_2 < type_3 < ? > , type_1 > var_1 , final boolean var_2 ) { var_3 . method_2 ( ) ; if ( ( null != node ) && var_2 ) { var_3 . method_3 ( node ) ; } else if ( null != node ) { var_3 . method_4 ( node ) ; } }
[0]: public type_1 method_1 ( ) throws type_2 { if ( ( var_1. length ( ) ) == int_1 ) { final type_1 var_2 = var_1. method_2 ( 1 ) ; return ( var_2. method_3 ( ) ) == ( var_3 )? var_2 : new type_3 ( context, var_2 ) ; } return new type_3 ( context, type_4. method_4 ( var_1, 1, var_1. length ( ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) != null ) { java.lang.string var_3 = var_4 . gettext ( ) . tostring ( ) ; if ( ! ( method_2 ( var_5 ) . equals ( var_3 ) ) ) { var_2 . method_3 ( var_3 ) ; } else { var_2 . method_3 ( null ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( 0, 0, int_1, int_2 ) ; var_1. method_2 ( 0, int_3, int_1, int_2 ) ; var_1. method_2 ( int_4, int_2, int_2, int_5 ) ; var_1. method_2 ( int_4, int_6, int_2, int_5 ) ; }

************

************
tgt: public static java.util.set < type_1 > method_1 ( type_1 var_1 , java.util.set < type_1 > var_7 , java.util.set < type_2 > var_2 , java.util.set < type_2 > var_3 , int var_4 , java.util.set < type_1 > var_5 , java.util.set < type_1 > var_6 ) { java.util.list < java.util.list < type_1 > > var_8 = type_3 . method_2 ( var_1 , var_7 , var_2 , var_3 , var_4 , var_5 , var_6 , var_9 ) ; return type_3 . method_3 ( var_8 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( type_2. method_2 ( var_1. method_3 ( ) ). method_4 ( ) ) { ( var_2. count ) ++ ; this. name = method_5 ( var_1. method_3 ( ) ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { super . method_1 ( var_1 , var_2 , var_3 ) ; if ( ! ( var_4 ) ) { var_3 = method_2 ( var_3 ) ; var_4 = true ; var_1 . method_3 ( var_3 ) ; var_4 = false ; } }
[0]: public void method_1 ( type_1 var_1 ) { this. value = this. value. method_2 ( var_2 ) ; this. var_1 = var_3 ; this. var_4 = var_5 ; this. var_6 = new int [ int_1 ] ; type_2. method_3 ( var_7, 0, this. var_6, 0, int_1 ) ; if ( this. var_8 ) { this. id = string_1 ; this. name = null ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( ) ; var_3 . method_3 ( var_2 . method_4 ( ) ) ; var_3 . method_2 ( ) ; var_3 . method_5 ( new type_1 ( ) { public void method_6 ( ) { var_3 . method_7 ( ) ; } } ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. query ( var_5, var_6 class ). method_2 ( var_7, var_1 ). method_3 ( ) ; if ( var_3 == null ) { throw new type_2 ( java.lang.string.format ( string_1 ) ) ; } var_3. method_4 ( var_2 ) ; var_3. method_5 ( false ) ; var_4. update ( var_5, var_3 ) ; type_3. info ( string_2, var_1 ) ; }

************

************
tgt: public type_1 < java.lang.string > method_1 ( java.lang.string text , type_2 var_1 ) { try { final java.lang.string var_2 = var_3 . method_2 ( var_1 , text ) ; var_4 . info ( java.lang.string.format ( string_1 , var_1 . getid ( ) , var_1 . method_3 ( ) , var_2 ) ) ; return type_1 . method_4 ( var_2 ) ; } catch ( type_3 var_5 ) { var_4 . error ( string_2 , var_5 ) ; return type_1 . method_5 ( ) ; } }
[0]: private java.lang.string getname ( type_1 source ) { if ( ( source. method_1 ( ) )!= null ) { return ( ( getname ( source. method_1 ( ) ) ) + string_1 ) + ( source. method_2 ( ) ) ; } return source. method_2 ( ) ; }

************

************
tgt: private void method_1 ( ) { int var_1 = ( var_2 . size ( ) ) - ( var_3 ) ; if ( var_1 < ( var_2 . size ( ) ) ) { var_4 . method_2 ( var_2 . get ( var_1 ) . method_3 ( ) ) ; var_5 = true ; var_6 = var_7 ; } else { var_8 = true ; } }
[0]: public void setvalue ( type_1 var_1, int var_2 ) { var_2 &= ~ ( var_2 & int_1 ) ; if ( var_2 > ( var_3 ) ) { var_2 = var_3 ; } if ( var_2 < ( min ) ) { var_2 = min ; } switch ( var_1 ) { case var_4 : this. var_5 = var_2 ; break ; case var_6 : this. var_7 = var_2 ; break ; case var_8 : this. value = var_2 ; method_1 ( ) ; break ; default : break ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_1 . method_2 ( position ) ) ) ; if ( position > 0 ) { var_3 = var_2 ; } }
[0]: public void method_1 ( java.lang.string info ) { final type_1 var_1 = type_1. method_2 ( method_3 ( ), info, var_2 ) ; var_1. show ( ) ; new type_2 ( ). method_4 ( new type_3 ( ) { public void method_5 ( ) { var_1. method_6 ( ) ; } }, int_1 ) ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( java.lang.integer var_1 , type_2 var_2 ) { type_3 var_3 = method_2 ( var_2 ) ; java.util.list < type_1 > list = var_3 . method_3 ( var_1 , var_4 , method_4 ( ) ) ; if ( ( ( list . size ( ) ) == 0 ) && ( var_1 > 1 ) ) { var_1 -- ; method_5 ( ) . method_6 ( string_1 , var_1 ) ; list = var_3 . method_3 ( var_1 , var_4 , method_4 ( ) ) ; } return list ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( ( string_1 + ( this. path ) ) ) ; if ( ( var_1. size ( ) ) > 0 ) java.lang.system.out.println ( string_2 ) ; else java.lang.system.out.println ( string_3 ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; ++ i ) java.lang.system.out.println ( ( string_4 + ( var_1. get ( i ) ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.integer var_1 ) { java.util.list < type_1 > var_2 = type_2 . get ( ) . method_2 ( var_1 ) ; for ( type_1 var_3 : var_2 ) { type_2 . get ( ) . method_3 ( var_3 ) ; } type_3 . get ( ) . method_3 ( var_1 ) ; }
[0]: public void method_1 ( type_1 event ) { final type_2 var_1 = ( ( type_2 ) ( var_2 ) ) ; if ( ( var_1. getdata ( ) ) == ( var_3 ) ) { if ( var_1. getselection ( ) ) { if (! ( var_1. method_2 ( ) ) ) { var_1. method_3 ( true ) ; } } else { if ( var_1. method_2 ( ) ) { var_1. method_3 ( false ) ; var_1. method_4 ( true ) ; } } } }

************

************
tgt: protected void method_1 ( int var_1 , double var_2 , double var_3 ) { if ( ( var_4 ) != null ) { type_1 var_5 = var_6 . method_2 ( var_1 ) ; if ( var_5 == null ) return ; this . var_7 = var_8 ; this . var_9 = var_10 ; } else this . var_7 = new type_2 ( ) ; this . method_3 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( final type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( var_1. method_3 ( ) ) ; var_2. error ( var_1. method_4 ( ) ) ; type_4 var_3 = var_4. method_5 ( type_5. name ( ) ) ; var_5. method_6 ( var_6, var_3. method_7 ( ), var_3. method_8 ( ), var_1. method_4 ( ) ) ; }

************

************
tgt: protected void method_1 ( float var_1 , float var_2 ) { var_4 = var_5 . method_2 ( this ) ; super . method_1 ( var_1 , var_2 ) ; var_3 . method_1 ( ) ; this . method_3 ( true ) ; var_6 = var_7 . method_4 ( this ) ; this . method_5 ( ) ; }
[0]: public static void assertequals ( java.lang.string message, java.lang.object var_1, java.lang.object var_2 ) { boolean var_3 ; if ( var_1 == null ) { var_3 = var_2 == null ; } else { var_3 = var_1. equals ( var_2 ) ; } type_1. asserttrue ( message, var_3 ) ; }

************

************
tgt: public java.util.collection < type_1 > method_1 ( java.util.collection < type_1 > var_1 ) { if ( var_1 == null ) { return null ; } type_2 var_2 = this . method_2 ( ) ; try { for ( type_1 var_3 : var_1 ) { method_3 ( var_2 ) . method_1 ( var_3 ) ; } var_2 . commit ( ) ; } finally { type_3 . method_4 ( var_2 ) ; } return var_1 ; }
[0]: public int method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; ++ i ) { type_1 var_3 = method_2 ( ( i + 1 ) ) ; if ( var_3 == null ) return 0 ; if ( ( var_4 ) == var_1 ) { return i + 1 ; } } return 0 ; }

************

************
tgt: private void method_1 ( ) { if ( var_1 . method_2 ( ) ) if ( ( var_1 . method_3 ( ) ) == ( var_2 ) ) { var_3 . method_4 ( true ) ; var_4 . method_4 ( false ) ; } else { var_3 . method_4 ( false ) ; var_4 . method_4 ( true ) ; } else { var_3 . method_4 ( false ) ; var_4 . method_4 ( false ) ; } }
[0]: private void method_1 ( java.lang.class var_1, int var_2 ) { method_2 ( var_2 ) ; java.lang.string var_3 = type_1. tostring ( var_1. method_3 ( ) ) ; if ( var_3. isempty ( ) ) { var_4. append ( ( string_1 + ( var_1. method_4 ( ) ) ) ) ; } else { var_4. append ( ( ( var_3 + string_2 ) + ( var_1. method_4 ( ) ) ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 view , type_2 var_1 ) { if ( ( ( var_2 . x ) <= ( view . method_2 ( ) ) ) && ( ( var_2 . y ) <= ( view . method_3 ( ) ) ) ) { method_4 ( view , var_1 ) ; } else { method_5 ( view , var_1 ) ; } }
[0]: public void method_1 ( ) { while ( true ) { try { java.lang.string message ; int length = var_1. method_2 ( ) ; if ( length > 0 ) { byte [ ] b = new byte [ length ] ; var_1. method_3 ( b ) ; message = new java.lang.string ( b, string_1 ) ; this. method_4 ( type_1. method_5 ( message ) ) ; } } catch ( java.io.ioexception var_2 ) { var_2. method_6 ( ) ; break ; } } } }

************

************
tgt: private void method_1 ( int ... var_1 ) { type_1 var_2 = new type_1 ( var_1 . length ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] ) != 0 ) { var_2 . set ( i ) ; } } type_2 . assertthat ( var_3 . method_2 ( ) ) . method_3 ( var_2 ) ; }
[0]: public void method_1 ( type_1 event ) { if ( event. method_2 ( ) ) { return ; } int [ ] var_1 = var_2. method_3 ( ) ; java.lang.string id = ( ( java.lang.string ) ( var_2. method_4 ( var_1 [ 0 ], 0 ) ) ) ; java.lang.double var_3 = var_4. get ( id. trim ( ) ) ; var_5. method_5 ( ). method_6 ( var_3 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = null ; type_2 . method_2 ( context , var_1 , new type_3 ( ) { public void method_3 ( int var_3 , java.lang.string var_4 ) { type_4 . i ( string_1 , ( string_2 + var_3 ) ) ; type_4 . i ( string_1 , ( string_3 + var_4 ) ) ; } } ) ; return var_2 ; }
[0]: public static void method_1 ( type_1 var_1 ) { java.util.set < type_1 > var_2 = type_2. method_2 ( ). method_3 ( ) ; var_2. add ( var_1 ) ; type_2. method_2 ( ). method_4 ( ). add ( var_1 ) ; var_1. method_5 ( ) ; type_3. method_6 ( ) ; }

************

************
tgt: private boolean method_1 ( java.util.map < java.lang.integer , type_1 > nodes , java.util.list < java.lang.string [ ] > var_1 ) { boolean result = false ; for ( java.lang.string [ ] type_2 : var_1 ) { result = method_1 ( nodes , type_2 ) ; if ( result ) { break ; } } return result ; }
[0]: public void method_1 ( java.util.map < java.lang.string,? > var_1 ) { this. var_2 = ( ( java.lang.string ) ( var_1. get ( string_1 ) ) ) ; this. var_3 = ( ( java.lang.string ) ( var_1. get ( var_4 ) ) ) ; this. var_5 = type_1. method_2 ( var_1. get ( string_2 ). tostring ( ) ) ; this. var_6 = true ; }

************

************
tgt: public int method_1 ( string key ) { int var_1 = 0 ; switch ( var_2 ) { case 0 : var_1 = method_2 ( key ) ; break ; case 1 : var_1 = method_3 ( key ) ; break ; default : java.lang.system.out.println ( string_3 ) ; java.lang.system.exit ( 0 ) ; } return var_1 ; }
[0]: protected void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2. method_2 ( var_3 ) ) ) ; type_2 var_4 = var_1. method_3 ( ) ; boolean var_5 = ( var_4!= null ) && ( var_4. method_4 ( ) ) ; boolean var_6 = ( var_4. gettype ( ) ) == ( var_7 ) ; if ( var_5 || var_6 ) { method_5 ( ) ; } else { type_3. method_6 ( var_2, var_2. getstring ( var_8 ), var_9 ). show ( ) ; } }

************

************
tgt: public type_1 < type_2 < type_3 > > method_1 ( final type_2 < type_3 > var_1 , final java.util.set < type_2 < type_3 > > var_2 ) { final java.util.collection < type_2 < type_3 > > var_3 = new java.util.hashset ( var_2 ) ; var_3 . add ( var_1 ) ; return var_3 ; }
[0]: public int method_1 ( long var_1 ) { type_1 var_2 = method_2 ( var_1 ) ; var_2. method_3 ( var_3 ) ; int var_4 = var_5. method_4 ( ) ; if ( var_6. method_5 ( ) ) { var_6. method_6 ( ( ( ( string_1 + var_1 ) + string_2 ) + var_4 ) ) ; } return var_4 ; }

************

************
tgt: private static void method_1 ( ) { var_1 = new int [ ] { int_1 , int_1 , 0 , 0 , 0 , int_2 , int_3 , 0 , int_4 , int_4 , 0 , int_5 , int_2 , int_6 , 0 , int_6 , 0 , int_2 , 0 , int_4 , int_4 , 0 , int_7 , int_8 , 0 , 0 , 0 , 0 , int_10 , 0 , int_11 } ; }
[0]: public type_1 remove ( type_2 var_1 ) { type_1 var_2 = this. var_3 ; this. var_4 = false ; if ( ( this. var_5 ) == 0 ) { this. var_3 = new type_1 ( int_1, int_1 ) ; } else { this. var_3 = var_6. method_1 ( var_7, ( ( var_5 ) - 1 ) ). remove ( var_1 ) ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { switch ( var_3 ) { case var_4 : method_3 ( ) . method_4 ( var_6 . main , var_1 ) ; break ; case var_7 : case var_5 : case var_8 : default : method_3 ( ) . method_4 ( var_9 , var_1 ) ; break ; } method_5 ( ) ; return true ; } return super . method_1 ( var_1 ) ; }
[0]: protected type_1 method_1 ( java.lang.string name ) { type_1 var_1 = null ; if ( ( var_2 )!= null ) var_1 = var_2. method_2 ( name ) ; if ( ( ( var_3 )!= null ) && ( var_1!= null ) ) var_1 = var_3. method_2 ( name ) ; return var_1 ; }

************

************
tgt: public long method_1 ( java.lang.string name ) { java.lang.string var_1 = method_2 ( name ) ; if ( var_1 == null ) { return - 1 ; } for ( type_1 var_2 : var_3 ) { try { java.util.date date = var_2 . method_3 ( var_1 ) ; return date . gettime ( ) ; } catch ( type_2 var_4 ) { } } throw new type_3 ( ( string_1 + var_1 ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { try { type_1 var_1 = new type_1 ( new type_2 ( ), int_1, int_2, int_3, int_4 ) ; var_1. start ( ) ; } catch ( type_3 var_2 ) { var_2. method_1 ( ) ; } }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { if ( type_2 . getname ( ) . equals ( var_1 . method_2 ( ) ) ) { if ( var_1 . method_3 ( ) ) { return type_3 . getname ( ) ; } else { return type_4 . getname ( ) ; } } else { if ( var_1 . method_3 ( ) ) { return type_5 . getname ( ) ; } else { return type_6 . getname ( ) ; } } }
[0]: private void method_1 ( android.content.context context, type_1 var_1 ) { type_2 a = context. method_2 ( var_1, var_2 ) ; final int var_3 = a. method_3 ( ) ; for ( int i = 0 ; i < var_3 ; ++ i ) { int var_4 = a. method_4 ( i ) ; switch ( var_4 ) { case var_5 : var_6 = a. getcolor ( var_4, 0 ) ; method_5 ( ) ; break ; } } a. method_6 ( ) ; } }

************

************
tgt: private void method_1 ( type_2 n ) { java.util.map < java.lang.string , type_2 > var_1 = new java.util.hashmap < java.lang.string , type_2 > ( ) ; for ( type_3 var_2 : var_3 ) { var_1 . put ( var_2 . name ( ) . tolowercase ( ) , n ) ; } method_1 ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws type_3 { if ( ( ( var_2. getvalue ( ) )!= null ) && ( ( var_2. method_2 ( ) ) == ( var_3 ) ) ) { type_4 var_4 = ( ( type_4 ) ( var_1 ) ) ; var_4. method_3 ( var_2. method_4 ( ), var_2. getname ( ), ( ( type_5 ) ( var_2. getvalue ( ) ) ) ) ; } }

************

************
tgt: public int method_1 ( ) { int var_1 ; if ( ( var_2 ) > ( var_3 ) ) var_1 = var_3 ; else var_1 = var_2 ; if ( var_1 > ( var_4 ) ) var_1 = var_4 ; var_1 = ( ( ( var_2 ) + ( var_3 ) ) + ( var_4 ) ) - var_1 ; return var_1 ; }
[0]: public static void method_1 ( type_1 var_1 ) throws java.lang.exception { var_2. method_2 ( type_2. method_3 ( var_1 ) ) ; java.util.list < type_1 > var_3 = var_1. method_4 ( string_1 ) ; for ( type_1 var_4 : var_3 ) { var_5. method_2 ( type_2. method_5 ( var_4 ) ) ; java.util.list < type_1 > var_6 = var_4. method_4 ( string_2 ) ; for ( type_1 var_7 : var_6 ) { var_8. method_2 ( type_2. method_6 ( var_7 ) ) ; } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = var_2 . method_2 ( type_2 . method_3 ( string_1 , int_1 ) ) . first ( ) ; type_3 var_3 = type_4 . method_4 ( var_1 ) ; type_1 var_4 = type_4 . method_1 ( var_3 , var_5 class ) ; assertequals ( var_1 , var_4 ) ; }
[0]: public static type_1 key ( type_2 var_1, java.lang.class <? extends type_3 > var_2, type_4 var_3 ) { type_2 var_4 = ( var_1. get ( var_5 class ). var_6 )? var_1. trim ( type_5. method_1 ( var_7 < java.lang.class <? extends type_3 > > method_2 ( var_2 ), var_3 ) ) : var_1 ; return new type_1 ( var_8, new type_6 ( var_4, var_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( ) ; var_2 = null ; } try { var_3 . method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_5 . method_4 ( var_6 , string_1 , var_4 ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 result ) throws type_3 { type_4 var_2 = new type_4 ( var_1 ) ; if ( result. method_2 ( ) ) { var_3. info ( string_1 ) ; return string_2 ; } if (! ( var_2. method_3 ( ) ) ) { var_3. info ( string_3 ) ; return string_4 ; } var_3. info ( string_5 ) ; return string_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( string_1 ) ; type_2 var_2 = new type_3 ( ) ; var_2 . method_3 ( var_1 ) ; var_3 . method_4 ( string_1 , var_2 , string_2 , new type_4 ( ) ) ; method_5 ( var_4 ) . method_6 ( new type_6 ( string_1 , string_2 ) ) ; }
[0]: public void method_1 ( final type_1 file ) { var_1. method_2 ( ( ( ( string_1 + ( file. getname ( ) ) ) + string_2 ) + ( file. method_3 ( ) ) ) ) ; if ( file instanceof type_2 ) { method_4 ( ( ( type_2 ) ( file ) ), var_2 ) ; } else if ( file instanceof type_3 ) { method_5 ( ( ( type_3 ) ( file ) ), var_3 ) ; } }

************

************
tgt: public type_1 < type_2 > . var_1 method_1 ( type_2 value ) { type_1 < type_2 > . var_1 x = var_2 ; var_3 . key = value ; while ( ( x . key ) != value ) { x = var_4 ; } var_3 . key = null ; if ( x == ( var_3 ) ) { return null ; } return x ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. split ( string_1 ) ; java.lang.string var_3 = var_2 [ 1 ] ; if ( ( var_2 [ 1 ] )!= string_2 ) { java.lang.string var_4 = var_3. trim ( ) ; java.lang.string [ ] id = var_4. split ( string_3 ) ; return id [ 0 ] ; } else { return var_1. trim ( ) ; } }

************

************
tgt: public void method_1 ( type_1 p ) { if ( ! ( var_1 . contains ( p ) ) ) { method_2 ( p ) ; var_1 . add ( p ) ; type_2 . method_3 ( p , var_2 . method_4 ( ) . method_5 ( ) ) ; } else method_2 ( p ) ; }
[0]: public type_1 method_1 ( ) { if ( type_2. method_2 ( ) ) { type_2. method_3 ( java.lang.string.format ( string_1, getid ( ), method_4 ( ), java.lang.thread. method_5 ( ), type_3. method_6 ( java.lang.thread. method_5 ( ). method_7 ( ), int_1 ) ) ) ; } return this. var_1. method_8 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( true ) ; if ( ( var_4 ) == null ) { var_4 = new java.util.arraylist < > ( ) ; } if ( ! ( type_4 . method_5 ( ) ) ) { var_3 = getactivity ( ) . method_7 ( ) ; method_6 ( getactivity ( ) ) ; } }
[0]: public void method_1 ( java.lang.string filename, type_1 node ) { java.util.list < type_1 > temp ; temp = this. var_1. get ( node ) ; if ( temp!= null ) { temp. add ( node ) ; } else { temp = new java.util.arraylist < type_1 > ( ) ; temp. add ( node ) ; this. var_1. put ( filename, temp ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( method_2 ( ) . method_3 ( var_2 ) ) { var_3 = method_2 ( ) . getstring ( var_2 ) ; var_4 = type_2 . get ( var_3 ) ; type_3 var_5 = new type_3 ( var_3 , getcontext ( ) ) ; var_5 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { var_3. add ( var_1 ) ; if ( var_2 ) { final java.util.arraylist < java.lang.string > var_4 = method_2 ( ) ; if ( var_4!= null ) for ( java.lang.string line : var_4 ) var_1. method_3 ( type_2. method_4 ( ( ( var_5 ) + line ) ) ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; if ( var_2 ) type_1 . method_3 ( type_2 . method_4 ( ) , method_5 ( ) , var_3 ) . show ( ) ; else type_1 . method_3 ( type_2 . method_4 ( ) , method_6 ( ) , var_3 ) . show ( ) ; var_2 = ! ( var_2 ) ; }
[0]: public boolean method_1 ( final java.lang.string var_1 ) throws java.lang.exception { try { method_2 ( var_1 ) ; method_3 ( var_1, var_2 ) ; type_1 var_3 = new type_1 ( ) ; return ( ( java.lang.long ) ( var_3. method_4 ( method_5 ( ). method_6 ( ), ( ( string_1 + var_1 ) + string_2 ) ) ) ) > 0 ; } catch ( java.lang.exception var_4 ) { throw new java.lang.exception ( string_3, var_4 ) ; } }

************

************
tgt: private void method_1 ( int var_1 , java.lang.string var_2 ) { var_3 = var_1 ; var_4 . method_3 ( false ) ; var_5 . method_4 ( var_6 ) ; var_7 . method_4 ( var_8 ) ; if ( var_9 . method_5 ( var_1 ) ) { var_9 . method_6 ( var_1 ) ; var_9 . method_7 ( var_1 ) ; } else { method_8 ( getstring ( var_10 ) ) ; type_1 . method_9 ( ) . method_10 ( var_1 , var_2 , this ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.list < java.lang.integer > list = new java.util.arraylist < java.lang.integer > ( ) ; list. method_1 ( java.util.arrays.aslist ( int_1, int_1, int_2, int_1, int_2, int_3, int_1, int_4, int_1, int_5, int_2, 1 ) ) ; java.lang.system.out.println ( type_1. method_2 ( list, int_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) ; type_2 var_2 = type_2 . method_2 ( ) ; type_3 var_3 = ( ( type_3 ) ( var_2 . method_3 ( var_4 ) ) ) ; for ( type_4 var_5 : var_6 ) { type_5 var_7 = new type_5 ( var_5 ) ; var_2 . method_4 ( type_6 . method_5 ( var_7 ) , var_7 ) ; var_3 . add ( var_7 ) ; } var_3 . method_6 ( ) ; }
[0]: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < type_1 > var_1 = var_2. method_2 ( ) ; java.util.arraylist < java.lang.string > out = new java.util.arraylist < > ( ) ; for ( type_1 var_3 : var_1 ) { out. add ( var_3. getname ( ) ) ; } return out ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( type_2 var_1 ) { if ( ! ( var_2 ) ) { return null ; } java.util.arraylist < type_1 > var_4 = new java.util.arraylist < type_1 > ( ) ; for ( type_1 var_5 : var_6 ) { if ( ( var_5 . method_3 ( var_1 ) ) && ( var_5 . method_4 ( var_1 ) ) ) { var_4 . add ( var_5 ) ; } } type_3 . method_5 ( var_4 ) ; return var_4 ; }
[0]: public type_1 method_1 ( ) { try { if ( ( var_1. size ( ) ) > 0 ) { type_1 var_2 = ( ( type_1 ) ( super. method_1 ( ) ) ) ; var_3. method_2 ( ) ; var_2. method_3 ( this ) ; return var_2 ; } else { return this ; } } catch ( type_2 var_4 ) { throw new type_3 ( string_1 ) ; } }

************

************
tgt: public boolean method_1 ( char var_1 ) { int var_2 = ( var_3 ) + 1 ; if ( var_2 >= ( var_4 . length ( ) ) ) return false ; char c = var_4 . method_2 ( var_2 ) ; while ( method_3 ( c ) ) { ++ var_2 ; if ( var_2 >= ( var_4 . length ( ) ) ) return false ; c = var_4 . method_2 ( var_2 ) ; } return c == var_1 ; }
[0]: public int method_1 ( int var_1, boolean var_2 ) { int var_3 = this. var_4. method_2 ( var_1, var_2 ) ; if (! var_2 ) { this. method_3 ( ) ; if (! ( var_5 ) ) { var_6 += var_3 ; } } return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.boolean var_2 ) { if ( var_2 ) { type_2 . method_2 ( ) ; } java.util.arraylist < type_2 > c = type_2 . method_4 ( var_1 ) ; for ( type_3 i : var_3 ) { i . method_3 ( c , var_2 ) ; } }
[0]: public boolean method_1 ( type_1 node ) throws java.lang.exception { if ( ( node. method_2 ( ) )!= null ) { node. method_2 ( ). method_3 ( this ) ; } if ( ( node. method_4 ( ) )!= null ) { node. method_4 ( ). method_3 ( this ) ; } return method_5 ( node ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( var_1 ) < ( var_3 ) ) ) var_4 = method_2 ( var_5 ) ; else if ( ( ( var_1 ) >= ( var_3 ) ) && ( ( var_1 ) < ( var_6 ) ) ) var_4 = method_2 ( var_7 ) ; else { var_4 = method_2 ( var_8 ) ; java.lang.system.out.println ( string_2 ) ; } }
[0]: public void execute ( ) { double var_1 = var_2. method_1 ( ). method_2 ( ) ; method_3 ( ) ; double var_3 = var_4. method_4 ( ). method_5 ( var_5. method_6 ( ) ) ; double var_6 = var_7. method_7 ( 0, var_3 ) ; var_8. method_8 ( ( var_1 + var_6 ), ( var_1 - var_6 ) ) ; }

************

************
tgt: private type_1 method_1 ( ) { java.lang.string var_1 = null ; try { var_1 = type_2 . method_2 ( ) . method_3 ( string_1 ) ; } catch ( java.lang.exception var_2 ) { } if ( var_1 == null ) { var_1 = string_2 ; } return new type_1 ( var_1 ) ; }
[0]: private static type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.util.properties var_3 = new java.util.properties ( ) ; var_3. put ( string_1, var_1 ) ; var_3. put ( string_2, var_2 ) ; var_3. put ( string_3, string_4 ) ; var_3. put ( string_5, string_6 ) ; var_3. put ( string_7, string_8 ) ; var_3. put ( string_9, 1 ) ; return new type_1 ( var_3 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws type_2 { var_1 . settext ( var_1 . getname ( ) ) ; var_1 . method_4 ( false ) ; var_1 . method_5 ( string_2 ) ; if ( ( var_1 . method_2 ( ) ) == null ) return ; type_3 date = new type_3 ( var_1 . method_2 ( ) . gettime ( ) ) ; var_1 . method_3 ( new type_4 ( string_1 ) . format ( date ) ) ; }
[0]: private int method_1 ( type_1 [ ] var_1 ) { int start = 0 ; double var_2 = 0 ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { if ( ( var_4 [ i ] [ j ] ) > var_2 ) { var_2 = var_4 [ i ] [ j ] ; start = i ; } } } return start ; } return - 1 ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( var_1 ) { if ( ( - 1 ) == ( var_2 . method_2 ( ) . method_3 ( var_3 ) ) ) { var_2 = var_2 . method_4 ( ) . method_5 ( var_3 ) . build ( ) ; } } else { } }
[0]: public void execute ( type_1 var_1, type_2 var_2 ) throws type_3 { if ( var_3 ) { var_2. method_1 ( new type_4 ( var_1, var_4, var_5 ) ) ; } else { throw new type_3 ( ( ( string_1 + ( this ) ) + string_2 ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; android.content.intent intent = getintent ( ) ; type_1 var_3 = intent . method_3 ( ) ; type_2 var_4 = ( ( type_2 ) ( var_3 . method_4 ( var_5 ) ) ) ; type_3 var_6 = type_3 . method_5 ( var_4 ) ; method_6 ( ) . method_7 ( ) . add ( var_7 , var_6 , var_8 ) . commit ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( ). method_3 ( ) ; if ( var_1!= null ) { java.util.list <? extends type_1 > var_3 = var_1. method_4 ( ) ; for ( type_1 var_4 : var_3 ) java.lang.system.out.println ( ( ( var_4. method_5 ( ) ) + ( var_4. method_5 ( ) ) ) ) ; java.lang.string var_5 = var_2. method_2 ( ). method_3 ( ). method_5 ( ) ; type_2. method_6 ( var_5, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( int_1 , int_2 , int_3 ) ; type_2 . assertequals ( 1 , var_1 . method_2 ( ) ) ; type_2 . assertequals ( int_1 , var_1 . method_3 ( ) ) ; type_2 . assertequals ( int_2 , var_1 . method_4 ( ) ) ; type_2 . assertequals ( int_3 , var_1 . method_5 ( ) ) ; }
[0]: public boolean method_1 ( java.lang.string id ) throws type_1 { type_2 var_1 = method_2 ( ) ; try { if ( type_3. method_3 ( id ) ) { type_4 var_2 = new type_4 ( var_1 ) ; return var_2. method_4 ( method_5 ( id ), var_3 class ) ; } else { type_5 var_4 = new type_5 ( var_1 ) ; java.lang.string var_5 = type_3. method_6 ( id ) ; return var_4. method_4 ( method_5 ( var_5 ), var_6 class ) ; } } finally { method_7 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 . method_2 ( ) ) ) ; type_3 . method_3 ( var_1 . method_2 ( ) . getcontext ( ) , ( string_1 + ( var_2 . method_4 ( type_4 . method_5 ( ) ) ) ) , var_3 ) . show ( ) ; var_1 . method_6 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { char var_1 = char_1 ; int a ; final int var_2 = int_1 ; final int var_3 = int_2 ; final int var_4 = int_3 ; final int var_5 = int_2 ; for ( a = var_2 ; a <= var_3 ; a ++ ) var_1 = ( ( char ) ( a ) ) ; java.lang.system.out.print ( ( string_1 + var_1 ) ) ; if ( ( a == var_4 ) || ( a == var_5 ) ) java.lang.system.out.println ( ) ; java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 . method_2 ( var_2 ) ) ) { var_3 . method_3 ( var_4 ) ; method_4 ( ) ; } else if ( ! ( method_5 ( ) ) ) { var_3 . method_3 ( var_4 ) ; method_6 ( ) ; } else { var_3 . method_3 ( var_5 ) ; type_1 var_6 = new type_2 ( ) ; var_1 . method_7 ( var_2 , 0 , 0 , var_6 ) ; } }
[0]: public void method_1 ( ) { try { type_1. info ( string_1 ) ; final boolean var_1 = method_2 ( var_2. method_3 ( ), var_2. out ( ) ) ; type_1. info ( string_2, ( var_1? string_3 : string_4 ) ) ; } catch ( java.lang.exception var_3 ) { type_1. error ( var_3, string_5 ) ; } try { var_2. method_4 ( ) ; } catch ( java.lang.exception var_3 ) { type_1. error ( var_3, string_6 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( ( var_3 ) != null ) { var_2 . method_2 ( var_4 , var_1 ) ; final type_3 var_5 = var_1 . method_3 ( var_6 ) ; new type_4 ( getactivity ( ) , var_3 , var_5 , 0 ) ; } }
[0]: public void method_1 ( ) { try { synchronized ( this ) { var_1. method_2 ( var_2 ) ; java.lang.thread. method_3 ( this. offset ) ; while (! ( java.lang.thread. method_4 ( ) ) ) { var_1. method_2 ( var_3 ) ; java.lang.thread. method_3 ( var_4 ) ; var_1. method_2 ( var_2 ) ; java.lang.thread. method_3 ( var_5 ) ; } } } catch ( type_1 var_6 ) { java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: public void method_1 ( java.lang.long var_1 ) { type_1 var_2 = var_3 . get ( ) . get ( java.lang.string.format ( string_1 , var_1 ) , var_4 class ) ; java.lang.string var_5 = var_6 . method_2 ( var_1 ) ; type_2 var_7 = var_8 . method_3 ( var_9 , var_5 , true ) ; if ( var_2 == null ) { if ( var_7 != null ) method_4 ( var_5 ) ; } else { if ( var_7 == null ) { method_5 ( var_5 ) ; } else { method_6 ( var_5 ) ; } } }
[0]: public type_1 < type_2 > iterator ( ) { type_2 [ ] var_1 = new type_2 [ size ] ; type_3 var_2 = new type_3 ( var_3 ) ; i = 0 ; while (! ( var_2. isempty ( ) ) ) { var_1 [ ( ( i ) ++ ) ] = var_2. method_1 ( ) ; } return new type_4 < type_2 > ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . add ( var_2 ) ; var_1 . add ( var_2 ) ; final type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( var_4 ) ; var_3 . method_3 ( var_5 ) ; var_3 . method_4 ( string_1 ) ; final type_2 < type_3 , type_4 > result = new type_2 < type_3 , type_4 > ( ) ; var_3 . method_5 ( result ) ; type_5 . method_6 ( result . method_7 ( ) ) ; var_6 = method_8 ( result ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { type_3 < type_2 > var_2 = var_3 < type_2 > method_2 ( ). method_3 ( new type_4 ( ) ). method_4 ( string_1 ). method_5 ( var_4 class ). build ( ) ; var_1. method_6 ( var_2 ) ; var_1. method_6 ( new type_5 ( var_2. method_7 ( ). method_8 ( ) ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 t ) { if ( ( t == null ) && ( ( this . var_1 ) == null ) ) { return true ; } if ( t == null ) { return false ; } return t . equals ( var_1 ) ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2. method_2 ( ) ) { if ( var_1 instanceof type_2 ) ( ( type_2 ) ( var_1 ) ). method_1 ( ) ; } for ( type_3 var_3 : var_2. method_3 ( ) ) { type_4 var_4 = var_3. method_4 ( var_5 class ) ; if ( var_4!= null ) var_6. method_1 ( ) ; } var_2. method_5 ( ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { if ( var_1 == null ) return 0 ; int var_2 = method_2 ( var_3 ) ; int var_4 = method_2 ( var_5 ) ; if ( var_2 == var_4 ) { return ( ( int ) ( ( java.lang.math.pow ( int_1 , var_2 ) ) + ( method_1 ( var_5 ) ) ) ) ; } else return ( ( int ) ( java.lang.math.pow ( int_1 , var_4 ) ) ) + ( method_1 ( var_3 ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_2 data ) { switch ( var_1. getid ( ) ) { case var_2 : { if ( ( data!= null ) && ( data. method_2 ( ) ) ) { method_3 ( data. getstring ( 0 ) ) ; } break ; } case var_3 : { type_2 var_4 = ( ( type_3 ) ( data ) ). var_5 ; method_4 ( var_4, data ) ; break ; } } } }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 , int var_2 ) { try { type_1 var_3 = new type_1 ( var_1 , var_2 ) ; type_2 out = new type_2 ( var_3 . method_2 ( ) , true ) ; java.io.bufferedreader var_4 = new java.io.bufferedreader ( new type_3 ( var_3 . method_3 ( ) ) ) ; int data = var_4 . method_4 ( ) ; var_3 . method_5 ( ) ; return data != ( - 1 ) ; } catch ( java.io.ioexception var_5 ) { } return false ; }
[0]: public void method_1 ( android.view.view view ) { if ( var_1 ) type_1. method_2 ( var_2, string_1 ) ; var_3 = false ; type_2 var_4 = ( ( type_2 ) ( method_3 ( var_5 ) ) ) ; if ( var_6 ) { var_7. method_4 ( ) ; var_4. method_5 ( method_6 ( ). method_7 ( var_8 ) ) ; } else { var_7. method_8 ( ) ; var_4. method_5 ( method_6 ( ). method_7 ( var_9 ) ) ; } }

************

************
tgt: private void method_1 ( int t ) { type_1 var_2 = var_1 [ t ] ; var_7 -= var_2 . method_3 ( ) ; var_2 . method_2 ( var_3 [ t ] ) ; var_7 += var_2 . method_3 ( ) ; type_1 var_5 = var_1 [ ( t + 1 ) ] ; var_7 -= var_5 . method_3 ( ) ; var_5 . method_4 ( var_3 [ t ] ) ; var_7 += var_5 . method_3 ( ) ; var_1 [ t ] = var_1 [ ( t + 1 ) ] ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. method_2 ( type_1. get ( string_1 ) ). method_3 ( type_2. status ( ). method_4 ( ) ). method_3 ( method_5 ( ). attribute ( string_2, var_2 ) ). method_3 ( method_5 ( ). size ( 1 ) ). method_3 ( type_2. view ( ). name ( string_3 ) ) ; type_3. method_6 ( var_3 ). method_7 ( ) ; type_3. method_8 ( var_3 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.object var_1 , java.lang.object var_2 , type_1 var_3 ) { if ( ( var_4 [ index ] ) != null ) { var_5 [ index ] . method_2 ( method_3 ( ( ( var_6 ) + index ) ) ) ; } return true ; }
[0]: protected void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 ; if ( type_3. method_2 ( var_4 ) ) { var_4 = method_3 ( var_1, var_5. method_4 ( ). getname ( ) ) ; } if ( type_3. method_2 ( var_6 ) ) { var_4 = method_3 ( var_1, var_7. method_4 ( ). getname ( ) ) ; } }

************

************
tgt: public synchronized void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_5 . method_2 ( var_1 ) ) { java.lang.system.out.println ( string_3 ) ; } else { java.util.list < type_2 > var_3 = var_4 . get ( var_1 ) ; var_3 . add ( var_2 ) ; var_4 . put ( var_1 , var_3 ) ; java.lang.system.out.println ( ( ( string_1 + var_1 ) + string_2 ) ) ; } }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( ( compareto ( var_2 ) ) == 0 ) || ( value. equals ( var_2. method_1 ( ) ) ) ; }

************

************
tgt: public void init ( ) { var_1 . method_1 ( string_1 , string_2 ) ; var_2 . method_2 ( ) ; var_3 = var_4 . get ( string_4 ) ; var_3 . method_5 ( var_6 ) ; var_3 . method_5 ( var_7 ) ; var_8 = var_4 . get ( string_5 ) ; var_8 . method_4 ( var_5 ) ; var_8 . method_5 ( var_6 ) ; var_8 . method_5 ( var_7 ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1, type_2 var_2, java.lang.string var_3 ) throws java.lang.exception { java.lang.string var_4 = null ; try { if ( null!= ( var_1. method_2 ( ) ) ) { type_3 var_5 = var_2. method_3 ( var_1. method_2 ( ), var_3 ) ; if ( null!= var_5 ) { var_4 = var_5. method_4 ( ). get ( 1 ) ; } } } catch ( java.lang.exception var_6 ) { var_7. method_5 ( string_1, var_1. method_2 ( ) ) ; } return var_4 ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string filename ) { type_2 var_2 = new type_2 ( method_2 ( ) ) ; java.io.file var_3 = var_2 . method_3 ( ) ; java.io.file var_5 = new java.io.file ( var_3 , filename ) ; java.io.fileoutputstream var_6 ; try { var_6 = new java.io.fileoutputstream ( var_5 ) ; var_1 . method_5 ( var_7 , int_1 , var_6 ) ; } catch ( java.lang.exception var_8 ) { var_8 . method_6 ( ) ; } }
[0]: public java.util.collection < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { if ( var_2. method_2 ( java.lang.integer. method_3 ( var_1 ) ) ) { type_3 var_3 = var_2. get ( var_1 ) ; type_4 var_4 = new type_4 ( new type_5 ( ) ) ; type_1 var_5 = var_4. method_4 ( var_3 ) ; java.util.arraylist < type_1 > var_6 = new java.util.arraylist < type_1 > ( ) ; var_6. add ( var_5 ) ; return var_6 ; } else return null ; }

************

************
tgt: public java.util.hashset < type_1 > method_1 ( ) { java.util.hashset < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; if ( ( var_2 . size ( ) ) == 0 ) return var_1 ; else { var_1 = new java.util.hashset < type_1 > ( var_2 . get ( 0 ) ) ; for ( java.util.hashset < type_1 > var_3 : var_2 ) { var_1 . method_2 ( var_3 ) ; } } return var_1 ; }
[0]: private void show ( ) { var_1. method_1 ( var_2 ) ; var_3. method_1 ( var_2 ) ; var_4. method_1 ( var_2 ) ; var_5. method_1 ( var_2 ) ; title. method_1 ( var_2 ) ; var_6. method_1 ( var_2 ) ; add. method_1 ( var_2 ) ; var_7. method_1 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { if ( null == ( var_1 ) ) { var_1 = var_2 . method_2 ( ) . method_3 ( ) ; } if ( false == ( var_1 ) ) { throw new type_1 ( string_1 ) ; } var_2 . method_4 ( false ) ; }
[0]: public int method_1 ( java.lang.string var_1 ) { if ( var_1. equals ( list. size ( ) ) ) return 0 ; for ( int i = 0 ; i < ( list. size ( ) ) ; i ++ ) { try { java.lang.string var_2 = list. get ( i ). getstring ( string_1 ) ; if ( var_1. equals ( var_2 ) ) return i ; } catch ( type_1 var_3 ) { var_3. method_2 ( ) ; } } return 0 ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.arraylist < type_1 > temp = new java.util.arraylist < > ( ) ; temp . add ( var_1 ) ; for ( int i = 0 ; ( i < ( ( var_3 ) - 1 ) ) && ( i < ( var_2 . size ( ) ) ) ; i ++ ) { temp . add ( var_2 . get ( i ) ) ; } this . var_2 = temp ; }
[0]: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getclass ( ) )!= ( obj. getclass ( ) ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( type_2. equals ( this. var_2, var_3 ) ) && ( type_2. equals ( this. var_4, var_5 ) ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = var_2 . method_2 ( ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.string var_4 : var_1 ) { type_1 var_6 = method_4 ( var_4 ) ; if ( ( var_6 != null ) && ( ( var_6 . method_5 ( ) ) != null ) ) { var_3 . add ( var_6 ) ; } } boolean update = var_2 . method_6 ( var_3 ) ; }
[0]: private static type_1 [ ] method_1 ( int var_1 ) { type_1 [ ] params = new type_1 [ var_1 ] ; for ( int i = 0 ; i < var_1 ; i ++ ) { params [ i ] = new type_2 ( ) ; } return params ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; if ( ( var_1 . method_3 ( 0 ) ) == null ) { android.view.view var_3 = method_4 ( ) . method_5 ( var_4 , var_1 , false ) ; var_1 . method_6 ( var_3 ) ; } if ( ( var_1 . method_3 ( 0 ) ) != null ) { android.view.view var_3 = var_1 . method_3 ( 0 ) ; if ( var_5 ) { } } }
[0]: public boolean method_1 ( type_1 field ) { if ( field == null ) { throw new type_2 ( ) ; } switch ( field ) { case var_1 : return method_2 ( ) ; case var_2 : return method_3 ( ) ; case var_3 : return method_4 ( ) ; } throw new type_3 ( ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) throws type_1 { try ( type_2 var_2 = var_4 . method_2 ( ) . method_3 ( ) ; type_3 var_3 = var_2 . method_4 ( ( ( ( string_1 + string_2 ) + var_1 ) + string_3 ) ) ) { if ( var_3 . method_5 ( ) ) { return var_3 . getboolean ( 1 ) ; } } return false ; }
[0]: private static int method_1 ( type_1 var_1 ) { if ( ( var_2 ) == var_1 ) { var_1 = var_3 ; } else { var_3 = var_1 ; } switch ( var_1 ) { case var_4 : return var_5 ; case var_6 : return var_7 ; default : return var_8 ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { java.lang.system.out.println ( string_1 ) ; type_1 var_1 = new type_1 ( ) ; type_2 var_2 = getactivity ( ) . method_2 ( ) . method_3 ( ) ; var_2 . replace ( var_3 , var_1 ) ; var_2 . method_4 ( null ) ; var_2 . commit ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( (! ( type_2. gettext ( ). isempty ( ) ) ) && (! ( type_3. gettext ( ). isempty ( ) ) ) ) { method_2 ( type_2, type_2 ) ; } }

************

************
tgt: protected static java.lang.string method_1 ( java.util.arraylist < type_1 > var_1 ) { boolean var_2 = false ; java.lang.string var_3 = string_1 ; while ( ! var_2 ) { java.lang.system.out.println ( string_2 ) ; var_3 = var_4 . method_2 ( ) ; java.lang.system.out.println ( type_2 . method_3 ( var_1 , var_3 ) ) ; if ( ( type_2 . method_3 ( var_1 , var_3 ) ) == ( - 1 ) ) { java.lang.system.out.println ( string_3 ) ; } else { var_2 = true ; } } return var_3 ; }
[0]: public static void method_1 ( type_1 var_1 ) { var_1. method_2 ( ( ( ( var_2 ) + string_1 ) + ( var_3. format ( ( ( double ) ( var_3. method_1 ( var_1. getname ( ) ) ) ) ). replace ( string_2, string_3 ) ) ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( ! ( var_2 ) ) { return var_1 ; } if ( type_1 . isempty ( var_1 ) ) { return null ; } java.lang.string source = null ; try { source = new java.lang.string ( type_2 . method_1 ( type_3 . method_2 ( var_1 ) ) , string_1 ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_3 ( ) ; } return source ; }
[0]: public void method_1 ( ) { var_1 = false ; try { method_2 ( ) ; } catch ( java.lang.nullpointerexception a ) { } var_2 = - 1 ; method_3 ( ) ; var_3. method_4 ( 0 ) ; var_4 = false ; if ( var_5 ) { var_6. method_5 ( ) ; } if ( var_7 ) { a. method_5 ( ) ; } var_1 = true ; } }

************

************
tgt: private java.util.list method_1 ( ) { java.util.list var_1 = new java.util.arraylist ( var_2 ) ; for ( java.lang.object var_3 : var_4 ) { type_2 var_5 = ( ( type_1 ) ( var_3 ) ) . method_2 ( ) ; type_2 var_6 = new type_2 ( var_5 . method_3 ( ) , var_5 . method_4 ( ) ) ; var_1 . add ( var_6 ) ; } return var_1 ; }
[0]: public void method_1 ( boolean var_1 ) { if ( var_1 ) var_2 = null ; try { if ( ( var_2 )!= null ) return ; java.io.file var_3 = method_2 ( ) ; if (! ( var_3. method_3 ( ) ) ) return ; if ( var_4 ) return ; type_1 var_5 = new type_1 ( ) ; var_2 = ( ( type_2 ) ( var_5. method_4 ( new java.io.filereader ( var_3 ) ) ) ) ; } catch ( java.lang.exception var_6 ) { var_6. method_5 ( ) ; } }

************

************
tgt: private void method_1 ( final int target ) { new java.lang.thread ( new type_1 ( ) { public void method_2 ( ) { if ( method_3 ( ) ) { method_4 ( new android.content.intent ( var_1 this , var_2 class ) . method_5 ( "id" , id ) . method_5 ( string_1 , var_3 ) . method_5 ( string_2 , target ) ) ; } else { type_2 . method_6 ( ) ; method_7 ( ) ; type_2 . method_8 ( ) ; } } } ) . start ( ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = null ; type_1 var_3 = this. method_2 ( ) ; type_2 var_4 = var_3. query ( var_5, new java.lang.string [ ] { var_6 }, ( ( var_7 ) + string_1 ), new java.lang.string [ ] { var_1 }, null, null, null, null ) ; if ( var_4. method_3 ( ) ) { var_2 = var_4. getstring ( 0 ) ; } var_4. method_4 ( ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = 0 ; method_2 ( var_3 ) ; method_3 ( ) ; if ( var_4 ) { var_4 = false ; if ( var_1 . method_4 ( ) ) { method_5 ( ) ; } } if ( ( var_5 ) > 0 ) { method_6 ( var_5 , false ) ; var_5 = - 1 ; } method_7 ( ) ; method_8 ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { super. method_1 ( var_1 ) ; if (! ( method_2 ( ) ) ) { return ; } if (! ( var_2 ) ) { var_2 = true ; type_1 var_3 = type_2. method_3 ( getactivity ( ) ) ; var_3. method_4 ( ). method_5 ( var_4, true ). method_6 ( ) ; getactivity ( ). method_7 ( ) ; } }

************

************
tgt: public void remove ( double var_1 ) { if ( ( var_2 ) != null ) { if ( ( var_2 . getvalue ( ) ) == var_1 ) { var_2 . method_2 ( var_1 , null ) ; var_2 = null ; } else { var_2 . method_2 ( var_1 , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } }
[0]: public void method_1 ( ) { type_1 [ ] var_1 = new type_1 [ ] { new type_1 ( string_1, 0, 0 ) } ; type_2 var_2 = new type_2 ( var_1 ) ; var_2. method_2 ( ) ; assertequals ( string_2, var_3 [ 0 ]. name ) ; }

************

************
tgt: public char method_1 ( int x , int y ) throws java.io.ioexception { var_1 . method_2 ( ( ( ( ( string_1 + x ) + string_2 ) + y ) + "\n" ) ) ; java.lang.string response = var_2 . method_3 ( ) ; java.lang.system.out.print ( ( response + string_2 ) ) ; return response . method_4 ( 0 ) ; }
[0]: private void method_1 ( java.util.map < java.lang.string, type_1 > var_1 ) { for ( java.util.map.entry < java.lang.string, type_1 > var_2 : var_1. method_2 ( ) ) { type_1 var_3 = new type_1 ( var_2. method_3 ( ), null, var_2. getvalue ( ). gettype ( ) ) ; this. method_4 ( var_3 ) ; var_4. put ( var_2. getvalue ( ). tostring ( ), var_3 ) ; } }

************

************
tgt: public static boolean method_1 ( type_1 var_1 ) { for ( type_1 obj : type_2 . method_2 ( ) . method_3 ( ) ) { if ( ( ! ( obj . equals ( var_1 ) ) ) && ( type_3 . method_4 ( var_1 , obj ) ) ) { return true ; } } return false ; }
[0]: private void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { java.util.arraylist < java.lang.integer > tmp = new java.util.arraylist < java.lang.integer > ( ) ; var_1. add ( tmp ) ; var_2. add ( tmp ) ; var_3. add ( tmp ) ; var_4. add ( tmp ) ; var_5. add ( tmp ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 ) { final long var_3 = ( ( int_1 * int_2 ) * int_3 ) * ( ( long ) ( int_3 ) ) ; type_1 var_4 = new type_4 ( var_1 , var_2 , var_3 , true ) ; var_4 . method_2 ( ) ; return var_4 ; }
[0]: public boolean method_1 ( android.view.view view, type_1 var_1 ) { switch ( var_1. method_2 ( ) ) { case var_2 : var_3. method_3 ( null ) ; var_3. method_4 ( var_3. gettext ( ). length ( ) ) ; return true ; case var_4 : var_3. method_3 ( new type_2 ( ) ) ; var_3. method_4 ( var_3. gettext ( ). length ( ) ) ; return false ; } return true ; }

************

************
tgt: public void method_1 ( long var_1 , long var_2 , type_1 var_3 ) throws type_2 { method_2 ( true ) ; method_3 ( false ) ; if ( var_4 . method_4 ( ) . contains ( var_3 ) ) { var_5 = var_8 ; } else { method_2 ( false ) ; method_3 ( true ) ; var_5 = var_7 ; } var_5 . method_1 ( var_1 , var_2 , var_3 ) ; }
[0]: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == ( ( var_2. size ( ) ) - 1 ) ) { var_1 = 0 ; method_2 ( var_2. get ( var_1 ) ) ; } else { var_1 += 1 ; method_2 ( var_2. get ( var_1 ) ) ; } method_3 ( ) ; }

************

************
tgt: private static type_1 method_1 ( java.lang.double var_2 , type_3 var_3 , type_2 var_1 ) throws java.lang.exception { type_4 var_4 = null ; while ( var_4 == null ) { var_4 = var_1 . method_2 ( var_2 ) ; if ( var_4 == null ) { java.lang.thread . method_3 ( int_1 ) ; } } return type_5 . method_4 ( var_1 . method_5 ( ) , var_4 , var_3 ) ; }
[0]: public static boolean method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) return false ; if ( ( var_2. method_2 ( ) ) == null ) return false ; if ( ( var_2. method_2 ( ) ) == null ) return false ; return ( var_2. method_2 ( ). equals ( var_1 ) ) && ( var_3 ) ; }

************

************
tgt: public type_1 method_1 ( long var_1 ) throws java.io.ioexception { if ( var_2 . method_2 ( var_1 ) ) return var_2 . get ( var_1 ) ; java.util.list < type_1 > var_3 = null ; try { var_3 = var_4 . method_3 ( java.lang.string.format ( string_1 , var_1 ) , null , null ) ; } catch ( type_2 var_5 ) { type_3 . error ( var_5 . method_4 ( ) ) ; } if ( var_3 != null ) return var_3 . get ( 0 ) ; return null ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if (! ( type_2. method_2 ( getactivity ( ) ) ) ) { type_2. method_3 ( getactivity ( ) ) ; return ; } type_3 var_2 = new type_3 ( ) ; type_4 var_3 = type_4. method_4 ( getactivity ( ) ) ; var_4 = new type_5 ( var_2, var_3 ) ; method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( ) . get ( url ) ; java.lang.string var_1 = type_2 . method_3 ( var_2 ) ; try { type_2 . method_4 ( var_2 , string_1 ) ; type_3 . method_5 ( var_3 ) ; } finally { type_2 . method_4 ( var_2 , var_1 ) ; } }
[0]: public java.util.map < java.lang.integer, int [ ] > method_1 ( ) { java.util.map < java.lang.integer, int [ ] > var_1 = new java.util.hashmap < > ( ) ; int key = 0 ; for ( int y = 0 ; y < ( var_2 ) ; y ++ ) { for ( int x = 0 ; x < ( var_2 ) ; x ++ ) { var_1. put ( key, new int [ ] { x, y } ) ; key ++ ; } } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string key ) { switch ( key ) { case var_2 : if ( var_1 . getstring ( key , string_1 ) . equals ( string_1 ) ) { var_3 . method_2 ( ) ; } else { var_3 . method_3 ( ) ; } break ; case var_4 : if ( var_1 . getboolean ( key , false ) ) { var_3 . method_4 ( int_1 ) ; } else { var_3 . method_4 ( 1 ) ; } break ; } }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_2 data ) { var_2. method_2 ( data ) ; if ( ( var_3 )!= ( var_4 ) ) { var_5. method_3 ( var_3 ) ; type_3 var_6 = var_5. method_4 ( var_3 ) ; if ( ( var_6!= null ) && ( var_6 instanceof type_4 ) ) { ( ( type_4 ) ( var_6 ) ). method_5 ( var_7 ) ; } } method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 result = type_2 . method_2 ( ) . method_3 ( var_1 class , "name" ) ; type_3 . assertequals ( "name" , result . method_4 ( ) ) ; type_3 . assertequals ( false , result . method_5 ( ) ) ; result = type_2 . method_2 ( ) . method_3 ( var_1 class , string_1 ) ; type_3 . assertequals ( string_1 , result . method_4 ( ) ) ; type_3 . assertequals ( true , result . method_5 ( ) ) ; }
[0]: public void method_1 ( java.net.url var_1, type_1 var_2 ) { this. var_3. settext ( this. msg ) ; this. var_4. settext ( this. var_5 ) ; this. var_6. method_2 ( ( event ) - > method_3 ( ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_1 var_2 ) { if ( var_2 == null ) { return false ; } if ( var_1 instanceof type_2 ) { type_3 var_3 = ( ( type_2 ) ( var_2 ) ) . method_2 ( ) ; if ( method_3 ( var_3 , null ) ) { return true ; } } return method_3 ( var_2 , null ) ; }
[0]: public void init ( type_1 var_1 ) throws type_2 { if ( ( var_2 )!= null ) { return ; } type_3 var_3 = var_4. method_1 ( var_5 ) ; var_3. method_2 ( ) ; try { var_1. method_3 ( var_3 ) ; var_1. method_4 ( var_6 ) ; var_1. method_5 ( 0 ) ; } finally { var_3. method_6 ( false ) ; var_2 = var_3 ; var_7 = true ; } }

************

************
tgt: public java.lang.object method_1 ( int t ) { if ( t == 0 ) { return var_1 ; } t = t - 1 ; method_3 ( t ) ; if ( t >= ( size ) ) { return type_1 . method_4 ( name , var_1 ) . method_5 ( ) ; } else { return var_2 [ method_6 ( t ) ] ; } }
[0]: private void method_1 ( int var_1, java.lang.object... var_2 ) { java.lang.string message = ( var_1 > 0 )? getstring ( var_1, var_2 ) : null ; if ( var_3 ) { var_3 = false ; method_2 ( true ) ; } if ( ( var_4 )!= null ) { var_5 = false ; var_4. method_3 ( ) ; var_4. method_4 ( ) ; var_4 = null ; } method_5 ( var_6, message ) ; method_6 ( ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception , type_3 { asserttrue ( ( ( var_1 . method_2 ( ) . length ) > 0 ) ) ; for ( java.lang.string name : var_1 . method_3 ( ) ) { if ( name . equals ( method_4 ( var_2 ) . getstring ( var_3 ) ) ) { return var_1 . method_5 ( name ) ; } } var_1 . method_6 ( ) ; return null ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; type_3. method_4 ( var_3, string_1 ) ; android.content.intent intent = getintent ( ) ; java.lang.string var_4 = intent. method_5 ( string_2 ) ; method_6 ( var_4 ) ; var_5. settext ( ( string_3 + var_4 ) ) ; }

************

************
tgt: private static int method_1 ( int var_1 , boolean var_2 ) { switch ( var_1 ) { case 1 : if ( var_2 ) return 0 ; else return 1 ; case int_1 : if ( var_2 ) return int_1 ; else return 0 ; case int_2 : if ( var_2 ) return int_1 ; else return 1 ; default : if ( var_2 ) return 1 ; else return int_1 ; } }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { return ; } var_1 = new type_1 ( getcontext ( ) ) ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( var_3 ) ; var_1. method_4 ( method_5 ( ) ) ; final int var_4 = ( ( var_5 ) | ( var_6 ) ) | ( var_7 ) ; final type_2 var_8 = new type_2 ( var_9, var_9, var_4 ) ; method_6 ( var_1, var_8 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( var_1 ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < > ( ) ; var_3 . method_2 ( method_3 ( var_2 ) ) ; for ( type_1 var_4 : var_3 ) { if ( var_4 == null ) { continue ; } type_2 var_5 = var_4 . method_4 ( ) ; if ( var_1 . equals ( var_5 ) ) { return var_4 ; } } return null ; }
[0]: public void init ( ) { try { java.util.arraylist < java.util.arraylist < java.lang.string > > var_1 = var_2. method_1 ( string_1 ) ; if ( ( var_1. get ( 0 ). get ( 0 ) )!= null ) this. var_3 = java.lang.long.parselong ( var_1. get ( 0 ). get ( 0 ) ) ; } catch ( type_1 var_4 ) { var_4. method_2 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; for ( java.lang.string var_2 : var_3 . method_2 ( ) ) { java.lang.string value = var_3 . get ( var_2 ) ; java.lang.string var_4 = ( ( ( ( ( string_2 + var_2 ) + string_2 ) + string_3 ) + value ) + string_4 ) + "\n" ; var_1 = var_1 + var_4 ; } return var_1 ; }
[0]: public void method_1 ( ) { int count = method_2 ( ). method_3 ( ) ; int var_1 = var_2. method_4 ( ) ; if ( count == 0 ) { super. method_1 ( ) ; } else { method_2 ( ). method_5 ( ) ; } java.lang.string title = var_3. get ( var_1 ). method_6 ( ) ; method_7 ( title ) ; }

************

************
tgt: public static float method_1 ( final float [ ] array , final int offset , final int length ) { final float var_1 = type_1 . method_2 ( array , offset , length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - var_1 ; sum += ( diff * diff ) / length ; } return ( ( float ) ( sum ) ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( string_1 ) ) { if ( var_2 ) var_3 = string_2 ; else var_3 = string_3 ; } else if ( var_1. method_2 ( string_4 ) ) { if ( var_2 ) var_4 = string_2 ; else var_4 = string_3 ; } else if ( var_1. method_2 ( string_5 ) ) { if ( var_2 ) var_5 = string_2 ; else var_5 = string_3 ; } } }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( ) ; type_2 var_3 = ( ( type_2 ) ( var_4 . get ( var_2 ) ) ) ; if ( var_3 == null ) { var_5 . method_3 ( ( ( string_1 + var_2 ) + string_2 ) ) ; return null ; } else { type_1 var_6 = new type_1 ( var_1 , var_3 ) ; return var_6 ; } }
[0]: private void method_1 ( android.view.view view ) { if ( ( var_2 )!= null ) message. settext ( ( string_1 + ( var_2. getname ( ) ) ) ) ; else message. settext ( var_3 ) ; message = ( ( type_1 ) ( view. method_2 ( var_1. message ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { method_3 ( var_3 ) ; if ( var_1 . gettext ( ) . equals ( string_1 ) ) { var_1 . settext ( ( ( var_2 ) + string_2 ) ) ; } else if ( ! ( method_2 ( var_1 . gettext ( ) . tostring ( ) ) ) ) { var_1 . append ( string_2 ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = type_2. method_2 ( getcontext ( ), type_3. method_3 ( this ), var_2 ) ; type_4 var_3 = new type_4 ( getcontext ( ) ) ; var_3. method_4 ( var_1 ) ; var_4 = var_3 ; this. method_5 ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . method_2 ( ) ) == true ) { try { c . method_3 ( string_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_4 ( ) ; } } else { try { c . method_3 ( string_2 ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_4 ( ) ; } } if ( ( var_4 [ 1 ] [ int_1 ] ) == null ) { var_5 . method_5 ( false ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( this. var_2 ) == int_1 ) && ( ( this. height ) == int_1 ) ) { var_1. method_2 ( var_3 ) ; var_1. method_3 ( x, y, var_2, height ) ; } else { var_1. method_2 ( var_3 ) ; var_1. method_4 ( x, y, var_2, height ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( contains ( var_1 , var_2 [ y ] [ x ] ) ) && ( var_3 ) ) { ( y ) -- ; method_2 ( ) ; method_3 ( 0 , 0 , 0 , ( ( var_4 ) / int_1 ) ) ; var_5 . method_4 ( var_6 ) ; } else { var_5 . method_4 ( var_7 ) ; } }
[0]: public static java.util.list < type_1 > method_1 ( java.util.list < type_2 > var_1 ) { java.util.list < type_1 > result = new java.util.arraylist ( var_1. size ( ) ) ; for ( type_2 var_2 : var_1 ) { result. add ( type_3. method_1 ( var_2 ) ) ; } return result ; }

************

************
tgt: public static void method_1 ( int id ) { type_1 var_1 = type_2 . method_2 ( id ) ; java.util.calendar var_2 = type_3 . method_6 ( var_1 ) ; type_4 . i ( ( string_1 + id ) , var_2 . gettime ( ) . tostring ( ) ) ; type_3 . method_7 ( id , var_2 ) ; }
[0]: public void method_1 ( type_1 p ) { type_2 var_1 = p. method_2 ( ) ; if ( ( first ) == null ) { first = p. method_2 ( ) ; ( size ) ++ ; } else { while ( var_1!= null ) { this. method_1 ( var_1 ) ; var_1 = var_1. method_3 ( ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.string result = new java.lang.string ( ) ; type_3 var_2 = new type_3 ( string_1 ) ; result = var_2 . format ( var_1 . gettime ( ) ) ; java.lang.system.out.println ( ( ( var_1 + string_2 ) + result ) ) ; return result ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( var_1 == null ) return ; if ( var_2 == null ) return ; var_1 = var_1. tolowercase ( ) ; var_2 = var_2. tolowercase ( ) ; type_1 var_3 = type_2. get ( var_1 ) ; if ( var_3!= null ) { method_2 ( var_1 ) ; type_2. put ( var_2, var_3 ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { type_1 var_1 = new type_1 ( ) ; for ( int i = ( var_3 . size ( ) ) - 1 ; i >= 0 ; i -- ) { var_1 . method_4 ( var_3 . get ( i ) ) ; } return var_1 ; }
[0]: public void method_1 ( ) { final type_1 < type_2 > var_1 = type_3. method_2 ( ) ; method_3 ( var_1 ) ; type_4. assertequals ( false, var_1. method_4 ( var_2, var_3 ) ) ; type_4. assertequals ( true, var_1. method_4 ( var_4, var_5 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_2 = false ; if ( var_1 . method_3 ( var_3 ) ) { var_4 . method_4 ( ) ; } type_1 . i ( var_6 , ( string_1 + ( var_1 . method_5 ( ) ) ) ) ; } var_5 . method_4 ( ) ; method_6 ( ) ; }
[0]: public static void method_1 ( ) { var_1 = java.lang.string. method_2 ( var_2. method_3 ( ) ) ; if ( var_1. equals ( string_1 ) ) { var_1 = string_2 ; } var_3 = java.lang.string. method_2 ( var_4. method_3 ( ) ) ; if ( var_1. equals ( string_1 ) ) { var_3 = string_2 ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; if ( var_3 != null ) { var_2 . method_5 ( string_1 , var_3 ) ; return string_3 ; } else { var_2 . method_5 ( string_4 , string_5 ) ; return string_6 ; } }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { var_1. method_2 ( var_4 ) ; type_2. method_3 ( context, string_1, var_5 ). show ( ) ; type_3. method_4 ( var_6, string_2 ) ; type_3. method_4 ( var_6, ( ( ( ( ( string_3 + ( var_7 ) ) + string_4 ) + var_2 ) + string_5 ) + var_3 ) ) ; type_3. method_4 ( var_6, string_6 ) ; method_5 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final java.lang.string var_2 = var_1 . gettext ( ) ; if ( ( method_2 ( var_2 ) ) && ( ! ( ( ( ( ( var_3 ) && ( method_3 ( var_1 ) ) ) || ( method_4 ( var_2 ) ) ) || ( ( var_4 ) && ( method_5 ( var_2 , var_5 ) ) ) ) || ( ( var_6 ) && ( method_5 ( var_2 , var_7 ) ) ) ) ) ) { method_6 ( var_1 . method_7 ( ) , string_1 ) ; } }
[0]: protected int method_1 ( int x, int var_1 ) { type_1 var_2 = this. method_2 ( ) ; if ( var_2 == null ) { return var_1 ; } else { switch ( var_2 ) { case var_3 : return ( this. var_4 ) - var_1 ; case var_5 : return ( this. var_6 ) + x ; case var_7 : case var_8 : return ( this. var_6 ) + x ; default : return var_1 ; } } }

************

************
tgt: public void method_1 ( ) { java.lang.double var_1 = ( ( type_1 ) ( var_2 . method_2 ( ) ) ) . method_3 ( ) ; java.lang.system.out.println ( var_1 ) ; var_1 = type_2 . method_4 ( var_1 ) ; java.lang.system.out.println ( var_1 ) ; method_5 ( string_1 ) ; method_6 ( var_1 . tostring ( ) ) ; type_1 b = type_1 . method_7 ( var_1 ) ; var_2 . method_9 ( b ) ; var_4 . method_9 ( b ) ; }
[0]: private boolean method_1 ( java.util.set < type_1 > var_1, java.util.set < type_1 > var_2 ) { return ( ( var_2. size ( ) ) == 0 ) || ( ( ( var_1. size ( ) ) < ( var_2. size ( ) ) ) && ( ( var_1. size ( ) )!= 0 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { int position = ( ( java.lang.integer ) ( var_1 . method_2 ( ) ) ) ; type_1 var_3 ; if ( ( var_1 . getid ( ) ) == ( var_4 ) ) { var_3 = var_5 ; } else if ( ( var_1 . getid ( ) ) == ( var_6 ) ) { var_3 = var_7 ; } else { var_3 = var_8 ; } var_9 . method_3 ( position , var_3 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { method_2 ( type_2. method_3 ( var_1 ) ). method_4 ( var_2 ). method_5 ( type_3. method_6 ( var_3 class ) ) ; method_4 ( var_1. method_7 ( ) ). method_8 ( true ) ; type_4. assertthat ( string_1, type_5. method_9 ( var_4 ). method_10 ( var_5 < type_6 > method_11 ( ) ). method_12 ( var_2 ), type_7. method_13 ( ) ) ; }

************

************
tgt: public boolean method_1 ( ) { for ( java.util.map.entry < java.lang.string , java.util.list < java.lang.string > > var_1 : this . method_2 ( ) ) { java.lang.string key = var_1 . method_3 ( ) ; if ( key == null ) { continue ; } for ( java.lang.string value : var_1 . getvalue ( ) ) { if ( ( key . method_4 ( string_1 ) ) && ( value . tolowercase ( ) . contains ( string_2 ) ) ) { return true ; } } } return false ; }
[0]: private type_1 <?,? > method_1 ( java.lang.string var_1 ) { type_1 <?,? > var_2 = method_2 ( ( ( type_2 ) ( type_3. method_3 ( string_1, string_2 ) ) ), var_3, string_3 ) ; var_2. method_4 ( string_4, var_1 ) ; var_2. method_4 ( string_5, true ) ; var_2. method_4 ( string_6, false ) ; return var_2 ; }

************

************
tgt: public void init ( ) { if ( var_1 ) { return ; } if ( ! ( var_2 ) ) { method_1 ( ) ; method_2 ( ) ; } method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_7 ( ) ; method_8 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = this. var_2. getactivity ( ). method_2 ( ) ; var_1. method_3 ( var_3 ) ; var_1. method_3 ( var_4 ) ; var_1. method_3 ( var_5 ) ; type_2. method_4 ( var_6, ( string_1 + var_7 ) ) ; var_8. method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 file ) { try { java.lang.string var_1 ; var_1 = var_2 . method_2 ( file ) ; return type_1 . method_4 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_5 ( ) ; return type_1 . fail ( var_3 . method_6 ( ) ) ; } }
[0]: private type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = null ; type_4 var_3 = this. method_2 ( var_1 ) ; if (! ( var_3 instanceof type_1 ) ) { this. method_3 ( ( string_1 + ( var_3. method_4 ( ) ) ) ) ; } else { var_2 = ( ( type_1 ) ( var_3 ) ) ; } return var_2 ; }

************

************
tgt: void method_1 ( type_1 target ) throws java.io.ioexception { java.io.bufferedreader var_1 = new java.io.bufferedreader ( new type_2 ( target . method_2 ( ) ) ) ; while ( ! ( var_1 . method_3 ( ) ) ) { } while ( var_1 . method_3 ( ) ) { try { java.lang.string msg = var_1 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { type_3 . method_5 ( ( ) - > method_6 ( var_3 . method_7 ( ) ) ) ; var_3 . method_8 ( ) ; } } }
[0]: public static type_1 method_1 ( type_2 var_1, android.content.context context ) { if ( context instanceof type_3 ) { var_2 = ( ( type_3 ) ( context ) ) ; } else { throw new type_4 ( ( ( context. tostring ( ) ) + string_1 ) ) ; } var_3 = context ; var_4 = var_1 ; return var_5 ; }

************

************
tgt: public void method_1 ( ) { try { while ( ( var_1 . method_2 ( var_2 ) ) == ( var_3 ) ) { java.lang.thread . method_3 ( int_1 ) ; } var_1 . method_4 ( var_2 , true ) ; var_2 . method_5 ( var_7 ) ; } catch ( java.lang.exception var_4 ) { type_1 . error ( string_1 , var_4 ) ; var_2 . method_5 ( var_5 ) ; } var_6 . method_6 ( var_2 ) ; }
[0]: private java.util.list < type_1 > method_1 ( type_2 type ) { if ( type == ( var_1 ) ) { return var_2 ; } if ( type == ( var_3 ) ) { return var_4 ; } if ( type == ( var_5 ) ) { return var_6 ; } if ( type == ( var_7 ) ) { return var_8 ; } return new java.util.arraylist < type_1 > ( ) ; }

************

************
tgt: public void method_1 ( final type_1 n ) { final type_2 id = ( ( type_2 ) ( n . method_2 ( ) . gettype ( ) ) ) ; final java.lang.string token = id . method_3 ( ) ; var_2 . add ( token ) ; final type_2 var_3 = ( ( type_2 ) ( n . method_4 ( ) . gettype ( ) ) ) ; final java.lang.string var_4 = var_3 . method_3 ( ) ; var_2 . add ( var_4 ) ; }
[0]: public boolean method_1 ( int answer ) { if ( answer == ( var_1 ) ) { var_2. settext ( string_3 ) ; if ( ( var_3. method_2 ( ) ) == 0 ) var_3. method_3 ( ) ; method_4 ( ) ; return true ; } return false ; }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { if ( ( var_1 . length ( ) ) == int_1 ) { final type_1 var_2 = var_1 . method_2 ( 1 ) ; return new type_3 ( context , var_2 ) ; } return new type_3 ( context , type_4 . method_4 ( var_1 , 1 , var_1 . length ( ) ) ) ; }
[0]: protected type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( string_1, method_3 ( ). method_4 ( ) ) ; var_2. method_5 ( string_2, method_6 ( var_1. position ( ) ) ) ; var_2. method_5 ( string_3, method_6 ( var_1. method_7 ( ) ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_1 . method_2 ( 0 , 0 , int_1 , int_2 ) ; var_1 . method_2 ( 0 , int_3 , int_1 , int_2 ) ; var_1 . method_2 ( int_4 , int_2 , int_2 , int_5 ) ; var_1 . method_2 ( int_4 , int_6 , int_2 , int_5 ) ; }
[0]: public void method_1 ( java.lang.long var_1, java.util.date var_2 ) { type_1 var_3 = var_4. method_2 ( var_1 ) ; if ( ( var_3 == null ) || ( var_2 == null ) ) { throw new type_2 ( ) ; } var_3. method_3 ( var_2 ) ; try { var_4. method_4 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { throw new type_2 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ( var_1 . method_3 ( ) ) == null ) return false ; if ( type_2 . method_2 ( var_1 . method_3 ( ) ) . method_4 ( ) ) { ( var_2 . count ) ++ ; this . name = method_5 ( var_1 . method_3 ( ) ) ; return true ; } return false ; }
[0]: protected void method_1 ( java.lang.string var_1, java.util.hashmap < java.lang.string, java.lang.string > values ) throws java.lang.exception { if ( var_1 == null ) throw new java.lang.exception ( string_1 ) ; java.lang.string var_2 = method_2 ( values ) ; int var_3 = ( ( int ) ( this. method_3 ( ( ( ( ( string_2 + var_1 ) + string_3 ) + var_2 ) + string_4 ), true ) ) ) ; this. method_4 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . value = this . value . method_2 ( var_2 ) ; this . var_4 = var_5 ; this . var_6 = new int [ int_1 ] ; type_2 . method_3 ( var_7 , 0 , this . var_6 , 0 , int_1 ) ; if ( this . var_8 ) { this . id = string_1 ; this . name = null ; } }
[0]: public static boolean method_1 ( java.io.file file, java.lang.string var_1 ) throws type_1 { try { type_2 var_2 = new type_2 ( ) ; return var_2. method_1 ( file, var_1 ) ; } catch ( java.io.ioexception var_3 ) { type_3. method_2 ( file, var_3 ) ; } catch ( type_4 var_3 ) { type_3. method_3 ( file, var_3 ) ; } catch ( type_5 var_3 ) { type_3. method_4 ( file, var_3 ) ; } return false ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = var_4 . query ( var_5 , var_6 class ) . method_2 ( var_7 , var_1 ) . method_3 ( ) ; if ( var_3 == null ) { throw new type_2 ( java.lang.string.format ( string_1 , var_1 ) ) ; } var_3 . method_4 ( var_2 ) ; var_3 . method_5 ( false ) ; var_4 . update ( var_5 , var_3 ) ; type_3 . info ( string_2 , var_1 ) ; }
[0]: public void remove ( ) throws java.lang.exception { asserttrue ( set. add ( int_1 ) ) ; method_1 ( set. add ( int_1 ) ) ; asserttrue ( set. remove ( int_1 ) ) ; method_1 ( set. remove ( int_1 ) ) ; asserttrue ( set. isempty ( ) ) ; }

************

************
tgt: protected java.lang.string getname ( type_1 source ) { if ( ( source . method_1 ( ) ) != null ) { return ( ( getname ( source . method_1 ( ) ) ) + string_1 ) + ( source . method_2 ( ) ) ; } return source . method_2 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.map < type_1, java.lang.integer > var_1 = new java.util.hashmap < type_1, java.lang.integer > ( ) ; var_1. put ( new type_1 ( 1 ), 1 ) ; var_1. put ( new type_1 ( int_1 ), int_2 ) ; type_2 var_2 = new type_2 ( var_1 ) ; var_2. method_1 ( ) ; }

************

************
tgt: public void setvalue ( type_1 var_1 , int var_2 ) { if ( var_2 > ( var_3 ) ) { var_2 = var_3 ; } if ( var_2 < ( min ) ) { var_2 = min ; } switch ( var_1 ) { case var_4 : this . var_5 = var_2 ; break ; case var_6 : this . var_7 = var_2 ; break ; case var_8 : this . value = var_2 ; method_1 ( ) ; break ; default : break ; } }
[0]: protected void method_1 ( ) { new type_1 ( ). execute ( var_1 ) ; boolean var_2 = var_3. getboolean ( string_1, true ) ; if ( var_2 ) { var_4. show ( var_5 ) ; } if ( ( var_6 )!= null ) { var_6. method_2 ( var_7, int_1 ) ; } }

************

************
tgt: private void method_1 ( java.lang.string info ) { final type_1 var_1 = type_1 . method_2 ( method_3 ( ) , info , var_2 ) ; var_1 . show ( ) ; new type_2 ( ) . method_4 ( new type_3 ( ) { public void method_5 ( ) { var_1 . method_6 ( ) ; } } , int_1 ) ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string value ) { switch ( var_2 ) { case var_3 : var_1. method_2 ( value ) ; break ; case var_4 : var_1. method_3 ( new java.lang.string [ ] { value } ) ; break ; case var_5 : var_1. method_4 ( value ) ; break ; case var_6 : var_1. method_5 ( value ) ; break ; case var_7 : var_1. method_6 ( value ) ; break ; case var_8 : var_1. method_7 ( value ) ; break ; } } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( ( string_1 + ( this . path ) ) ) ; if ( ( this . var_1 . size ( ) ) > 0 ) java.lang.system.out.println ( string_2 ) ; else java.lang.system.out.println ( string_3 ) ; for ( int i = 0 ; i < ( this . var_1 . size ( ) ) ; ++ i ) java.lang.system.out.println ( ( string_4 + ( this . var_1 . get ( i ) ) ) ) ; }
[0]: public void method_1 ( type_1 event, float x, float y, int var_1, int var_2 ) { var_3. method_2 ( ( ( var_3. method_3 ( ) ) - int_1 ), var_3. method_4 ( ), ( ( var_3. method_5 ( ) ) + int_1 ), ( ( var_3. method_6 ( ) ) + int_1 ) ) ; var_4 = new type_2 ( var_5 ) ; var_5. method_7 ( var_4 ) ; var_6. method_8 ( ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { final type_2 var_1 = ( ( type_2 ) ( var_2 ) ) ; if ( var_1 . getdata ( ) . equals ( var_3 ) ) { if ( var_1 . getselection ( ) ) { if ( ! ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( true ) ; } } else { if ( var_1 . method_2 ( ) ) { var_1 . method_3 ( false ) ; var_1 . method_4 ( true ) ; } } } }
[0]: public type_1 method_1 ( byte [ ] message ) throws type_2 { type_1 var_1 = null ; switch ( format ) { case var_2 : var_1 = type_3. method_2 ( message, string_1, var_3 ) ; break ; case var_4 : var_1 = type_3. method_2 ( message, string_1, var_3 ) ; break ; case var_5 : var_1 = type_3. method_3 ( message ) ; break ; case var_6 : var_1 = type_3. method_4 ( message ) ; break ; case var_7 : break ; } return var_1 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( var_1 . method_3 ( ) ) ; var_2 . error ( var_1 . method_4 ( ) ) ; type_4 var_3 = var_4 . method_5 ( type_5 ) ; var_5 . method_6 ( var_6 , var_3 . method_7 ( ) , var_3 . method_8 ( ) , var_1 . method_4 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( ) ; var_2 = null ; info. method_3 ( ) ; if ( ( var_1. getid ( ) ) == ( var_3 ) ) { method_4 ( var_4 ) ; } else if ( ( var_1. getid ( ) ) == ( var_5 ) ) { var_6. method_5 ( ) ; var_7. method_6 ( ) ; } if ( var_4 ) var_6. method_7 ( ) ; }

************

************
tgt: public static void assertequals ( java.lang.object var_1 , java.lang.object var_2 , java.lang.string message ) { boolean var_3 ; if ( var_1 == null ) { var_3 = var_2 == null ; } else { var_3 = var_1 . equals ( var_2 ) ; } type_1 . asserttrue ( var_3 , message ) ; }
[0]: public int method_1 ( type_1 var_1 ) { if ( ( this. id ) == ( var_1. id ) ) { return java.lang.integer. method_1 ( this. var_2, var_3 ) ; } else if ( ( this. id ) < ( var_1. id ) ) { return - 1 ; } else { return 1 ; } }

************

************
tgt: private int method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; ++ i ) { type_1 var_3 = method_2 ( ( i + 1 ) ) ; if ( var_3 == null ) return 0 ; if ( ( var_4 ) == var_1 ) { return i + 1 ; } } return 0 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { var_2 *= var_1. method_2 ( ) ; var_2 = type_2. method_3 ( float_1, type_2. min ( var_2, float_2 ) ) ; type_3. i ( var_3, ( string_1 + ( var_2 ) ) ) ; method_4 ( ) ; return true ; }

************

************
tgt: private void method_1 ( java.lang.class var_1 , int var_2 ) { method_2 ( var_2 ) ; java.lang.string var_3 = type_1 . tostring ( var_1 . method_3 ( ) ) ; if ( var_3 . isempty ( ) ) { var_4 . append ( string_1 ) . append ( var_1 . method_4 ( ) ) ; } else { var_4 . append ( var_3 ) . append ( string_2 ) . append ( var_1 . method_4 ( ) ) ; } }
[0]: protected type_1 method_1 ( type_2 [ ] var_1 ) { if ( ( var_2 ) >= ( var_3 ) ) { if ( var_1!= null ) { final android.view.view var_4 = method_2 ( ). method_3 ( ) ; java.util.arraylist < type_2 > var_5 = method_4 ( new java.util.arraylist ( java.util.arrays.aslist ( var_1 ) ) ) ; var_1 = new type_2 [ var_5. size ( ) ] ; var_5. method_5 ( var_1 ) ; return type_3. method_6 ( this, var_1 ). method_7 ( ) ; } } return null ; } }

************

************
tgt: public void method_1 ( ) { while ( true ) { try { java.lang.string message ; int length = var_1 . method_2 ( ) ; if ( length > 0 ) { byte [ ] b = new byte [ length ] ; var_1 . method_3 ( b ) ; message = new java.lang.string ( b , string_1 ) ; this . method_4 ( type_1 . method_5 ( message ) ) ; } } catch ( java.io.ioexception var_2 ) { var_2 . method_6 ( ) ; break ; } } }
[0]: public void method_1 ( final type_1 var_1, final type_2 var_2 ) throws java.lang.exception, type_3 { method_2 ( var_2 ) ; if ( ( var_2. gettype ( ) ) == ( var_3 ) ) { method_3 ( var_1, true, 0, false, string_1 ) ; } else { method_3 ( var_1, true, ( - int_1 ), true, string_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 event ) { if ( event . method_2 ( ) ) { return ; } int [ ] var_1 = var_2 . method_3 ( ) ; if ( ( var_1 . length ) == 0 ) return ; java.lang.string id = ( ( java.lang.string ) ( var_2 . method_4 ( var_1 [ 0 ] , 0 ) ) ) ; java.lang.double var_3 = var_4 . get ( id . trim ( ) ) ; var_5 . method_5 ( ) . method_6 ( var_3 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; method_2 ( var_1 ) ; type_2 var_2 = new type_3 ( ) ; type_4 var_3 = new type_4 ( var_2, var_1, string_1, string_2 ) ; int var_4 = var_3. method_3 ( var_1, true ) ; type_5. assertequals ( 0, var_4 ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { if ( var_1 == null ) return ; java.util.set < type_1 > var_2 = type_2 . method_2 ( ) . method_3 ( ) ; var_2 . add ( var_1 ) ; type_2 . method_2 ( ) . method_4 ( ) . add ( var_1 ) ; var_1 . method_5 ( ) ; type_3 . method_6 ( ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; int i = 0 ; while ( ( var_2 = false ) && ( i < ( var_3. length ) ) ) { if ( var_3 [ i ]. method_2 ( var_1 ) ) { var_2 = true ; i ++ ; } i ++ ; } return var_2 ; }

************

************
tgt: public void method_1 ( java.util.map < java.lang.string , ? > var_1 ) { this . var_2 = ( ( java.lang.string ) ( var_1 . get ( string_1 ) ) ) ; this . var_3 = ( ( java.lang.string ) ( var_1 . get ( var_4 ) ) ) ; this . var_6 = true ; }
[0]: private boolean method_1 ( type_1 commit ) throws java.io.ioexception { try ( type_2 var_1 = type_1. method_2 ( var_2. method_3 ( ) ) ) { var_1. method_4 ( ) ; var_1. method_5 ( commit ) ; for ( type_3 var_3 : var_4 ) { if ( var_1. method_6 ( var_1. method_7 ( var_3 ), var_1. method_7 ( commit ) ) ) { return true ; } } } return false ; } }

************

************
tgt: protected void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2 . method_2 ( var_3 ) ) ) ; type_2 var_4 = var_1 . method_3 ( ) ; boolean var_5 = ( var_4 != null ) && ( var_4 . method_4 ( ) ) ; if ( var_5 ) { method_5 ( ) ; } else { type_3 . method_6 ( var_2 , var_2 . getstring ( var_8 ) , var_9 ) . show ( ) ; } }
[0]: public void method_1 ( ) { try { java.lang.thread. method_2 ( ( int_1 * int_2 ) ) ; var_1. method_3 ( ) ; var_2. info ( string_1 ) ; java.lang.thread. method_2 ( ( 1 * int_2 ) ) ; var_3. method_3 ( ) ; var_2. info ( string_2 ) ; } catch ( type_1 var_4 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public int method_1 ( long var_1 ) { type_1 var_2 = method_2 ( var_1 ) ; int var_4 = 0 ; if ( var_2 != null ) { var_2 . method_3 ( var_3 ) ; var_4 = var_5 . method_4 ( ) ; if ( var_6 . method_5 ( ) ) { var_6 . method_6 ( ( ( ( string_1 + var_1 ) + string_2 ) + var_4 ) ) ; } } return var_4 ; }
[0]: type_1 method_1 ( ) throws java.io.ioexception { java.util.properties var_1 = method_2 ( var_2 ) ; type_2. get ( var_1. method_3 ( string_1 ) ) ; java.io.file var_3 = type_2. get ( var_1. method_3 ( string_1 ) ). method_4 ( ) ; try ( java.io.inputstream var_4 = new java.io.fileinputstream ( var_3 ) ) { return type_1. method_5 ( var_4 ) ; } } }

************

************
tgt: public type_1 remove ( ) { type_1 var_2 = this . var_3 ; this . var_4 = false ; if ( ( this . var_5 ) == 0 ) { this . var_3 = new type_1 ( int_1 , int_1 ) ; } else { this . var_3 = var_6 . method_1 ( var_7 , ( ( var_5 ) - 1 ) ) . remove ( ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 writer = null ; try { writer = new type_3 ( var_1, string_1 ) ; method_1 ( writer ) ; } catch ( java.lang.exception var_2 ) { var_3. error ( ( string_2 + ( this ) ), var_2 ) ; } finally { writer. method_2 ( ) ; } }

************

************
tgt: protected type_1 method_1 ( java.lang.string name ) { type_1 var_1 = null ; if ( ( var_2 ) != null ) var_1 = var_2 . method_2 ( name ) ; if ( ( ( var_3 ) != null ) && ( var_1 == null ) ) var_1 = var_3 . method_2 ( name ) ; return var_1 ; }
[0]: protected void method_1 ( ) { new type_1 ( var_1, var_2, var_3, var_4 ). method_1 ( ) ; var_5 = new type_2 ( ) ; java.util.list < type_3 > var_6 = ( ( var_7 )!= null )? var_7. method_2 ( ) : var_8 ; var_6 = ( var_6!= null )? var_6 : var_8 ; var_5. init ( var_6 ) ; var_9. method_3 ( ) ; var_9. add ( var_5 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { try { type_1 var_1 = new type_1 ( new type_2 ( ) , int_1 , int_2 , int_1 , int_2 ) ; var_1 . start ( ) ; } catch ( type_3 var_2 ) { var_2 . method_1 ( ) ; } }
[0]: public void method_1 ( int [ ] var_1 ) { type_1. method_2 ( var_1 ) ; for ( int i = ( var_1. length ) - 1 ; i >= 0 ; i -- ) { rows. remove ( i ) ; } type_2. method_3 ( ) ; }

************

************
tgt: private void method_1 ( android.content.context context , type_1 var_1 ) { type_2 a = context . method_2 ( var_1 , var_2 ) ; final int var_3 = a . method_3 ( ) ; for ( int i = 0 ; i < var_3 ; ++ i ) { int var_4 = a . method_4 ( i ) ; if ( var_4 == ( var_5 ) ) { var_6 = a . getcolor ( var_4 , 0 ) ; method_5 ( ) ; break ; } } a . method_6 ( ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string var_3 = null ; try { var_4 = type_1. method_2 ( type_2. method_3 ( var_1 ) ) ; var_3 = var_4. method_4 ( var_2 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_5 ( ) ; var_3 = string_1 ; } var_6. info ( ( string_2 + var_3 ) ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) throws type_3 { if ( ( ( var_2 . getvalue ( ) ) != null ) && ( ( var_2 . method_2 ( ) ) == ( var_3 ) ) ) { type_4 var_4 = ( ( type_4 ) ( var_1 ) ) ; var_4 . method_3 ( var_2 . method_4 ( ) , var_2 . getname ( ) , ( ( type_5 ) ( var_2 . getvalue ( ) ) ) ) ; } else { super . method_1 ( var_1 , var_2 ) ; } }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { int var_2 = type_1. method_2 ( string_1 ) ; if ( var_2 == ( - 1 ) ) { var_2 = type_1. method_2 ( string_2 ) ; } java.lang.string output = var_1 + ( type_1. substring ( var_2 ) ) ; return ( output. substring ( 0, ( ( output. length ( ) ) - int_1 ) ) ) + string_3 ; }

************

************
tgt: static void method_1 ( type_1 response , type_1 var_1 ) throws java.lang.exception { response . method_2 ( type_2 . method_3 ( var_1 ) ) ; java.util.list < type_1 > var_3 = var_1 . method_4 ( string_1 ) ; for ( type_1 var_4 : var_3 ) { var_5 . method_2 ( type_2 . method_5 ( var_4 ) ) ; java.util.list < type_1 > var_6 = var_4 . method_4 ( string_2 ) ; for ( type_1 var_7 : var_6 ) { var_8 . method_2 ( type_2 . method_6 ( var_7 ) ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { var_1. method_2 ( this ) ; java.lang.string key = var_1. method_3 ( ) ; type_2. method_4 ( string_1, ( string_2 + key ) ) ; method_5 ( var_1, type_3. method_6 ( var_1. getcontext ( ) ). getstring ( key, getstring ( var_2 ) ) ) ; }

************

************
tgt: public static type_1 key ( type_2 var_1 , java.lang.class < ? extends type_3 > var_2 , type_4 var_3 ) { type_2 var_4 = var_1 . trim ( type_5 . method_1 ( var_7 < java.lang.class < ? extends type_3 > > method_2 ( var_2 ) , var_3 ) ) ; return new type_1 ( var_8 , new type_6 ( var_4 , var_2 ) ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { final java.lang.string var_2 = method_2 ( method_3 ( var_1 ) ) ; if ( var_2!= null ) { final java.io.file var_3 = method_4 ( var_1, var_2 ) ; if ( var_3!= null ) { var_3. method_5 ( ) ; } var_4. method_6 ( var_3. method_7 ( ) ) ; } else { var_4. method_6 ( null ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 result ) throws type_3 { if ( result . method_2 ( ) ) { var_3 . info ( string_1 ) ; return string_2 ; } java.lang.system.out.println ( var_2 . method_3 ( var_1 ) ) ; if ( ! ( var_2 . method_3 ( var_1 ) ) ) { var_3 . info ( string_3 ) ; return string_4 ; } var_3 . info ( string_5 ) ; return string_2 ; }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { type_2. method_2 ( var_3, ( string_1 + var_2 ) ) ; var_4. setenabled ( true ) ; type_1 var_5 = type_3. method_3 ( var_1, int_1, int_1 ) ; var_6. method_4 ( var_5 ) ; this. var_2 = var_2 ; var_6. method_5 ( var_7 ) ; }

************

************
tgt: public void method_1 ( final type_1 file ) { if ( file instanceof type_2 ) { method_4 ( ( ( type_2 ) ( file ) ) , var_2 ) ; } else if ( file instanceof type_3 ) { method_5 ( ( ( type_3 ) ( file ) ) , var_3 ) ; } }
[0]: private synchronized boolean method_1 ( int line ) { type_1 var_1 = var_2. get ( line ) ; if ( var_1 == null ) { return true ; } if ( ( var_1. method_2 ( ) ) > ( var_1. method_3 ( ) ) ) { return true ; } return false ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1 . split ( string_1 ) ; if ( ( var_2 [ 1 ] ) != string_2 ) { java.lang.string var_3 = var_2 [ 1 ] ; java.lang.string var_4 = var_3 . trim ( ) ; java.lang.string [ ] id = var_4 . split ( string_3 ) ; return id [ 0 ] ; } else { return var_1 . trim ( ) ; } }
[0]: public void method_1 ( ) { type_1 type_2 ; if ( ( var_1 ) == 1 ) { type_2 = new type_1 ( string_1 ) ; type_2. method_2 ( var_2 ) ; var_3. method_3 ( ) ; var_3. method_4 ( type_2 ) ; } else { type_2 = new type_1 ( string_2 ) ; type_2. method_2 ( var_4 ) ; var_3. method_3 ( ) ; var_3. method_4 ( type_2 ) ; } var_3. method_5 ( ) ; var_3. method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( type_2 . method_2 ( ) ) { type_2 . method_3 ( java.lang.string.format ( string_1 , getid ( ) , method_4 ( ) . getname ( ) , java.lang.thread . method_5 ( ) , type_3 . method_6 ( java.lang.thread . method_5 ( ) . method_7 ( ) , int_1 ) ) ) ; } return this . var_1 . method_8 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; ( ( type_2 ) ( getactivity ( ) ) ). method_2 ( false ) ; method_3 ( string_1 ) ; var_2 = new type_3 ( getactivity ( ), null, 0 ) ; method_4 ( var_2 ) ; getactivity ( ). method_5 ( ). method_6 ( var_3, null, this ) ; }

************

************
tgt: public void method_1 ( java.lang.string filename , type_1 node ) { java.util.list < type_1 > temp ; temp = this . var_1 . get ( filename ) ; if ( temp != null ) { temp . add ( node ) ; } else { temp = new java.util.arraylist < type_1 > ( ) ; temp . add ( node ) ; this . var_1 . put ( filename , temp ) ; } }
[0]: private boolean method_1 ( ) { if (! ( var_1. method_2 ( var_2. method_3 ( 0 ) ) ) ) { return method_4 ( var_2. method_3 ( int_1 ) ) ; } else { type_1 type = var_1. method_5 ( var_2. method_3 ( 0 ) ). gettype ( ) ; return method_6 ( type, var_2. method_3 ( int_1 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { var_3 . add ( var_1 ) ; if ( var_2 ) { final java.util.arraylist < java.lang.string > var_4 = method_2 ( ) ; if ( var_4 != null ) for ( java.lang.string line : var_4 ) if ( line != null ) var_1 . method_3 ( type_2 . method_4 ( ( ( var_5 ) + line ) ) ) ; } }
[0]: public long method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; try { long index = var_3. method_3 ( var_1, 0 ) ; if ( var_2. method_4 ( index ) ) { assert ( var_4. method_5 ( ) ) > 1 ; return ( var_4. method_6 ( var_2 ) ) + 1 ; } else { return - 1 ; } } catch ( type_2 var_5 ) { throw new type_3 ( var_5 ) ; } finally { var_2. method_7 ( ) ; } } }

************

************
tgt: public boolean method_1 ( final java.lang.string var_1 ) throws java.lang.exception { try { method_2 ( var_1 ) ; method_3 ( var_1 , var_2 ) ; type_1 var_3 = new type_1 ( ) ; return ( ( java.lang.long ) ( var_3 . method_4 ( method_5 ( ) . method_6 ( ) ) ) ) > 0 ; } catch ( java.lang.exception var_4 ) { throw new java.lang.exception ( string_3 , var_4 ) ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { if ( (! ( method_2 ( ) ) ) || (! ( var_1. method_2 ( ) ) ) ) { return new type_2 ( 0 ) ; } return new type_2 ( ( ( value ) * ( ( ( type_2 ) ( var_1 ) ). getvalue ( ) ) ) ) ; }

************

************
tgt: public java.lang.boolean method_1 ( type_1 token ) { type_2 query = super . method_2 ( ) . method_3 ( string_2 ) ; query . method_4 ( string_3 , token . method_5 ( ) ) ; query . method_4 ( string_4 , token . method_6 ( ) ) ; if ( ( query . list ( ) . size ( ) ) == 0 ) { token . method_7 ( var_1 ) ; method_8 ( token ) ; } return true ; }
[0]: private boolean method_1 ( type_1 var_1, type_2 var_2 ) { boolean result = false ; if ( ( ( var_2 == null ) && ( type_3. method_2 ( var_1. method_3 ( ) ) ) ) || ( ( var_2!= null ) && ( var_2. equals ( var_1. method_3 ( ) ) ) ) ) { result = true ; } return result ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.list < java.lang.integer > list = new java.util.arraylist < java.lang.integer > ( ) ; list . method_1 ( java.util.arrays.aslist ( 0 , 0 , 1 , int_5 , 1 , 1 ) ) ; java.lang.system.out.println ( type_1 . method_2 ( list , int_2 ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_1. method_2 ( ). method_3 ( ). startswith ( var_3 ) ) { type_3. info ( string_1, var_1. getid ( ), var_2 ) ; try { var_1. method_1 ( ) ; var_4. remove ( var_1 ) ; } catch ( java.io.ioexception var_5 ) { type_3. method_4 ( string_2, var_1. getid ( ) ) ; } } else { var_6 = false ; } }

************

************
tgt: public java.util.arraylist < java.lang.string > method_1 ( ) { if ( ( var_2 ) == null ) { return null ; } java.util.arraylist < type_1 > var_1 = var_2 . method_2 ( ) ; java.util.arraylist < java.lang.string > out = new java.util.arraylist < > ( ) ; for ( type_1 var_3 : var_1 ) { out . add ( var_3 . getname ( ) ) ; } return out ; }
[0]: public static type_1 method_1 ( type_1 var_1 ) { type_1 var_2 ; type_1 var_3 ; type_1 var_4 ; var_2 = null ; var_3 = var_1 ; var_4 = null ; while ( var_3!= null ) { var_4 = var_5 ; var_5 = var_2 ; var_2 = var_3 ; var_3 = var_4 ; } var_1 = var_2 ; return var_1 ; }

************

************
tgt: public type_1 method_1 ( ) { try { if ( ( var_1 . size ( ) ) > 0 ) { type_1 var_2 = ( ( type_1 ) ( super . method_1 ( ) ) ) ; var_3 = new java.util.hashset < java.lang.string > ( ) ; var_2 . method_3 ( this ) ; return var_2 ; } else { return this ; } } catch ( type_2 var_4 ) { throw new type_3 ( string_1 ) ; } }
[0]: private java.util.date method_1 ( java.lang.string value ) { try { if (! ( type_1. isempty ( value ) ) ) { return new java.util.date ( java.lang.long.parselong ( value ) ) ; } } catch ( type_2 var_1 ) { type_3. method_2 ( string_1, value ) ; } return null ; }

************

************
tgt: public int method_1 ( int var_1 , boolean var_2 ) { int var_3 = this . var_4 . method_2 ( var_1 , var_2 ) ; if ( ! var_2 ) { this . method_3 ( ) ; if ( ! ( var_5 ) ) { this . var_6 += var_3 ; } } return var_3 ; }
[0]: public void method_1 ( ) { try { var_1 = new java.io.bufferedreader ( new type_1 ( var_2. method_2 ( ) ) ) ; java.lang.string message = var_1. method_3 ( ) ; java.lang.system.out.println ( ( string_1 + ( id ) ) ) ; java.lang.system.out.println ( message ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_4 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 node ) throws java.lang.exception { if ( ( node . method_2 ( ) ) != null ) { node . method_2 ( ) . method_3 ( this ) ; } if ( ( node . method_4 ( ) ) != null ) { node . method_4 ( ) . method_3 ( this ) ; } method_5 ( node ) ; return false ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.object var_2 ) { if ( var_3. method_2 ( ) ) { var_4. setenabled ( true ) ; var_5. setenabled ( true ) ; method_3 ( ) ; } else { if ( ( var_6 )!= null ) var_6. method_4 ( ) ; var_4. setenabled ( false ) ; var_5. setenabled ( false ) ; } return true ; }

************

************
tgt: public void execute ( ) { double var_1 = var_2 . method_1 ( ) . method_2 ( ) ; method_3 ( ) ; double var_3 = var_4 . method_4 ( ) . method_5 ( var_5 . method_6 ( ) ) ; double var_6 = - ( var_7 . method_7 ( 0 , var_3 ) ) ; var_8 . method_8 ( ( var_1 - var_6 ) , ( var_1 + var_6 ) ) ; }
[0]: public void method_1 ( int var_1, int var_2 ) { int var_3 = method_2 ( var_1 ) ; int var_4 = method_2 ( var_2 ) ; int var_5 = size ( var_3 ) ; int var_6 = size ( var_4 ) ; if ( var_5 > var_6 ) { id [ var_4 ] = var_3 ; size [ var_3 ] = var_5 + var_6 ; } else { id [ var_3 ] = var_4 ; size [ var_4 ] = var_5 + var_6 ; } }

************

************
tgt: private java.lang.double method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { if ( var_1 . equals ( string_1 ) ) return method_2 ( var_2 , var_3 ) ; else if ( var_1 . equals ( string_2 ) ) return method_3 ( var_2 , var_3 ) ; else if ( var_1 . equals ( string_3 ) ) return method_4 ( var_2 , var_3 ) ; else return method_5 ( var_2 , var_3 ) ; }
[0]: public boolean remove ( int index ) { if ( ( index < 1 ) || ( index > ( size ( ) ) ) ) return false ; type_1 var_1 = var_2 ; for ( int i = 1 ; i < index ; i ++ ) { if ( ( var_1. method_1 ( ) ) == null ) { return false ; } } var_1. method_2 ( var_1. method_1 ( ). method_1 ( ) ) ; ( count ) -- ; return true ; }

************

************
tgt: private static type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.util.properties var_3 = new java.util.properties ( ) ; var_3 . put ( string_1 , var_1 ) ; var_3 . put ( string_2 , var_2 ) ; var_3 . put ( string_3 , string_4 ) ; var_3 . put ( string_5 , string_6 ) ; var_3 . put ( string_7 , string_8 ) ; return new type_1 ( var_3 ) ; }
[0]: public void method_1 ( type_1 event ) { java.lang.string filename = this. var_1. method_2 ( ) ; if ( ( filename == null ) || ( filename. isempty ( ) ) ) { method_3 ( type_2. error ( ), true ) ; var_2. method_4 ( string_1, string_2 ) ; return ; } if ( this. var_3. getvalue ( ) ) { var_4. method_5 ( var_5 ) ; } else { var_4. method_5 ( var_6 ) ; } this. var_4. method_6 ( ) ; }

************

************
tgt: private int method_1 ( ) { int start = 0 ; double var_2 = 0 ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { if ( ( var_4 [ i ] [ j ] ) > var_2 ) { var_2 = var_4 [ i ] [ j ] ; start = i ; } } } return start ; }
[0]: public void method_1 ( type_1 msg ) { type_2 var_1 = var_2. get ( ) ; if ( ( var_1!= null ) && ( ( var_3. method_2 ( ) )!= null ) ) { if ( var_3. method_2 ( ). method_3 ( ) ) { type_3. method_4 ( var_4, string_1 ) ; return ; } var_3. method_5 ( string_2 ) ; type_3. method_4 ( var_4, string_3 ) ; var_1. method_6 ( ) ; } }

************

************
tgt: public void execute ( type_1 var_1 , type_2 var_2 ) throws type_3 { if ( var_3 ) { var_2 . method_1 ( new type_4 ( var_1 , var_2 , var_4 , var_5 ) ) ; } else { throw new type_3 ( ( ( string_1 + ( this ) ) + string_2 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1. method_2 ( string_1 ). method_2 ( var_3 ). method_3 ( ) ) { var_4. settext ( string_2 ) ; var_5. settext ( string_3 ) ; type_2 c = var_2. getvalue ( var_6 class ) ; java.lang.string var_7 = c. getname ( ) ; java.lang.string var_8 = var_9. method_4 ( ). method_5 ( ) ; var_4. settext ( var_7 ) ; var_5. settext ( var_8 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( ) . method_3 ( ) ; if ( var_1 != null ) { java.util.list < ? extends type_1 > var_3 = var_1 . method_4 ( ) ; java.lang.string var_5 = var_2 . method_2 ( ) . method_3 ( ) . method_5 ( ) ; type_2 . method_6 ( var_5 , var_3 ) ; } }
[0]: public int method_1 ( java.lang.string str ) { if ( null == str ) { str = string_1 ; } long var_1 = method_2 ( str ) ; if ( var_1 > ( var_2 ) ) { var_1 = var_2 ; } else if ( var_1 < ( var_3 ) ) { var_1 = var_3 ; } else { var_1 = ( ( int ) ( var_1 ) ) ; } return ( ( int ) ( var_1 ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : method_3 ( ) ; method_4 ( ) ; return true ; case var_2 : android.content.intent intent = new android.content.intent ( this , var_3 class ) ; method_5 ( intent ) ; return true ; case var_4 : method_6 ( ) ; method_4 ( ) ; return true ; } return super . method_1 ( item ) ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; method_2 ( buffer, var_2 ) ; int var_3 = this. var_4 ; ( this. var_4 ) ++ ; while ( true ) { if ( var_3 >= ( list. size ( ) ) ) { return var_1 ; } else { key. set ( var_3 ) ; var_1. add ( method_3 ( var_3 ) ) ; } } } }

************

************
tgt: public boolean method_1 ( java.lang.string id ) throws type_1 { type_2 var_1 = method_2 ( ) ; try { if ( type_3 . method_3 ( id ) ) { type_4 var_2 = new type_4 ( var_1 ) ; return var_2 . method_4 ( method_5 ( type_3 . method_6 ( id ) ) , var_3 class ) ; } else { type_5 var_4 = new type_5 ( var_1 ) ; return var_4 . method_4 ( method_5 ( type_3 . method_6 ( id ) ) , var_6 class ) ; } } finally { method_7 ( var_1 ) ; } }
[0]: private type_1 method_1 ( java.lang.string var_1, int var_2 ) throws type_2, type_3, type_4 { long starttime = type_5. method_2 ( ) ; type_1 result = var_3. method_3 ( var_1, false, var_2 ) ; if ( type_6. method_4 ( ) ) { type_6. method_5 ( ( ( string_1 + ( ( type_5. method_2 ( ) ) - starttime ) ) + string_2 ) ) ; } return result ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { char var_1 ; int a ; final int var_2 = int_1 ; final int var_3 = int_2 ; final int var_4 = int_3 ; final int var_5 = int_2 ; for ( a = var_2 ; a <= var_3 ; a ++ ) { var_1 = ( ( char ) ( a ) ) ; java.lang.system.out.print ( ( string_1 + var_1 ) ) ; if ( ( a == var_4 ) || ( a == var_5 ) ) java.lang.system.out.println ( ) ; } java.lang.system.out.println ( string_2 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( ( var_2 ) + 1 ) < ( var_3. size ( ) ) ) { ( var_2 ) ++ ; temp = var_3. get ( var_2 ). method_2 ( temp. getconfig ( ), true ) ; var_4. method_3 ( temp ) ; } }

************

************
tgt: public void method_1 ( ) { try { final boolean var_1 = method_2 ( var_2 . method_3 ( ) , var_2 . out ( ) ) ; } catch ( java.lang.exception var_3 ) { type_1 . error ( var_3 , string_5 ) ; } try { var_2 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { type_1 . error ( var_3 , string_6 ) ; } }
[0]: public void method_1 ( type_1 < java.util.list < java.util.date > > var_1 ) { try { java.util.list < java.util.date > var_2 = var_1. get ( ) ; if ( ( var_2. size ( ) ) == int_1 ) { this. var_1 = type_1. method_2 ( var_1. get ( ). get ( 0 ) ) ; } else { this. var_1 = type_1. method_3 ( ) ; } } catch ( type_2 var_3 ) { throw new type_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 . method_2 ( var_2 ) ; java.lang.thread . method_3 ( this . offset ) ; while ( ! ( java.lang.thread . method_4 ( ) ) ) { var_1 . method_2 ( var_3 ) ; java.lang.thread . method_3 ( var_4 ) ; var_1 . method_2 ( var_2 ) ; java.lang.thread . method_3 ( var_5 ) ; } } catch ( type_1 var_6 ) { java.lang.system.out.println ( string_1 ) ; } }
[0]: public void method_1 ( ) { type_1 < java.lang.long, java.lang.string > var_1 = var_2. method_2 ( java.util.arrays.aslist ( int_1, int_2 ) ) ; asserttrue ( (! ( var_1. isempty ( ) ) ) ) ; assertequals ( type_2. method_3 ( string_1 ), var_1. get ( int_1 ) ) ; assertequals ( var_3 < java.lang.string > method_3 ( ), var_1. get ( int_2 ) ) ; }

************

************
tgt: public java.util.iterator < type_2 > iterator ( ) { java.lang.object [ ] var_1 = new java.lang.object [ size ] ; type_3 var_2 = new type_3 ( var_3 ) ; int i = 0 ; while ( ! ( var_2 . isempty ( ) ) ) { var_1 [ ( i ++ ) ] = var_2 . method_1 ( ) ; } return new type_4 ( var_1 ) ; }
[0]: public void method_1 ( final java.lang.string var_1, final java.lang.string var_2, final java.util.list < java.lang.string > var_3, final java.util.list < java.lang.string > var_4, final java.lang.string var_5, final java.lang.string var_6 ) { type_1 var_7 = new type_1 ( ) ; var_7. method_2 ( var_1 ) ; var_7. method_3 ( var_2, var_5 ) ; java.lang.string var_8 = type_2. method_4 ( var_7, var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { type_3 < type_2 > var_2 = var_3 < type_2 > method_2 ( ) . method_3 ( new type_4 ( ) ) . method_5 ( var_4 class ) . build ( ) ; var_1 . method_6 ( var_2 ) ; var_1 . method_6 ( new type_5 ( var_2 . method_7 ( ) . method_8 ( ) ) ) ; }
[0]: private void method_1 ( ) throws type_1, java.io.ioexception { type_2 var_1 = new type_2 ( new java.io.fileinputstream ( var_2 ) ) ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { try { this. var_4 = ( ( java.util.hashmap < java.lang.long, type_3 < byte [ ] > > ) ( var_1. method_2 ( ) ) ) ; } catch ( java.lang.exception var_5 ) { } finally { var_1. method_3 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : var_2 . method_2 ( ) ) { if ( var_1 instanceof type_2 ) ( ( type_2 ) ( var_1 ) ) . method_1 ( ) ; } for ( type_3 var_3 : var_2 . method_3 ( ) ) { type_4 var_4 = var_3 . method_4 ( var_5 class ) ; if ( var_4 != null ) var_6 . method_1 ( ) ; } }
[0]: public java.lang.string method_1 ( java.lang.integer var_1 ) { type_1 var_2 = var_3. method_2 ( var_1 ) ; type_2 status = var_4. method_3 ( var_5 ) ; type_3 var_6 = new type_3 ( ) ; if ( var_3. method_4 ( var_2 ) ) { var_6. method_5 ( var_7 ) ; } else { var_6. method_5 ( var_8 ) ; } return var_9. method_6 ( var_6 ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_2 data ) { switch ( var_1 . getid ( ) ) { case var_2 : { if ( ( data != null ) && ( data . method_2 ( ) ) ) { method_3 ( data . getstring ( 0 ) ) ; } break ; } case var_3 : { if ( data != null ) { final type_2 var_4 = ( ( type_3 ) ( data ) ) . var_5 ; method_4 ( var_4 , data ) ; } break ; } } }
[0]: private static byte [ ] method_1 ( java.io.file file ) throws java.io.ioexception { byte [ ] buffer = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( ) ; java.io.fileinputstream var_2 = new java.io.fileinputstream ( file ) ; while ( true ) { int var_3 = var_2. method_2 ( buffer ) ; if ( var_3 == ( - 1 ) ) break ; var_1. method_3 ( buffer, 0, var_3 ) ; } var_2. method_4 ( ) ; return var_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( var_1 ) type_1 . method_2 ( var_2 , string_1 ) ; type_2 var_4 = ( ( type_2 ) ( method_3 ( var_5 ) ) ) ; if ( var_6 ) { var_3 = false ; var_7 . method_4 ( ) ; var_4 . method_5 ( method_6 ( ) . method_7 ( var_8 ) ) ; } else { var_7 . method_8 ( ) ; var_3 = true ; var_4 . method_5 ( method_6 ( ) . method_7 ( var_9 ) ) ; } }
[0]: public static type_1 method_1 ( final java.lang.string text ) { if ( text == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } final type_1 var_1 = type_2. get ( text ) ; if ( var_1 == null ) { throw new type_3 ( ( ( string_2 + text ) + string_3 ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . method_2 ( type_1 . get ( string_1 ) ) . method_3 ( type_2 . status ( ) . method_4 ( ) ) . method_3 ( type_2 . method_5 ( ) . attribute ( string_2 , var_2 ) ) . method_3 ( type_2 . method_5 ( ) . size ( 1 ) ) . method_3 ( type_2 . view ( ) . name ( string_3 ) ) ; type_3 . method_6 ( var_3 ) . method_7 ( ) ; type_3 . method_8 ( var_3 ) ; }
[0]: public type_1 method_1 ( long var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4 ) { if ( var_3 == null ) var_3 = string_1 ; try { return var_5. method_1 ( var_1, var_2 ) ; } catch ( type_2 var_6 ) { var_7. error ( var_6 ) ; var_6. method_2 ( ) ; throw var_6 ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 ; if ( type_3 . method_2 ( var_4 ) ) { var_4 = method_3 ( var_1 , var_5 . method_4 ( ) . getname ( ) ) ; } if ( type_3 . method_2 ( var_6 ) ) { var_6 = method_3 ( var_1 , var_7 . method_4 ( ) . getname ( ) ) ; } }
[0]: public final boolean method_1 ( final type_1 var_1, final java.lang.string title, final java.lang.string var_2 ) { if ( ( var_2!= null ) && (! ( var_2. isempty ( ) ) ) ) { var_3 = true ; this. method_2 ( method_3 ( var_2, var_1. method_4 ( ) ) ) ; method_5 ( false ) ; return true ; } type_2. method_6 ( this, type_3. getstring ( string_1, var_2 ), type_3. getstring ( string_2 ), var_4 ) ; return false ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( var_1 == null ) return false ; if ( ! ( var_1 instanceof type_1 ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( compareto ( var_2 ) ) == 0 ) || ( value . equals ( var_2 . method_1 ( ) ) ) ; }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1 ) == null ) { return null ; } java.lang.stringbuffer var_2 = new java.lang.stringbuffer ( ) ; type_1 var_3 = var_1 ; while ( ( var_3. method_2 ( ) )!= null ) { var_2. append ( ( ( var_3. getdata ( ) ) + string_1 ) ) ; var_3 = var_3. method_2 ( ) ; } var_2. append ( var_3. getdata ( ) ) ; return var_2. tostring ( ) ; } return null ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , type_2 var_2 , java.lang.string var_3 ) throws java.lang.exception { java.lang.string var_4 = null ; try { if ( null != ( var_1 . method_2 ( ) ) ) { type_3 var_5 = var_2 . method_3 ( var_1 . method_2 ( ) , var_3 ) ; if ( null != var_5 ) { var_4 = var_5 . method_4 ( ) . get ( 1 ) ; } } } catch ( java.lang.exception var_6 ) { var_7 . method_5 ( string_1 , var_1 . method_2 ( ) ) ; } return var_4 ; }
[0]: public static java.io.file method_1 ( java.io.file var_1, java.lang.string var_2 ) { for ( java.io.file file : type_1. method_2 ( var_1, null, true ) ) if ( ( file. getname ( ). method_3 ( var_2 ) ) && ( ( file. length ( ) ) >= 1 ) ) return file ; throw new type_2 ( ( ( string_1 + var_2 ) + string_2 ) ) ; }

************

************
tgt: public java.util.collection < type_1 > method_1 ( java.lang.string var_1 ) throws type_2 { if ( var_2 . method_2 ( java.lang.integer . method_3 ( var_1 ) ) ) { type_3 var_3 = var_2 . get ( java.lang.integer . method_3 ( var_1 ) ) ; type_4 var_4 = new type_4 ( new type_5 ( ) ) ; type_1 var_5 = var_4 . method_4 ( var_3 ) ; java.util.arraylist < type_1 > var_6 = new java.util.arraylist < type_1 > ( ) ; var_6 . add ( var_5 ) ; return var_6 ; } else return null ; }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent intent ) { type_1. i ( string_1, string_2 ) ; super. method_1 ( var_1, var_2, intent ) ; if ( var_1 == 1 ) { if ( var_2 == ( var_3 ) ) { var_4 = intent. method_2 ( string_4 ) ; var_5 = intent. method_2 ( string_5 ) ; } } }

************

************
tgt: private void show ( ) { var_1 . method_1 ( var_2 ) ; var_3 . method_1 ( var_2 ) ; var_4 . method_1 ( var_2 ) ; var_5 . method_1 ( var_2 ) ; title . method_1 ( var_2 ) ; var_6 . method_1 ( var_2 ) ; add . method_1 ( var_2 ) ; var_7 . method_1 ( var_2 ) ; t . method_1 ( var_2 ) ; }
[0]: protected boolean method_1 ( type_1 item ) { type_1 var_1 = ( ( type_1 ) ( var_2. method_2 ( var_3, var_4 ) ) ) ; type_1 var_5 = ( ( type_1 ) ( var_2. method_3 ( var_3, var_4 ) ) ) ; return ( ( var_1. compareto ( var_2 ) ) <= 0 ) && ( ( var_5. compareto ( var_2 ) ) >= 0 ) ; }

************

************
tgt: public int method_1 ( java.lang.string var_1 ) { if ( var_1 . equals ( "0" ) ) return 0 ; for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { try { java.lang.string var_2 = list . get ( i ) . getstring ( string_1 ) ; if ( var_1 . equals ( var_2 ) ) return i + 1 ; } catch ( type_1 var_3 ) { var_3 . method_2 ( ) ; } } return 0 ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_1 == ( var_3 ) ) { type_1 var_4 = ( ( type_1 ) ( data. method_2 ( ). get ( string_1 ) ) ) ; type_2 var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_5. method_4 ( var_4 ) ; new type_3 ( ). execute ( method_5 ( var_4 ), string_2 ) ; } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getclass ( ) ) != ( obj . getclass ( ) ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return type_2 . equals ( this . var_4 , var_5 ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; var_2 = string_1 ; var_3. method_2 ( ) ; var_4 = string_1 ; for ( int i = 0 ; i < ( var_5. length ) ; i ++ ) { var_5 [ i ] = false ; } var_6. method_3 ( 0 ) ; var_7. method_4 ( ) ; }

************

************
tgt: protected static type_1 [ ] method_1 ( int var_1 ) { type_1 [ ] params = new type_1 [ var_1 ] ; for ( int i = 0 ; i < var_1 ; i ++ ) { params [ i ] = new type_2 ( ) ; } return params ; }
[0]: public synchronized void method_1 ( ) { if ( ( var_1 ) == null ) { java.lang.system.err.println ( string_1 ) ; return ; } try { var_1. method_2 ( ) ; var_2. method_3 ( ) ; } catch ( java.io.ioexception var_3 ) { java.lang.system.err.println ( ( string_2 + ( var_3. method_4 ( ) ) ) ) ; } var_1 = null ; }

************

************
tgt: public boolean method_1 ( type_1 field ) { if ( field == null ) { throw new type_2 ( ) ; } switch ( field ) { case var_1 : return method_2 ( ) ; case var_2 : return method_3 ( ) ; } throw new type_3 ( ) ; }
[0]: private java.lang.string method_1 ( java.util.list < type_1 > var_1 ) { if ( var_1 == null ) return var_2 ; java.lang.stringbuilder result = new java.lang.stringbuilder ( ) ; for ( type_1 var_3 : var_1 ) { result. append ( var_3. getname ( ) ) ; result. append ( string_1 ) ; } method_2 ( result, var_4 ) ; return result. tostring ( ) ; }

************

************
tgt: private static int method_1 ( type_1 var_1 ) { if ( ( var_2 ) == var_1 ) { var_1 = var_3 ; } else { var_3 = var_1 ; } switch ( var_1 ) { case var_6 : return var_7 ; case var_4 : return var_5 ; default : return var_8 ; } }
[0]: private void method_1 ( ) { type_1. method_2 ( string_1, string_2 ) ; type_2 var_1 = method_3 ( ). method_4 ( ) ; type_3 var_2 = method_3 ( ). method_5 ( string_3 ) ; if ( var_2!= null ) { var_1. remove ( var_2 ) ; } var_1. method_6 ( null ) ; var_3 = type_4. method_7 ( var_4 ) ; var_3. method_8 ( true ) ; var_3. show ( var_1, string_3 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( ! ( type_2 . gettext ( ) . isempty ( ) ) ) && ( ! ( type_3 . gettext ( ) . isempty ( ) ) ) ) { method_2 ( type_2 , type_3 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { type_2 var_3 = var_4. method_2 ( string_1, var_5 ) ; java.lang.long var_6 = var_3. method_3 ( string_2, 0 ) ; if ( var_6 == 0 ) { var_6 = type_3. method_4 ( ) ; } if ( var_7!= null ) { var_7. method_5 ( string_3, 0 ) ; var_7. method_5 ( string_2, var_6 ) ; var_7. commit ( ) ; } var_1. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( ( ( ( var_2 ) + string_1 ) + ( var_3 . format ( ( ( double ) ( var_3 . method_1 ( var_1 . getname ( ) ) ) ) ) . replace ( string_2 , string_3 ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( getintent ( ). method_3 ( string_1 ) ) ) ; position = getintent ( ). method_4 ( string_2, 0 ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = false ; try { method_2 ( ) ; method_2 ( ) ; method_2 ( ) ; method_2 ( ) ; } catch ( java.lang.nullpointerexception a ) { } var_2 = - 1 ; method_3 ( ) ; var_3 . method_4 ( 0 ) ; var_4 = false ; if ( var_5 ) { var_6 . method_5 ( ) ; } if ( var_7 ) { a . method_5 ( ) ; } var_1 = true ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3. length ) ; var_2 ++ ) { for ( int var_4 = 0 ; var_4 < ( var_3 [ 0 ]. length ) ; var_4 ++ ) { var_3 [ var_2 ] [ var_4 ]. method_1 ( var_1 ) ; } } super. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( var_1 ) var_2 = null ; try { if ( ( var_2 ) != null ) return ; java.io.file var_3 = method_2 ( ) ; if ( ! ( var_3 . method_3 ( ) ) ) return ; type_1 var_5 = new type_1 ( ) ; var_2 = ( ( type_2 ) ( var_5 . method_4 ( new java.io.filereader ( var_3 ) ) ) ) ; } catch ( java.lang.exception var_6 ) { var_6 . method_5 ( ) ; } }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_1 = string_2 ; java.lang.string var_2 = string_2 ; type_1 context = method_2 ( var_1, var_2 ) ; var_3. method_3 ( context ) ; var_3. method_4 ( new type_2 ( ) ) ; var_3. start ( ) ; asserttrue ( ( ( var_3. method_5 ( ) )!= null ) ) ; assertequals ( var_4, var_3. method_6 ( ) ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = null ; type_1 var_3 = this . method_2 ( ) ; type_2 var_4 = var_3 . query ( var_5 , new java.lang.string [ ] { var_6 } , ( ( var_7 ) + string_1 ) , new java.lang.string [ ] { var_1 } , null , null , null , null ) ; try { if ( var_4 . method_3 ( ) ) { var_2 = var_4 . getstring ( 0 ) ; } } finally { var_4 . method_4 ( ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { if (! ( var_1. method_2 ( ) ) ) { return ; } java.lang.integer var_2 = method_3 ( var_1 ) ; var_1. method_4 ( ( ( var_1. method_5 ( ) ) + var_2 ) ) ; var_1. method_6 ( ( ( var_1. method_5 ( ) ) + var_2 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { super . method_1 ( var_1 ) ; if ( ! ( method_2 ( ) ) ) { return ; } if ( ! ( var_2 ) ) { var_2 = true ; type_1 var_3 = type_2 . method_3 ( getactivity ( ) ) ; var_3 . method_4 ( ) . method_5 ( var_4 , true ) . commit ( ) ; } getactivity ( ) . method_7 ( ) ; }
[0]: private void method_1 ( java.lang.string var_1, type_1 var_2 ) { try { method_2 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { method_3 ( var_4, var_3. method_4 ( ) ) ; } var_2 = var_5. method_5 ( var_1 ) ; if ( var_2 == null ) { method_3 ( var_4, string_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 [ ] var_1 = new type_1 [ ] { new type_1 ( string_1 , 0 , 0 ) } ; type_2 var_2 = new type_2 ( var_1 ) ; var_2 . method_2 ( ) ; assertequals ( string_1 , var_3 [ 0 ] . name ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return var_1. tostring ( ) ; } java.lang.string var_3 = java.lang.string.format ( var_2, var_1 ) ; if ( ( var_1. method_2 ( ) ) || ( ( var_4 )!= null ) ) { var_3 = java.lang.string.format ( string_1, var_1, var_3 ) ; } return var_3 ; }

************

************
tgt: private void method_1 ( java.util.map < type_1 , java.lang.string > var_1 ) { for ( java.util.map.entry < type_1 , java.lang.string > var_2 : var_1 . method_2 ( ) ) { type_1 var_3 = new type_1 ( var_2 . getvalue ( ) , null , var_2 . method_3 ( ) . gettype ( ) ) ; this . method_4 ( var_3 ) ; var_4 . put ( var_2 . method_3 ( ) , var_3 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( true ) ; type_1. method_3 ( this, java.util.arrays.aslist ( string_1 ), new type_2 ( ) { public void method_4 ( type_3 var_2, type_4 var_3 ) { if ( var_2 == null ) { } else if ( var_2. method_5 ( ) ) { method_6 ( ) ; } else { type_5. method_7 ( var_4, ( string_2 + ( var_2. tostring ( ) ) ) ) ; } } } ) ; } }

************

************
tgt: private void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . add ( new java.util.arraylist < java.lang.integer > ( ) ) ; var_2 . add ( new java.util.arraylist < java.lang.integer > ( ) ) ; var_3 . add ( new java.util.arraylist < java.lang.integer > ( ) ) ; var_4 . add ( new java.util.arraylist < java.lang.integer > ( ) ) ; var_5 . add ( new java.util.arraylist < java.lang.integer > ( ) ) ; } }
[0]: public static type_1 method_1 ( final java.net.url [ ] var_1, final type_1 var_2 ) { type_2. method_2 ( null ) ; final type_3 var_3 = type_4. method_3 ( new type_5 < type_3 > ( ) { public type_3 method_4 ( ) { return new type_3 ( var_1, var_2 ) ; } } ) ; return var_3 ; }

************

************
tgt: public boolean method_1 ( android.view.view view , type_1 var_1 ) { switch ( var_1 . method_2 ( ) ) { case var_2 : var_3 . method_3 ( null ) ; return true ; case var_4 : var_3 . method_3 ( new type_2 ( ) ) ; return false ; default : return false ; } }
[0]: protected void method_1 ( ) throws java.io.ioexception { type_1. method_2 ( new java.io.file ( var_1, var_2 ), java.lang.string.format ( string_1, ( ( var_3 ) * int_1 ) ) ) ; type_1. method_2 ( new java.io.file ( var_1, var_4 ), java.lang.string.format ( string_1, ( ( var_5 ) * int_1 ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( var_1 ) == ( ( var_2 . size ( ) ) - 1 ) ) { var_1 = 0 ; method_2 ( var_2 . get ( var_1 ) ) ; } else { var_1 += 1 ; method_2 ( var_2 . get ( var_1 ) ) ; } }
[0]: public java.lang.float get ( ) { if ( ( var_1 ) == ( var_2 ) ) { return null ; } else { float result = data [ var_1 ] ; var_1 = ( ( var_1 ) + 1 ) % ( var_3 ) ; return result ; } }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 ) { if ( ( var_2 ) == null ) return false ; if ( var_1 == null ) return false ; if ( ( var_2 . method_2 ( ) ) == null ) return false ; if ( ( var_2 . method_2 ( ) ) == null ) return false ; return ( var_2 . method_2 ( ) . equals ( var_1 ) ) && ( var_3 ) ; }
[0]: private void execute ( final type_1 var_1, final type_2 var_2 ) { method_1 ( ) ; for ( final type_3 var_3 : var_1. method_2 ( ) ) { for ( type_4 var_4 : var_3. method_3 ( ) ) { try { method_4 ( ) ; var_4 = var_2. method_5 ( var_4 ) ; method_6 ( ) ; } catch ( final java.lang.exception var_5 ) { type_5. error ( var_5. method_7 ( ), var_5 ) ; } } } method_8 ( var_1 ) ; method_9 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_3 var_2 = new type_3 ( ) ; type_4 var_3 = type_4 . method_4 ( getactivity ( ) ) ; var_4 = new type_5 ( var_2 , var_3 ) ; if ( ! ( type_2 . method_2 ( getactivity ( ) ) ) ) { type_2 . method_3 ( getactivity ( ) ) ; return ; } method_5 ( ) ; }
[0]: private void method_1 ( type_1 type, java.util.arraylist < type_2 > var_1 ) { switch ( type ) { case var_2 : date = var_1. get ( var_3 ). method_2 ( ) ; starttime = var_1. get ( var_3 ). method_3 ( ) ; endtime = var_1. get ( var_4 ). method_3 ( ) ; break ; case var_5 : date = var_1. get ( var_3 ). method_2 ( ) ; break ; default : break ; } }

************

************
tgt: public java.util.map < java.lang.integer , int [ ] > method_1 ( ) { java.util.map < java.lang.integer , int [ ] > var_1 = new java.util.hashmap < > ( ) ; int key = 0 ; for ( int x = 0 ; x < ( var_2 ) ; x ++ ) { for ( int y = 0 ; y < ( var_2 ) ; y ++ ) { var_1 . put ( key , new int [ ] { x , y } ) ; key ++ ; } } return var_1 ; }
[0]: public type_1 method_1 ( final java.lang.string var_1 ) throws type_2 { type_3. method_2 ( var_1, string_1 ) ; type_4 var_2 = var_3. get ( var_1 ) ; if ( var_2!= null ) { return var_2 ; } var_2 = var_4. method_3 ( var_1 ) ; if ( var_2!= null ) { method_4 ( var_5 < type_1 > method_5 ( var_2 ) ) ; return var_2 ; } var_2 = method_6 ( var_1 ) ; if ( var_2!= null ) { return var_2 ; } throw new type_2 ( ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_2 data ) { var_2 . method_2 ( data ) ; if ( ( var_3 ) != ( var_4 ) ) { var_5 . method_3 ( var_3 ) ; type_3 var_6 = var_5 . method_4 ( var_3 ) ; } method_6 ( ) ; }
[0]: private type_1 method_1 ( java.lang.string var_1 ) { return new type_1 ( type_2. method_2 ( ). tostring ( ), var_1, string_1, var_2, new java.util.date ( ). gettime ( ), new java.util.date ( ). gettime ( ), new java.util.date ( ). gettime ( ), var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( java.net.url var_1 , type_1 var_2 ) { this . var_3 . settext ( this . msg ) ; this . title . settext ( this . var_5 ) ; this . var_6 . method_2 ( ( event ) - > method_3 ( ) ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { this. path = var_1 ; this. var_2 = var_2 ; var_3 = new type_1 ( ) ; var_4 = new type_2 ( ) ; try { var_3. put ( string_1, var_2 ) ; var_5 = new type_2 ( ) ; var_3. put ( string_2, var_5 ) ; } catch ( type_3 var_6 ) { var_6. method_2 ( ) ; } var_4. put ( var_3 ) ; }

************

************
tgt: public void init ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) != null ) { return ; } type_3 var_3 = var_4 . method_1 ( var_5 ) ; try { var_1 . method_3 ( var_3 ) ; var_1 . method_4 ( var_6 ) ; var_1 . method_5 ( 0 ) ; } finally { var_2 = var_3 ; var_7 = true ; } }
[0]: public void update ( ) { super. update ( ) ; if ( method_1 ( ). var_1 ) return ; if ( method_2 ( 0 ) ) method_3 ( ) ; if ( method_2 ( 1 ) ) method_4 ( ) ; if ( method_2 ( int_1 ) ) method_5 ( ) ; }

************

************
tgt: private void method_1 ( int var_1 , java.lang.object ... var_2 ) { java.lang.string message = ( var_1 > 0 ) ? getstring ( var_1 , var_2 ) : null ; if ( var_3 ) { var_3 = false ; method_2 ( true ) ; } if ( ( var_4 ) != null ) { var_5 = false ; var_4 . method_3 ( ) ; var_4 . method_4 ( ) ; } method_5 ( var_6 , message ) ; method_6 ( ) ; }
[0]: public static void method_1 ( final java.util.list < type_1 > var_1, final type_2 var_2 ) throws type_3 { var_3. info ( string_1, var_1. size ( ), var_2 ) ; for ( final type_1 item : var_1 ) { final type_2 file = var_2. method_2 ( item. path ) ; if (! ( type_4. method_3 ( file ) ) ) { throw new type_3 ( ( ( string_2 + item ) + string_3 ) ) ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; type_3 . method_4 ( var_3 , string_1 ) ; android.content.intent intent = getintent ( ) ; java.lang.string var_4 = intent . method_5 ( string_2 ) ; var_5 . settext ( ( string_3 + var_4 ) ) ; method_6 ( var_4 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = var_2. method_2 ( int_1, int_2 ) ; method_3 ( var_1, var_3, var_4 ) ; final type_1 var_5 = var_2. method_2 ( int_3, int_4 ) ; method_3 ( var_5, var_6, var_7 ) ; final type_1 var_8 = var_2. method_2 ( int_4, 1 ) ; method_3 ( var_8, var_9, var_6 ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { return ; } var_1 = new type_1 ( getcontext ( ) ) ; var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( var_3 ) ; var_1 . method_4 ( method_5 ( ) ) ; final int var_4 = ( var_6 ) | ( var_7 ) ; final type_2 var_8 = new type_2 ( var_9 , var_9 , var_4 ) ; method_6 ( var_1 , var_8 ) ; }
[0]: public void method_1 ( type_1 out ) throws java.io.ioexception { out. method_2 ( this. var_1. size ( ) ) ; for ( type_2 var_2 : this. var_1 ) { out.write ( var_2. getid ( ) ) ; java.util.list < java.lang.integer > var_3 = var_2. method_3 ( ) ; out.write ( var_3. size ( ) ) ; for ( java.lang.integer var_4 : var_3 ) { out.write ( var_4 ) ; } } }

************

************
tgt: public void init ( ) { try { java.util.arraylist < java.util.arraylist < java.lang.string > > var_1 = new java.util.arraylist ( var_2 . method_1 ( string_1 ) ) ; if ( ( var_1 . get ( 0 ) . get ( 0 ) ) != null ) this . var_3 = java.lang.long.parselong ( var_1 . get ( 0 ) . get ( 0 ) ) ; } catch ( type_1 var_4 ) { var_4 . method_2 ( ) ; } }
[0]: public void method_1 ( int var_1, int var_2 ) { if ( ( var_3 )!= null ) { var_3. method_2 ( var_1, var_2 ) ; method_3 ( ) ; if ( ( var_4 )!= null ) var_4. method_4 ( var_1, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { int count = ( method_2 ( ) . method_3 ( ) ) - 1 ; int var_1 = var_2 . method_4 ( ) ; if ( count == 0 ) { super . method_1 ( ) ; } else { method_2 ( ) . method_5 ( ) ; } java.lang.string title = var_3 . get ( var_1 ) . method_6 ( ) ; method_7 ( title ) ; }
[0]: public int method_1 ( type_1 var_1 ) { int var_2 = var_3 ; int var_4 = var_5 ; int var_6 = var_7 ; int var_8 = var_9 ; return ( var_10 [ var_2 ] [ var_6 ] ) - ( var_10 [ var_4 ] [ var_8 ] ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( string_1 ) ) { if ( var_2 ) var_3 = string_2 ; else var_3 = string_3 ; } else if ( var_1 . method_2 ( string_4 ) ) { if ( var_2 ) var_4 = string_2 ; else var_4 = string_3 ; } else if ( var_1 . method_2 ( string_5 ) ) { if ( var_2 ) var_5 = string_2 ; else var_5 = string_3 ; } var_2 = true ; }
[0]: public void handle ( type_1 event ) { var_1. method_1 ( event. method_2 ( ), event. method_3 ( ) ) ; java.lang.system.out.println ( ( string_1 + ( var_1 ) ) ) ; if ( var_2 ) { var_3 = true ; java.lang.system.out.println ( string_2 ) ; } }

************

************
tgt: public static void method_1 ( type_1 < java.lang.integer , java.lang.integer > var_1 , java.util.list < type_2 < java.lang.integer > > var_2 ) { for ( type_2 < java.lang.integer > var_3 : var_2 ) { var_1 . method_2 ( var_1 . method_3 ( var_3 . method_4 ( ) ) ) ; } }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { for ( java.util.map.entry < java.lang.string, java.lang.string > var_2 : var_3. method_2 ( ) ) { if ( var_1. equals ( var_2. getvalue ( ) ) ) { return var_2. method_3 ( ) ; } } throw new type_1 ( ( string_1 + var_1 ) ) ; } }

************

************
tgt: private void method_1 ( android.view.view view ) { message = ( ( type_1 ) ( view . method_2 ( var_1 . message ) ) ) ; if ( ( var_2 ) != null ) { java.lang.string text = string_1 + ( var_2 . getname ( ) ) ; message . settext ( text ) ; } else { message . settext ( var_3 ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, type_1 var_4 ) throws type_2 { type_3 var_5 = new type_3 ( var_3, var_4 ) ; if (! ( var_6. isempty ( ) ) ) { var_6. method_2 ( ). method_3 ( var_5 ) ; } var_6. method_4 ( var_5 ) ; }

************

************
tgt: private void method_1 ( ) { type_1 b = type_3 . method_3 ( this ) ; if ( b == null ) return ; type_1 var_1 = type_2 . method_2 ( getcontext ( ) , b ) ; type_4 var_3 = new type_4 ( getcontext ( ) ) ; var_3 . method_4 ( var_1 ) ; var_4 = var_3 ; this . method_5 ( var_3 ) ; }
[0]: public type_1 < type_2 > method_1 ( type_3 var_1, type_4 var_2 ) { type_5 handle = new type_5 ( method_2 ( ) ) ; java.util.map < java.lang.string, java.lang.string > var_3 = new java.util.hashmap < > ( ) ; var_3. put ( string_1, var_4 ) ; var_3. put ( string_2, var_1. getid ( ) ) ; var_3. put ( string_3, var_2. getid ( ) ) ; method_3 ( var_3, var_5, handle ) ; return handle ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( this . var_2 ) == int_1 ) && ( ( this . height ) == int_1 ) ) { var_1 . method_2 ( var_3 ) ; var_1 . method_3 ( x , y , var_2 , height ) ; } else { var_1 . method_2 ( var_3 ) ; var_1 . method_3 ( x , y , var_2 , height ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1. method_3 ( ) ). method_4 ( type_2. method_5 ( int_1, int_2, int_3, int_4, int_2 ) ) ; java.util.date var_2 = type_2. method_6 ( int_1, int_2, int_3, int_4, int_5 ) ; java.util.date var_3 = var_4. method_7 ( new java.util.arraylist < type_3 > ( ), var_2 ) ; type_4. assertequals ( true, type_5. method_8 ( var_2, var_3 ) ) ; }

************

************
tgt: public static java.util.list < type_1 > method_1 ( java.util.list < type_2 > var_1 ) { int size = var_1 . size ( ) ; java.util.list < type_1 > result = new java.util.arraylist < > ( size ) ; if ( size == 0 ) { return result ; } for ( type_2 var_2 : var_1 ) { result . add ( type_3 . method_1 ( var_2 ) ) ; } return result ; }
[0]: private static java.lang.string method_1 ( type_1 var_1 ) { java.util.list < type_2 > var_2 = type_3. get ( var_1 ). list ( ) ; java.lang.string title = type_4. method_2 ( ) ; while (! ( type_4. method_3 ( title, var_2 ) ) ) { title = type_4. method_2 ( ) ; } return title ; }

************

************
tgt: public void method_1 ( type_1 p ) { type_1 output = new type_1 ( ) ; type_2 var_1 = p . method_2 ( ) ; if ( ( first ) == null ) { first = p . method_2 ( ) ; ( size ) ++ ; } else { while ( var_1 != null ) { type_1 temp = new type_1 ( this . method_2 ( ) ) ; temp . method_1 ( var_1 ) ; output . add ( temp ) ; var_1 = var_1 . method_3 ( ) ; } } }
[0]: protected java.lang.exception method_1 ( java.lang.void... params ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_3 = var_4 ; var_5 = var_6 ; java.lang.system.out.println ( var_3 ) ; java.lang.system.out.println ( var_5 ) ; try { method_2 ( true ) ; var_7 = var_1. method_3 ( var_2 ) ; } catch ( java.lang.exception var_8 ) { return var_8 ; } return null ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( var_1 == null ) return ; if ( var_2 == null ) return ; var_1 = var_1 . tolowercase ( ) ; type_1 var_3 = type_2 . get ( var_1 ) ; if ( var_3 != null ) { method_2 ( var_1 ) ; type_2 . put ( var_2 . tolowercase ( ) , var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = new type_2 ( getactivity ( ), var_3 ) ; method_2 ( string_1 ) ; method_3 ( var_2 ) ; method_4 ( false ) ; method_5 ( ). method_6 ( var_4, null, this ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { final type_1 < type_2 > var_1 = type_3 . method_2 ( ) ; method_3 ( var_1 ) ; type_4 . assertequals ( false , var_1 . method_4 ( var_2 , var_3 ) ) ; type_4 . assertequals ( true , var_1 . method_4 ( var_4 , var_5 ) ) ; type_4 . assertequals ( false , var_1 . method_4 ( var_4 , var_2 ) ) ; }
[0]: private int method_1 ( double var_1 ) { int var_2 = ( ( int ) ( java.lang.math.round ( ( ( method_2 ( ) ) * var_1 ) ) ) ) ; var_2 = ( var_2 < 0 )? var_3 : var_2 ; var_2 = ( var_2 > ( var_4 ) )? var_3 : var_2 ; if (! ( var_5 ) ) var_2 = ( var_2 == ( var_3 ) )? 0 : var_2 ; return var_2 ; }

************

************
tgt: public static void method_1 ( ) { var_1 = java.lang.string . method_2 ( var_2 . method_3 ( ) ) ; if ( var_1 . equals ( string_1 ) ) { var_1 = string_2 ; } var_3 = java.lang.string . method_2 ( var_4 . method_3 ( ) ) ; if ( var_3 . equals ( string_1 ) ) { var_3 = string_2 ; } }
[0]: private void select ( int index ) { assert index < int_1 ; if ( ( var_1 [ index ] ) == string_1 ) { var_2. method_1 ( new java.util.arraylist < type_1 > ( ) ) ; return ; } var_2. method_1 ( var_3 ) ; var_3. method_2 ( ) ; var_2. method_3 ( var_3 ) ; method_4 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { var_1 . method_2 ( var_4 ) ; type_3 . method_4 ( var_6 , string_2 ) ; type_3 . method_4 ( var_6 , ( ( ( ( ( string_3 + ( var_7 ) ) + string_4 ) + var_2 ) + string_5 ) + var_3 ) ) ; type_3 . method_4 ( var_6 , string_6 ) ; method_5 ( var_1 ) ; }
[0]: public static void method_1 ( ) { type_1. method_2 ( ) ; type_1. method_3 ( ) ; method_4 ( var_1, var_2, string_1, string_2 ) ; method_5 ( var_1, var_3, string_1 ) ; method_5 ( var_4, var_3, string_3 ) ; method_4 ( var_5, var_6, string_4 ) ; method_5 ( var_4, var_3, string_5 ) ; method_4 ( var_4, var_6, string_6 ) ; }

************

************
tgt: protected int method_1 ( int x , int var_1 ) { type_1 var_2 = this . method_2 ( ) ; if ( var_2 == null ) { return var_1 ; } else { switch ( var_2 ) { case var_5 : return ( this . var_6 ) + var_1 ; case var_7 : return ( this . var_6 ) + x ; case var_3 : return ( this . var_4 ) - var_1 ; case var_8 : return ( this . var_4 ) - x ; default : return var_1 ; } } }
[0]: private type_1 method_1 ( java.lang.string id ) { if ( string_1. method_2 ( id ) ) { return var_1. method_3 ( 0 ) ; } else if ( string_2. method_2 ( id ) ) { return var_1. method_4 ( ) ; } else if ( string_3. method_2 ( id ) ) { return var_1. method_4 ( ) ; } else { long var_2 = method_5 ( id ). method_6 ( ) ; return var_1. method_3 ( var_2 ) ; } }

************

************
tgt: private boolean method_1 ( java.util.list < type_1 > var_1 , java.util.list < type_1 > var_2 ) { return ( ( var_2 . size ( ) ) == 0 ) || ( ( ( var_1 . size ( ) ) < ( var_2 . size ( ) ) ) && ( ( var_1 . size ( ) ) != 0 ) ) ; }
[0]: private void init ( ) { var_1 = ( ( type_1 ) ( method_1 ( var_2. list ) ) ) ; var_1. method_2 ( new type_2 ( ) ) ; var_1. method_3 ( new type_3 ( type_4. method_4 ( int_1, int_2, int_3 ) ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { type_1 . method_2 ( type_2 . method_3 ( var_1 ) ) . method_4 ( var_2 ) . method_5 ( type_3 . method_6 ( var_3 class ) ) ; type_1 . method_4 ( var_1 . method_7 ( ) ) . method_8 ( true ) ; type_4 . assertthat ( string_1 , type_5 . method_9 ( var_4 ) . method_10 ( var_5 < type_6 > method_11 ( ) , null ) . method_12 ( var_2 ) , type_7 . method_13 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { final int index = var_2. method_2 ( ) ; final type_2 var_3 = var_4. get ( index ) ; final type_3 p = var_3. method_3 ( ) ; if ( index == ( - 1 ) ) { return ; } if ( ( type_4. method_4 ( var_5, ( string_1 + p ), string_2, var_6 ) ) == ( var_7 ) ) { var_4. remove ( index ) ; method_5 ( ) ; } }

************

************
tgt: private type_1 < ? , ? > method_1 ( java.lang.string var_1 , java.lang.string name ) { type_1 < ? , ? > var_2 = method_2 ( ( ( type_2 ) ( type_3 . method_3 ( string_1 , name ) ) ) , var_3 , string_3 ) ; var_2 . method_4 ( string_4 , var_1 ) ; var_2 . method_4 ( string_5 , true ) ; var_2 . method_4 ( string_6 , false ) ; return var_2 ; }
[0]: public type_1 method_1 ( ) { int var_1 = ( ( int ) ( java.lang.math.round ( ( ( ( var_2 ) + 1 ) * ( java.lang.math.random ( ) ) ) ) ) ) ; int var_3 = ( ( int ) ( java.lang.math.round ( ( ( ( var_4 ) + 1 ) * ( java.lang.math.random ( ) ) ) ) ) ) ; type_1 position = new type_1 ( var_1, var_3 ) ; return position ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . getactivity ( ) . method_2 ( ) ; var_1 . method_3 ( var_3 ) ; var_1 . method_3 ( var_4 ) ; var_1 . method_3 ( var_5 ) ; type_2 . method_4 ( var_6 , ( string_1 + var_7 ) ) ; var_8 . method_5 ( ) ; }
[0]: private void method_1 ( type_1 var_1, int rows, int var_2 ) { var_3 = new type_2 < java.lang.integer, type_3 > ( ) ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < var_2 ; j ++ ) { int x = ( i * rows ) + j ; var_3. put ( x, var_1. method_2 ( i, j ) ) ; } }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = null ; type_4 var_3 = this . method_2 ( var_1 ) ; if ( ! ( var_3 instanceof type_1 ) ) { this . method_3 ( ( string_1 + ( var_3 . method_4 ( ) ) ) ) ; } else { var_2 = ( ( type_1 ) ( var_3 ) ) ; } return var_2 ; }
[0]: public type_1 < byte [ ] > method_1 ( int var_1 ) throws java.io.ioexception { type_1 < byte [ ] > result = method_2 ( var_1 ) ; if ( ( var_2 )!= null ) { if (! ( var_3. isempty ( ) ) ) { byte [ ] var_4 = var_3. method_3 ( var_2 ) ; if ( var_4!= null ) { method_4 ( var_4 ) ; } } else { method_4 ( var_2 ) ; } } return result ; } }

************

************
tgt: public static type_1 method_1 ( android.content.context context ) { if ( context instanceof type_3 ) { var_2 = ( ( type_3 ) ( context ) ) ; } else { throw new type_4 ( ( ( context . tostring ( ) ) + string_1 ) ) ; } var_3 = context ; return var_5 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; if ( var_1 ) type_1. method_2 ( this ) ; type_2. method_3 ( new type_3 ( ). method_4 ( ). method_5 ( ). method_6 ( ). method_7 ( ). method_8 ( ). build ( ) ) ; type_2. method_9 ( new type_4 ( ). method_10 ( ). method_11 ( ). method_7 ( ). method_12 ( ). build ( ) ) ; }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string str = string_1 ; for ( int i = var_1 ; ( - 1 ) < ( var_1 ) ; i ++ ) { str += ( string_2 + i ) + string_3 ; str += var_2 [ i ] . tostring ( ) ; } return str ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { if ( ( ( var_2 )!= null ) && ( ( var_2. method_2 ( ) )!= null ) ) { var_3 = var_2. method_2 ( ) ; var_4. method_3 ( var_3. getid ( ) ) ; } else { var_3 = var_4. method_4 ( 0 ) ; } var_5. method_5 ( var_1 ) ; var_5. method_6 ( var_3. getid ( ) ) ; var_5. method_7 ( ) ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( type_2 type ) { if ( type == ( var_1 ) ) { return var_2 ; } if ( type == ( var_3 ) ) { return var_4 ; } if ( type == ( var_5 ) ) { return var_6 ; } if ( type == ( var_7 ) ) { return var_8 ; } return null ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1. startswith ( string_1 ) ) { return var_1 ; } java.lang.string var_2 = type_1. get ( var_1 ) ; if ( var_2 == null ) { var_2 = ( var_3 ) + var_1 ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( int answer ) { java.lang.system.out.println ( ( string_1 + answer ) ) ; if ( answer == ( var_1 ) ) { var_2 . settext ( string_3 ) ; if ( ( var_3 . method_2 ( ) ) == 0 ) var_3 . method_3 ( ) ; method_4 ( ) ; return true ; } return false ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 ; boolean status = false ; type_2 var_3 = null ; try { type_3 var_4 = new type_3 ( ) ; var_3 = var_4. method_2 ( ) ; var_2 = var_3. method_3 ( ) ; java.lang.string query = ( string_1 + var_1 ) + string_2 ; type_4 var_5 = var_2. method_4 ( query ) ; status = var_5. method_5 ( ) ; } catch ( type_5 var_6 ) { var_6. method_6 ( ) ; } return status ; } }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( string_1 , var_1 . method_4 ( ) ) ; var_2 . method_5 ( string_2 , method_6 ( var_1 . position ( ) ) ) ; var_2 . method_5 ( string_3 , method_6 ( var_1 . method_7 ( ) ) ) ; return var_2 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1. info ( string_1 ) ; type_2 var_1 = type_3. method_2 ( ) ; java.lang.long id = method_3 ( var_1 ) ; java.lang.thread. method_4 ( ) ; type_4 var_2 = type_4. get ( new type_5 ( ( ( ( var_3 ) + string_2 ) + id ) ) ). build ( ) ; type_6 < java.util.map > response = this. var_4. method_5 ( var_2, var_5 class ) ; assertequals ( var_6, response. method_6 ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.long var_1 , java.util.date var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 ) ; if ( ( var_3 == null ) || ( var_2 == null ) ) { throw new type_2 ( ) ; } var_3 . method_3 ( var_2 ) ; try { var_4 . method_4 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { throw new type_2 ( var_5 ) ; } }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( var_1 == null ) return false ; if (! ( var_1 instanceof type_1 ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; if ( ( var_3. equals ( this. name ) ) && ( this. var_4. equals ( var_5 ) ) ) return true ; return false ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 , java.util.hashmap < java.lang.string , java.lang.string > values ) throws java.lang.exception { if ( var_1 == null ) throw new java.lang.exception ( string_1 ) ; java.lang.string var_2 = method_2 ( values ) ; int var_3 = ( ( int ) ( this . method_3 ( ( ( ( ( string_2 + var_1 ) + string_3 ) + var_2 ) + string_4 ) , true ) ) ) ; }
[0]: public void method_1 ( android.view.view view ) { if ( var_1 ) { var_2. method_2 ( var_3. getid ( ) ). method_3 ( ) ; method_4 ( var_4 ) ; } else { var_2. method_2 ( var_3. getid ( ) ). setvalue ( var_3 ) ; method_5 ( var_4 ) ; } }

************

************
tgt: public static boolean method_1 ( java.io.file file , java.lang.string var_1 ) throws type_1 { try { type_2 var_2 = new type_2 ( ) ; return var_2 . method_1 ( file , var_1 ) ; } catch ( java.io.ioexception var_3 ) { type_3 . method_2 ( file , var_3 ) ; } catch ( type_4 var_3 ) { type_3 . method_3 ( var_3 ) ; } catch ( type_5 var_3 ) { type_3 . method_4 ( file , var_3 ) ; } return false ; }
[0]: public void method_1 ( ) throws java.lang.throwable { java.util.list < java.lang.string > list = new java.util.arraylist < java.lang.string > ( ) ; list. add ( string_1 ) ; java.util.collection < java.lang.string > var_1 = type_1. method_2 ( list ) ; type_2. assertnotnull ( var_1 ) ; for ( java.lang.string line : var_1 ) java.lang.system.err.println ( line ) ; type_2. assertequals ( int_1, var_1. size ( ) ) ; } }

************

************
tgt: public void remove ( ) throws java.lang.exception { method_1 ( set . remove ( int_1 ) ) ; method_1 ( set . remove ( int_1 ) ) ; asserttrue ( set . add ( int_1 ) ) ; method_1 ( set . add ( int_1 ) ) ; asserttrue ( set . remove ( int_1 ) ) ; method_1 ( set . remove ( int_1 ) ) ; asserttrue ( set . isempty ( ) ) ; }
[0]: public static double [ ] method_1 ( int count, double var_1 ) { double [ ] result = new double [ count ] ; double var_2 = 0 ; for ( int i = 0 ; i < count ; i ++ ) { var_2 = ( ( - 1 ) * var_1 ) * ( type_1. method_2 ( ( 1 - ( java.lang.math.random ( ) ) ) ) ) ; result [ i ] = var_2 ; } return result ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.map < type_1 , java.lang.integer > var_1 = new java.util.hashmap < type_1 , java.lang.integer > ( ) ; var_1 . put ( new type_1 ( 1 ) , 1 ) ; var_1 . put ( new type_1 ( int_1 ) , int_2 ) ; type_2 var_2 = new type_2 ( var_1 ) ; java.lang.system.out.println ( var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) { var_2. method_2 ( var_1 ) ; } else { android.content.intent intent = new android.content.intent ( this, var_3 class ) ; intent. method_3 ( var_4, var_1 ) ; method_4 ( intent ) ; } }

************

************
tgt: protected void method_1 ( ) { boolean var_2 = var_3 . getboolean ( string_1 , true ) ; if ( var_2 ) { var_4 . show ( var_5 ) ; } if ( ( var_6 ) != null ) { var_6 . method_2 ( var_7 , int_1 ) ; } }
[0]: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; type_2 var_2 = new type_2 ( string_2 ) ; var_1. add ( var_2 ) ; var_2. method_2 ( ( var_3 ) - > { new type_3 ( string_3 ) ; } ) ; return var_1 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string value ) { switch ( var_2 ) { case var_3 : var_1 . method_2 ( value ) ; break ; case var_5 : var_1 . method_4 ( value ) ; break ; case var_6 : var_1 . method_5 ( value ) ; break ; case var_7 : var_1 . method_6 ( value ) ; break ; case var_8 : var_1 . method_7 ( value ) ; break ; } }
[0]: protected static java.lang.string method_1 ( byte [ ] buffer ) { int i = 0 ; while ( ( i < ( buffer. length ) ) && (! ( type_1. method_2 ( buffer, ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.string ( buffer, 0, i ) ; }

************

************
tgt: public void method_1 ( type_1 event , float x , float y , int var_1 , int var_2 ) { var_3 . method_2 ( ( ( var_3 . method_3 ( ) ) - int_1 ) , var_3 . method_4 ( ) , ( ( var_3 . method_5 ( ) ) + int_1 ) , ( ( var_3 . method_6 ( ) ) + int_1 ) ) ; var_4 = new type_2 ( var_5 ) ; var_5 . method_7 ( var_4 ) ; var_6 . method_8 ( ) ; }
[0]: private void method_1 ( ) { var_1 = 0 ; type_1. i ( string_1, string_2 ) ; method_2 ( var_2 ) ; var_3 = ( ( android.widget.button ) ( method_3 ( var_4 ) ) ) ; var_3. method_4 ( new type_2 ( ) { public void method_5 ( android.view.view view ) { method_1 ( ) ; } } ) ; type_3 var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_5. method_6 ( ) ; var_5. method_7 ( var_7 ) ; method_8 ( ) ; }

************

************
tgt: private type_1 method_1 ( byte [ ] message ) throws type_2 { type_1 var_1 = null ; switch ( format ) { case var_2 : var_1 = type_3 . method_2 ( message , string_1 , var_3 ) ; break ; case var_4 : var_1 = type_3 . method_2 ( message , "\t" , var_3 ) ; break ; case var_5 : var_1 = type_3 . method_3 ( message , var_3 ) ; break ; case var_6 : var_1 = type_3 . method_4 ( message ) ; break ; case var_7 : break ; } return var_1 ; }
[0]: private void method_1 ( int var_1 ) { if ( var_1 == int_1 ) { ( var_2 ) ++ ; } else { ( var_3 ) ++ ; } var_4 = true ; var_5 = 0 ; var_6 = 0 ; var_7 = 0 ; var_8 = 0 ; var_9 = 0 ; var_10 = 0 ; var_11 = var_1 ; var_12 = 0 ; }

************

************
tgt: public void method_1 ( ) { boolean var_1 = true ; while ( var_1 ) { for ( int var_3 = 0 ; var_3 < ( var_4 . length ) ; var_3 ++ ) { if ( var_3 == ( var_5 ) ) { java.lang.system.out.println ( string_1 ) ; method_2 ( ) ; } else { java.lang.system.out.println ( string_2 ) ; method_3 ( ) ; } } var_1 = false ; } }
[0]: public void method_1 ( java.lang.string name ) throws type_1 { var_1 = var_2. method_2 ( ) ; type_2 var_3 = var_1. method_3 ( string_1 ) ; var_3. method_4 ( 1, name ) ; var_3. method_5 ( ) ; var_1. method_6 ( ) ; method_7 ( name ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_4 ) var_6 . method_7 ( ) ; var_2 . method_2 ( ) ; var_2 = null ; info . method_3 ( ) ; if ( ( var_1 . getid ( ) ) == ( var_3 ) ) { method_4 ( var_4 ) ; } else if ( ( var_1 . getid ( ) ) == ( var_5 ) ) { var_6 . method_5 ( ) ; var_7 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { type_1 node = type_2. method_2 ( var_1 class ) ; type_3 var_2 = type_2. method_2 ( var_3 class ) ; type_2. method_3 ( node. method_4 ( ) ). method_5 ( var_2 ) ; type_2. method_3 ( var_2. getname ( ) ). method_5 ( string_1 ) ; java.util.list < type_4 > var_4 = type_5. method_6 ( node, type_6. method_7 ( ), false, false ) ; type_7. asserttrue ( var_4. isempty ( ) ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { if ( ( this . id ) == ( var_1 . id ) ) { if ( ( var_3 ) == ( this . var_2 ) ) { return 0 ; } else if ( ( this . var_2 ) < ( var_3 ) ) { return - 1 ; } else { return 1 ; } } else if ( ( this . id ) < ( var_1 . id ) ) { return - 1 ; } else { return 1 ; } }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string value ; switch ( var_1 ) { case string_1 : value = type_1. method_2 ( ). method_3 ( ) ; break ; case string_2 : value = string_3 ; break ; default : value = type_2. method_1 ( var_1 ) ; } var_2. method_4 ( string_4, var_1, value ) ; return value ; }

************

************
tgt: private int method_1 ( java.lang.string event ) { if ( event . split ( string_1 ) [ 0 ] . equals ( string_2 ) ) return method_2 ( event ) ; else if ( event . split ( string_1 ) [ 0 ] . equals ( string_3 ) ) return method_3 ( event ) ; else { return - 1 ; } }
[0]: protected boolean method_1 ( java.lang.string var_1, boolean var_2, boolean var_3 ) { if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) return false ; if ( var_4 ) { var_5 = method_2 ( var_1, var_2, var_3 ) ; var_4 = false ; } boolean var_6 = var_5. method_1 ( ) ; if ( var_6 ) { var_7. method_3 ( var_5. start ( ) ) ; var_7. method_4 ( var_5. end ( ) ) ; } return var_6 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { var_2 *= var_1 . method_2 ( ) ; var_2 = type_2 . method_3 ( float_1 , type_2 . min ( var_2 , float_2 ) ) ; type_3 . i ( var_3 , ( string_1 + ( var_2 ) ) ) ; return true ; }
[0]: public void method_1 ( int var_1, int height ) { var_2 = ( ( var_3 ) / height ) * var_1 ; var_4. update ( ) ; var_5 = var_6 ; var_7 = ( ( var_8 ) / ( ( float ) ( height ) ) ) * ( ( float ) ( var_1 ) ) ; var_9. set ( ( ( var_5 ) / int_1 ), ( ( var_7 ) / int_1 ), 0 ) ; var_10. update ( ) ; }

************

************
tgt: protected type_1 method_1 ( type_2 [ ] var_1 ) { if ( ( var_2 ) >= ( var_3 ) ) { if ( var_1 != null ) { java.util.arraylist < type_2 > var_5 = method_4 ( new java.util.arraylist ( java.util.arrays.aslist ( var_1 ) ) ) ; var_1 = new type_2 [ var_5 . size ( ) ] ; var_5 . method_5 ( var_1 ) ; return type_3 . method_6 ( this , var_1 ) . method_7 ( ) ; } } return null ; }
[0]: public void method_1 ( android.view.view view, type_1 var_1 ) { var_2 = ( ( type_2 ) ( view. method_2 ( var_3 ) ) ) ; var_4 = new type_3 ( ) ; var_2. method_3 ( var_4 ) ; var_2. method_4 ( 1 ) ; var_5 = ( ( type_4 ) ( view. method_2 ( var_6 ) ) ) ; var_5. method_5 ( int_1 ) ; var_5. method_6 ( var_2 ) ; var_5. method_7 ( var_7 ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final type_2 var_2 ) throws java.lang.exception , type_3 { method_2 ( var_2 ) ; if ( ( var_2 . gettype ( ) ) == ( var_3 ) ) { method_3 ( var_1 , true , 1 , false , string_1 ) ; } else { method_3 ( var_1 , true , ( - int_1 ) , true , string_2 ) ; } }
[0]: public synchronized void method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; try { java.lang.thread. method_2 ( ( int_1 + ( var_1. method_3 ( int_2 ) ) ) ) ; } catch ( type_1 var_2 ) { return ; } if ( var_3. isempty ( ) ) var_4 = - 1 ; else { java.lang.system.out.print ( ( string_1 + ( var_3. method_4 ( ) ) ) ) ; java.lang.system.out.println ( ) ; var_4 = var_3. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; method_2 ( var_1 ) ; type_2 var_2 = new type_3 ( ) ; type_4 var_3 = new type_4 ( var_2 , var_1 , string_1 , string_2 ) ; int var_4 = var_3 . method_3 ( var_1 , true , 0 ) ; type_5 . assertequals ( 0 , var_4 ) ; }
[0]: public double method_1 ( ) { double temp = method_2 ( ) ; double diff = 0.0 ; do { double var_1 = method_2 ( ) ; diff = java.lang.math.abs ( ( var_1 - temp ) ) ; temp = var_1 ; java.lang.system.out.println ( ( string_1 + diff ) ) ; } while ( diff > float_1 ) ; return temp ; } while ( ( diff > float_1 ) && ( temp - 1 ) ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; int i = 0 ; while ( ( var_2 == false ) && ( i < ( var_3 . length ) ) ) { if ( var_3 [ i ] . method_2 ( var_1 ) ) { var_2 = true ; } i ++ ; } return var_2 ; }
[0]: public int method_1 ( int size ) throws java.io.ioexception { byte [ ] temp = new byte [ type_1. min ( var_1, size ) ] ; int var_2 = 0 ; while ( var_2!= size ) { int var_3 = this. method_2 ( temp, ( size - var_2 ) ) ; if ( var_3 == ( - 1 ) ) { return var_2 ; } else { var_2 += var_3 ; } } return var_2 ; }

************

************
tgt: private boolean method_1 ( type_1 commit ) throws java.io.ioexception { try ( type_2 var_1 = type_1 . method_2 ( var_2 . method_3 ( ) ) ) { var_1 . method_4 ( ) ; var_1 . method_5 ( commit ) ; for ( type_3 var_3 : var_4 ) { if ( var_1 . method_6 ( var_1 . method_7 ( commit ) , var_1 . method_7 ( var_3 ) ) ) { return true ; } } } return false ; }
[0]: public static type_1 method_1 ( ) throws type_2, type_3 { try { final java.lang.string var_1 = type_4. method_2 ( type_5, 0l ) ; return new type_1 ( var_1, type_6. method_3 ( string_1 ) ) ; } catch ( type_7 var_2 ) { throw new type_2 ( string_2, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { try { java.lang.thread . method_2 ( ( 1 * int_2 ) ) ; var_1 . method_3 ( ) ; var_2 . info ( string_1 ) ; java.lang.thread . method_2 ( ( 1 * int_2 ) ) ; var_3 . method_3 ( ) ; var_2 . info ( string_2 ) ; } catch ( type_1 var_4 ) { var_4 . method_4 ( ) ; } }
[0]: private void method_1 ( ) { type_1. method_2 ( ). method_1 ( ( this. var_1 = new type_2 ( this ) ), this ) ; type_1. method_2 ( ). method_1 ( new type_3 ( ), this ) ; type_1. method_2 ( ). method_1 ( new type_4 ( this ), this ) ; type_1. method_2 ( ). method_1 ( new type_5 ( this ), this ) ; type_1. method_2 ( ). method_1 ( new type_6 ( ), this ) ; }

************

************
tgt: type_1 method_1 ( ) throws java.io.ioexception { java.util.properties var_1 = method_2 ( var_2 ) ; java.io.file var_3 = type_2 . get ( var_1 . method_3 ( string_1 ) ) . method_4 ( ) ; try ( java.io.inputstream var_4 = new java.io.fileinputstream ( var_3 ) ) { return type_1 . method_5 ( var_4 ) ; } }
[0]: public void method_1 ( type_1 var_1, android.view.view var_2, type_2 var_3 ) { super. method_1 ( var_1, var_2, var_3 ) ; var_1. method_2 ( ) ; var_1. add ( 0, var_4, 0, var_5 ) ; var_1. add ( 0, var_6, 1, var_7 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 writer = null ; try { writer = new type_3 ( var_1 , string_1 ) ; method_1 ( writer ) ; } catch ( java.lang.exception var_2 ) { var_3 . error ( ( string_2 + ( this ) ) , var_2 ) ; } finally { if ( writer != null ) { try { writer . method_2 ( ) ; } catch ( java.lang.throwable var_2 ) { } } } }
[0]: public static java.lang.string method_1 ( ) { if ( ( var_1 ) == null ) type_1. method_2 ( ) ; int i = ( ( int ) ( ( ( java.lang.math.random ( ) ) * int_1 ) % ( ( var_1. size ( ) ) - 1 ) ) ) ; if ( ( var_1. size ( ) ) > 0 ) return var_1. get ( i ) ; else return null ; }

************

************
tgt: protected void method_1 ( ) { new type_1 ( var_1 , var_2 , var_3 , var_4 ) . method_1 ( ) ; var_5 = new type_2 ( ) ; java.util.list < type_3 > var_6 = ( ( var_7 ) != null ) ? var_7 . method_2 ( ) : var_8 ; var_6 = ( var_6 != null ) ? var_6 : var_8 ; var_5 . init ( var_6 , var_7 ) ; var_9 . method_3 ( ) ; var_9 . add ( var_5 ) ; }
[0]: private type_1 method_1 ( int index ) { type_1 [ ] var_1 = type_1. values ( ) ; int var_2 = var_1. length ; int var_3 = ( index > var_2 )? index - var_2 : index ; return var_1 [ ( var_3 - 1 ) ] ; }

************

************
tgt: public void method_1 ( int [ ] var_1 ) { type_1 . method_2 ( var_1 ) ; for ( int i = ( var_1 . length ) - 1 ; i >= 0 ; i -- ) { rows . remove ( var_1 [ i ] ) ; } type_2 . method_3 ( ) ; }
[0]: public int method_1 ( android.content.intent intent, int var_1, int var_2 ) { type_1. i ( string_1, ( ( ( string_2 + var_2 ) + string_3 ) + intent ) ) ; var_3 = true ; android.content.intent target = intent. method_2 ( string_4 ) ; method_3 ( target ) ; return var_4 ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string var_3 = "false" ; try { var_4 = type_1 . method_2 ( type_2 . method_3 ( var_1 ) ) ; var_3 = var_4 . method_4 ( var_2 ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_5 ( ) ; var_3 = "false" ; } var_6 . info ( ( string_2 + var_3 ) ) ; return var_3 ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.arraylist var_2 = method_2 ( var_3, var_1 ) ; while ( var_2. iterator ( ). method_3 ( ) ) { var_1. method_4 ( ( ( type_1 ) ( var_2. iterator ( ). method_5 ( ) ) ) ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { int var_2 = type_1 . method_2 ( string_1 ) ; if ( var_2 == ( - 1 ) ) { var_2 = type_1 . method_2 ( string_2 ) ; } if ( var_2 == ( - 1 ) ) { var_2 = 0 ; } java.lang.string output = var_1 + ( type_1 . substring ( var_2 ) ) ; return ( output . substring ( 0 , ( ( output . length ( ) ) - int_1 ) ) ) + string_3 ; }
[0]: private static java.lang.string method_1 ( java.lang.string [ ] set, java.lang.string var_1, int start ) { java.lang.string var_2 = set [ start ] ; int i = 0 ; for ( java.lang.string var_3 : set ) { if ( i > start ) var_2 = ( ( ( var_2 + string_1 ) + var_1 ) + string_1 ) + var_3 ; i ++ ; } return var_2 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . method_2 ( this ) ; java.lang.string key = var_1 . method_3 ( ) ; method_5 ( var_1 , type_3 . method_6 ( var_1 . getcontext ( ) ) . getstring ( key , getstring ( var_2 ) ) ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) == false ) { type_1. i ( var_2, string_1 ) ; method_2 ( ) ; method_3 ( ) ; var_1 = true ; } else { type_1. i ( var_2, string_2 ) ; if ( var_3 ) { type_1. method_4 ( var_2, string_3 ) ; } else { type_1. i ( var_2, string_4 ) ; var_3 = true ; var_4 = new java.util.arraylist < > ( ) ; method_5 ( ) ; method_6 ( ) ; } } } }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { final java.lang.string var_2 = method_2 ( method_3 ( var_1 ) ) ; if ( var_2 != null ) { final java.io.file var_3 = method_4 ( var_1 , var_2 ) ; if ( var_3 != null ) { var_3 . method_5 ( ) ; var_4 . method_6 ( var_3 . method_7 ( ) ) ; } } }
[0]: private long method_1 ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == int_1 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( var_1. method_2 ( k ) ) * ( method_1 ( ( n - k ) ) ) ; } return sum / n ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) { var_4 . setenabled ( true ) ; type_1 var_5 = type_3 . method_3 ( var_1 , int_1 , int_1 ) ; var_6 . method_4 ( var_5 ) ; this . var_2 = var_2 ; var_6 . method_5 ( var_7 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { java.lang.string var_3 = var_4. method_2 ( ). tostring ( ) ; var_5 = var_6. method_2 ( ). tostring ( ) ; java.lang.string var_7 = method_3 ( ) ; method_4 ( var_3, var_7 ) ; var_6. method_5 ( var_5 ) ; var_2 = true ; }

************

************
tgt: private synchronized boolean method_1 ( int line ) { type_1 var_1 = var_2 . get ( line ) ; if ( var_1 == null ) { return true ; } if ( ( var_1 . method_2 ( ) ) > ( var_1 . method_3 ( ) ) ) { var_2 . remove ( line ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( var_2, var_3 ) ) { c. method_3 ( ) ; var_4 = false ; var_5 = false ; var_6 = false ; var_7 = false ; type_1. method_4 ( var_8, java.lang.double. method_5 ( time. gettext ( ) ) ) ; this. add ( var_9 ) ; var_9. method_6 ( ) ; var_9. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 type_2 ; if ( ( var_1 ) == 1 ) { type_2 = new type_1 ( string_2 ) ; type_2 . method_2 ( var_4 ) ; var_3 . method_3 ( ) ; var_3 . method_4 ( type_2 ) ; } else { type_2 = new type_1 ( string_1 ) ; type_2 . method_2 ( var_2 ) ; var_3 . method_3 ( ) ; var_3 . method_4 ( type_2 ) ; } var_3 . method_5 ( ) ; var_3 . method_6 ( ) ; }
[0]: private java.lang.string method_1 ( final java.lang.string var_1 ) { java.lang.string var_2 = null ; java.lang.string var_3 = null ; final java.lang.string var_4 = method_2 ( var_1 ) ; if ( var_4!= null ) { var_3 = method_2 ( var_1 ) ; if ( ( var_3. method_3 ( var_5 ) )!= ( - 1 ) ) { var_2 = var_3. substring ( ( ( var_3. method_3 ( var_5 ) ) + 1 ) ) ; } else { var_2 = var_3 ; } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_3 ( string_1 ) ; var_2 = new type_3 ( getactivity ( ) , null , 0 ) ; method_4 ( var_2 ) ; getactivity ( ) . method_5 ( ) . method_6 ( var_3 , null , this ) ; }
[0]: public void method_1 ( java.lang.string var_1, type_1... var_2 ) { java.util.set < type_1 > var_3 = new java.util.hashset ( java.util.arrays.aslist ( var_2 ) ) ; var_4 = new type_2 ( var_1, var_3 ) ; var_4. method_2 ( this : : method_3 ) ; var_4. method_4 ( ) ; }

************

************
tgt: private boolean method_1 ( ) { if ( ! ( var_1 . method_2 ( var_2 . method_3 ( 0 ) ) ) ) { return method_4 ( var_2 . method_3 ( int_1 ) ) ; } else { type_1 type = var_1 . method_5 ( var_2 . method_3 ( 0 ) ) . gettype ( ) ; return method_6 ( var_2 . method_3 ( int_1 ) ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.lang.object var_3, type_3 var_4 ) throws java.lang.exception { var_4. method_2 ( string_1, type_4. method_3 ( ). method_4 ( ) ) ; java.lang.system.out.println ( ( string_2 + ( type_4. method_4 ( ) ) ) ) ; }

************

************
tgt: long method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; try { long index = var_3 . method_3 ( var_1 , 0 ) ; if ( var_2 . method_4 ( index ) ) { assert ( var_4 . method_5 ( ) ) > 0 ; return ( var_4 . method_6 ( var_2 ) ) + 1 ; } else { return - 1 ; } } catch ( type_2 var_5 ) { throw new type_3 ( var_5 ) ; } finally { var_2 . method_7 ( ) ; } }
[0]: protected java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( var_1. getname ( ) ) ; java.lang.string var_3 = message ; for ( type_4 var_4 : var_5 ) { if ( var_4. method_3 ( ) ) { var_3 = var_4. method_4 ( var_2, message, var_1 ) ; } } return var_3 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( ( ! ( method_2 ( ) ) ) || ( ! ( var_1 . method_2 ( ) ) ) ) { return new type_2 ( ) ; } return new type_2 ( ( ( value ) * ( ( ( type_2 ) ( var_1 ) ) . getvalue ( ) ) ) ) ; }
[0]: public static java.lang.string method_1 ( android.content.context context, java.lang.string filename ) { java.lang.string var_1 = null ; try { java.io.inputstream var_2 = context. method_2 ( ). open ( filename ) ; int size = var_2. method_3 ( ) ; byte [ ] buffer = new byte [ size ] ; var_2. method_4 ( buffer ) ; var_2. method_5 ( ) ; var_1 = new java.lang.string ( buffer, string_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_6 ( ) ; return null ; } return var_1 ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 , type_2 var_2 ) { boolean result = false ; if ( ( var_2 == null ) || ( ( var_2 != null ) && ( var_2 . equals ( var_1 . method_3 ( ) ) ) ) ) { result = true ; } return result ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; var_2. method_3 ( string_1, string_2 ) ; method_4 ( var_2 ) ; var_3 += var_4 ; var_5. method_5 ( var_6 ) ; var_1. method_6 ( ) ; var_1. method_7 ( ) ; var_1 = null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_1 . method_2 ( ) . method_3 ( ) . startswith ( var_3 ) ) { type_3 . info ( string_1 , var_1 . getid ( ) , var_2 ) ; try { var_4 . remove ( var_1 ) ; var_1 . method_1 ( ) ; } catch ( java.io.ioexception var_5 ) { type_3 . method_4 ( string_2 , var_1 . getid ( ) ) ; } } else { var_6 = false ; } }
[0]: private static int method_1 ( int var_1, java.lang.integer var_2 ) { if ( ( type_1. method_2 ( var_2 ) ) || ( 0 <= var_2 ) ) { if ( var_1 > int_1 ) { return int_2 ; } else if ( var_1 > int_3 ) { return int_4 ; } else { return int_5 ; } } return var_2 ; }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 ) { type_1 var_2 ; type_1 var_3 ; type_1 var_4 ; var_2 = null ; var_3 = var_1 ; while ( var_3 != null ) { var_4 = var_5 ; var_5 = var_2 ; var_2 = var_3 ; var_3 = var_4 ; } var_1 = var_2 ; return var_1 ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2, int var_3, int var_4, byte [ ] var_5, byte [ ] var_6 ) throws type_2 { var_1. method_2 ( var_7 ) ; var_1. method_3 ( 1, var_3 ) ; var_1. method_3 ( int_1, var_4 ) ; var_1. method_4 ( int_2, var_2 ) ; var_1. method_5 ( int_3, var_5 ) ; var_1. method_5 ( int_4, var_6 ) ; var_1. method_6 ( ) ; }

************

************
tgt: private java.util.date method_1 ( java.lang.string value ) { try { if ( ! ( type_1 . isempty ( value ) ) ) { java.util.date time = new java.util.date ( java.lang.long.parselong ( value ) ) ; return time ; } } catch ( type_2 var_1 ) { type_3 . method_2 ( string_1 , value ) ; } return null ; }
[0]: public int method_1 ( int var_1 ) { var_1 = type_1. method_2 ( ( var_1 + int_1 ), int_2 ) ; int var_2 = type_1. method_2 ( ( var_1 - ( var_3 ) ), int_2 ) ; if ( var_2 == 0 ) { return type_1. method_2 ( ( 1 + ( var_3 ) ), int_2 ) ; } else if ( var_2 == 1 ) { return type_1. method_2 ( var_3, int_2 ) ; } else { var_4. remove ( this ) ; return - 1 ; } }

************

************
tgt: public void method_1 ( ) { try { var_1 = new java.io.bufferedreader ( new type_1 ( var_2 . method_2 ( ) ) ) ; java.lang.string response ; while ( ( response = var_1 . method_3 ( ) ) != null ) { java.lang.system.out.println ( response ) ; } } catch ( java.io.ioexception var_3 ) { var_3 . method_4 ( ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( ). method_3 ( ) ; java.lang.object p = var_3. iterator ( ). method_4 ( ) ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { java.lang.object a = var_1. method_5 ( i ) ; p = var_4. get ( p, a ). iterator ( ). method_4 ( ) ; } return var_5. contains ( p ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.object var_2 ) { if ( var_3 . method_2 ( ) ) { var_5 . setenabled ( true ) ; method_3 ( ) ; } else { if ( ( var_6 ) != null ) var_6 . method_4 ( ) ; var_5 . setenabled ( false ) ; } return true ; }
[0]: public void method_1 ( ) { this. var_1 = type_1. getint ( string_1, type_2. getcolor ( method_2 ( ), var_2 ) ) ; this. var_3 = type_1. getint ( string_2, type_2. getcolor ( method_2 ( ), var_4 ) ) ; var_5 = type_1. getboolean ( string_3, false ) ; var_6 = type_1. getboolean ( string_4, false ) ; var_7 = type_1. getboolean ( string_5, true ) ; var_8 = type_1. getboolean ( string_6, false ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { int var_3 = method_2 ( var_1 ) ; int var_4 = method_2 ( var_2 ) ; if ( var_3 == var_4 ) { return ; } int var_5 = size [ var_3 ] ; int var_6 = size [ var_4 ] ; if ( var_5 > var_6 ) { id [ var_4 ] = var_3 ; size [ var_3 ] = var_5 + var_6 ; } else { id [ var_3 ] = var_4 ; size [ var_4 ] = var_5 + var_6 ; } }
[0]: protected void method_1 ( float var_1 ) { if (! ( type_1. method_2 ( var_2, var_3 ) ) ) { var_4. remove ( var_3 ) ; method_3 ( var_5, var_6 ) ; return ; } if (! ( var_6. method_4 ( ). equals ( var_5. method_5 ( ) ) ) ) { var_6. method_6 ( var_5. method_5 ( ) ) ; } }

************

************
tgt: public boolean remove ( int index ) { if ( ( index < 1 ) || ( index > ( size ( ) ) ) ) return false ; type_1 var_1 = var_2 ; for ( int i = 1 ; i < index ; i ++ ) { if ( ( var_1 . method_1 ( ) ) == null ) { return false ; } var_1 = var_1 . method_1 ( ) ; } var_1 . method_2 ( var_1 . method_1 ( ) . method_1 ( ) ) ; ( count ) -- ; return true ; }
[0]: public boolean method_1 ( type_1 var_1 ) { return ( ( ( this. method_2 ( ). equals ( var_1. method_2 ( ) ) ) && ( this. method_3 ( ). equals ( var_1. method_3 ( ) ) ) ) && ( ( this. method_4 ( ) ) == ( var_1. method_4 ( ) ) ) ) && ( ( this. method_5 ( ) ) == ( var_1. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { java.lang.string filename = this . var_1 . method_2 ( ) ; if ( ( filename == null ) || ( filename . isempty ( ) ) ) { method_3 ( type_2 . error ( ) , true , true ) ; var_2 . method_4 ( string_1 , string_2 ) ; return ; } if ( this . var_3 . getvalue ( ) ) { var_4 . method_5 ( var_5 ) ; } else { var_4 . method_5 ( var_6 ) ; } this . var_4 . method_6 ( ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( var_1 == null ) { return - 1 ; } if ( var_2 == null ) { return 1 ; } for ( java.lang.string var_3 : var_4 ) { if ( ( var_1. method_2 ( ) ) == var_3 ) { return - 1 ; } if ( ( var_2. method_2 ( ) ) == var_3 ) { return 1 ; } } return 0 ; } }

************

************
tgt: public void method_1 ( type_1 msg ) { type_2 var_1 = var_2 . get ( ) ; if ( ( var_1 != null ) && ( ( var_3 . method_2 ( ) ) != null ) ) { if ( var_3 . method_2 ( ) . method_3 ( ) ) { type_3 . method_4 ( var_4 , string_1 ) ; return ; } type_3 . method_4 ( var_4 , string_3 ) ; var_1 . method_6 ( ) ; } }
[0]: private java.lang.object method_1 ( type_1 var_1 ) throws java.io.ioexception { final java.util.collection array = new java.util.arraylist ( ) ; while ( true ) { method_2 ( ) ; final java.lang.object var_2 = method_3 ( var_1 ) ; if ( var_2!= ( var_3 ) ) { array. add ( var_2 ) ; } final int c = method_4 ( ) ; if ( c == char_1 ) { break ; } else if ( c!= char_2 ) { type_2. error ( string_1 ) ; } } return array. method_5 ( ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int k = 0 ; for ( type_1 var_2 : var_1 . method_2 ( string_1 ) . method_2 ( var_3 ) . method_3 ( ) ) { if ( k == 0 ) { type_2 c = var_2 . getvalue ( var_6 class ) ; java.lang.string var_7 = c . getname ( ) ; java.lang.string var_8 = var_9 . method_4 ( ) . method_5 ( ) ; var_4 . settext ( var_7 ) ; var_5 . settext ( var_8 ) ; k ++ ; } } }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { type_1. i ( string_1, string_2 ) ; java.lang.string var_1 = intent. method_2 ( ) ; if ( var_1. equals ( var_2 ) ) { type_1. i ( string_1, string_3 ) ; method_3 ( ) ; } else { type_1. i ( string_1, string_4 ) ; method_4 ( ) ; } }

************

************
tgt: public int method_1 ( java.lang.string str ) { if ( null == str ) { str = string_1 ; } long var_1 = method_2 ( str . trim ( ) ) ; if ( var_1 > ( var_2 ) ) { var_1 = var_2 ; } else if ( var_1 < ( var_3 ) ) { var_1 = var_3 ; } else { var_1 = ( ( int ) ( var_1 ) ) ; } return ( ( int ) ( var_1 ) ) ; }
[0]: public void method_1 ( ) { final int var_1 = int_1 ; final double var_2 = float_1 ; type_1 < java.lang.integer, java.lang.double, java.lang.string > var_3 = new type_1 < java.lang.integer, java.lang.double, java.lang.string > ( ) { public java.lang.string method_2 ( java.lang.integer var_1, java.lang.double var_2 ) { return ( var_1. tostring ( ) ) + ( var_2. tostring ( ) ) ; } } ; type_2. assertequals ( string_1, var_3. method_2 ( var_1, var_2 ), string_1 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; method_2 ( buffer , var_2 ) ; while ( true ) { int var_3 = this . var_4 ; ( this . var_4 ) ++ ; if ( var_3 >= ( list . size ( ) ) ) { return var_1 ; } else { key . set ( var_3 ) ; var_1 . add ( method_3 ( var_3 ) ) ; } } }
[0]: public void method_1 ( ) { method_2 ( ) ; java.io.inputstream var_1 ; try { var_1 = getactivity ( ). method_3 ( ). method_4 ( type_1. method_5 ( path ) ) ; var_2. method_6 ( type_2. method_7 ( var_1 ) ) ; var_2. method_8 ( var_3 ) ; var_2. method_9 ( ) ; } catch ( java.io.ioexception var_4 ) { method_10 ( var_5 ) ; var_4. method_11 ( ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , java.lang.integer var_2 ) throws type_2 , type_3 , type_4 { long starttime = type_5 . method_2 ( ) ; type_1 result = var_3 . method_3 ( var_1 , false , ( var_2 == null ? 0 : var_2 ) ) ; if ( type_6 . method_4 ( ) ) { type_6 . method_5 ( ( ( string_1 + ( ( type_5 . method_2 ( ) ) - starttime ) ) + string_2 ) ) ; } return result ; }
[0]: protected void method_1 ( type_1 var_1, type_2 var_2 ) throws java.io.ioexception, type_3 { java.util.list < type_4 > var_3 = var_4. method_2 ( ) ; var_1. method_3 ( string_1, string_2 ) ; var_1. method_3 ( string_3, var_3. get ( 0 ). getname ( ) ) ; var_1. method_3 ( string_4, var_3 ) ; var_1. method_4 ( string_5 ). method_5 ( var_1, var_2 ) ; var_1. method_4 ( string_5 ). method_5 ( var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 ) < ( var_3 . size ( ) ) ) { ( var_2 ) ++ ; temp = var_3 . get ( var_2 ) . method_2 ( temp . getconfig ( ) , true ) ; var_4 . method_3 ( temp ) ; type_1 . method_4 ( ( ( var_5 ) + string_1 ) , ( ( ( var_3 . size ( ) ) + string_2 ) + ( var_2 ) ) ) ; } }
[0]: public void method_1 ( ) { java.lang.object [ ] temp = new java.lang.object [ ( var_1. length ) * int_1 ] ; type_1. method_2 ( var_1, var_2, temp, 0, ( ( var_1. length ) - ( var_2 ) ) ) ; type_1. method_2 ( var_1, 0, temp, ( ( var_1. length ) - ( var_2 ) ), var_3 ) ; var_2 = ( temp. length ) - 1 ; var_3 = var_1. length ; }

************

************
tgt: public void method_1 ( type_1 < java.util.list < java.util.date > > var_1 ) { try { java.util.list < java.util.date > var_2 = var_1 . get ( ) ; if ( ( var_2 . size ( ) ) == int_1 ) { this . var_1 = type_1 . method_2 ( var_1 . get ( ) . get ( 0 ) ) ; } else { throw new type_2 ( ) ; } } catch ( type_2 var_3 ) { this . var_1 = type_1 . method_3 ( ) ; } }
[0]: private void method_1 ( ) { type_1. method_2 ( var_1, string_1, this ) ; if ( ( var_2 )!= null ) { type_1. method_3 ( var_1, string_2, this, var_2 ) ; var_2. method_4 ( this ) ; } else { type_1. method_3 ( var_1, string_3, this ) ; } var_2 = null ; var_3 = false ; var_2 = null ; }

************

************
tgt: public void method_1 ( ) { java.util.map < java.lang.long , java.util.set < java.lang.string > > var_1 = var_2 . method_2 ( java.util.arrays.aslist ( int_1 , int_2 ) ) ; asserttrue ( ( ! ( var_1 . isempty ( ) ) ) ) ; assertequals ( type_2 . method_3 ( string_1 ) , var_1 . get ( int_1 ) ) ; assertequals ( var_3 < java.lang.string > method_3 ( ) , var_1 . get ( int_2 ) ) ; }
[0]: public synchronized long method_1 ( long var_1 ) throws type_1 { long var_2 = ++ ( var_3 ) ; while ( ( ( var_4 ) >= ( var_5 ) ) || ( ( var_6. size ( ) ) >= ( var_7 ) ) ) { method_2 ( var_8 ) ; } var_9 = type_2. method_3 ( ) ; var_6. put ( var_2, var_1 ) ; var_4 += var_1 ; return var_2 ; }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , final java.lang.string var_2 , final java.util.list < java.lang.string > var_3 , final java.util.list < java.lang.string > var_4 , final java.lang.string var_5 , final java.lang.string var_6 ) { type_1 var_7 = new type_1 ( ) ; var_7 . method_2 ( var_1 ) ; var_7 . method_3 ( var_2 , var_5 ) ; java.lang.string var_8 = type_2 . method_4 ( var_7 , var_3 , var_4 ) ; org.testng.assert.assertequals ( var_8 , null ) ; }
[0]: public void method_1 ( ) { if ( ( ( ( var_1 ) <= int_1 ) && ( ( var_2 ) < ( var_3 ) ) ) && ( method_2 ( ) ) ) { method_3 ( ) ; ( var_2 ) ++ ; } else { var_2 = 0 ; ( var_1 ) ++ ; if ( ( var_1 ) == 1 ) { method_4 ( var_4 ) ; } else if ( ( var_1 ) == int_1 ) { method_4 ( var_5 ) ; } } } }

************

************
tgt: private void method_1 ( ) throws type_1 , java.io.ioexception { type_2 var_1 = new type_2 ( new java.io.fileinputstream ( var_2 ) ) ; try { this . var_4 = ( ( java.util.hashmap < java.lang.long , type_3 < byte [ ] > > ) ( var_1 . method_2 ( ) ) ) ; } catch ( java.lang.exception var_5 ) { } finally { var_1 . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = var_3. remove ( var_1. method_2 ( ). tostring ( ) ) ; if ( var_2!= null ) { type_3 var_4 = ( ( type_3 ) ( var_5. method_3 ( var_2. method_4 ( ) ) ) ) ; var_2. method_5 ( ) ; method_6 ( var_4 ) ; var_4. method_7 ( ) ; if ( var_4 instanceof type_4 ) { ( ( type_4 ) ( var_4 ) ). method_8 ( var_5 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.integer var_1 ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; type_1 var_2 = var_3 . method_2 ( var_1 ) ; type_2 status = var_4 . method_3 ( var_5 ) ; type_3 var_6 = new type_3 ( ) ; var_2 . method_5 ( status ) ; if ( var_3 . method_4 ( var_2 ) ) { var_6 . method_5 ( var_7 ) ; } else { var_6 . method_5 ( var_8 ) ; } return var_9 . method_6 ( var_6 ) ; }
[0]: private boolean method_1 ( java.lang.object var_1, type_1 var_2, boolean var_3 ) { boolean result =! var_3 ; if ( var_1 instanceof java.lang.string ) { if ( var_1. equals ( var_2. tostring ( ) ) ) { result = var_3 ; } } else { if ( var_1. equals ( var_2. tostring ( ) ) ) { result = var_3 ; } } return result ; }

************

************
tgt: static byte [ ] method_1 ( java.io.file file ) throws java.io.ioexception { byte [ ] buffer = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( ) ; java.io.fileinputstream var_2 = new java.io.fileinputstream ( file ) ; try { while ( true ) { int var_3 = var_2 . method_2 ( buffer ) ; if ( var_3 == ( - 1 ) ) break ; var_1 . method_3 ( buffer , 0 , var_3 ) ; } } finally { var_2 . method_4 ( ) ; } return var_1 . method_5 ( ) ; }
[0]: private void method_1 ( ) { this. var_1 = new type_1 [ var_2 ] [ var_3 ] ; for ( int y = 0 ; y < ( var_3 ) ; y ++ ) { for ( int x = 0 ; x < ( var_2 ) ; x ++ ) { char var_4 = method_2 ( x, y ) ; if ( ( var_4 == char_1 ) || ( var_4 == char_2 ) ) { this. var_1 [ x ] [ y ] = new type_1 ( x, y ) ; } } } }

************

************
tgt: public static boolean method_1 ( final java.lang.string name ) { java.lang.string var_1 = name . replace ( string_1 , string_2 ) ; java.util.iterator < type_1 > iterator = var_2 . iterator ( ) ; type_1 var_3 ; while ( iterator . method_2 ( ) ) { var_3 = iterator . method_3 ( ) ; if ( var_3 . getname ( ) . method_4 ( var_1 ) ) { iterator . remove ( ) ; return true ; } } return false ; }
[0]: private static int method_1 ( type_1 var_1, int x, int y, int var_2, int var_3 ) { type_2 var_4 = var_1. method_2 ( x, y, var_2 ) ; if ( var_4 instanceof type_3 ) { return ( ( type_3 ) ( var_4 ) ). method_3 ( var_1, x, y, var_2, var_3 ) ; } return var_1. method_4 ( x, y, var_2, var_3 ) ; }

************

************
tgt: public static type_1 method_1 ( final java.lang.string text ) { if ( text == null ) { throw new type_3 ( string_1 ) ; } final type_1 var_1 = type_2 . get ( text ) ; if ( var_1 == null ) { throw new type_3 ( ( ( string_2 + text ) + string_3 ) ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_1. setenabled ( true ) ; method_2 ( var_1, true ) ; method_3 ( ) ; } else method_4 ( true, (! ( var_2. isempty ( ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( long var_1 , java.lang.string var_3 , java.lang.string var_4 ) { if ( var_3 == null ) var_3 = string_1 ; try { return var_5 . method_1 ( var_1 ) ; } catch ( type_2 var_6 ) { var_7 . error ( var_6 ) ; var_6 . method_2 ( ) ; throw var_6 ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 args = new type_1 ( ) ; args. method_2 ( var_2, var_1 ) ; type_2 var_3 = new type_2 ( ) ; var_3. method_3 ( args ) ; int id = var_4 ; if ( ( method_4 ( var_5 ) )!= null ) { id = var_5 ; } method_5 ( ). method_6 ( ). replace ( id, var_3 ). method_7 ( string_1 ). commit ( ) ; }

************

************
tgt: public final boolean method_1 ( final type_1 var_1 , final java.lang.string title , final java.lang.string var_2 ) { if ( ( var_2 != null ) && ( ! ( var_2 . isempty ( ) ) ) ) { method_5 ( false ) ; this . method_2 ( method_3 ( var_2 , var_1 . method_4 ( ) ) ) ; return true ; } type_2 . method_6 ( this , type_3 . getstring ( string_1 , var_2 ) , type_3 . getstring ( string_2 ) , var_4 ) ; return false ; }
[0]: public void method_1 ( ) { try { java.lang.object var_1 = null ; while ( var_1!= string_1 ) { var_1 = method_2 ( ) ; if (! ( var_1. equals ( string_1 ) ) ) { method_3 ( ). method_4 ( ) ; } } catch ( final java.lang.throwable var_2 ) { var_2. method_5 ( ) ; } } }

************

************
tgt: public java.lang.string tostring ( ) { if ( ( var_1 ) == null ) { return null ; } java.lang.stringbuffer var_2 = new java.lang.stringbuffer ( ) ; type_1 var_3 = var_1 ; while ( ( var_3 . method_2 ( ) ) != null ) { var_2 . append ( ( ( var_3 . getdata ( ) ) + string_1 ) ) ; var_3 = var_3 . method_2 ( ) ; } var_2 . append ( var_3 . getdata ( ) ) ; return var_2 . tostring ( ) ; }
[0]: public type_1 method_1 ( java.lang.string query ) throws java.lang.exception { type_2 var_1 = var_2. method_2 ( query ) ; var_1. method_3 ( ) ; type_1 result = null ; try { result = var_1. method_4 ( ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.err.println ( var_3 ) ; } return result ; }

************

************
tgt: public static java.io.file method_1 ( java.io.file var_1 , java.lang.string var_2 , boolean fail ) { for ( java.io.file file : type_1 . method_2 ( var_1 , null , true ) ) if ( ( file . getname ( ) . method_3 ( var_2 ) ) && ( ( file . length ( ) ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new type_2 ( ( ( string_1 + var_2 ) + string_2 ) ) ; }
[0]: protected type_1 < java.lang.object > method_1 ( java.lang.class <? > var_1 ) throws type_2 { type_1 < java.lang.object > var_2 = var_3. method_2 ( var_1 ) ; if ( var_2 == null ) { var_2 = var_4. method_2 ( var_1 ) ; if ( var_2 == null ) { var_2 = method_3 ( var_1 ) ; if ( method_4 ( var_2 ) ) { return null ; } } } return var_2 ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent intent ) { super . method_1 ( var_1 , var_2 , intent ) ; if ( var_1 == 1 ) { if ( var_2 == ( var_3 ) ) { type_1 . i ( string_1 , string_3 ) ; var_4 = intent . method_2 ( string_4 ) ; var_5 = intent . method_2 ( string_5 ) ; } } }
[0]: public java.lang.string tostring ( ) { if ( ( id ) < 0 ) return string_1 ; java.util.date var_1 = new java.util.date ( date ) ; type_1 var_2 = new type_1 ( string_2 ) ; java.lang.string result = var_2. format ( var_1 ) ; type_2 var_3 = new type_2 ( date ) ; type_3 var_4 = type_4. method_1 ( string_2 ) ; result = var_4. method_2 ( var_3 ) ; if ( ( var_5 ) > 0 ) { result += ( string_3 + ( var_5 ) ) + string_4 ; } return result ; }

************

************
tgt: protected boolean method_1 ( type_1 item ) { type_1 var_1 = ( ( type_1 ) ( var_2 . method_2 ( var_3 , var_4 ) ) ) ; type_1 var_5 = ( ( type_1 ) ( var_2 . method_3 ( var_3 , var_4 ) ) ) ; return ( ( var_1 . compareto ( item ) ) <= 0 ) && ( ( var_5 . compareto ( item ) ) >= 0 ) ; }
[0]: public java.lang.string tostring ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = null ; try { var_2 = new type_2 ( var_1 ) ; var_2. method_1 ( this ) ; var_2. method_2 ( ) ; return new java.lang.string ( type_3. method_3 ( var_1. method_4 ( ) ) ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } return null ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_1 == ( var_3 ) ) { if ( data != null ) { type_1 var_4 = ( ( type_1 ) ( data . method_2 ( ) . get ( string_1 ) ) ) ; type_2 var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_5 . method_4 ( var_4 ) ; new type_3 ( ) . execute ( method_5 ( var_4 ) , string_2 ) ; method_6 ( string_3 ) ; } } }
[0]: public java.lang.boolean method_1 ( java.lang.long var_1 ) { boolean result ; if ( var_1 > 0 ) { var_2. method_2 ( var_1 ) ; result = false ; } else { var_2. method_3 ( var_3, var_4, var_5 ) ; result = true ; } var_6. method_4 ( null ) ; return result ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; var_2 = string_1 ; var_3 . method_2 ( ) ; var_4 = string_1 ; for ( int i = 0 ; i < ( var_5 . length ) ; i ++ ) { var_5 [ i ] = false ; } var_6 . method_3 ( 0 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { android.content.intent var_2 = new android.content.intent ( this, var_3 class ) ; type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; java.lang.string var_6 = var_4. gettext ( ). tostring ( ) ; java.lang.string var_7 = method_3 ( ) ; if ( var_7!= string_1 ) var_6. trim ( ) ; else var_6 = string_2 ; var_2. method_4 ( var_8, var_7 ) ; var_2. method_4 ( var_9, var_6 ) ; method_5 ( var_2 ) ; }

************

************
tgt: public synchronized void method_1 ( ) { if ( ( var_1 ) == null ) { java.lang.system.err.println ( string_1 ) ; return ; } try { var_2 . method_3 ( ) ; var_1 . method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { } var_1 = null ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 ) ; var_1. method_2 ( ( ( type_2 < type_3 > ) ( type_4. method_3 ( var_3 ) ) ) ) ; var_4 = var_1 ; if ( ( var_5 )!= null ) { type_5. method_4 ( var_4, var_5 [ 0 ], var_5 [ 1 ] ) ; } else if ( ( var_6 )!= null ) { method_5 ( var_4, var_6 ) ; } else { method_6 ( var_4 ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.util.list < type_1 > var_1 ) { if ( var_1 == null ) return var_2 ; java.lang.stringbuilder result = new java.lang.stringbuilder ( ) ; for ( type_1 var_3 : var_1 ) { result . append ( var_3 . getname ( ) ) ; result . append ( var_4 ) ; } method_2 ( result , var_4 ) ; return result . tostring ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { java.util.iterator < type_1 > var_2 = var_3. iterator ( ) ; int index = 0 ; while ( var_2. method_2 ( ) ) { if ( var_2. method_3 ( ). method_4 ( ). equals ( var_1 ) ) { method_5 ( var_3. get ( index ). method_6 ( ) ) ; var_3. remove ( index ) ; index ++ ; } index ++ ; } }

************

************
tgt: private void method_1 ( ) { type_2 var_1 = method_3 ( ) . method_4 ( ) ; type_3 var_2 = method_3 ( ) . method_5 ( string_3 ) ; if ( var_2 != null ) { var_1 . remove ( var_2 ) ; } var_1 . method_6 ( null ) ; var_3 = type_4 . method_7 ( var_4 ) ; var_3 . method_8 ( true ) ; var_3 . show ( var_1 , string_3 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { try { type_1 var_4 = new type_2 ( ). method_2 ( var_1 ). method_3 ( var_2 ). method_4 ( var_3 ). method_5 ( true ). build ( ) ; final int result = var_5. method_6 ( var_4 ) ; return true ; } catch ( type_3 var_6 ) { java.lang.system.out.println ( ( string_2 + ( var_6. method_7 ( ) ) ) ) ; return false ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; android.content.intent intent = getintent ( ) ; var_4 = intent . method_5 ( string_2 ) ; var_5 = ( ( type_3 ) ( method_6 ( var_6 ) ) ) ; var_5 . settext ( ( ( var_5 . gettext ( ) . tostring ( ) ) + ( var_4 ) ) ) ; method_7 ( ) ; }
[0]: public void method_1 ( boolean var_1 ) { if ( ( this. var_1 ) && (! var_1 ) ) { type_1. method_2 ( ) ; } boolean var_2 = var_1 ; this. var_1 = var_1 ; if ( var_2 && ( this. method_3 ( ) ) ) this. method_4 ( this. var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { type_2 var_3 = var_4 . method_2 ( string_1 , var_5 ) ; java.lang.long var_6 = type_3 . method_4 ( ) ; if ( var_7 != null ) { var_7 . method_5 ( string_3 , 0 ) ; var_7 . method_5 ( string_2 , var_6 ) ; var_7 . commit ( ) ; } var_1 . method_6 ( ) ; }
[0]: private void init ( ) { for ( type_1 [ ] var_1 : var_2 ) { for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_1 [ i ] = new type_1 ( var_4. method_1 ( ( ( var_5 ) + 1 ) ), var_4. method_1 ( ( ( var_6 ) + 1 ) ), var_4. method_1 ( int_1 ), var_4. method_2 ( ) ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( getintent ( ) . method_3 ( string_1 ) ) ) ; position = getintent ( ) . method_4 ( string_2 , 0 ) ; method_6 ( ) ; method_7 ( ) ; }
[0]: void method_1 ( long var_1, java.util.map < java.lang.string, java.lang.object > var_2 ) { if ( this. var_3 ) { if ( var_1 > 0 ) { final long var_4 = type_1. method_2 ( var_1 ) ; final long var_5 = type_1. method_3 ( ( var_1 - ( type_2. method_3 ( var_4 ) ) ) ) ; java.lang.string time = java.lang.string.format ( string_1, var_4, var_5 ) ; if ( time!= null ) { var_2. put ( var_6, time ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3 . length ) ; var_2 ++ ) { for ( int var_4 = 0 ; var_4 < ( var_3 [ 0 ] . length ) ; var_4 ++ ) { var_3 [ var_2 ] [ var_4 ] . method_1 ( var_1 ) ; } } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1. method_2 ( false ) ; type_2. method_3 ( ). method_4 ( ). add ( var_1 ) ; type_3. assertthat ( type_4. method_5 ( var_2 ). method_6 ( type_5. method_7 ( var_3 ) ). method_8 ( new type_6 ( string_2, "name (, string_3 ) ), type_7. method_9 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1 = string_2 ; var_2 = "true" ; type_1 context = method_2 ( var_1 , var_2 ) ; var_3 . method_3 ( context ) ; var_3 . method_4 ( new type_2 ( ) ) ; var_3 . start ( ) ; asserttrue ( ( ( var_3 . method_5 ( ) ) != null ) ) ; assertequals ( var_4 , var_3 . method_6 ( ) ) ; }
[0]: public type_1 method_1 ( java.lang.integer var_1, type_1 var_2 ) { type_1 var_3 = var_4. method_1 ( var_2. getname ( ), var_2. method_2 ( ), var_1 ) ; type_2. info ( java.lang.string.format ( string_1, var_2. getname ( ) ) ) ; if ( var_3!= null ) { return var_3 ; } else return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ! ( var_1 . method_2 ( ) ) ) { return ; } java.lang.integer var_2 = method_3 ( var_1 ) ; var_1 . method_4 ( ( ( var_1 . method_5 ( ) ) + var_2 ) ) ; var_1 . method_6 ( var_1 . method_5 ( ) ) ; }
[0]: public void method_1 ( final type_1 key, final type_2 array ) { if ( ( ( this. var_1 ) == null ) || (! ( this. var_1. method_1 ( key ) ) ) ) { type_2 obj = type_3. method_2 ( ) ; this. var_1 = new type_4 ( key, obj ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , type_1 var_2 ) { try { method_2 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { method_3 ( var_4 , var_3 . method_4 ( ) ) ; } var_2 = var_5 . method_5 ( var_1 ) ; if ( var_2 == null ) { method_3 ( var_4 , string_1 ) ; java.lang.system.out.println ( string_2 ) ; } return var_2 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, int var_2 ) { java.lang.string temp = var_1 ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_3. append ( temp. substring ( 1 ) ) ; var_3. append ( temp. substring ( 0, 1 ) ) ; temp = var_3. tostring ( ) ; } return var_3. tostring ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { if ( ( var_2 ) == null ) { return var_1 . tostring ( ) ; } java.lang.string var_3 = java.lang.string.format ( var_2 , var_1 ) ; if ( var_1 . method_2 ( ) ) { var_3 = java.lang.string.format ( string_1 , var_1 , var_3 ) ; } return var_3 ; }
[0]: public type_1 method_1 ( boolean var_1 ) { type_1 var_2 = ( var_1 )? new type_2 ( this ) : new type_3 ( this ) ; var_2. method_2 ( ). method_3 ( true ) ; var_2. method_2 ( ). method_4 ( ) ; method_5 ( var_2 ) ; if ( (! ( var_3. get ( ) ) ) && ( var_4. get ( ) ) ) type_4. method_6 ( ). method_7 ( var_2. method_2 ( ), var_5. get ( ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 . method_3 ( this , java.util.arrays.aslist ( string_1 ) , new type_2 ( ) { public void method_4 ( type_3 var_2 , type_4 var_3 ) { method_2 ( true ) ; if ( var_2 == null ) { } else if ( var_2 . method_5 ( ) ) { method_6 ( ) ; } else { type_5 . method_7 ( var_4 , ( string_2 + ( var_2 . tostring ( ) ) ) ) ; } } } ) ; }
[0]: public void method_1 ( type_1... var_1 ) { java.util.hashset < type_1 > var_2 = new java.util.hashset < type_1 > ( ) ; for ( type_1 position : var_1 ) { position = position. method_2 ( 1 ) ; method_3 ( position, var_2 ) ; method_3 ( position. method_4 ( 1 ), var_2 ) ; method_3 ( position. method_4 ( ( - 1 ) ), var_2 ) ; } for ( type_1 position : var_2 ) { var_3. method_5 ( position, true ) ; } }

************

************
tgt: public static type_1 method_1 ( final java.net.url [ ] var_1 , final type_1 var_2 ) { type_2 . method_2 ( null ) ; return type_4 . method_3 ( ( ( type_5 < type_3 > ) ( ( ) - > new type_3 ( var_1 , var_2 ) ) ) ) ; }
[0]: private void method_1 ( int [ ] var_1 ) { if ( ( var_1. length ) == 0 ) { return ; } for ( int i : var_1 ) { if ( ( var_1 [ i ] ) == ( var_2 ) ) { return ; } } method_2 ( ) ; } }

************

************
tgt: protected void method_1 ( ) throws java.io.ioexception { type_1 . method_2 ( new java.io.file ( var_1 , var_2 ) , java.lang.string.format ( string_1 , ( ( var_5 ) * int_1 ) ) ) ; type_1 . method_2 ( new java.io.file ( var_1 , var_4 ) , java.lang.string.format ( string_1 , ( ( var_3 ) * int_1 ) ) ) ; }
[0]: public void method_1 ( boolean var_1 ) { var_2 = var_1 ; if ( ( method_2 ( ) )!= 0 ) { type_1. setenabled ( method_2 ( ), var_1 ) ; } if ( var_1 ) { method_3 ( ) ; } else { method_4 ( ) ; } }

************

************
tgt: public java.lang.float get ( ) { if ( ( var_1 ) == ( var_2 ) ) { return null ; } else { var_1 = ( ( var_1 ) + 1 ) % ( var_3 ) ; float result = data [ var_1 ] ; return result ; } }
[0]: private boolean method_1 ( type_1 var_1, type_2 var_2, boolean var_3, type_3 var_4 ) { boolean var_5 = ( type_4. name ( ). equals ( var_1. method_2 ( ) ) ) && (! var_3 ) ; boolean var_6 = var_2. method_3 ( ) ; boolean var_7 = ( type_5. method_4 ( var_8, var_4, var_1. method_5 ( ) ) ) == null ; boolean var_9 = ( var_5 || var_6 ) || var_7 ; return var_9 ; }

************

************
tgt: private void execute ( final type_1 var_1 , final type_2 var_2 ) { method_1 ( ) ; for ( final type_3 var_3 : var_1 . method_2 ( ) ) { for ( type_4 var_4 : var_3 . method_3 ( ) ) { try { method_4 ( ) ; var_2 . method_5 ( var_4 ) ; method_6 ( ) ; } catch ( final java.lang.exception var_5 ) { type_5 . error ( var_5 . method_7 ( ) , var_5 ) ; } } } method_8 ( var_1 ) ; method_9 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { for ( type_2 var_2 : var_3 ) { type_3 var_4 = new type_3 ( var_2, var_1 ) ; if ( ( var_4. size ( ) ) == 0 ) { continue ; } boolean var_5 = var_4. method_2 ( ) ; if ( var_5 ) { return false ; } java.util.list < java.util.list < java.lang.integer > > var_6 = var_4. method_3 ( ) ; if ( method_1 ( var_6, var_4, var_1 ) ) { return true ; } } return false ; } }

************

************
tgt: private void method_1 ( type_1 type , java.util.arraylist < type_2 > var_1 ) { switch ( type ) { case var_2 : date = var_1 . get ( var_3 ) . method_2 ( ) ; starttime = var_1 . get ( var_3 ) . method_3 ( ) ; endtime = var_1 . get ( var_4 ) . method_3 ( ) ; break ; case var_5 : date = var_1 . get ( var_3 ) . method_2 ( ) ; starttime = var_1 . get ( var_3 ) . method_3 ( ) ; break ; default : break ; } }
[0]: protected void method_1 ( ) { long var_1 = type_1. method_2 ( ( ( var_2 ) + ( var_3. getid ( ) ) ), 0 ) ; if ( ( ( type_2. method_3 ( ) ) - var_1 ) > ( var_4 ) ) method_4 ( false, false ) ; }

************

************
tgt: public type_1 method_1 ( final java.lang.string var_1 ) throws type_2 { type_3 . method_2 ( var_1 , string_1 ) ; type_4 var_2 = var_3 . get ( var_1 ) ; if ( var_2 != null ) { return var_2 ; } var_2 = var_4 . method_3 ( var_1 ) ; if ( var_2 != null ) { method_4 ( var_5 < type_1 > method_5 ( var_2 ) ) ; return var_2 ; } throw new type_2 ( ) ; }
[0]: public type_1 [ ] method_1 ( type_2 var_1, int offset ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; type_3 var_3 = var_1. method_2 ( ) ; return var_2. method_3 ( new type_1 [ var_2. size ( ) ] ) ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 ) { return new type_1 ( type_2 . method_2 ( ) . tostring ( ) , var_1 , string_1 , var_2 , new java.util.date ( ) . gettime ( ) , new java.util.date ( ) . gettime ( ) , var_3 , var_4 ) ; }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { java.io.inputstream var_1 = new type_2 ( type_3. method_2 ( string_1 ). method_3 ( ) ) ; type_6 var_3 = type_4. method_7 ( ). method_8 ( ) ; java.io.inputstream var_1 = new type_2 ( type_3. method_2 ( string_1 ). method_3 ( ) ) ; type_4 var_2 = type_4. method_4 ( ). method_5 ( type_5. method_6 ( var_1 ) ). build ( ) ; return new type_7 ( var_3, string_2 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string filename , java.lang.string var_2 ) { this . filepath = var_1 ; this . filename = filename ; this . var_2 = var_2 ; var_3 = new type_1 ( ) ; var_4 = new type_2 ( ) ; try { var_3 . put ( string_1 , var_2 ) ; var_5 = new type_2 ( ) ; var_3 . put ( string_2 , var_5 ) ; } catch ( type_3 var_6 ) { var_6 . method_2 ( ) ; } var_4 . put ( var_3 ) ; }
[0]: public void method_1 ( final java.lang.string var_1 ) throws type_1 { var_2. info ( java.lang.string.format ( string_1, method_2 ( ), var_1 ) ) ; java.lang.string var_3 = java.lang.string.format ( string_2, method_3 ( var_1 ) ) ; try { method_4 ( var_3 ) ; } catch ( type_1 var_4 ) { var_2. error ( java.lang.string.format ( string_3, method_2 ( ), var_1 ), var_4 ) ; throw var_4 ; } }

************

************
tgt: public void update ( ) { if ( ( method_1 ( ) ) == null ) return ; super . update ( ) ; if ( method_1 ( ) . var_1 ) return ; if ( method_2 ( 0 ) ) method_3 ( ) ; if ( method_2 ( 1 ) ) method_4 ( ) ; if ( method_2 ( int_1 ) ) method_5 ( ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( new type_1 ( type_2. method_3 ( ), var_2. method_4 ( ), var_2. method_5 ( ), var_2. method_6 ( ), var_2. method_7 ( ), var_2. method_8 ( ), var_2. method_9 ( ), var_3, 1 ) ) ; }

************

************
tgt: public static void method_1 ( final java.util.list < type_1 > var_1 , final type_2 var_2 ) throws type_3 { var_3 . info ( string_1 , var_1 . size ( ) , var_2 ) ; for ( final type_1 item : var_1 ) { if ( ! ( type_4 . method_3 ( item . path ) ) ) { throw new type_3 ( ( ( string_2 + item ) + string_3 ) ) ; } } }
[0]: public java.lang.charsequence method_1 ( int position ) { if ( position < ( data. method_2 ( ) ) ) { java.lang.object item = data. method_3 ( position ) ; if ( item instanceof type_1 ) { return ( ( type_1 ) ( item ) ). key ; } if ( item instanceof type_2 ) { return ( ( type_2 ) ( item ) ). key ; } return string_1 ; } } return null ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = var_2 . method_2 ( int_1 , int_2 ) ; method_3 ( var_1 , var_4 , var_3 ) ; final type_1 var_5 = var_2 . method_2 ( int_3 , int_4 ) ; method_3 ( var_5 , var_7 , var_6 ) ; final type_1 var_8 = var_2 . method_2 ( int_4 , 1 ) ; method_3 ( var_8 , var_6 , var_9 ) ; }
[0]: public void method_1 ( ) { android.content.intent intent = new android.content.intent ( string_1 ) ; intent. method_2 ( string_2, false ) ; method_3 ( intent ) ; if ( ( var_1 )!= null ) { method_4 ( var_1 ) ; } if ( ( id )!= ( - 1 ) ) { var_2. method_5 ( id ) ; } method_6 ( ) ; method_7 ( new android.content.intent ( this, var_3 class ) ) ; }

************

************
tgt: public void method_1 ( type_1 out ) throws java.io.ioexception { out . method_2 ( this . var_1 . size ( ) ) ; for ( type_2 var_2 : this . var_1 ) { out . method_2 ( var_2 . getid ( ) ) ; java.util.list < java.lang.integer > var_3 = var_2 . method_3 ( ) ; out . method_2 ( var_3 . size ( ) ) ; for ( java.lang.integer var_4 : var_3 ) { out . method_2 ( var_4 ) ; } } }
[0]: private void method_1 ( ) { type_1 var_1 = type_2. method_2 ( method_3 ( ) ) ; type_3 var_2 = var_1. method_4 ( ) ; var_2. method_5 ( var_3, false ) ; var_2. method_6 ( var_4, string_1 ) ; var_2. method_6 ( var_5, string_1 ) ; var_2. commit ( ) ; android.content.intent var_6 = new android.content.intent ( this, var_7 class ) ; method_7 ( var_6 ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { if ( ( var_3 ) != null ) { var_3 . method_2 ( var_1 , var_2 ) ; method_3 ( ) ; if ( ( var_4 ) != null ) var_4 . method_4 ( var_1 , ( var_2 + 1 ) ) ; } }
[0]: public java.lang.string method_1 ( ) { method_2 ( ) ; type_1 var_1 = new type_1 ( ) ; int var_2 = java.lang.integer.parseint ( var_3. method_3 ( string_1 ) ) ; var_1 = var_4. method_4 ( var_2 ) ; var_3. method_5 ( string_2, var_1 ) ; var_3. method_5 ( string_1, var_2 ) ; return string_3 ; }

************

************
tgt: public int method_1 ( type_1 var_1 ) { int var_2 = var_3 ; int var_4 = var_5 ; int var_6 = var_7 ; int var_8 = var_9 ; return ( var_10 . get ( var_4 , var_8 ) ) - ( var_10 . get ( var_2 , var_6 ) ) ; }
[0]: public type_1 method_1 ( final type_2 context ) { final type_3 method = type_4. get ( ) ; final java.lang.object [ ] params = type_5. get ( ) ; return new type_6 ( ) { public java.lang.object method_2 ( final type_7 context ) throws java.lang.exception { if ( method!= null ) { method. method_3 ( context. method_4 ( ), params ) ; } return context. method_5 ( ) ; } } ; }

************

************
tgt: public void handle ( type_1 event ) { var_1 . method_1 ( ( ( int ) ( event . method_2 ( ) ) ) , ( ( int ) ( event . method_3 ( ) ) ) ) ; java.lang.system.out.println ( ( string_1 + ( var_1 ) ) ) ; if ( var_2 ) { var_3 = true ; java.lang.system.out.println ( string_2 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1, type_2, type_3, java.io.ioexception, type_4, type_5, type_6 { new type_7 ( ). method_2 ( string_1, string_2, java.lang.integer.parseint ( string_3 ), string_4, int_1, 0, int_2, false, int_1 ) ; method_1 ( ) ; }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string var_1 ) { for ( java.util.map.entry < java.lang.string , java.lang.string > var_2 : var_3 . method_2 ( ) ) { if ( var_1 . equals ( var_2 . getvalue ( ) ) ) { return var_2 . method_3 ( ) ; } } throw new type_1 ( ( string_1 + var_1 ) ) ; }
[0]: public java.lang.object method_1 ( ) { final int n = var_1. size ( ) ; if ( n == 0 ) { throw new type_1 ( string_1 ) ; } for ( int i = ( var_2. size ( ) ) - 1 ; i >= 0 ; -- i ) { if ( ( var_2. get ( i ) ) == n ) { var_2. set ( i, ( n - 1 ) ) ; } } return var_1. remove ( ( n - 1 ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , type_1 var_4 ) throws type_2 { buffer = new java.lang.stringbuilder ( ) ; type_3 var_5 = new type_3 ( var_3 , var_4 ) ; if ( ! ( var_6 . isempty ( ) ) ) { var_6 . method_2 ( ) . method_3 ( var_5 ) ; } var_6 . method_4 ( var_5 ) ; }
[0]: private void method_1 ( type_1 message ) { var_1 = message. method_2 ( ) ; var_2 = message. method_3 ( ) ; type_2 var_3 = type_3. method_4 ( ) ; var_3. put ( var_4, var_1 ) ; var_3. put ( var_5, var_2 ) ; method_5 ( var_3 ) ; var_6. method_6 ( string_1 ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 var_1 , type_4 var_2 ) { type_5 < type_2 > handle = new type_5 < type_2 > ( method_2 ( ) ) ; java.util.map < java.lang.string , java.lang.string > var_3 = new java.util.hashmap < > ( ) ; var_3 . put ( string_1 , var_4 ) ; var_3 . put ( string_2 , var_1 . getid ( ) ) ; var_3 . put ( string_3 , var_2 . getid ( ) ) ; method_3 ( var_3 , var_5 , handle ) ; return handle ; }
[0]: public void update ( float var_1 ) { type_1. method_1 ( ( ( type_1. method_2 ( ) ) + ( ( ( type_2. method_3 ( ) ) * var_1 ) * float_1 ) ) ) ; type_1. method_4 ( ( ( type_1. method_5 ( ) ) + ( ( ( type_3. method_3 ( ) ) * var_1 ) * float_1 ) ) ) ; if ( ( var_2 )!= null ) { var_2. method_6 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 . method_3 ( ) ) . method_4 ( type_2 . method_5 ( int_1 , int_2 , int_3 , int_4 , int_2 ) ) ; java.util.date var_2 = type_2 . method_6 ( int_1 , int_2 , int_3 , int_4 , int_5 ) ; java.util.date var_3 = var_4 . method_7 ( new java.util.arraylist < type_3 > ( ) ) ; type_4 . assertequals ( true , type_5 . method_8 ( var_2 , var_3 ) ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int var_2, long id ) { type_2. method_2 ( var_3, ( string_1 + var_2 ) ) ; type_3 var_4 = ( ( type_3 ) ( var_1. method_3 ( ) ) ) ; if ( var_4!= null ) { var_4. method_4 ( ) ; int var_5 = var_4. method_5 ( var_2 ) ; } }

************

************
tgt: private void method_1 ( type_1 event ) { switch ( event . gettype ( ) ) { case var_1 : method_2 ( ) ; break ; case var_2 : method_3 ( ) ; break ; case var_3 : method_4 ( ) ; break ; case var_4 : method_5 ( ) ; break ; case var_5 : method_6 ( ) ; break ; } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string token ) throws type_2, type_3 { method_2 ( token ) ; java.util.list < type_1 > result = null ; try { result = var_1. method_3 ( ) ; } catch ( type_4 var_2 ) { throw new type_2 ( var_2 ) ; } return result ; }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { java.util.list < type_2 > var_2 = type_3 . get ( var_1 ) . list ( ) ; java.lang.string title = type_4 . method_2 ( ) ; while ( ! ( type_4 . method_3 ( title , var_2 ) ) ) { title = type_4 . method_2 ( ) ; } return title ; }
[0]: public static java.util.calendar method_1 ( java.lang.string var_1 ) throws type_1 { type_2. method_2 ( false ) ; var_1 = var_1. trim ( ) ; java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2. method_3 ( type_2. method_4 ( var_1 ) ) ; if (! ( type_3. method_5 ( var_2 ). equals ( var_1 ) ) ) { throw new type_1 ( var_1, 0 ) ; } return var_2 ; }

************

************
tgt: protected java.lang.exception method_1 ( java.lang.void ... params ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_3 = var_4 ; var_5 = var_6 ; java.lang.system.out.println ( var_3 ) ; java.lang.system.out.println ( var_5 ) ; try { method_2 ( true ) ; type_3 . i ( string_1 , string_2 ) ; var_7 = var_1 . method_3 ( var_2 ) ; } catch ( java.lang.exception var_8 ) { return var_8 ; } result = true ; return null ; }
[0]: public int method_1 ( ) { final int var_1 = int_1 ; int result = 1 ; result = ( var_1 * result ) + ( ( var_2 ) == null? 0 : var_2. method_1 ( ) ) ; result = ( var_1 * result ) + ( ( var_3 ) == null? 0 : var_3. method_1 ( ) ) ; return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = new type_2 ( getactivity ( ) , var_3 ) ; method_2 ( string_1 ) ; method_3 ( var_2 ) ; method_4 ( false ) ; method_5 ( ) . method_6 ( var_4 , null , this ) ; }
[0]: public void method_1 ( double var_1 ) { if ( ( ( this. method_2 ( ). method_3 ( ) ) + var_1 ) <= int_1 ) { this. method_2 ( ). method_4 ( ( ( this. method_2 ( ). method_3 ( ) ) + ( var_1 * ( this. method_5 ( ) ) ) ) ) ; } else { this. method_2 ( ). method_4 ( float_1 ) ; } }

************

************
tgt: private int method_1 ( double var_1 ) { int var_2 = ( ( int ) ( java.lang.math.round ( ( ( method_2 ( ) ) * var_1 ) ) ) ) ; if ( var_5 ) { var_2 = ( var_2 < 0 ) ? var_3 : var_2 ; var_2 = ( var_2 > ( var_4 ) ) ? var_3 : var_2 ; return var_2 ; } else return - 1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. i ( string_1, string_2 ) ; super. method_1 ( var_1 ) ; var_2 = type_3. method_2 ( this ) ; var_3 = method_3 ( ) ; var_4 = type_4. method_4 ( ). method_5 ( ) ; var_5 = new type_5 ( ) ; method_6 ( var_5, new type_6 ( var_6 ) ) ; type_7. method_7 ( this ) ; type_8. get ( ). method_8 ( var_7, this ) ; }

************

************
tgt: private void select ( int index ) { assert index < int_1 ; if ( ( var_1 [ index ] ) == string_1 ) { var_2 . method_1 ( new java.util.arraylist < type_1 > ( ) ) ; return ; } var_2 . method_1 ( var_3 ) ; var_3 . method_2 ( ) ; var_2 . method_3 ( var_3 ) ; }
[0]: public type_1 get ( ) throws java.io.ioexception { synchronized ( var_1 ) { long var_2 = type_2. get ( var_3, var_1, var_4 ) ; if ( var_2 > ( - 1 ) ) { return ( ( type_1 ) ( values [ ( ( int ) ( var_2 ) ) ] ) ) ; } return null ; } } }

************

************
tgt: public static void method_1 ( ) { type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; method_5 ( var_1 , var_2 , string_1 , string_2 ) ; method_5 ( var_1 , var_3 , string_1 ) ; method_5 ( var_4 , var_3 , string_3 ) ; method_5 ( var_4 , var_3 , string_5 ) ; method_4 ( var_4 , var_6 , string_6 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; type_3 var_5 = new type_3 ( method_4 ( ) ) ; if ( var_5. method_5 ( ) ) { var_3. settext ( ( ( ( string_1 + ( var_5. method_6 ( ) ) ) + string_2 ) + ( var_5. method_7 ( ) ) ) ) ; } else { var_5. method_8 ( ) ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string id ) { if ( string_1 . method_2 ( id ) ) { return var_1 . method_3 ( 0 ) ; } else if ( string_2 . method_2 ( id ) ) { return var_1 . method_4 ( ) ; } else if ( string_3 . method_2 ( id ) ) { return null ; } else { long var_2 = method_5 ( id ) . method_6 ( ) ; return var_1 . method_3 ( var_2 ) ; } }
[0]: private int method_1 ( ) { java.lang.system.out.print ( string_1 ) ; int var_1 ; while ( true ) { var_1 = method_2 ( ) ; type_1 var_2 = method_3 ( var_1 ) ; if ( ( var_2. method_4 ( ) ) == var_1 ) { continue ; } else if ( var_2 == null ) { java.lang.system.out.println ( string_4 ) ; } break ; } return var_1 ; } }

************

************
tgt: private void init ( ) { var_1 = ( ( type_1 ) ( method_1 ( var_2 . list ) ) ) ; var_1 . method_2 ( new type_2 ( ) ) ; var_1 . method_3 ( new type_3 ( type_4 . method_4 ( 1 , int_2 , int_3 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 tmp ; var_1. method_2 ( string_1 ) ; while ( this. results. method_3 ( ) ) { tmp = this. results. method_4 ( ) ; var_1. method_2 ( tmp. method_5 ( ) ) ; } var_1. method_2 ( string_2 ) ; var_1. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final int index = var_2 . method_2 ( ) ; final type_2 var_3 = var_4 . get ( index ) ; final type_3 p = var_3 . method_3 ( ) ; if ( index == ( - 1 ) ) { return ; } if ( ( type_4 . method_4 ( this , ( string_1 + p ) , string_2 , var_6 ) ) == ( var_7 ) ) { var_4 . remove ( index ) ; method_5 ( ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return false ; } if ( ( ( var_1. method_2 ( ). gettime ( ) ) + ( var_1. method_3 ( ) ) ) < ( type_2. method_4 ( ) ) ) { if ( ( ( var_1. method_5 ( ). gettime ( ) ) + ( ( int_1 * int_2 ) * int_3 ) ) < ( type_2. method_4 ( ) ) ) { return true ; } } return false ; } }

************

************
tgt: public type_1 method_1 ( ) { int var_1 = ( ( int ) ( java.lang.math.round ( ( ( var_2 ) * ( java.lang.math.random ( ) ) ) ) ) ) ; int var_3 = ( ( int ) ( java.lang.math.round ( ( ( var_4 ) * ( java.lang.math.random ( ) ) ) ) ) ) ; type_1 position = new type_1 ( var_1 , var_3 ) ; return position ; }
[0]: public void method_1 ( java.lang.string src, type_1 var_1 ) throws java.io.ioexception { if ( ( src == null ) && ( var_1 == null ) ) { throw new type_2 ( string_1 ) ; } method_2 ( src ) ; java.util.list < type_1 > var_2 = type_3. method_3 ( 1 ) ; var_2. add ( var_1 ) ; try { method_4 ( src, var_2 ) ; } catch ( java.io.ioexception var_3 ) { throw new java.io.ioexception ( string_2 ) ; } this. var_4. method_1 ( src, var_1 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int rows , int var_2 ) { var_3 = new type_2 < java.lang.integer , type_3 > ( ) ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < var_2 ; j ++ ) { int x = ( i * var_2 ) + j ; var_3 . put ( x , var_1 . method_2 ( i , j ) ) ; } }
[0]: private void method_1 ( int var_1, type_1 var_2 ) { for ( int i = var_3 ; ( i < ( var_4 ) ) && ( i < ( ( type_2. size ( ) ) - 1 ) ) ; ++ i ) { if ( var_1 == ( ( type_2. get ( i ). method_2 ( ) ) % ( var_5 ) ) ) { type_2. get ( i ). method_3 ( var_2 ) ; break ; } } }

************

************
tgt: public type_1 < byte [ ] > method_1 ( int var_1 ) throws java.io.ioexception { type_1 < byte [ ] > result = method_2 ( var_1 ) ; byte [ ] var_4 = var_3 . method_3 ( var_2 ) ; method_4 ( ( var_4 == null ? var_2 : var_4 ) ) ; return result ; }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 < type_3 > var_2 = ( ( type_4 ) ( var_1 ) ). method_2 ( ) ; if ( ( var_2. method_3 ( ) ) && ( ( var_2. get ( ). method_4 ( ) ) == ( var_3 ) ) ) { event. method_5 ( 0 ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( var_1 ) type_1 . method_2 ( this ) ; type_2 . method_3 ( new type_3 ( ) . method_4 ( ) . method_5 ( ) . method_6 ( ) . method_7 ( ) . method_8 ( ) . build ( ) ) ; type_2 . method_9 ( new type_4 ( ) . method_10 ( ) . method_11 ( ) . method_7 ( ) . build ( ) ) ; }
[0]: public void method_1 ( int id, java.lang.string var_1, int [ ] start, int [ ] end, int size, java.lang.string var_2 ) { var_3. method_1 ( id, var_1, start [ 0 ], start [ 1 ], end [ 0 ], end [ 1 ], size, var_2 ) ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { if ( ( ( var_2 ) != null ) && ( ( var_2 . method_2 ( ) ) != null ) ) { var_3 = var_2 . method_2 ( ) ; var_4 . method_3 ( var_3 . getid ( ) ) ; } else { } var_5 . method_5 ( var_1 ) ; if ( ( var_3 ) != null ) { var_5 . method_6 ( var_3 . getid ( ) ) ; } var_5 . method_7 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_1. get ( ) ; type_2 var_2 = new type_2 ( ) ; final type_3 var_3 = new type_4 ( ). method_2 ( ) ; final java.lang.string var_4 = this. method_3 ( ) ; var_1. method_4 ( new type_5 ( string_1, string_2, string_3 ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return null ; } if ( var_1 . startswith ( string_1 ) ) { return var_1 ; } java.lang.string var_2 = type_1 . get ( var_1 ) ; if ( var_2 == null ) { var_2 = ( var_3 ) + var_1 ; } return var_2 ; }
[0]: public void method_1 ( final android.content.intent intent, final type_1 var_1, final type_2 var_2, final type_3 var_3, final int var_4, final java.lang.string var_5, final type_4 var_6 ) { var_7. method_2 ( intent, new type_5 ( ) { public void method_3 ( final android.content.intent intent ) { var_8 super. method_1 ( intent, var_1, var_2, var_3, var_4, var_5, var_6 ) ; } } ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 ; boolean status = false ; type_2 var_3 = null ; try { type_3 var_4 = new type_3 ( ) ; var_3 = var_4 . method_2 ( ) ; var_2 = var_3 . method_3 ( ) ; java.lang.string query = ( string_1 + var_1 ) + string_2 ; type_4 var_5 = var_2 . method_4 ( query ) ; status = var_5 . method_5 ( ) ; } catch ( type_5 var_6 ) { var_6 . method_6 ( ) ; } return status ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2. method_2 ( false ) ; var_2. method_1 ( this, var_1 ) ; try { var_3 = method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . info ( string_1 ) ; type_2 var_1 = type_3 . method_2 ( ) ; java.lang.long id = method_3 ( var_1 ) ; type_4 var_2 = type_4 . get ( new type_5 ( ( ( ( var_3 ) + string_2 ) + id ) ) ) . build ( ) ; type_6 < java.util.map > response = this . var_4 . method_5 ( var_2 , var_5 class ) ; assertequals ( var_6 , response . method_6 ( ) ) ; }
[0]: public type_1 method_1 ( type_2 < type_3 > token ) throws type_4, type_5 { type_3 var_1 = token. getvalue ( ) ; return type_1. status ( var_2 ). method_2 ( string_1, string_2 ). method_3 ( type_6. method_4 ( type_6. method_5 ( var_3, var_4 ) ) ). build ( ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( var_1 == null ) return false ; if ( ! ( var_1 instanceof type_1 ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; if ( var_3 . equals ( this . name ) ) return true ; return false ; }
[0]: protected void method_1 ( java.lang.string var_1, java.lang.exception var_2 ) { var_3 = ( ( var_2. getclass ( ). getname ( ) ) + string_1 ) + var_1 ; java.lang.string msg = var_2. method_2 ( ) ; if ( msg!= null ) var_3. method_3 ( ( string_2 + ( var_2. method_2 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( var_1 [ 0 ] ) { var_2 . method_2 ( var_3 . getid ( ) ) . method_3 ( ) ; method_4 ( var_4 ) ; var_1 [ 0 ] = false ; } else { var_2 . method_2 ( var_3 . getid ( ) ) . setvalue ( var_3 ) ; method_5 ( var_4 ) ; var_1 [ 0 ] = true ; } }
[0]: public void method_1 ( java.lang.long var_1, java.lang.long var_2 ) { java.lang.long starttime = ( var_1 == null )? 0l : var_1 ; java.lang.long endtime = ( var_2 == null )? type_1. method_2 ( 0.0 ). method_3 ( ) : var_2 ; query. method_4 ( starttime ) ; query. method_5 ( endtime ) ; this. starttime = starttime ; this. endtime = endtime ; }

************

************
tgt: public void method_1 ( ) throws java.lang.throwable { java.util.list < java.lang.string > list = new java.util.arraylist < java.lang.string > ( ) ; list . add ( string_1 ) ; java.util.collection < java.lang.string > var_1 = type_1 . method_2 ( list ) ; type_2 . assertnotnull ( var_1 ) ; type_2 . assertequals ( int_1 , var_1 . size ( ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( var_1 == null ) { type_1 args = new type_1 ( ) ; args. method_3 ( var_3, getintent ( ). getdata ( ) ) ; type_2 var_4 = new type_2 ( ) ; var_4. method_4 ( args ) ; method_5 ( ). method_6 ( ). replace ( var_5, new type_2 ( ) ). commit ( ) ; } }

************

************
tgt: public static double [ ] method_1 ( int count , double var_1 ) { double [ ] result = new double [ count ] ; double var_2 = 0 ; for ( int i = 0 ; i < count ; i ++ ) { var_2 = ( ( - 1 ) / var_1 ) * ( type_1 . method_2 ( ( 1 - ( java.lang.math.random ( ) ) ) ) ) ; result [ i ] = var_2 ; } return result ; }
[0]: protected void method_1 ( android.content.intent intent ) { super. method_1 ( intent ) ; if ( intent. method_2 ( var_1 ) ) { var_2 = ( ( type_1 ) ( getintent ( ). method_3 ( ). get ( var_1 ) ) ) ; type_2 var_3 = ( ( type_2 ) ( method_4 ( var_4 ) ) ) ; var_3. method_5 ( var_2. position ) ; } else { var_2 = null ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( var_1 ) ; } else { if ( var_1 != null ) { android.content.intent intent = new android.content.intent ( this , var_3 class ) ; intent . method_3 ( var_4 , var_1 ) ; method_4 ( intent ) ; } } }
[0]: private type_1 method_1 ( ) { if ( type_2. method_2 ( this ) ) { return null ; } var_1 = new java.util.random ( ). method_3 ( var_2. length ) ; method_4 ( var_2 [ var_1 ] ) ; if ( ( type_2. method_5 ( this ). length ) > 0 ) { method_6 ( ) ; } return method_7 ( ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; type_2 var_2 = new type_2 ( string_2 ) ; var_1 . add ( var_2 ) ; var_2 . method_2 ( ( var_3 ) - > new type_3 ( string_3 ) ) ; return var_1 ; }
[0]: private int method_1 ( int position, type_1 var_1 ) { switch ( var_1 ) { case var_2 : case var_3 : return ( ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ) + ( ( int ) ( float_1 * ( var_4 ) ) ) ; case var_5 : return ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ; default : return ( method_3 ( position ) ) * ( var_4 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( byte [ ] buffer ) { int i = 0 ; while ( ( i < ( buffer . length ) ) && ( ! ( type_1 . method_2 ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.string ( buffer , 0 , i ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; if ( ( var_2. method_3 ( ) ) < 1 ) { var_3. method_4 ( var_4 ) ; var_5. method_4 ( var_4 ) ; var_6. method_4 ( var_7 ) ; } var_2. method_5 ( ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = 0 ; type_1 . i ( string_1 , string_2 ) ; method_2 ( var_2 ) ; var_3 . method_4 ( new type_2 ( ) { public void method_5 ( android.view.view view ) { method_1 ( ) ; } } ) ; type_3 var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_5 . method_6 ( ) ; var_5 . method_7 ( var_7 ) ; method_8 ( ) ; }
[0]: public type_1 method_1 ( int x, int y ) throws type_2 { type_1 var_1 = null ; if ( ( ( ( x < 0 ) || ( x >= ( this. var_2 ) ) ) || ( y < 0 ) ) || ( y >= ( this. var_2 ) ) ) { throw new type_2 ( string_1 ) ; } else { var_1 = this. var_3 [ x ] [ y ] ; } return var_1 ; }

************

************
tgt: private void method_1 ( int var_1 ) { if ( var_1 == 1 ) { ( var_2 ) ++ ; } else { ( var_3 ) ++ ; } var_4 = true ; var_5 = 0 ; var_6 = 0 ; var_7 = 0 ; var_8 = 0 ; var_9 = 0 ; var_10 = 0 ; var_11 = var_1 ; var_12 = 0 ; }
[0]: public void method_1 ( type_1 var_1 ) { if (! ( var_1. method_2 ( ) ) ) { type_2 var_2 = new type_2 ( var_3. method_3 ( ), var_3. method_4 ( ), var_3. method_5 ( ) ) ; var_4. method_6 ( var_3. method_3 ( ) ). setvalue ( var_2 ) ; var_5. method_7 ( var_3. method_3 ( ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string name ) throws type_1 { var_1 = var_2 . method_2 ( ) ; type_2 var_3 = var_1 . method_3 ( string_1 ) ; var_3 . method_4 ( 1 , name ) ; this . name = name ; var_3 . method_5 ( ) ; var_1 . method_6 ( ) ; method_7 ( name ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { try { var_1 = new type_1 ( string_1 ) ; var_2 = new type_1 ( string_2 ) ; var_3. method_2 ( var_1 ) ; var_3. method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { fail ( string_3 ) ; } try { var_3. method_3 ( var_2 ) ; } catch ( type_2 var_4 ) { asserttrue ( true ) ; } catch ( java.lang.exception var_4 ) { fail ( string_4 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 node = type_2 . method_2 ( var_1 class ) ; type_3 var_2 = type_2 . method_2 ( var_3 class ) ; type_2 . method_3 ( node . method_4 ( ) ) . method_5 ( var_2 ) ; type_2 . method_3 ( var_2 . getname ( ) ) . method_5 ( string_1 ) ; java.util.list < type_4 > var_4 = type_5 . method_6 ( node , type_6 . method_7 ( ) , false ) ; type_7 . asserttrue ( var_4 . isempty ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1. method_2 ( ) ) { type_2 var_3 = var_2. getvalue ( var_4 class ) ; if ( ( var_5 ) == var_6 ) var_7. add ( var_3 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string value ; switch ( var_1 ) { case string_2 : value = string_3 ; break ; default : value = type_2 . method_1 ( var_1 ) ; break ; } var_2 . method_4 ( string_4 , var_1 , value ) ; return value ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 = null ; switch ( var_1 ) { case name : var_2 = ( var_3 ) + string_1 ; break ; case size : var_2 = ( var_4 ) + string_1 ; break ; case date : var_2 = ( var_5 ) + string_2 ; break ; case type : var_2 = ( ( ( var_6 ) + string_3 ) + ( var_3 ) ) + string_1 ; break ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , boolean var_2 , boolean var_3 ) { if ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) return false ; if ( var_4 ) { var_5 = method_2 ( var_1 , var_2 , var_3 ) ; var_4 = false ; } boolean var_6 = var_5 . method_1 ( ) ; if ( var_6 ) var_7 . select ( var_5 . start ( ) , var_5 . end ( ) ) ; return var_6 ; }
[0]: private type_1 method_1 ( type_2 type, java.lang.string key, java.lang.string value ) { java.lang.string var_1 = type. method_2 ( ) ; java.lang.string var_2 = type. method_3 ( ) ; type_1 text = new type_1 ( ) ; text. append ( key ) ; text. append ( string_1 ) ; text. append ( value, type_1. method_4 ( var_1, var_2 ) ) ; return text ; }

************

************
tgt: public void method_1 ( int var_1 , int height ) { var_2 = ( ( var_3 ) / height ) * var_1 ; var_4 . update ( ) ; var_7 = var_8 ; var_5 = ( ( var_8 ) / ( ( float ) ( height ) ) ) * ( ( float ) ( var_1 ) ) ; var_9 . set ( ( ( var_5 ) / int_1 ) , ( ( var_7 ) / int_1 ) , 0 ) ; var_10 . update ( ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1 ) ; for ( java.lang.string value : var_1 ) { java.lang.string [ ] var_2 = value. split ( string_1 ) ; var_3. put ( var_2 [ 0 ], java.lang.integer. method_3 ( var_2 [ 0 ] ) ) ; } var_4. put ( var_5, var_6 ) ; var_4. put ( var_7, var_8 ) ; var_4. put ( var_9, var_10 ) ; }

************

************
tgt: public void method_1 ( android.view.view view , type_1 var_1 ) { var_2 = ( ( type_2 ) ( view . method_2 ( var_3 ) ) ) ; var_4 = new type_3 ( ) ; var_2 . method_3 ( var_4 ) ; var_2 . method_4 ( 0 ) ; var_5 = ( ( type_4 ) ( view . method_2 ( var_6 ) ) ) ; var_5 . method_5 ( int_1 ) ; var_5 . method_6 ( var_2 ) ; var_5 . method_7 ( var_7 ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( ) ) { var_2 = var_1. method_3 ( ) ; var_3 = var_1. method_4 ( ) ; new java.lang.thread ( var_4 ). start ( ) ; } else { var_5. method_5 ( ) ; type_1. method_6 ( method_7 ( ), string_1, var_6 ). show ( ) ; } var_1. method_8 ( ) ; }

************

************
tgt: public synchronized void method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; try { java.lang.thread . method_2 ( ( int_1 + ( var_1 . method_3 ( int_2 ) ) ) ) ; } catch ( type_1 var_2 ) { return ; } synchronized ( var_4 ) { if ( var_3 . isempty ( ) ) { var_4 = - 1 ; } else { java.lang.system.out.print ( ( string_1 + ( var_3 . method_4 ( ) ) ) ) ; java.lang.system.out.println ( ) ; var_4 = var_3 . method_5 ( ) ; } } }
[0]: private java.lang.string method_1 ( ) { java.lang.string var_1 = null ; java.lang.string var_2 = method_2 ( string_1 ) ; if ( var_2!= null ) { java.lang.string var_3 = method_2 ( string_2 ) ; if ( var_3!= null ) { if ( var_2. equals ( var_3 ) ) { var_1 = var_2 ; } else { type_1. method_3 ( this, string_3, string_4, var_4 ) ; method_1 ( ) ; } } } return var_1 ; }

************

************
tgt: public double method_1 ( ) { double temp = method_2 ( ) ; double diff = 0.0 ; do { double var_1 = method_2 ( ) ; diff = java.lang.math.abs ( ( var_1 - temp ) ) ; temp = var_1 ; } while ( diff > float_1 ) ; return temp ; }
[0]: private boolean method_1 ( int number ) { boolean result = true ; for ( type_1 p : this. var_1. method_2 ( ) ) { type_2 var_2 = this. var_1. get ( p ) ; if ( ( p!= ( this. var_3 ) ) && (! ( var_2. method_3 ( number ) ) ) ) { result = false ; } } return result ; }

************

************
tgt: public int method_1 ( int size ) throws java.io.ioexception { byte [ ] temp = new byte [ type_1 . min ( var_1 , size ) ] ; int var_2 = 0 ; while ( var_2 != size ) { int var_3 = this . method_2 ( temp , type_1 . min ( ( size - var_2 ) , var_1 ) ) ; if ( var_3 == ( - 1 ) ) { return var_2 ; } else { var_2 += var_3 ; } } return var_2 ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. i ( string_1, var_2. content ) ; type_2 var_3 = type_3. method_2 ( var_2. content, string_2 ) ; type_4 var_4 = var_3. select ( string_3 ) ; for ( type_5 var_5 : var_4 ) { type_1. i ( string_4, var_5. text ( ) ) ; var_5. text ( method_3 ( var_5. text ( ), var_6 ) ) ; } var_2. content = var_3. tostring ( ) ; method_4 ( var_2 ) ; }

************

************
tgt: public static type_1 method_1 ( ) throws type_2 , type_3 { try { final java.lang.string var_1 = type_4 . method_2 ( type_5 . name ( ) , 0l ) ; return new type_1 ( var_1 , type_6 . method_3 ( string_1 ) ) ; } catch ( type_7 var_2 ) { throw new type_2 ( string_2 , var_2 ) ; } }
[0]: protected java.lang.string method_1 ( type_1 var_1 ) { java.lang.string url = string_1 ; java.util.collection <? extends type_2 > var_2 = var_1. method_2 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 a : var_2 ) { var_3. add ( a. method_3 ( ) ) ; } if ( var_3. contains ( string_2 ) ) { url = string_3 ; } else { url = string_4 ; } return url ; }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( ) . method_1 ( ( this . var_1 = new type_2 ( this ) ) , this ) ; type_1 . method_2 ( ) . method_1 ( new type_3 ( this ) , this ) ; type_1 . method_2 ( ) . method_1 ( new type_4 ( this ) , this ) ; type_1 . method_2 ( ) . method_1 ( new type_5 ( this ) , this ) ; type_1 . method_2 ( ) . method_1 ( new type_6 ( ) , this ) ; }
[0]: public void method_1 ( type_1 type_2 ) { output. method_2 ( ( ( type_2. method_3 ( ) ) + string_1 ) ) ; if ( ( type_2. method_4 ( ) )!= null ) { method_1 ( type_2. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , android.view.view var_2 , type_2 var_3 ) { super . method_1 ( var_1 , var_2 , var_3 ) ; var_1 . add ( 0 , var_4 , 0 , var_5 ) ; var_1 . add ( 0 , var_6 , 1 , var_7 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; boolean var_3 = true ; java.lang.system.out.println ( string_1 ) ; while ( var_3 == true ) { var_1. method_1 ( ) ; java.lang.string var_4 = var_2. method_2 ( string_2 ) ; java.lang.string result = var_1. method_3 ( var_4 ) ; java.lang.system.out.println ( result ) ; if ( result. equals ( string_3 ) ) { var_3 = false ; java.lang.system.out.println ( string_4 ) ; } } }

************

************
tgt: public static java.lang.string method_1 ( ) { if ( ( var_1 ) == null ) type_1 . method_2 ( ) ; int i = ( ( int ) ( ( ( java.lang.math.random ( ) ) * int_1 ) % ( var_1 . size ( ) ) ) ) ; if ( ( var_1 . size ( ) ) > 0 ) return var_1 . get ( i ) ; else return null ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = new type_3 ( this ) ; method_4 ( var_3 ) ; method_5 ( ). method_6 ( string_1 ) ; method_7 ( ) ; method_8 ( new type_4 ( ) ) ; }

************

************
tgt: private type_1 method_1 ( int index ) { type_1 [ ] var_1 = type_1 . values ( ) ; int var_2 = var_1 . length ; int var_3 = ( index > var_2 ) ? index / var_2 : index ; return var_1 [ ( var_3 - 1 ) ] ; }
[0]: public type_1 method_1 ( ) throws type_2, java.io.ioexception { java.lang.string line = var_1. method_2 ( ) ; if ( line == null ) { return null ; } java.lang.string var_2 = var_1. method_2 ( ) ; java.lang.string var_3 = var_1. method_2 ( ) ; java.lang.string var_4 = var_1. method_2 ( ) ; type_1 output = new type_1 ( var_2, var_3, var_4 ) ; return output ; }

************

************
tgt: public int method_1 ( android.content.intent intent , int var_1 , int var_2 ) { type_1 . i ( string_1 , ( ( ( string_2 + var_2 ) + string_3 ) + intent ) ) ; var_3 = true ; if ( intent != null ) { android.content.intent target = intent . method_2 ( string_4 ) ; if ( target != null ) method_3 ( target ) ; } return var_4 ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( var_2. method_2 ( ) ) { var_3. method_3 ( ) ; if ( var_4. contains ( values [ position ] ) ) { var_4. remove ( values [ position ] ) ; } else { var_4. add ( values [ position ] ) ; } } else { if ( var_4. contains ( values [ position ] ) ) { var_4. remove ( values [ position ] ) ; } } var_3. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.arraylist var_2 = method_2 ( var_3 , var_1 ) ; int index = 0 ; while ( index < ( var_2 . size ( ) ) ) { var_1 . method_4 ( ( ( type_1 ) ( var_2 . get ( index ) ) ) ) ; index ++ ; } }
[0]: private void method_1 ( type_1 node, type_2 var_1 ) { if ( var_2. method_2 ( var_1 ) ) return ; if ( ( var_3 ) == null ) return ; if ( var_1. contains ( var_3 ) ) var_4. add ( var_3 ) ; method_1 ( var_5, var_1 ) ; method_1 ( var_6, var_1 ) ; }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string [ ] set , java.lang.string var_1 , int offset ) { java.lang.string var_2 = set [ offset ] ; int i = 0 ; for ( java.lang.string var_3 : set ) { if ( i > offset ) var_2 = ( ( ( var_2 + string_1 ) + var_1 ) + string_1 ) + var_3 ; i ++ ; } return var_2 ; }
[0]: public java.lang.string method_1 ( java.lang.object [ ] array ) { java.lang.stringbuffer buffer = new java.lang.stringbuffer ( ) ; for ( int i = 0 ; i < ( array. length ) ; i ++ ) { if ( i > 0 ) { buffer. append ( var_1 ) ; } buffer. append ( method_2 ( array [ i ] ) ) ; } return buffer. tostring ( ) ; } return buffer. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == false ) { type_1 . i ( var_2 , string_1 ) ; method_2 ( ) ; method_3 ( ) ; var_1 = true ; } type_1 . i ( var_2 , string_2 ) ; if ( var_3 ) { type_1 . method_4 ( var_2 , string_3 ) ; } else { type_1 . i ( var_2 , string_4 ) ; var_3 = true ; var_4 = new java.util.arraylist < > ( ) ; method_5 ( ) ; method_6 ( ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { view = var_1. method_2 ( var_4, var_2, false ) ; type_4. method_3 ( this, view ) ; var_5 = ( ( type_5 ) ( getactivity ( ). getintent ( ). method_4 ( var_6 ) ) ) ; method_6 ( var_5 ) ; if ( ( var_5. method_7 ( ) ) > 0 ) { method_8 ( ) ; } return view ; }

************

************
tgt: protected long method_1 ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == int_1 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( var_1 . method_2 ( k ) ) * ( method_1 ( ( n - k ) ) ) ; } return sum / n ; }
[0]: public static type_1 method_1 ( type_2 [ ] args, type_2 expr ) { java.lang.string classname = string_1 + ( type_3. method_2 ( ). tostring ( ). replaceall ( string_2, string_3 ) ) ; type_4 var_1 = type_5. method_3 ( classname, expr, args, true, false ) ; type_6 < type_1 > var_2 = new type_6 < type_1 > ( java.lang.thread. method_4 ( ). method_5 ( ) ) ; return var_2. method_6 ( var_1 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.system.out.println ( ( string_1 + ( var_2 ) ) ) ; var_3 = var_4 . method_2 ( ) . tostring ( ) ; var_5 = var_6 . method_2 ( ) . tostring ( ) ; java.lang.string var_7 = method_3 ( ) ; method_4 ( var_3 , var_7 ) ; var_6 . method_5 ( var_5 ) ; var_2 = true ; }
[0]: protected int method_1 ( ) { var_1. method_2 ( ) ; float [ ] var_2 = new float [ int_1 ] ; var_1. method_3 ( var_2 ) ; var_3. method_4 ( var_2 ) ; int var_4 = var_3. method_1 ( var_5 ) ; var_6. method_1 ( var_4, var_7, var_8 ) ; if ( ( var_9 )!= null ) { start = type_1. method_5 ( ) ; var_10. method_6 ( 0 ) ; } return 0 ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( var_2 , var_3 ) ) { c . method_3 ( ) ; var_4 = false ; var_5 = false ; var_6 = false ; var_7 = false ; type_1 . method_4 ( var_8 , time . gettext ( ) ) ; this . add ( var_9 ) ; var_9 . method_6 ( ) ; var_9 . method_7 ( ) ; } }
[0]: public boolean method_1 ( byte [ ] data, int length ) { int var_1 = 0 ; for ( int i = 0 ; i < ( type_1. min ( length, data. length ) ) ; i ++ ) { if ( ( method_2 ( var_2 [ ( int_1 & ( data [ i ] ) ) ], var_3 [ ( int_1 & ( data [ i ] ) ) ] ) ) > 0 ) { var_1 ++ ; } else break ; } return var_1 == length ; }

************

************
tgt: private java.lang.string method_1 ( final java.lang.string var_1 ) { final java.lang.string var_4 = method_2 ( var_1 ) ; if ( var_4 != null ) { if ( ( var_4 . method_3 ( var_5 ) ) != ( - 1 ) ) { return var_4 . substring ( ( ( var_4 . method_3 ( var_5 ) ) + 1 ) ) ; } else { return var_4 ; } } return null ; }
[0]: public void method_1 ( android.view.view view ) { type_1 var_1 = var_2. method_2 ( var_3 ) ; if ( var_1 == null ) { java.lang.system.err.println ( string_1 ) ; return ; } type_2 var_4 = type_2. method_3 ( var_1, true ) ; type_3 var_5 = var_6. method_4 ( ) ; var_5. method_5 ( ). replace ( var_7, var_4 ). commit ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 ... var_2 ) { java.util.set < type_1 > var_3 = new java.util.hashset ( java.util.arrays.aslist ( var_2 ) ) ; var_4 = new type_2 ( var_1 , var_3 ) ; var_4 . method_2 ( this ) ; var_4 . method_4 ( ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( new type_2 ( ) { public void method_3 ( type_3 var_1 ) { var_2. method_4 ( var_1. tostring ( ) ) ; } public void method_5 ( ) { } public void method_6 ( java.lang.string var_3, type_3 var_4 ) { var_2. method_4 ( var_4. tostring ( ) ) ; } } ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.lang.object var_3 , type_3 var_4 ) throws java.lang.exception { if ( var_4 == null ) return ; var_4 . method_2 ( string_1 , type_4 . method_3 ( ) . method_4 ( ) ) ; java.lang.system.out.println ( ( string_2 + ( type_4 . method_4 ( ) ) ) ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( this. var_4, var_1. method_3 ( ) ) ; if ( ( var_2!= null ) && ( var_5 ) ) { return true ; } if ( var_6 ) { return false ; } if ( var_1. method_3 ( ). equals ( this. var_7 ) ) { return true ; } if ( ( this. var_8 )!= null ) { return this. var_8. method_1 ( var_1 ) ; } return false ; }

************

************
tgt: private static int method_1 ( type_1 element , java.lang.string var_1 ) { if ( element == null ) return 0 ; try { return java.lang.integer.parseint ( element . method_2 ( var_1 ) ) ; } catch ( type_2 var_2 ) { type_3 . error ( var_3 class , java.lang.string.format ( string_2 , element . tostring ( ) ) ) ; } return 0 ; }
[0]: public void method_1 ( ) { if ( ( this. var_1 )!= null ) { this. var_2. method_2 ( this. var_1 ) ; } if ( ( this. var_3 )!= null ) { this. var_3. method_3 ( this. var_4 ) ; } }

************

************
tgt: protected java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( var_1 . getname ( ) ) ; java.lang.string var_3 = message ; for ( type_4 var_4 : var_5 ) { if ( var_4 . method_3 ( ) ) { var_3 = var_4 . method_4 ( var_2 , var_3 , var_1 ) ; } } return var_3 ; }
[0]: public boolean method_1 ( type_1 var_1, float var_2, float var_3 ) { if ( var_1. method_2 ( ) ) { method_3 ( false ) ; method_4 ( false ) ; var_4. method_5 ( ) ; var_4. method_6 ( false ) ; method_7 ( var_4 ) ; method_8 ( ) ; type_2. method_9 ( ). method_10 ( var_5, this ) ; } return false ; }

************

************
tgt: public static java.lang.string method_1 ( android.content.context context , java.lang.string filename ) { java.lang.string var_1 ; try { java.io.inputstream var_2 = context . method_2 ( ) . open ( filename ) ; int size = var_2 . method_3 ( ) ; byte [ ] buffer = new byte [ size ] ; var_2 . method_4 ( buffer ) ; var_2 . method_5 ( ) ; var_1 = new java.lang.string ( buffer , string_1 ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_6 ( ) ; return null ; } return var_1 ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) { var_1. method_2 ( ). put ( var_3, var_4 ) ; type_1 var_5 = method_3 ( var_1, var_2 ) ; try { var_5. commit ( ) ; } catch ( java.io.ioexception var_6 ) { var_7. method_4 ( ) ; var_8. error ( string_1, var_6 ) ; } return var_5 ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; var_2 . method_3 ( string_1 , string_2 ) ; method_4 ( var_2 ) ; var_5 . method_5 ( var_6 ) ; var_3 = 0l ; var_1 . method_6 ( ) ; var_1 . method_7 ( ) ; var_1 = null ; }
[0]: public boolean method_1 ( ) { int [ ] var_1 = new int [ int_1 ] ; for ( int i = 0 ; i < ( string. length ( ) ) ; i ++ ) { ( var_1 [ string. method_2 ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] ) > 0 ) { return false ; } } return true ; } }

************

************
tgt: private static int method_1 ( int var_1 , java.lang.integer var_2 ) { if ( ( type_1 . method_2 ( var_2 ) ) || ( var_2 <= 0 ) ) { if ( var_1 > int_1 ) { return int_2 ; } else if ( var_1 > int_3 ) { return int_4 ; } else { return int_5 ; } } return var_2 ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { var_2. method_2 ( var_3 ) ; var_2. set ( string_1, type_3. getid ( var_1. method_3 ( ) ) ) ; var_2. set ( string_2, type_4. getid ( var_1. method_4 ( ) ) ) ; var_2. set ( string_3, var_1. method_5 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 , int var_3 , int var_4 , byte [ ] var_5 , byte [ ] var_6 ) throws type_2 { var_1 . method_2 ( var_7 ) ; var_1 . method_3 ( 1 , var_4 ) ; var_1 . method_4 ( int_1 , var_2 ) ; var_1 . method_5 ( int_2 , var_5 ) ; var_1 . method_5 ( int_3 , var_6 ) ; var_1 . method_6 ( ) ; }
[0]: public void method_1 ( boolean var_1 ) { if ( var_1 == ( var_2 ) ) { return ; } var_2 = var_1 ; var_3. settext ( ( var_2? var_4 : var_5 ) ) ; if ( ( ( var_6 ) == ( type_1. method_2 ( ) ) ) && (! var_1 ) ) { method_3 ( var_7 ) ; } }

************

************
tgt: public int method_1 ( int var_1 ) { var_1 = type_1 . method_2 ( ( var_1 + int_1 ) , int_2 ) ; int var_2 = type_1 . method_2 ( ( var_1 - ( var_3 ) ) , int_2 ) ; if ( var_2 == 0 ) { return type_1 . method_2 ( ( 1 + ( var_3 ) ) , int_2 ) ; } else if ( var_2 == 1 ) { return type_1 . method_2 ( var_3 , int_2 ) ; } else { return - 1 ; } }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) { int var_3 ; switch ( var_2 ) { case var_4 : var_3 = var_5 ; break ; case var_6 : var_3 = var_7 ; break ; default : var_3 = var_7 ; break ; } android.view.view var_8 = type_3. method_2 ( var_1. getcontext ( ) ). method_3 ( var_3, var_1, false ) ; return new type_1 ( var_8, this ) ; } return null ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = method_2 ( ) ; java.lang.object p = var_3 . iterator ( ) . method_4 ( ) ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { java.lang.object a = var_1 . method_5 ( i ) ; p = var_4 . get ( p , a ) . iterator ( ) . method_4 ( ) ; } return var_5 . contains ( p ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1 ) ; type_2 var_2 = method_3 ( ) ; java.lang.string response = var_2. path ( string_1 ). get ( var_3. string class ) ; type_3. assertthat ( response, type_4. method_4 ( string_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { this . var_1 = type_1 . getint ( string_1 , type_2 . getcolor ( method_2 ( ) , var_2 ) ) ; this . var_3 = type_1 . getint ( string_2 , type_2 . getcolor ( method_2 ( ) , var_4 ) ) ; var_5 = type_1 . getboolean ( string_3 , false ) ; var_6 = type_1 . getboolean ( string_4 , true ) ; var_7 = type_1 . getboolean ( string_5 , false ) ; var_8 = type_1 . getboolean ( string_6 , false ) ; }
[0]: public void method_1 ( type_1 var_1 ) { final java.util.list < type_2 > var_2 = new java.util.linkedlist < type_2 > ( ) ; for ( type_1 var_3 : var_1. method_2 ( ) ) { type_2 var_4 = var_3. getvalue ( var_5 class ) ; if ( ( var_6 [ 0 ] ) < ( var_4. getid ( ) ) ) { ( var_6 [ 0 ] ) ++ ; } var_2. add ( var_4 ) ; } listener. method_3 ( var_2, var_6 [ 0 ] ) ; }

************

************
tgt: protected void method_1 ( float var_1 ) { if ( ! ( type_1 . method_2 ( var_5 , var_3 ) ) ) { var_4 . remove ( var_3 ) ; method_3 ( var_5 , var_6 ) ; return ; } if ( ! ( var_6 . method_4 ( ) . equals ( var_5 . method_5 ( ) ) ) ) { var_6 . method_6 ( var_5 . method_5 ( ) ) ; } }
[0]: public type_1 < java.util.arraylist < type_2 > > method_1 ( int id, type_3 args ) { if ( var_1. method_2 ( string_1 ) ) { return new type_4 ( getactivity ( ) ) ; } else if ( var_2. method_2 ( var_1 ) ) { var_1 = string_1 ; return new type_4 ( getactivity ( ) ) ; } else { return new type_5 ( getactivity ( ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { return ( ( this . method_2 ( ) . equals ( var_1 . method_2 ( ) ) ) && ( this . method_3 ( ) . equals ( var_1 . method_3 ( ) ) ) ) && ( ( this . method_5 ( ) ) == ( var_1 . method_5 ( ) ) ) ; }
[0]: public void method_1 ( type_1 < type_2 > content ) { this. var_1 = content ; this. method_2 ( content ) ; int var_2 = ( ( var_1. method_3 ( ). size ( ) ) + 1 ) * int_1 ; this. method_4 ( var_2 ) ; this. method_5 ( var_2 ) ; this. method_6 ( var_2 ) ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( var_1 == null ) { return - 1 ; } if ( var_2 == null ) { return 1 ; } for ( java.lang.string var_3 : var_4 ) { if ( var_1 . method_2 ( ) . equals ( var_3 ) ) { return - 1 ; } if ( var_2 . method_2 ( ) . equals ( var_3 ) ) { return 1 ; } } return 0 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1, string_2, string_3, string_4 ) ; var_1. method_2 ( var_2. method_3 ( ) ) ; type_2 var_3 = new type_2 ( var_4 ) ; var_3. method_4 ( string_5 ) ; var_3. method_5 ( string_6 ) ; var_3. method_6 ( ) ; }

************

************
tgt: private java.lang.object method_1 ( type_1 var_1 ) throws java.io.ioexception { final java.util.collection array = new java.util.arraylist ( ) ; while ( true ) { method_2 ( ) ; final java.lang.object var_2 = method_3 ( var_1 ) ; if ( var_2 != ( var_3 ) ) { array . add ( var_2 ) ; } final int c = method_4 ( ) ; if ( c == char_1 ) { break ; } else if ( c != char_2 ) { error ( string_1 ) ; } } return array . method_5 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( ) ; if ( var_2. method_3 ( ) ) return ; if ( ( var_4. status )!= ( var_5 ) ) { var_2. method_4 ( ) ; return ; } var_4. method_5 ( var_1 ) ; method_6 ( var_4 ) ; }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { type_1 . i ( string_1 , string_2 ) ; java.lang.string var_1 = intent . method_2 ( ) ; if ( var_1 . equals ( var_2 ) ) { type_1 . i ( string_1 , string_3 ) ; method_3 ( context ) ; } else { type_1 . i ( string_1 , string_4 ) ; method_4 ( context ) ; } }
[0]: public void method_1 ( type_1 a ) { if ( ( ( var_1 ) == ( var_2 ) ) && ( ( a. method_2 ( ). size ( ) ) > ( var_3. size ( ) ) ) ) method_3 ( string_1 ) ; if ( ( method_4 ( ) )!= ( var_4 ) ) if ( ( a. method_2 ( ). size ( ) ) > ( method_4 ( ) ) ) method_3 ( string_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.integer , java.lang.double , java.lang.string > var_3 = new type_1 < java.lang.integer , java.lang.double , java.lang.string > ( ) { public java.lang.string method_2 ( java.lang.integer var_1 , java.lang.double var_2 ) { return ( var_1 . tostring ( ) ) + ( var_2 . tostring ( ) ) ; } } ; type_2 . assertequals ( string_1 , var_3 . method_2 ( int_1 , float_1 ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) ; method_4 ( ) ; try { type_2. method_5 ( ). method_6 ( var_3 ) ; var_4 = var_5 ; } catch ( java.io.ioexception | type_3 var_6 ) { var_6. method_7 ( ) ; type_4. method_8 ( this, var_6. method_9 ( ) ) ; } method_10 ( ) ; method_11 ( type_5. method_5 ( ). method_12 ( ) ) ; method_13 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.io.inputstream var_1 ; try { var_1 = getactivity ( ) . method_3 ( ) . method_4 ( type_1 . method_5 ( path ) ) ; var_2 . method_6 ( type_2 . method_7 ( var_1 ) ) ; var_2 . method_8 ( var_3 ) ; var_2 . method_9 ( ) ; } catch ( java.io.ioexception var_4 ) { method_10 ( var_5 ) ; var_4 . method_11 ( ) ; } }
[0]: public static final short method_1 ( byte [ ] array, int var_1 ) { short result = 0 ; result <<= int_2 ; result <<= int_2 ; result += ( array [ ( var_1 + 1 ) ] ) & int_1 ; return result ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 var_2 ) throws java.io.ioexception , type_3 { java.util.list < type_4 > var_3 = var_4 . method_2 ( ) ; var_1 . method_3 ( string_1 , string_2 ) ; if ( ( var_3 . size ( ) ) > 0 ) var_1 . method_3 ( string_3 , var_3 . get ( 0 ) . getname ( ) ) ; var_1 . method_3 ( string_4 , var_3 ) ; var_1 . method_4 ( string_5 ) . method_5 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { var_1 = var_2. method_2 ( ) ; var_3 = new java.io.filewriter ( var_4, true ) ; java.io.bufferedwriter writer = new java.io.bufferedwriter ( var_3 ) ; type_1 var_5 = new type_1 ( writer ) ; for ( type_2 i : var_1 ) { java.lang.string var_6 = i. tostring ( ) ; var_5. method_3 ( var_6 ) ; } if ( var_1. isempty ( ) ) { var_3 = new java.io.filewriter ( var_4 ) ; } var_5. method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.object [ ] temp = new java.lang.object [ ( var_1 . length ) * int_1 ] ; type_1 . method_2 ( var_1 , var_2 , temp , 0 , ( ( var_1 . length ) - ( var_2 ) ) ) ; type_1 . method_2 ( var_1 , 0 , temp , ( ( var_1 . length ) - ( var_2 ) ) , var_3 ) ; var_2 = ( temp . length ) - 1 ; var_3 = var_1 . length ; var_1 = temp ; }
[0]: public boolean method_1 ( int number ) { if ( ( number < int_1 ) || ( ( number % int_1 ) == 0 ) ) { return false ; } if ( number == int_1 ) { return true ; } for ( int var_1 = int_2 ; var_1 <= ( type_1. method_2 ( number ) ) ; var_1 += int_1 ) { if ( ( number % var_1 ) == 0 ) { return false ; } } return true ; } }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 , this ) ; if ( ( var_2 ) != null ) { type_1 . method_2 ( var_1 , string_2 , this , var_2 ) ; var_2 . method_4 ( this ) ; } else { type_1 . method_2 ( var_1 , string_3 , this ) ; } var_2 = null ; var_3 = false ; }
[0]: public static java.util.list < java.lang.string > method_1 ( java.util.list < java.lang.string > var_1 ) { if ( var_1 == null ) return null ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( var_1. size ( ) ) ; for ( java.lang.string string : var_2 ) { var_2. add ( type_1. method_2 ( char_1, string ) ) ; } return var_2 ; }

************

************
tgt: private synchronized long method_1 ( long var_1 ) throws type_1 { long var_2 = ++ ( var_3 ) ; while ( ( ( var_4 ) >= ( var_5 ) ) || ( ( var_6 . size ( ) ) >= ( var_7 ) ) ) { method_2 ( var_8 ) ; } var_9 = type_2 . method_3 ( ) ; var_6 . put ( var_2 , var_1 ) ; var_4 += var_1 ; return var_2 ; }
[0]: public static void main ( java.lang.string [ ] args ) { try { type_1 var_1 = type_2. var ( string_1, string_2 ) ; type_3. method_1 ( string_3 ) ; type_3. method_1 ( string_4 ) ; type_3. method_1 ( string_5 ) ; var_1. method_2 ( type_2. method_3 ( string_6 ) ) ; type_1 function = type_2. var ( string_6, string_7 ) ; function. method_2 ( ) ; } catch ( java.lang.exception var_2 ) { var_2. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( ( ( var_1 ) <= int_1 ) && ( ( var_2 ) < ( var_3 ) ) ) && ( method_2 ( ) ) ) { method_3 ( ) ; ( var_2 ) ++ ; } else { if ( ! ( method_2 ( ) ) ) return ; var_2 = 0 ; ( var_1 ) ++ ; if ( ( var_1 ) == 1 ) { method_4 ( var_4 ) ; } else if ( ( var_1 ) == int_1 ) { method_4 ( var_5 ) ; } } }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2. method_2 ( int_1 ) ; type_1 var_3 = type_1. method_3 ( var_1, 0, 0, var_1. method_4 ( ), var_1. method_5 ( ), var_2, true ) ; type_1 var_4 = type_1. method_6 ( var_3, var_5. method_4 ( ), var_5. method_5 ( ), true ) ; return var_4 ; }

************

************
tgt: private void method_1 ( int var_1 ) { assert var_1 >= ( var_2 ) ; type_1 [ ] temp = ( ( type_1 [ ] ) ( new java.lang.object [ var_1 ] ) ) ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { method_2 ( a , temp , i , i ) ; } a = temp ; }
[0]: protected void method_1 ( ) { ( ( type_1 ) ( context ) ). method_2 ( ). method_3 ( var_1 ) ; this. var_2. method_4 ( true ) ; this. var_2. method_5 ( false ) ; this. var_2. method_6 ( getstring ( var_3 ) ) ; this. var_2. method_7 ( ( ( string_1 + ( var_4 ) ) + string_2 ) ) ; this. var_2. show ( ) ; }

************

************
tgt: private void method_1 ( type_2 < type_3 > var_2 ) { type_3 var_4 = ( ( type_3 ) ( var_5 . method_3 ( var_2 . method_4 ( ) ) ) ) ; method_6 ( var_4 ) ; var_4 . method_7 ( ) ; var_2 . method_5 ( ) ; if ( var_4 instanceof type_4 ) { ( ( type_4 ) ( var_4 ) ) . method_8 ( var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( string_1, var_1. method_3 ( ). tostring ( ) ) ; if ( var_1. method_4 ( ). method_5 ( ). equals ( var_3. method_5 ( ) ) ) { var_4. method_6 ( var_1. method_7 ( ). method_5 ( ) ) ; var_5. add ( var_1. method_7 ( ). method_5 ( ) ) ; ( var_6 ) ++ ; } }

************

************
tgt: private boolean method_1 ( java.lang.object var_1 , type_1 var_2 , boolean var_3 ) { boolean result = ! var_3 ; if ( var_1 instanceof java.lang.string ) { if ( var_1 . equals ( var_2 . getname ( ) ) ) { result = var_3 ; } } else { if ( var_1 . equals ( var_2 ) ) { result = var_3 ; } } return result ; }
[0]: public void method_1 ( ) { while ( ( var_1. method_2 ( ) )!= ( var_2 ) ) { try { java.util.map < java.lang.thread, type_1 [ ] > var_3 = java.lang.thread. method_3 ( ) ; java.lang.system.out.println ( type_2. tostring ( var_3. get ( var_4 ) ) ) ; } catch ( type_3 var_5 ) { } } }

************

************
tgt: private void method_1 ( ) { this . var_1 = new type_1 [ var_2 ] [ var_3 ] ; for ( int y = 0 ; y < ( var_3 ) ; y ++ ) { for ( int x = 0 ; x < ( var_2 ) ; x ++ ) { char var_4 = method_2 ( x , y ) ; if ( var_4 == char_1 ) { this . var_1 [ x ] [ y ] = new type_1 ( x , y ) ; } } } }
[0]: public static void main ( java.lang.string [ ] var_1 ) throws java.io.ioexception { type_1 < type_2 > var_2 = new type_1 < type_2 > ( ) ; try { type_4. method_1 ( var_2, string_1 ) ; } catch ( java.lang.exception var_4 ) { java.lang.system.out.println ( var_4. method_2 ( ) ) ; } if ( ( var_2. method_3 ( ) )!= null ) { type_4. method_4 ( var_2 ) ; } }

************

************
tgt: public static int method_1 ( type_1 var_1 , int x , int y , int var_2 , int var_3 ) { type_2 var_4 = var_1 . method_2 ( x , y , var_2 ) ; if ( var_4 instanceof type_3 ) { return ( ( type_3 ) ( var_4 ) ) . method_3 ( var_1 , x , y , var_2 , var_3 ) ; } return var_1 . method_4 ( x , y , var_2 ) ; }
[0]: public void method_1 ( ) { double y = var_1. method_2 ( var_2 ) ; var_3. method_3 ( ( string_1 + y ) ) ; if ( ( method_4 ( ) ) || ( ( java.lang.math.abs ( y ) ) < ( var_4 ) ) ) { method_5 ( ) ; } else if ( ( java.lang.math.abs ( y ) ) > ( var_4 ) ) { method_6 ( ) ; var_5. set ( y ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { var_1 . setenabled ( true ) ; method_2 ( var_1 , true ) ; var_2 . add ( var_1 ) ; } else method_4 ( true , ( ! ( var_2 . isempty ( ) ) ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; method_2 ( var_2. method_3 ( var_1. getid ( ) ) ). method_4 ( true ) ; var_2. method_3 ( var_1 ) ; method_5 ( var_2, method_6 ( ) ). method_3 ( var_1. getid ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 args = new type_1 ( ) ; args . method_2 ( var_2 , var_1 ) ; type_2 var_3 = new type_2 ( ) ; var_3 . method_3 ( args ) ; int id = var_4 ; if ( ( method_4 ( var_5 ) ) != null ) { id = var_5 ; } method_5 ( ) . method_6 ( ) . replace ( id , var_3 ) . method_7 ( null ) . commit ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2 = getactivity ( ) ; var_3 = getactivity ( ). method_2 ( ) ; if ( ( method_3 ( ) )!= null ) { var_4 = method_3 ( ). getstring ( var_5 ) ; var_6 = method_3 ( ). getstring ( var_7 ) ; var_8 = method_3 ( ). getstring ( var_9 ) ; } var_10 = new type_2 ( var_2, this ) ; var_11 = new type_3 ( var_3, this, var_8 ) ; }

************

************
tgt: public void method_1 ( ) { try { java.lang.object var_1 = null ; while ( ( var_1 == null ) || ( ! ( var_1 . equals ( string_1 ) ) ) ) { var_1 = method_2 ( ) ; method_3 ( ) . method_4 ( ) ; } } catch ( final java.lang.throwable var_2 ) { var_2 . method_5 ( ) ; } }
[0]: public void method_1 ( ) { if ( type_1. method_2 ( ( ( string_1 + ( var_1. getname ( ) ) ) + string_2 ) ) ) { var_2. execute ( var_3. method_3 ( var_1. getname ( ) ), new type_2 < java.lang.void > ( ) { public void method_4 ( java.lang.void result ) { method_5 ( ) ; } } ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string query ) throws java.lang.exception { type_2 var_1 = var_2 . method_2 ( ( query + string_1 ) ) ; var_1 . method_3 ( ) ; type_1 result = null ; try { result = var_1 . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { } return result ; }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) throws type_1 { for ( int var_4 : var_3 ) { if ( var_4 == ( var_5 ) ) { this. var_6. method_2 ( new type_2 ( var_7, var_8 ) ) ; return ; } } if (! ( method_3 ( this. var_9, this. var_10, this. var_6 ) ) ) { this. var_6. method_2 ( new type_2 ( var_7, var_11 ) ) ; } } }

************

************
tgt: protected type_1 < java.lang.object > method_1 ( java.lang.class < ? > var_1 ) throws type_2 { type_1 < java.lang.object > var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 == null ) { var_2 = var_4 . method_2 ( var_1 ) ; if ( var_2 == null ) { var_2 = method_3 ( var_1 ) ; } } if ( method_4 ( var_2 ) ) { return null ; } return var_2 ; }
[0]: public void method_1 ( ) { if ( this. status ) { var_1. method_2 ( this. var_2, this. var_3 ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( this. var_3 ) ; this. method_3 ( ) ; } else { var_1. method_2 ( this. var_2, this. var_4 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( this. var_2 ) ; this. method_3 ( ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { if ( ( id ) < 0 ) return string_1 ; java.lang.string result ; type_2 var_3 = new type_2 ( date ) ; type_3 var_4 = type_4 . method_1 ( string_2 ) ; result = var_4 . method_2 ( var_3 ) ; if ( ( var_5 ) > 0 ) { result += ( string_3 + ( var_5 ) ) + string_4 ; } return result ; }
[0]: private void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( string_2 + ( var_1 ) ) ) ; java.lang.system.out.println ( ( string_3 + ( var_2 ) ) ) ; java.lang.system.out.println ( ( string_4 + ( var_3 ) ) ) ; java.lang.system.out.print ( ( string_5 + ( var_4 ) ) ) ; java.lang.system.out.println ( string_6 ) ; java.lang.system.out.print ( string_7 ) ; java.lang.system.out.println ( string_6 ) ; java.lang.system.out.println ( ( string_8 + ( var_5 ) ) ) ; java.lang.system.out.println ( string_10 ) ; }

************

************
tgt: public java.lang.string tostring ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 ; try { var_2 = new type_2 ( var_1 ) ; var_2 . method_1 ( this ) ; var_2 . method_2 ( ) ; return new java.lang.string ( type_3 . method_3 ( var_1 . method_4 ( ) ) ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_5 ( ) ; } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( var_2, var_3, var_4, var_1 ) ; var_5. method_3 ( var_2, var_3, var_4 ) ; var_6. method_3 ( var_2, var_3, var_4, var_1 ) ; var_6. method_4 ( var_3, var_4, var_1 ) ; var_6. method_5 ( var_3, var_4, var_1 ) ; var_6. method_6 ( var_2, var_3 ) ; var_5. method_6 ( var_2, var_3 ) ; var_6. method_7 ( var_2, var_3 ) ; }

************

************
tgt: public java.lang.boolean method_1 ( java.lang.long var_1 ) { boolean result ; if ( var_1 > 0 ) { var_2 . method_2 ( var_1 ) ; result = false ; } else { var_2 . method_3 ( var_3 , var_4 , var_5 ) ; result = true ; } var_6 . method_4 ( true ) ; return result ; }
[0]: public static type_1 method_1 ( java.lang.string date ) { java.lang.string var_1 = date. substring ( 0, int_1 ) ; java.lang.string var_2 = date. substring ( int_2, int_3 ) ; java.lang.string var_3 = date. substring ( int_4, int_5 ) ; long var_4 = new type_2 ( java.lang.integer.parseint ( var_1 ), ( ( java.lang.integer.parseint ( var_2 ) ) - 1 ), java.lang.integer.parseint ( var_3 ) ). method_2 ( ) ; return new type_1 ( var_4 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { android.content.intent var_2 = new android.content.intent ( this , var_3 class ) ; type_1 var_4 = ( ( type_1 ) ( method_2 ( var_5 ) ) ) ; java.lang.string var_6 = var_4 . gettext ( ) . tostring ( ) ; java.lang.string var_7 = method_3 ( ) ; var_6 . trim ( ) ; if ( ( method_3 ( ) ) == string_1 ) var_6 = "true" ; var_2 . method_4 ( var_8 , var_7 ) ; var_2 . method_4 ( var_9 , var_6 ) ; method_5 ( var_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { double [ ] var_1 = new double [ ] { int_1, 1, int_2, 1, int_3, int_4, int_5, int_6, int_3 } ; type_1 var_2 = new type_1 ( int_1, int_1, var_1 ) ; java.lang.system.out.println ( var_2. method_1 ( var_2. method_2 ( ) ) ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 ) ; var_1 . method_2 ( ( ( type_2 < type_3 > ) ( type_4 . method_3 ( var_3 ) ) ) ) ; var_4 = var_1 ; if ( ( var_5 ) != null ) { method_4 ( var_4 , var_5 [ 0 ] , var_5 [ 1 ] ) ; } else if ( ( var_6 ) != null ) { method_5 ( var_4 , var_6 ) ; } else { method_6 ( var_4 ) ; } }
[0]: public void method_1 ( type_1 state ) { if ( state == ( this. var_1 ) ) { return ; } switch ( state ) { case var_2 : this. method_2 ( ) ; break ; case var_3 : this. method_3 ( ) ; break ; case var_4 : this. method_4 ( ) ; } this. var_1 = state ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { java.util.iterator < type_1 > var_2 = var_3 . iterator ( ) ; int index = 0 ; while ( var_2 . method_2 ( ) ) { if ( var_2 . method_3 ( ) . method_4 ( ) . equals ( var_1 ) ) { method_5 ( var_3 . get ( index ) . method_6 ( ) ) ; var_3 . remove ( index ) ; } else index ++ ; } }
[0]: private type_1 method_1 ( type_2 type ) { if ( type. gettext ( ). equals ( string_1 ) ) { return new type_3 ( ) ; } else if ( type. equals ( string_2 ) ) { return new type_4 ( ) ; } return null ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { type_1 var_4 = new type_2 ( ) . method_2 ( var_1 ) . method_3 ( var_2 ) . method_4 ( var_3 ) . method_5 ( true ) . build ( ) ; final int result = var_5 . method_6 ( var_4 ) ; java.lang.system.out.println ( ( string_1 + result ) ) ; return result == 1 ; }
[0]: private void method_1 ( ) { method_2 ( var_1 ) ; method_3 ( ). method_4 ( true ) ; type_1 var_2 = new type_1 ( this, var_3, var_1, var_4, var_5 ) ; var_3. method_5 ( var_2 ) ; var_2. method_6 ( true ) ; var_2. method_7 ( ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( ( this . var_1 ) && ( ! var_1 ) ) { type_1 . method_2 ( ) ; } boolean var_2 = var_1 ^ ( this . var_1 ) ; this . var_1 = var_1 ; if ( var_2 && ( this . method_3 ( ) ) ) { this . method_4 ( this . var_3 ) ; } }
[0]: public void method_1 ( ) { java.util.random var_1 = new java.util.random ( var_2 ) ; var_3 = type_1. method_2 ( var_1 ) ; type_2. assertequals ( var_3. method_3 ( ), var_4 ) ; type_2. assertequals ( var_3. method_4 ( ). method_5 ( ), 0, 0 ) ; type_2. assertequals ( var_5, var_3. method_6 ( ), 1 ) ; type_2. assertequals ( var_6, var_3. method_7 ( ), 0.0f ) ; }

************

************
tgt: private void init ( ) { for ( type_1 [ ] var_1 : var_2 ) { for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_1 [ i ] = new type_1 ( var_4 . method_1 ( ( ( var_5 ) + 1 ) ) , var_4 . method_1 ( ( ( var_6 ) + 1 ) ) , var_4 . method_1 ( int_1 ) , true ) ; } } }
[0]: public type_1 method_1 ( java.lang.string var_1, type_2 position, float var_2, float var_3, float var_4, float var_5 ) { long var_6 = type_3. method_2 ( ) ; type_1 var_7 = new type_1 ( var_8. get ( var_1 ), 0, var_9. get ( var_1 ), position, var_2, var_3, var_4, var_5 ) ; var_10. add ( var_7 ) ; return var_7 ; }

************

************
tgt: protected void method_1 ( long var_1 , java.util.map < java.lang.string , java.lang.object > var_2 ) { if ( ( this . var_3 ) && ( var_1 > 0 ) ) { final long var_4 = type_1 . method_2 ( var_1 ) ; final long var_5 = type_1 . method_3 ( ( var_1 - ( type_2 . method_3 ( var_4 ) ) ) ) ; java.lang.string time = java.lang.string.format ( string_1 , var_4 , var_5 ) ; if ( time != null ) { var_2 . put ( var_6 , time ) ; } } }
[0]: public type_1 method_1 ( int id, java.lang.string content ) { type_2 var_1 = new type_2 ( ) ; type_3 var_2 = var_1. method_2 ( content, var_3 class ) ; if ( var_2!= null ) { throw new type_4 ( var_4 ) ; } try { var_5. method_1 ( var_2 ) ; } catch ( type_5 var_6 ) { var_6. method_3 ( ) ; type_1. status ( var_4 ) ; } return type_1. status ( int_1 ). build ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . method_2 ( false ) ; type_2 . method_3 ( ) . method_4 ( ) . add ( var_1 ) ; type_3 . assertthat ( type_4 . method_5 ( var_2 ) . method_6 ( type_5 . method_7 ( var_3 ) , null ) . method_8 ( new type_6 ( string_2 , "name" , string_3 ) ) , type_7 . method_9 ( ) ) ; }
[0]: public java.util.arraylist < type_1 > method_1 ( ) { method_2 ( ) ; if ( ( results. size ( ) ) < 0 ) method_3 ( int_1 ) ; if ( ( results. size ( ) ) < 0 ) method_4 ( ) ; if ( ( results. size ( ) ) < 0 ) method_3 ( int_2 ) ; if ( ( results. size ( ) ) < 0 ) method_3 ( 1 ) ; return results ; }

************

************
tgt: public type_1 method_1 ( java.lang.integer var_1 , type_1 var_2 ) { type_1 var_3 = var_4 . method_1 ( var_2 . getname ( ) , var_2 . method_2 ( ) , var_1 ) ; type_2 . info ( java.lang.string.format ( string_1 , var_2 . getname ( ) ) ) ; return var_3 ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; java.lang.string var_2 = type_1. method_3 ( var_3 ) ; java.lang.string min = type_1. method_3 ( var_4 ) ; method_4 ( var_5. gettext ( ). tostring ( ), var_2, min ) ; method_5 ( var_5. gettext ( ). tostring ( ), var_2, min, var_6, var_7 ) ; }

************

************
tgt: public void method_1 ( final type_1 key , final type_2 array ) { if ( ( ( this . var_1 ) == null ) || ( ! ( this . var_1 . method_1 ( key , array ) ) ) ) { type_2 obj = type_3 . method_2 ( ) ; this . var_1 = new type_4 ( key , obj ) ; } }
[0]: private void method_1 ( ) { android.content.context context = method_2 ( ) ; var_2 = ( ( type_2 ) ( context. method_3 ( var_3 ) ) ) ; var_4 = new android.content.intent ( context, var_5 class ) ; var_4. method_4 ( var_6, var_7 ) ; var_4. method_4 ( string_2, string_3 ) ; var_8 = type_3. method_5 ( context, 0, var_4, 0 ) ; var_2. method_6 ( var_9, type_4. method_7 ( ), int_1, var_8 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , int var_2 ) { java.lang.string temp = var_1 ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < var_2 ; i ++ ) { var_3 . append ( temp . substring ( 1 ) ) ; var_3 . append ( temp . substring ( 0 , 1 ) ) ; temp = var_3 . tostring ( ) ; var_3 = new java.lang.stringbuilder ( ) ; } return temp ; }
[0]: private void method_1 ( ) { this. var_1. settext ( string_1 ) ; this. var_2. settext ( string_2 ) ; this. var_3. method_2 ( true ) ; this. var_4. method_2 ( true ) ; this. var_5. method_2 ( true ) ; this. var_6. method_2 ( true ) ; this. var_7. method_3 ( ( var_8 ) - > { java.lang.system.exit ( 0 ) ; } ) ; }

************

************
tgt: public type_1 method_1 ( boolean var_1 ) { type_1 var_2 = ( var_1 ) ? new type_2 ( this ) : new type_3 ( this ) ; var_2 . method_2 ( ) . method_3 ( true ) ; var_2 . method_2 ( ) . method_4 ( ) ; method_5 ( var_2 ) ; var_2 . method_7 ( type_4 . method_6 ( ) , ( ( ( ! ( var_3 . get ( ) ) ) && ( var_4 . get ( ) ) ) && ( var_5 . get ( ) ) ) ) ; return var_2 ; }
[0]: public void show ( ) { super. show ( ) ; var_1. method_1 ( var_2, string_1 ) ; var_3 = new type_1 ( new type_2 ( var_4. method_2 ( ), var_4. method_3 ( ) ) ) ; var_5 = var_6. method_4 ( ) ; var_7 = var_5. getcolor ( var_8 ) ; var_9. method_5 ( var_3 ) ; method_6 ( ) ; var_10 = new type_3 ( var_6. method_7 ( ), var_6. method_8 ( ) ) ; var_10. method_9 ( ) ; }

************

************
tgt: public void method_1 ( type_1 ... var_1 ) { java.util.hashset < type_1 > var_2 = new java.util.hashset < type_1 > ( ) ; for ( type_1 position : var_1 ) { position = position . method_2 ( 1 ) ; method_3 ( position , var_2 ) ; method_3 ( position . method_4 ( 1 ) , var_2 ) ; method_3 ( position . method_4 ( ( - 1 ) ) , var_2 ) ; } for ( type_1 position : var_2 ) { var_3 . method_5 ( position , false ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( var_3 ) ; type_1. method_3 ( ) ; type_2. method_4 ( ) ; type_3. method_5 ( ) ; android.content.intent intent = new android.content.intent ( this, var_4 class ) ; intent. method_6 ( string_1, int_1 ) ; method_7 ( intent ) ; type_4. method_8 ( this, ( var_5 + string_2 ), var_6 ). show ( ) ; }

************

************
tgt: private void method_1 ( int [ ] var_1 ) { if ( ( var_1 . length ) == 0 ) { return ; } for ( int i : var_1 ) { if ( i == ( var_2 ) ) { return ; } } method_2 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; var_2. method_2 ( var_1 ) ; final type_2 var_3 = ( ( type_2 ) ( method_3 ( this, x, y ). method_4 ( ) ) ) ; return ( var_3!= null ) && ( var_3 == ( this ) ) ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { var_2 = var_1 ; if ( ( method_2 ( ) ) != 0 ) { type_1 . method_1 ( method_2 ( ) , var_1 ) ; } if ( var_1 ) { method_3 ( ) ; } else { method_4 ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { type_2 var_1 = type_3. method_2 ( ) ; try { return method_1 ( var_2, var_1 ) ; } catch ( type_4 var_3 ) { var_4. error ( var_3. method_3 ( ), var_3 ) ; method_4 ( var_1 ) ; throw new type_5 ( var_3. method_3 ( ) ) ; } }

************

************
tgt: private boolean method_1 ( type_1 var_1 , type_2 var_2 , boolean var_3 , type_3 var_4 ) { boolean var_5 = ( type_4 . name ( ) . equals ( var_1 . method_2 ( ) ) ) && ( ! var_3 ) ; boolean var_6 = var_2 . method_3 ( ) ; boolean var_7 = ( type_5 . method_4 ( var_8 , var_4 , var_1 . method_5 ( ) ) ) == null ; boolean var_9 = var_6 || ( var_5 && var_7 ) ; return var_9 ; }
[0]: private void method_1 ( ) { final java.lang.string filename = type_1. method_2 ( this, type_2. method_3 ( ), string_1 ) ; if (! ( filename. isempty ( ) ) ) try { final type_3 var_1 = type_4. method_4 ( filename ) ; final type_5 var_2 = method_5 ( var_1 ) ; type_6. method_6 ( var_3, var_2 ) ; } catch ( java.lang.exception var_4 ) { type_7. method_7 ( this, ( string_2 + ( var_4. method_8 ( ) ) ), string_3 ) ; } }

************

************
tgt: public boolean method_1 ( type_2 var_2 , type_1 var_1 ) { type_3 var_4 = new type_3 ( var_2 , var_1 ) ; if ( ( var_4 . size ( ) ) == 0 ) { return false ; } boolean var_5 = var_4 . method_2 ( ) ; if ( var_5 ) { return false ; } java.util.list < java.util.list < java.lang.integer > > var_6 = var_4 . method_3 ( ) ; if ( method_1 ( var_6 , var_4 , var_1 ) ) { return true ; } return false ; }
[0]: public java.util.iterator < type_1 > iterator ( ) { java.lang.system.err.println ( string_1 ) ; try { method_1 ( ) ; } catch ( java.io.ioexception var_1 ) { var_1. method_2 ( ) ; } catch ( type_2 var_1 ) { var_1. method_2 ( ) ; } catch ( type_3 var_1 ) { var_1. method_2 ( ) ; } return super. iterator ( ) ; }

************

************
tgt: protected void method_1 ( ) { if ( ( var_3 ) != null ) { long var_1 = type_1 . method_2 ( ( ( var_2 ) + ( var_3 . getid ( ) ) ) , 0 ) ; if ( ( ( type_2 . method_3 ( ) ) - var_1 ) > ( var_4 ) ) method_4 ( false ) ; } }
[0]: public type_1 method_1 ( ) { type_1 var_1 = method_2 ( ( ++ ( var_2 ) ) ) ; var_1. method_3 ( var_2 ) ; if ( var_1 == null ) { var_1 = method_2 ( ( -- ( var_2 ) ) ) ; } return var_1 ; }

************

************
tgt: public type_1 [ ] method_1 ( type_2 var_1 , int offset ) { java.util.list < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; var_1 . method_2 ( ) ; return var_2 . method_3 ( new type_1 [ var_2 . size ( ) ] ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) )!= null ) { var_2. update ( var_1 ) ; return var_1. method_2 ( ). tostring ( ) ; } else { return var_2. method_3 ( var_1 ). tostring ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { java.io.inputstream var_1 = new type_2 ( type_3 . method_2 ( string_1 ) . method_3 ( ) ) ; type_4 var_2 = type_4 . method_4 ( ) . method_5 ( type_5 . method_6 ( var_1 ) ) . build ( ) ; type_6 var_3 = var_2 . method_8 ( ) ; return new type_7 ( var_3 , string_2 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( ( var_1 == ( var_3 ) ) && ( var_1. method_2 ( var_2 ) ) ) var_4 = true ; if ( method_3 ( var_1 ) ) var_5 += var_1. method_4 ( var_2 ) ; var_6 += method_4 ( var_1, var_2 ) ; var_7. remove ( var_1 ) ; var_8 = new type_3 ( var_9, var_7 ) ; }

************

************
tgt: public void method_1 ( final java.lang.string var_1 ) throws type_1 { this . var_2 . info ( java.lang.string.format ( string_1 , method_2 ( ) , var_1 ) ) ; final java.lang.string var_3 = java.lang.string.format ( string_2 , method_3 ( var_1 ) ) ; try { method_4 ( var_3 ) ; } catch ( final type_1 var_4 ) { this . var_2 . error ( java.lang.string.format ( string_3 , method_2 ( ) , var_1 ) , var_4 ) ; throw var_4 ; } }
[0]: public type_1 put ( type_2 key, type_1 value ) { type_1 var_1 = get ( key ) ; if ( value instanceof type_3 ) { var_2. put ( key, ( ( type_3 ) ( value ) ) ) ; } else { var_3. put ( key, value ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( new type_1 ( type_2 . method_3 ( ) , var_2 . method_4 ( ) , var_2 . method_5 ( ) , var_2 . method_6 ( ) , var_2 . method_7 ( ) , var_2 . method_8 ( ) , var_2 . method_9 ( ) , var_3 ) ) ; }
[0]: private void method_1 ( ) { java.lang.integer [ ] result = new java.lang.integer [ ( var_1. length ) * int_1 ] ; int i ; for ( i = 0 ; i < ( var_1. length ) ; i ++ ) { result [ i ] = var_1 [ i ] ; } while ( i < ( result. length ) ) { result [ i ] = null ; } var_1 = result ; i ++ ; } }

************

************
tgt: public java.lang.charsequence method_1 ( int position ) { if ( position < ( data . method_2 ( ) ) ) { java.lang.object item = data . method_3 ( position ) ; if ( item instanceof type_1 ) { return ( ( type_1 ) ( item ) ) . key ; } if ( item instanceof type_2 ) { return ( ( type_2 ) ( item ) ) . key ; } } return string_1 ; }
[0]: public static java.lang.string method_1 ( java.lang.string filename ) throws java.lang.exception { java.io.inputstream var_1 = new java.io.fileinputstream ( filename ) ; java.io.bufferedreader buf = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.string line = buf. method_2 ( ) ; java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; while ( line!= null ) { var_2. append ( line ). append ( "\n1 ) ; line = buf. method_2 ( ) ; } return var_2. tostring ( ) ; }

************

************
tgt: private void method_1 ( ) { android.content.intent intent = new android.content.intent ( string_1 ) ; intent . method_2 ( string_2 , false ) ; method_3 ( intent ) ; if ( ( var_1 ) != null ) { method_4 ( var_1 ) ; } if ( ( id ) != ( - 1 ) ) { var_2 . method_5 ( id ) ; } method_6 ( ) ; method_7 ( new android.content.intent ( this , var_3 class ) ) ; }
[0]: public static java.util.arraylist < type_1 > method_1 ( java.util.arraylist < type_1 > list, java.util.arraylist < type_2 > var_1 ) { java.util.arraylist < type_1 > result = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : list ) { for ( type_2 var_3 : var_2. method_2 ( ) ) { if ( var_1. contains ( var_3 ) ) result. add ( var_2 ) ; break ; } } return result ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( method_3 ( ) ) ; type_3 var_2 = var_1 . method_4 ( ) ; var_2 . method_5 ( var_3 , false ) ; var_2 . method_6 ( var_4 , string_1 ) ; var_2 . method_6 ( var_5 , string_1 ) ; var_2 . commit ( ) ; method_8 ( ) ; }
[0]: public boolean method_1 ( ) throws java.io.ioexception { method_2 ( ) ; if ( ( var_1 ) > ( var_2 ) ) { if ( ( ( var_3 ) & ( var_4 ) )!= 0 ) { return false ; } else { var_5. method_3 ( var_1 ) ; } } method_4 ( ) ; method_5 ( var_1, true ) ; var_6 = var_1 ; ( var_1 ) ++ ; return true ; } }

************

************
tgt: public java.lang.string method_1 ( ) { method_2 ( ) ; int var_2 = java.lang.integer.parseint ( var_3 . method_3 ( string_1 ) ) ; type_1 var_1 = var_4 . method_4 ( var_2 ) ; var_3 . method_5 ( string_2 , var_1 ) ; var_3 . method_5 ( string_1 , var_2 ) ; return string_3 ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } if ( ( var_2 )!= null ) { var_2. method_1 ( ) ; var_2. method_3 ( ) ; var_2 = null ; } if ( ( var_3 )!= null ) { method_4 ( ) ; } }

************

************
tgt: public type_1 method_1 ( final type_2 context ) { final type_3 method = type_4 . get ( ) ; final java.lang.object [ ] params = type_5 . get ( ) ; type_4 . remove ( ) ; type_5 . remove ( ) ; return new type_6 ( ) { public java.lang.object method_2 ( final type_7 context ) throws java.lang.exception { if ( method != null ) { method . method_3 ( context . method_4 ( ) , params ) ; } return context . method_5 ( ) ; } } ; }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 ; java.util.list < type_3 > var_2 ; var_3. method_2 ( string_1, var_4 ) ; var_1 = var_5. method_3 ( ) ; for ( type_4 var_6 : var_7 ) { var_2 = var_5. method_4 ( var_1, var_6 ) ; var_5. method_5 ( var_2, var_6 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 , type_2 , type_3 , java.io.ioexception , type_4 , type_5 , type_6 { method_1 ( ) ; new type_7 ( ) . method_2 ( string_1 , string_2 , java.lang.integer.parseint ( string_3 ) , string_4 , int_1 , 0 , int_2 , true , int_1 ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_1. method_2 ( this. var_3 ) ; var_1. method_2 ( this. title ) ; var_1. method_2 ( this. var_4 ) ; var_1. method_3 ( this. var_5 ) ; var_1. method_2 ( this. var_6 ) ; var_1. method_4 ( ( this. var_7? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; }

************

************
tgt: public java.lang.object method_1 ( ) { final int n = var_1 . size ( ) ; if ( n == 0 ) { return 0l ; } for ( int i = ( var_2 . size ( ) ) - 1 ; i >= 0 ; -- i ) { if ( ( var_2 . get ( i ) ) == n ) { var_2 . set ( i , ( n - 1 ) ) ; } } return var_1 . remove ( ( n - 1 ) ) ; }
[0]: private void method_1 ( ) { if ( method_2 ( ) ) { type_1 var_1 = new type_1 ( var_2. method_3 ( ), var_3. get ( 0 ). var_4 ) ; type_2. method_4 ( this, string_1, var_3. get ( 0 ). var_4, var_1 ) ; var_3. set ( 0, var_1 ) ; } else { type_2. method_4 ( this, string_2 ) ; } }

************

************
tgt: private void method_1 ( type_1 message ) { var_1 = message . method_2 ( ) ; var_2 = message . method_3 ( ) ; type_2 var_3 = method_4 ( ) ; var_3 . put ( var_4 , var_1 ) ; var_3 . put ( var_5 , var_2 ) ; method_5 ( var_3 ) ; var_6 . method_6 ( string_1 ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = null ; try { java.io.inputstream var_2 = this. method_2 ( ). open ( string_1 ) ; int size = var_2. method_3 ( ) ; byte [ ] buffer = new byte [ size ] ; var_2. method_4 ( buffer ) ; var_2. method_5 ( ) ; var_1 = new java.lang.string ( buffer, string_2 ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_6 ( ) ; return null ; } return var_1 ; }

************

************
tgt: public void update ( float var_1 ) { type_1 . method_1 ( ( ( type_1 . method_2 ( ) ) + ( ( ( type_2 . method_3 ( ) ) * var_1 ) * float_1 ) ) ) ; type_1 . method_4 ( ( ( type_1 . method_5 ( ) ) + ( ( ( type_3 . method_3 ( ) ) * var_1 ) * float_1 ) ) ) ; if ( ( var_2 ) != null ) { var_2 . update ( var_1 ) ; var_2 . method_6 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( var_2, string_1 ) ; if ( var_1!= null ) { var_3 = var_1 ; if ( ( method_3 ( ) ) == null ) { type_2. method_2 ( var_2, string_2 ) ; } else { type_2. method_2 ( var_2, string_3 ) ; } method_3 ( ). method_4 ( var_4, null, this ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int var_2 , long id ) { type_2 . method_2 ( var_3 , ( string_1 + var_2 ) ) ; type_3 var_4 = ( ( type_3 ) ( var_1 . method_3 ( ) ) ) ; if ( var_4 != null ) { var_4 . method_4 ( true ) ; int var_5 = var_4 . method_5 ( var_2 ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = method_2 ( ). method_3 ( var_2 ) ; if ( (! ( var_3 ) ) && ( var_1 instanceof type_2 ) ) { var_4 = null ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string token ) throws type_2 , type_3 { method_2 ( token ) ; java.util.list < type_1 > result ; try { result = var_1 . method_3 ( ) ; } catch ( type_4 var_2 ) { throw new type_2 ( var_2 ) ; } return result ; }
[0]: public boolean method_1 ( final java.lang.string name, final int var_1 ) { type_1 var_2 = method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; var_3. put ( var_4, name ) ; var_3. put ( var_5, var_1 ) ; final long var_6 = var_2. method_3 ( var_7, null, var_3 ) ; return var_6!= 1 ; }

************

************
tgt: public static java.util.calendar method_1 ( java.lang.string var_1 ) throws type_1 { type_2 . method_2 ( false ) ; var_1 = var_1 . trim ( ) ; java.util.calendar var_2 = java.util.calendar.getinstance ( ) ; var_2 . method_3 ( type_2 . method_4 ( var_1 ) ) ; if ( ! ( type_3 . method_5 ( var_2 ) . tolowercase ( ) . equals ( var_1 . tolowercase ( ) ) ) ) { throw new type_1 ( var_1 , 0 ) ; } return var_2 ; }
[0]: public void method_1 ( android.content.context context, type_1 var_1, int [ ] var_2 ) { super. method_1 ( context, var_1, var_2 ) ; type_2. method_2 ( var_3, string_1 ) ; var_4. context = context ; context. method_3 ( new android.content.intent ( context, var_5 class ) ) ; type_2. method_2 ( var_3, string_2 ) ; }

************

************
tgt: public int method_1 ( ) { final int var_1 = int_1 ; int result = 1 ; result = ( var_1 * result ) + ( ( var_2 ) == null ? 0 : var_2 . method_1 ( ) ) ; result = ( var_1 * result ) + ( ( var_3 ) == null ? 0 : var_3 . tolowercase ( ) . method_1 ( ) ) ; return result ; }
[0]: private void method_1 ( ) { final boolean var_1 = ( var_2 )!= null ; var_3. method_2 ( ( var_1? var_4 : var_5 ) ) ; if (! var_1 ) { return ; } final java.lang.string var_6 = method_3 ( ) ; var_7 = false ; var_2. settext ( var_6 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; int index = var_2 . method_4 ( ) ; android.content.intent intent = new android.content.intent ( var_1 . getcontext ( ) , var_5 class ) ; intent . method_5 ( string_1 , var_6 ) ; intent . method_5 ( string_2 , index ) ; method_6 ( intent ) ; }
[0]: public void method_1 ( type_1 var_1 ) { try { var_2 = null ; type_2. method_2 ( var_3, ( string_1 + ( var_1. method_3 ( ) ) ) ) ; var_4. method_4 ( false ) ; } catch ( java.lang.exception var_5 ) { var_5. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( double var_1 ) { if ( ( ( this . method_2 ( ) . method_3 ( ) ) + ( var_1 * ( this . method_5 ( ) ) ) ) <= int_1 ) { this . method_2 ( ) . method_4 ( ( ( this . method_2 ( ) . method_3 ( ) ) + ( var_1 * ( this . method_5 ( ) ) ) ) ) ; } else { this . method_2 ( ) . method_4 ( float_1 ) ; } }
[0]: public static type_1 method_1 ( int value ) { switch ( value ) { case int_1 : case int_2 : return var_1 ; case int_3 : case int_4 : return var_2 ; case int_5 : case int_6 : return var_3 ; case int_7 : case int_8 : return var_4 ; case int_9 : case int_10 : return var_5 ; case int_11 : case int_12 : return var_6 ; default : return null ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . i ( string_1 , string_2 ) ; super . method_1 ( var_1 ) ; init ( ) ; var_2 = type_3 . method_2 ( this ) ; var_3 = method_3 ( ) ; var_4 = type_4 . method_4 ( ) . method_5 ( ) ; var_5 = new type_5 ( ) ; method_6 ( var_5 , new type_6 ( var_6 ) ) ; type_7 . method_7 ( this ) ; type_8 . get ( ) . method_8 ( var_7 , this ) ; }
[0]: private type_1 method_1 ( java.lang.object arg ) { if ( arg instanceof type_2 ) { type_2 p = ( ( type_2 ) ( arg ) ) ; return p. method_2 ( ). method_3 ( ) ; } else if (! ( arg instanceof type_3 ) ) { return type_4. method_4 ( arg ) ; } return null ; }

************

************
tgt: public type_1 get ( ) throws java.io.ioexception { if ( ( var_1 != null ) && ( var_3 != null ) ) { synchronized ( var_1 ) { long var_2 = type_2 . get ( var_3 , var_1 , var_4 ) ; if ( var_2 > ( - 1 ) ) { return ( ( type_1 ) ( values [ ( ( int ) ( var_2 ) ) ] ) ) ; } } } return null ; }
[0]: public boolean method_1 ( java.lang.string value ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_3. method_2 ( i ) ) ) ; if ( ( var_2. tolowercase ( ). compareto ( value. tolowercase ( ) ) ) == 0 ) return true ; } return false ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; type_3 var_5 = new type_3 ( this ) ; if ( var_5 . method_5 ( ) ) { var_3 . settext ( ( ( ( string_1 + ( var_5 . method_6 ( ) ) ) + string_2 ) + ( var_5 . method_7 ( ) ) ) ) ; } else { var_5 . method_8 ( ) ; } }
[0]: public < type_1 > type_1 method_1 ( final java.io.inputstream content, final java.lang.class < type_1 > type ) throws type_2, type_3 { try { return this. var_1. method_2 ( new type_4 ( content ), type ) ; } catch ( type_2 | type_3 var_2 ) { type_5. method_3 ( var_2, ( ( ( ( string_1 + type ) + string_2 ) + content ) + string_3 ) ) ; throw var_2 ; } }

************

************
tgt: private int method_1 ( ) { java.lang.system.out.print ( string_1 ) ; int var_1 ; while ( true ) { var_1 = method_2 ( ) ; type_1 var_2 = method_3 ( var_1 ) ; if ( var_2 == null ) { java.lang.system.out.println ( string_4 ) ; } else if ( ( var_2 . method_4 ( ) ) == var_1 ) { java.lang.system.out.println ( ( ( string_2 + ( var_2 . getname ( ) ) ) + string_3 ) ) ; continue ; } break ; } return var_1 ; }
[0]: public void method_1 ( ) { var_1 = this ; if ( type_1. method_2 ( var_2, false ) ) { type_2. method_3 ( var_3 ) ; } else { type_2. method_3 ( var_4 ) ; } super. method_1 ( ) ; type_3. method_4 ( this ) ; type_4. method_5 ( this ) ; }

************

************
tgt: public void method_1 ( type_1 output ) { type_2 tmp ; output . method_2 ( string_1 ) ; while ( this . results . method_3 ( ) ) { tmp = this . results . method_4 ( ) ; output . method_2 ( tmp . method_5 ( ) ) ; } output . method_2 ( string_2 ) ; output . method_6 ( ) ; }
[0]: private int method_1 ( ) { int var_1 = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( type_1. size ( ) ) ; i ++ ) { if ( ( var_2. method_2 ( ) ) >= ( type_1. get ( i ). method_2 ( ) ) ) var_1 = ( type_1. size ( ) ) - ( ++ count ) ; } return var_1 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return false ; } if ( ( ( var_1 . method_2 ( ) . gettime ( ) ) + ( var_1 . method_3 ( ) ) ) > ( type_2 . method_4 ( ) ) ) { if ( ( ( var_1 . method_5 ( ) . gettime ( ) ) + ( ( int_1 * int_2 ) * int_3 ) ) > ( type_2 . method_4 ( ) ) ) { return true ; } } return false ; }
[0]: public static java.net.url method_1 ( int var_1 ) { try { final java.net.url url = type_1. method_2 ( type_2. replaceall ( var_2, java.lang.integer.tostring ( var_1 ) ), int_1 ) ; if (! ( type_3. method_3 ( url ) ) ) { throw new type_4 ( ( string_1 + var_1 ) ) ; } return url ; } catch ( java.io.ioexception var_3 ) { throw new type_5 ( var_3 ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string src , type_1 var_1 ) throws java.io.ioexception { if ( ( src == null ) || ( var_1 == null ) ) { throw new type_2 ( string_1 ) ; } method_2 ( src ) ; java.util.list < type_1 > var_2 = type_3 . method_3 ( 1 ) ; var_2 . add ( var_1 ) ; try { method_4 ( src , var_2 ) ; } catch ( java.io.ioexception var_3 ) { throw new java.io.ioexception ( string_2 ) ; } this . var_4 . method_1 ( src , var_1 ) ; }
[0]: public static type_1 method_1 ( final type_2 var_1 ) { return new type_3 ( ) { java.util.iterator var_2 = var_1. method_2 ( ). iterator ( ) ; public boolean method_3 ( ) { return var_2. method_3 ( ) ; } public java.lang.object method_4 ( ) { return var_2. method_4 ( ) ; } } ; } }

************

************
tgt: private void method_1 ( int var_1 , type_1 var_2 ) { for ( int i = var_3 ; ( i < ( ( var_4 ) + ( var_3 ) ) ) && ( i < ( ( type_2 . size ( ) ) - 1 ) ) ; ++ i ) { if ( var_1 == ( ( type_2 . get ( i ) . method_2 ( ) ) % ( var_5 ) ) ) { type_2 . get ( i ) . method_3 ( var_2 ) ; break ; } } }
[0]: private void method_1 ( int answer ) { var_1. add ( new type_1 ( var_2. get ( ( ( counter ) - 1 ) ), answer, ( ( ( var_3 ) * 1.0 ) / ( var_4 ) ), ( ( type_2. method_2 ( ) ) - ( starttime ) ), counter, var_5, new type_3 ( this. method_3 ( ). method_4 ( ) ), ( ( var_6 ) && ( ( counter ) < int_1 ) ) ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ! ( var_1 instanceof type_4 ) ) { return false ; } type_2 < type_3 > var_2 = ( ( type_4 ) ( var_1 ) ) . method_2 ( ) ; if ( ( var_2 . method_3 ( ) ) && ( ( var_2 . get ( ) . method_4 ( ) ) == ( var_3 ) ) ) { event . method_5 ( 0 ) ; return true ; } return false ; }
[0]: private int method_1 ( int var_1, int var_2, int var_3 ) { if ( var_3 == 0 ) return 0 ; int var_4 = var_3 / ( var_5 ) ; int var_6 = var_3 - ( var_4 * ( var_5 ) ) ; return ( java.lang.math.abs ( ( var_1 - var_4 ) ) ) + ( java.lang.math.abs ( ( var_2 - var_6 ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , int [ ] start , int [ ] end , int size , java.lang.string var_2 ) { var_3 . method_1 ( var_1 , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , var_2 ) ; }
[0]: public int method_1 ( java.lang.string var_1, int var_2, int var_3 ) { type_1 event = var_4. method_2 ( ( ( var_5 ) ++ ) ) ; assertequals ( var_6, var_7 ) ; assertequals ( var_8, var_1 ) ; assertequals ( var_9, var_2 ) ; assertequals ( var_10, var_3 ) ; return ( var_11 ) ++ ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_1 . get ( ) ; type_2 var_2 = new type_2 ( ) ; final type_3 var_3 = new type_4 ( ) . method_2 ( ) ; final java.lang.string var_4 = this . method_3 ( ) ; var_1 . method_4 ( new type_5 ( string_1 , string_2 , var_4 ) ) ; }
[0]: public void method_1 ( android.content.intent var_1 ) { var_2. method_2 ( string_1 ) ; if ( var_3. method_3 ( ) ) { var_2. info ( string_2 ) ; method_4 ( ) ; } else { var_2. info ( string_3 ) ; } super. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( final android.content.intent intent , final type_1 var_1 , final type_2 var_2 , final type_3 var_3 , final int var_4 , final java.lang.string var_5 , final type_4 var_6 ) { var_7 . method_2 ( intent , new type_5 ( ) { public void method_3 ( ) { var_8 super . method_1 ( intent , var_1 , var_2 , var_3 , var_4 , var_5 , var_6 ) ; } } ) ; }
[0]: public type_1 method_1 ( final type_2 var_1 ) { final type_3 var_2 = new type_3 ( ) ; var_2. method_2 ( new type_4 ( ), var_3 ) ; var_2. method_3 ( int_1 ) ; var_2. method_4 ( true ) ; var_2. method_5 ( true ) ; var_2. method_6 ( var_4 ) ; var_2. method_7 ( var_5 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 . method_2 ( false ) ; try { var_3 = method_3 ( ) ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } var_2 . method_1 ( this , var_1 , var_3 ) ; }
[0]: private type_1 getvalue ( type_2 var_1, type_3 context ) { type_4 var_2 = ( ( type_4 ) ( context. getcontext ( ) ) ) ; type_5 var_3 = var_2. value ( 0 ) ; type_1 var_4 ; if ( ( var_3. method_1 ( ) )!= null ) { var_4 = var_5. get ( var_3. method_1 ( ). gettext ( ) ) ; } else { var_4 = new type_1 ( var_3. string ( ). gettext ( ) ) ; } return var_4 ; }

************

************
tgt: public type_1 method_1 ( type_2 < type_3 > token ) throws type_4 , type_5 { type_3 var_1 = token . getvalue ( ) ; return type_1 . status ( var_2 ) . method_3 ( type_6 . method_4 ( type_6 . method_5 ( var_3 , var_4 ) ) ) . build ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( this, new type_3 ( ) ) ; var_2 = new type_4 ( ) ; var_3 = new type_5 ( ) { public void method_3 ( ) { android.content.intent intent = new android.content.intent ( var_4 this, var_5 class ) ; method_4 ( intent ) ; method_5 ( ) ; } } ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 , java.lang.exception var_2 ) { var_3 = ( ( var_2 . getclass ( ) . getname ( ) ) + string_1 ) + var_1 ; java.lang.string msg = var_2 . method_2 ( ) ; if ( msg != null ) var_3 = ( ( var_3 ) + string_2 ) + ( var_2 . method_2 ( ) ) ; }
[0]: private java.util.set < type_1 > method_1 ( final type_2 var_1 ) { final java.util.hashset < type_1 > var_2 = new java.util.hashset < > ( ) ; for ( final type_3 p : this. method_2 ( ) ) { final java.util.set < type_1 > var_3 = p. method_3 ( var_1 ) ; if ( var_3!= null ) { var_2. method_4 ( p. method_3 ( var_1 ) ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( java.lang.long var_1 , java.lang.long var_2 ) { long starttime = ( var_1 == null ) ? 0l : var_1 ; long endtime = ( var_2 == null ) ? type_1 . method_2 ( 0.0 ) . method_3 ( ) : var_2 ; query . method_4 ( starttime ) ; query . method_5 ( endtime ) ; this . starttime = starttime ; this . endtime = endtime ; }
[0]: private int method_1 ( int var_1 ) { int var_2 = ( ( int ) ( type_1. method_2 ( var_3. method_3 ( ), var_3. method_4 ( ) ) ) ) ; int var_4 = type_1. min ( var_2, var_1 ) ; type_2. method_5 ( var_5, ( string_1 + ( type_3. method_6 ( var_4 ) ) ) ) ; return type_3. method_6 ( var_4 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( var_1 == null ) { type_1 args = new type_1 ( ) ; args . method_3 ( var_3 , getintent ( ) . getdata ( ) ) ; type_2 var_4 = new type_2 ( ) ; var_4 . method_4 ( args ) ; method_5 ( ) . method_6 ( ) . replace ( var_5 , var_4 ) . commit ( ) ; } }
[0]: public void method_1 ( java.util.map < java.lang.integer, java.lang.object > data ) { for ( java.util.map.entry < java.lang.integer, java.lang.object > var_1 : data. method_2 ( ) ) { var_2. method_3 ( var_1. method_4 ( ), var_1. getvalue ( ) ) ; } var_2. method_5 ( ) ; }

************

************
tgt: protected void method_1 ( android.content.intent intent ) { super . method_1 ( intent ) ; if ( intent . method_2 ( var_1 ) ) { var_2 = ( ( type_1 ) ( intent . method_3 ( ) . get ( var_1 ) ) ) ; type_2 var_3 = ( ( type_2 ) ( method_4 ( var_4 ) ) ) ; var_3 . method_5 ( var_2 . position ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( ( method_3 ( var_3 ) )!= null ) { var_4 = true ; if ( var_1 == null ) { method_4 ( ). method_5 ( ). replace ( var_3, new type_2 ( ), string_1 ). commit ( ) ; } else { var_4 = false ; } } }

************

************
tgt: private type_1 method_1 ( ) { if ( type_2 . method_2 ( this ) ) { return null ; } var_1 = new java.util.random ( ) . method_3 ( var_2 . length ) ; method_4 ( var_2 [ var_1 ] ) ; if ( ( type_2 . method_5 ( this ) . length ) == 0 ) { method_6 ( ) ; } return method_7 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2. settext ( type_2. method_2 ( this, var_1. method_3 ( ), var_1. method_4 ( ) ) ) ; var_3. execute ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; } else { var_2. settext ( var_4 ) ; var_3. execute ( var_5, var_6 ) ; } }

************

************
tgt: public int method_1 ( int position , type_1 var_1 ) { switch ( var_1 ) { case var_2 : case var_3 : return ( ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ) + ( ( int ) ( float_1 * ( var_4 ) ) ) ; case var_5 : return ( ( method_2 ( position ) ) - 1 ) * ( var_4 ) ; default : return ( method_2 ( position ) ) * ( var_4 ) ; } }
[0]: private java.lang.string method_1 ( int var_1, int var_2 ) { java.lang.string var_3 = string_1 ; var_2 += int_1 ; if ( var_2 > int_2 ) { var_1 ++ ; var_2 -= int_2 ; } var_3 = method_2 ( var_3, var_1, var_2 ) ; return var_3 += var_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; if ( ( var_2 . method_3 ( ) ) < 1 ) { var_3 . method_4 ( var_4 ) ; var_5 . method_4 ( var_4 ) ; var_6 . method_4 ( var_7 ) ; } }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2 ) { if (! ( method_2 ( var_1 ) ) ) { var_3. put ( new java.lang.stringbuilder ( var_1 ), var_2 ) ; var_4. add ( var_2. method_3 ( ). tostring ( ) ) ; return ; } try { throw new type_2 ( ) ; } catch ( type_2 var_5 ) { java.lang.system.out.println ( string_1 ) ; } }

************

************
tgt: public type_1 method_1 ( int x , int y ) throws type_2 { type_1 var_1 = null ; if ( ( ( ( x < 0 ) || ( x >= ( this . var_2 ) ) ) || ( y < 0 ) ) || ( y >= ( this . height ) ) ) { throw new type_2 ( string_1 ) ; } else { var_1 = this . var_3 [ x ] [ y ] ; } return var_1 ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; java.lang.long var_2 = var_3. method_3 ( var_1 ). getid ( ) ; type_3 var_4 = type_4. method_4 ( ) ; var_3. method_5 ( var_2 ). method_6 ( ). add ( var_4 ) ; java.lang.long var_5 = var_4. getid ( ) ; type_5. assertequals ( var_4, var_6. get ( var_2, var_5 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ! ( var_1 . method_2 ( ) ) ) { type_2 var_2 = new type_2 ( var_3 . method_3 ( ) , var_3 . method_4 ( ) , var_3 . method_5 ( ) ) ; var_4 . method_6 ( var_3 . method_3 ( ) ) . setvalue ( var_2 ) ; } var_5 . method_7 ( var_3 . method_3 ( ) ) ; }
[0]: private void method_1 ( ) { java.lang.long var_1 = ( type_1. method_2 ( ) ) / int_1 ; var_2 = var_1. tostring ( ) ; var_3 = ( ( ( ( java.lang.string. method_3 ( var_4. method_4 ( ) ) ) + string_1 ) + ( java.lang.string. method_3 ( var_4. method_5 ( ) ) ) ) + string_1 ) + ( java.lang.string. method_3 ( var_4. method_6 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { try { var_1 = new type_1 ( string_1 ) ; var_2 = new type_1 ( string_2 ) ; var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { fail ( string_3 ) ; } try { var_3 . add ( ) ; fail ( string_4 ) ; } catch ( type_2 var_4 ) { asserttrue ( true ) ; } catch ( java.lang.exception var_4 ) { fail ( string_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= ( var_2 ) ) { int var_3 = ( ( var_2 )!= null )? var_2. method_2 ( ) : 0 ; var_2 = var_1 ; method_3 ( ) ; int var_4 = ( ( var_2 )!= null )? var_2. method_2 ( ) : 0 ; if ( var_3 > 0 ) { method_4 ( 0, var_3 ) ; } if ( var_4 > 0 ) { method_5 ( 0, var_4 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1 . method_2 ( ) ) { type_2 var_3 = var_2 . getvalue ( var_4 class ) ; if ( var_5 . equals ( var_6 ) ) var_7 . add ( var_3 ) ; type_3 . method_3 ( this , ( ( ( string_1 + ( var_8 ) ) + string_2 ) + ( var_9 ) ) , var_10 ) . show ( ) ; } }
[0]: public void method_1 ( type_1 var_1, int index ) { if (! ( method_2 ( index ) ) ) return ; type_2 < type_1 > var_2 = this. start ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2 = var_2. method_3 ( ) ; } var_2. method_4 ( var_1 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { if ( var_1 == null ) return null ; java.lang.string var_2 = null ; switch ( var_1 ) { case name : var_2 = ( var_3 ) + string_1 ; break ; case size : var_2 = ( var_4 ) + string_1 ; break ; case date : var_2 = ( var_5 ) + string_2 ; break ; case type : var_2 = ( ( ( var_6 ) + string_3 ) + ( var_3 ) ) + string_1 ; break ; } return var_2 ; }
[0]: protected void method_1 ( final type_1 < type_2 > var_1, final type_3 var_2, final type_2 var_3 ) throws java.lang.exception { type_4 var_4 = method_2 ( var_2 ) ; if ( var_4. method_3 ( ) ) { type_5. method_4 ( var_4 ) ; } type_6 var_5 = new type_6 ( var_4 ) ; var_5. method_1 ( ) ; }

************

************
tgt: private type_1 method_1 ( type_2 type , java.lang.string key , java.lang.string value ) { java.lang.string var_1 = type . method_2 ( ) ; java.lang.string var_2 = type . method_3 ( ) ; type_1 text = new type_1 ( ) ; if ( key != null ) { text . append ( key ) ; text . append ( string_1 ) ; } text . append ( value , type_1 . method_4 ( var_1 , var_2 ) ) ; return text ; }
[0]: public boolean method_1 ( type_1 var_1, int i ) { if ( ( var_1. c ) == char_1 ) return x. method_2 ( i ) ; else if ( ( var_1. c ) == char_2 ) return var_2. method_2 ( i ) ; else return! ( var_3. contains ( i ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 ) ; for ( java.lang.string value : var_1 ) { java.lang.string [ ] var_2 = value . split ( string_1 ) ; var_3 . put ( var_2 [ 0 ] , java.lang.integer . method_3 ( var_2 [ 1 ] ) ) ; } var_4 . put ( var_5 , var_6 ) ; var_4 . put ( var_7 , var_8 ) ; var_4 . put ( var_9 , var_10 ) ; }
[0]: public void method_1 ( ) { final type_1 var_1 = method_2 ( ). method_3 ( var_2 ) ; if ( ( var_3. isempty ( ) ) && ( var_1!= null ) ) { java.util.list < type_2 > var_4 = var_1. method_4 ( ) ; if (! ( var_4. isempty ( ) ) ) method_5 ( var_4, false ) ; } method_6 ( method_7 ( ), false ) ; method_8 ( ). method_9 ( var_5, var_6 ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_2 = var_1 . method_3 ( ) ; var_3 = var_1 . method_4 ( ) ; new java.lang.thread ( var_4 ) . start ( ) ; } else { var_5 . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 < type_2 [ ] > var_1 ) { try { var_2 = var_1. method_2 ( ) ; this. method_3 ( new type_3 ( ) ) ; } catch ( type_4 var_3 ) { type_5. method_4 ( string_1, string_2, var_3 ) ; } catch ( java.io.ioexception var_3 ) { type_5. method_4 ( string_1, string_3, var_3 ) ; } catch ( type_6 var_3 ) { type_5. method_4 ( string_1, string_4, var_3 ) ; } }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string var_1 = null ; java.lang.string var_2 = method_2 ( string_1 ) ; if ( var_2 != null ) { java.lang.string var_3 = method_2 ( string_2 ) ; if ( var_3 != null ) { if ( var_2 . equals ( var_3 ) ) { var_1 = var_2 ; } else { type_1 . method_3 ( this , string_3 , string_4 , var_4 ) ; var_1 = method_1 ( ) ; } } } return var_1 ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_1. method_2 ( this. path ) ; var_1. method_3 ( this. var_3 ) ; var_1. method_2 ( this. var_4 ) ; var_1. method_4 ( this. var_5, var_2 ) ; var_1. method_3 ( this. id ) ; var_1. method_3 ( this. size ) ; var_1. method_5 ( ( this. var_6? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; }

************

************
tgt: private boolean method_1 ( int number ) { for ( type_1 p : this . var_1 . method_2 ( ) ) { type_2 var_2 = this . var_1 . get ( p ) ; if ( ( p != ( this . var_3 ) ) && ( ! ( var_2 . method_3 ( number ) ) ) ) { return false ; } } return true ; }
[0]: public type_1 method_1 ( ) { type_2 var_1 = type_2. method_2 ( ) ; long id = ( var_1. method_3 ( var_2 class ). method_4 ( ) ) + 1 ; type_1 j = new type_1 ( ) ; j. method_5 ( id ) ; return j ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_2 var_3 = type_3 . method_2 ( var_2 . content , string_2 ) ; type_4 var_4 = var_3 . select ( string_3 ) ; for ( type_5 var_5 : var_4 ) { var_5 . text ( method_3 ( var_5 . text ( ) , var_6 ) ) ; } var_2 . content = var_3 . tostring ( ) ; method_4 ( var_2 ) ; }
[0]: public java.lang.string method_1 ( android.widget.linearlayout var_1 ) { java.lang.string var_2 = string_1 ; for ( int i = 1 ; i < int_1 ; i ++ ) { type_1 var_3 = ( ( type_1 ) ( var_1. method_2 ( i ) ) ) ; java.lang.string text = var_3. gettext ( ). tostring ( ) ; if ( text. trim ( ). equals ( string_1 ) ) { var_2 += text + string_2 ; } } return var_2 ; }

************

************
tgt: protected java.lang.string method_1 ( type_1 var_1 ) { java.lang.string url = string_1 ; java.util.collection < ? extends type_2 > var_2 = var_1 . method_2 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 a : var_2 ) { var_3 . add ( a . method_3 ( ) ) ; } if ( var_3 . contains ( string_2 ) ) { url = string_4 ; } else { url = string_4 ; } return url ; }
[0]: public type_1 method_1 ( type_2 var_1, java.lang.string var_2, type_3 field, java.lang.object var_3, java.lang.string var_4 ) { return var_1. get ( var_2, field. getname ( ), type_4. method_2 ( type_5. method_3 ( ( ( java.lang.integer [ ] ) ( type_6. method_4 ( var_3, field ) ) ) ) ), var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 type_2 ) { output . method_2 ( ( ( type_2 . method_3 ( ) ) + string_1 ) ) ; if ( ( type_2 . method_4 ( ) ) != null ) { method_1 ( type_2 . method_4 ( ) ) ; } method_1 ( type_2 . method_5 ( ) ) ; }
[0]: private void method_1 ( ) throws java.io.ioexception { java.util.list < type_1 > var_1 = type_2. method_2 ( var_2. method_3 ( ) ) ; type_3 var_3 = type_3. method_4 ( ) ; type_4 var_4 = type_4. method_4 ( ) ; for ( type_1 var_5 : var_1 ) { type_5 var_6 = var_3. method_5 ( var_7 ) ; int var_8 = ( ( int ) ( ( var_9 ) * ( var_2. method_6 ( ) ) ) ) ; var_4. method_7 ( var_6, var_8 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; boolean var_3 = true ; java.lang.system.out.println ( string_1 ) ; while ( var_3 == true ) { java.lang.string var_4 = var_2 . method_2 ( string_2 ) ; java.lang.string result = var_1 . method_3 ( var_4 ) ; java.lang.system.out.println ( result ) ; if ( result == string_3 ) { var_3 = false ; java.lang.system.out.println ( string_4 ) ; } } }
[0]: protected type_1 method_1 ( ) throws java.lang.exception { type_2 var_1 = var_2. method_2 ( ) ; java.lang.string var_3 = var_1. method_3 ( ) ; if (! ( var_3. equals ( string_1 ) ) ) { return ( ( type_1 ) ( type_3. method_4 ( getclass ( ). method_5 ( ), var_1. method_6 ( var_4 ), var_3, java.lang.string.format ( string_2, var_3 ) ) ) ) ; } else { return null ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = new type_3 ( this ) ; method_4 ( var_3 ) ; method_7 ( ) ; method_8 ( new type_4 ( ) ) ; method_5 ( ) . method_6 ( string_1 ) ; }
[0]: private static java.util.map < java.lang.class <? extends type_1 >, java.lang.class <? extends type_2 > > method_1 ( ) { return new type_3 < java.lang.class <? extends type_1 >, java.lang.class <? extends type_2 > > ( ) { { put ( var_1 class, var_2 class ) ; put ( var_3 class, var_4 class ) ; put ( var_5 class, var_6 class ) ; put ( var_7 class, null ) ; put ( var_8 class, var_9 class ) ; put ( var_10 class, null ) ; } } ; } }

************

************
tgt: public type_1 method_1 ( ) throws type_2 , java.io.ioexception { java.lang.string line = var_1 . method_2 ( ) ; if ( line == null ) { return null ; } java.lang.string var_2 = var_1 . method_2 ( ) ; java.lang.string var_3 = var_1 . method_2 ( ) ; java.lang.string var_4 = var_1 . method_2 ( ) ; type_1 output = new type_1 ( line , var_2 , var_4 ) ; return output ; }
[0]: public boolean equals ( final java.lang.object obj ) { if ( ( this ) == obj ) { return true ; } if ( ( obj == null ) || ( ( obj. getclass ( ) )!= ( this. getclass ( ) ) ) ) { return false ; } return var_1. equals ( ( ( type_1 ) ( obj ) ). var_1 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_2 . method_2 ( ) ) { if ( var_4 . contains ( values [ position ] ) ) { var_4 . remove ( values [ position ] ) ; } else { var_4 . add ( values [ position ] ) ; } } else { if ( var_4 . contains ( values [ position ] ) ) { var_4 . remove ( values [ position ] ) ; } } var_3 . method_4 ( ) ; }
[0]: private java.lang.string method_1 ( int var_1 ) { return ( var_2 ) == 0? ( ( var_3 ) + string_1 ) + var_1 : ( ( ( ( var_3 ) + string_2 ) + ( ( var_2 ) + var_1 ) ) + string_2 ) + var_1 ; }

************

************
tgt: private void method_1 ( type_1 node , type_2 var_1 ) { if ( ! ( var_2 . method_2 ( var_1 ) ) ) return ; if ( ( var_3 ) == null ) return ; if ( var_1 . contains ( var_3 ) ) var_4 . add ( var_3 ) ; method_1 ( var_5 , var_1 ) ; method_1 ( var_6 , var_1 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( ) ; method_3 ( var_2 ) ; method_4 ( var_3 ). method_5 ( this ) ; method_4 ( var_4 ). method_5 ( this ) ; method_4 ( var_5 ). method_5 ( this ) ; method_4 ( var_6 ). method_5 ( this ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.object [ ] array ) { java.lang.stringbuilder buffer = new java.lang.stringbuilder ( ) ; for ( int i = 0 ; i < ( array . length ) ; i ++ ) { if ( i > 0 ) { buffer . append ( var_1 ) ; } buffer . append ( method_2 ( array [ i ] ) ) ; } return buffer . tostring ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { var_1. method_2 ( int_1 ) ; var_1. method_3 ( int_2 ) ; var_1. method_4 ( string_1 ) ; var_1. method_5 ( string_2 ) ; var_1. method_6 ( false ) ; var_1. method_7 ( false ) ; var_1. method_8 ( false ) ; var_1. method_9 ( false ) ; var_1. method_10 ( false ) ; var_1. method_11 ( var_2 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { view = var_1 . method_2 ( var_4 , var_2 , false ) ; type_4 . method_3 ( this , view ) ; var_5 = ( ( type_5 ) ( getactivity ( ) . getintent ( ) . method_4 ( var_6 ) ) ) ; method_5 ( ) ; method_6 ( var_5 ) ; return view ; }
[0]: public void method_1 ( ) throws java.lang.exception { final java.lang.string var_1 = string_1 ; method_2 ( var_1 ) ; type_1 var_2 = new type_1 ( ( ( var_3 ) + var_1 ) ) ; type_2. asserttrue ( var_4. method_3 ( var_2, type_3. method_4 ( ) ). isempty ( ) ) ; method_5 ( var_1 ) ; try { var_4. method_6 ( var_2, var_5 ) ; type_2. fail ( string_2 ) ; } catch ( type_4 var_6 ) { } } }

************

************
tgt: public static type_1 method_1 ( type_2 [ ] args , type_2 expr ) { java.lang.string classname = string_1 + ( type_3 . method_2 ( ) . tostring ( ) . replaceall ( string_2 , string_3 ) ) ; type_4 var_1 = type_5 . method_3 ( classname , expr , args , true , false ) ; type_6 < type_1 > var_2 = new type_6 < type_1 > ( ) ; return var_2 . method_6 ( var_1 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string x = var_2. method_2 ( var_3, var_4. method_3 ( ) ) ; type_1. method_4 ( var_5. method_5 ( ), x, var_6 ). show ( ) ; if ( x. equals ( string_1 ) ) { var_7. method_2 ( var_7. method_6 ( ), var_4. method_3 ( ) ) ; var_8. remove ( position ) ; method_7 ( ) ; } }

************

************
tgt: protected int method_1 ( ) { var_1 . method_2 ( ) ; float [ ] var_2 = new float [ int_1 ] ; var_1 . method_3 ( var_2 ) ; var_3 . method_4 ( var_2 ) ; int var_4 = var_3 . method_1 ( var_5 ) ; if ( ( var_9 ) != null ) { start = type_1 . method_5 ( ) ; var_10 . method_6 ( 0 ) ; } var_6 . method_1 ( var_4 , var_7 , var_8 ) ; return 0 ; }
[0]: private int method_1 ( java.util.list var_1, int var_2 ) { int var_3 = 0 ; if ( ( var_1. size ( ) ) > 0 ) { if ( ( var_1. size ( ) ) < int_1 ) { var_3 = var_1. size ( ) ; } else { var_3 = var_2 + int_2 ; } } return var_3 ; }

************

************
tgt: public boolean method_1 ( byte [ ] data , int length ) { int var_1 = 0 ; length = type_1 . min ( length , data . length ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( method_2 ( var_2 [ ( int_1 & ( data [ i ] ) ) ] , var_3 [ ( int_1 & ( data [ i ] ) ) ] ) ) > 0 ) { var_1 ++ ; } else break ; } return var_1 == length ; }
[0]: public void method_1 ( int position, float var_1, int var_2 ) { int count = ( ( listener ) instanceof type_1 )? var_3 super. method_2 ( ). method_3 ( ) : method_2 ( ). method_3 ( ) ; listener. method_1 ( type_2. min ( position, count ), ( position < count? var_1 : 0 ), ( position < count? var_2 : 0 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 var_1 = var_2 . method_2 ( var_3 ) ; if ( var_1 == null ) { java.lang.system.err.println ( string_1 ) ; return ; } type_2 var_4 = type_2 . method_3 ( var_1 ) ; type_3 var_5 = var_6 . method_4 ( ) ; var_5 . method_5 ( ) . replace ( var_7 , var_4 ) . commit ( ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { var_2. method_2 ( response. method_3 ( ). method_4 ( ). method_5 ( ) ) ; var_3 = new type_4 ( var_4, var_2 ) ; var_5. method_6 ( ) ; var_5. method_2 ( response. method_3 ( ). method_4 ( ). method_7 ( ) ) ; var_6. method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( new type_2 ( ) { public void method_3 ( final type_3 var_4 ) { var_2 . method_4 ( var_4 . tostring ( ) ) ; } public void method_5 ( ) { } public void method_6 ( java.lang.string var_3 , final type_3 var_4 ) { var_2 . method_4 ( var_4 . tostring ( ) ) ; } } ) ; }
[0]: private type_1 < type_2 > method_1 ( type_3 < type_4 > query ) throws type_5 { return index. query ( query. method_2 ( ), query. getcontext ( ). method_3 ( ). method_4 ( ). method_5 ( ), query. getcontext ( ). getselection ( ). method_6 ( type_6. method_7 ( ) ), type_7. method_8 ( ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . method_2 ( this . var_4 , var_1 . method_3 ( ) ) ; if ( ( var_2 != null ) && ( var_5 ) ) { return true ; } if ( var_1 . method_3 ( ) . equals ( this . var_7 ) ) { if ( var_6 ) { return false ; } return true ; } if ( ( this . var_8 ) != null ) { return this . var_8 . method_1 ( var_1 ) ; } return false ; }
[0]: public static type_1 method_1 ( java.lang.string path ) { type_2 p = new java.io.file ( path ). method_2 ( ) ; if (! ( p. method_3 ( ). method_4 ( ) ) ) { throw new type_3 ( string_1 ) ; } try { return new type_1 ( new java.lang.string ( type_4. method_5 ( p ), var_1 ) ) ; } catch ( java.io.ioexception var_2 ) { var_2. method_6 ( ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { if ( ( this . var_1 ) != null ) { this . context . method_2 ( this . var_1 ) ; } if ( ( this . var_3 ) != null ) { this . var_3 . method_3 ( this . var_4 ) ; } }
[0]:  static void add ( java.lang.string list, java.lang.string var_1, java.lang.string url ) { java.lang.system.out.println ( var_2. method_1 ( url, ( list. equals ( string_1 )? true : false ), ( var_1. equals ( string_2 )? true : false ) ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , float var_2 , float var_3 ) { if ( var_1 . method_2 ( ) ) { method_3 ( false ) ; method_4 ( false ) ; var_4 . method_5 ( ) ; var_4 . method_6 ( false ) ; method_7 ( var_4 ) ; method_8 ( ) ; type_2 . method_9 ( ) . method_10 ( var_5 , this ) ; } return true ; }
[0]: private type_1 method_1 ( type_1 var_1 ) { int var_2 ; int var_3 ; int var_4 ; var_2 = var_1. method_2 ( ) ; var_3 = var_1. method_3 ( ) ; var_4 = var_1. getcolor ( ) ; type_1 var_5 = new type_1 ( var_2, var_3, var_4 ) ; return var_5 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 ) { var_1 . method_2 ( ) . put ( var_3 , var_4 ) ; type_1 var_5 = method_3 ( var_1 , var_2 ) ; try { var_5 . commit ( ) ; } catch ( java.io.ioexception var_6 ) { var_8 . error ( string_1 , var_6 ) ; } return var_5 ; }
[0]: public short method_1 ( ) throws type_1 { boolean var_1 = false ; format. method_2 ( char_1, false ) ; if ( ( format. gettype ( ) ) == char_2 ) { var_1 = true ; } format. method_3 ( ) ; return method_4 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( ) { int [ ] var_1 = new int [ int_1 ] ; for ( int i = 0 ; i < ( string . length ( ) ) ; i ++ ) { ( var_1 [ string . method_2 ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] ) > 1 ) { return false ; } } return true ; }
[0]: public void method_1 ( char [ ] [ ] var_1 ) { for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { for ( int j = 0 ; j < ( var_2 [ 0 ]. length ) ; j ++ ) { var_2 [ i ] [ j ] = var_1 [ i ] [ j ] ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { var_2 . method_2 ( var_3 ) ; var_2 . set ( string_1 , type_3 . getid ( var_1 . method_3 ( ) ) ) ; var_2 . set ( string_2 , type_4 . getid ( var_1 . method_4 ( ) ) ) ; var_2 . set ( string_3 , type_3 . method_5 ( var_1 ) ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = method_2 ( ). method_3 ( ) ; java.lang.string var_2 = ( ( ( ( var_1. method_4 ( ) ) + string_1 ) + ( var_1. method_5 ( ) ) ) + string_1 ) + ( var_1. method_6 ( ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( var_1 == ( var_2 ) ) { return ; } var_2 = var_1 ; var_3 . settext ( ( var_2 ? var_4 : var_5 ) ) ; if ( ( var_6 ) == ( type_1 . method_2 ( ) ) ) { method_3 ( var_7 ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ). length ( ) )!= 0 ) { ( ( type_1 ) ( var_2. method_3 ( var_3 ) ) ). settext ( ( ( string_1 + ( var_1. method_2 ( ) ) ) + string_1 ) ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) { int var_3 = 0 ; switch ( var_2 ) { case var_4 : var_3 = var_5 ; break ; case var_6 : var_3 = var_7 ; break ; default : break ; } android.view.view var_8 = type_3 . method_2 ( var_1 . getcontext ( ) ) . method_3 ( var_3 , var_1 , false ) ; return new type_1 ( var_8 , this ) ; }
[0]: public java.util.list < java.lang.integer > method_1 ( ) { java.util.list < java.lang.integer > result = new java.util.arraylist < java.lang.integer > ( ) ; for ( java.util.map.entry < java.lang.integer, java.lang.boolean > var_1 : var_2. method_2 ( ) ) { if ( ( var_1. getvalue ( ) ) == false ) result. add ( var_1. method_3 ( ) ) ; } return result ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; type_2 var_2 = method_3 ( ) ; java.lang.string response = var_2 . path ( string_1 ) . get ( var_3 . string class ) ; type_3 . assertthat ( response , type_4 . method_4 ( string_2 ) ) ; }
[0]: public void method_1 ( final type_1 var_1, final java.util.collection < type_2 > var_2 ) { var_3. method_2 ( ) ; if ( var_4!= null ) { var_4. method_2 ( ) ; } for ( final type_2 var_5 : var_2 ) { final type_3 var_6 = type_4. method_3 ( var_3. method_4 ( ), var_5. method_5 ( ) ) ; var_7. put ( var_5. method_5 ( ), var_6 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final java.util.list < type_2 > var_2 = new java.util.linkedlist < type_2 > ( ) ; for ( type_1 var_3 : var_1 . method_2 ( ) ) { type_2 var_4 = var_3 . getvalue ( var_5 class ) ; if ( ( var_6 [ 0 ] ) < ( var_4 . getid ( ) ) ) { var_6 [ 0 ] = var_4 . getid ( ) ; } var_2 . add ( var_4 ) ; } listener . method_3 ( var_2 , var_6 [ 0 ] ) ; }
[0]: public type_1 method_1 ( type_2 var_1, int var_2, int var_3 ) { type_1 c = super. method_1 ( var_1, var_2, var_3 ) ; if (! ( method_2 ( var_2 ) ) ) c. method_3 ( ( ( var_2 % int_1 ) == 0? method_4 ( ) : var_4 ) ) ; return c ; }

************

************
tgt: public type_1 < java.util.arraylist < type_2 > > method_1 ( int id , type_3 args ) { if ( var_2 . method_2 ( var_1 ) ) { return new type_4 ( getactivity ( ) ) ; } else { return new type_5 ( getactivity ( ) ) ; } }
[0]: public void method_1 ( ) { type_1 [ ] var_1 = var_2. method_2 ( ) ; type_1 var_3 = var_4 ; var_5. method_3 ( var_3. method_4 ( ) ) ; method_5 ( var_3, var_1 ) ; var_1 = type_2. method_6 ( var_1, var_3 ) ; var_5. method_3 ( string_1 ) ; method_7 ( var_1. length, var_1 ) ; type_3. method_8 ( ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > content ) { this . var_1 = content ; this . method_2 ( content ) ; if ( ( var_1 ) == null ) return ; int var_2 = ( ( var_1 . method_3 ( ) . size ( ) ) + 1 ) * int_1 ; this . method_4 ( var_2 ) ; this . method_5 ( var_2 ) ; this . method_6 ( var_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { try { type_1. method_1 ( int_1 ) ; type_2 var_1 = new type_2 ( 1 ) ; type_2 var_2 = new type_2 ( int_2 ) ; var_2. method_2 ( string_1, 1, int_3 ) ; var_2. method_2 ( string_2, 1, int_4 ) ; } catch ( type_3 | type_4 | type_5 var_3 ) { var_3. method_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_3 = new type_2 ( var_4 ) ; var_3 . method_4 ( string_5 ) ; var_3 . method_5 ( var_1 . method_2 ( var_2 . method_3 ( ) ) ) ; var_3 . method_6 ( ) ; }
[0]: protected static java.lang.string method_1 ( java.lang.string var_1 ) { java.util.scanner var_2 ; java.util.arraylist < java.lang.string > words = new java.util.arraylist < java.lang.string > ( ) ; var_2 = new java.util.scanner ( var_1 ) ; while ( var_2. method_2 ( ) ) { words. add ( var_2. method_3 ( ) ) ; } var_2. method_4 ( ) ; if ( ( words. size ( ) ) == int_1 ) { return words. get ( int_2 ) ; } return string_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 . method_3 ( ) ) return ; if ( ( var_4 . status ) != ( var_5 ) ) { var_2 . method_4 ( ) ; return ; } var_4 . method_5 ( var_1 ) ; method_6 ( var_4 ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 < type_3 > var_1 ) { java.util.set < java.lang.long > var_2 = new java.util.hashset < > ( ) ; java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; for ( type_3 var_3 : var_1 ) { method_2 ( var_3, var_2, result, 0 ) ; } return result ; }

************

************
tgt: public void method_1 ( type_1 a ) { if ( ( var_1 ) == ( var_2 ) ) { if ( ( a . method_2 ( ) . size ( ) ) > ( var_3 . size ( ) ) ) method_3 ( string_1 ) ; if ( ( method_4 ( ) ) != ( var_4 ) ) if ( ( a . method_2 ( ) . size ( ) ) > ( method_4 ( ) ) ) method_3 ( string_2 ) ; } }
[0]: protected void method_1 ( ) { type_1. method_2 ( method_3 ( ), new type_2 ( ) { public void method_4 ( java.lang.exception var_1 ) { method_5 ( ) ; } } ) ; type_3. method_6 ( var_2, var_3. gettext ( ). tostring ( ), this ) ; type_3. method_7 ( var_4, true, this ) ; type_3. method_6 ( var_5, var_6. gettext ( ). tostring ( ), this ) ; var_7. method_8 ( var_8 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) ; method_4 ( ) ; try { type_2 . method_5 ( ) . method_6 ( var_3 ) ; var_4 = var_5 ; } catch ( java.io.ioexception | type_3 var_6 ) { var_6 . method_7 ( ) ; type_4 . method_8 ( this , var_6 . method_9 ( ) ) ; } method_10 ( ) ; method_13 ( ) ; method_11 ( type_5 . method_5 ( ) . method_12 ( ) ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1, int var_2, int var_3 ) { java.lang.string title = method_2 ( var_1 ) ; title = ( title == null )? string_1 : string_2 + title ; java.lang.string var_4 = ( ( type_2. getstring ( string_3, type_3. method_3 ( ) ) ) + string_4 ) + string_5 ; return ( title + string_2 ) + var_4 ; }

************

************
tgt: public static final short method_1 ( byte [ ] array , int var_1 ) { short result = ( ( short ) ( array [ ( var_1 + 1 ) ] ) ) ; result <<= int_2 ; result |= ( ( short ) ( array [ var_1 ] ) ) & int_1 ; return result ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; var_1 = this ; if ( ( ( var_2 ) == ( var_3 ) ) && ( ( var_4 ) >= ( var_5 ) ) ) { type_1. method_2 ( new type_2 ( ). method_3 ( ). method_4 ( ). build ( ) ) ; type_1. method_5 ( new type_3 ( ). method_3 ( ). method_6 ( ). build ( ) ) ; } method_7 ( this ) ; method_8 ( this ) ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 = var_2 . method_2 ( ) ; var_3 = new java.io.filewriter ( var_4 ) ; java.io.bufferedwriter writer = new java.io.bufferedwriter ( var_3 ) ; type_1 var_5 = new type_1 ( writer ) ; for ( type_2 i : var_1 ) { java.lang.string var_6 = i . tostring ( ) ; var_5 . method_3 ( var_6 ) ; } if ( var_1 . isempty ( ) ) { var_3 = new java.io.filewriter ( var_4 ) ; } var_5 . method_4 ( ) ; }
[0]: public void method_1 ( ) { if ( ( method_2 ( ) ) == true ) { return var_1 [ 0 ] ; java.lang.system.out.println ( string_1 ) ; } else { java.lang.system.out.println ( ( ( ( ( ( string_2 + ( var_1 [ 0 ]. method_3 ( ) ) ) + string_3 ) + ( var_1 [ 0 ]. method_4 ( ) ) ) + string_4 ) + ( var_1. method_5 ( ) ) ) ) ; } }

************

************
tgt: private boolean method_1 ( int number ) { if ( number == int_1 ) { return true ; } if ( ( number < int_1 ) || ( ( number % int_1 ) == 0 ) ) { return false ; } for ( int var_1 = int_2 ; var_1 <= ( type_1 . method_2 ( number ) ) ; var_1 += int_1 ) { if ( ( number % var_1 ) == 0 ) { return false ; } } return true ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( var_1. method_3 ( ). gettext ( ) ) ; if ( ( var_2!= null ) && ( var_2 instanceof type_3 ) ) { var_4 = ( ( type_4 ) ( var_2 ) ). gettype ( ) ; } else { error ( var_1. method_3 ( ). method_4 ( ), var_5, var_1. method_3 ( ). gettext ( ) ) ; } }

************

************
tgt: public static java.util.list < java.lang.string > method_1 ( java.util.list < java.lang.string > var_1 ) { if ( var_1 == null ) return null ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( var_1 . size ( ) ) ; for ( java.lang.string string : var_1 ) { var_2 . add ( type_1 . method_2 ( char_1 , string ) ) ; } return var_2 ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { if ( ( counter ) >= 0 ) { var_1. method_2 ( var_2 ) ; var_3. settext ( java.lang.string.format ( method_3 ( ). getstring ( var_4 ), counter ) ) ; var_5. method_4 ( ( ( var_6 ) - ( counter ) ) ) ; } else { var_3. settext ( string_1 ) ; var_1. method_2 ( var_7 ) ; } } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { try { type_3 . method_1 ( string_3 ) ; type_3 . method_1 ( string_4 ) ; type_3 . method_1 ( string_5 ) ; var_1 . method_2 ( type_2 . method_3 ( string_6 ) ) ; type_1 function = type_2 . var ( string_6 , string_7 ) ; function . method_2 ( ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_4 ( ) ; } }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { final int end = ( string. method_2 ( ). length ) + i ; final type_1 var_1 = new type_1 ( 0, end ) ; type_2. method_3 ( string. method_4 ( var_1 ) ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2 . method_2 ( int_1 ) ; type_1 var_3 = type_1 . method_3 ( var_1 , 0 , 0 , var_1 . method_4 ( ) , var_1 . method_5 ( ) , var_2 , true ) ; return var_3 ; }
[0]: protected void method_1 ( android.view.view var_1 ) { type_1 item = ( ( type_1 ) ( var_1. method_2 ( ) ) ) ; var_2 = new type_2 ( method_3 ( ) ) ; java.util.hashmap < java.lang.string, java.lang.string > var_3 = var_2. method_4 ( ) ; final java.lang.string var_4 = var_3. get ( var_5 ) ; final java.lang.string var_6 = item. getid ( ) ; method_5 ( var_6, var_4, var_3 ) ; }

************

************
tgt: protected void method_1 ( ) { ( ( type_1 ) ( context ) ) . method_2 ( ) . method_3 ( var_1 ) ; this . var_2 . method_4 ( true ) ; this . var_2 . method_5 ( false ) ; this . var_2 . method_6 ( getstring ( var_3 ) ) ; this . var_2 . method_7 ( ( string_1 + ( var_4 ) ) ) ; this . var_2 . show ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { var_3 = var_4. gettext ( ) ; var_4. settext ( string_1 ) ; var_5. method_3 ( var_3. trim ( ) ) ; } else { var_3 = null ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( string_1 , var_1 . method_3 ( ) . tostring ( ) ) ; if ( var_1 . method_4 ( ) . method_5 ( ) . equals ( var_3 . method_5 ( ) ) ) { ( var_6 ) ++ ; } }
[0]: public int method_1 ( double var_1, int var_2 ) { double var_3 = 0.0 ; if ( var_1 > 0 ) { var_3 = ( ( float_1 + ( float_2 * var_1 ) ) + ( ( float_3 * var_1 ) * var_1 ) ) + ( ( ( ( - float_4 ) * var_1 ) * var_1 ) * var_1 ) ; } return ( ( int ) ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( ( var_4 . method_2 ( ) ) != ( var_2 ) ) { try { java.util.map < java.lang.thread , type_1 [ ] > var_3 = java.lang.thread . method_3 ( ) ; java.lang.system.out.println ( type_2 . tostring ( var_3 . get ( var_4 ) ) ) ; } catch ( java.lang.exception var_5 ) { } } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.util.set < type_3 > var_3 ) throws type_4, type_5, type_6, type_7, java.io.ioexception { type_8 var_4 = new type_8 ( var_1, var_2, var_3 ) ; java.net.url url = var_5. method_2 ( ( ( var_6 ) + string_1 ) ) ; type_9 var_7 = type_9. method_3 ( url ). method_4 ( type_10. method_5 ( var_4 ) ). build ( ) ; method_6 ( var_1, var_7 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] var_1 ) throws java.lang.exception { type_1 < type_2 > var_2 = new type_1 < type_2 > ( ) ; type_1 < type_3 > var_3 = new type_1 < type_3 > ( ) ; type_4 . method_1 ( var_2 , string_1 ) ; if ( ( var_2 . method_3 ( ) ) != null ) { type_4 . method_4 ( var_2 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1. assertthat ( type_2. method_2 ( var_1 class ). method_3 ( ), method_4 ( string_1 ) ) ; type_1. assertthat ( type_2. method_2 ( var_2 class ). method_3 ( ), method_4 ( string_2 ) ) ; java.lang.string var_3 = string_3 ; if ( var_4 ) var_3 = string_4 ; type_1. assertthat ( type_2. method_2 ( var_5. string class ). method_3 ( ), method_4 ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { double y = var_1 . method_2 ( var_2 ) ; var_3 . method_3 ( ( string_1 + y ) ) ; if ( ( method_4 ( ) ) || ( ( java.lang.math.abs ( y ) ) < ( var_4 ) ) ) { method_5 ( ) ; } else { method_6 ( ) ; var_5 . set ( y ) ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) { results = var_1. select ( string_1 ) ; var_2 = var_1. select ( string_2 ) ; for ( int j = 0 ; j < ( var_2. size ( ) ) ; j ++ ) { results. add ( var_2. get ( j ) ) ; } return results ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 . method_2 ( var_2 . method_3 ( var_1 . getid ( ) ) ) . method_4 ( true ) ; var_2 . method_3 ( var_1 . getid ( ) ) ; type_2 . method_5 ( var_2 , type_2 . method_6 ( ) ) . method_3 ( var_1 . getid ( ) ) ; }
[0]: public static boolean method_1 ( java.lang.string str ) { int i = - 1 ; while ( ( ++ i ) < ( str. length ( ) ) ) { char c = str. method_2 ( i ) ; if ( ( c < char_1 ) || ( c > char_2 ) ) { return false ; } } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 = getactivity ( ) ; var_3 = getactivity ( ) . method_2 ( ) ; if ( ( method_3 ( ) ) != null ) { var_4 = method_3 ( ) . getstring ( var_5 ) ; var_6 = method_3 ( ) . getstring ( var_7 ) ; var_8 = method_3 ( ) . getstring ( var_9 ) ; } var_10 = new type_2 ( var_2 , this ) ; var_11 = new type_3 ( var_2 , this , var_8 ) ; }
[0]: public boolean method_1 ( ) { switch ( var_1 ) { case var_2 : return var_3. values ( ). contains ( false ) ; case var_4 : default : return ( ( var_3. size ( ) ) > 0 ) && (! ( var_3. values ( ). contains ( false ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { if ( type_1 . method_2 ( ( ( string_1 + ( var_1 . getname ( ) ) ) + string_2 ) ) ) { var_2 . execute ( var_3 . method_3 ( var_1 . getid ( ) ) , new type_2 < java.lang.void > ( ) { public void method_4 ( java.lang.void result ) { method_5 ( ) ; } } ) ; } }
[0]: private boolean method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_1. substring ( int_1, int_2 ) ) ) ; return var_2. equals ( string_1 )? true : var_2. equals ( string_2 )? true : var_2. equals ( string_3 )? true : var_2. equals ( string_4 )? true : var_2. equals ( string_5 )? true : var_2. equals ( string_6 )? true : false ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) throws type_1 { for ( int var_4 : var_3 ) { if ( var_4 == ( var_5 ) ) { this . var_6 . method_2 ( new type_2 ( var_7 , var_8 ) ) ; return ; } } method_3 ( this . var_9 , this . var_10 , this . var_6 ) ; }
[0]: public void method_1 ( int var_1, int var_2, int var_3, int var_4 ) { super. method_1 ( var_1, var_2, var_3, var_4 ) ; var_5 = var_4 - var_2 ; var_6 = var_3 - var_1 ; var_7. method_2 ( ( ( var_5 ) * float_1 ) ) ; var_8 = - ( var_7. method_3 ( ). var_9 ) ; }

************

************
tgt: public void method_1 ( ) { if ( this . status ) { var_1 . method_2 ( this . var_2 , this . var_3 ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( this . var_3 ) ; this . method_3 ( ) ; } else { var_1 . method_2 ( this . var_2 , this . var_4 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.out.println ( this . var_2 ) ; } }
[0]: private void method_1 ( ) { java.lang.string var_1 = ( var_2 ) + ( var_3 ) ; android.content.intent i = new android.content.intent ( getactivity ( ), var_4 class ) ; i. method_2 ( string_1, var_1 ) ; i. method_2 ( string_2, var_3 ) ; i. method_2 ( string_3, var_5 ) ; getactivity ( ). method_3 ( i ) ; }

************

************
tgt: private void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( ( string_2 + ( var_1 ) ) ) ; java.lang.system.out.println ( ( string_3 + ( var_2 ) ) ) ; java.lang.system.out.println ( ( string_4 + ( var_3 ) ) ) ; java.lang.system.out.print ( ( string_5 + ( var_4 ) ) ) ; java.lang.system.out.println ( string_6 ) ; java.lang.system.out.println ( ( string_8 + ( var_5 ) ) ) ; java.lang.system.out.println ( ( string_9 + ( var_6 ) ) ) ; java.lang.system.out.println ( string_10 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; final android.view.view var_5 = method_3 ( var_6 ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; var_9 = ( ( type_4 ) ( method_3 ( var_10 ) ) ) ; method_4 ( ). method_5 ( 0, null, this ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 , var_3 , var_4 , var_1 ) ; var_5 . method_3 ( var_2 , var_3 , var_4 ) ; var_6 . method_3 ( var_2 , var_3 , var_4 , var_1 ) ; var_6 . method_4 ( var_3 , var_4 , var_1 ) ; var_6 . method_5 ( var_3 , var_4 , var_1 ) ; var_6 . method_6 ( var_2 , var_3 ) ; var_6 . method_7 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_2 ( ) ; var_2. info ( string_1 ) ; new type_3 ( string_2 ). method_2 ( ) ; type_4. method_3 ( string_3 ) ; new type_5 ( var_3 ). method_4 ( var_4 ) ; var_1. method_5 ( ) ; type_6. method_6 ( string_4, new type_7 ( ). method_7 ( ). contains ( string_5 ) ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string date ) { if ( date == null ) return null ; java.lang.string var_1 = date . substring ( 0 , int_1 ) ; java.lang.string var_2 = date . substring ( int_2 , int_3 ) ; java.lang.string var_3 = date . substring ( int_4 , int_5 ) ; long var_4 = new type_2 ( java.lang.integer.parseint ( var_1 ) , ( ( java.lang.integer.parseint ( var_2 ) ) - 1 ) , java.lang.integer.parseint ( var_3 ) ) . method_2 ( ) ; return new type_1 ( var_4 ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) > float_1 ) { var_1 -= float_2 ; var_2 = 0 ; var_3 = 0 ; } else { if ( var_4 ) { var_5. state = var_6 ; } else { var_5. state = var_7 ; } } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { double [ ] var_1 = new double [ ] { 1 , int_5 , int_1 , int_2 } ; type_1 var_2 = new type_1 ( int_5 , int_5 , var_1 ) ; java.lang.system.out.println ( var_2 . method_2 ( ) . method_1 ( var_2 ) ) ; }
[0]: private long method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = string_1 ; java.lang.string var_3 = var_1. tolowercase ( ). method_2 ( string_2 ). substring ( 0, int_1 ) ; int var_4 ; for ( int i = 0 ; i < int_1 ; ++ i ) { var_4 = ( ( int ) ( var_3. method_3 ( i ) ) ) ; var_2 = var_2. method_2 ( java.lang.string. method_4 ( var_4 ) ) ; } return java.lang.long.parselong ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 state ) { if ( state == ( this . var_1 ) ) { return ; } if ( state == null ) { state = this . var_1 ; } switch ( state ) { case var_2 : this . method_2 ( ) ; break ; case var_3 : this . method_3 ( ) ; break ; case var_4 : this . method_4 ( ) ; } this . var_1 = state ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : var_2. method_3 ( ) ; return true ; case var_3 : var_2. method_3 ( ) ; android.content.intent var_4 = new android.content.intent ( this, var_5 class ) ; method_4 ( var_4 ) ; return true ; case var_6 : var_2. method_3 ( ) ; android.content.intent var_7 = new android.content.intent ( this, var_8 class ) ; method_4 ( var_7 ) ; return true ; default : return false ; } }

************

************
tgt: private type_1 method_1 ( type_2 type ) { if ( type . gettext ( ) . equals ( string_1 ) ) { return new type_3 ( ) ; } else if ( type . gettext ( ) . equals ( string_2 ) ) { return new type_4 ( ) ; } return null ; }
[0]: public void method_1 ( ) { var_1 = method_2 ( ) ; var_2 = var_1. method_3 ( ) ; type_1 var_3 = new type_1 ( ) ; var_2. replace ( var_4, var_3 ) ; var_2. method_4 ( null ) ; type_2 var_5 = ( ( type_2 ) ( method_5 ( var_6 ) ) ) ; if ( var_5. method_6 ( var_7 ) ) { var_5. method_7 ( var_7 ) ; } var_2. commit ( ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; method_3 ( ) . method_4 ( true ) ; var_2 = new type_1 ( this , var_3 , var_1 , var_4 , var_5 ) ; var_3 . method_5 ( var_2 ) ; var_2 . method_6 ( true ) ; var_2 . method_7 ( ) ; method_8 ( ) ; }
[0]: public void method_1 ( final type_1 var_1, final type_2 var_2 ) throws java.io.ioexception, type_3 { type_4 var_3 ; type_5 response ; if (! ( ( var_1 instanceof type_4 ) && ( var_2 instanceof type_5 ) ) ) { throw new type_3 ( string_1 ) ; } var_3 = ( ( type_4 ) ( var_1 ) ) ; response = ( ( type_5 ) ( var_2 ) ) ; method_2 ( var_3, response ) ; }

************

************
tgt: public void method_1 ( ) { java.util.random var_1 = new java.util.random ( var_2 ) ; var_3 = type_1 . method_2 ( var_1 ) ; type_2 . assertequals ( var_3 . method_3 ( ) , var_4 ) ; type_2 . assertequals ( ( - ( var_5 ) ) , var_3 . method_4 ( ) . method_5 ( ) , 1.0f ) ; type_2 . assertequals ( var_5 , var_3 . method_6 ( ) , 1.0f ) ; type_2 . assertequals ( var_6 , var_3 . method_7 ( ) , 1.0f ) ; }
[0]: public void method_1 ( double var_1, type_1 var_2 ) { position = type_1. method_2 ( position, var_3. method_3 ( var_1 ) ) ; position = type_1. method_2 ( position, var_2. method_3 ( ( ( java.lang.math.pow ( var_1, int_1 ) ) / ( int_1 * ( var_4 ) ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , type_2 position , float var_2 , float var_3 , float var_4 , float var_5 ) { long var_6 = type_3 . method_2 ( ) ; type_1 var_7 = new type_1 ( var_8 . get ( var_1 ) , 0 , var_9 . get ( var_1 ) , position , var_2 , var_3 , var_4 , var_5 , var_1 ) ; var_10 . add ( var_7 ) ; return var_7 ; }
[0]: public final void method_1 ( type_1 var_1, type_2 var_2 ) { int id = var_1. getid ( ) ; java.util.hashset < type_2 > var_3 = var_4. get ( id ) ; if ( var_3!= null ) { var_3. remove ( var_2 ) ; if ( ( var_3. isempty ( ) ) && ( ( var_5 )!= null ) ) { var_5. method_2 ( var_1 ) ; } } }

************

************
tgt: public type_1 method_1 ( int id , java.lang.string content ) { type_2 var_1 = new type_2 ( ) ; type_3 var_2 = var_1 . method_2 ( content , var_3 class ) ; if ( var_2 == null ) { throw new type_4 ( var_4 ) ; } try { var_5 . method_1 ( var_2 ) ; } catch ( type_5 var_6 ) { var_6 . method_3 ( ) ; type_1 . status ( var_4 ) ; } return type_1 . status ( int_1 ) . build ( ) ; }
[0]: public void method_1 ( final int var_1 ) { method_2 ( new type_1 ( ) { public void method_3 ( ) { if ( ( var_2 )!= null ) { var_2. method_4 ( ( var_1 & int_1 ) ) ; if ( var_3 ) { var_4 = true ; } else if (! ( var_2. method_5 ( ) ) ) { var_2. setenabled ( true ) ; } } } } ) ; } }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( ) { method_2 ( ) ; if ( ( results . size ( ) ) < 1 ) method_3 ( int_1 ) ; if ( ( results . size ( ) ) < 1 ) method_4 ( ) ; if ( ( results . size ( ) ) < 1 ) method_3 ( int_2 ) ; if ( ( results . size ( ) ) < 1 ) method_3 ( 1 ) ; return results ; }
[0]: public void method_1 ( ) throws java.lang.exception { this. method = var_1 class. method_2 ( string_1, var_2 class, var_2 class, var_2 class, var_2 class, var_2 class, var_3 class ) ; this. var_4 = type_1. method_3 ( var_5 class ) ; this. var_6 = new type_2 ( this. var_4 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = type_1 . method_3 ( var_3 ) ; java.lang.string min = type_1 . method_3 ( var_4 ) ; method_4 ( var_5 . gettext ( ) . tostring ( ) , var_2 , min ) ; method_5 ( var_5 . gettext ( ) . tostring ( ) , var_2 , min , var_6 , var_7 ) ; }
[0]: protected void method_1 ( java.util.list < type_1 > var_1 ) { if ( ( var_1. size ( ) ) < ( var_2 ) ) { var_3. method_2 ( false ) ; } if ( var_4 ) { var_5. method_3 ( false ) ; var_3. method_4 ( var_1 ) ; } else { var_5. setenabled ( true ) ; var_3. append ( var_1 ) ; } }

************

************
tgt: private void method_1 ( ) { type_1 . i ( var_1 , string_1 ) ; android.content.context context = method_2 ( ) ; var_2 = ( ( type_2 ) ( context . method_3 ( var_3 ) ) ) ; var_4 = new android.content.intent ( context , var_5 class ) ; var_8 = type_3 . method_5 ( context , 0 , var_4 , 0 ) ; var_2 . method_6 ( var_9 , type_4 . method_7 ( ) , int_1 , var_8 ) ; }
[0]: public final void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 [ ] [ ] var_2 = new type_2 [ int_1 ] [ int_1 ] ; var_1. method_2 ( var_2 ) ; type_3. asserttrue ( ( var_2 == ( var_1. method_3 ( ) ) ) ) ; }

************

************
tgt: private void method_1 ( ) { this . var_1 . settext ( string_1 ) ; this . var_2 . settext ( string_2 ) ; this . var_3 . method_2 ( true ) ; this . var_4 . method_2 ( true ) ; this . var_5 . method_2 ( true ) ; this . var_6 . method_2 ( true ) ; this . var_7 . method_3 ( ( var_8 ) - > java.lang.system.exit ( 0 ) ) ; }
[0]: public type_1 method_1 ( type_1 item, type_2 var_1 ) { if ( ( item. method_2 ( ) ) > 1 ) { var_1. method_3 ( var_2 ) ; return item ; } else { return var_2. method_4 ( ( ( var_2. method_2 ( ) ) + 1 ) ) ; } }

************

************
tgt: public void show ( ) { super . show ( ) ; var_3 = new type_1 ( new type_2 ( var_4 . method_2 ( ) , var_4 . method_3 ( ) ) ) ; var_5 = var_6 . method_4 ( ) ; var_7 = var_5 . getcolor ( var_8 ) ; var_9 . method_5 ( var_3 ) ; method_6 ( ) ; var_10 = new type_3 ( var_6 . method_7 ( ) , var_6 . method_8 ( ) ) ; var_10 . method_9 ( ) ; }
[0]: public android.view.view getview ( int position, android.view.view view, type_1 var_1 ) { type_2 var_2 = context. method_1 ( ) ; android.view.view var_3 = var_2. method_2 ( var_4, null, true ) ; type_3 var_5 = ( ( type_3 ) ( var_3. method_3 ( var_6 ) ) ) ; type_4 var_7 = ( ( type_4 ) ( var_3. method_3 ( var_8 ) ) ) ; var_5. settext ( var_9 [ position ] ) ; var_7. method_4 ( var_10 [ position ] ) ; return var_3 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( var_3 ) ; android.content.intent intent = new android.content.intent ( this , var_4 class ) ; intent . method_6 ( string_1 , int_1 ) ; method_7 ( intent ) ; type_4 . method_8 ( this , ( var_5 + string_2 ) , var_6 ) . show ( ) ; }
[0]: public static < type_1 extends type_2 > type_1 method_1 ( java.lang.class < type_1 > var_1, type_2 start ) { for ( type_2 var_2 = start. method_1 ( ) ; var_2!= null ; var_2 = type_3. method_2 ( var_2. method_1 ( ) ) ) { if ( var_1. method_3 ( var_2 ) ) { return ( ( type_1 ) ( var_2 ) ) ; } } return null ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_2 . method_2 ( var_1 ) ; final type_2 var_3 = ( ( type_2 ) ( method_3 ( this , x , y ) . method_4 ( ) ) ) ; return var_3 == ( this ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_1 b = method_2 ( ) ; java.lang.string filename = b. getstring ( var_2, string_1 ) ; type_2. i ( string_2, ( string_3 + filename ) ) ; int var_3 = b. getint ( var_4, ( - 1 ) ) ; method_3 ( filename, var_3 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { type_2 var_1 = type_3 . method_2 ( ) ; try { java.util.list < type_1 > list = method_1 ( var_2 , var_1 ) ; return list ; } catch ( type_4 var_3 ) { var_4 . error ( var_3 . method_3 ( ) , var_3 ) ; method_4 ( var_1 ) ; throw new type_5 ( var_3 . method_3 ( ) ) ; } }
[0]: public void method_1 ( ) { if ( ( ( var_1 )!= null ) && ( var_1. method_1 ( ) ) ) { return ; } if ( ( ( var_2 )!= null ) && ( var_2. method_2 ( ) ) ) { android.content.intent intent = new android.content.intent ( var_3 ) ; type_1. method_3 ( this ). method_4 ( intent ) ; super. method_1 ( ) ; } }

************

************
tgt: private void method_1 ( ) { final java.lang.string filename = type_1 . method_2 ( this , type_2 . method_3 ( ) , string_1 ) ; if ( ! ( filename . isempty ( ) ) ) try { final type_3 var_1 = type_4 . method_4 ( filename ) ; final type_5 var_2 = method_5 ( var_1 , filename ) ; type_6 . method_6 ( var_3 , var_2 ) ; } catch ( java.lang.exception var_4 ) { type_7 . method_7 ( this , ( string_2 + ( var_4 . method_8 ( ) ) ) , string_3 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { try { java.util.collection < type_2 > var_2 = method_2 ( var_1. method_3 ( ) ) ; if ( var_2!= null ) { method_4 ( var_1, var_2 ) ; } } catch ( java.lang.exception var_3 ) { throw new type_3 ( var_3. method_5 ( ) ) ; } }

************

************
tgt: public java.util.iterator < type_1 > iterator ( ) { try { method_1 ( ) ; } catch ( java.io.ioexception var_1 ) { var_1 . method_2 ( ) ; } catch ( type_2 var_1 ) { var_1 . method_2 ( ) ; } catch ( type_3 var_1 ) { var_1 . method_2 ( ) ; } return super . iterator ( ) ; }
[0]: public static java.lang.string method_1 ( type_1 < type_2 > var_1, type_2 var_2 ) { type_3 < java.lang.string > names = new type_3 ( ) ; for ( type_2 var_3 : var_1 ) { if ( ( var_3. id )!= ( var_2. id ) ) { names. add ( var_3. method_2 ( ) ) ; } } return type_4. method_3 ( string_1, names ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = method_2 ( ( ++ ( var_2 ) ) ) ; if ( var_1 == null ) { var_1 = method_2 ( ( -- ( var_2 ) ) ) ; } var_1 . method_3 ( var_2 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_1 = var_1 ; this. method_1 ( ) ; for ( type_2 var_2 : this. var_3 ) { try { this. method_2 ( var_2 ) ; } catch ( type_3 var_4 ) { java.lang.system.out.println ( ( var_4 + string_1 ) ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) != null ) { java.lang.system.out.println ( var_1 . method_2 ( ) ) ; var_2 . update ( var_1 ) ; return var_1 . method_2 ( ) . tostring ( ) ; } else { return var_2 . method_3 ( var_1 ) . tostring ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_2 > var_1 = type_3. method_2 ( ) ; var_1. add ( new type_2 ( string_1, var_2, string_2 ) ) ; var_1. add ( new type_2 ( string_3, var_3, 1 ) ) ; var_1. add ( new type_2 ( string_4, var_4, string_5 ) ) ; type_4 < type_1 > var_5 = type_5. method_3 ( var_1, var_6 class ) ; return var_7. method_4 ( var_5 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { var_6 += method_4 ( var_1 , var_2 ) ; if ( ( var_1 == ( var_3 ) ) && ( var_1 . method_2 ( var_2 ) ) ) var_4 = true ; if ( method_3 ( var_1 ) ) var_5 += var_1 . method_4 ( var_2 ) ; var_7 . remove ( var_1 ) ; var_8 = new type_3 ( var_9 , var_7 ) ; }
[0]: public void method_1 ( ) { var_1. settext ( var_2. method_2 ( ). getvalue ( ) ) ; id. settext ( ( ( var_3 ) + string_1 ) ) ; var_4. settext ( var_2. method_3 ( ). value ) ; var_5. settext ( var_2. method_4 ( ). getvalue ( ) ) ; time. settext ( var_2. gettime ( ). getvalue ( ) ) ; var_6. settext ( var_2. method_5 ( ) ) ; }

************

************
tgt: public type_1 put ( type_2 key , type_1 value ) { type_1 var_1 = get ( key ) ; remove ( key ) ; if ( value instanceof type_3 ) { var_2 . put ( key , ( ( type_3 ) ( value ) ) ) ; } else { var_3 . put ( key , value ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_2. method_2 ( var_3, var_4 ) ; settext ( var_5 [ var_6 ] [ var_7 [ var_6 ] ] ) ; method_3 ( var_1, var_8 [ var_6 ] [ var_7 [ var_6 ] ] [ int_1 ], int_2, int_3 ) ; }

************

************
tgt: public static java.util.list method_1 ( java.lang.string content ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < java.lang.integer > ( ) ; int length = content . length ( ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( content . method_2 ( i ) ) == char_1 ) { var_1 . add ( i ) ; } } return var_1 ; }
[0]: public type_1 method_1 ( int n ) { double var_1 = ( java.lang.math.pow ( method_2 ( ), n ) ) * ( type_2. method_3 ( method_4 ( ) ) ) ; double var_2 = ( java.lang.math.pow ( method_2 ( ), n ) ) * ( type_2. method_5 ( method_4 ( ) ) ) ; method_6 ( var_1 ) ; method_7 ( var_2 ) ; return this ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( ( var_2 ) != null ) var_2 . method_1 ( var_1 ) ; if ( ( type ) != null ) type . method_1 ( var_1 ) ; else { type_2 . method_2 ( method_3 ( ) , method_4 ( ) ) . method_5 ( this ) ; } return var_1 ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { type_1 var_3 = var_4. method_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; if ( var_3!= null ) { var_2. method_5 ( string_1, true ) ; if ( ( var_3. method_6 ( ) ) == ( var_5 ) ) { var_2. method_5 ( string_2, true ) ; } return string_3 ; } return string_4 ; }

************

************
tgt: private void method_1 ( ) { java.lang.integer [ ] result = new java.lang.integer [ ( var_1 . length ) * int_1 ] ; int i ; for ( i = 0 ; i < ( var_1 . length ) ; i ++ ) { result [ i ] = var_1 [ i ] ; } while ( i < ( result . length ) ) { result [ i ] = null ; i ++ ; } var_1 = result ; }
[0]: public double method_1 ( ) { int count = this. method_2 ( ) ; if ( count == 0 ) { throw new type_1 ( string_1 ) ; } double var_1 = 0.0 ; double var_2 = this. method_3 ( ) ; for ( double data : this. var_3 ) { var_1 += ( data - var_2 ) * ( data - var_2 ) ; } return ( type_2. method_4 ( ( var_1 / count ) ) ) / var_2 ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string filename ) throws java.lang.exception { java.io.inputstream var_1 = new java.io.fileinputstream ( filename ) ; java.io.bufferedreader buf = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.string line = buf . method_2 ( ) ; java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; while ( line != null ) { var_2 . append ( line ) ; line = buf . method_2 ( ) ; } return var_2 . tostring ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) throw new type_2 ( string_1 ) ; final type_3 < type_1 > var_2 = this. var_3 ; if ( var_2!= null ) method_2 ( ) ; try { this. var_3 = var_1. method_3 ( ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( var_4 ) ; } }

************

************
tgt: public static java.util.arraylist < type_1 > method_1 ( java.util.arraylist < type_1 > list , java.util.arraylist < type_2 > var_1 ) { java.util.arraylist < type_1 > result = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : list ) { for ( type_2 var_3 : var_2 . method_2 ( ) ) { if ( var_1 . contains ( var_3 ) ) { result . add ( var_2 ) ; break ; } } } return result ; }
[0]: java.lang.string tostring ( ) { return java.lang.string. method_1 ( this. var_1, this. var_2, this. var_4, ( string_2 + ( this. var_3 ) ), ( string_3 + ( this. var_5 ) ), ( string_4 + ( this. var_6 ) ), ( string_5 + ( this. var_7 ) ), ( string_6 + ( this. var_8 ) ) ) ; }

************

************
tgt: public boolean method_1 ( ) throws java.io.ioexception { method_4 ( ) ; method_2 ( ) ; if ( ( var_1 ) > ( var_2 ) ) { if ( ( ( var_3 ) & ( var_4 ) ) != 0 ) { return false ; } else { var_5 . method_3 ( var_1 ) ; } } method_5 ( var_1 , true ) ; var_6 = var_1 ; ( var_1 ) ++ ; return true ; }
[0]: private boolean method_1 ( ) { var_1 = var_2. method_2 ( ) ; if ( ( var_1 ) == null ) { var_3 = var_4 ; return false ; } var_5. settext ( var_1. method_3 ( ) ) ; int index = 0 ; for ( java.lang.string var_6 : var_1. method_4 ( ) ) { var_7 [ index ]. settext ( var_6 ) ; index ++ ; } var_8. settext ( java.lang.integer.tostring ( var_1. method_5 ( ) ) ) ; var_3 = var_9 ; method_6 ( var_10 ) ; return true ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; } if ( ( var_2 ) != null ) { var_2 . method_1 ( ) ; } if ( ( var_3 ) != null ) { method_4 ( ) ; } }
[0]: public float get ( type_1 var_1 ) { if ( ( var_2 ) == var_1 ) { return var_3 ; } if ( ( var_1 == ( var_4 ) ) && ( ( var_2 ) == ( var_5 ) ) ) { return ( ( var_3 ) * float_1 ) + int_1 ; } else if ( ( var_1 == ( var_5 ) ) && ( ( var_2 ) == ( var_4 ) ) ) { return ( ( var_3 ) - int_1 ) / float_1 ; } throw new type_2 ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 ; java.util.list < type_3 > var_2 ; var_3 . method_2 ( string_1 , var_4 ) ; var_1 = var_5 . method_3 ( ) ; for ( type_4 var_6 : var_7 ) { var_2 = var_5 . method_4 ( var_1 , var_6 , false ) ; var_5 . method_5 ( var_2 , var_6 ) ; } }
[0]: public void method_1 ( android.view.view view ) { type_1 item = var_1. get ( position ) ; if ( var_1. contains ( item ) ) { listener. method_2 ( item. getid ( ) ) ; var_1. remove ( position ) ; method_3 ( position ) ; method_4 ( position, var_1. size ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_2 ( this . id ) ; var_1 . method_2 ( this . title ) ; var_1 . method_2 ( this . var_4 ) ; var_1 . method_3 ( this . var_5 ) ; var_1 . method_2 ( this . var_6 ) ; var_1 . method_4 ( ( this . var_7 ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. get ( var_3 ). method_2 ( ) ; if ( var_1. method_3 ( ) ) { var_4. method_4 ( ( ( type_2 ) ( var_1 ) ) ) ; } else { } ( var_3 ) -- ; ( ( type_3 ) ( view ) ). method_5 ( var_3 ) ; }

************

************
tgt: private void method_1 ( ) { if ( method_2 ( ) ) { type_1 var_1 = new type_1 ( var_2 . method_3 ( ) , var_3 . get ( 0 ) . var_4 ) ; type_2 . method_4 ( this , string_1 , var_3 . get ( 0 ) , var_1 ) ; var_3 . set ( 0 , var_1 ) ; } else { type_2 . method_4 ( this , string_2 ) ; } }
[0]: public int method_1 ( ) { int var_1 = var_2. method_2 ( ) ; int var_3 = type_1. method_3 ( type_2. method_4 ( ). method_5 ( ). var_4, var_5 ) ; int var_6 = type_1. method_3 ( 0, var_7 ) ; if ( var_1 < 1 ) { return 0 ; } var_2. method_6 ( var_3, var_6 ) ; return var_2. method_7 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 ; try { java.io.inputstream var_2 = this . method_2 ( ) . open ( string_1 ) ; int size = var_2 . method_3 ( ) ; byte [ ] buffer = new byte [ size ] ; var_2 . method_4 ( buffer ) ; var_2 . method_5 ( ) ; var_1 = new java.lang.string ( buffer , string_2 ) ; } catch ( java.io.ioexception var_3 ) { var_3 . method_6 ( ) ; return null ; } return var_1 ; }
[0]: public void method_1 ( ) { var_1. method_1 ( ). method_2 ( new type_1 < java.lang.void > ( ) { public void method_3 ( type_2 < java.lang.void > var_2 ) { if ( var_2. method_4 ( ) ) { type_3. method_5 ( var_3, string_1 ) ; var_4. method_6 ( var_5, false ) ; method_7 ( ) ; } else { type_3. method_8 ( var_3, ( string_2 + ( var_2. method_9 ( ) ) ) ) ; } } } ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 , string_1 ) ; if ( var_1 != null ) { var_3 = var_1 ; if ( ( method_3 ( ) ) == null ) { type_2 . method_2 ( var_2 , string_2 ) ; } else { type_2 . method_2 ( var_2 , string_3 ) ; method_3 ( ) . method_4 ( var_4 , null , this ) ; } } }
[0]: public void method_1 ( int item, int var_1 ) { int i = 0 ; type_1 var_2 = new type_1 ( ) ; var_2. data = item ; var_3 = null ; type_1 temp ; temp = var_4 ; while ( i < ( var_1 - 1 ) ) { i ++ ; temp = var_5 ; } var_3 = var_5 ; var_5 = var_2 ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 var_1 = method_2 ( ) . method_3 ( var_2 ) ; if ( ( ( ! ( var_3 ) ) && ( var_1 != null ) ) && ( var_1 instanceof type_2 ) ) { type_3 . i ( string_1 , string_2 ) ; var_4 = null ; } }
[0]: private type_1 method_1 ( java.lang.string name, boolean var_1 ) { for ( type_2 var_2 : var_3 ) { if ( name. method_2 ( var_2. tostring ( ) ) ) return var_2 ; } if ( var_1 ) throw new type_3 ( ( ( ( string_1 + name ) + string_2 ) + ( method_3 ( ) ) ) ) ; return null ; }

************

************
tgt: public boolean method_1 ( final java.lang.string name , final int var_1 ) { type_1 var_2 = method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; var_3 . put ( var_4 , name ) ; var_3 . put ( var_5 , var_1 ) ; final long var_6 = var_2 . method_3 ( var_7 , null , var_3 ) ; return var_6 != ( - 1 ) ; }
[0]: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { var_1. method_2 ( ) ; var_1. method_2 ( ) ; var_1. method_2 ( ) ; if ( ( var_1. method_3 ( ) ) == ( var_2 ) ) { } else { var_1. method_2 ( ) ; } var_1. method_2 ( ) ; }

************

************
tgt: public void method_1 ( android.content.context context , type_1 var_1 , int [ ] var_2 ) { super . method_1 ( context , var_1 , var_2 ) ; type_2 . method_2 ( var_3 , string_1 ) ; context . method_3 ( new android.content.intent ( context , var_5 class ) ) ; type_2 . method_2 ( var_3 , string_2 ) ; }
[0]: private java.lang.boolean method_1 ( java.lang.string var_1, java.lang.boolean var_2 ) { java.lang.string var_3 = type_1. method_2 ( ). method_3 ( ). method_4 ( var_1 ) ; try { return java.lang.boolean. method_5 ( var_3 ) ; } catch ( java.lang.nullpointerexception var_4 ) { return var_2 ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_3 ) == null ) { return ; } final boolean var_1 = ( var_2 ) != null ; var_3 . method_2 ( ( var_1 ? var_4 : var_5 ) ) ; if ( ! var_1 ) { return ; } final java.lang.string var_6 = method_3 ( ) ; var_7 = false ; var_2 . settext ( var_6 ) ; }
[0]: public type_1 method_1 ( ) throws java.lang.exception { type_2 < java.lang.string > var_1 = var_2. method_2 ( ) ; java.lang.object value = var_1. method_3 ( ). get ( var_3. trim ( ) ) ; type_1 result = null ; if ( value!= null ) { result = new type_1 ( value. tostring ( ) ) ; } else { result = new type_1 ( string_1 ) ; } method_4 ( result ) ; return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { type_2 . method_2 ( var_3 , ( string_1 + ( var_1 . method_3 ( ) ) ) ) ; var_4 . method_4 ( false ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_5 ( ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) { type_1 var_3 = var_4. method_2 ( var_5 ) ; var_1. method_3 ( var_6 ) ; if ( var_2 == ( var_7 ) ) { var_8. method_4 ( var_9 ) ; var_10. method_5 ( var_11 ) ; var_10. method_6 ( new type_3 ( ) { public void method_7 ( android.view.view view ) { if ( ( var_12 )!= null ) { var_12. method_7 ( view ) ; } } } ) ; } return var_3 ; }

************

************
tgt: public static type_1 method_1 ( int value ) { switch ( value ) { case int_1 : case int_2 : return var_1 ; case int_3 : case int_4 : return var_2 ; case int_5 : case int_6 : return var_3 ; case int_8 : return var_4 ; case int_10 : return var_5 ; case int_12 : return var_6 ; default : return null ; } }
[0]: private void method_1 ( ) { if ( var_1 ) { type_1. method_2 ( var_2, string_1 ) ; var_3. method_3 ( var_4 ) ; final type_2 var_5 = type_2. method_4 ( ) ; var_5. method_1 ( var_6 ) ; var_1 = false ; } }

************

************
tgt: private static type_1 method_1 ( java.lang.object arg ) { if ( arg instanceof type_2 ) { type_2 p = ( ( type_2 ) ( arg ) ) ; return p . method_2 ( ) . method_3 ( ) ; } else if ( ! ( arg instanceof type_3 ) ) { return type_4 . method_4 ( arg ) ; } return null ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = ( var_2 )? var_3 : var_4 ; java.lang.string var_5 = ( ( method_2 ( ) ) == null )? string_1 : ( method_2 ( ) ) + var_1 ; java.lang.string var_6 = var_5 + ( getname ( ) ) ; return var_6 ; }

************

************
tgt: public boolean method_1 ( java.lang.string value ) { for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_3 . method_2 ( i ) ) ) ; if ( ( var_2 . tolowercase ( ) . compareto ( value . tolowercase ( ) ) ) == 0 ) return true ; } return false ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string filename, type_1 var_2 ) { method_2 ( filename ) ; type_2 var_3 = method_3 ( filename ) ; if ( ( var_3. state ) == ( var_4 ) ) { java.lang.system.out.println ( string_2 ) ; return false ; } var_5 = var_2 ; method_4 ( var_3 ) ; var_6 = null ; return true ; }

************

************
tgt: public < type_1 > type_1 method_1 ( final java.io.inputstream content , final java.lang.class < type_1 > type ) throws type_2 , type_3 { try { return this . var_1 . method_2 ( new type_4 ( content ) , type ) ; } catch ( type_2 | type_3 var_2 ) { type_5 . method_3 ( ( ( ( ( string_1 + type ) + string_2 ) + content ) + string_3 ) ) ; throw var_2 ; } }
[0]: private boolean method_1 ( type_1 var_1, boolean add ) { return ( var_1!= null ) && ( method_2 ( add, var_1. method_3 ( ), ( var_1. method_4 ( ). method_5 ( )? var_1. method_4 ( ). method_7 ( ) : var_1. method_4 ( ). method_6 ( ) : var_1. method_4 ( ). method_8 ( ), null, null, null, null, null, var_1 ) ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = this ; if ( type_1 . method_2 ( var_2 , false ) ) { type_2 . method_3 ( var_3 ) ; } else { type_2 . method_3 ( var_4 ) ; } super . method_1 ( ) ; type_4 . method_5 ( this ) ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = this. method_2 ( ) ; var_1. method_3 ( ) ; type_2. method_4 ( ). method_5 ( var_1 ). method_6 ( false ). method_7 ( false ). method_8 ( false ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( type_1 . size ( ) ) ; i ++ ) { if ( ( var_2 . method_2 ( ) ) >= ( type_1 . get ( i ) . method_2 ( ) ) ) var_1 = ( type_1 . size ( ) ) - ( ++ count ) ; } return var_1 ; }
[0]: public type_1 method_1 ( final java.lang.string id, final type_2 var_1, final type_3 var_2 ) { synchronized ( this. var_3 ) { if ( this. var_4 ) { throw new type_4 ( string_1 ) ; } this. var_4 = var_5 ; } return new type_5 ( id, var_6, this. method_2 ( ), var_1, var_2 ) ; }

************

************
tgt: public static java.net.url method_1 ( int var_1 ) { try { final java.net.url url = type_1 . method_2 ( type_2 . replaceall ( var_2 , java.lang.integer.tostring ( var_1 ) ) , int_1 ) ; if ( ! ( type_3 . method_3 ( type_1 . method_2 ( url ) ) ) ) { throw new type_4 ( ( string_1 + var_1 ) ) ; } return url ; } catch ( java.io.ioexception var_3 ) { throw new type_5 ( var_3 ) ; } }
[0]: public void method_1 ( int var_1 ) { while ( (! ( var_2 ) ) && (! ( type_1. method_2 ( ) ) ) ) { if ( var_1 > 0 ) { try { java.lang.thread. method_3 ( var_1 ) ; } catch ( type_2 var_3 ) { } } method_4 ( ) ; method_5 ( ) ; var_4. method_6 ( var_5, var_6, var_7 ) ; var_4. method_7 ( var_8. tostring ( ) ) ; var_4. method_8 ( var_9, var_10, var_11 ) ; } } }

************

************
tgt: public static type_1 method_1 ( final type_2 var_1 ) { return new type_1 ( ) { public type_3 iterator ( ) { return new type_3 ( ) { java.util.iterator var_2 = var_1 . method_2 ( ) . iterator ( ) ; public boolean method_3 ( ) { return var_2 . method_3 ( ) ; } public java.lang.object method_4 ( ) { return var_2 . method_4 ( ) ; } } ; } } ; }
[0]: public void method_1 ( ) { type_1. assertequals ( var_1, type_2. method_2 ( var_2, 1 ) ) ; type_1. assertequals ( var_3, type_3. method_2 ( var_2, ( - int_1 ) ) ) ; type_1. assertequals ( var_3, type_4. method_2 ( var_2, int_2 ) ) ; }

************

************
tgt: private void method_1 ( int answer ) { var_1 . add ( new type_1 ( var_2 . get ( ( ( counter ) - 1 ) ) , answer , ( ( ( var_3 ) * 1.0 ) / ( var_4 ) ) , starttime , counter , var_5 , new type_3 ( this . method_3 ( ) . method_4 ( ) ) , ( ( var_6 ) && ( ( counter ) < int_1 ) ) ) ) ; }
[0]: public int method_1 ( int var_1 ) { java.util.arraylist < type_1 > var_2 = var_3. method_2 ( ) ; int var_4 = 0 ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_1 == ( var_2. get ( i ). method_3 ( ) ) ) { var_4 = var_2. get ( i ). method_4 ( ) ; break ; } } return var_4 ; }

************

************
tgt: private int method_1 ( int var_1 , int var_2 , int var_3 ) { if ( var_3 == 0 ) return 0 ; int var_4 = var_3 / ( var_5 ) ; int var_6 = ( var_3 - ( var_4 * ( var_5 ) ) ) - 1 ; return ( java.lang.math.abs ( ( var_1 - var_4 ) ) ) + ( java.lang.math.abs ( ( var_2 - var_6 ) ) ) ; }
[0]: public void method_1 ( java.lang.string data ) { type_1 var_1 = getactivity ( ). method_2 ( var_2 ) ; java.lang.string var_3 = var_1. getstring ( var_4, string_1 ) ; type_2 var_5 = var_1. method_3 ( ) ; var_5. method_4 ( var_4, ( ( var_3 + ( data. substring ( 0, ( ( data. length ( ) ) - int_1 ) ) ) ) ) ; var_5. commit ( ) ; }

************

************
tgt: public int method_1 ( java.lang.string var_1 , int var_2 , int var_3 ) { java.lang.system.out.println ( ( ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) + string_2 ) + var_3 ) ) ; type_1 event = var_4 . get ( ( ( var_5 ) ++ ) ) ; assertequals ( var_6 , var_7 ) ; assertequals ( var_8 , var_1 ) ; assertequals ( var_9 , var_2 ) ; assertequals ( var_10 , var_3 ) ; return ( var_11 ) ++ ; }
[0]: public static type_1 method_1 ( int var_1 ) { switch ( var_1 ) { case var_2 : return var_3 ; case var_4 : return var_5 ; case var_6 : return var_7 ; case var_8 : return var_9 ; case var_10 : return var_11 ; case var_12 : return var_13 ; case var_14 : return var_15 ; case var_16 : return var_17 ; } throw new type_2 ( ( string_1 + var_1 ) ) ; }

************

************
tgt: public void method_1 ( android.content.intent var_1 ) { var_2 . method_2 ( string_1 ) ; if ( ( ( var_3 ) != null ) && ( var_3 . method_3 ( ) ) ) { var_2 . info ( string_2 ) ; method_4 ( ) ; } else { var_2 . info ( string_3 ) ; } super . method_1 ( var_1 ) ; }
[0]: public final java.lang.string start ( ) throws java.lang.exception { type_1 var_1 = type_2. method_1 ( ) ; type_3 var_2 = var_1. method_2 ( ) ; var_3 = var_4. method_3 ( var_2 ) ; var_4. method_4 ( method_5 ( ), var_5 ) ; return var_6 ; }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 ) { final type_3 var_2 = new type_3 ( ) ; var_2 . method_2 ( new type_4 ( ) , var_3 ) ; var_2 . method_4 ( true ) ; var_2 . method_5 ( true ) ; var_2 . method_6 ( var_4 ) ; var_2 . method_7 ( var_5 ) ; return var_2 ; }
[0]: public void method_1 ( ) { while ( var_1 ) { java.lang.system.out.println ( string_1 ) ; method_2 ( new java.io.file ( var_2 ) ) ; java.lang.system.out.println ( string_2 ) ; method_2 ( new java.io.file ( var_3 ) ) ; var_4 = true ; java.lang.system.out.println ( string_3 ) ; if ( var_1 ) try { java.lang.thread. method_3 ( var_5 ) ; } catch ( type_1 var_6 ) { } } }

************

************
tgt: private type_1 getvalue ( type_2 var_1 , type_3 context ) { type_4 var_2 = ( ( type_4 ) ( context . getcontext ( ) ) ) ; type_5 var_3 = var_2 . value ( 0 ) ; if ( ( var_3 . method_1 ( ) ) != null ) return var_5 . get ( var_3 . method_1 ( ) . gettext ( ) ) ; return new type_1 ( var_3 . string ( ) . gettext ( ) ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string [ ] var_1 ) { java.lang.string str = string_1 ; for ( int i = 0 ; i < ( ( var_1. length ) - 1 ) ; i ++ ) { str. method_2 ( var_1 [ i ] ) ; str. method_2 ( string_2 ) ; } str. method_2 ( var_1 [ ( ( var_1. length ) - 1 ) ] ) ; return str ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( this , new type_3 ( ) ) ; super . method_1 ( var_1 ) ; var_2 = new type_4 ( ) ; var_3 = new type_5 ( ) { public void method_3 ( ) { android.content.intent intent = new android.content.intent ( var_4 this , var_5 class ) ; method_4 ( intent ) ; method_5 ( ) ; } } ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = type_1. method_2 ( var_2, var_3 ) ; if ( var_1. method_3 ( ) ) { method_4 ( var_1. method_5 ( ) ) ; } else { var_1. method_6 ( ( ( method_7 ( ) ) & int_1 ) ) ; } var_3 += var_1. method_8 ( ) ; for ( type_2 var_4 : method_9 ( ). var_5 ) { var_4. method_10 ( var_1 ) ; } return var_1 ; } }

************

************
tgt: private java.util.set < type_1 > method_1 ( final type_2 var_1 ) { final java.util.set < type_1 > var_2 = new java.util.hashset < > ( ) ; for ( final type_3 p : this . method_2 ( ) ) { final java.util.set < type_1 > var_3 = p . method_3 ( var_1 ) ; if ( var_3 != null ) { var_2 . method_4 ( p . method_3 ( var_1 ) ) ; } } return var_2 ; }
[0]: public void method_1 ( java.lang.string var_1, type_1 var_2, type_2 var_3 ) { java.lang.string key = type_3. method_2 ( var_2 ) ; type_4. method_3 ( var_4, ( ( ( string_1 + var_1 ) + string_2 ) + key ) ) ; type_5 < java.lang.string, type_1 > var_5 = method_4 ( var_1 ) ; type_3. method_5 ( context, var_2, var_1, key ) ; type_3. method_6 ( var_5, var_2, var_3 ) ; var_5. put ( type_3. method_2 ( var_2 ), var_2 ) ; }

************

************
tgt: private int method_1 ( int var_1 ) { int var_2 = ( ( int ) ( type_1 . method_2 ( var_3 . method_3 ( ) , var_3 . method_4 ( ) ) ) ) ; int var_4 = type_1 . min ( var_2 , var_1 ) ; return type_3 . method_6 ( var_4 ) ; }
[0]: public void method_1 ( type_1 type_2 ) { java.util.list < type_1 > var_1 ; synchronized ( var_2 ) { if (! ( var_3. contains ( type_2 ) ) ) { return ; } var_1 = method_2 ( type_2 ) ; } var_4. method_3 ( type_2 ) ; for ( type_1 c : var_1 ) { var_4. method_4 ( c, c. method_5 ( ) ) ; } } }

************

************
tgt: public void method_1 ( java.util.map < java.lang.integer , java.lang.object > data ) { if ( ( data != null ) && ( ( data . method_2 ( ) . size ( ) ) != 0 ) ) { for ( java.util.map.entry < java.lang.integer , java.lang.object > var_1 : data . method_2 ( ) ) { var_2 . method_3 ( var_1 . method_4 ( ) , var_1 . getvalue ( ) ) ; } var_2 . method_5 ( ) ; } }
[0]: public void add ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_2. add ( new type_2 ( var_1. method_1 ( ). get ( string_1 ). method_2 ( ), var_1. method_1 ( ). get ( string_2 ). method_2 ( ) ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; if ( ( method_3 ( var_3 ) ) != null ) { var_4 = true ; if ( var_1 == null ) { method_4 ( ) . method_5 ( ) . replace ( var_3 , new type_2 ( ) , string_1 ) . commit ( ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( type_2. method_2 ( null, string_1, string_2, var_2, var_3 ) ) == ( var_4 ) ) { if ( method_3 ( ) ) { type_2. method_4 ( null, string_3, string_4, var_5 ) ; java.lang.system.exit ( 0 ) ; } else { type_2. method_4 ( null, string_5, string_4, var_6 ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { var_2 . settext ( type_2 . method_2 ( this , var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ) ; var_3 . execute ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; } else { var_2 . settext ( var_4 ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; method_3 ( var_4 ) ; type_4 var_6 = ( ( type_4 ) ( var_4. method_4 ( var_7 ) ) ) ; var_8 = new type_5 ( getactivity ( ), var_9, type_6. method_5 ( ) ) ; var_6. method_6 ( var_8 ) ; type_7. method_7 ( var_6 ) ; return var_4 ; }

************

************
tgt: private java.lang.string method_1 ( int var_1 , int var_2 ) { java.lang.string var_3 = string_1 ; var_2 += int_1 ; if ( var_2 >= int_2 ) { var_1 ++ ; var_2 -= int_2 ; } var_3 = method_2 ( var_3 , var_1 , var_2 ) ; return var_3 += var_2 ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. method_2 ( var_1 ) ; java.util.date date = new java.util.date ( ) ; if ( var_3 == null ) { var_3. method_3 ( false ) ; } var_3. method_4 ( var_2 ) ; var_3. method_5 ( date ) ; return var_4. method_6 ( var_3 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 ) { if ( ! ( method_2 ( var_1 ) ) ) { var_3 . put ( var_1 , var_2 ) ; var_4 . add ( var_2 . method_3 ( ) . tostring ( ) ) ; return ; } try { throw new type_2 ( ) ; } catch ( type_2 var_5 ) { java.lang.system.out.println ( string_1 ) ; } }
[0]: private void method_1 ( type_1 var_1, java.util.list < java.lang.object > out ) throws java.lang.exception { if ( ( var_1. method_2 ( ) ) >= ( var_2 ) ) { var_1. method_3 ( ) ; type_2 var_3 = method_4 ( var_1 ) ; if ( var_3 == null ) { var_1. method_5 ( ) ; out. add ( var_3 ) ; } } else { out. add ( null ) ; } }

************

************
tgt: public void method_1 ( ) { type_3 var_4 = type_4 . method_4 ( ) ; type_1 var_1 = type_2 . method_2 ( ) ; var_1 . method_6 ( ) . add ( var_4 ) ; java.lang.long var_2 = var_3 . method_3 ( var_1 ) . getid ( ) ; java.lang.long var_5 = var_4 . getid ( ) ; type_5 . assertequals ( var_4 , var_6 . get ( var_2 , var_5 ) ) ; }
[0]: public void method_1 ( ) { while ( var_1 ) { if ( var_2. isempty ( ) ) { try { method_2 ( var_2. method_3 ( ) ) ; } catch ( type_1 var_3 ) { type_2. method_4 ( var_4, string_1, var_3 ) ; } } else { try { type_3. method_5 ( int_1 ) ; } catch ( java.lang.exception var_3 ) { type_2. method_4 ( var_4, string_2, var_3 ) ; } } } type_2. method_6 ( var_4, string_3 ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.long var_1 = ( type_1 . method_2 ( ) ) / int_1 ; var_2 = var_1 . tostring ( ) ; var_3 = ( ( ( ( java.lang.string . method_3 ( var_4 . method_4 ( ) ) ) + string_1 ) + ( java.lang.string . method_3 ( ( ( var_4 . method_5 ( ) ) + 1 ) ) ) ) + string_1 ) + ( java.lang.string . method_3 ( var_4 . method_6 ( ) ) ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string string ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( java.lang.string var_2 : type_1. method_2 ( string ) ) { var_1. append ( type_2. touppercase ( var_2. method_3 ( 0 ) ) ). append ( var_2. substring ( 1 ) ) ; } return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != ( var_2 ) ) { int var_3 = ( ( var_2 ) != null ) ? var_2 . method_2 ( ) : 0 ; var_2 = var_1 ; int var_4 = ( ( var_2 ) != null ) ? var_2 . method_2 ( ) : 0 ; method_3 ( ) ; if ( var_3 > 0 ) { method_4 ( 0 , var_3 ) ; } if ( var_4 > 0 ) { method_5 ( 0 , var_4 ) ; } } }
[0]: public void method_1 ( type_1 key, type_2 < type_3 > values, type_4 context ) throws java.io.ioexception, type_5 { double var_1 = 0.0 ; double var_2 = context. method_2 ( ). method_3 ( string_1, float_1 ) ; for ( type_3 var_3 : values ) { var_1 += var_3. get ( ) ; } title. set ( string_2 ) ; var_4. set ( java.lang.string. method_4 ( ( var_1 * var_2 ) ) ) ; context. method_5 ( title, var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int index ) { if ( ! ( method_2 ( index ) ) ) return ; type_2 < type_1 > var_2 = this . start ; for ( int i = 0 ; i < index ; i ++ ) { var_2 = var_2 . method_3 ( ) ; } var_2 . method_4 ( var_1 ) ; }
[0]: public static void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; int response = type_1. method_2 ( ) ; if ( response == 1 ) { type_2. method_3 ( ) ; type_2. main ( null ) ; } else if ( response == int_1 ) { type_3. main ( null ) ; } else { java.lang.system.out.println ( string_2 ) ; type_2. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( final type_1 < ? > var_1 , final type_3 var_2 ) throws java.lang.exception { type_4 var_4 = method_2 ( var_2 ) ; if ( var_4 . method_3 ( ) ) { type_5 . method_4 ( var_4 ) ; } type_6 var_5 = new type_6 ( var_4 ) ; var_5 . method_1 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { java.lang.string name = var_2. gettext ( ) ; java.lang.system.out.println ( name ) ; type_2. main ( null ) ; type_3 a = new type_3 ( ) ; var_3 = name ; a. method_2 ( null ) ; var_4. name = name ; try { type_4. main ( null ) ; } catch ( java.io.ioexception var_5 ) { java.util.logging.logger.getlogger ( var_6 class. getname ( ) ). method_3 ( var_7, null, var_5 ) ; } this. method_4 ( ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int i ) { if ( ( var_1 . c ) == char_1 ) return x . method_2 ( i ) ; else if ( ( var_1 . c ) == char_2 ) return var_2 . method_2 ( i ) ; else return ! ( var_3 . method_2 ( i ) ) ; }
[0]: private void method_1 ( int var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4 ) { type_1 var_5 = new type_1 ( ) ; if ( var_4. equals ( string_1 ) ) { var_5. method_2 ( this, var_1, var_2, var_3 ) ; } else { var_5. method_2 ( this, var_1, var_3, var_2, java.lang.integer.parseint ( var_4 ) ) ; } }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = method_2 ( ) . method_3 ( var_2 ) ; if ( ( var_3 . isempty ( ) ) && ( var_1 != null ) ) { java.util.list < type_2 > var_4 = var_1 . method_4 ( ) ; if ( ! ( var_4 . isempty ( ) ) ) method_5 ( var_4 , false ) ; } method_6 ( method_7 ( ) ) ; method_8 ( ) . method_9 ( var_5 , var_6 ) ; }
[0]: private void method_1 ( ) throws type_1, java.io.ioexception { if ( ( type_2 )!= null ) { if ( ( type_2. method_2 ( ) ) == null ) { throw new type_1 ( string_1 ) ; } type_2. method_2 ( ). method_3 ( ) ; if ( type_2. method_4 ( ) ) { method_5 ( ) ; } method_6 ( var_1 ) ; } type_2. method_2 ( ). method_3 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 [ ] > var_1 ) { try { var_2 = var_1 . method_2 ( ) ; } catch ( type_4 var_3 ) { type_5 . method_4 ( string_1 , string_2 , var_3 ) ; } catch ( java.io.ioexception var_3 ) { type_5 . method_4 ( string_1 , string_3 , var_3 ) ; } catch ( type_6 var_3 ) { } finally { this . method_3 ( new type_3 ( ) ) ; } }
[0]: private static int method_1 ( char [ ] array, int var_1, java.lang.stringbuilder var_2 ) { for ( int i = var_1 ; i < ( array. length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case char_1 : continue ; case char_2 : case char_3 : return i + 1 ; default : var_2. append ( c ) ; } } return array. length ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_2 ( this . path ) ; var_1 . method_3 ( this . var_3 ) ; var_1 . method_2 ( this . var_4 ) ; var_1 . method_3 ( this . id ) ; var_1 . method_3 ( this . size ) ; var_1 . method_5 ( ( this . var_6 ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { if (! ( var_1. method_2 ( string_1 ) ) ) throw new type_2 ( ( ( string_2 + var_1 ) + string_3 ) ) ; int x = ( ( var_1. method_3 ( 0 ) ) - char_1 ) + 1 ; int y = ( ( var_1. method_3 ( 0 ) ) - char_1 ) + 1 ; return type_1. method_4 ( x, y ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_2 var_1 = type_2 . method_2 ( ) ; long id ; if ( ( var_1 . method_3 ( var_2 class ) . count ( ) ) > 0 ) { id = ( var_1 . method_3 ( var_2 class ) . method_4 ( "id" ) ) + 1 ; } else { id = 1 ; } type_1 j = new type_1 ( ) ; j . method_5 ( id ) ; return j ; }
[0]: private void method_1 ( type_1 var_1, type_1... var_2 ) { var_3. method_2 ( var_1. method_3 ( ) ) ; type_2 var_4 = var_5. method_4 ( var_1. method_5 ( ). var_6 ) ; method_6 ( var_1, var_4 ) ; type_1 [ ] var_7 = type_3. method_7 ( var_2, var_1 ) ; asserttrue ( var_5. method_8 ( var_7 ) ) ; }

************

************
tgt: public java.lang.string method_1 ( android.widget.linearlayout var_1 ) { java.lang.string var_2 = string_1 ; for ( int i = 1 ; i < int_1 ; i ++ ) { type_1 var_3 = ( ( type_1 ) ( var_1 . method_2 ( i ) ) ) ; java.lang.string text = var_3 . gettext ( ) . tostring ( ) ; if ( ! ( text . trim ( ) . equals ( string_1 ) ) ) { var_2 += text + string_2 ; } } return var_2 ; }
[0]: public java.util.hashmap < java.lang.string, java.lang.object > count ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.integer var_2 = var_1. method_1 ( ) ; java.util.hashmap < java.lang.string, java.lang.object > response = new java.util.hashmap < > ( ) ; response. put ( string_1, var_3 ) ; response. put ( string_2, var_2 ) ; response. put ( string_3, ( ( int ) ( type_2. method_2 ( ( var_2 / ( var_4 ) ) ) ) ) ) ; return response ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.string var_2 , type_3 field , java.lang.object var_3 , java.lang.string var_4 ) { return var_1 . get ( var_2 , field . getname ( ) , type_4 . method_2 ( java.util.arrays.aslist ( ( ( java.lang.integer [ ] ) ( type_6 . method_4 ( var_3 , field ) ) ) ) ) , var_4 ) ; }
[0]: public long method_1 ( ) throws java.io.ioexception { long var_1 = 0 ; try ( type_1 var_2 = var_3. method_2 ( ) ) { for ( type_2 var_4 : var_5. values ( ) ) { var_1 += var_4. method_1 ( ) ; } } return var_1 ; } }

************

************
tgt: private void method_1 ( ) throws java.io.ioexception { java.util.list < type_1 > var_1 = type_2 . method_2 ( var_2 . method_3 ( ) ) ; type_3 var_3 = type_3 . method_4 ( ) ; type_4 var_4 = type_4 . method_4 ( ) ; for ( type_1 var_5 : var_1 ) { type_5 var_6 = var_3 . method_5 ( var_7 ) ; var_4 . method_7 ( var_6 , var_9 ) ; } }
[0]: public type_1 set ( type_2 [ ] var_1, type_2 var_2 ) { java.util.list < type_3 > var_3 = java.util.arrays.aslist ( ) ; for ( type_2 var_4 : var_1 ) { type_3 var_5 = method_1 ( var_4, var_2 ) ; if ( var_5!= null ) { var_3. add ( var_5 ) ; } } return set ( var_3, var_2 ) ; }

************

************
tgt: protected type_1 method_1 ( ) throws java.lang.exception { type_2 var_1 = var_2 . method_2 ( ) ; java.lang.string var_3 = var_1 . method_3 ( ) ; if ( ! ( var_3 . equals ( string_1 ) ) ) { return ( ( type_1 ) ( type_3 . method_4 ( var_1 . method_6 ( var_4 ) , var_3 , java.lang.string.format ( string_2 , var_3 ) ) ) ) ; } else { return null ; } }
[0]: public void method_1 ( java.util.list < type_1 > var_1, java.lang.exception var_2 ) { if ( ( null!= var_2 ) && ( null!= var_1 ) ) { for ( type_1 var_3 : var_1 ) { type_2. method_2 ( ). method_3 ( var_4, var_3 ) ; } } }

************

************
tgt: private static java.util.map < java.lang.class < ? extends type_1 > , java.lang.class < ? extends type_2 > > method_1 ( ) { return new type_3 < java.lang.class < ? extends type_1 > , java.lang.class < ? extends type_2 > > ( ) { { put ( var_1 class , var_2 class ) ; put ( var_3 class , var_4 class ) ; put ( var_5 class , var_6 class ) ; put ( var_8 class , var_9 class ) ; put ( var_10 class , null ) ; put ( var_7 class , null ) ; } } ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.util.map < java.lang.string, java.lang.string > var_1 = type_1. method_1 ( string_1 ) ; var_2 = var_1. get ( string_2 ) ; var_3 = type_1. method_2 ( var_4, var_2 ) ; var_5. method_3 ( var_2 ) ; var_5. method_4 ( var_2, string_3 ) ; var_5. method_5 ( var_2 ) ; var_5. method_6 ( var_2 ) ; }

************

************
tgt: public boolean equals ( final java.lang.object obj ) { if ( ( this ) == obj ) { return true ; } if ( ( obj == null ) || ( ! ( obj instanceof type_1 ) ) ) { return false ; } return var_1 . equals ( ( ( type_1 ) ( obj ) ) . var_1 ) ; }
[0]: public void method_1 ( ) throws type_1 { java.lang.string var_1 = string_1 ; type_2 var_2 = new type_2 ( ) ; method_2 ( var_3. method_3 ( var_1 ) ). method_4 ( var_2 ) ; type_4. asserttrue ( ( var_2 == ( var_4. method_5 ( var_1, var_5 ) ) ) ) ; }

************

************
tgt: private java.lang.string method_1 ( int var_1 ) { return ( var_2 ) == null ? ( ( var_3 ) + string_1 ) + var_1 : ( ( ( ( var_3 ) + string_2 ) + ( ( var_2 ) + var_1 ) ) + string_2 ) + var_1 ; }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ) )!= null ) { int count = var_1. method_2 ( ). method_3 ( ) ; for ( int i = var_2. size ( ) ; i <= count ; i ++ ) { var_2. add ( false ) ; var_3. add ( false ) ; var_4. add ( false ) ; } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_3 ( var_2 ) ; method_4 ( var_3 ) . method_5 ( this ) ; method_4 ( var_4 ) . method_5 ( this ) ; method_4 ( var_5 ) . method_5 ( this ) ; method_4 ( var_6 ) . method_5 ( this ) ; }
[0]: public boolean method_1 ( final java.lang.class <? extends type_1 > type ) { type_1 var_1 = type_2. get ( type_3. method_2 ( var_2, new type_4 < type_1 > ( ) { public boolean method_3 ( type_1 var_3 ) { return var_3. getclass ( ). method_4 ( type ) ; } } ), 1, null ) ; if ( var_1 == null ) { return false ; } var_1. method_5 ( method_6 ( ), method_7 ( ) ) ; var_2. remove ( var_1 ) ; return true ; } return false ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { var_1 . method_2 ( int_1 ) ; var_1 . method_3 ( int_2 ) ; var_1 . method_4 ( string_1 ) ; var_1 . method_5 ( string_2 ) ; var_1 . method_6 ( false ) ; var_1 . method_7 ( false ) ; var_1 . method_8 ( false ) ; var_1 . method_9 ( false ) ; var_1 . method_10 ( true ) ; var_1 . method_11 ( var_2 ) ; }
[0]: public static java.io.file method_1 ( final long var_1 ) { final java.lang.string var_2 = ( ( ( var_3 ) + var_1 ) + string_1 ) + ( var_4. format ( new java.util.date ( ) ) ) ; try { return java.io.file. method_2 ( var_2, string_2, type_1. method_3 ( var_1 ) ) ; } catch ( java.io.ioexception var_5 ) { type_2. method_4 ( ( string_3 + ( var_5. tostring ( ) ) ) ) ; return null ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final java.lang.string var_1 = string_1 ; method_2 ( var_1 ) ; type_1 var_2 = new type_1 ( ( ( var_3 ) + var_1 ) ) ; type_2 . asserttrue ( var_4 . method_3 ( var_2 , type_3 . method_4 ( ) ) . isempty ( ) ) ; method_5 ( var_1 ) ; try { var_4 . method_6 ( var_2 , var_5 ) ; } catch ( type_4 var_6 ) { return ; } type_2 . fail ( string_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { float var_2 = var_3. method_2 ( ) ; var_4 = ( var_5 ) + ( var_2 * ( var_6 ) ) ; var_7 = var_1. method_3 ( ) ; var_8 = var_1. method_4 ( ) ; var_9 = ( ( var_2 - float_1 ) * int_1 ) * ( var_10 ) ; var_11 = ( var_12 ) + ( var_2 * ( var_13 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string x = var_2 . method_2 ( var_3 , var_4 . method_3 ( ) ) ; var_7 . method_2 ( var_7 . method_6 ( ) , var_4 . method_3 ( ) ) ; type_1 . method_4 ( var_5 . method_5 ( ) , x , var_6 ) . show ( ) ; var_8 . remove ( position ) ; method_7 ( ) ; }
[0]: protected void method_1 ( int var_1, int var_2 ) { if ( var_2!= 0 ) { int var_3 = type_1. method_2 ( var_1 ) ; int var_4 = type_1. method_2 ( var_2 ) ; if ( ( var_4 < var_3 ) && false ) { var_2 = type_1. method_3 ( type_1. method_4 ( var_2 ), var_4 ) ; } } super. method_1 ( var_1, var_2 ) ; }

************

************
tgt: private int method_1 ( java.util.list var_1 , int var_2 ) { int var_3 = 0 ; if ( ( var_1 . size ( ) ) > 0 ) { if ( ( var_1 . size ( ) ) < int_2 ) { var_3 = var_1 . size ( ) ; } else { var_3 = var_2 + int_1 ; } } return var_3 ; }
[0]: public void method_1 ( android.view.view view ) { boolean var_1 = ( ( type_1 ) ( view ) ). method_2 ( ) ; switch ( view. getid ( ) ) { case var_2 : if ( var_1 ) var_3. method_3 ( var_4 ) ; method_4 ( ) ; if ( ( getactivity ( ) ) instanceof type_2 ) { ( ( type_2 ) ( getactivity ( ) ) ). method_5 ( ) ; } break ; case var_5 : if ( var_1 ) var_3. method_3 ( var_6 ) ; break ; } } }

************

************
tgt: public void method_1 ( int position , float var_1 , int var_2 ) { int count = ( ( listener ) instanceof type_1 ) ? var_3 super . method_2 ( ) . method_3 ( ) : method_2 ( ) . method_3 ( ) ; listener . method_1 ( type_2 . min ( position , ( count - 1 ) ) , ( position < count ? var_1 : 0 ) , ( position < count ? var_2 : 0 ) ) ; }
[0]: private int method_1 ( int index ) throws type_1 { int var_1 = 0 ; int var_2 = 0 ; while ( var_1 <= index ) { type_2 var_3 = var_4. get ( var_2 ) ; if ( ( var_3!= null ) && ( ( var_4. method_2 ( var_3 ) ) == var_2 ) ) var_1 ++ ; var_2 ++ ; } return var_2 - 1 ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_3 < type_2 > response ) { var_2 . method_2 ( response . method_3 ( ) . method_4 ( ) . method_5 ( ) ) ; var_5 . method_6 ( ) ; var_5 . method_2 ( response . method_3 ( ) . method_4 ( ) . method_7 ( ) ) ; var_6 . method_8 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { final type_1 var_1 = type_1. method_1 ( string_1, int_1 ) ; type_2. method_2 ( ). method_3 ( var_2 ) ; type_3. method_4 ( var_1 ) ; type_4 var_3 = new type_4 ( string_1 ) ; var_1. method_5 ( ). method_6 ( var_3, string_2 ) ; type_3. start ( var_1 ) ; }

************

************
tgt: private type_1 < type_2 > method_1 ( type_3 < type_4 > query ) throws type_5 { return index . query ( query . method_2 ( ) , query . getcontext ( ) . method_3 ( ) . method_4 ( ) . method_5 ( ) , query . getcontext ( ) . getselection ( ) . method_6 ( type_6 . method_7 ( ) ) ) ; }
[0]: public java.lang.string method_1 ( final type_1 var_1 ) { java.lang.string classname = null ; try { classname = var_1. method_2 ( ). tostring ( ) ; } catch ( final java.lang.exception var_2 ) { var_2. method_3 ( ) ; java.lang.system.out.println ( var_2. method_4 ( ) ) ; classname = var_2. tostring ( ) ; } return classname ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string path ) { type_2 p = new java.io.file ( path ) . method_2 ( ) ; if ( ! ( p . method_3 ( ) . method_4 ( ) ) ) { java.lang.system.out.println ( string_1 ) ; return new type_1 ( ) ; } try { return new type_1 ( new java.lang.string ( type_4 . method_5 ( p ) , var_1 ) ) ; } catch ( java.io.ioexception var_2 ) { var_2 . method_6 ( ) ; } return new type_1 ( ) ; }
[0]: public type_1 < type_2 > method_1 ( long var_1, type_3 var_2, type_4 status, boolean var_3, java.lang.string var_4, type_5 var_5, java.lang.string var_6 ) throws type_6 { type_7. method_2 ( var_2, string_1 ) ; return var_7. method_1 ( var_1, ( ( var_2. tostring ( ) ) + string_2 ), status, var_3, var_4, var_5, var_6 ) ; }

************

************
tgt: static void add ( java.lang.string list , java.lang.string var_1 , java.lang.string url ) { java.lang.system.out.println ( var_2 . method_1 ( url , ( list . equals ( string_1 ) ? true : false ) , ( var_1 . equals ( string_2 ) ? false : true ) ) ) ; }
[0]: public void init ( ) { this. var_1. method_1 ( 0.0f, 0.0f ) ; this. var_1. method_2 ( ( ( ( var_2. x ) - ( ( method_3 ( ) ) / float_1 ) ) / ( var_3 ) ), ( ( ( var_2. y ) - ( ( method_4 ( ) ) / float_1 ) ) / ( var_3 ) ), 0.0f ) ; var_4 = true ; var_5 = true ; var_6 = false ; var_7 = false ; var_8 = 0.0f ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return null ; } int var_2 ; int var_3 ; int var_4 ; var_2 = var_1 . method_2 ( ) ; var_3 = var_1 . method_3 ( ) ; var_4 = var_1 . getcolor ( ) ; type_1 var_5 = new type_1 ( var_2 , var_3 , var_4 ) ; return var_5 ; }
[0]: private void method_1 ( ) { java.lang.boolean var_1 = false ; method_2 ( ) ; while (! var_1 ) { method_3 ( string_1 ) ; if ( (! ( var_2. method_4 ( ) ) ) && (! ( var_2. method_5 ( ) ) ) ) { method_3 ( string_2 ) ; var_1 = true ; } else { method_2 ( ) ; } } }

************

************
tgt: public short method_1 ( ) throws type_1 { boolean var_1 = true ; format . method_2 ( char_1 , false ) ; if ( ( format . gettype ( ) ) == char_2 ) { var_1 = false ; } format . method_3 ( ) ; return method_4 ( var_1 ) ; }
[0]: public int method_1 ( int [ ] list, int var_1 ) { for ( int i = 0 ; i!= ( list. length ) ; i ++ ) { if ( ( list [ i ] ) == var_1 ) return i ; } return 0 ; }

************

************
tgt: public void method_1 ( char [ ] [ ] var_1 ) { this . var_2 = new char [ var_1 . length ] [ var_1 [ 0 ] . length ] ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { for ( int j = 0 ; j < ( var_2 [ 0 ] . length ) ; j ++ ) { var_2 [ i ] [ j ] = var_1 [ i ] [ j ] ; } } }
[0]: public void method_1 ( int var_1 ) { var_2 &= int_1 ; switch ( var_1 ) { case int_2 : var_2 |= int_3 < < int_4 ; var_3 = int_2 ; break ; case int_5 : var_2 |= int_4 < < int_4 ; var_3 = int_5 ; break ; case int_6 : var_2 |= 1 < < int_4 ; var_3 = int_6 ; break ; default : var_3 = int_3 ; break ; } method_2 ( var_4, var_2 ) ; target. method_3 ( ) ; method_4 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = method_2 ( ) . method_3 ( ) ; return ( ( ( ( var_1 . method_4 ( ) ) + string_1 ) + ( var_1 . method_5 ( ) ) ) + string_1 ) + ( var_1 . method_6 ( ) ) ; }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { type_1 var_4 = type_1. method_2 ( ) ; switch ( var_1 ) { case 1 : if ( ( var_3. length ) > 0 ) { for ( int i : var_3 ) { if ( i!= ( var_5 ) ) { type_2. method_3 ( this, string_1 ) ; return ; } } } var_4. method_4 ( ) ; break ; default : break ; } }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 . method_2 ( ) ) != null ) && ( ( var_1 . method_2 ( ) . length ( ) ) != 0 ) ) { ( ( type_1 ) ( var_2 . method_3 ( var_3 ) ) ) . settext ( ( ( string_1 + ( var_1 . method_2 ( ) ) ) + string_1 ) ) ; } }
[0]: public void method_1 ( ) throws type_1 { type_2 f = new type_2 ( string_1 ) ; type_3 var_1 ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { var_4 [ i ] [ j ] = f ; var_1 = new type_3 ( ( ( i * int_1 ) + j ), null ) ; method_2 ( ) ; method_3 ( var_1 ) ; } } }

************

************
tgt: private java.util.list < java.lang.integer > method_1 ( ) { java.util.list < java.lang.integer > result = new java.util.arraylist < > ( ) ; for ( java.util.map.entry < java.lang.integer , java.lang.boolean > var_1 : var_2 . method_2 ( ) ) { if ( ( var_1 . getvalue ( ) ) == false ) { result . add ( var_1 . method_3 ( ) ) ; } } return result ; }
[0]: private void method_1 ( type_1 index, java.util.collection < type_2 > var_1 ) { type_1 var_2 = index. method_2 ( var_3 ) ; for ( type_3 < type_2 > var_4 : this. var_1. values ( ) ) { var_4. method_3 ( var_2, null ) ; } method_4 ( var_2, var_1, null ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final java.util.collection < type_2 > var_2 ) { var_3 . method_2 ( ) ; if ( ( var_4 ) != null ) { var_4 . method_2 ( ) ; } for ( final type_2 var_5 : var_2 ) { final type_3 var_6 = type_4 . method_3 ( var_3 . method_4 ( ) , var_5 . method_5 ( ) ) ; var_7 . put ( var_5 . method_5 ( ) , var_6 ) ; } }
[0]: public java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > list = new java.util.arraylist < type_1 > ( ) ; for ( type_2 item : this. var_1. method_2 ( ) ) { list. add ( ( ( type_1 ) ( item ) ) ) ; } return list ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 , int var_3 ) { type_1 c = super . method_1 ( var_1 , var_2 , var_3 ) ; if ( ! ( method_2 ( var_2 ) ) ) c . method_3 ( ( ( var_2 % int_1 ) != 0 ? method_4 ( ) : var_4 ) ) ; return c ; }
[0]: public void method_1 ( int [ ] [ ] var_1 ) { method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 [ 0 ]. length ) ; j ++ ) { if ( ( var_1 [ i ] [ j ] ) >= 0 ) { method_3 ( var_1, i, j ) ; } } } }

************

************
tgt: public void method_1 ( ) { type_3 . method_8 ( ) ; type_1 [ ] var_1 = var_2 . method_2 ( ) ; type_1 var_3 = var_4 ; var_5 . method_3 ( var_3 . method_4 ( ) ) ; method_5 ( var_3 , var_1 ) ; var_1 = type_2 . method_6 ( var_1 , var_3 ) ; var_5 . method_3 ( string_1 ) ; method_7 ( var_1 . length , var_1 ) ; type_3 . method_8 ( ) ; }
[0]: public void method_1 ( ) { int var_1 = ( var_2. method_2 ( ) ) - 1 ; int var_3 = ( var_2. method_3 ( ) ) - 1 ; for ( int var_4 = var_3 - 1 ; var_4 >= 0 ; var_4 -- ) { var_5 = type_1. method_4 ( 0, var_1, var_4, var_3 ) ; method_5 ( ) ; for ( type_2 var_6 : var_7 ) assert! ( var_6. method_6 ( ). isempty ( ) ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { try { type_1 . method_1 ( int_1 ) ; type_2 var_1 = new type_2 ( 1 ) ; type_2 var_2 = new type_2 ( int_2 ) ; var_1 . method_2 ( string_1 , int_2 , int_3 ) ; var_1 . method_2 ( string_2 , int_2 , int_4 ) ; } catch ( type_3 | type_4 | type_5 var_3 ) { var_3 . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { try { try { type_2. assertequals ( string_1, var_2. method_2 ( var_1. method_3 ( ), string_2, var_1 ) ) ; } catch ( java.lang.exception var_3 ) { type_3. method_4 ( string_3, var_3 ) ; } } catch ( java.lang.exception var_3 ) { type_3. method_4 ( string_4, var_3 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { java.util.scanner var_2 ; java.util.arraylist < java.lang.string > words = new java.util.arraylist < java.lang.string > ( ) ; var_2 = new java.util.scanner ( var_1 ) ; while ( var_2 . method_2 ( ) ) { words . add ( var_2 . method_3 ( ) ) ; } var_2 . method_4 ( ) ; if ( ( words . size ( ) ) == int_1 ) { return words . get ( int_2 ) ; } return string_1 ; }
[0]: protected void method_1 ( int position, float offset, int var_1 ) { if ( ( ( var_2 ) && ( offset == 0 ) ) && (! ( var_3 ) ) ) { var_4. method_2 ( ) ; var_3 = true ; } var_2 = ( position + 1 ) == ( method_3 ( ). method_4 ( ) ) ; super. method_1 ( position, offset, var_1 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 < type_3 > var_1 ) { java.util.set < java.lang.long > var_2 = new java.util.hashset < > ( ) ; java.util.list < type_1 > result = new java.util.arraylist < > ( ) ; for ( type_3 var_3 : var_1 ) { method_2 ( var_3 , var_2 , result ) ; } return result ; }
[0]: public void method_1 ( ) { type_1. method_2 ( ) ; type_2. method_3 ( ). method_4 ( var_1, true ). method_4 ( var_2, true ). method_5 ( var_3, var_4 ). method_6 ( ) ; type_3. method_3 ( ). method_7 ( var_5 ). method_8 ( var_4, true ). method_7 ( var_6 ). method_8 ( var_4, false ) ; }

************

************
tgt: protected void method_1 ( ) { type_3 . method_6 ( var_2 , var_3 . gettext ( ) . tostring ( ) , this ) ; type_3 . method_7 ( var_4 , true , this ) ; type_3 . method_6 ( var_5 , var_6 . gettext ( ) . tostring ( ) , this ) ; type_1 . method_2 ( method_3 ( ) , new type_2 ( ) { public void method_4 ( java.lang.exception var_1 ) { method_5 ( ) ; } } ) ; var_7 . method_8 ( var_8 ) ; }
[0]: public java.lang.object method_1 ( type_1 var_1 ) throws type_2 { java.lang.string var_2 = var_1. method_2 ( ). tostring ( ) ; java.lang.string var_3 = var_1. method_2 ( ). tostring ( ) ; java.lang.string var_4 = var_1. method_2 ( ). tostring ( ) ; if ( this. var_5 ) { var_1. method_3 ( var_4. method_4 ( var_3, var_2 ) ) ; } else { var_1. method_3 ( var_4. replaceall ( var_3, var_2 ) ) ; } return var_1 ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , int var_2 , int var_3 ) { java.lang.string title = method_2 ( var_1 ) ; if ( title == null ) title = string_1 ; java.lang.string var_4 = ( ( type_2 . getstring ( string_3 , type_3 . method_3 ( ) ) ) + string_4 ) + string_5 ; return ( title + string_2 ) + var_4 ; }
[0]: private void method_1 ( long var_1, type_1 t ) { ( counter ) ++ ; java.util.list < type_2 > result = f. method_1 ( t ) ; if ( result!= null ) for ( type_2 out : result ) { method_2 ( t, out ) ; if ( var_2 ) { var_3. method_3 ( 1 ) ; } } if ( var_2 ) { var_4. add ( ( ( type_3. method_4 ( ) ) - var_1 ) ) ; } } }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_1 = this ; if ( ( ( var_2 ) == ( var_3 ) ) && ( ( var_4 ) >= ( var_5 ) ) ) { type_1 . method_2 ( new type_2 ( ) . method_3 ( ) . method_4 ( ) . build ( ) ) ; type_1 . method_5 ( new type_3 ( ) . method_3 ( ) . method_4 ( ) . build ( ) ) ; } method_7 ( this ) ; method_8 ( this ) ; }
[0]: public int method_1 ( type_1 key, type_1 value, int var_1 ) { try { type_2. method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { var_2. method_3 ( ) ; } long var_3 = ( ( var_4 ) - ( var_5 ) ) / var_1 ; return ( ( int ) ( ( key. get ( ) ) / var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( method_2 ( ) ) == true ) { java.lang.system.out.println ( string_1 ) ; } else { java.lang.system.out.println ( ( ( ( ( ( string_2 + ( var_1 [ 0 ] . method_3 ( ) ) ) + string_3 ) + ( var_1 [ 0 ] . method_4 ( ) ) ) + string_4 ) + ( var_1 [ 0 ] . method_5 ( ) ) ) ) ; } }
[0]: public java.util.map < java.lang.string, java.lang.object > method_1 ( java.util.map < java.lang.string, java.lang.object > var_1, java.util.map < java.lang.string, java.lang.object > var_2 ) { java.util.map < java.lang.string, java.lang.object > result = new java.util.hashmap < > ( ) ; result. method_2 ( var_1 ) ; result. method_2 ( var_2 ) ; return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . method_2 ( var_1 . method_3 ( ) . gettext ( ) ) ; if ( ( var_2 != null ) && ( var_2 instanceof type_3 ) ) { var_4 = ( ( type_4 ) ( var_2 ) ) . gettype ( ) ; } else { } }
[0]: public type_1 method_1 ( type_2 var_1 ) { for ( java.util.iterator i = values. iterator ( ) ; i. method_2 ( ) ; ) { if ( i. method_3 ( ). equals ( var_1 ) ) { i. remove ( ) ; } } method_4 ( ) ; return this ; } return this ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { if ( ( counter ) >= 0 ) { var_1 . method_2 ( var_2 ) ; var_3 . settext ( java.lang.string.format ( method_3 ( ) . getstring ( var_4 ) , counter ) ) ; var_5 . method_4 ( counter ) ; } else { var_3 . settext ( string_1 ) ; var_1 . method_2 ( var_7 ) ; } } }
[0]: private java.lang.integer method_1 ( java.lang.string value ) { int var_1 = int_1 ; value = value. touppercase ( ) ; for ( int i = 0 ; i < ( value. length ( ) ) ; i ++ ) { var_1 = ( ( var_1 < < int_2 ) + var_1 ) + ( value. method_2 ( i ) ) ; } return java.lang.integer.parseint ( var_1 ) ; }

************

************
tgt: public void method_1 ( ) { for ( int i = 1 ; i < int_1 ; i ++ ) { final int end = ( string . method_2 ( ) . length ) + i ; final type_1 var_1 = new type_1 ( 0 , end ) ; type_2 . method_3 ( string . method_4 ( var_1 ) ) ; } }
[0]: private static int method_1 ( type_1 file, int var_1 ) { if ( ( ( var_1 + 1 ) * ( var_2 ) ) > ( file. method_2 ( ) ) ) { return ( file. method_2 ( ) ) - ( ( var_1 + 1 ) * ( var_2 ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 item = ( ( type_1 ) ( var_1 . method_2 ( ) ) ) ; var_2 = new type_2 ( method_3 ( ) ) ; java.util.hashmap < java.lang.string , java.lang.string > var_3 = var_2 . method_4 ( ) ; final java.lang.string var_4 = var_3 . get ( var_5 ) ; final java.lang.string var_6 = item . getid ( ) ; method_5 ( var_6 , var_4 ) ; }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) { android.content.context context = var_1. getcontext ( ) ; type_3 var_3 = type_3. method_2 ( context ) ; var_4 = new type_4 ( var_1. getcontext ( ) ). build ( ) ; android.view.view var_5 = var_3. method_3 ( var_6, var_1, false ) ; type_1 var_7 = new type_1 ( var_5 ) ; type_5. method_4 ( var_8, string_1 ) ; return var_7 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_2 ) ) { var_3 = var_4 . gettext ( ) ; var_5 . method_3 ( var_3 . trim ( ) ) ; var_4 . settext ( string_1 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1. method_2 ( string_1 ) ; type_2 var_2 = new type_2 ( string_2 ) ; var_2. init ( ) ; type_3 var_3 = new type_3 ( ) ; java.lang.system.out.println ( var_3. method_1 ( var_2, var_4 ). tostring ( ) ) ; assertequals ( var_1, var_3. method_1 ( var_2, var_4 ). tostring ( ) ) ; }

************

************
tgt: public int method_1 ( double var_1 , int var_2 ) { double var_3 = 0.0 ; if ( var_1 > 0 ) { var_3 = ( ( float_1 + ( float_2 * var_1 ) ) + ( ( float_3 * var_1 ) * var_1 ) ) + ( ( ( float_4 * var_1 ) * var_1 ) * var_1 ) ; } return ( ( int ) ( var_3 ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1. method_2 ( ). method_3 ( ). method_4 ( ). method_5 ( ). method_6 ( ). method_7 ( string_1 ). method_8 ( string_2 ). method_9 ( ). method_5 ( ). method_10 ( ). method_9 ( ) ; var_1. method_11 ( var_2, var_3 class ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.util.set < type_3 > var_3 ) throws type_4 , type_5 , type_6 , type_7 , java.io.ioexception { type_8 var_4 = new type_8 ( var_1 , var_2 , var_3 ) ; java.net.url url = var_5 . method_2 ( ( ( var_6 ) + string_1 ) ) ; type_9 var_7 = type_9 . method_3 ( url ) . method_4 ( type_10 . method_5 ( var_4 ) ) . build ( ) ; method_6 ( var_1 , var_2 , var_7 ) ; }
[0]: protected java.lang.object method_1 ( java.lang.object [ ] var_1 ) { java.lang.string var_2 = string_1 ; var_3 = new type_1 ( var_4 ) ; type_2 var_5 = null ; for ( int i = 0 ; i < ( var_6. size ( ) ) ; i ++ ) { var_5 = var_3. method_3 ( var_6. get ( i ), var_2 ) ; } return var_5 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . assertthat ( type_2 . method_2 ( var_2 class ) . method_3 ( ) , type_3 . method_4 ( string_2 ) ) ; java.lang.string var_3 = string_3 ; if ( var_4 ) var_3 = string_4 ; type_1 . assertthat ( type_2 . method_2 ( var_5 . string class ) . method_3 ( ) , type_3 . method_4 ( var_3 ) ) ; }
[0]: public int method_1 ( ) { switch ( var_1 ) { case string_1 : var_2 = ( method_2 ( ) ) - ( method_3 ( ) ) ; break ; case string_2 : var_2 = ( method_3 ( ) ) - ( method_2 ( ) ) ; break ; default : break ; } return 0 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( var_1 != null ) { results = var_1 . select ( string_1 ) ; var_2 = var_1 . select ( string_2 ) ; for ( int j = 0 ; j < ( var_2 . size ( ) ) ; j ++ ) { results . add ( var_2 . get ( j ) ) ; } java.lang.system.out.println ( ( ( results . size ( ) ) + string_3 ) ) ; return results ; } else { return null ; } }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { if ( var_2 ) { type_2. info ( ( string_1 + ( ( ( type_3 ) ( var_1 ) ). method_2 ( ) ) ) ) ; } for ( type_4 var_3 : var_4 ) { var_3. method_3 ( method_4 ( ) ) ; if (! var_2 ) { var_3. method_5 ( ) ; } else { var_3. method_6 ( ) ; } } }

************

************
tgt: public static boolean method_1 ( java.lang.string str ) { if ( ( str . length ( ) ) == 0 ) { return false ; } int i = - 1 ; while ( ( ++ i ) < ( str . length ( ) ) ) { char c = str . method_2 ( i ) ; if ( ( c < char_1 ) || ( c > char_2 ) ) { return false ; } } return true ; }
[0]: public void execute ( type_1 p ) { var_1. method_1 ( ). method_2 ( var_2 class, new type_2 < type_3 > ( ) { public void execute ( type_3 t ) { t. method_3 ( var_3 ) ; t. method_4 ( type_4. method_5 ( string_1 ) ) ; t. method_6 ( var_4 ) ; } } ) ; }

************

************
tgt: public boolean method_1 ( ) { switch ( var_1 ) { case var_2 : return var_3 . values ( ) . contains ( true ) ; case var_4 : default : return ( ( var_3 . size ( ) ) > 0 ) && ( ! ( var_3 . values ( ) . contains ( false ) ) ) ; } }
[0]: public static void method_1 ( ) { type_1. method_2 ( ) ; type_1. method_3 ( ) ; while ( ( type_1. method_4 ( ) ) == false ) { type_1. method_3 ( ) ; type_1. method_5 ( ) ; type_1. method_6 ( ) ; type_1. method_7 ( ) ; type_1. method_2 ( ) ; type_1. method_3 ( ) ; } type_1. method_8 ( ) ; type_1. method_9 ( ) ; type_1. method_10 ( ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { if ( ( var_1 . length ( ) ) < int_2 ) return false ; java.lang.string var_2 = ( ( java.lang.string ) ( var_1 . substring ( int_1 , int_2 ) ) ) ; return var_2 . equals ( string_1 ) ? true : var_2 . equals ( string_2 ) ? true : var_2 . equals ( string_3 ) ? true : var_2 . equals ( string_4 ) ? true : var_2 . equals ( string_5 ) ? true : var_2 . equals ( string_6 ) ? true : false ; }
[0]: public java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_1 var_3 : var_4 ) { if ( var_3. method_2 ( ). tostring ( ). equals ( var_1 ) ) { var_2. add ( var_3. tostring ( ) ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , int var_3 , int var_4 ) { super . method_1 ( var_1 , var_2 , var_3 , var_4 ) ; var_5 = var_4 - var_2 ; var_6 = var_3 - var_1 ; var_8 = - ( var_7 . method_3 ( ) . var_9 ) ; }
[0]: public static type_1 method_1 ( byte [ ] var_1 ) throws type_2 { if ( ( var_1. length ) < int_1 ) throw new type_2 ( string_1 ) ; if ( ( ( var_1 [ 0 ] ) > > int_2 ) == int_2 ) return new type_3 ( var_1 ) ; else if ( ( ( var_1 [ 0 ] ) > > int_2 ) == int_3 ) return new type_4 ( var_1 ) ; else { throw new type_2 ( ( string_2 + ( var_1 [ 0 ] ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = ( var_2 ) + ( var_3 ) ; android.content.intent i = new android.content.intent ( getactivity ( ) , var_4 class ) ; i . method_2 ( string_1 , var_1 ) ; i . method_2 ( string_2 , var_3 ) ; getactivity ( ) . method_3 ( i ) ; }
[0]: public void method_1 ( ) { type_1 msg = new type_1 ( ). method_2 ( string_1 ) ; msg. method_3 ( type_2. method_4 ( string_2 ) ) ; try { msg. method_3 ( null ) ; fail ( string_3 ) ; } catch ( java.lang.nullpointerexception var_1 ) { new java.lang.object ( ) ; } catch ( java.lang.exception var_1 ) { fail ( var_1. tostring ( ) ) ; throw new type_4 ( string_4, var_1 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; var_9 = ( ( type_4 ) ( method_3 ( var_10 ) ) ) ; method_4 ( ) . method_5 ( 0 , null , this ) ; if ( var_1 == null ) { method_6 ( ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; type_1 var_2 = new type_1 ( var_3 ) ; var_4 = var_2 ; var_5. method_3 ( var_2, var_1 ) ; for ( type_2 var_6 : var_7 ) { var_6. method_4 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_2 ( ) ; var_2 . info ( string_1 ) ; new type_3 ( string_2 ) . method_2 ( ) ; type_4 . method_3 ( string_3 ) ; new type_5 ( var_3 ) . method_4 ( ) ; var_1 . method_5 ( ) ; type_6 . method_6 ( string_4 , new type_7 ( ) . method_7 ( ) . contains ( string_5 ) ) ; }
[0]: public static void method_1 ( type_1 var_1, int x, int y, java.awt.font var_2, java.awt.font var_3, java.lang.string... var_4 ) { if ( var_2!= null ) var_1. method_2 ( var_3 ) ; if ( var_3!= null ) var_1. method_3 ( var_2 ) ; type_2. method_1 ( var_1, x, y, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) > float_1 ) { var_1 -= float_2 ; var_2 = 0 ; var_3 = 0 ; } else { var_2 = 0 ; var_3 = 0 ; if ( var_4 ) { var_5 . state = var_6 ; } else { var_5 . state = var_7 ; } } }
[0]: private void method_1 ( ) { int var_1 = ( status. method_2 ( ) ) + 1 ; if ( var_1 >= ( type_1. values ( ). length ) ) { type_2. method_3 ( var_2 class ) ; } else { method_4 ( var_1 ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = string_1 ; java.lang.string var_3 = var_1 . tolowercase ( ) . method_2 ( string_2 ) . substring ( 0 , int_1 ) ; for ( int i = 0 ; i < int_1 ; ++ i ) { int var_4 = ( ( int ) ( var_3 . method_3 ( i ) ) ) ; var_2 = var_2 . method_2 ( java.lang.string . method_4 ( var_4 ) ) ; } return java.lang.string . method_4 ( java.lang.long.parselong ( var_2 ) ) ; }
[0]: public void method_1 ( type_1 element, type_2 context ) throws java.lang.exception { type_3 var_1 = method_2 ( element ) ; java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; var_2. append ( string_1 ) ; var_2. append ( var_1. method_3 ( ) ) ; var_2. append ( string_2 ) ; var_2. append ( var_1. method_4 ( ) ) ; var_2. append ( string_3 ) ; context. method_5 ( ). replace ( var_3. method_6 ( ), var_3. method_7 ( ), var_2. tostring ( ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : var_2 . method_3 ( ) ; return true ; case var_3 : var_2 . method_3 ( ) ; android.content.intent var_4 = new android.content.intent ( this , var_5 class ) ; method_4 ( var_4 ) ; return true ; default : return false ; } }
[0]: public final int method_1 ( final char... var_1 ) throws java.io.ioexception { char c ; type_1. method_2 ( var_1 ) ; while ( ( type_1. method_3 ( var_1, ( c = ( ( char ) ( method_4 ( ) ) ) ) ) < 0 ) { } return c ; }

************

************
tgt: public void method_1 ( ) { var_1 = method_2 ( ) ; var_2 = var_1 . method_3 ( ) ; var_3 = new type_1 ( ) ; var_2 . replace ( var_4 , var_3 ) ; var_2 . method_4 ( null ) ; type_2 var_5 = ( ( type_2 ) ( method_5 ( var_6 ) ) ) ; if ( var_5 . method_6 ( var_7 ) ) { var_5 . method_7 ( var_7 ) ; } var_2 . commit ( ) ; }
[0]: public static type_1 method_1 ( android.content.context context, java.lang.string filename, type_2 var_1, java.lang.string... var_2 ) { type_2 var_3 = type_3. method_2 ( var_1, var_2 ) ; if ( var_3 == null ) return null ; type_2 file = var_3. method_3 ( filename ) ; return type_3. method_1 ( context, file. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final type_2 var_2 ) throws java.io.ioexception , type_3 { if ( ! ( ( var_1 instanceof type_4 ) && ( var_2 instanceof type_5 ) ) ) { throw new type_3 ( string_1 ) ; } type_4 var_3 = ( ( type_4 ) ( var_1 ) ) ; type_5 response = ( ( type_5 ) ( var_2 ) ) ; method_2 ( var_3 , response ) ; }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1 )!= null ) { return var_1. get ( ) ; } byte [ ] var_2 = method_2 ( ). getdata ( var_3 ) ; java.lang.string var_4 = new java.lang.string ( var_2 ) ; var_1 = new type_1 < java.lang.string > ( var_4 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( double var_1 , type_1 var_2 ) { position = new type_1 ( type_1 . method_2 ( position , var_3 . method_3 ( var_1 ) ) ) ; position = new type_1 ( type_1 . method_2 ( position , var_2 . method_3 ( ( ( java.lang.math.pow ( var_1 , int_1 ) ) / ( int_1 * ( var_4 ) ) ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( ( var_1. method_2 ( ) ) & ( var_2 ) )!= 0 ) || ( var_1. method_3 ( ) ) ) { type_2. method_4 ( ). method_5 ( ). show ( var_1. method_6 ( ), var_1. method_7 ( ), var_1. method_8 ( ) ) ; } }

************

************
tgt: public final void method_1 ( type_1 var_1 , type_2 var_2 ) { int id = var_1 . getid ( ) ; java.util.hashset < type_2 > var_3 = var_4 . get ( id ) ; if ( var_3 != null ) { var_3 . remove ( var_2 ) ; if ( ( var_3 . isempty ( ) ) && ( ( var_5 ) != null ) ) { var_5 . method_2 ( var_1 ) ; var_4 . put ( id , null ) ; } } }
[0]: public void method_1 ( ) { var_1. method_2 ( type_1. method_3 ( type_1. method_4 ( 0 ), type_1. method_5 ( ( ( this. var_2 ) / int_1 ) ), type_1. method_6 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ) ) ; }

************

************
tgt: public void method_1 ( final int var_1 ) { method_2 ( new type_1 ( ) { public void method_3 ( ) { if ( ( var_2 ) != null ) { var_2 . method_4 ( ( var_1 & int_1 ) ) ; var_4 = true ; if ( ( ! ( var_3 ) ) && ( ! ( var_2 . method_5 ( ) ) ) ) { var_2 . setenabled ( true ) ; } } } } ) ; }
[0]: static type_1 method_1 ( type_1 var_1, boolean var_2, type_2 p ) { type_1 var_3 = new type_1 ( ) ; for ( type_3 var_4 : var_1 ) { type_3 var_5 = new type_3 ( var_4. method_2 ( ), var_4. method_3 ( ) ) ; var_5. method_4 ( p, var_2 ) ; } return var_3 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { this . method = var_1 class . method_2 ( string_1 , var_2 class , var_2 class , var_2 class , var_2 class , var_3 class ) ; this . var_4 = method_3 ( var_5 class ) ; this . var_6 = new type_2 ( this . var_4 ) ; }
[0]: public java.lang.object method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ). method_3 ( ) ; type_3 response = var_1. method_2 ( ). method_4 ( ) ; type_4 var_3 = var_4. method_5 ( var_2 ) ; type_5. method_6 ( var_2. method_7 ( ), var_2. method_8 ( ) ) ; java.lang.object result = var_1. method_9 ( ) ; var_4. method_10 ( var_2, var_3 ) ; var_4. out ( var_3, response ) ; return result ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : method_2 ( ) ; break ; case var_3 : method_3 ( ) ; break ; case var_4 : method_4 ( ) ; break ; case var_5 : method_5 ( ) ; break ; case var_6 : method_6 ( ) ; break ; } }
[0]: protected java.util.arraylist < java.lang.string > method_1 ( ) { int size = var_1. get ( 0 ). size ( ) ; java.util.arraylist < java.lang.string > result = new java.util.arraylist < java.lang.string > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) result. add ( var_1. get ( i ). method_2 ( i ) ) ; return result ; }

************

************
tgt: protected void method_1 ( java.util.list < type_1 > var_1 ) { var_3 . method_2 ( ( ( var_1 . size ( ) ) >= ( var_2 ) ) ) ; if ( var_4 ) { var_5 . method_3 ( false ) ; var_3 . method_4 ( var_1 ) ; } else { var_5 . setenabled ( true ) ; var_3 . append ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2. method_2 ( ) ) { var_3. settext ( string_1 ) ; var_4. settext ( string_1 ) ; var_4. setenabled ( false ) ; var_3. setenabled ( false ) ; } else { var_3. settext ( string_2 ) ; var_4. settext ( string_2 ) ; var_4. setenabled ( true ) ; var_3. setenabled ( true ) ; } }

************

************
tgt: public final void method_1 ( ) { final int num = int_1 ; type_1 var_1 = new type_1 ( ) ; type_2 [ ] [ ] var_2 = new type_2 [ num ] [ num ] ; var_1 . method_2 ( var_2 ) ; type_3 . asserttrue ( ( var_2 == ( var_1 . method_3 ( ) ) ) ) ; }
[0]: protected type_1 < type_2, type_3 > method_1 ( long var_1, byte [ ] data, int var_2, int var_3 ) throws java.io.ioexception { return var_4. method_2 ( method_3 ( var_5 ). method_4 ( var_1 ). method_5 ( ( var_3 - var_2 ) ). method_6 ( data, var_2, var_3 ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 item , type_2 var_1 ) { if ( ( item . method_2 ( ) ) > 1 ) { var_1 . method_3 ( var_2 ) ; return item ; } else { return var_2 . method_4 ( var_2 . method_2 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2 ) ; type_1. method_3 ( var_3. get ( ), var_4. method_4 ( ) ) ; if ( var_5. isempty ( ) ) type_1. method_5 ( var_3. get ( ), string_1 ) ; else { for ( java.lang.string var_6 : var_5 ) method_6 ( type_2. method_7 ( var_6 ) ) ; } }

************

************
tgt: public android.view.view getview ( int position , android.view.view view , type_1 var_1 ) { type_2 var_2 = context . method_1 ( ) ; android.view.view var_3 = var_2 . method_2 ( var_4 , null , true ) ; type_3 var_5 = ( ( type_3 ) ( var_3 . method_3 ( var_6 ) ) ) ; type_4 var_7 = ( ( type_4 ) ( var_3 . method_3 ( var_8 ) ) ) ; var_7 . method_4 ( var_10 [ position ] ) ; return var_3 ; }
[0]: public void method_1 ( type_1 event ) { if ( var_1. gettext ( ). isempty ( ) ) { type_2 var_2 = new type_2 ( var_3 ) ; var_2. method_2 ( string_1 ) ; var_2. method_3 ( string_2 ) ; var_2. method_4 ( string_3 ) ; var_2. show ( ) ; } else { method_5 ( false ) ; } }

************

************
tgt: public static < type_1 extends type_2 > type_1 method_1 ( java.lang.class < type_1 > var_1 , type_2 start ) { for ( type_2 var_2 = type_3 . method_2 ( start . method_1 ( ) ) ; var_2 != null ; var_2 = type_3 . method_2 ( var_2 . method_1 ( ) ) ) { if ( var_1 . method_3 ( var_2 ) ) { type_1 result = ( ( type_1 ) ( var_2 ) ) ; return result ; } } return null ; }
[0]: protected void method_1 ( type_1 param ) throws java.lang.throwable { type_2 var_1 = ( ( type_2 ) ( param. args [ 0 ] ) ) ; if ( ( var_1. method_2 ( ). number ) == 0 ) { var_2. method_3 ( ) ; type_3. method_4 ( var_1. method_2 ( ), var_2. method_5 ( var_1. method_6 ( ) ) ) ; } else { var_2. method_3 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_1 b = method_2 ( ) ; java.lang.string filename = b . getstring ( var_2 , string_1 ) ; type_2 . i ( string_2 , ( string_3 + filename ) ) ; int var_3 = b . getint ( var_4 , ( - 1 ) ) ; method_3 ( filename , var_3 , false ) ; }
[0]: public static boolean method_1 ( java.util.vector <? > var_1 ) { for ( java.lang.object text : var_1 ) { java.lang.string string = ( ( type_1 ) ( text ) ). gettext ( ) ; if ( ( string. length ( ) ) == 0 ) return false ; if ( ( string. equals ( string_1 ) ) || ( string. equals ( string_2 ) ) ) continue ; try { java.lang.double. method_2 ( string ) ; } catch ( type_2 var_2 ) { return false ; } } return true ; } }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) != null ) && ( var_1 . method_1 ( ) ) ) { return ; } if ( ( ( var_2 ) != null ) && ( var_2 . method_2 ( ) ) ) { android.content.intent intent = new android.content.intent ( var_3 ) ; type_1 . method_3 ( this ) . method_4 ( intent ) ; return ; } super . method_1 ( ) ; }
[0]: public void method_1 ( type_1 event ) { if ( event. method_2 ( ). equals ( info. getid ( ) ) ) { method_3 ( ) ; var_1. method_4 ( ) ; if ( ( var_2 )!= null ) { var_2. method_5 ( ) ; var_2. method_6 ( ) ; } target = null ; var_3. method_7 ( ). method_8 ( string_1 ) ; var_4 = var_5 ; var_6 = false ; var_7. method_9 ( ). method_10 ( ( string_2 + ( var_8 ) ) ) ; } }

************

************
tgt: private java.util.collection < type_2 > method_1 ( type_1 var_1 ) { try { java.util.collection < type_2 > var_2 = method_2 ( var_1 . method_3 ( ) ) ; method_4 ( var_1 , var_2 ) ; return var_2 ; } catch ( java.lang.exception var_3 ) { throw new type_3 ( var_3 . method_5 ( ) ) ; } }
[0]: private final boolean method_1 ( type_1 value ) { byte b ; for ( int i = 0 ; i < ( value. length ( ) ) ; i ++ ) { b = value. method_2 ( i ) ; if ( ( b & ( var_1 ) )!= b ) { return false ; } } return b ; }

************

************
tgt: public static java.lang.string method_1 ( java.util.list < type_2 > var_1 , type_2 var_2 ) { java.util.arraylist < java.lang.string > names = new java.util.arraylist < > ( ) ; for ( type_2 var_3 : var_1 ) { if ( ( var_3 . id ) != ( var_2 . id ) ) { names . add ( var_3 . method_2 ( ) ) ; } } return type_4 . method_3 ( string_1 , names ) ; }
[0]: public type_1 method_1 ( int var_1 ) throws java.lang.exception { int x = ( this. x ) + 1 ; int y ; if ( var_1 == 0 ) y = ( this. y ) - 1 ; else y = ( this. y ) + 1 ; return new type_1 ( x, y ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . method_1 ( ) ; this . var_1 = var_1 ; for ( type_2 var_2 : this . var_3 ) { try { this . method_2 ( var_2 ) ; } catch ( type_3 var_4 ) { java.lang.system.out.println ( ( var_4 + string_1 ) ) ; } } }
[0]: protected void method_1 ( java.lang.string result ) { switch ( status ) { case var_1 : var_2. method_2 ( var_3. getintent ( ), var_4 ) ; break ; case var_5 : method_3 ( ) ; break ; case var_6 : break ; default : throw new type_1 ( string_1 ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_2 > var_1 = type_3 . method_2 ( ) ; var_1 . add ( new type_2 ( string_1 , var_2 , string_2 ) ) ; var_1 . add ( new type_2 ( string_3 , var_3 , 1 ) ) ; type_4 < type_1 > var_5 = type_5 . method_3 ( var_1 , var_6 class ) ; return var_7 . method_4 ( var_5 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1. getdata ( string_1 ) ) ) ; if ( ( var_2!= null ) && ( var_2. method_2 ( ) ) ) { var_2 = null ; } var_1. method_3 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . settext ( var_2 . method_2 ( ) . getvalue ( ) ) ; id . settext ( ( ( var_3 ) + string_1 ) ) ; var_4 . settext ( var_2 . method_3 ( ) . getvalue ( ) ) ; var_5 . settext ( var_2 . method_4 ( ) . getvalue ( ) ) ; time . settext ( var_2 . gettime ( ) . getvalue ( ) ) ; var_6 . settext ( var_2 . method_5 ( ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) { int index = 0 ; type_1 element ; while ( ( element = var_2. get ( index ) )!= null ) { if ( ( var_1. method_2 ( ) ) > ( element. method_2 ( ) ) ) { var_2. add ( index, var_1 ) ; break ; } index ++ ; } if ( index == ( var_2. size ( ) ) ) var_2. add ( index, var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_2 . method_2 ( var_3 , var_4 ) ; settext ( var_5 [ var_6 ] [ var_7 [ var_6 ] ] ) ; method_3 ( var_1 , var_5 [ var_6 ] [ var_7 [ var_6 ] ] , int_2 , int_3 ) ; }
[0]: public static byte [ ] method_1 ( java.lang.string filepath ) { java.io.fileinputstream var_1 = null ; try { var_1 = new java.io.fileinputstream ( filepath ) ; return type_1. method_1 ( var_1 ) ; } catch ( type_2 var_2 ) { } catch ( java.io.ioexception var_2 ) { } catch ( type_3 var_2 ) { } finally { if ( var_1!= null ) { try { var_1. method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { } } } return null ; } }

************

************
tgt: public type_1 method_1 ( int n ) { double var_1 = ( java.lang.math.pow ( method_2 ( ) , n ) ) * ( type_2 . method_3 ( ( n * ( method_4 ( ) ) ) ) ) ; double var_2 = ( java.lang.math.pow ( method_2 ( ) , n ) ) * ( type_2 . method_5 ( ( n * ( method_4 ( ) ) ) ) ) ; method_6 ( var_1 ) ; method_7 ( var_2 ) ; return this ; }
[0]: public void method_1 ( type_1 var_1 ) { for ( int i = 0, count = method_2 ( ). size ( ) ; i < count ; i ++ ) { type_1 item = method_2 ( ). get ( i ) ; if ( item == var_1 ) { method_1 ( i ) ; return ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; if ( var_3 != null ) { var_2 . method_5 ( string_1 , var_3 ) ; if ( ( var_3 . method_6 ( ) ) == ( var_5 ) ) { var_2 . method_5 ( string_2 , var_3 ) ; } return string_3 ; } return string_4 ; }
[0]: public static java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 ; var_2 = var_1. method_2 ( string_1 ) ; if ( ( null == var_2 ) || ( ( var_2. length ( ) ) == 0 ) ) { var_2 = var_1. method_2 ( string_2 ) ; } if ( ( null == var_2 ) || ( ( var_2. length ( ) ) == 0 ) ) { var_2 = string_3 ; } return var_2 ; }

************

************
tgt: public double method_1 ( ) { int count = this . method_2 ( ) ; if ( count == 0 ) { throw new type_1 ( string_1 ) ; } double var_1 = 0.0 ; double var_2 = this . method_3 ( ) ; if ( var_2 == 0.0 ) { return 0.0 ; } for ( double data : this . var_3 ) { var_1 += ( data - var_2 ) * ( data - var_2 ) ; } return ( type_2 . method_4 ( ( var_1 / count ) ) ) / var_2 ; }
[0]: private void method_1 ( final long var_1 ) { final long var_2 = ( var_1 / int_1 ) % int_2 ; final long var_3 = ( var_1 / int_3 ) % int_2 ; final long var_4 = ( var_1 / int_4 ) % int_5 ; final long var_5 = var_1 / int_6 ; final java.lang.string text = java.lang.string.format ( var_6, var_5, var_4, var_3, var_2 ) ; settext ( text ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_3 < type_1 > var_2 = this . var_3 ; if ( var_1 == null ) { if ( var_2 != null ) method_2 ( ) ; return ; } if ( var_2 != null ) method_2 ( ) ; try { this . var_3 = var_1 . method_3 ( ) ; } catch ( java.lang.exception var_4 ) { throw new type_2 ( var_4 ) ; } }
[0]: public void method_1 ( ) throws type_1 { java.lang.string start = string_1 ; java.lang.string end = string_2 ; method_2 ( var_1, var_2, start, end ) ; type_2 a = new type_2 ( ) ; type_3 var_3 = type_2. method_3 ( var_1 ) ; type_4 var_4 = type_2. method_4 ( var_2 ) ; java.util.list < type_5 > var_5 = a. method_5 ( var_3, var_4, start, end ) ; type_6. assertequals ( int_1, var_5. size ( ) ) ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . var_1 ) ) + ( this . var_2 ) ) + string_1 ) + ( this . var_3 ) ) + string_2 ) + ( this . var_4 ) ) + string_3 ) + ( this . var_5 ) ) + string_4 ) + ( this . var_6 ) ) + string_5 ) + ( this . var_7 ) ) + string_6 ) + ( this . var_8 ) ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) return false ; type_1 node = ( ( type_1 ) ( var_1 ) ) ; if ( ( var_2 )!= ( var_3 ) ) return false ; return type_2. equals ( var_4, var_5 ) ; }

************

************
tgt: private boolean method_1 ( ) { var_1 = var_2 . method_2 ( ) ; method_6 ( var_10 ) ; if ( ( var_1 ) == null ) { var_3 = var_4 ; return false ; } var_5 . settext ( var_1 . method_3 ( ) ) ; int index = 0 ; for ( java.lang.string var_6 : var_1 . method_4 ( ) ) { var_7 [ index ] . settext ( var_6 ) ; index ++ ; } var_8 . settext ( java.lang.integer.tostring ( var_1 . method_5 ( ) ) ) ; var_3 = var_9 ; return true ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. init ( ) ; var_2. init ( string_1 ) ; java.lang.thread t = var_3. method_2 ( type_1. method_3 ( ), int_1, type_2. method_4 ( var_4 class ), int_2 ) ; t. method_5 ( ) ; type_3. assertequals ( 1, var_2. method_6 ( ). size ( ) ) ; method_7 ( 1, var_1 ) ; }

************

************
tgt: public float get ( type_1 var_1 ) { if ( ( var_2 ) == var_1 ) { return var_3 ; } if ( ( var_1 == ( var_4 ) ) && ( ( var_2 ) == ( var_5 ) ) ) { return ( ( var_3 ) - int_1 ) / float_1 ; } else if ( ( var_1 == ( var_5 ) ) && ( ( var_2 ) == ( var_4 ) ) ) { return ( ( var_3 ) * float_1 ) + int_1 ; } throw new type_2 ( string_1 ) ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string text, int x, int y, java.awt.color var_2 ) { var_1. method_2 ( new java.awt.font ( string_1, var_3, int_1 ) ) ; var_1. method_3 ( var_2 ) ; var_1. method_4 ( text, x, y, ( x * ( var_4 ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 item = var_1 . get ( position ) ; if ( var_1 . contains ( item ) ) { listener . method_2 ( item . getname ( ) , item . getid ( ) ) ; var_1 . remove ( position ) ; method_3 ( position ) ; method_4 ( position , var_1 . size ( ) ) ; } }
[0]: public static type_1 method_1 ( double var_1, int [ ] [ ] var_2, double [ ] [ ] var_3 ) { return new type_1 ( new type_2 ( ( var_1 / ( int_1 * ( var_2 [ 0 ]. length ) ) ), 0.0, ( float_1 * ( var_4 ) ) ), type_3. method_2 ( var_2 ), var_3 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . get ( var_3 ) . method_2 ( ) ; if ( var_1 . method_3 ( ) ) { var_4 . method_4 ( ( ( type_2 ) ( var_1 ) ) ) ; } else { } ( var_3 ) -- ; if ( ( var_3 ) < 0 ) var_3 = 0 ; ( ( type_3 ) ( view ) ) . method_5 ( var_3 ) ; }
[0]: public java.util.list < java.lang.integer > method_1 ( java.util.list < type_1 > data, boolean var_1 ) { for ( type_1 var_2 : data ) { java.util.list < java.lang.integer > var_3 = new java.util.arraylist ( data. size ( ) ) ; for ( type_2 var_4 : var_5 ) { int var_6 = var_4. method_1 ( var_2 ) ; var_3. add ( var_6 ) ; } int var_7 = type_3. method_2 ( var_3 ) ; var_8. add ( var_7 ) ; } if ( var_1 ) { method_3 ( ) ; } return var_8 ; }

************

************
tgt: double method_1 ( type_1 a , type_1 b ) { double temp ; double min = java.lang.math.abs ( ( ( a . method_2 ( ) ) - ( b . method_2 ( ) ) ) ) ; double var_1 = java.lang.math.abs ( ( ( a . method_3 ( ) ) - ( b . method_3 ( ) ) ) ) ; if ( min > var_1 ) { temp = min ; min = var_1 ; var_1 = temp ; } return ( ( ( var_2 ) - 1.0 ) * min ) + var_1 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = new type_2 ( this, this ) ; type_3 var_4 = ( ( type_3 ) ( method_3 ( ) ) ) ; var_5 = var_4. method_4 ( ) ; var_6 = new type_4 ( var_4 ) ; var_6 = new type_4 ( this, var_5 ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = var_2 . method_2 ( ) ; int var_3 = type_1 . method_3 ( var_1 , var_5 ) ; int var_6 = type_1 . method_3 ( 0 , var_7 ) ; if ( var_1 < 1 ) { return 0 ; } var_2 . method_6 ( var_3 , var_6 ) ; return var_2 . method_7 ( ) ; }
[0]: protected void method_1 ( type_1 var_1, java.lang.throwable t ) { try { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_2. method_2 ( null ) ; var_3. method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( ( string_1 + ( var_4. method_4 ( ) ) ), var_4 ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_1 ( ) . method_2 ( new type_1 < java.lang.void > ( ) { public void method_3 ( type_2 < java.lang.void > var_2 ) { if ( var_2 . method_4 ( ) ) { type_3 . method_5 ( var_3 , string_1 ) ; var_4 . method_6 ( false ) ; method_7 ( ) ; } else { type_3 . method_8 ( var_3 , ( string_2 + ( var_2 . method_9 ( ) ) ) ) ; } } } ) ; }
[0]: private void method_1 ( final int [ ] [ ] var_1 ) { int [ ] [ ] var_2 = new int [ var_1. length ] [ var_1. length ] ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1. length ) ; j ++ ) { var_2 [ i ] [ j ] = var_1 [ i ] [ j ] ; } } }

************

************
tgt: public void method_1 ( int item , int var_1 ) { int i = 1 ; type_1 var_2 = new type_1 ( ) ; var_2 . data = item ; var_3 = null ; type_1 temp ; temp = var_4 ; while ( i < ( var_1 - 1 ) ) { i ++ ; temp = var_5 ; } var_3 = var_5 ; var_5 = var_2 ; }
[0]: public java.util.arraylist < java.lang.object > method_1 ( type_1 var_1, java.lang.string var_2 ) { java.util.arraylist < java.lang.object > var_3 = new java.util.arraylist < java.lang.object > ( ) ; type_2 var_4 = var_1. method_2 ( ) ; for ( type_3 var_5 : var_4 ) { if ( var_5. method_3 ( ). method_4 ( var_2 ) ) { var_3. add ( var_5 ) ; } } return var_3 ; }

************

************
tgt: private type_1 method_1 ( java.lang.string name , boolean var_1 ) { for ( type_1 var_2 : var_3 ) { if ( name . method_2 ( var_2 . tostring ( ) ) ) return var_2 ; } if ( var_1 ) throw new type_3 ( ( ( ( string_1 + name ) + string_2 ) + ( method_3 ( ) ) ) ) ; return null ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { var_3. start ( ) ; return ; } if ( ( var_1 ) == ( var_4 ) ) { method_2 ( ) ; } try { var_3. method_3 ( var_5. get ( var_6 ). method_4 ( ) ) ; } catch ( java.io.ioexception var_7 ) { var_7. method_5 ( ) ; } var_3. method_6 ( ) ; var_1 = var_8 ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { var_1 . method_2 ( ) ; var_1 . method_2 ( ) ; var_1 . method_2 ( ) ; if ( ( var_1 . method_3 ( ) ) != ( var_2 ) ) { var_1 . method_2 ( ) ; } var_1 . method_2 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( type_2. method_2 ( var_2. method_3 ( var_3 ) ) ) ) ; if (! ( var_1. method_4 ( ) ) ) { var_1. method_5 ( true ) ; } else if ( var_4 ) { super. method_1 ( ) ; } else { type_3. method_6 ( this, string_1, var_5 ). show ( ) ; } }

************

************
tgt: private java.lang.boolean method_1 ( java.lang.string var_1 , java.lang.boolean var_2 ) { java.lang.string var_3 = type_1 . method_2 ( ) . method_3 ( ) . method_4 ( var_1 ) ; if ( var_3 == null ) return var_2 ; try { return java.lang.boolean . method_5 ( var_3 ) ; } catch ( java.lang.nullpointerexception var_4 ) { return var_2 ; } }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { int size = var_1. method_2 ( ) ; var_2 = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { var_2 [ i ] = var_1. method_2 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.lang.exception { type_2 < java.lang.string , java.lang.string > var_1 = var_2 . method_2 ( ) ; java.lang.object value = var_1 . getvalue ( var_3 . trim ( ) ) ; type_1 result = null ; if ( value != null ) { result = new type_1 ( value . tostring ( ) ) ; } else { result = new type_1 ( string_1 ) ; } method_4 ( result ) ; return result ; }
[0]: protected void method_1 ( final type_1 var_1 ) { type_2. method_2 ( string_1, var_2 ) ; type_3. method_3 ( var_1 ) ; if ( ( type_3. method_4 ( string_3 ) ) == false ) { type_2. method_2 ( string_4, var_2 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) { type_1 var_3 = var_4 . method_2 ( var_5 ) ; if ( var_2 == ( var_7 ) ) { var_8 . method_4 ( var_9 ) ; var_10 . method_5 ( var_11 ) ; var_10 . method_6 ( new type_3 ( ) { public void method_7 ( android.view.view view ) { if ( ( var_12 ) != null ) { var_12 . method_7 ( view ) ; } } } ) ; } return var_3 ; }
[0]: public void method_1 ( ) { method_2 ( ) ; method_3 ( ) ; while ( ( var_1. size ( ) ) > 1 ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_1. get ( i ). method_4 ( var_2, this ) ; method_3 ( ) ; } } }

************

************
tgt: private void method_1 ( ) { if ( var_1 ) { type_1 . method_2 ( var_2 , string_1 ) ; final type_2 var_5 = type_2 . method_4 ( ) ; var_5 . method_1 ( var_6 ) ; var_3 . method_3 ( var_4 ) ; var_1 = false ; } }
[0]: public type_1 method_1 ( int var_1 ) { type_1 var_2 = null ; try { var_3 = new type_2 ( this. var_4 ) ; var_3. open ( ) ; var_2 = var_5. method_2 ( var_1 ) ; type_3. method_3 ( string_1, var_2. method_4 ( ) ) ; } catch ( java.lang.exception var_6 ) { type_3. method_5 ( var_7, ( ( string_2 + var_1 ) + string_3 ) ) ; } finally { var_3. method_6 ( ) ; type_3. method_5 ( var_7, string_4 ) ; } return var_2 ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = ( var_2 ) ? var_3 : var_4 ; java.lang.string var_5 = ( ( ( method_2 ( ) ) == null ) || ( method_2 ( ) . isempty ( ) ) ) ? string_1 : ( method_2 ( ) ) + var_1 ; java.lang.string var_6 = var_5 + ( getname ( ) ) ; return var_6 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return null ; } else { boolean temp ; type_1 var_2 ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { temp = var_3. get ( i ). method_2 ( ). equals ( var_1 ) ; if ( temp == true ) { var_2 = var_3. get ( i ) ; var_3. remove ( i ) ; return var_2 ; } } } return null ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string filename , type_1 var_2 ) { java.lang.system.out.println ( ( string_1 + filename ) ) ; type_2 var_3 = method_3 ( filename ) ; if ( ( var_3 . state ) == ( var_4 ) ) { java.lang.system.out.println ( string_2 ) ; return false ; } var_5 = var_2 ; method_4 ( var_3 ) ; method_2 ( filename , var_6 ) ; var_6 = null ; var_3 . state = var_4 ; return true ; }
[0]: public boolean method_1 ( int [ ] var_1, int [ ] var_2 ) { if ( ( var_1. length )!= ( var_2. length ) ) { return false ; } for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] )!= ( var_2 [ i ] ) ) { return false ; } } return true ; }

************

************
tgt: private java.lang.long method_1 ( type_1 var_1 , boolean add ) { if ( var_1 != null ) { return method_2 ( add , var_1 . method_3 ( ) , ( var_1 . method_4 ( ) . method_5 ( ) ? var_1 . method_4 ( ) . method_6 ( ) : var_1 . method_4 ( ) . method_7 ( ) ) , null , null , var_1 . method_4 ( ) . method_8 ( ) , null , null , null , null , var_1 ) ; } else { return null ; } }
[0]: public static java.lang.string method_1 ( ) { java.io.filereader var_1 ; try { var_1 = new java.io.filereader ( var_2 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_1 ) ; java.lang.string line = null ; line = var_3. method_2 ( ) ; java.lang.system.out.println ( line ) ; var_3. method_3 ( ) ; return line ; } catch ( type_1 var_4 ) { var_4. method_4 ( ) ; } catch ( java.io.ioexception x ) { var_5. format ( string_1, x ) ; } return string_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = this . method_2 ( ) ; if ( var_1 != null ) { var_1 . method_3 ( ) ; type_2 . method_4 ( ) . method_5 ( var_1 ) . method_6 ( false ) . method_7 ( false ) . method_8 ( false ) ; } super . method_1 ( ) ; }
[0]: protected void method_1 ( java.lang.stringbuilder var_1 ) { if ( var_2. method_2 ( ). method_3 ( ) ) { var_1. append ( string_1 ) ; method_4 ( var_1 ) ; method_4 ( var_1 ) ; var_1. append ( ( ( string_2 + ( var_2. method_5 ( ). get ( ) ) ) + string_3 ) ) ; var_1. append ( var_2. method_6 ( ) ) ; var_1. append ( string_4 ) ; } else { type_1. info ( string_5 ) ; } }

************

************
tgt: public type_1 method_1 ( final java.lang.string id , final type_2 var_1 , final type_3 var_2 ) { synchronized ( this ) { if ( this . var_4 ) { throw new type_4 ( string_1 ) ; } this . var_4 = var_5 ; } return new type_5 ( id , var_6 , this . method_2 ( ) , var_1 , var_2 ) ; }
[0]: public void init ( ) { var_1 = type_1. method_1 ( ) ; type_2. method_2 ( string_1, var_1. tostring ( ) ) ; var_2 = new type_3 ( var_1. method_3 ( ) ) ; var_3. method_4 ( new type_4 ( getcontext ( ) ) ) ; var_3. method_5 ( var_2 ) ; var_2. method_6 ( ) ; type_2. method_2 ( string_1, var_4. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( int var_1 ) { while ( ( ! ( var_2 ) ) && ( ! ( type_1 . method_2 ( ) ) ) ) { if ( var_1 > 0 ) { try { java.lang.thread . method_3 ( var_1 ) ; } catch ( type_2 var_3 ) { } } method_4 ( ) ; var_4 . method_6 ( var_5 , var_6 , var_7 ) ; method_5 ( ) ; var_4 . method_7 ( var_8 . tostring ( ) ) ; var_4 . method_8 ( var_9 , var_10 , var_11 ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; var_2 = var_3. method_3 ( ) ; type_1. method_4 ( var_1, ( ( ( ( ( string_2 + ( var_2 ) ) + string_3 ) + ( var_3 ) ) + string_4 ) + ( var_2. method_5 ( ) ) ) ) ; var_4. method_1 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( type_4 , type_4 . method_2 ( var_2 , 0 ) ) ; type_1 . assertequals ( var_1 , type_2 . method_2 ( var_2 , 1 ) ) ; type_1 . assertequals ( var_3 , type_3 . method_2 ( var_2 , ( - int_1 ) ) ) ; type_1 . assertequals ( var_3 , type_4 . method_2 ( var_2 , int_2 ) ) ; }
[0]: public void method_1 ( type_1 item ) { if ( ( item. method_2 ( ) ) < 0 ) item. method_3 ( ( ( item. method_4 ( ) ) - ( var_1 ) ) ) ; else item. method_3 ( ( ( item. method_4 ( ) ) - ( ( var_1 ) * int_1 ) ) ) ; }

************

************
tgt: public int method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = var_3 . method_2 ( ) ; int var_4 = 0 ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( var_1 == ( var_2 . get ( i ) . method_3 ( ) ) ) { var_4 = var_2 . get ( i ) . method_4 ( ) ; break ; } } java.lang.system.out.println ( var_4 ) ; return var_4 ; }
[0]: public void method_1 ( ) throws type_1 { java.lang.system.out.println ( string_1 ) ; java.lang.thread. method_2 ( int_1 ) ; java.lang.system.out.println ( string_2 ) ; type_2 message = type_3. method_3 ( string_3. method_4 ( ) ). method_5 ( string_4, string_5 ). method_6 ( string_6 ). method_7 ( string_6. method_4 ( ) ). build ( ) ; var_1. method_8 ( var_2, message ) ; var_3. method_9 ( ). method_10 ( int_2, var_4 ) ; }

************

************
tgt: public void method_1 ( java.lang.string data ) { type_1 var_1 = getactivity ( ) . method_2 ( var_2 ) ; java.lang.string var_3 = var_1 . getstring ( var_4 , string_1 ) ; if ( ! ( var_3 . equals ( string_1 ) ) ) { var_3 += "\n" ; } type_2 var_5 = var_1 . method_3 ( ) ; var_5 . method_4 ( var_4 , ( var_3 + ( data . substring ( 0 , ( ( data . length ( ) ) - int_1 ) ) ) ) ) ; var_5 . commit ( ) ; }
[0]: protected void method_1 ( type_1 var_1, boolean var_2 ) { if ( ( var_3 )!= null ) { type_2 var_4 = var_3. method_2 ( ) ; if ( ( var_4!= null ) && (! ( var_4. method_3 ( ) ) ) ) { method_1 ( var_4, var_1, var_2 ) ; } } else { method_1 ( var_4, var_1, var_2 ) ; } }

************

************
tgt: public static type_1 method_1 ( int var_1 ) { switch ( var_1 ) { case var_2 : return var_3 ; case var_4 : return var_5 ; case var_6 : return var_7 ; case var_8 : return var_9 ; case var_10 : return var_11 ; case var_12 : return var_13 ; case var_14 : return var_15 ; case var_16 : return var_17 ; default : throw new type_2 ( ( string_1 + var_1 ) ) ; } }
[0]: public static type_1 method_1 ( ) { type_2 var_1 = type_3. method_2 ( var_2 class ). method_3 ( ) ; type_4 < type_1 > var_3 = var_1. method_4 ( var_4 class ) ; if ( var_3 == null ) { return null ; } return var_1. method_5 ( var_3 ) ; }

************

************
tgt: public final java.lang.string start ( ) throws java.lang.exception { if ( ( method_5 ( ) ) != null ) { type_1 var_1 = type_2 . method_1 ( ) ; type_3 var_2 = var_1 . method_2 ( ) ; var_3 = var_4 . method_3 ( var_2 ) ; var_4 . method_4 ( method_5 ( ) , var_5 ) ; } return var_6 ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { java.lang.string var_2 = var_1 [ i ] ; int result = var_3 [ i ] ; type_1. method_2 ( var_2, result ) ; } }

************

************
tgt: public void method_1 ( ) { while ( true ) { java.lang.system.out.println ( string_1 ) ; method_2 ( new java.io.file ( var_2 ) ) ; java.lang.system.out.println ( string_2 ) ; method_2 ( new java.io.file ( var_3 ) ) ; var_4 = true ; java.lang.system.out.println ( string_3 ) ; if ( var_1 ) try { java.lang.thread . method_3 ( var_5 ) ; } catch ( type_1 var_6 ) { } else { return ; } } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_3. method_2 ( var_4. getvalue ( ) ) ; var_3. method_3 ( var_5. getvalue ( ) ) ; var_6. method_4 ( ). method_5 ( string_1, var_3. method_6 ( ) ). method_7 ( ) ; var_6. method_4 ( ). method_5 ( string_2, var_3. method_8 ( ) ). method_7 ( ) ; method_9 ( ) ; type_2. method_10 ( var_7, string_3 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string [ ] var_1 ) { java.lang.string str = string_1 ; for ( int i = 0 ; i < ( ( var_1 . length ) - 1 ) ; i ++ ) { str += ( var_1 [ i ] ) + string_2 ; } str += var_1 [ ( ( var_1 . length ) - 1 ) ] ; return str ; }
[0]: private boolean method_1 ( ) { int var_1 = method_2 ( ) ; if ( var_1 == 0 ) return false ; if (! ( method_3 ( ) ) ) return false ; type_1 b = var_2. get ( var_1 ) ; b. method_4 ( ) ; return true ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = type_1 . method_2 ( var_2 , var_3 ) ; if ( var_1 . method_3 ( ) ) { method_4 ( var_1 . method_5 ( ) ) ; } else { var_1 . method_6 ( ( ( method_7 ( ) ) & int_1 ) ) ; } var_3 += var_1 . method_8 ( ) ; return var_1 ; }
[0]: protected type_1 method_1 ( type_1 var_1 ) { if (! ( var_2. method_2 ( ) ) ) { return new type_1 ( ( ( var_1. x ) + ( ( var_3 ) / int_1 ) ), var_1. y, ( ( var_4 ) - ( var_3 ) ), var_1. height ) ; } return super. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , type_1 var_2 , type_2 var_3 ) { java.lang.string key = type_3 . method_2 ( var_2 ) ; type_4 . method_3 ( var_4 , ( ( ( string_1 + var_1 ) + string_2 ) + key ) ) ; type_5 < java.lang.string , type_1 > var_5 = method_4 ( var_1 ) ; type_3 . method_6 ( var_5 , var_2 , var_3 ) ; var_5 . put ( type_3 . method_2 ( var_2 ) , var_2 ) ; }
[0]: void method_1 ( java.util.list < java.lang.string > var_1 ) { method_2 ( ). method_3 ( ) ; if ( var_1!= null ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : var_1 ) { list. add ( type_2. method_4 ( context, var_2 ) ) ; } method_2 ( ). method_5 ( list ) ; } }

************

************
tgt: public void method_1 ( type_1 type_2 ) { java.util.list < type_1 > var_1 ; synchronized ( var_2 ) { if ( ! ( var_3 . contains ( type_2 ) ) ) { return ; } var_1 = method_2 ( type_2 ) ; } var_4 . method_3 ( type_2 ) ; for ( type_1 c : var_1 ) { var_4 . method_4 ( c ) ; } }
[0]: public java.lang.object method_1 ( java.lang.object source, java.lang.class <? > var_1, type_1 var_2 ) { if ( ( source == null ) || ( var_2. method_2 ( ). equals ( var_1 ) ) ) { return source ; } java.lang.object var_3 = var_4. method_1 ( source, var_5. string class, var_2 ) ; return var_4. method_1 ( var_3, var_1, var_2 ) ; }

************

************
tgt: public void add ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_2 . add ( new type_2 ( var_1 . get ( i ) . method_1 ( ) . get ( string_1 ) . method_2 ( ) , var_1 . get ( 1 ) . method_1 ( ) . get ( string_2 ) . method_2 ( ) ) ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { int split = type_1. method_2 ( var_1 ) ; java.lang.string var_2 = var_1. substring ( 0, split ) ; java.lang.string var_3 = var_1. substring ( split ) ; if ( var_3. equals ( string_1 ) ) return null ; java.lang.string var_4 = method_3 ( var_1 ) ; return var_4 == null? null : ( var_4 + string_2 ) + var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( type_2 . method_2 ( null , string_1 , string_2 , var_2 , var_3 ) ) == ( var_4 ) ) { if ( method_3 ( ) ) { type_2 . method_4 ( null , string_3 , string_4 , var_5 ) ; java.lang.system.exit ( 0 ) ; } else { type_2 . method_4 ( null , string_5 , string_4 , var_6 ) ; } } else { java.lang.system.exit ( 0 ) ; } }
[0]: protected type_1 method_1 ( type_2 var_1, int x, int y, int var_2, int var_3 ) { int var_4 = var_1. method_2 ( x, y, var_2 ) ; type_3 var_5 = this. method_3 ( var_4 ). method_4 ( ) ; if ( var_5!= null ) { type_1 var_6 = method_5 ( var_5, var_1, x, y, var_2 ) ; if ( var_6!= null ) { return var_6 ; } } return this. method_1 ( var_3, var_4 ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; method_3 ( var_4 ) ; var_6 = ( ( type_4 ) ( var_4 . method_4 ( var_7 ) ) ) ; var_8 = new type_5 ( getactivity ( ) , var_9 , type_6 . method_5 ( ) ) ; var_6 . method_6 ( var_8 ) ; type_7 . method_7 ( var_6 ) ; return var_4 ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2 = ( ( var_2 ) + 1 ) % ( var_3. length ) ; var_4. method_2 ( method_3 ( ) ) ; method_4 ( var_2 ) ; var_5 = false ; var_6 = false ; if ( var_7. method_5 ( ) ) { var_7. method_6 ( ) ; } var_7. method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.system.out.println ( string_1 ) ; type_1 var_3 = var_4 . method_2 ( var_1 ) ; java.util.date date = new java.util.date ( ) ; if ( var_3 != null ) { var_3 . method_3 ( true ) ; var_3 . method_4 ( var_2 ) ; var_3 . method_5 ( date ) ; return var_4 . method_6 ( var_3 ) ; } return var_3 ; }
[0]: public final type_1 < type_2 > method_1 ( ) { type_1 < type_2 > var_1 = new type_1 < type_2 > ( new type_2 [ this. size ( ) ] ) ; for ( type_2 var_2 : this ) { var_1. add ( var_2 ) ; } return var_1 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.util.list < java.lang.object > out ) throws java.lang.exception { if ( ( var_1 . method_2 ( ) ) >= ( var_2 ) ) { var_1 . method_3 ( ) ; type_2 var_3 = method_4 ( var_1 ) ; if ( var_3 != null ) { out . add ( var_3 ) ; } else { var_1 . method_5 ( ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { switch ( var_1 ) { case var_2 : var_3. method_2 ( ) ; var_4. method_2 ( ) ; var_5. method_2 ( ) ; var_6. method_3 ( ) ; type_2. error ( ( string_1 + var_1 ) ) ; default : type_2. error ( ( string_2 + var_1 ) ) ; } }

************

************
tgt: public void method_1 ( ) { while ( var_1 ) { if ( ! ( var_2 . isempty ( ) ) ) { try { method_2 ( var_2 . method_3 ( ) ) ; } catch ( type_1 var_3 ) { type_2 . method_4 ( var_4 , string_1 , var_3 ) ; } } else { try { type_3 . method_5 ( int_1 ) ; } catch ( java.lang.exception var_3 ) { type_2 . method_4 ( var_4 , string_2 , var_3 ) ; } } } type_2 . method_6 ( var_4 , string_3 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( string_1 ) ; type_1 var_2 = new type_1 ( string_2 ) ; type_2 var_3 = new type_2 ( var_1 ) ; type_2 var_4 = new type_2 ( var_2 ) ; var_3. method_1 ( ) ; var_4. method_1 ( ) ; java.lang.system.out.println ( var_5. method_2 ( ) ) ; java.lang.system.out.println ( var_6. method_2 ( ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string string ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( java.lang.string var_2 : type_1 . method_2 ( string ) ) { if ( ! ( var_2 . isempty ( ) ) ) { var_1 . append ( type_2 . touppercase ( var_2 . method_3 ( 0 ) ) ) . append ( var_2 . substring ( 1 ) ) ; } } return var_1 . tostring ( ) ; }
[0]: public void method_1 ( ) { target. method_2 ( output ) ; method_3 ( ) ; java.lang.system.out.println ( ( string_1 + ( var_1 ) ) ) ; if ( ( var_1 ) == ( var_2 ) ) { target. method_4 ( var_3 ) ; java.lang.system.out.println ( string_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 key , type_2 < type_3 > values , type_4 context ) throws java.io.ioexception , type_5 { double var_1 = 0.0 ; for ( type_3 var_3 : values ) { var_1 += var_3 . get ( ) ; } title . set ( string_2 ) ; var_4 . set ( java.lang.string . method_4 ( var_1 ) ) ; context . method_5 ( title , var_4 ) ; }
[0]: private boolean method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; for ( type_2 var_3 : var_1. method_3 ( var_4 ) ) { if ( var_5 class. getname ( ). equals ( var_6. method_4 ( ) ) ) { var_7. settext ( string_1 ) ; return true ; } } return false ; }

************

************
tgt: public static void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; int response = type_1 . method_2 ( ) ; if ( response == 1 ) { type_2 . method_3 ( ) ; type_2 . main ( null ) ; } else if ( response == int_1 ) { type_2 . method_3 ( ) ; type_3 . main ( null ) ; } else { java.lang.system.out.println ( string_2 ) ; type_2 . method_1 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( ). method_3 ( var_2 ) ; method_4 ( var_3 ) ; type_2. method_5 ( var_4, string_1 ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; var_5 = new type_3 ( ) ; var_5. method_11 ( var_6 ) ; var_5. method_11 ( var_7 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.string name = var_2 . gettext ( ) ; java.lang.system.out.println ( name ) ; type_3 a = new type_3 ( ) ; var_3 = name ; a . method_2 ( null ) ; var_4 . name = name ; try { type_4 . main ( null ) ; } catch ( java.io.ioexception var_5 ) { java.util.logging.logger.getlogger ( var_6 class . getname ( ) ) . method_3 ( var_7 , null , var_5 ) ; } this . method_4 ( ) ; }
[0]: public void method_1 ( boolean var_1 ) { method_2 ( type_1. method_3 ( string_1 ). tostring ( ) ) ; var_2 = false ; listener. method_4 ( ) ; var_3. method_5 ( ) ; type_2. method_1 ( this, var_4. method_6 ( ) ) ; try { var_4. method_7 ( ) ; var_4. method_8 ( ) ; var_4. method_9 ( ) ; } catch ( java.lang.exception var_5 ) { type_3. method_10 ( ( string_2 + ( getname ( ) ) ), var_6 class ) ; } }

************

************
tgt: private void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 ) { type_1 var_5 = new type_1 ( ) ; if ( var_4 . equals ( string_1 ) ) { var_5 . method_2 ( this , var_1 , var_2 , var_3 ) ; } else { var_5 . method_2 ( this , var_1 , var_2 , var_3 , java.lang.integer.parseint ( var_4 ) ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 ) == ( var_2. getboolean ( var_3, false ) ) ) { } else { var_1 = var_2. getboolean ( var_3, false ) ; if ( ( var_1 ) && ( var_4. method_2 ( ) ) ) { method_3 ( ) ; var_5 = new type_1 ( string_1 ) ; var_6 = new type_1 ( string_2 ) ; var_7 = new type_1 ( string_3 ) ; } else { } } var_8. method_4 ( this, int_1 ) ; } }

************

************
tgt: private void method_1 ( ) throws type_1 , java.io.ioexception { if ( ( type_2 ) != null ) { if ( ( type_2 . method_2 ( ) ) == null ) { throw new type_1 ( string_1 ) ; } type_2 . method_2 ( ) . method_3 ( ) ; if ( type_2 . method_4 ( ) ) { method_5 ( ) ; } method_6 ( ) ; } }
[0]: protected static java.lang.string method_1 ( final type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_1. method_2 ( ) ; java.lang.string var_4 = var_3. tostring ( ) ; java.lang.string var_5 = var_4. replace ( string_1, string_2 ) ; var_2. append ( var_5, string_3 ) ; return var_2. tostring ( ) ; }

************

************
tgt: private static int method_1 ( char [ ] array , int var_1 , java.lang.stringbuilder var_2 ) { for ( int i = var_1 ; i < ( array . length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case char_2 : case char_3 : return i + 1 ; case char_1 : if ( ( var_2 . length ( ) ) == 0 ) continue ; default : var_2 . append ( c ) ; } } return array . length ; }
[0]: private void method_1 ( ) { java.lang.string var_1 = method_2 ( ). getstring ( var_2 ) ; java.lang.string var_3 = method_2 ( ). getstring ( var_4. method_3 ( ). getname ( ) ) ; var_5. method_4 ( ( ( var_1 + string_1 ) + var_3 ) ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { if ( ! ( var_1 . method_2 ( string_1 ) ) ) throw new type_2 ( ( ( string_2 + var_1 ) + string_3 ) ) ; int x = ( ( var_1 . method_3 ( 0 ) ) - char_1 ) + 1 ; int y = ( ( var_1 . method_3 ( 1 ) ) - char_1 ) + 1 ; return type_1 . method_4 ( x , y ) ; }
[0]: private void method_1 ( java.io.file var_1 ) { java.io.file [ ] var_2 = var_1. method_2 ( var_3 ) ; for ( java.io.file file : var_2 ) { var_4. method_3 ( file ) ; method_4 ( file ) ; } java.io.file [ ] var_5 = var_1. method_2 ( var_6 ) ; for ( java.io.file var_7 : var_5 ) { method_1 ( var_7 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , type_1 ... var_2 ) { var_3 . method_2 ( var_1 . method_3 ( ) ) ; type_2 var_4 = var_5 . method_4 ( var_1 . method_5 ( ) . tostring ( ) ) ; method_6 ( var_1 , var_4 ) ; type_1 [ ] var_7 = type_3 . method_7 ( var_2 , var_1 ) ; type_4 . asserttrue ( var_5 . method_8 ( var_7 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = type_1. method_2 ( ) ; type_2 var_2 = new type_2 ( ) ; context = new type_3 ( new type_4 ( ), var_2, new type_5 ( ) ) ; context. method_3 ( var_3. method_4 ( string_1 ) ) ; var_1. method_5 ( var_4, true ) ; var_5 = new type_6 ( ) ; var_5. method_6 ( string_2 ) ; }

************

************
tgt: public java.util.hashmap < java.lang.string , java.lang.object > count ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.integer var_2 = var_1 . method_1 ( ) ; java.util.hashmap < java.lang.string , java.lang.object > response = new java.util.hashmap < > ( ) ; response . put ( string_1 , var_3 ) ; response . put ( string_2 , var_2 ) ; response . put ( string_3 , ( ( int ) ( type_2 . method_2 ( ( ( 1.0 * var_2 ) / ( var_4 ) ) ) ) ) ) ; return response ; }
[0]: public void method_1 ( ) throws java.lang.throwable { class type_1 { class var_1 { public void method_2 ( ) { } } } method_3 ( var_2 class, string_1 ) ; type_2. method_4 ( var_3 ). event ( string_2 ). method_5 ( ). attribute ( string_3, string_4 ). attribute ( string_5, string_6 ). method_6 ( ). method_7 ( ) ; }

************

************
tgt: public long method_1 ( ) throws java.io.ioexception { long var_1 = 0 ; try ( type_1 var_2 = var_3 . method_2 ( true ) ) { for ( type_2 var_4 : var_5 . values ( ) ) { var_1 += var_4 . method_1 ( ) ; } } return var_1 ; }
[0]: public void method_1 ( type_1 event ) { var_1. settext ( ( ( string_1 + var_2 ) + string_2 ) ) ; method_2 ( ) ; var_3. method_3 ( var_4, nodes, new type_2 < java.lang.string > ( ) { public void method_4 ( java.lang.throwable var_5 ) { var_1. settext ( var_5. method_5 ( ) ) ; var_6 = false ; } public void method_6 ( java.lang.string result ) { var_1. settext ( result ) ; var_6 = false ; method_7 ( ) ; } } ) ; } }

************

************
tgt: public type_1 set ( type_2 [ ] var_1 , type_2 var_2 ) { java.util.list < type_3 > var_3 = new java.util.arraylist < type_3 > ( ) ; for ( type_2 var_4 : var_1 ) { type_3 var_5 = method_1 ( var_4 , var_2 ) ; if ( var_5 != null ) { var_3 . add ( var_5 ) ; } } return set ( var_3 , var_2 ) ; }
[0]: public void method_1 ( ) { if ( ( var_1. method_2 ( ). size ( ) ) > 0 ) { for ( java.lang.string url : var_1. method_2 ( ) ) { method_3 ( url ) ; } var_2. method_4 ( ) ; method_5 ( ) ; } else { var_2. method_4 ( ) ; } } }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 , java.lang.exception var_2 ) { if ( ( null == var_2 ) && ( null != var_1 ) ) { for ( type_1 var_3 : var_1 ) { type_2 . method_2 ( ) . method_3 ( var_4 , var_3 ) ; } } }
[0]: private void method_1 ( type_1 p, java.lang.string var_1 ) { if ( ( ( var_1. length ( ) ) < int_1 ) || ( ( var_1. length ( ) ) > int_2 ) ) { p. method_2 ( string_1 ) ; return ; } method_3 ( string_2 ). set ( p. getname ( ), var_1 ) ; if ( method_4 ( string_2 ) ) p. method_2 ( string_3 ) ; else p. method_2 ( string_4 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.util.map < java.lang.string , java.lang.string > var_1 = type_1 . method_1 ( string_1 ) ; var_2 = var_1 . get ( string_2 ) ; var_3 = type_1 . method_2 ( var_4 , var_2 ) ; var_5 . method_3 ( var_2 ) ; var_5 . method_5 ( var_2 ) ; var_5 . method_6 ( var_2 ) ; var_5 . method_4 ( var_2 , string_3 ) ; }
[0]: private java.net.url method_1 ( java.net.url url ) { if ( ( url == null ) || ( url. method_2 ( ). equals ( string_1 ) ) ) { return url ; } try { return type_1. method_3 ( url ). method_4 ( ) ; } catch ( java.lang.exception var_1 ) { var_2. error ( ( ( ( string_2 + url ) + string_3 ) + ( var_1. method_5 ( ) ) ) ) ; return url ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { java.lang.string var_1 = string_1 ; type_2 var_2 = new type_2 ( ) ; method_2 ( var_3 . method_3 ( var_1 ) ) . method_4 ( var_2 ) ; asserttrue ( ( var_2 == ( var_4 . method_5 ( var_1 , var_5 ) ) ) ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; type_2 var_2 = type_3. method_3 ( ) ; var_2. method_4 ( var_3. method_5 ( ). method_6 ( ) ) ; type_3. method_7 ( var_2 ) ; type_4. get ( ). method_8 ( var_4, var_2 ) ; type_5. method_9 ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) ) != null ) { int count = var_1 . method_2 ( ) . method_3 ( ) ; int size = var_2 . size ( ) ; for ( int i = size ; i < count ; i ++ ) { var_2 . add ( false ) ; var_3 . add ( false ) ; var_4 . add ( false ) ; } } }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent var_3 ) { super. method_1 ( var_1, var_2, var_3 ) ; switch ( var_1 ) { case var_4 : case var_5 : if ( var_2 == ( var_6 ) ) { method_2 ( ) ; var_7. method_3 ( ). method_4 ( ) ; } break ; } }

************

************
tgt: public boolean method_1 ( final java.lang.class < ? extends type_1 > type ) { type_1 var_1 = type_2 . get ( type_3 . method_2 ( var_2 , new type_4 < type_1 > ( ) { public boolean method_3 ( type_1 var_3 ) { return var_3 . getclass ( ) . method_4 ( type ) ; } } ) , 0 , null ) ; if ( var_1 == null ) { return false ; } var_1 . method_5 ( method_6 ( ) , method_7 ( ) ) ; var_2 . remove ( var_1 ) ; return true ; }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : type_1. method_2 ( var_3. id ) ; break ; case var_4 : method_3 ( ). method_4 ( var_5 class, null, null ) ; break ; case var_6 : type_1. method_5 ( var_7. id ) ; type_2. method_6 ( var_8, type_3. params ( ). add ( var_9, string_1 ) ) ; break ; } }

************

************
tgt: public static java.io.file method_1 ( final long var_1 ) { final java.lang.string var_2 = ( ( var_3 ) + var_1 ) + string_1 ; try { return java.io.file . method_2 ( var_2 , string_2 , type_1 . method_3 ( var_1 ) ) ; } catch ( java.io.ioexception var_5 ) { type_2 . method_4 ( ( string_3 + ( var_5 . tostring ( ) ) ) ) ; return null ; } }
[0]: public < type_1 > type_1 [ ] method_1 ( type_1 [ ] a ) { type_1 [ ] result = null ; if ( ( a. length ) >= ( this. size ( ) ) ) result = a ; else result = ( ( type_1 [ ] ) ( type_2. method_2 ( a. getclass ( ). method_3 ( ), this. size ( ) ) ) ) ; type_3. method_4 ( this. array, 0, result, 0, result. length ) ; return result ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { float var_2 = var_3 . method_2 ( ) ; var_4 = ( var_5 ) + ( var_2 * ( var_6 ) ) ; var_7 = var_1 . method_3 ( ) ; var_8 = var_1 . method_4 ( ) ; var_9 = ( ( ( var_3 . method_2 ( ) ) - float_1 ) * int_1 ) * ( var_10 ) ; var_11 = ( var_12 ) + ( var_2 * ( var_13 ) ) ; }
[0]: type_1 method_1 ( java.lang.string var_1 ) { java.lang.string [ ] str = var_1. split ( string_4 ) ; java.lang.string [ ] str = var_1. split ( string_1, string_2 ) ; return new type_1 ( null, null, str [ 1 ], null, null, str [ 0 ], str [ int_1 ], null, null ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = method_2 ( ) ; type_2 . method_3 ( var_1 , int_1 , var_1 . method_4 ( ( 1l < < int_2 ) , ( 1l < < int_1 ) ) , ( - 1 ) , ( 1l < < int_2 ) , ( 1l < < int_1 ) , method_5 ( ) ) ; }
[0]: public void method_1 ( type_1 j, type_2 var_1 ) { for ( type_3 var_2 : method_2 ( ) ) { if ( var_1. method_3 ( ). equals ( var_2 ) ) { for ( type_2 var_3 : var_2. method_4 ( ) ) { if (! ( var_3. method_5 ( ) ) ) { if ( type_4. method_6 ( var_3. method_7 ( ), var_1. method_8 ( ) ) ) { var_2. method_1 ( j, var_1. method_8 ( ) ) ; } } } } } }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 ) { if ( var_2 != 0 ) { int var_3 = type_1 . method_2 ( var_1 ) ; int var_4 = type_1 . method_2 ( var_2 ) ; if ( ( var_4 < var_3 ) && false ) { var_2 = type_1 . method_3 ( var_4 , type_1 . method_4 ( var_2 ) ) ; } } super . method_1 ( var_1 , var_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_2 ( ) ; type_1 var_2 = new type_3 ( ) ; type_1 var_3 = new type_4 ( ) ; type_1 [ ] var_4 = new type_1 [ ] { var_3, var_2, var_1 } ; type_5 var_5 = new type_5 ( var_4 ) ; var_5. start ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { boolean var_1 = ( ( type_1 ) ( view ) ) . method_2 ( ) ; switch ( view . getid ( ) ) { case var_2 : if ( var_1 ) var_3 . method_3 ( var_4 ) ; break ; case var_5 : if ( var_1 ) var_3 . method_3 ( var_6 ) ; break ; } }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { switch ( var_3 ) { case string_1 : { return var_1. method_2 ( ). compareto ( var_2. method_2 ( ) ) ; } default : { throw new type_2 ( new type_3 ( var_4, var_3 ) ) ; } } } return 0 ; }

************

************
tgt: private int method_1 ( int index ) throws type_1 { int var_1 = 0 ; int var_2 = 0 ; while ( var_1 < index ) { type_2 var_3 = var_4 . get ( var_2 ) ; if ( ( var_3 != null ) && ( ( var_4 . method_2 ( var_3 ) ) == var_2 ) ) var_1 ++ ; var_2 ++ ; } return var_2 - 1 ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.string var_1 ) throws java.lang.exception { type_2 var_2 = var_3. method_2 ( var_1 ) ; if ( var_2!= null ) { return new type_1 ( var_2, var_4 ) ; } else { return new type_1 ( var_2, var_5 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { final type_1 var_1 = type_1 . method_1 ( string_1 , int_1 ) ; type_2 . method_2 ( ) . method_3 ( var_2 ) ; type_3 . method_4 ( var_1 ) ; type_3 . start ( var_1 ) ; }
[0]: public static java.lang.string method_1 ( int length ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; do { while ( ( var_1. length ( ) ) < length ) { var_1. append ( var_2 [ java.lang.math.abs ( ( ( var_3. method_2 ( ) ) % ( var_2. length ) ) ) ] ) ; } } while ( var_1. tostring ( ). method_3 ( string_1 ) ) ; return var_1. tostring ( ) ; } return var_1. tostring ( ) ; }

************

************
tgt: private java.lang.string method_1 ( final type_1 var_1 ) { java.lang.string classname = null ; try { classname = var_1 . method_2 ( ) . tostring ( ) ; } catch ( final java.lang.exception var_2 ) { var_2 . method_3 ( ) ; java.lang.system.out.println ( var_2 . method_4 ( ) ) ; classname = var_2 . tostring ( ) ; } return classname ; }
[0]: public int method_1 ( double var_1 ) { if ( ( var_1 < ( var_2 ) ) || ( var_1 > ( var_3 ) ) ) throw new type_1 ( string_1 ) ; int var_4 = ( ( int ) ( ( ( var_3 ) - var_1 ) / ( var_5 ) ) ) ; if ( var_4 >= ( var_6 ) ) throw new type_2 ( ) ; return var_4 ; }

************

************
tgt: public type_1 < type_2 > method_1 ( long var_1 , type_3 var_2 , type_4 status , boolean var_3 , java.lang.string var_4 , type_5 var_5 , java.lang.string var_6 ) throws type_6 { type_7 . method_2 ( var_2 , string_1 ) ; return var_7 . method_1 ( var_1 , var_2 . tostring ( ) , status , var_3 , var_4 , var_5 , var_6 ) ; }
[0]: public int method_1 ( ) { int count = 0 ; for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 ) ; j ++ ) { if ( ( var_2 [ i ] [ j ] )!= ( method_2 ( i, j ) ) ) { count ++ ; } } } return count ; }

************

************
tgt: public void init ( ) { this . var_1 . method_1 ( 0.0f , 0.0f ) ; this . var_1 . method_2 ( ( ( ( var_2 . x ) + ( ( method_3 ( ) ) / float_1 ) ) / ( var_3 ) ) , ( ( ( var_2 . y ) + ( ( method_4 ( ) ) / float_1 ) ) / ( var_3 ) ) , 0.0f ) ; var_4 = true ; var_5 = true ; var_6 = false ; var_7 = false ; var_8 = 0.0f ; }
[0]: private type_1 [ ] method_1 ( type_2 var_1 ) throws type_3 { type_4 var_2 = new type_4 ( var_3. method_2 ( ) ) ; type_5 var_4 = method_3 ( var_2. get ( var_2. method_4 ( ) ) ) ; return var_1. method_5 ( method_6 ( var_4, false ) ) ; }

************

************
tgt: private void method_1 ( ) { java.lang.boolean var_1 = false ; method_2 ( ) ; while ( ! var_1 ) { if ( ( ! ( var_2 . method_4 ( ) ) ) && ( ! ( var_2 . method_5 ( ) ) ) ) { var_1 = true ; } else { method_2 ( ) ; } } }
[0]: public static java.util.list < type_1 > method_1 ( ) { return java.util.arrays.aslist ( new type_1 ( var_1, int_1, int_2 ), new type_1 ( var_2, int_3, 1 ), new type_1 ( var_3, int_2, int_1 ), new type_1 ( var_4, int_4, int_5 ) ) ; }

************

************
tgt: public int method_1 ( java.lang.string [ ] list , java.lang.string var_1 ) { for ( int i = 0 ; i != ( list . length ) ; i ++ ) { if ( list [ i ] . equals ( var_1 ) ) return i ; } return 0 ; }
[0]: public final int method_1 ( final type_1 var_1, final boolean var_2, final int var_3 ) { int value = 0 ; for ( type_2 var_4 : var_5 ) { value = var_4. method_2 ( var_1, var_2, var_3, value ) ; } return value ; }

************

************
tgt: public void method_1 ( int var_1 ) { switch ( var_1 ) { case int_2 : var_3 = int_2 ; break ; case int_5 : var_3 = int_5 ; break ; case int_6 : var_3 = int_6 ; break ; default : var_3 = int_3 ; break ; } method_4 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. method_2 ( ) ; var_2. method_1 ( ) ; var_3. method_1 ( ) ; var_4. method_1 ( ) ; var_5. method_1 ( ) ; if ( type_1. method_3 ( ) ) { ( ( type_2 ) ( type_3. method_4 ( ) ) ). method_5 ( ) ; } var_6. method_6 ( ) ; var_7. method_1 ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { type_1 var_4 = type_1 . method_2 ( ) ; switch ( var_1 ) { case 1 : if ( ( var_3 . length ) > 0 ) { for ( int i : var_3 ) { if ( i != ( var_5 ) ) { type_2 . method_3 ( this , string_1 ) ; return ; } } var_4 . method_4 ( ) ; } break ; default : } }
[0]: public void method_1 ( ) { while ( true ) { method_2 ( ) ; method_3 ( ) ; while ( ( var_1 ) == true ) { method_4 ( ) ; boolean a = method_5 ( ) ; if ( a == true ) { method_6 ( ) ; } if ( a == false ) { method_7 ( ) ; var_1 = false ; } } } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 f = new type_2 ( string_1 ) ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { var_4 [ i ] [ j ] = f ; method_2 ( ) ; } } }
[0]: private void method_1 ( java.io.file var_1 ) { try { if (! ( var_1. method_2 ( ) ) ) { if ( var_1. method_3 ( ) ) { type_1. info ( string_1 ) ; } else { type_1. info ( string_2 ) ; } } } catch ( java.lang.throwable var_2 ) { type_1. info ( string_3 ) ; } } }

************

************
tgt: private void method_1 ( type_1 index , java.util.collection < type_2 > var_1 ) { type_1 var_2 = index . method_2 ( var_3 ) ; for ( type_3 < type_2 > var_4 : this . var_1 . values ( ) ) { var_4 . method_3 ( var_2 , null ) ; } method_4 ( index , var_1 ) ; }
[0]: private void method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = type_2. method_2 ( ) ; java.util.linkedlist < type_1 > var_3 = var_4. remove ( var_1 ) ; for ( type_1 id : var_3 ) { var_5. remove ( id ) ; var_2. add ( id ) ; } var_6. remove ( var_1 ) ; type_3. info ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > list = new java.util.arraylist < type_1 > ( ) ; for ( type_2 item : this . var_1 . method_2 ( this ) ) { list . add ( ( ( type_1 ) ( item ) ) ) ; } return list ; }
[0]: public type_1 method_1 ( type_2 file ) { final java.lang.string var_1 = type_3. method_2 ( file. method_3 ( ) ) ; if ( var_1 == null ) return new type_1 ( ) ; java.lang.string result = method_4 ( file, var_1 ) ; return type_4. method_5 ( result, file ) ; }

************

************
tgt: public void method_1 ( int [ ] [ ] var_1 ) { if ( method_2 ( var_1 ) ) { return ; } for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 [ 0 ] . length ) ; j ++ ) { if ( ( var_1 [ i ] [ j ] ) >= 0 ) { method_3 ( var_1 , i , j ) ; } } } }
[0]: public void method_1 ( ) { final type_1 var_1 = this. var_2. method_2 ( null ) ; if ( var_1!= null ) { if ( ( var_1. method_3 ( ) ) == ( var_3 ) ) { final type_2 var_4 = this. var_5. method_4 ( ) ; if ( var_4!= null ) { this. var_2 = var_4 ; method_5 ( var_4 ) ; } else this. var_2 = null ; } } } }

************

************
tgt: public void method_1 ( ) { int var_1 = ( var_2 . method_2 ( ) ) - 1 ; int var_3 = ( var_2 . method_3 ( ) ) - 1 ; for ( int var_4 = var_3 ; var_4 >= 0 ; var_4 -- ) { var_5 = type_1 . method_4 ( 0 , var_1 , var_4 , var_3 ) ; method_5 ( ) ; for ( type_2 var_6 : var_7 ) assert ! ( var_6 . method_6 ( ) . isempty ( ) ) ; } }
[0]: public void method_1 ( ) { try { var_1. info ( string_1 ) ; method_2 ( string_2 ) ; java.util.list < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( var_3. method_3 ( ) ) ; for ( int i : var_2 ) { var_3. get ( i ). method_4 ( ) ; var_3. remove ( i ) ; } var_1. info ( string_3 ) ; var_4 = 0 ; } catch ( java.lang.exception var_5 ) { var_1. error ( string_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { try { type_2 . assertequals ( string_1 , var_2 . method_2 ( var_1 . method_3 ( ) , string_2 , var_1 ) ) ; } catch ( java.lang.exception var_3 ) { type_3 . method_4 ( ( string_3 + var_3 ) ) ; } } catch ( java.lang.exception var_3 ) { type_3 . method_4 ( ( string_4 + var_3 ) ) ; } }
[0]: public static int method_1 ( double t ) { int count = type_1. method_2 ( type_2, t ) ; if ( count!= ( - 1 ) ) { return count ; } else { double var_1 = t - ( var_2 ) ; int var_3 = ( ( int ) ( ( type_1. method_1 ( var_1 ) ) + ( type_1. method_3 ( t ) ) ) ) ; type_2. add ( var_3 ) ; return var_3 ; } }

************

************
tgt: protected void method_1 ( int position , float offset , int var_1 ) { if ( ( ( var_2 ) && ( offset == 0 ) ) && ( ! ( var_3 ) ) ) { if ( ( var_4 ) != null ) { var_4 . method_2 ( ) ; var_3 = true ; } } var_2 = ( position + 1 ) == ( method_3 ( ) . method_4 ( ) ) ; super . method_1 ( position , offset , var_1 ) ; }
[0]: private void method_1 ( java.lang.string [ ] var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_1 [ 0 ]. equals ( var_2. get ( i ). method_2 ( ) ) ) { if ( var_1 [ 1 ]. equals ( var_2. get ( i ). method_3 ( ) ) ) { var_2. remove ( i ) ; method_4 ( ) ; } } } } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( ) ; type_2 . method_3 ( ) . method_4 ( var_1 , true ) . method_4 ( var_2 , true ) . method_5 ( var_3 , var_4 ) . method_6 ( ) ; type_3 . method_3 ( ) . method_7 ( var_5 ) . method_8 ( var_4 , true ) . method_7 ( var_5 ) . method_8 ( var_4 , false ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < > ( ) ; type_2 var_3 = type_3. method_2 ( ). method_3 ( ) ; var_2 = var_3. method_4 ( var_4 class, var_1 ). list ( ) ; var_5. info ( ( string_1 + var_1 ) ) ; var_5. info ( ( string_2 + ( var_2. size ( ) ) ) ) ; return var_2 ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 ) throws type_2 { java.lang.string var_2 = var_1 . method_2 ( ) . tostring ( ) ; java.lang.string var_3 = var_1 . method_2 ( ) . tostring ( ) ; java.lang.string var_4 = var_1 . method_2 ( ) . tostring ( ) ; if ( this . var_5 ) { var_1 . method_3 ( var_4 . replaceall ( var_3 , var_2 ) ) ; } else { var_1 . method_3 ( var_4 . method_4 ( var_3 , var_2 ) ) ; } return var_1 ; }
[0]: private int method_1 ( int [ ] var_1 ) { int var_2 = 0 ; for ( int i = 1 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] ) > ( var_1 [ var_2 ] ) ) { var_2 = i ; break ; } } return var_2 ; }

************

************
tgt: private void method_1 ( type_1 t ) { ( counter ) ++ ; java.util.list < type_2 > result = f . method_1 ( t ) ; if ( result != null ) for ( type_2 out : result ) { method_2 ( t , out ) ; if ( var_2 ) { var_3 . method_3 ( 1 ) ; } } }
[0]: private void method_1 ( ) { if (! ( method_2 ( ) ) ) { method_3 ( ) ; } var_1 = new type_1 ( this ) ; var_1. method_4 ( var_2 ) ; var_1. method_5 ( method_6 ( ). getstring ( var_3 ) ) ; var_1. method_7 ( false ) ; var_1. show ( ) ; var_4 = new type_2 ( ) ; method_8 ( ) ; }

************

************
tgt: public int method_1 ( type_1 key , type_1 value , int var_1 ) { try { type_2 . method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { var_2 . method_3 ( ) ; } long var_3 = ( ( var_4 ) - ( var_5 ) ) / var_1 ; return ( ( int ) ( ( ( key . get ( ) ) - ( var_5 ) ) / var_3 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = type_3. method_2 ( ). method_3 ( ) ; type_4 var_3 = new type_4 ( getactivity ( ), var_2 ) ; type_3. method_2 ( ). method_4 ( var_3 ) ; method_5 ( var_3 ) ; }

************

************
tgt: public java.util.map < java.lang.string , java.lang.object > method_1 ( java.util.map < java.lang.string , java.lang.object > var_1 , java.util.map < java.lang.string , java.lang.object > var_2 ) { java.util.map < java.lang.string , java.lang.object > result = new java.util.hashmap < > ( ) ; if ( var_1 != null ) { result . method_2 ( var_1 ) ; } if ( var_2 != null ) { result . method_2 ( var_2 ) ; } return result ; }
[0]: public void method_1 ( type_1 var_1, type_2 message ) { if ( ( var_2. size ( ) ) > 0 ) { type_3 var_3 = new type_3 ( ) ; var_3. method_2 ( var_4, var_1. method_3 ( ) ) ; var_3. method_4 ( var_5, message ) ; type_4 var_6 = type_4. method_5 ( ) ; var_7 = var_8 ; var_6. method_6 ( var_3 ) ; method_7 ( var_6 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { for ( java.util.iterator i = values . iterator ( ) ; i . method_2 ( ) ; ) { if ( i . method_3 ( ) . equals ( var_1 ) ) { i . remove ( ) ; } } return this ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( ( var_2. method_2 ( string_1 ) )!= null ) { var_1. method_3 ( var_2. method_2 ( string_1 ) ) ; } var_1. method_4 ( ( ( var_3 ) ++ ) ) ; var_1. method_5 ( new java.util.date ( ) ) ; var_4. get ( ). method_1 ( var_1. build ( ) ) ; }

************

************
tgt: private java.lang.long method_1 ( java.lang.string value ) { int var_1 = int_1 ; value = value . touppercase ( ) ; for ( int i = 0 ; i < ( value . length ( ) ) ; i ++ ) { var_1 = ( ( var_1 < < int_2 ) + var_1 ) + ( value . method_2 ( i ) ) ; } return java.lang.long . method_3 ( var_1 ) ; }
[0]: private type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; try { java.io.file var_3 = type_2. method_2 ( var_4 ) ; java.io.file var_5 = new java.io.file ( var_3, var_1 ) ; java.io.inputstream var_6 = new java.io.fileinputstream ( var_5 ) ; var_2 = type_3. method_3 ( var_6 ) ; } catch ( type_5 var_7 ) { var_7. method_5 ( ) ; } catch ( java.io.ioexception var_7 ) { var_7. method_5 ( ) ; } return var_2 ; }

************

************
tgt: private static int method_1 ( type_1 file , int var_1 ) { if ( ( ( var_1 + 1 ) * ( var_2 ) ) > ( file . method_2 ( ) ) ) { return ( ( var_1 + 1 ) * ( var_2 ) ) - ( file . method_2 ( ) ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { if ( string_1. equals ( var_2. gettext ( ) ) ) { type_2. method_2 ( var_3, string_2 ) ; return ; } if ( ( java.lang.integer.parseint ( var_4. getvalue ( ). tostring ( ) ) ) <= 0 ) { type_3. method_3 ( int_1 ) ; } method_4 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) { context = var_1 . getcontext ( ) ; type_3 var_3 = type_3 . method_2 ( context ) ; var_4 = new type_4 ( var_1 . getcontext ( ) ) . build ( ) ; android.view.view var_5 = var_3 . method_3 ( var_6 , var_1 , false ) ; type_1 var_7 = new type_1 ( var_5 ) ; type_5 . method_4 ( var_8 , string_1 ) ; return var_7 ; }
[0]: public void method_1 ( type_1 var_1, java.util.list < type_1 > var_2 ) { final type_2 var_3 = new type_2 ( ) ; final java.util.list < type_1 > var_4 = method_2 ( var_2 ) ; final java.util.iterator < type_1 > iterator = var_4. iterator ( ) ; while ( iterator. method_3 ( ) ) { final type_3 element = iterator. method_4 ( ) ; var_3. method_5 ( element ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1 . method_2 ( string_1 ) ; type_2 var_2 = new type_2 ( string_2 ) ; var_2 . init ( ) ; type_3 var_3 = new type_3 ( ) ; assertequals ( var_1 , var_3 . method_1 ( var_2 , var_4 ) . tostring ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; type_3 var_3 = method_3 ( var_2. x, var_2. y ) ; if ( method_4 ( var_3, var_4 ) ) { var_1. method_5 ( var_5 ) ; method_6 ( var_6 ) ; } else { var_1. method_7 ( ) ; method_6 ( var_7 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) . method_5 ( ) . method_6 ( ) . method_8 ( string_2 ) . method_9 ( ) . method_5 ( ) . method_10 ( ) . method_9 ( ) ; var_1 . method_11 ( var_2 , var_3 class ) ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.string msg, java.lang.object... args ) { java.lang.string [ ] var_2 ; if ( args == null ) var_2 = msg. split ( string_1 ) ; else var_2 = java.lang.string.format ( msg, args ). split ( string_1 ) ; for ( java.lang.string line : var_2 ) { var_1. method_2 ( new type_2 ( line ) ) ; } }

************

************
tgt: protected java.lang.object method_1 ( java.lang.object [ ] var_1 ) { java.lang.string var_2 = string_1 ; var_3 = new type_1 ( var_4 ) ; type_2 var_5 = null ; method_2 ( ) ; if ( ( ( var_6 ) != null ) && ( ( var_6 . size ( ) ) > 0 ) ) { for ( int i = 0 ; i < ( var_6 . size ( ) ) ; i ++ ) { var_5 = var_3 . method_3 ( var_6 . get ( i ) , var_2 ) ; } } return var_5 ; }
[0]: public int method_1 ( type_1 node ) { type_2 var_1 = node. method_2 ( ) ; int var_2 = ( ( int ) ( ( ( var_1. method_3 ( ) ) - ( var_3 ) ) % ( var_4 ) ) ) ; int c = ( ( int ) ( ( ( var_1. method_4 ( ) ) - ( var_5 ) ) % ( var_4 ) ) ) ; return ( var_2 * ( var_6 ) ) + c ; }

************

************
tgt: public int method_1 ( ) { switch ( var_1 ) { case string_1 : var_2 = ( method_2 ( ) ) - ( method_3 ( ) ) ; break ; case string_2 : var_2 = ( method_3 ( ) ) - ( method_2 ( ) ) ; break ; default : break ; } return var_2 ; }
[0]: public < type_1 > type_2 < type_1 > method_1 ( type_3 var_1, java.lang.string output ) { type_2 < type_1 > var_2 = null ; try { var_2 = ( ( type_2 < type_1 > ) ( type_4. method_2 ( this. var_3, ( ( var_4 ) + output ), var_1 ) ) ) ; } catch ( java.lang.exception var_5 ) { throw new type_5 ( string_1 ) ; } if ( var_2!= null ) { return var_2 ; } else { return new type_6 < type_1 > ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { if ( var_2 && ( var_1 instanceof type_3 ) ) { type_2 . info ( ( string_1 + ( ( ( type_3 ) ( var_1 ) ) . method_2 ( ) ) ) ) ; } for ( type_4 var_3 : var_4 ) { var_3 . method_3 ( method_4 ( ) ) ; if ( ! var_2 ) { var_3 . method_5 ( ) ; } else { var_3 . method_6 ( ) ; } } }
[0]: public int [ ] method_1 ( short [ ] var_1, int var_2 ) { if ( var_1 == null ) return null ; double [ ] var_3 = method_2 ( var_1 ) ; int [ ] var_5 = var_6. method_3 ( var_3, var_2 ) ; for ( int i = 0 ; i < ( var_5. length ) ; i ++ ) { var_5 [ i ] = ( ( int ) ( ( var_3 [ i ] ) / int_2 ) ) ; } return var_5 ; }

************

************
tgt: public void execute ( type_1 p ) { var_1 . method_1 ( ) . method_2 ( var_2 class , new type_2 < type_3 > ( ) { public void execute ( type_3 t ) { t . method_4 ( type_4 . method_5 ( string_1 ) ) ; t . method_6 ( var_4 ) ; } } ) ; }
[0]: private void init ( ) { var_1 = new type_1 ( title, var_2, height ) ; var_1. method_1 ( ). method_2 ( var_3 ) ; type_2. init ( ) ; var_4 = new type_3 ( this, int_1, int_2 ) ; var_5 = new type_4 ( this ) ; var_6 = new type_5 ( var_5 ) ; var_7 = new type_6 ( var_5 ) ; var_8 = new type_7 ( var_5 ) ; type_8. setstate ( var_6 ) ; }

************

************
tgt: public static void method_1 ( ) { type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; while ( ( type_1 . method_4 ( ) ) == false ) { type_1 . method_5 ( ) ; type_1 . method_6 ( ) ; type_1 . method_7 ( ) ; type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; } type_1 . method_8 ( ) ; type_1 . method_9 ( ) ; type_1 . method_10 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = null ; while ( true ) { try { var_1 = var_2. method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { break ; } if ( var_1!= null ) { method_3 ( var_1 ) ; try { var_2. method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { } break ; } } }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_1 var_3 : var_4 ) { if ( ( var_3 . method_2 ( ) ) != null ) if ( var_3 . method_2 ( ) . tostring ( ) . equals ( var_1 ) ) { var_2 . add ( var_3 . tostring ( ) ) ; } } return var_2 ; }
[0]: public static void method_1 ( ) { var_1 = false ; var_2. method_2 ( var_3, var_4, string_1, true ) ; boolean var_5 = false ; while ( ( var_2. method_3 ( ) ) == 1 ) { if ( ( var_2. method_3 ( ) ) == int_1 ) { var_5 = true ; break ; } } if (! var_5 ) { var_2. method_4 ( ) ; } } }

************

************
tgt: public static type_1 method_1 ( byte [ ] var_1 ) throws type_2 { if ( ( var_1 . length ) <= int_1 ) throw new type_2 ( string_1 ) ; if ( ( ( var_1 [ 0 ] ) > > int_2 ) == int_2 ) return new type_3 ( var_1 ) ; else if ( ( ( var_1 [ 0 ] ) > > int_2 ) == int_3 ) return new type_4 ( var_1 ) ; else { throw new type_2 ( ( string_2 + ( var_1 [ 0 ] ) ) ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.util.list < java.lang.integer > var_1 ) { type_2 var_2 = new type_2 ( ) ; var_2. method_2 ( ). method_3 ( var_3 ). method_4 ( var_1 ) ; var_2. method_5 ( string_1 ) ; return method_6 ( var_4. method_7 ( var_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 msg = new type_1 ( ) . method_2 ( string_1 ) ; msg . method_3 ( type_2 . method_4 ( string_2 ) ) ; try { msg . method_3 ( null ) ; type_3 . fail ( string_3 ) ; } catch ( java.lang.nullpointerexception var_1 ) { } catch ( java.lang.exception var_1 ) { type_3 . fail ( var_1 . tostring ( ) ) ; throw new type_4 ( string_4 , var_1 ) ; } }
[0]: public void method_1 ( android.content.context context, android.content.intent data ) { java.lang.string var_1 = data. method_2 ( ) ; if ( var_1. equals ( var_2 ) ) { method_3 ( data ) ; } else if ( var_1. equals ( var_3 ) ) { var_4. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; type_1 var_2 = new type_1 ( var_3 ) ; var_4 = var_2 ; var_5 . method_3 ( var_2 , var_1 ) ; for ( type_2 var_6 : var_7 ) { var_6 . method_4 ( var_1 ) ; } var_1 . method_2 ( ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( new type_1 ( ). method_3 ( string_1 ). method_4 ( string_2 ). method_5 ( var_2 ). build ( ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ), var_3 class ) ; intent. method_6 ( var_4, var_5 ) ; method_7 ( intent ) ; getactivity ( ). method_8 ( ) ; }

************

************
tgt: public byte [ ] method_1 ( long var_1 , int var_2 ) throws java.io.ioexception { java.lang.string var_3 = string_1 ; if ( var_2 > 0 ) var_3 = string_2 + var_2 ; java.lang.string var_4 = ( ( ( ( var_5 ) + string_3 ) + ( java.lang.string.format ( string_4 , var_1 ) ) ) + string_5 ) + var_3 ; return method_2 ( var_4 ) ; }
[0]: public type_1 method_1 ( int var_1 ) { type_2 query ; method_2 ( ) ; query = var_2. method_3 ( ( ( string_1 + var_1 ) + string_2 ) ) ; type_1 var_3 = ( ( type_1 ) ( query. list ( ). get ( 0 ) ) ) ; method_4 ( ) ; return var_3 ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , int x , int y , java.awt.font var_2 , java.awt.color var_3 , java.lang.string ... var_4 ) { if ( var_2 != null ) var_1 . method_3 ( var_2 ) ; if ( var_3 != null ) var_1 . method_2 ( var_3 ) ; type_2 . method_1 ( var_1 , x , y , var_4 ) ; }
[0]: public static type_1 method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( method_3 ( ). method_4 ( ) ). name ; if (! ( var_1. equals ( string_1 ) ) ) { return method_5 ( type_2. method_6 ( ) ) ; } else { return method_7 ( var_3. method_8 ( var_2. method_9 ( ), var_2. method_2 ( method_3 ( ). method_4 ( ) ) ) ) ; } }

************

************
tgt: private void method_1 ( ) { update ( ) ; int var_1 = ( status . method_2 ( ) ) + 1 ; if ( var_1 >= ( type_1 . values ( ) . length ) ) { type_2 . method_3 ( var_2 class ) ; } else { method_4 ( var_1 ) ; } }
[0]: public java.util.list < java.lang.long > method_1 ( ) { java.util.list < java.lang.long > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : var_3 ) { if (! ( var_2. getid ( ). equals ( var_4 ) ) ) { var_1. add ( var_2. getid ( ) ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 element , type_2 context ) throws java.lang.exception { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; var_2 . append ( string_1 ) ; var_2 . append ( method_2 ( element ) . method_3 ( ) ) ; var_2 . append ( string_3 ) ; context . method_5 ( ) . replace ( var_3 . method_6 ( ) , var_3 . method_7 ( ) , var_2 . tostring ( ) ) ; }
[0]: public static java.util.date method_1 ( java.lang.string var_1 ) { java.util.date date = null ; try { date = var_2. method_2 ( var_1 ) ; } catch ( type_1 var_3 ) { } if ( date == null ) { try { date = var_4. method_2 ( var_1 ) ; } catch ( type_1 var_3 ) { } } return date ; } return date ; }

************

************
tgt: public final int method_1 ( final char ... var_1 ) throws java.io.ioexception { char c ; type_1 . method_2 ( var_1 ) ; while ( ( type_1 . method_3 ( var_1 , ( c = ( ( char ) ( method_1 ( ) ) ) ) ) ) < 0 ) { } return c ; }
[0]: public void method_1 ( int var_1, int value, type_1 var_2, type_2 var_3 ) { if ( ( ( value > > ( var_4 ) ) & 1 ) == 0 ) { return ; } if ( ( var_5 )!= 0 ) { var_3. method_2 ( var_1 ) ; var_3. method_3 ( ( var_6? int_1 : 1 ) ) ; } }

************

************
tgt: public static type_1 method_1 ( android.content.context context , java.lang.string filename , type_2 var_1 , java.lang.string ... var_2 ) { type_2 var_3 = type_3 . method_2 ( var_1 , var_2 ) ; if ( var_3 == null ) return null ; type_2 file = var_3 . method_3 ( filename ) ; if ( file == null ) return null ; return type_3 . method_1 ( context , file . method_4 ( ) ) ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; if ( ( var_1 ) == null ) { var_2 = method_2 ( ) ; if (! ( var_2. isempty ( ) ) ) { var_3 = var_2. get ( 0 ) ; method_3 ( ) ; method_4 ( var_3 ) ; method_5 ( ) ; } } }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( var_1 ) != null ) { return var_1 . get ( ) ; } byte [ ] var_2 = method_2 ( ) . getdata ( var_3 ) ; java.lang.string var_4 = ( var_2 != null ) ? new java.lang.string ( var_2 ) : null ; var_1 = new type_1 < java.lang.string > ( var_4 ) ; return var_4 ; }
[0]: public java.util.list < java.io.file > method_1 ( java.util.list < java.io.file > var_1 ) { if ( type_1. isempty ( var_2 ) ) { throw new type_2 ( string_1 ) ; } java.io.file var_3 = new java.io.file ( var_2 ). method_2 ( ) ; var_1. add ( 0, var_3 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_3 ( ) ) { type_2 . method_4 ( ) . method_5 ( ) . show ( var_1 . method_6 ( ) , var_1 . method_7 ( ) , var_1 . method_8 ( ) ) ; } }
[0]: private java.lang.object method_1 ( java.lang.object var_1 ) { if ( var_1 instanceof java.util.map ) { type_1 var_2 = new type_1 ( type_2. method_2 ( ) ) ; var_2. method_3 ( ( ( java.util.map ) ( var_1 ) ) ) ; return var_2 ; } else if ( var_1 instanceof java.util.list ) { java.util.collections.sort ( ( ( java.util.list ) ( var_1 ) ), ( var_3, var_4 ) - > var_3. tostring ( ). compareto ( var_4. tostring ( ) ) ) ; return var_1 ; } else { return var_1 ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( type_1 . method_3 ( type_1 . method_5 ( ( ( var_2 ) / int_1 ) ) , type_1 . method_6 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ) ) ; }
[0]: public void method_1 ( ) { if ( method_2 ( ) ) { return ; } method_3 ( ). method_4 ( var_1. method_5 ( ) ) ; final type_1 var_2 = type_1. get ( ) ; var_2. method_6 ( method_3 ( ) ) ; var_3 = true ; }

************

************
tgt: static type_1 method_1 ( type_1 var_1 , boolean var_2 , type_2 p ) { type_1 var_3 = new type_1 ( ) ; for ( type_3 var_4 : var_1 ) { type_3 var_5 = new type_3 ( var_4 . method_2 ( ) , var_4 . method_3 ( ) ) ; var_5 . method_4 ( p , var_2 ) ; var_3 . add ( var_5 ) ; } return var_3 ; }
[0]: public void update ( float var_1 ) { var_2 += var_1 ; var_3 = type_1. method_1 ( init, end, type_2. method_2 ( ( ( var_2 ) / ( time ) ), 0.0f, 1.0f ) ) ; var_4. method_3 ( var_5 ) ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) . method_3 ( ) ; type_3 response = var_1 . method_2 ( ) . method_4 ( ) ; type_4 var_3 = var_4 . method_5 ( var_2 ) ; type_5 . method_6 ( var_2 . method_7 ( ) , var_2 . method_8 ( ) ) ; java.lang.object result = var_1 . method_9 ( ) ; var_4 . out ( var_3 , response ) ; var_4 . method_10 ( var_2 , var_3 ) ; return result ; }
[0]: public void method_1 ( final type_1 < type_2 > var_1, final type_3 < type_2 > response ) { final type_2 var_2 = ( response. method_2 ( ) )? response. method_3 ( ) : null ; if ( var_2 == null ) { listener. method_4 ( type_4. method_5 ( response ) ) ; } else { type_4. method_6 ( var_2, var_3, listener ) ; } }

************

************
tgt: protected java.util.arraylist < java.lang.string > method_1 ( ) { int size = ( ( var_1 . size ( ) ) > 0 ) ? var_1 . get ( 0 ) . size ( ) : 0 ; java.util.arraylist < java.lang.string > result = new java.util.arraylist < java.lang.string > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) result . add ( var_1 . get ( 0 ) . method_2 ( i ) ) ; return result ; }
[0]: public boolean method_1 ( final type_1 var_1 ) { boolean var_2 = ( ( ( ( this. var_3 ) == ( var_4 ) ) && ( ( this. var_5 ) == ( var_6 ) ) ) && ( ( this. var_7 ) == ( var_8 ) ) ) && ( ( this. var_9 ) == ( var_10 ) ) ; final boolean var_11 = ( ( this. method_2 ( ) ) + ( var_1. method_2 ( ) ) ) == int_1 ; return var_2 && var_11 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 . method_2 ( ) ) { var_3 . settext ( string_1 ) ; var_4 . settext ( string_1 ) ; var_4 . setenabled ( false ) ; var_3 . setenabled ( false ) ; } else { var_4 . setenabled ( true ) ; var_3 . setenabled ( true ) ; } }
[0]: public void method_1 ( ) { if ( var_1. isempty ( ) ) return ; type_1 [ ] var_2 = new type_1 [ var_1. size ( ) ] ; var_1. method_2 ( var_2 ) ; method_3 ( var_3, int_1, type_2. method_4 ( var_2 ) ) ; }

************

************
tgt: protected type_1 < type_2 , type_3 > method_1 ( long var_1 , byte [ ] data , int var_2 , int var_3 ) throws java.io.ioexception { return var_4 . method_2 ( method_3 ( var_5 ) . method_4 ( var_1 ) . method_5 ( var_3 ) . method_6 ( data , var_2 , var_3 ) ) ; }
[0]: protected void method_1 ( java.lang.string var_1, type_1 var_2, java.lang.string var_3 ) { var_4. method_2 ( var_2 ) ; this. var_1 = var_1 ; this. var_3 = var_3 ; type_2. method_3 ( this. getclass ( ). method_4 ( ), string_1, string_2 ). show ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_3 ( var_3 . get ( ) , var_4 . method_4 ( ) ) ; if ( var_5 . isempty ( ) ) type_1 . method_5 ( var_3 . get ( ) , string_1 ) ; else { var_1 . method_2 ( var_2 ) ; for ( java.lang.string var_6 : var_5 ) method_6 ( type_2 . method_7 ( var_6 ) ) ; } }
[0]: private type_1 method_1 ( ) { type_1 out = new type_1 ( ) ; for ( type_2 var_1 : var_2 ) { if ( var_1!= null ) out. method_2 ( var_1. method_3 ( ), var_1. getvalue ( ) ) ; } return out ; }

************

************
tgt: void method_1 ( type_1 event ) { if ( var_1 . gettext ( ) . isempty ( ) ) { type_2 var_2 = new type_2 ( var_3 ) ; var_2 . method_2 ( string_1 ) ; var_2 . method_3 ( string_2 ) ; var_2 . method_4 ( string_3 ) ; var_2 . show ( ) ; } else { method_5 ( false ) ; } }
[0]: private void method_1 ( java.util.arraylist < type_1 > var_1, java.util.arraylist < type_1 > var_2 ) { if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) { return ; } type_2 < type_1 > var_3 = method_2 ( var_1 ) ; java.util.arraylist < type_1 > var_4 = new java.util.arraylist < type_1 > ( var_2 ) ; if ( var_5 ) { method_3 ( var_3, var_4 ) ; method_4 ( var_3, var_4 ) ; method_5 ( var_3, var_4 ) ; method_6 ( var_3, var_4 ) ; } }

************

************
tgt: protected void method_1 ( type_1 param ) throws java.lang.throwable { type_2 var_1 = ( ( type_2 ) ( param . args [ 0 ] ) ) ; var_2 . method_3 ( ) ; type_3 . method_4 ( var_1 . method_2 ( ) , var_2 . method_5 ( var_1 . method_6 ( ) ) ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2 ) ; method_3 ( ) ; var_1. method_4 ( ) ; int size = var_3. size ( ) ; var_3. method_5 ( ) ; var_4 = null ; for ( int n = 0 ; n < size ; n ++ ) { var_5. method_6 ( n ) ; } method_7 ( ) ; }

************

************
tgt: public static boolean method_1 ( java.util.vector < ? > var_1 ) { for ( java.lang.object text : var_1 ) { java.lang.string string = ( ( type_1 ) ( text ) ) . gettext ( ) ; if ( ( string . length ( ) ) == 0 ) return false ; try { java.lang.double . method_2 ( string ) ; } catch ( type_2 var_2 ) { return false ; } } return true ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = type_1. method_2 ( var_2, type_2. method_3 ( string_1 ) ) ; var_3 = new type_3 ( var_1, new type_4 ( ) ) ; type_5 response = var_4. method_4 ( var_3 ) ; for ( type_6 error : response. method_5 ( ) ) { java.lang.system.out.println ( error. method_6 ( ) ) ; java.lang.system.out.println ( error. method_7 ( ) ) ; } asserttrue ( response. method_8 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( event . method_2 ( ) . equals ( info . getid ( ) ) ) { method_3 ( ) ; var_1 . method_4 ( ) ; if ( ( var_2 ) != null ) { var_2 . method_5 ( ) ; var_2 . method_6 ( ) ; } target = null ; var_3 . method_7 ( ) . method_8 ( string_1 ) ; var_4 = var_5 ; var_6 = false ; } }
[0]: private long method_1 ( type_1 var_1, java.lang.string var_2 ) throws java.io.ioexception { long var_3 = ( var_2!= null )? var_2. method_2 ( ) : 0 ; for ( type_2 var_4 : var_1. method_3 ( ). values ( ) ) { var_3 += ( var_3 * int_1 ) + ( var_4. getname ( ). method_2 ( ) ) ; } return var_3 ; }

************

************
tgt: private final boolean method_1 ( type_1 value ) { for ( int i = 0 ; i < ( value . length ( ) ) ; i ++ ) { byte b = value . method_2 ( i ) ; if ( ( b & ( var_1 ) ) != b ) { return false ; } } return true ; }
[0]: public byte [ ] method_1 ( ) { byte [ ] buffer = this. var_1. method_1 ( ) ; byte var_2 = buffer [ ( ( buffer. length ) - 1 ) ] ; byte [ ] var_3 = new byte [ ] { ( ( byte ) ( var_2 ) ) } ; if ( var_3 == ( var_4 ) ) { if ( ( buffer. length ) > int_1 ) { } } return buffer ; } }

************

************
tgt: public int method_1 ( int y ) { int var_1 = ( y + ( var_2 ) ) + int_1 ; if ( var_3 . method_2 ( ) ) { var_1 -= int_2 ; var_1 /= int_3 ; } else { var_1 -= int_4 + int_3 ; var_1 /= int_3 ; } return var_1 ; }
[0]: public int getint ( ) { try { int var_1 = java.lang.integer.parseint ( var_2. method_1 ( ) ) ; return var_1 ; } catch ( type_1 | java.io.ioexception var_3 ) { java.lang.system.out.println ( ( string_1 + ( var_4. getid ( ) ) ) ) ; java.lang.system.out.println ( ( ( var_5. method_2 ( ). size ( ) ) + string_2 ) ) ; var_6 = false ; method_3 ( ) ; var_7. method_2 ( ). remove ( this ) ; } return - 1 ; }

************

************
tgt: public type_1 method_1 ( int var_1 ) throws java.lang.exception { int x = ( this . x ) + 1 ; int y ; if ( var_1 == 0 ) y = ( this . y ) + 1 ; else y = ( this . y ) - 1 ; return new type_1 ( x , y ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. add ( var_2 ) ; final type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( var_4 ) ; var_3. method_3 ( string_1 ) ; var_3. method_4 ( var_5 ) ; final type_2 < type_3, type_4 > result = new type_2 < type_3, type_4 > ( ) ; var_3. method_5 ( result ) ; type_5. method_6 ( result. method_7 ( ) ) ; var_6 = method_8 ( result ) ; }

************

************
tgt: protected void method_1 ( java.lang.string result ) { switch ( status ) { case var_1 : var_2 . method_2 ( var_3 . getintent ( ) , var_4 ) ; return ; case var_5 : method_3 ( ) ; break ; case var_6 : break ; default : throw new type_1 ( string_1 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { int index = var_2. method_2 ( ). method_3 ( ) ; java.lang.string data = var_2. method_2 ( ). method_4 ( ) ; type_2 var_3 = method_5 ( data, index ) ; var_4. method_6 ( var_3 ) ; method_7 ( var_3 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) ) { return ; } type_2 var_2 = ( ( type_2 ) ( var_1 . getdata ( string_1 ) ) ) ; if ( ( var_2 != null ) && ( var_2 . method_2 ( ) ) ) { var_2 = null ; } var_1 . method_3 ( var_2 ) ; }
[0]: private void method_1 ( ) { if ( ( buf ) == null ) buf = state. buffer ( ) ; else buf = state. method_2 ( ) ; var_1 = ( buf. method_3 ( ) )? null : buf. array ( ) ; var_2 = ( buf. method_3 ( ) )? ( ( type_1 ) ( buf ) ). method_4 ( ) : var_3 ; var_3 = null ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { int index = 0 ; type_1 element ; while ( index < ( var_2 . size ( ) ) ) { element = var_2 . get ( index ) ; if ( ( var_1 . method_2 ( ) ) > ( element . method_2 ( ) ) ) { var_2 . add ( index , var_1 ) ; break ; } index ++ ; } if ( index == ( var_2 . size ( ) ) ) var_2 . add ( index , var_1 ) ; }
[0]: public java.util.list < java.lang.integer > method_1 ( long id ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < > ( ) ; java.lang.string query = string_1 + id ; java.util.list < java.util.map < java.lang.string, java.lang.object > > var_2 = var_3. method_2 ( query ) ; for ( java.util.map < java.lang.string, java.lang.object > var_4 : var_2 ) { var_1. add ( java.lang.integer.parseint ( var_4. get ( 0 ). tostring ( ) ) ) ; } return var_1 ; }

************

************
tgt: public static byte [ ] method_1 ( java.lang.string filepath ) throws java.lang.exception { java.io.fileinputstream var_1 = null ; try { var_1 = new java.io.fileinputstream ( filepath ) ; return type_1 . method_1 ( var_1 ) ; } finally { if ( var_1 != null ) { try { var_1 . method_2 ( ) ; } catch ( java.io.ioexception var_2 ) { } } } }
[0]: private int method_1 ( int var_1 ) { int var_2 = 0 ; for ( ; ( var_2 < ( this. height ) ) && ( ( this. var_3 [ var_1 ] [ var_2 ]. isempty ( ) ) || ( this. var_3 [ var_1 ] [ var_2 ]. method_2 ( ) ) ) ; var_2 ++ ) ; return ( ( this. height ) - var_2 ) - 1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int i = 0 , count = method_2 ( ) . size ( ) ; i < count ; i ++ ) { type_1 item = method_2 ( ) . get ( i ) ; if ( item instanceof java.lang.string ) { if ( item . equals ( var_1 ) ) { method_1 ( i ) ; return ; } } else { if ( item == var_1 ) { method_1 ( i ) ; return ; } } } }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : if ( ( type_1. method_2 ( this, var_3 ) )!= ( var_4 ) ) { var_5. method_3 ( var_6, 0, 0, this ) ; break ; } break ; } }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 ; var_2 = var_1 . method_2 ( string_2 ) ; if ( ( null == var_2 ) || ( ( var_2 . length ( ) ) == 0 ) ) { var_2 = var_1 . method_2 ( string_1 ) ; } if ( ( null == var_2 ) || ( ( var_2 . length ( ) ) == 0 ) ) { var_2 = string_3 ; } return var_2 ; }
[0]: public static java.lang.string method_1 ( type_1 var_1 ) { java.util.properties var_2 = type_2. method_2 ( var_1. method_3 ( ) ) ; java.lang.string var_3 = var_2. method_4 ( var_4 ) ; java.util.regex.matcher var_5 = var_6. method_5 ( var_3 ) ; if ( var_5. method_6 ( ) ) return var_5. method_7 ( 1 ) ; else return null ; }

************

************
tgt: public void method_1 ( final long var_1 ) { final long var_2 = ( var_1 / int_1 ) % int_2 ; final long var_3 = ( var_1 / int_3 ) % int_2 ; final long var_4 = ( var_1 / int_4 ) % int_5 ; final long var_5 = var_1 / int_6 ; final java.lang.string text = java.lang.string.format ( var_6 , var_5 , var_4 , var_3 , var_2 ) ; settext ( text ) ; }
[0]: private < type_1 extends type_2 > void method_1 ( type_3 < type_1 > var_1, type_3 < type_1 > var_2, type_4 var_3, type_4 var_4 ) throws type_5 { method_2 ( var_1, var_2, var_3, var_4 ) ; method_2 ( var_1, var_2, var_4, var_3 ) ; method_3 ( var_1, var_2, var_3, var_4 ) ; method_3 ( var_1, var_2, var_4, var_3 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { java.lang.string start = string_1 ; java.lang.string end = string_2 ; method_2 ( var_1 , var_2 , start , end ) ; type_2 a = new type_2 ( ) ; type_3 var_3 = a . method_3 ( var_1 ) ; type_4 var_4 = a . method_4 ( var_2 ) ; java.util.list < type_5 > var_5 = a . method_5 ( var_3 , var_4 , start , end ) ; type_6 . assertequals ( int_1 , var_5 . size ( ) ) ; }
[0]: public void method_1 ( ) { if ( ( type_1. size ( ) ) > 0 ) { var_1 = method_2 ( ) ; java.util.list < type_2 > var_2 = type_3. method_3 ( var_3, var_4, var_5, var_6, var_1 ) ; var_7. method_4 ( ) ; var_7. method_5 ( var_2 ) ; var_8. method_6 ( ) ; var_9. method_7 ( var_10 ) ; } }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ( getclass ( ) ) != ( var_1 . getclass ( ) ) ) ) return false ; type_1 node = ( ( type_1 ) ( var_1 ) ) ; return ( ( var_2 ) == ( var_3 ) ) && ( type_2 . equals ( var_4 , var_5 ) ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if (! ( var_2. equals ( var_1 ) ) ) { var_1 = var_2 ; } java.lang.system.out.println ( ( string_1 + var_2 ) ) ; if ( var_1. equals ( string_3 ) ) { return new type_1 ( string_4, string_5, var_1 ) ; } else { return new type_1 ( string_4, string_5, var_1 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . init ( ) ; var_2 . init ( string_1 ) ; java.lang.thread t = var_3 . method_2 ( type_1 . method_3 ( ) , int_1 , type_2 . method_4 ( var_4 class ) , int_2 ) ; t . method_5 ( ) ; method_7 ( 1 , var_2 ) ; method_7 ( 1 , var_1 ) ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string title ) { if ( var_1!= null ) { method_2 ( var_1 ) ; if ( ( method_3 ( ) )!= null ) { var_1. method_4 ( title ) ; method_3 ( ). method_5 ( type_2. method_6 ( method_7 ( ), var_2 ) ) ; method_3 ( ). method_8 ( true ) ; } } else { type_3. method_9 ( var_3, string_1 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string text , int x , int y , java.awt.color var_2 , int size ) { var_1 . method_2 ( new java.awt.font ( string_1 , var_3 , size ) ) ; var_1 . method_3 ( var_2 ) ; var_1 . method_4 ( text , ( x * ( var_4 ) ) , ( y * ( var_4 ) ) ) ; }
[0]: private double method_1 ( int var_1 ) { double var_2 = float_1 - ( float_2 * ( var_3 [ int_1 ] ) ) ; return type_1. method_2 ( ( ( ( ( ( double ) ( int_2 ) ) * var_1 ) * ( java.lang.math.pow ( float_3, var_1 ) ) ) * var_2 ) ) ; }

************

************
tgt: public static type_1 method_1 ( double var_1 , int [ ] [ ] var_2 , double [ ] [ ] var_3 ) { return new type_1 ( new type_2 ( ( var_1 / ( int_1 * ( var_2 [ 0 ] . length ) ) ) , 0.0 , var_4 ) , type_3 . method_2 ( var_2 ) , var_3 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1. method_2 ( new type_2 ( ). var_2 ) ; var_1. method_3 ( new type_3 ( int_1, int_2 ) ) ; var_1. method_4 ( var_3 ) ; var_1. method_5 ( ) ; new type_4 ( ). method_6 ( var_1 ) ; var_1. method_7 ( false ) ; var_1. method_8 ( true ) ; }

************

************
tgt: public java.util.list < java.lang.integer > method_1 ( java.util.list < type_1 > data , boolean var_1 ) { for ( type_1 var_2 : data ) { java.util.list < java.lang.integer > var_3 = new java.util.arraylist ( data . size ( ) ) ; for ( type_2 var_4 : var_5 ) { int var_6 = var_4 . method_1 ( var_2 ) ; var_3 . add ( var_6 ) ; } int var_7 = type_3 . method_2 ( var_3 ) ; var_8 . add ( var_7 ) ; } return var_8 ; }
[0]: public java.util.date method_1 ( int var_1, int var_2 ) { if ( ( var_3. get ( var_1 ) ) == null ) { return null ; } if ( ( var_3. get ( var_1 ). var_4 ) == null ) { return null ; } for ( type_1 c : var_3. get ( var_1 ). var_4 ) { if ( ( c. id ) == var_2 ) { return c. date ; } } return null ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = new type_2 ( this , this ) ; type_3 var_4 = ( ( type_3 ) ( method_3 ( ) ) ) ; var_5 = var_4 . method_4 ( ) ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : var_2. method_2 ( ) ) { type_2 var_3 = var_2. method_3 ( var_1. method_4 ( ) ) ; method_5 ( var_3, var_4 ) ; if ( method_6 ( ) ) { var_5. info ( ( string_1 + var_3 ) ) ; } } var_5. info ( string_2 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , java.lang.throwable t ) { try { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; var_3 . method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { var_5 . error ( ( string_1 + ( var_4 . method_4 ( ) ) ) ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; var_2. method_2 ( var_1 ) ; type_1. assertequals ( string_1, var_2. method_3 ( ) ) ; java.lang.string var_3 = string_2 ; var_2. method_2 ( var_1 ) ; type_1. assertequals ( string_2, var_2. method_3 ( ) ) ; }

************

************
tgt: private void method_1 ( final int [ ] [ ] var_1 ) { for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 . length ) ; j ++ ) { var_2 [ i ] [ j ] = var_1 [ i ] [ j ] ; } } }
[0]: public java.lang.string method_1 ( type_1 var_1, int c ) { java.util.date date = new java.util.date ( ) ; try { date = new type_2 ( var_2. get ( c ). method_2 ( ) ). method_3 ( var_1. tostring ( ) ) ; } catch ( type_3 var_3 ) { return var_1. tostring ( ) ; } return new type_2 ( var_2. get ( c ). method_2 ( ) ). format ( date ) ; }

************

************
tgt: public java.util.arraylist < type_3 > method_1 ( type_1 var_1 , java.lang.string var_2 ) { java.util.arraylist < type_3 > var_3 = new java.util.arraylist < type_3 > ( ) ; type_2 var_4 = var_1 . method_2 ( ) ; for ( type_3 var_5 : var_4 ) { if ( var_5 . method_3 ( ) . method_4 ( var_2 ) ) { var_3 . add ( var_5 ) ; } } return var_3 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2 ) ; type_1 var_3 ; do { int var_4 = var_1. method_3 ( var_2. size ( ) ) ; var_3 = var_2. get ( ( var_4 - 1 ) ) ; var_3. method_4 ( ) ; } while (! ( var_3 instanceof type_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == ( var_2 ) ) { var_3 . start ( ) ; var_1 = var_4 ; return ; } if ( ( var_1 ) == ( var_4 ) ) { method_2 ( ) ; } try { var_3 . method_3 ( var_5 . get ( var_6 ) . method_4 ( ) ) ; } catch ( java.io.ioexception var_7 ) { var_7 . method_5 ( ) ; } var_3 . method_6 ( ) ; var_1 = var_8 ; }
[0]: public type_1 method_1 ( double var_1 ) { type_2. method_2 ( ( ( 0 < var_1 ) && ( var_1 <= 1.0 ) ) ) ; long var_2 = var_3. method_3 ( ) ; long min = var_3. method_4 ( var_3. min ( ) ) ; long var_4 = ( ( long ) ( type_3. method_5 ( ( ( ( var_1 * var_2 ) + min ) - 1 ) ) ) ) ; return var_3. value ( var_4 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( type_2 . method_2 ( var_2 . method_3 ( var_3 ) ) ) ) ; if ( ! ( var_1 . method_4 ( ) ) ) { var_1 . method_5 ( true ) ; } else if ( var_4 ) { super . method_1 ( ) ; } else { var_4 = true ; type_3 . method_6 ( this , string_1 , var_5 ) . show ( ) ; } }
[0]: private boolean method_1 ( int var_1 ) { return ( ( ( ( ( var_1 == ( var_2 ) ) || ( var_1 == ( var_3 ) ) ) || ( var_1 == ( var_4 ) ) ) || ( var_1 == ( var_5 ) ) ) || ( var_1 == ( var_6 ) ) ) || ( var_1 == ( var_7 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { int size = var_1 . method_2 ( ) ; if ( size == 0 ) { var_2 = null ; return ; } var_2 = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { var_2 [ i ] = var_1 . method_2 ( ) ; } }
[0]: public void method_1 ( ) { var_1 = type_1. method_2 ( var_2 class ) ; var_3 = type_1. method_2 ( var_4 class ) ; var_5 = type_1. method_2 ( var_6 class ) ; var_7 = new type_2 ( ) ; var_7. method_3 ( 1 ) ; var_7. method_4 ( int_1 ) ; var_7. method_5 ( var_1 ) ; var_7. method_6 ( var_5 ) ; }

************

************
tgt: protected void method_1 ( final type_1 var_1 ) { type_2 . method_2 ( string_1 , var_2 ) ; type_3 . method_3 ( var_1 ) ; type_2 . method_2 ( string_2 , var_2 ) ; if ( ( type_3 . method_4 ( string_3 ) ) == false ) { type_2 . method_2 ( string_4 , var_2 ) ; } }
[0]: public boolean method_1 ( int var_1 ) { if ( var_1 > ( this. var_2 ) ) { return false ; } else { this. var_2 = - var_1 ; this. var_3 = var_1 ; this. method_2 ( ) ; this. method_3 ( this. var_2 ) ; this. method_4 ( ) ; return true ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; while ( ( var_1 . size ( ) ) > 1 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_4 ( var_2 , this ) ; method_3 ( ) ; } } }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( var_1 ) ; java.lang.string var_3 = new type_3 ( var_1 ). method_2 ( ) ; java.lang.string var_4 = ( var_2. getname ( ). method_3 ( ) )? var_2. getname ( ). get ( ) : var_5 ; java.lang.string var_6 = ( var_2. method_4 ( ). method_3 ( ) )? var_2. method_4 ( ). get ( ) : var_7 ; return java.lang.string.format ( var_8, var_3, var_4, var_6 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { final java.lang.string [ ] var_2 = new java.lang.string [ ] { string_1 , string_2 , string_3 } ; type_1 . method_2 ( context , var_2 , new type_2 ( ) { public void method_3 ( type_3 < ? > var_3 , android.view.view view , int position , long id ) { type_4 . method_4 ( context , var_2 [ position ] ) ; } } ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; try { this. listener = ( ( type_2 ) ( var_1 ) ) ; } catch ( type_3 var_2 ) { throw new type_4 ( ( string_1 + string_2 ) ) ; } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_1 var_2 = null ; try { var_3 = new type_2 ( this . var_4 ) ; var_3 . open ( ) ; var_2 = var_5 . method_2 ( var_1 ) ; } catch ( java.lang.exception var_6 ) { type_3 . method_5 ( var_7 , ( ( string_2 + var_1 ) + string_3 ) ) ; } finally { var_3 . method_6 ( ) ; type_3 . method_5 ( var_7 , string_4 ) ; } return var_2 ; }
[0]: private void method_1 ( final type_1 var_1 ) { var_2. method_2 ( ) ; type_2 < type_3 > var_3 = type_4. method_3 ( var_2 ) ; if ( var_3. method_4 ( ) ) { method_5 ( var_3. get ( ), var_1 ) ; var_2. method_6 ( ) ; } else { var_3. method_7 ( new type_5 < type_3 > ( ) { public void method_8 ( type_3 var_4 ) { var_2. method_6 ( ) ; method_5 ( var_4, var_1 ) ; } } ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return null ; } else { boolean temp ; type_1 var_2 ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { temp = var_3 . get ( i ) . method_2 ( ) . equals ( var_1 ) ; if ( temp ) { var_2 = var_3 . get ( i ) ; var_3 . remove ( i ) ; return var_2 ; } } } return null ; }
[0]: public void method_1 ( ) { java.util.iterator < type_1 > var_1 = var_2. method_2 ( ). iterator ( ) ; while ( var_1. method_3 ( ) ) { type_2 var_3 = var_2. get ( var_1. method_4 ( ) ) ; if ( var_3!= ( var_4 ) ) { var_3. method_5 ( true ) ; } } var_5. method_6 ( ) ; }

************

************
tgt: boolean method_1 ( int [ ] var_1 , int [ ] var_2 ) { if ( ( ( var_1 . length ) - 1 ) != ( ( var_2 . length ) - 1 ) ) { return false ; } for ( int i = 0 ; i < ( ( var_1 . length ) - 1 ) ; i ++ ) { if ( ( var_1 [ i ] ) != ( var_2 [ i ] ) ) { return false ; } } return true ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return ; } else { try { getconfig ( ). method_2 ( var_2 ) ; } catch ( java.io.ioexception var_3 ) { var_4. method_3 ( ). method_4 ( var_5, ( string_1 + ( var_2 ) ) ) ; } } }

************

************
tgt: public static java.lang.string method_1 ( ) { java.io.filereader var_1 ; try { var_1 = new java.io.filereader ( var_2 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_1 ) ; java.lang.string line = null ; line = var_3 . method_2 ( ) ; var_3 . method_3 ( ) ; return line ; } catch ( type_1 var_4 ) { var_4 . method_4 ( ) ; } catch ( java.io.ioexception x ) { var_5 . format ( string_1 , x ) ; } return string_2 ; }
[0]: public type_1 method_1 ( int var_1 ) { if (! ( method_2 ( ) ) ) { method_3 ( ) ; } if ( ( var_1 > 0 ) && ( var_1 < ( var_2. size ( ) ) ) ) { return var_2. get ( var_1 ) ; } else { return null ; } }

************

************
tgt: protected void method_1 ( java.lang.stringbuilder var_1 ) { if ( var_2 . method_2 ( ) . method_3 ( ) ) { var_1 . append ( string_1 ) ; method_4 ( var_1 ) ; var_1 . append ( ( ( string_2 + ( var_2 . method_5 ( ) . get ( ) ) ) + string_3 ) ) ; var_1 . append ( var_2 . method_6 ( ) ) ; var_1 . append ( string_4 ) ; } else { type_1 . info ( string_5 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { int index = 0 ; for ( int i = 1 ; i < ( var_2 ) ; i ++ ) index += ( method_2 ( getcontext ( ), i ) ) - 1 ; final int var_3 = index ; var_4. method_3 ( new type_1 ( ) { public void method_1 ( android.view.view var_1 ) { type_2. method_4 ( method_5 ( ), var_2, var_3 ) ; } } ) ; } }

************

************
tgt: void init ( ) { var_1 = type_1 . method_1 ( ) ; var_2 = new type_3 ( var_1 . method_3 ( ) ) ; var_3 . method_4 ( new type_4 ( getcontext ( ) ) ) ; var_3 . method_5 ( var_2 ) ; var_2 . method_6 ( ) ; }
[0]: public void method_1 ( android.content.context context ) { try { method_2 ( ) ; type_1 var_1 = ( ( type_1 ) ( context. method_3 ( var_2 ) ) ) ; var_1. method_4 ( context. method_5 ( ) ) ; java.lang.system.exit ( 0 ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.exit ( 0 ) ; } }

************

************
tgt: public void method_1 ( ) { var_2 = var_3 . method_3 ( ) ; type_1 . method_4 ( var_1 , ( ( ( ( ( string_2 + ( var_2 ) ) + string_3 ) + ( var_3 ) ) + string_4 ) + ( var_2 . method_5 ( ) ) ) ) ; var_4 . method_1 ( ) ; }
[0]: private static type_1 method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; type_2 var_2 = type_3. method_2 ( ) ; var_2. method_3 ( java.lang.math.abs ( var_1. method_4 ( int_1 ) ) ) ; var_2. method_5 ( ( string_1 + ( var_2. getid ( ) ) ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 item ) { if ( ( item . method_2 ( ) ) > 0 ) item . method_3 ( ( ( item . method_4 ( ) ) - ( var_1 ) ) ) ; else item . method_3 ( ( ( item . method_4 ( ) ) - ( ( var_1 ) * int_1 ) ) ) ; }
[0]: static type_1 < type_2 > method_1 ( int var_1 ) { type_1 < type_2 > list = new type_1 ( ) ; for ( int i = 0 ; i < var_1 ; i ++ ) { list. add ( new type_2 ( ( string_1 + i ), string_1 ) ) ; } return list ; }

************

************
tgt: public void method_1 ( ) throws type_1 { java.lang.system.out.println ( string_1 ) ; java.lang.thread . method_2 ( int_1 ) ; java.lang.system.out.println ( string_2 ) ; type_2 message = type_3 . method_3 ( string_3 . method_4 ( ) ) . method_5 ( string_4 , string_5 ) . method_6 ( string_6 ) . method_7 ( string_6 . method_4 ( ) ) . build ( ) ; var_1 . method_8 ( var_2 , message ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws type_1 { type_2 var_3 = var_4. method_2 ( ) ; boolean var_5 = var_3. execute ( ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) + string_3 ) ) ; var_3. method_3 ( ) ; return var_5 ; }

************

************
tgt: protected void method_1 ( boolean var_2 ) { if ( ( var_3 ) != null ) { type_2 var_4 = var_3 . method_2 ( ) ; if ( ( var_4 != null ) && ( ! ( var_4 . method_3 ( ) ) ) ) { method_1 ( var_4 , var_2 ) ; } } }
[0]: private type_1 method_1 ( java.util.arraylist < type_1 > var_1 ) { int index = ( var_2 ) % ( var_1. size ( ) ) ; for ( type_1 op : var_3 ) { if ( var_1. get ( index ). equals ( op ) ) { var_3. remove ( op ) ; return op ; } } return null ; }

************

************
tgt: public static type_1 method_1 ( ) { type_2 var_1 = type_3 . method_2 ( var_2 class ) . method_3 ( ) ; type_4 var_3 = var_1 . method_4 ( var_4 class ) ; if ( var_3 == null ) { return null ; } return ( ( type_1 ) ( var_1 . method_5 ( var_3 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.util.list var_3, boolean var_4 ) { if ( ( var_1. method_2 ( ) ) == int_1 ) { if ( ( var_5 ) == null ) { var_5 = new type_3 ( ) ; var_5. method_3 ( string_1, int_2 ) ; } var_3. add ( ( string_2 + ( var_5. method_4 ( string_1 ) ) ) ) ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( ( var_1 ) == null ) { return ; } for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { java.lang.string var_2 = var_1 [ i ] ; int result = var_3 [ i ] ; type_1 . method_2 ( var_2 , result ) ; } }
[0]: private void method_1 ( ) { java.util.list < type_1 > var_1 = var_2. method_2 ( ). method_3 ( ) ; int var_3 = new java.util.random ( ). method_4 ( var_1. size ( ) ) ; type_1 var_4 = var_1. get ( var_3 ) ; java.lang.string var_5 = var_4. method_5 ( ) ; method_6 ( var_5 ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_3 . method_2 ( var_4 . getvalue ( ) ) ; var_3 . method_3 ( var_5 . getvalue ( ) ) ; var_6 . method_4 ( ) . method_5 ( string_1 , var_3 . method_6 ( ) ) . method_7 ( ) ; var_6 . method_4 ( ) . method_5 ( string_2 , var_3 . method_8 ( ) ) . method_7 ( ) ; method_9 ( ) ; }
[0]: public void method_1 ( final type_1 var_1 ) { var_2. method_2 ( ( ( string_1 + var_1 ) + string_2 ) ) ; type_2 var_3 = method_3 ( var_1. method_4 ( ) ) ; if ( var_3 == null ) { var_3 = method_5 ( var_1 ) ; } else { var_3. method_6 ( true ) ; } var_4. add ( var_3 ) ; if ( ( var_5 )!= null ) { var_5. method_1 ( var_1 ) ; } }

************

************
tgt: private boolean method_1 ( ) { int var_1 = method_2 ( ) ; if ( var_1 < 0 ) return false ; if ( ! ( method_3 ( ) ) ) return false ; type_1 b = var_2 . get ( var_1 ) ; b . method_4 ( ) ; return true ; }
[0]: public void method_1 ( ) { var_1. setstate ( var_2 ) ; var_3. method_2 ( var_4 ) ; switch ( var_5. method_3 ( ) ) { case var_6 : type_1 var_7 = ( ( type_1 ) ( var_8. get ( var_9 ) ) ) ; var_7. method_4 ( ) ; break ; } }

************

************
tgt: protected type_1 method_1 ( type_1 var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { return new type_1 ( ( ( var_1 . x ) + ( var_3 ) ) , var_1 . y , ( ( var_4 ) - ( int_1 * ( var_3 ) ) ) , ( ( var_1 . height ) - ( var_3 ) ) ) ; } return super . method_1 ( var_1 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { int var_1 = ( ( int ) ( 1 + ( ( java.lang.math.random ( ) ) * int_1 ) ) ) ; int var_2 = int_2 ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; java.lang.string var_5 ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; java.lang.string var_5 ; }

************

************
tgt: void method_1 ( java.util.list < java.lang.string > var_1 ) { method_2 ( ) . method_3 ( ) ; if ( var_1 != null ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : var_1 ) { list . add ( method_4 ( context , var_2 ) ) ; } method_2 ( ) . method_5 ( list ) ; } }
[0]: public type_1 method_1 ( type_1 string, type_1 var_1, type_2 var_2 ) { method_2 ( ) ; final type_3 var_3 = getcontext ( ). method_3 ( string ) ; final type_3 var_4 = getcontext ( ). method_3 ( var_1 ) ; final type_3 var_5 = ( ( type_3 ) ( var_3. method_1 ( getcontext ( ). method_4 ( ). method_5 ( ), var_4 ) ) ) ; return getcontext ( ). method_6 ( var_5 ) ; }

************

************
tgt: public java.lang.object method_1 ( java.lang.object source , java.lang.class < ? > var_1 , type_1 var_2 ) { if ( ( ( source == null ) || ( source . getclass ( ) . equals ( var_1 ) ) ) || ( ( var_2 != null ) && ( var_2 . method_2 ( ) . equals ( var_1 ) ) ) ) { return source ; } java.lang.object var_3 = var_4 . method_1 ( source , var_5 . string class , var_2 ) ; return var_4 . method_1 ( var_3 , var_1 , var_2 ) ; }
[0]: protected boolean method_1 ( java.lang.string var_1 ) { if ( var_1!= null ) { if ( ( ( ( var_1. contains ( string_1 ) ) || ( var_1. contains ( string_2 ) ) ) || ( var_1. contains ( string_3 ) ) ) && (! ( var_1. contains ( string_4 ) ) ) ) { return true ; } } return false ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { int split = type_1 . method_2 ( var_1 ) ; java.lang.string var_2 = var_1 . substring ( 0 , split ) ; java.lang.string var_3 = var_1 . substring ( split ) ; if ( var_3 . equals ( string_1 ) ) return null ; java.lang.string var_4 = method_3 ( var_2 ) ; return var_4 == null ? null : ( var_4 + string_2 ) + var_3 ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( var_2 ) ; var_3 = new type_1 ( var_4 ) ; var_5 = new type_2 ( ) ; var_6 = new type_3 ( ) ; var_7 = new type_4 ( ) ; var_8 = new type_5 ( var_6, var_7, var_5, var_9 ) ; var_9 = new type_6 ( ) ; }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , int x , int y , int var_2 , int var_3 ) { int var_4 = var_1 . method_2 ( x , y , var_2 ) ; type_3 var_5 = this . method_3 ( var_4 ) . method_4 ( ) ; if ( var_5 != null ) { type_1 var_6 = method_5 ( var_1 , x , y , var_2 ) ; if ( var_6 != null ) { return var_6 ; } } return this . method_1 ( var_3 , var_4 ) ; }
[0]: public void method_1 ( ) throws type_1 { method_2 ( ) ; var_1. method_3 ( new type_2 ( int_1, 1 ), new type_2 ( int_2, int_1 ) ) ; var_1. method_2 ( new type_2 ( 1, 1 ), char_1 ) ; method_4 ( var_2, var_1. method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 = ( ( var_2 ) + 1 ) % ( var_3 . length ) ; var_4 . method_2 ( method_3 ( ) ) ; method_4 ( var_2 ) ; var_5 = false ; var_6 = false ; if ( ( var_7 ) != null ) { if ( var_7 . method_5 ( ) ) { var_7 . method_6 ( ) ; } var_7 . method_7 ( ) ; } method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; }
[0]: public void method_1 ( ) { java.util.arraylist < type_1 > param ; param = new java.util.arraylist < type_1 > ( ) ; param. add ( new type_2 ( var_1 ) ) ; param. add ( new type_2 ( var_1 ) ) ; var_1. method_2 ( param ) ; assertequals ( var_1. method_3 ( ), param ) ; }

************

************
tgt: public final type_1 < type_2 > method_1 ( ) { type_1 < type_2 > var_1 = new type_1 < type_2 > ( new type_2 [ this . size ( ) ] ) ; if ( ( this . size ( ) ) > 1 ) { for ( type_2 var_2 : this ) { var_1 . add ( var_2 ) ; } } else { var_1 . add ( this ) ; } return var_1 ; }
[0]: public static void method_1 ( type_1 var_1, type_1 var_2, type_2 var_3, type_3 var_4 ) { var_4. method_2 ( true ) ; var_1. settext ( var_5 ) ; var_3. settext ( string_1 ) ; var_3. method_3 ( string_2 ) ; type_4. method_4 ( var_1, var_2 ) ; var_6. target = var_7 ; var_8. settext ( var_9 ) ; var_10. settext ( var_11 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { switch ( var_1 ) { case var_2 : var_3 . method_2 ( ) ; var_4 . method_2 ( ) ; var_5 . method_2 ( ) ; var_6 . method_3 ( ) ; type_2 . info ( ( string_1 + var_1 ) ) ; break ; default : type_2 . error ( ( string_2 + var_1 ) ) ; } }
[0]: private type_1 method_1 ( ) { if ( this. keys. isempty ( ) ) { for ( type_1 key : type_1. values ( ) ) { if ( key == ( var_1 ) ) continue ; this. keys. add ( key ) ; } } final int index = type_2. method_2 ( type_1. values ( ). length ) ; final type_1 tmp = type_1. values ( ) [ index ] ; this. keys. remove ( index ) ; return tmp ; } return null ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.map var_1 = new java.util.map ( string_1 ) ; java.util.map var_2 = new java.util.map ( string_2 ) ; type_2 var_3 = new type_2 ( var_1 ) ; type_2 var_4 = new type_2 ( var_2 ) ; var_3 . method_1 ( ) ; var_4 . method_1 ( ) ; java.lang.system.out.println ( var_3 . method_2 ( ) ) ; java.lang.system.out.println ( var_4 . method_2 ( ) ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; message = var_1. start ( this. var_2, this. var_3 ) ; if ( ( message )!= null ) { return message ; } else { return string_2 ; } }

************

************
tgt: public void method_1 ( ) { target . method_2 ( output ) ; method_3 ( ) ; java.lang.system.out.println ( ( string_1 + ( var_1 ) ) ) ; if ( ( var_1 ) >= ( var_2 ) ) { target . method_4 ( var_3 ) ; java.lang.system.out.println ( string_2 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { int x = var_2. method_2 ( ) ; x = x + int_1 ; if ( x > ( var_3 ) ) { x = var_3 ; var_4. method_3 ( ) ; var_2. method_4 ( false ) ; } var_2. method_5 ( x, y ) ; }

************

************
tgt: private boolean method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; for ( type_2 var_3 : var_1 . method_3 ( var_4 ) ) { if ( var_5 class . getname ( ) . equals ( var_6 . method_4 ( ) ) ) { return true ; } } return false ; }
[0]: public boolean method_1 ( type_1 item ) { if ( ( item. method_2 ( ) ) == ( var_1 ) ) { android.content.intent var_2 = new android.content.intent ( method_3 ( ), var_3 class ) ; var_2. method_4 ( var_4 ) ; method_5 ( var_2 ) ; } else { android.content.intent intent = new android.content.intent ( method_3 ( ), var_5 class ) ; method_5 ( intent ) ; } return super. method_1 ( item ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( ) . method_3 ( var_2 ) ; method_4 ( var_3 ) ; type_2 . method_5 ( var_4 , string_1 ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; var_5 = new type_3 ( ) ; var_5 . method_11 ( var_6 ) ; }
[0]: private void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; var_1. execute ( new type_1 < java.lang.integer > ( var_2. method_2 ( ). method_3 ( ). getvalue ( ). getid ( ) ) { public void method_4 ( ) { var_3. method_5 ( var_4, true ) ; } } ) ; java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { var_2 = false ; listener . method_4 ( ) ; var_3 . method_5 ( ) ; type_2 . method_1 ( this , var_4 . method_6 ( ) ) ; try { var_4 . method_7 ( ) ; var_4 . method_8 ( ) ; var_4 . method_9 ( ) ; } catch ( java.lang.exception var_5 ) { type_3 . method_10 ( ( string_2 + ( getname ( ) ) ) , var_6 class ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. init ( context ) ; java.util.list < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; type_1. method_2 ( var_3 class, string_1, var_2 ) ; type_2 response = new type_2 ( ) ; var_1. method_3 ( new type_3 ( new type_4 ( string_2 ) ), response ) ; assertequals ( var_4, response. method_4 ( ) ) ; assertequals ( var_2. tostring ( ), 1, var_2. size ( ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_4 . method_2 ( ) ) { if ( ( var_1 ) == ( var_2 . getboolean ( var_3 , false ) ) ) { } else { var_1 = var_2 . getboolean ( var_3 , false ) ; if ( var_1 ) { method_3 ( ) ; var_5 = new type_1 ( string_1 ) ; var_6 = new type_1 ( string_2 ) ; var_7 = new type_1 ( string_3 ) ; } else { } } } var_8 . method_4 ( this , int_1 ) ; }
[0]: public java.util.arraylist < type_1 > method_1 ( final java.util.hashset < type_1 > set ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( set. size ( ) ) ; for ( type_1 c : set ) { if ( var_1. isempty ( ) ) { var_1. add ( c ) ; } var_1. add ( method_2 ( c, var_1 ), c ) ; } return var_1 ; }

************

************
tgt: protected static java.lang.string method_1 ( final type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; java.lang.string var_5 = var_1 . method_2 ( ) . tostring ( ) . replace ( string_1 , string_2 ) ; var_2 . append ( var_5 ) ; return var_2 . tostring ( ) ; }
[0]: public static java.util.list < java.lang.integer > method_1 ( java.util.list <? > list, int count ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < count ; ++ i ) { var_1. add ( i ) ; } if ( ( list. size ( ) ) == count ) { return var_1 ; } type_1. method_1 ( var_1 ) ; return var_1. method_2 ( 0, count ) ; }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = method_2 ( ) . getstring ( var_2 ) ; java.lang.string var_3 = method_2 ( ) . getstring ( method_3 ( ) . getname ( ) ) ; var_5 . method_4 ( ( ( var_1 + string_1 ) + var_3 ) ) ; }
[0]: public void assertequals ( java.lang.object var_1, java.lang.object var_2 ) { if ( ( var_2 == null ) && ( var_1 == null ) ) return ; if ( ( var_2!= null ) && ( var_2. equals ( var_1 ) ) ) return ; fail ( format ( var_2, var_1 ) ) ; }

************

************
tgt: private void method_1 ( java.io.file var_1 ) { java.io.file [ ] var_2 = var_1 . method_2 ( var_3 ) ; if ( var_2 != null ) { for ( java.io.file file : var_2 ) { var_4 . method_3 ( file ) ; method_4 ( file ) ; } } java.io.file [ ] var_5 = var_1 . method_2 ( var_6 ) ; if ( var_5 != null ) { for ( java.io.file var_7 : var_5 ) { method_1 ( var_7 ) ; } } }
[0]: private boolean method_1 ( ) { java.io.file f = new java.io.file ( string_1 ) ; if ( f. method_2 ( ) ) { try { java.io.fileinputstream var_1 = new java.io.fileinputstream ( f ) ; type_1 var_2 = new type_1 ( var_1 ) ; var_3 = ( ( type_2 ) ( var_2. method_3 ( ) ) ) ; } catch ( java.lang.exception var_4 ) { return false ; } } return true ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = type_1 . method_2 ( ) ; type_2 var_2 = new type_2 ( ) ; context = new type_3 ( new type_4 ( ) , var_2 , new type_5 ( ) ) ; context . method_3 ( var_3 . method_4 ( string_1 ) ) ; var_5 = new type_6 ( ) ; var_5 . method_6 ( string_2 ) ; }
[0]: protected java.lang.string method_1 ( java.lang.string var_1 ) throws java.lang.exception { final java.net.url var_2 = type_1. method_2 ( var_3 class, var_1 ) ; final java.lang.string var_4 = type_1. tostring ( var_2, var_5 ) ; type_2 content = type_3. method_3 ( string_1, var_4 ) ; type_4 var_6 = var_7. method_4 ( url, content ) ; type_5 response = var_6. execute ( ) ; return type_6. tostring ( new type_7 ( response. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.throwable { class type_1 { class var_1 { public void method_2 ( ) { } } } method_3 ( var_2 class , string_1 ) ; type_2 . method_4 ( var_3 ) . event ( string_2 ) . method_5 ( ) . attribute ( string_3 , string_4 ) . attribute ( string_5 , string_6 ) . method_6 ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = method_4 ( ) ; var_3. method_5 ( var_3. method_6 ( 0 ). getid ( ) ) ; var_3. method_7 ( var_6 ) ; var_7 = new android.content.intent ( this, var_8 class ) ; method_8 ( var_7, var_9, var_10, false ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { var_1 . settext ( ( ( string_1 + var_2 ) + string_2 ) ) ; method_2 ( var_2 ) ; var_3 . method_3 ( var_4 , nodes , new type_2 < java.lang.string > ( ) { public void method_4 ( java.lang.throwable var_5 ) { var_1 . settext ( var_5 . method_5 ( ) ) ; var_6 = false ; } public void method_6 ( java.lang.string result ) { var_1 . settext ( result ) ; var_6 = false ; method_7 ( ) ; } } ) ; }
[0]: public void method_1 ( java.util.collection < type_1 > var_1, java.util.collection < type_2 > var_2 ) { if ( var_1!= null ) { this. var_3. method_2 ( ). method_3 ( var_1 ) ; this. var_4. field ( var_5, this. var_3. method_2 ( ) ). method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 . method_2 ( ) . size ( ) ) > 0 ) { for ( java.lang.string url : var_1 . method_2 ( ) ) { method_3 ( url ) ; } var_2 . method_4 ( ) ; } else { var_2 . method_4 ( ) ; } method_5 ( ) ; }
[0]: private void method_1 ( ) { this. var_1 = getcontext ( ). method_2 ( type_1. method_3 ( var_2 class, method_4 ( ), var_3 ) ) ; this. var_4 = getcontext ( ). method_2 ( type_1. method_3 ( var_5 class, method_4 ( ), var_6. method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 p , java.lang.string var_1 ) { if ( ( ( var_1 . length ( ) ) < int_1 ) || ( ( var_1 . length ( ) ) > int_2 ) ) { p . method_2 ( string_1 ) ; return ; } method_3 ( string_2 ) . set ( p . getname ( ) , var_1 ) ; if ( method_4 ( string_2 ) ) p . method_2 ( string_3 ) ; else p . method_2 ( string_4 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ). method_6 ( true ) ; }

************

************
tgt: private java.net.url method_1 ( java.net.url url ) { if ( ( url == null ) || ( string_1 . equals ( url . method_2 ( ) ) ) ) { return url ; } try { return type_1 . method_3 ( url ) . method_4 ( ) ; } catch ( java.lang.exception var_1 ) { var_2 . error ( ( ( ( string_2 + url ) + string_3 ) + ( var_1 . method_5 ( ) ) ) ) ; return url ; } }
[0]: public void method_1 ( android.content.context context, type_1 var_1, int [ ] var_2 ) { type_2. method_2 ( var_3, string_1 ) ; for ( int var_4 : var_2 ) { if ( method_3 ( context, var_4 ) ) { method_4 ( context, var_4 ) ; var_1. method_5 ( var_4, method_6 ( context, var_4 ) ) ; } } super. method_1 ( context, var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; type_2 var_2 = type_3 . method_3 ( ) ; var_2 . method_4 ( var_3 . method_6 ( ) ) ; type_3 . method_7 ( var_2 ) ; type_4 . get ( ) . method_8 ( var_4 , var_2 ) ; type_5 . method_9 ( ) ; }
[0]: public boolean method_1 ( double var_1, double var_2, double var_3, double var_4 ) { if ( ( ( ( ( var_5 ) == var_1 ) && ( ( var_6 ) == var_2 ) ) && ( ( var_7 ) == var_3 ) ) && ( ( var_8 ) == var_4 ) ) return true > ( ( var_9 ) / ( var_10 ) ) ; return false ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent var_3 ) { super . method_1 ( var_1 , var_2 , var_3 ) ; switch ( var_1 ) { case var_4 : if ( var_2 == ( var_6 ) ) { method_2 ( ) ; var_7 . method_3 ( ) . method_4 ( ) ; } break ; case var_5 : if ( var_2 == ( var_6 ) ) { method_2 ( ) ; var_7 . method_3 ( ) . method_4 ( ) ; } break ; } }
[0]: public void method_1 ( ) throws type_1 { try { var_1. method_2 ( null ) ; var_2. method_3 ( var_3, string_1, string_1 ) ; } catch ( type_2 var_4 ) { var_4. method_4 ( ) ; throw new type_1 ( var_4 ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : var_7 = var_3 ; type_1 . method_2 ( var_3 . id ) ; break ; case var_4 : method_3 ( ) . method_4 ( var_5 class , null , null ) ; break ; case var_6 : type_1 . method_5 ( var_7 . id ) ; type_2 . method_6 ( var_8 , type_3 . params ( ) . add ( var_9 , string_1 ) ) ; break ; } }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; var_3. put ( method_3 ( var_1. method_4 ( ) ) ) ; var_3. put ( method_5 ( var_1. method_6 ( ) ) ) ; var_4. method_7 ( var_3 ) ; }

************

************
tgt: public < type_1 > type_1 [ ] method_1 ( type_1 [ ] a ) { type_1 [ ] result = null ; if ( ( a . length ) >= ( this . size ( ) ) ) result = a ; else result = ( ( type_1 [ ] ) ( type_2 . method_2 ( a . getclass ( ) . method_3 ( ) , this . size ( ) ) ) ) ; type_3 . method_4 ( this . array , this . start , result , 0 , result . length ) ; return result ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { boolean var_3 = var_4. method_2 ( var_5. method_3 ( ) ) ; if ( var_3 ) { var_6. method_4 ( var_7 ) ; var_8. method_4 ( var_9 ) ; type_2. method_5 ( this, method_6 ( ). method_7 ( ). getstring ( var_10 ), var_11 ). show ( ) ; } var_1. method_8 ( ) ; }

************

************
tgt: type_1 method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) return null ; var_1 = var_1 . replace ( string_1 , string_2 ) . replace ( string_3 , string_2 ) ; java.lang.string [ ] str = var_1 . split ( string_4 ) ; return new type_1 ( null , null , str [ 1 ] , null , null , str [ 0 ] , str [ int_1 ] , null , null ) ; }
[0]: public static void method_1 ( type_1 var_1, java.lang.string title, java.lang.string msg ) { type_2. method_1 ( var_1, title, msg, new type_3 ( ) { public void method_2 ( type_4 var_2, int var_3 ) { var_2. method_3 ( ) ; } } ) ; }

************

************
tgt: public void method_1 ( type_1 j , type_2 var_1 ) { for ( type_3 var_2 : method_2 ( ) ) { if ( var_1 . method_3 ( ) . equals ( var_2 ) ) { for ( type_2 var_3 : var_2 . method_4 ( ) ) { if ( type_4 . method_6 ( var_3 . method_7 ( ) , var_1 . method_8 ( ) ) ) { var_2 . method_1 ( j , var_1 . method_8 ( ) ) ; } } } } }
[0]: private void method_1 ( android.content.intent intent ) { final int var_1 = intent. method_2 ( var_2, var_3 ) ; final type_1 var_4 = method_3 ( ) ; if ( ( var_4 == null ) || ( ( method_4 ( var_4 ) )!= var_1 ) ) { if ( var_4 instanceof type_2 ) { ( ( type_2 ) ( var_4 ) ). method_5 ( ) ; } var_3 = var_1 ; method_6 ( ). method_7 ( ). replace ( var_5, method_8 ( var_1 ) ). commit ( ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_2 ( ) ; type_1 var_2 = new type_3 ( ) ; type_1 var_3 = new type_4 ( ) ; type_1 [ ] var_4 = new type_1 [ ] { var_1 , var_3 , var_2 } ; type_5 var_5 = new type_5 ( var_4 ) ; var_5 . start ( ) ; }
[0]: private type_1 method_1 ( type_2 context ) { type_3 var_1 = ( ( type_3 ) ( method_2 ( context, 0 ) ) ) ; java.lang.string path = method_3 ( context, 0 ) ; type_4 var_2 = ( ( type_4 ) ( method_4 ( context, 1 ) ) ) ; type_1 var_3 = var_2. value ( ) ; method_5 ( var_1, path, var_3 ) ; var_3. method_6 ( var_4, var_5 ) ; return var_3 ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( string_1 . equals ( var_3 ) ) { return var_1 . method_2 ( ) . compareto ( var_2 . method_2 ( ) ) ; } else { throw new type_2 ( new type_3 ( var_4 , var_3 ) ) ; } }
[0]:  static void method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1, string_2, string_3 } ; int n = type_1. method_2 ( var_2, string_4, string_5, var_3, var_4, null, var_1, var_1 [ 0 ] ) ; if ( n == ( var_5 ) ) { type_2. method_3 ( ) ; } else if ( n == ( var_6 ) ) { java.lang.system.exit ( 0 ) ; } } }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.string var_1 ) throws java.lang.exception { type_2 var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 != null ) { return new type_1 < type_2 > ( var_2 , var_5 ) ; } else { return new type_1 < type_2 > ( var_4 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { type_1 var_2 = var_3 ; var_4 = string_1 ; } else { var_4 = var_1. format ( var_5 ). tostring ( ) ; var_6 = var_1 ; if ( ( var_6 )!= null ) { value = ( ( method_2 ( ) ) + string_2 ) + ( method_3 ( ) ) ; } else { value = method_2 ( ) ; } } } }

************

************
tgt: public static java.lang.string method_1 ( int length ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; while ( ( var_1 . length ( ) ) < length ) { var_1 . append ( var_2 [ java.lang.math.abs ( ( ( var_3 . method_2 ( ) ) % ( var_2 . length ) ) ) ] ) ; } return var_1 . tostring ( ) ; }
[0]: public type_1 update ( type_1 var_1 ) throws type_2, java.lang.nullpointerexception { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( ) ; } else if ( ( var_1. getid ( ) ) == null ) { throw new type_2 ( ) ; } return var_2. method_1 ( var_1 ) ; }

************

************
tgt: public int method_1 ( double var_1 ) { if ( ( var_1 < ( var_2 ) ) || ( var_1 > ( var_3 ) ) ) throw new type_1 ( string_1 ) ; int var_4 = ( ( int ) ( ( var_1 - ( var_2 ) ) / ( var_5 ) ) ) ; if ( var_4 >= ( var_6 ) ) throw new type_2 ( ) ; return var_4 ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = ( ( type_1 ) ( method_2 ( var_3 ) ) ) ; var_2. method_3 ( var_4 ) ; var_5. method_4 ( var_2. method_5 ( ) ) ; var_6. setenabled ( false ) ; android.view.view var_7 = method_2 ( var_8 ) ; var_7. method_3 ( var_4 ) ; var_7. method_6 ( new type_2 ( ) { public void method_1 ( android.view.view var_1 ) { var_5. method_7 ( ) ; } } ) ; } }

************

************
tgt: public int method_1 ( ) { int count = 0 ; for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_1 ) ; j ++ ) { if ( ( ( var_2 [ i ] [ j ] ) != ( method_2 ( i , j ) ) ) && ( ( var_2 [ i ] [ j ] ) != 0 ) ) { count ++ ; } } } return count ; }
[0]: public void method_1 ( java.lang.object var_1 ) throws java.lang.exception { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; var_2. method_2 ( method_3 ( ) ) ; method_4 ( var_2 ) ; super. method_1 ( var_1 ) ; var_3. method_5 ( method_6 ( ). substring ( ( ( var_4. length ( ) ) + 1 ) ) ) ; }

************

************
tgt: private type_1 [ ] method_1 ( type_2 var_1 ) throws type_3 { type_4 var_2 = new type_4 ( var_3 . method_2 ( ) ) ; type_5 var_4 = method_3 ( var_2 . get ( var_2 . method_4 ( ) ) ) ; return var_1 . method_5 ( method_6 ( var_4 , true ) ) ; }
[0]: public int method_1 ( java.io.file source, java.io.file var_1 ) { int status = var_2 ; try { status = var_3 ; status = method_2 ( source, var_1 ) ; } catch ( type_1 var_4 ) { method_3 ( var_4. method_4 ( ) ) ; return var_5 ; } catch ( java.lang.exception var_4 ) { method_3 ( ( string_1 + ( var_4. method_4 ( ) ) ) ) ; return var_5 ; } return status ; }

************

************
tgt: public static java.util.list < type_1 > method_1 ( ) { return java.util.arrays.aslist ( new type_1 ( var_1 , int_5 , int_2 ) , new type_1 ( var_2 , int_3 , 1 ) , new type_1 ( var_3 , int_1 , int_1 ) , new type_1 ( var_4 , int_4 , int_5 ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2. getview ( ). method_2 ( var_3 ) ) ) ; var_1. settext ( ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + ( var_5 ) ) + string_3 ) + ( var_6 ) ) + string_4 ) ) ; }

************

************
tgt: public final int method_1 ( final type_1 var_1 , final boolean var_2 , final int var_3 ) { int value = 0 ; for ( type_2 var_4 : var_5 ) { value += var_4 . method_2 ( var_1 , var_2 , var_3 , value ) ; } return value ; }
[0]: private < type_1 > void method_1 ( type_2 < type_1 > var_1, type_3 var_2 ) { try { var_3. method_2 ( type_4. method_3 ( var_1 ) ) ; if ( var_3. method_4 ( ) ) { type_5. method_5 ( ). method_6 ( ) ; } else { var_1. method_7 ( this ) ; } var_3. method_8 ( ) ; } catch ( type_6 var_4 ) { var_3. method_9 ( ) ; } catch ( java.lang.throwable var_4 ) { var_2. method_10 ( var_1, var_4 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_2 . method_1 ( ) ; var_3 . method_1 ( ) ; var_4 . method_1 ( ) ; var_5 . method_1 ( ) ; var_1 . method_2 ( ) ; if ( type_1 . method_3 ( ) ) { ( ( type_2 ) ( type_3 . method_4 ( ) ) ) . method_5 ( ) ; } var_6 . method_6 ( ) ; var_7 . method_1 ( ) ; }
[0]: private boolean method_1 ( ) { if ( ( ( ( ( var_1 )!= null ) && (! ( method_2 ( ) ) ) ) && ( ( var_1. method_3 ( ) ) == ( method_4 ( ) ) ) ) && ( ( var_1. method_5 ( ) ) == ( ( ( method_6 ( ) ) + ( method_7 ( ) ) ) - int_1 ) ) ) { return true ; } return false ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { var_1 = true ; method_2 ( ) ; method_3 ( ) ; while ( ( var_1 ) == true ) { method_4 ( ) ; boolean a = method_5 ( ) ; if ( a == true ) { method_6 ( ) ; } if ( a == false ) { method_7 ( ) ; var_1 = false ; } } } }
[0]: public void add ( byte [ ] data, java.lang.string name, java.lang.string filename, java.lang.string var_1 ) { var_2. add ( var_3 ) ; var_2. add ( this. var_4 ) ; var_2. add ( var_3 ) ; var_2. add ( method_1 ( name, filename, var_1 ) ) ; var_2. add ( data ) ; }

************

************
tgt: private void method_1 ( java.io.file var_1 ) { try { if ( ! ( var_1 . method_2 ( ) ) ) { if ( var_1 . method_3 ( ) ) { type_1 . info ( string_1 ) ; } else { type_1 . info ( string_2 ) ; } } } catch ( java.lang.exception var_2 ) { type_1 . info ( string_3 , var_2 ) ; } }
[0]: public synchronized void method_1 ( type_1 context ) throws java.io.ioexception { try { this. var_1. method_2 ( ) ; } catch ( type_2 var_2 ) { type_3. error ( var_2 ) ; } finally { if ( ( this. var_3 )!= null ) { this. var_3. method_1 ( ) ; } } }

************

************
tgt: private void method_1 ( int var_1 ) { java.util.list < type_1 > var_2 = type_2 . method_2 ( ) ; java.util.linkedlist < type_1 > var_3 = var_4 . remove ( var_1 ) ; if ( var_3 != null ) { for ( type_1 id : var_3 ) { var_5 . remove ( id ) ; var_2 . add ( id ) ; } } var_6 . remove ( var_1 ) ; type_3 . info ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) ) ; }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3. method_2 ( 0, int_1, 0, 0, string_1 ) ; var_1. method_3 ( ) ; method_4 ( var_1, int_1, int_1, 0, 0 ) ; var_1 = type_3. method_2 ( 0, int_1, 0, 0, string_2 ) ; var_1. method_3 ( ) ; method_4 ( var_1, int_2, int_1, 0, 0 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 file ) { final java.lang.string var_1 = type_3 . method_2 ( file . method_3 ( ) ) ; if ( var_1 == null ) return new type_1 ( ) ; java.lang.string result = method_4 ( file , var_1 ) ; return method_5 ( result , file ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { if ( ( ( ( ( i ) >= 0 ) && ( ( i ) < ( var_2. length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( var_2 [ 0 ]. length ) ) ) return var_2 [ i ] [ j ] ; return null ; }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = this . var_2 . method_2 ( null ) ; if ( var_1 != null ) { if ( ( var_1 . method_3 ( ) ) == ( var_3 ) ) { this . var_2 = null ; final type_2 var_4 = this . var_5 . method_4 ( ) ; if ( var_4 != null ) method_5 ( var_4 ) ; } } }
[0]: public long method_1 ( long time ) { long id = time * ( var_1 ) ; for ( ; ; ) { long var_2 = var_3. get ( ) ; if ( var_2 >= id ) id = var_2 + 1 ; if ( var_3. method_2 ( var_2, id ) ) break ; } return id ; }

************

************
tgt: public void method_1 ( ) { try { var_1 . info ( string_1 ) ; method_2 ( string_2 ) ; java.util.list < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( var_3 . method_3 ( ) ) ; for ( int i : var_2 ) { var_3 . get ( i ) . method_4 ( ) ; var_3 . remove ( i ) ; } var_1 . info ( string_3 ) ; var_4 = 0 ; } catch ( java.lang.exception var_5 ) { var_1 . error ( string_4 , var_5 ) ; } }
[0]: public void method_1 ( ) { android.view.view view = ( ( type_1 ) ( context ) ). method_2 ( ) ; if ( view == null ) view = new android.view.view ( ( ( type_1 ) ( context ) ) ) ; type_2 var_1 = ( ( type_2 ) ( ( ( type_1 ) ( context ) ). method_3 ( var_2 ) ) ) ; if ( var_1 == null ) return ; var_1. method_4 ( view. method_5 ( ), 0 ) ; }

************

************
tgt: public static double method_1 ( double t ) { double count = type_1 . method_2 ( type_2 , t ) ; if ( count >= 0 ) { return count ; } else { double var_1 = t - ( var_2 ) ; double var_3 = ( type_1 . method_1 ( var_1 ) ) + ( type_1 . method_3 ( t ) ) ; type_2 . add ( var_3 ) ; return var_3 ; } }
[0]: public boolean method_1 ( type_1 path ) { java.lang.string var_1 = type_2. method_2 ( path. getname ( ) ). tolowercase ( ) ; for ( java.lang.string var_2 : var_3 ) { if ( var_1. equals ( var_2 ) ) { return true ; } } return false ; }

************

************
tgt: private void method_1 ( java.lang.string [ ] var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( var_1 [ 0 ] . equals ( var_2 . get ( i ) . method_2 ( ) ) ) { if ( var_1 [ 1 ] . equals ( var_2 . get ( i ) . method_3 ( ) ) ) { var_2 . remove ( i ) ; } } } }
[0]: public java.lang.string tostring ( ) { java.lang.string result = string_1 ; if ( var_1 ) { result += string_2 ; } result += ( name ) + string_3 ; if ( var_2 ) { result += string_4 ; } result += ( string_5 + ( var_3 ) ) + string_6 ; return result ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > var_2 = new java.util.arraylist < > ( ) ; type_2 var_3 = type_3 . method_2 ( ) . method_3 ( ) ; var_2 = ( ( java.util.list < type_1 > ) ( var_3 . get ( var_4 class , var_1 ) ) ) ; var_5 . info ( ( string_1 + var_1 ) ) ; var_5 . info ( ( string_2 + ( var_2 . size ( ) ) ) ) ; return var_2 ; }
[0]: private void method_1 ( int var_1, int var_2 ) { type_1 item = getdata ( var_2 ). get ( var_1 ) ; data. add ( item ) ; var_3 = new type_2 ( this, var_4, data ) ; if ( method_2 ( var_1, var_2 ) ) { var_3. method_3 ( ). remove ( var_5 ) ; } var_6. method_4 ( var_3 ) ; }

************

************
tgt: private int method_1 ( int [ ] var_1 ) { int var_2 = 0 ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] ) >= ( var_1 [ var_2 ] ) ) { var_2 = i ; } } return var_2 ; }
[0]: public void method_1 ( int [ ] var_1 ) { var_2 [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( var_3 ) ; i ++ ) { var_2 [ i ] = index += var_1 [ ( i - 1 ) ] ; } type_1. method_2 ( var_2, 0, var_1, 0, var_3 ) ; method_3 ( var_4, false ) ; var_4 = index ; }

************

************
tgt: private void method_1 ( ) { if ( ! ( method_2 ( ) ) ) { method_3 ( true ) ; } var_1 = new type_1 ( this ) ; var_1 . method_4 ( var_2 ) ; var_1 . method_5 ( method_6 ( ) . getstring ( var_3 ) ) ; var_1 . method_7 ( false ) ; var_1 . show ( ) ; var_4 = new type_2 ( ) ; method_8 ( ) ; }
[0]: public type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4 handle = new type_4 ( method_2 ( ) ) ; java.util.map < java.lang.string, java.lang.string > var_2 = new java.util.hashmap < > ( ) ; var_2. put ( string_1, var_3 ) ; var_2. put ( string_2, var_1. getid ( ) ) ; method_3 ( var_2, var_4, handle ) ; return handle ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = type_3 . method_2 ( getactivity ( ) ) . method_3 ( ) ; type_4 var_3 = new type_4 ( getactivity ( ) , var_2 ) ; method_5 ( var_3 ) ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; var_1. method_2 ( method_3 ( ). getcolor ( var_2 ) ) ; var_3. method_4 ( var_4 ) ; var_5. method_5 ( 0 ) ; var_5. method_4 ( var_6 ) ; var_7. settext ( method_3 ( ). gettext ( var_8 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 message ) { if ( ( var_2 . size ( ) ) > 0 ) { type_3 var_3 = new type_3 ( ) ; var_3 . method_2 ( var_4 , var_1 . method_3 ( ) ) ; var_3 . method_4 ( var_5 , message ) ; type_4 var_6 = type_4 . method_5 ( ) ; var_7 = var_8 ; var_6 . method_6 ( var_3 ) ; method_7 ( var_6 , var_1 . method_3 ( ) ) ; } }
[0]: public void method_1 ( java.lang.string data ) { type_1. i ( string_1, data ) ; try { type_2 var_1 = new type_2 ( data ) ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { var_2. add ( var_1. getstring ( i ) ) ; } method_2 ( int_1 ) ; } catch ( type_3 var_3 ) { var_3. method_3 ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ( ( var_2 ) != null ) && ( ( var_2 . method_2 ( string_1 ) ) != null ) ) { var_1 . method_3 ( var_2 . method_2 ( string_1 ) ) ; } var_1 . method_4 ( ( ( var_3 ) ++ ) ) ; var_1 . method_5 ( new java.util.date ( ) ) ; var_4 . get ( ) . method_1 ( var_1 . build ( ) ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( var_1. method_3 ( ). tostring ( ) ) ; var_2. method_4 ( var_3. method_3 ( ). tostring ( ) ) ; var_2. method_5 ( ) ; return var_2 ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; try { java.io.file var_3 = type_2 . method_2 ( var_4 ) ; java.io.file var_5 = new java.io.file ( var_3 , var_1 ) ; java.io.inputstream var_6 = new java.io.fileinputstream ( var_5 ) ; var_2 = type_3 . method_3 ( var_6 ) ; type_4 . method_4 ( string_1 , ( string_2 + var_1 ) ) ; } catch ( type_5 var_7 ) { var_7 . method_5 ( ) ; } return var_2 ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( var_1. size ( ) ) ; for ( type_2 info : var_1 ) { int start = info. method_2 ( ) ; int end = ( info. method_3 ( ) ) + 1 ; type_1 var_2 = new type_1 ( start, end ) ; list. add ( var_2 ) ; } return list ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( string_1 . equals ( var_2 . gettext ( ) ) ) { type_2 . method_2 ( var_3 , string_2 ) ; return ; } if ( ( java.lang.integer.parseint ( var_4 . getvalue ( ) . tostring ( ) ) ) < int_1 ) { type_3 . method_3 ( int_1 ) ; } method_4 ( ) ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { return ( ( ( java.lang.boolean. method_2 ( type_1. method_3 ( string_1 ) ) ) || ( ( type_2. method_4 ( ) ) == null ) ) || ( type_3. equals ( type_2. method_4 ( ) ) ) ) || ( type_2. method_4 ( ). equals ( var_1 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.util.collection < type_1 > var_2 ) { final type_2 var_3 = new type_2 ( ) ; final java.util.list < type_1 > var_4 = method_2 ( var_2 ) ; final java.util.iterator < type_1 > iterator = var_4 . iterator ( ) ; while ( iterator . method_3 ( ) ) { final type_3 element = iterator . method_4 ( ) ; var_3 . method_5 ( element ) ; } }
[0]: public java.lang.string method_1 ( java.util.arraylist < type_1 > list ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1. append ( string_1 ) ; for ( int i = 0 ; i < ( list. size ( ) ) ; i ++ ) { var_1. append ( list. get ( i ). tostring ( ) ). append ( string_2 ) ; } var_1. method_2 ( var_1. length ( ) ) ; var_1. append ( string_3 ) ; return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; type_3 var_3 = method_3 ( var_2 . x , var_2 . y ) ; if ( method_4 ( var_4 , var_3 ) ) { var_1 . method_5 ( var_5 ) ; method_6 ( var_6 ) ; } else { var_1 . method_7 ( ) ; method_6 ( var_7 ) ; } }
[0]: public void method_1 ( android.view.view view ) { java.util.list < type_1 > var_1 = var_2. method_2 ( ) ; switch ( var_1. size ( ) ) { case 0 : break ; case 1 : { method_3 ( var_1 ) ; } default : { } } }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.string msg , java.lang.object ... args ) { if ( var_1 == null ) return ; java.lang.string [ ] var_2 ; if ( args == null ) var_2 = msg . split ( string_1 ) ; else var_2 = java.lang.string.format ( msg , args ) . split ( string_1 ) ; for ( java.lang.string line : var_2 ) { var_1 . method_2 ( new type_2 ( line ) ) ; } }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( ) ; } var_1 [ var_2 ] = item ; ++ ( size ) ; method_2 ( var_2, method_3 ( ) ) ; var_2 = ( ++ ( var_2 ) ) % ( var_1. length ) ; if ( ( size ) > ( ( var_1. length ) / float_1 ) ) { method_4 ( ( ( var_1. length ) * int_1 ) ) ; } }

************

************
tgt: public int method_1 ( type_1 node ) { type_2 var_1 = node . method_2 ( ) ; int var_2 = ( ( int ) ( java.lang.math.round ( ( ( ( var_1 . method_3 ( ) ) - ( var_3 ) ) / ( var_4 ) ) ) ) ) ; int c = ( ( int ) ( java.lang.math.round ( ( ( ( var_1 . method_4 ( ) ) - ( var_5 ) ) / ( var_4 ) ) ) ) ) ; return ( var_2 * ( var_6 ) ) + c ; }
[0]: public static boolean method_1 ( final type_1 var_1 ) { type_2 var_2 = var_1. gettype ( ) ; final java.lang.string var_3 = type_3. method_2 ( var_2 ) ; if ( ( ( type_4. method_3 ( var_3, string_1 ) ) || ( type_4. method_3 ( var_3, string_2 ) ) ) || ( type_4. method_3 ( var_3, string_3 ) ) ) { return true ; } else { return false ; } }

************

************
tgt: public < type_1 > type_2 < type_1 > method_1 ( type_3 var_1 , java.lang.string output ) { type_2 < type_1 > var_2 = null ; try { var_2 = ( ( type_2 < type_1 > ) ( type_4 . method_2 ( this . var_3 , ( ( var_4 ) + output ) , var_1 ) ) ) ; } catch ( java.lang.exception var_5 ) { throw new type_5 ( string_1 ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 < java.lang.string > event ) { method_2 ( true ) ; type_2 var_1 = ( ( type_2 ) ( event. method_3 ( ) ) ) ; type_3 var_2 = ( ( type_3 ) ( var_1. method_4 ( ) ) ) ; method_5 ( param, var_1, var_2 ) ; }

************

************
tgt: public int [ ] method_1 ( short [ ] var_1 , int var_2 ) { if ( var_1 == null ) return null ; double [ ] var_3 = method_2 ( var_1 ) ; final int var_4 = int_1 ; int [ ] var_5 = var_6 . execute ( var_3 , var_2 ) ; for ( int i = 0 ; i < ( var_5 . length ) ; i ++ ) { var_5 [ i ] = ( ( int ) ( ( var_3 [ i ] ) / int_2 ) ) ; } return var_5 ; }
[0]: private int method_1 ( type_1 var_1 ) { type_2 target = new type_2 ( 0, 0 ) ; int var_2 = 0 ; for ( type_1 var_3 : var_4 ) { type_2 var_5 = method_2 ( var_1. method_3 ( ), var_3. method_3 ( ) ) ; int var_6 = var_1. method_4 ( var_3 ) ; var_2 ++ ; } return var_2 ; }

************

************
tgt: private void init ( ) { var_1 = new type_1 ( title , var_2 , height ) ; var_1 . method_1 ( ) . method_2 ( var_3 ) ; type_2 . init ( ) ; var_5 = new type_4 ( this ) ; var_4 = new type_3 ( var_5 , int_1 , int_2 ) ; var_6 = new type_5 ( var_5 ) ; var_7 = new type_6 ( var_5 ) ; var_8 = new type_7 ( var_5 ) ; type_8 . setstate ( var_6 ) ; }
[0]: void method_1 ( final type_1 var_1, final type_2 listener ) { if ( listener == null ) throw new type_3 ( string_1 ) ; synchronized ( var_2 ) { java.util.list < type_2 > var_3 = var_2. get ( var_1 ) ; if ( var_3!= null ) { if ( ( var_3. size ( ) ) > 1 ) var_3. remove ( listener ) ; else method_2 ( var_1 ) ; } } } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 ; while ( true ) { try { var_1 = var_2 . method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { break ; } if ( var_1 != null ) { method_3 ( var_1 ) ; try { var_2 . method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { } break ; } } }
[0]: public void method_1 ( java.lang.object var_1, java.lang.object var_2, java.lang.string var_3 ) { if ( type_1. equals ( var_1, var_2 ) ) { method_2 ( true, ( ( var_3 + string_1 ) + var_2 ) ) ; } else { method_2 ( true, ( ( var_3 + string_2 ) + var_2 ) ) ; } }

************

************
tgt: static void method_1 ( ) { var_1 = false ; var_2 . method_2 ( var_3 , var_4 , string_1 , true ) ; boolean var_5 = false ; while ( ( var_2 . method_3 ( ) ) == 1 ) { if ( ( var_2 . method_3 ( ) ) == int_1 ) { var_5 = true ; break ; } } if ( ! var_5 ) { } }
[0]: public void method_1 ( ) { if ( ( method_2 ( ) ) >= int_1 ) { if ( ( var_1 ) >= int_2 ) { var_1 = 0 ; var_2 = false ; method_3 ( int_1 ) ; } else var_1 += 1 ; } else { if ( ( var_1 ) >= int_2 ) { method_4 ( int_1 ) ; if ( ( method_2 ( ) ) < int_1 ) return ; else { method_3 ( int_1 ) ; return ; } } else var_1 += 1 ; } } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.util.list < java.lang.integer > var_1 ) { if ( ( var_1 != null ) && ( ! ( var_1 . isempty ( ) ) ) ) { type_2 var_2 = new type_2 ( ) ; var_2 . method_2 ( ) . method_3 ( var_3 ) . method_4 ( var_1 ) ; var_2 . method_5 ( string_1 ) ; return method_6 ( var_4 . method_7 ( var_2 ) ) ; } return new java.util.arraylist < type_1 > ( ) ; }
[0]: private static boolean equals ( java.util.properties p, java.lang.string var_1, java.lang.string var_2, boolean var_3 ) { java.lang.string var_4 = p. method_1 ( var_1 ) ; if ( var_4 == null ) return false ; if ( var_3 ) var_4 = var_4. tolowercase ( ) ; return ( var_4. equals ( var_2 ) ) && ( var_4. tolowercase ( ). equals ( var_2 ) ) ; }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent data ) { if ( ( var_4 ) == null ) { return ; } java.lang.string var_1 = data . method_2 ( ) ; if ( var_1 . equals ( var_2 ) ) { method_3 ( data ) ; } else if ( var_1 . equals ( var_3 ) ) { var_4 . method_4 ( ) ; } }
[0]: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = method_2 ( ) ; java.util.list < type_1 > var_2 = null ; int var_3 = 0 ; while ( var_3 < ( var_1. size ( ) ) ) { type_1 field = var_1. get ( var_3 ) ; if ( var_4. method_3 ( field ) ) { var_2. add ( field ) ; } else { var_3 ++ ; } } return var_2 ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( new type_1 ( ) . method_3 ( string_1 ) . method_4 ( string_2 ) . method_5 ( var_2 ) . build ( ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ) , var_3 class ) ; intent . method_6 ( var_4 , var_5 ) ; method_7 ( intent ) ; }
[0]: public void method_1 ( ) { type_1 < type_2 < type_3 > > var_1 = var_2. method_2 ( var_3 class ). method_3 ( string_1, 1 ). method_4 ( string_2 ). method_5 ( int_1, 1 ) ; type_2 < type_3 > var_4 = var_1. get ( ) ; assertnotnull ( var_4 ) ; type_3 [ ] array = new type_3 [ ] { var_5 } ; int i = 0 ; for ( type_3 var_6 : var_4 ) { assertequals ( array [ i ], var_6 ) ; i ++ ; } } }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_2 query ; method_2 ( ) ; query = var_2 . method_3 ( ( ( string_1 + var_1 ) + string_2 ) ) ; type_1 var_3 ; if ( ( query . list ( ) . size ( ) ) > 0 ) { var_3 = ( ( type_1 ) ( query . list ( ) . get ( 0 ) ) ) ; } else { var_3 = null ; } method_4 ( ) ; return var_3 ; }
[0]: public void method_1 ( ) { boolean end = false ; while (! end ) { if ( ( var_1. size ( ) ) > 0 ) { type_1 element = var_1. remove ( 0 ) ; element. method_2 ( var_2 ) ; int id = element. method_3 ( ) ; element. method_4 ( ) ; element. method_5 ( ) ; end = ( var_3 ) == id ; } else { java.lang.thread. method_6 ( ) ; } } method_7 ( ) ; } }

************

************
tgt: public static type_1 method_1 ( ) { java.lang.string name = var_2 . method_2 ( method_3 ( ) . method_4 ( ) ) . name ; if ( ! ( name . equals ( string_1 ) ) ) { return method_5 ( type_2 . method_6 ( ) ) ; } else { return method_7 ( var_3 . method_8 ( var_2 . method_9 ( ) , var_2 . method_2 ( method_3 ( ) . method_4 ( ) ) ) ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { var_1. method_2 ( type_1. get ( string_1 ). method_3 ( type_2. method_4 ( string_2 ) ). method_5 ( string_3, string_4 ) ). method_6 ( type_3. status ( ). method_7 ( ) ). method_6 ( type_3. content ( ). string ( type_4. method_8 ( string_5 ) ) ) ; }

************

************
tgt: public java.util.list < java.lang.long > method_1 ( ) { java.util.list < java.lang.long > var_1 = new java.util.arraylist < > ( ) ; if ( ( var_3 ) != null ) { for ( type_1 var_2 : var_3 ) { if ( ! ( var_2 . getid ( ) . equals ( var_4 ) ) ) { var_1 . add ( var_2 . getid ( ) ) ; } } } return var_1 ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) == null ) return ; type_1 var_2 = method_2 ( var_3, var_4 ) ; var_1. method_3 ( var_5, var_2 ) ; var_6. method_4 ( var_2 ) ; var_7. method_5 ( var_1. build ( ) ) ; var_8. show ( var_6, var_9 ) ; var_10 = null ; }

************

************
tgt: public static java.util.date method_1 ( java.lang.string var_1 ) { java.util.date date = null ; try { date = var_4 . method_2 ( var_1 ) ; } catch ( type_1 var_3 ) { } if ( date == null ) { try { date = var_2 . method_2 ( var_1 ) ; } catch ( type_1 var_3 ) { } } return date ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.string.format ( string_1, var_2. method_2 ( ) ) ; java.lang.string var_3 = java.lang.string.format ( string_1, var_2. method_3 ( ) ) ; return new java.lang.stringbuilder ( string_2 ). append ( var_1 ). append ( string_3 ). append ( var_3 ). append ( string_4 ). append ( ""\n"" ). tostring ( ) ; }

************

************
tgt: public void method_1 ( int var_1 , int value , type_1 var_2 , type_2 var_3 ) { if ( ( value & ( 1 < < ( var_4 ) ) ) != 0 ) { var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( ( var_6 ? int_1 : 1 ) ) ; } }
[0]: public java.lang.string tostring ( ) { return ( ( string_1 + ( method_1 ( ) ) ) + string_2 ) + ( method_2 ( ) ) ; java.lang.string var_1 = ( ( string_3 + ( this. method_1 ( ) ) ) + string_4 ) + ( this. method_2 ( ) ) ; var_1 = ( var_1 + ( var_2. tostring ( ) ) ) + ""\n"" ; return var_1 ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( ( var_1 ) == null ) { var_2 = method_2 ( ) ; if ( ! ( var_2 . isempty ( ) ) ) { var_3 = var_2 . get ( 0 ) ; method_3 ( ) ; method_4 ( var_3 ) ; } } }
[0]: private void method_1 ( ) { var_1. method_2 ( var_2 ) ; var_1. method_3 ( var_1. method_4 ( ). settext ( var_3 ) ) ; var_1. method_3 ( var_1. method_4 ( ). settext ( var_4 ) ) ; var_1. method_5 ( this ) ; if (! ( var_5. isempty ( ) ) ) { var_6. method_6 ( var_7 ) ; var_8. method_7 ( var_9 ) ; } else { var_8. method_7 ( var_10 ) ; var_8. settext ( getstring ( var_11 ) ) ; } }

************

************
tgt: private java.util.list < java.io.file > method_1 ( java.util.list < java.io.file > var_1 ) { if ( type_1 . isempty ( var_2 ) ) { throw new type_2 ( string_1 ) ; } java.io.file var_3 = new java.io.file ( var_2 ) . method_2 ( ) ; var_1 . add ( 0 , var_3 ) ; return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, java.lang.object var_3 ) throws java.lang.exception { type_1 var_4 = ( ( type_1 ) ( var_1 ) ) ; type_3 var_5 = new type_4 ( var_4 ) ; if ( var_5. method_2 ( ) ) { var_4. method_3 ( string_2, var_5. method_4 ( ) ) ; } else { var_4. method_3 ( string_2, null ) ; } return false ; }

************

************
tgt: private java.lang.object method_1 ( java.lang.object var_1 ) { if ( var_1 instanceof java.util.map ) { java.util.map var_2 = new type_1 ( type_2 . method_2 ( ) ) ; var_2 . method_3 ( ( ( java.util.map ) ( var_1 ) ) ) ; return var_2 ; } else if ( var_1 instanceof java.util.list ) { java.util.collections.sort ( ( ( java.util.list ) ( var_1 ) ) , ( var_3 , var_4 ) - > var_3 . tostring ( ) . compareto ( var_4 . tostring ( ) ) ) ; return var_1 ; } else { return var_1 ; } }
[0]: public void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = method_2 ( var_1, string_1 ) ; final java.lang.string var_3 = ( method_2 ( var_1, string_2 ) ) + string_3 ; var_1. method_1 ( ( ( var_2 + ( type_2. method_3 ( var_1. method_4 ( ) ) ) ) + var_3 ) ) ; var_4. put ( var_1. getname ( ), var_1. method_5 ( ). method_6 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( method_2 ( ) ) { return ; } var_3 = true ; method_3 ( ) . method_4 ( var_1 . method_5 ( ) ) ; final type_1 var_2 = type_1 . get ( ) ; var_2 . method_6 ( method_3 ( ) ) ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > result = this. var_1. select ( var_2 ) ; type_2. assertequals ( var_3, result. get ( 0 ) ) ; type_2. assertequals ( var_4, result. get ( 1 ) ) ; type_2. assertequals ( var_5, result. get ( int_1 ) ) ; }

************

************
tgt: public void update ( float var_1 ) { var_2 += var_1 ; var_3 = type_1 . method_1 ( init , end , type_2 . method_2 ( ( ( var_2 ) / ( ( time ) <= 0 ? 1 : 0 ) ) , 0.0f , 1.0f ) ) ; var_4 . method_3 ( var_5 ) ; }
[0]: public int method_1 ( ) { var_1 = ( var_1 ) - ( var_2 ) ; if ( ( var_1 ) < 0 ) { var_3 = true ; return ( var_2 ) + ( ( var_1 ) + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }

************

************
tgt: public void method_1 ( final type_1 < type_2 > var_1 , final type_3 < type_2 > response ) { final type_2 var_2 = ( response . method_2 ( ) ) ? response . method_3 ( ) : null ; if ( var_2 == null ) { listener . method_4 ( type_4 . method_5 ( response ) ) ; } else { type_4 . method_6 ( var_2 , null , listener ) ; } }
[0]: private int method_1 ( final type_1 first, final java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { return first. method_2 ( ). compareto ( ( ( type_1 ) ( var_1 ) ). method_2 ( ) ) ; } else if ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) { return - 1 ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( final type_1 var_1 ) { return ( ( ( ( this . var_3 ) == ( var_4 ) ) && ( ( this . var_5 ) == ( var_6 ) ) ) && ( ( this . var_7 ) == ( var_8 ) ) ) && ( ( this . var_9 ) == ( var_10 ) ) ; }
[0]: public type_1 method_1 ( ) throws java.io.ioexception, type_2 { type_1 token ; if ( position. method_2 ( ) ) { token = position. method_3 ( ) ; } else { token = super. method_4 ( ) ; if ( token!= null ) { position. add ( token ) ; } } return method_5 ( token ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . isempty ( ) ) method_3 ( var_3 , int_1 , new float [ ] { 0 , 0 , 0 } ) ; type_1 [ ] var_2 = new type_1 [ var_1 . size ( ) ] ; var_1 . method_2 ( var_2 ) ; method_3 ( var_3 , int_1 , type_2 . method_4 ( var_2 ) ) ; }
[0]: private void method_1 ( ) { this. var_1 = new type_1 ( this ) ; this. var_2 = new type_2 ( this ) ; this. var_3 = new type_3 ( this ) ; this. var_4 = new type_4 ( this ) ; this. var_5 = new type_5 ( this, null ) ; this. var_6 = new type_6 ( this ) ; this. var_7 = new type_7 ( this ) ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 , type_1 var_2 , java.lang.string var_3 ) { var_4 . method_2 ( var_2 ) ; this . var_1 = var_1 ; this . var_3 = var_3 ; this . var_2 = var_2 ; type_2 . method_3 ( this . getclass ( ) . method_4 ( ) , string_1 , string_2 ) ; }
[0]: public void method_1 ( type_1 writer ) { writer. method_2 ( var_1 ) ; writer. method_3 ( ""id"", id ) ; writer. method_4 ( string_1, var_2 ) ; writer. method_4 ( string_2, var_3 ) ; writer. method_4 ( string_3, var_4 ) ; writer. method_4 ( string_4, var_5 ) ; writer. method_5 ( ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_1 out = new type_1 ( ) ; if ( ( var_2 ) != null ) for ( type_2 var_1 : var_2 ) { if ( var_1 != null ) out . method_2 ( var_1 . method_3 ( ) , var_1 . getvalue ( ) ) ; } return out ; }
[0]: public static type_1 method_1 ( android.content.context context, boolean var_1 ) { var_2 = true ; var_3 = ( var_1 )? var_4 : var_5 ; boolean var_6 = type_2. method_2 ( context ) ; type_1. method_3 ( context, (! var_6 ) ) ; var_7. method_4 ( ( ( type_3 ) ( context ) ) ) ; return var_7 ; }

************

************
tgt: private void method_1 ( java.util.arraylist < type_1 > var_1 , java.util.arraylist < type_1 > var_2 ) { if ( ( var_1 . isempty ( ) ) && ( var_2 . isempty ( ) ) ) { return ; } type_2 < type_1 > var_3 = method_2 ( var_1 ) ; java.util.arraylist < type_1 > var_4 = new java.util.arraylist < type_1 > ( var_2 ) ; if ( var_5 ) { method_3 ( var_3 , var_4 ) ; method_4 ( var_3 , var_4 ) ; method_5 ( var_3 , var_4 ) ; method_6 ( var_3 , var_4 ) ; } }
[0]: private boolean method_1 ( int var_1 ) { int var_2 = 1 ; int var_3 = 0 ; while ( var_2 < ( var_1 + 1 ) ) { int temp = var_2 ; var_2 += var_3 ; var_3 = temp ; if ( var_2 == var_1 ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 ) ; method_3 ( ) ; var_1 . method_4 ( ) ; int size = var_3 . size ( ) ; var_3 . method_5 ( ) ; var_4 = null ; for ( int n = 0 ; n < size ; n ++ ) { var_5 . method_6 ( 0 ) ; } method_7 ( ) ; }
[0]: private static void method_1 ( type_1 var_1, type_2 var_2 ) { java.util.list < type_3 > var_3 = null ; type_4 var_4 = ( ( type_1 ) ( var_1 ) ). method_2 ( ) ; if ( null!= var_4 ) { var_3 = var_4. method_3 ( ) ; } type_5. method_4 ( var_2, var_5, ( var_3 == null? new java.util.arraylist < type_3 > ( ) : var_3 ), false ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = type_1 . method_2 ( var_2 , type_2 . method_3 ( string_1 ) ) ; var_3 = new type_3 ( var_1 , new type_4 ( ) ) ; type_5 response = var_4 . method_4 ( var_3 ) ; asserttrue ( response . method_8 ( ) ) ; }
[0]: public boolean show ( ) { if (! ( var_1. method_1 ( ) ) ) { return false ; } if ( var_2 ) { return true ; } for ( type_1 var_3 : var_4 ) { if (! ( type_2. method_2 ( var_1, var_3, var_5, data ) ) ) { return false ; } } var_2 = true ; return true ; } }

************

************
tgt: private static long method_1 ( type_1 var_1 , java.lang.string var_2 ) throws java.io.ioexception { long var_3 = ( var_2 != null ) ? var_2 . method_2 ( ) : 0 ; for ( type_2 var_4 : var_1 . method_3 ( ) . values ( ) ) { var_3 += ( var_3 * int_1 ) + ( var_4 . getname ( ) . method_2 ( ) ) ; } return var_3 ; }
[0]: public boolean method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { method_2 ( ), method_3 ( ) } ; boolean var_2 = false ; try { type_1. method_4 ( new type_2 ( this. var_3 ), var_1 ) ; var_2 = true ; } catch ( java.lang.exception var_4 ) { type_3. method_5 ( var_5, string_1, var_4 ) ; } return var_2 ; }

************

************
tgt: public byte [ ] method_1 ( ) { byte [ ] var_2 = new byte [ ] { } ; byte [ ] buffer = this . var_1 . method_1 ( ) ; byte [ ] var_3 = new byte [ ] { ( ( byte ) ( buffer [ ( ( buffer . length ) - 1 ) ] ) ) } ; if ( var_3 == ( var_4 ) ) { if ( ( buffer . length ) > int_1 ) { } } return var_2 ; }
[0]: public void method_1 ( ) { type_1 a = method_2 ( var_1 class ) ; method_3 ( a. method_4 ( ) ). method_5 ( string_1 ) ; type_3. assertequals ( string_1, a. method_4 ( ) ) ; method_6 ( a, method_7 ( 0 ) ). method_4 ( ) ; method_6 ( a, method_8 ( ) ). method_9 ( ) ; }

************

************
tgt: public int getint ( ) { try { int var_1 = java.lang.integer.parseint ( var_2 . method_1 ( ) ) ; return var_1 ; } catch ( type_1 | java.io.ioexception var_3 ) { var_6 = false ; method_3 ( ) ; var_7 . method_2 ( ) . remove ( this ) ; java.lang.system.out.println ( ( string_1 + ( var_4 . getid ( ) ) ) ) ; java.lang.system.out.println ( ( ( var_5 . method_2 ( ) . size ( ) ) + string_2 ) ) ; } return - 1 ; }
[0]: protected type_1 method_1 ( ) throws type_2 { try { type_3 var_1 = type_4. method_2 ( method_3 ( ), var_2 class, true, false ) ; var_3. info ( string_1 ) ; method_4 ( var_1. method_5 ( ) ) ; return var_1. method_6 ( ) ; } catch ( type_5 var_4 ) { type_3 var_1 = new type_3 ( ) ; var_1. method_7 ( ) ; method_4 ( var_1. method_5 ( ) ) ; var_3. info ( string_2 ) ; return var_1. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . add ( var_2 ) ; var_1 . add ( var_2 ) ; final type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( var_4 ) ; var_3 . method_3 ( string_1 ) ; var_3 . method_4 ( var_5 ) ; final type_2 < type_3 , type_4 > result = new type_2 < type_3 , type_4 > ( ) ; var_3 . method_5 ( result ) ; type_5 . method_6 ( result . method_7 ( ) ) ; var_6 = method_8 ( result ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { type_1 var_1 = type_2. method_1 ( string_1 ) ; type_1 var_2 = type_2. method_1 ( string_2 ) ; type_1 var_3 = type_2. method_1 ( string_3 ) ; type_3 var_4 = new type_3 ( ) ; var_4. method_2 ( var_1 ) ; java.lang.system.out.println ( var_1. get ( int_1 ). method_3 ( ) ) ; }

************

************
tgt: public void method_1 ( int t ) { if ( ( ( starttime ) <= t ) && ( t <= ( endtime ) ) ) { method_2 ( ) ; time . set ( t ) ; } else if ( t < ( starttime ) ) time . set ( starttime ) ; else if ( t > ( endtime ) ) time . set ( endtime ) ; }
[0]: public void method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; type_1 var_2 = new type_2 ( ) ; type_3 var_3 = var_2. method_2 ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { asserttrue ( var_3. method_3 ( ( ( ( var_1. method_4 ( ) ) * ( ( var_4 ) - ( min ) ) ) + ( min ) ), string_1, string_2, 1 ) ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { int index = var_2 . method_2 ( ) . method_3 ( ) ; java.lang.string data = var_2 . method_2 ( ) . method_4 ( ) ; type_2 var_3 = method_5 ( data , index ) ; if ( var_3 != null ) { var_4 . method_6 ( var_3 ) ; method_7 ( var_3 ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { this. var_3. method_2 ( var_1, var_2, new type_1 < java.lang.string > ( ) { public void method_3 ( java.lang.string result ) { getview ( ). method_4 ( ). method_5 ( result ) ; } public void method_6 ( java.lang.throwable var_4 ) { } } ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( buf ) == null ) buf = state . buffer ( ) ; else buf = state . method_2 ( ) ; var_1 = ( buf . method_3 ( ) ) ? null : buf . array ( ) ; var_2 = ( buf . method_3 ( ) ) ? ( ( type_1 ) ( buf ) ) . method_4 ( ) : var_3 ; }
[0]: public static java.lang.string method_1 ( java.lang.string name ) { if ( name. isempty ( ) ) { return string_1 ; } type_1 var_1 = type_2. method_2 ( name ) ; if ( var_1. isempty ( ) ) { return var_2 ; } return var_3. get ( ). method_3 ( name, var_2 ) ; }

************

************
tgt: public java.util.list < java.lang.long > method_1 ( long id ) { java.util.list < java.lang.long > var_1 = new java.util.arraylist < > ( ) ; java.lang.string query = string_1 + id ; java.util.list < java.util.map < java.lang.string , java.lang.object > > var_2 = var_3 . method_2 ( query ) ; for ( java.util.map < java.lang.string , java.lang.object > var_4 : var_2 ) { var_1 . add ( java.lang.long.parselong ( var_4 . get ( "id" ) . tostring ( ) ) ) ; } return var_1 ; }
[0]: public static java.util.list < type_1 > method_1 ( type_2 var_1, java.util.date var_2 ) { java.util.list < type_1 > result = new java.util.arraylist < type_1 > ( ) ; type_3. method_2 ( var_1. method_3 ( ), result, var_2, 0, type_3. method_4 ( ), 0, null, ( - 1 ), false ) ; for ( type_1 b : result ) { b. method_5 ( var_1 ) ; } return result ; }

************

************
tgt: private int method_1 ( int var_1 ) { int var_2 = 0 ; for ( ; ( var_2 < ( this . height ) ) && ( ( this . var_3 [ var_1 ] [ var_2 ] . isempty ( ) ) || ( this . var_3 [ var_1 ] [ var_2 ] . method_2 ( ) ) ) ; var_2 ++ ) ; return ( this . height ) - var_2 ; }
[0]: public type_1 < type_2 > method_1 ( type_3 var_1, type_4 var_2, type_5 var_3 ) { type_2 var_4 = var_2. method_2 ( var_3 ) ; if ( var_5 ) { return new type_1 < type_2 > ( var_6, var_4 ) ; } type_6 var_7 = this. method_3 ( var_1, var_2, float_1 ) ; this. method_4 ( var_4, var_1, var_2, var_3, var_7 ) ; return new type_1 < type_2 > ( var_8, var_4 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_2 : if ( ( type_1 . method_2 ( this , var_3 ) ) == ( var_4 ) ) { var_5 . method_3 ( var_6 , 0 , 0 , this ) ; } break ; } }
[0]: private type_1 method_1 ( java.lang.string var_1, java.lang.string [ ] var_2 ) { type_2 var_3 = new type_2 ( ) ; java.lang.string [ ] var_4 = new java.lang.string [ ] { string_1, string_2 } ; java.lang.string var_5 = var_3. method_2 ( var_4, null, null ) ; type_3. method_3 ( string_3, var_5 ) ; type_4 var_6 = var_7. method_4 ( var_5, null ) ; return new type_1 ( var_6 ) ; }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { java.util.properties var_2 = type_2 . method_2 ( var_1 . method_3 ( ) ) ; java.lang.string var_3 = var_2 . method_4 ( var_4 ) ; if ( var_3 == null ) return null ; java.util.regex.matcher var_5 = var_6 . method_5 ( var_3 ) ; if ( var_5 . method_6 ( ) ) return var_5 . method_7 ( 1 ) ; else return null ; }
[0]: private boolean method_1 ( boolean var_1, java.util.list < type_1 > var_2 ) { if ( var_1 ) { for ( type_1 var_3 : var_2 ) { if ( (! ( type_2. method_2 ( var_3 ) ) ) && (! ( type_2. method_3 ( var_3 ) ) ) ) { return false ; } } } return true ; }

************

************
tgt: private < type_1 extends type_2 > void method_1 ( type_3 < type_1 > var_1 , type_3 < type_1 > var_2 , type_4 var_3 , type_4 var_4 ) throws type_5 { method_2 ( var_1 , var_2 , var_3 , var_4 ) ; method_2 ( var_2 , var_1 , var_4 , var_3 ) ; method_3 ( var_1 , var_2 , var_3 , var_4 ) ; method_3 ( var_2 , var_1 , var_4 , var_3 ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( type_2 id : var_1 ) { var_2. append ( ( ( type_3 ) ( id ) ). method_2 ( ) ). append ( char_1 ) ; } return var_2. tostring ( ). substring ( 0, ( ( var_2. length ( ) ) - int_1 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( type_1 . size ( ) ) > 0 ) { var_1 . method_4 ( ) ; var_1 = method_2 ( ) ; java.util.list < type_2 > var_2 = type_3 . method_3 ( var_3 , var_4 , var_5 , var_6 , var_1 ) ; var_7 . method_4 ( ) ; var_7 . method_5 ( var_2 ) ; var_8 . method_6 ( ) ; } var_9 . method_7 ( var_10 ) ; }
[0]: public boolean method_1 ( android.view.view var_1, int var_2, type_1 event ) { if ( ( event. method_2 ( ) ) == ( var_3 ) ) { if ( var_2 == ( var_4 ) ) { method_3 ( ) ; return true ; } } return false ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.system.out.println ( ( string_1 + var_2 ) ) ; if ( ( var_2 . isempty ( ) ) || ( var_2 . equals ( null ) ) ) { return new type_1 ( string_3 ) ; } java.lang.system.out.println ( ( string_2 + var_1 ) ) ; if ( ( var_1 . equals ( null ) ) || ( var_1 . isempty ( ) ) ) { var_1 = var_2 ; } return new type_1 ( string_4 , string_5 , var_1 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3, int var_4, boolean var_5 ) { if ( ( var_1!= null ) && ( ( var_1. method_2 ( ) )!= null ) ) { type_4 var_6 = var_1. method_2 ( ) ; if ( ( var_6. method_3 ( string_1 ) ) == true ) { var_6. method_4 ( string_1 ) ; var_6. method_5 ( string_2, false ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string title ) { if ( var_1 != null ) { method_2 ( var_1 ) ; if ( ( method_3 ( ) ) != null ) { method_3 ( ) . method_5 ( type_2 . method_6 ( method_7 ( ) , var_2 ) ) ; method_3 ( ) . method_8 ( true ) ; } } else { type_3 . method_9 ( var_3 , string_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { for ( type_2 var_3 : var_1 ) { if ( ( var_2. get ( i ). method_2 ( ) ) == ( var_3. method_2 ( ) ) ) { var_2. remove ( i ) ; } } } method_3 ( string_1, var_2 ) ; }

************

************
tgt: private double method_1 ( int var_1 ) { double var_2 = float_1 - ( float_2 * ( var_3 [ int_1 ] ) ) ; return java.lang.math.round ( ( ( ( ( ( double ) ( int_2 ) ) * var_1 ) * ( java.lang.math.pow ( float_3 , var_1 ) ) ) * var_2 ) ) ; }
[0]: private boolean method_1 ( ) { if ( this. method_2 ( ) ) { return false ; } for ( type_1 var_1 : var_2 ) { method_3 ( var_1 ) ; break ; } var_2. method_4 ( ) ; if ( true ) { return true ; } msg ( string_1 ) ; var_3. method_5 ( var_4, var_5. method_6 ( ) ) ; msg ( string_2 ) ; return true ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . method_2 ( new type_2 ( ) . var_2 ) ; var_1 . method_3 ( new type_3 ( int_1 , int_2 ) ) ; var_1 . method_4 ( var_3 ) ; var_1 . method_5 ( ) ; new type_4 ( ) . method_6 ( var_1 ) ; var_1 . method_7 ( false ) ; var_1 . method_8 ( true ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, boolean var_3 ) throws type_1 { if ( (! var_3 ) && ( var_4. contains ( var_1 ) ) ) throw new type_1 ( ( ( ( string_1 + var_1 ) + string_2 ) + ( type_2. method_2 ( var_1 ) ) ) ) ; type_2. method_3 ( var_1, var_2 ) ; var_4. add ( var_1 ) ; type_2. method_4 ( var_4 ) ; }

************

************
tgt: public java.util.date method_1 ( int var_1 , int var_2 ) { if ( ( var_3 . get ( var_1 ) ) == null ) { return new java.util.date ( 0 ) ; } if ( ( var_3 . get ( var_1 ) . var_4 ) == null ) { return new java.util.date ( 0 ) ; } for ( type_1 c : var_3 . get ( var_1 ) . var_4 ) { if ( ( c . id ) == var_2 ) { return c . date ; } } return new java.util.date ( 0 ) ; }
[0]: public static void add ( type_1 var_1, java.lang.string key, java.lang.object value ) { java.util.map < java.lang.string, java.lang.object > var_2 = type_2. method_1 ( var_1, true ) ; if ( var_2 == null ) { return ; } var_2. put ( key, value ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_2 ) != null ) { for ( type_1 var_1 : var_2 . method_2 ( ) ) { type_2 var_3 = var_2 . method_3 ( var_1 . method_4 ( ) ) ; method_5 ( var_3 , var_4 ) ; if ( method_6 ( ) ) { var_5 . info ( ( string_1 + var_3 ) ) ; } } } var_5 . info ( string_2 ) ; }
[0]: public void method_1 ( java.lang.string status, java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { var_4. method_2 ( var_5 ) ; if ( status. equals ( string_1 ) ) { method_3 ( var_2 ) ; } else if ( status. equals ( string_2 ) ) { method_4 ( string_3 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; var_2 . method_2 ( var_1 ) ; type_1 . assertequals ( string_1 , var_2 . method_3 ( ) ) ; java.lang.string var_3 = string_2 ; var_2 . method_2 ( var_3 ) ; type_1 . assertequals ( string_2 , var_2 . method_3 ( ) ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return var_1 ; } int index = var_1. method_2 ( var_2 ) ; if ( index > 0 ) { java.lang.string var_3 = var_1. substring ( 0, index ) ; if ( type_1. equals ( var_3 ) ) { return var_1. substring ( ( index + 1 ) ) ; } } return var_1 ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , int c ) { java.util.date date = null ; try { date = new type_2 ( var_2 . get ( c ) . method_2 ( ) ) . method_3 ( var_1 . tostring ( ) ) ; } catch ( type_3 var_3 ) { return var_1 . tostring ( ) ; } return new type_2 ( var_2 . get ( c ) . method_2 ( ) ) . format ( date ) ; }
[0]: public final void method_1 ( ) throws java.lang.exception { var_1. method_2 ( string_1, null, null ) ; java.util.hashmap < java.lang.string, java.lang.class <? > > var_2 = method_3 ( ) ; assertequals ( 0, var_2. size ( ) ) ; java.util.hashmap < java.lang.string, byte [ ] > data = method_4 ( ) ; assertequals ( 0, data. size ( ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_3 ; do { var_1 . method_2 ( var_2 ) ; int var_4 = var_1 . method_3 ( var_2 . size ( ) ) ; var_3 = var_2 . get ( ( var_4 - 1 ) ) ; var_3 . method_4 ( ) ; } while ( ! ( var_3 instanceof type_2 ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2 ) { type_4 var_3 = method_2 ( var_4, var_1 ) ; if ( var_2!= null ) { if ( var_1 == ( var_5 ) ) { var_3. method_3 ( var_2 ) ; } else { throw new type_5 ( string_1 ) ; } } return var_3 ; }

************

************
tgt: public type_1 method_1 ( double var_1 ) { type_2 . method_2 ( ( ( 0 < var_1 ) && ( var_1 <= 1.0 ) ) ) ; long var_2 = var_3 . method_3 ( ) ; long min = var_3 . method_4 ( var_3 . min ( ) ) ; long var_4 = ( ( ( long ) ( type_3 . method_5 ( ( var_1 * var_2 ) ) ) ) + min ) - 1 ; return var_3 . value ( var_4 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1. method_2 ( var_2 ) ; assertequals ( var_3, var_1 ) ; java.lang.string var_4 = type_1. method_3 ( var_1 ) ; assertequals ( var_2, var_4 ) ; var_4 = type_1. method_3 ( var_5 ) ; assertequals ( var_2, var_4 ) ; }

************

************
tgt: private boolean method_1 ( int var_1 ) { return ( ( ( ( var_1 == ( var_2 ) ) || ( var_1 == ( var_3 ) ) ) || ( var_1 == ( var_4 ) ) ) || ( var_1 == ( var_5 ) ) ) || ( var_1 == ( var_7 ) ) ; }
[0]: public final void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = type_2. method_2 ( ( ( var_3 ) + var_1 ) ) ; if ( (! ( var_4. method_3 ( ) ) ) && ( string_1. equals ( type_3. method_4 ( string_2 ) ) ) ) type_4. execute ( ( string_3 + ( var_5 ) ) ) ; var_4. method_5 ( var_2 ) ; var_4. method_6 ( method_7 ( ), var_6. method_8 ( ) ) ; method_9 ( false ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = method_2 ( var_2 class ) ; var_3 = method_2 ( var_4 class ) ; var_5 = method_2 ( var_6 class ) ; var_7 = new type_2 ( ) ; var_7 . method_3 ( 1 ) ; var_7 . method_4 ( int_1 ) ; var_7 . method_5 ( var_1 ) ; var_7 . method_6 ( var_5 ) ; }
[0]: private void method_1 ( type_1 var_1 ) throws type_2 { int var_2 = method_2 ( var_1 ) ; if ( var_2 < ( var_3 ) ) { switch ( var_2 ) { case 0 : var_1. method_3 ( string_1 ) ; var_1. method_3 ( java.lang.string.format ( string_2, type_3. tostring ( new java.util.date ( ) ) ) ) ; break ; } method_4 ( var_1, var_4 ) ; break ; } } }

************

************
tgt: public boolean method_1 ( int var_1 ) { if ( ( var_1 > ( this . var_2 ) ) && ( var_1 > 0 ) ) { return false ; } else { this . var_2 = - var_1 ; this . var_3 = var_1 ; this . method_2 ( ) ; this . method_3 ( this . var_2 ) ; this . method_4 ( ) ; return true ; } }
[0]: public void method_1 ( final java.lang.string var_1, final java.lang.string var_2, final java.util.list < java.lang.string > var_3, final java.util.list < java.lang.string > var_4, final java.lang.string var_5 ) { type_1 var_6 = new type_1 ( ) ; var_6. method_2 ( var_1 ) ; java.lang.string var_7 = type_2. method_3 ( var_6, var_3, var_4 ) ; org.testng.assert.assertequals ( var_7, var_5 ) ; }

************

************
tgt: public static java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( var_1 ) ; java.lang.string var_3 = new type_3 ( var_1 ) . method_2 ( ) ; java.lang.string var_4 = ( var_2 . getname ( ) . method_3 ( ) ) ? var_2 . getname ( ) . get ( ) : var_5 ; java.lang.string var_6 = ( var_2 . method_4 ( ) . method_3 ( ) ) ? var_2 . method_4 ( ) . get ( ) : var_7 ; return java.lang.string.format ( var_8 , var_3 , var_4 , var_6 ) ; }
[0]: public void method_1 ( ) throws java.lang.throwable { java.lang.string var_1 = method_2 ( ) ; java.util.list < java.lang.string > var_2 = method_3 ( var_3. method_4 ( ) ) ; var_2. add ( string_1 ) ; final java.lang.string var_4 = string_2 ; method_5 ( var_1, var_4, true, var_2 ) ; }

************

************
tgt: public void method_1 ( android.content.context context ) { super . method_1 ( context ) ; try { this . listener = ( ( type_2 ) ( context ) ) ; } catch ( type_3 var_2 ) { throw new type_4 ( ( string_1 + string_2 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( ) ; var_2. method_2 ( int_1 ) ; var_2. method_3 ( int_1 ) ; type_3. method_4 ( this, string_1, var_3 ). show ( ) ; var_2. method_5 ( var_4 ) ; if ( ( type_4. method_6 ( this, var_5 ) ) == ( var_6 ) ) { type_5. method_7 ( var_7, var_2, this ) ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 ) { type_2 < type_3 > var_3 = type_4 . method_3 ( var_2 ) ; if ( var_3 . method_4 ( ) ) { method_5 ( var_3 . get ( ) , var_1 ) ; } else { var_3 . method_7 ( new type_5 < type_3 > ( ) { public void method_8 ( type_3 var_4 ) { method_5 ( var_4 , var_1 ) ; } } ) ; } }
[0]: public type_1 method_1 ( ) { type_2 var_1 = super. method_1 ( ). method_2 ( ) ; var_1. method_3 ( type_3. method_4 ( var_2, this. name, var_3. gettime ( ). method_5 ( ) ) ) ; return var_1. build ( ) ; }

************

************
tgt: public void method_1 ( ) { java.util.iterator < type_1 > var_1 = var_2 . method_2 ( ) . iterator ( ) ; while ( var_1 . method_3 ( ) ) { type_2 var_3 = var_2 . get ( var_1 . method_4 ( ) ) ; if ( var_3 != ( var_4 ) ) { var_3 . method_5 ( false ) ; var_3 . method_5 ( true ) ; } } var_5 . method_6 ( ) ; }
[0]: public void method_1 ( type_1 event ) { if ( ( var_1. method_2 ( ) ) == 0 ) { type_2 var_2 = ( ( type_2 ) ( getactivity ( ) ) ) ; var_2. method_3 ( ) ; } else { var_1. method_4 ( ( ( var_1. method_2 ( ) ) - 1 ), true ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return ; } else { try { getconfig ( ) . method_2 ( var_2 ) ; } catch ( java.io.ioexception var_3 ) { var_4 . method_3 ( ) . method_4 ( var_5 , ( string_1 + ( var_2 ) ) , var_3 ) ; } } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_2. method_1 ( int_1 ) ; var_2. method_2 ( int_2 ) ; var_2. method_3 ( string_1 ) ; var_2. method_4 ( string_2 ) ; var_2. method_5 ( float_1 ) ; var_2. method_6 ( new type_3 ( java.util.calendar.getinstance ( ). method_7 ( ) ) ) ; var_1. method_8 ( var_2 ) ; }

************

************
tgt: public type_1 method_1 ( int var_1 ) { if ( ! ( method_2 ( ) ) ) { method_3 ( ) ; } if ( ( var_1 >= 0 ) && ( var_1 < ( var_2 . size ( ) ) ) ) { return var_2 . get ( var_1 ) ; } else { return null ; } }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, boolean var_3 ) { assert var_1!= null ; assert var_2!= null ; if ( var_1 instanceof type_3 ) { var_1. method_2 ( ) ; var_1. method_3 ( ) ; } var_1. method_4 ( ) ; var_1. method_5 ( ) ; var_1. method_6 ( ) ; var_1. method_7 ( ) ; var_1. method_8 ( ) ; var_1. method_9 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { int index = 0 ; for ( int i = 1 ; i < ( var_2 ) ; i ++ ) index += ( method_2 ( getcontext ( ) , i ) ) - 1 ; final int var_3 = index ; type_2 . method_4 ( method_5 ( ) , var_2 , var_3 ) ; }
[0]: public synchronized void method_1 ( type_1 var_1, boolean var_2 ) { this. var_3. put ( var_1, true ) ; if ( var_2 ) if ( ( var_4 ) && (! ( var_1. method_2 ( ). var_5 ) ) ) type_2. method_3 ( ). method_4 ( var_1. id ) ; }

************

************
tgt: public void method_1 ( ) { try { method_2 ( ) ; type_1 var_1 = ( ( type_1 ) ( context . method_3 ( var_2 ) ) ) ; var_1 . method_4 ( context . method_5 ( ) ) ; java.lang.system.exit ( 0 ) ; } catch ( java.lang.exception var_3 ) { java.lang.system.exit ( 0 ) ; } }
[0]: private type_1 method_1 ( ) { type_2 i = method_2 ( ) ; int var_1 = new java.util.random ( ). method_3 ( ( ( i. method_4 ( ). size ( ) ) - 1 ) ) ; return i. method_4 ( ). get ( var_1 ) ; }

************

************
tgt: private static type_1 method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; type_2 var_2 = type_3 . method_2 ( ) ; var_2 . method_3 ( null ) ; var_2 . method_5 ( ( string_1 + ( var_2 . getid ( ) ) ) ) ; return var_2 ; }
[0]: private type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; type_2 var_2 = method_3 ( ) ; type_3 var_3 = new type_3 ( var_1. method_4 ( ), string_1, var_2. method_4 ( ) ) ; type_3 var_4 = new type_3 ( var_1. method_5 ( ), string_2, var_2. method_5 ( ) ) ; var_4. method_6 ( string_3, string_3 ) ; type_1 var_5 = new type_1 ( string_4, var_1, var_2, var_3, var_4 ) ; return var_5 ; }

************

************
tgt: static type_1 < type_2 > method_1 ( int var_1 ) { type_1 < type_2 > list = new type_1 ( ) ; for ( int i = 1 ; i <= var_1 ; i ++ ) { list . add ( new type_2 ( ( string_1 + i ) , string_1 ) ) ; } return list ; }
[0]: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { if ( ( var_1. method_2 ( ) ) >= 1 ) { this. var_2 = ( ( type_2 ) ( var_1. method_3 ( 0 ) ) ) ; this. var_3 = ( ( java.util.list < type_3 > ) ( var_1. method_4 ( 1, null ) ) ) ; } else { this. var_3 = null ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws type_1 { type_2 var_3 = var_4 . method_2 ( ) ; boolean var_5 = var_3 . execute ( ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) + string_3 ) ) ; var_3 . method_3 ( ) ; var_4 . method_3 ( ) ; return var_5 ; }
[0]: public void start ( ) { new java.lang.thread ( ( ) - > { while ( true ) { final type_1 var_1 ; try { var_1 = method_1 ( ) ; } catch ( java.io.ioexception var_2 ) { var_2. method_2 ( ) ; return ; } new java.lang.thread ( ( ) - > method_3 ( var_1 ) ). start ( ) ; } } ). start ( ) ; } }

************

************
tgt: private type_1 method_1 ( java.util.arraylist < type_1 > var_1 ) { int index = java.lang.math.abs ( ( ( var_2 ) % ( var_1 . size ( ) ) ) ) ; for ( type_1 op : var_3 ) { if ( var_1 . get ( index ) . equals ( op ) ) { var_3 . remove ( op ) ; return op ; } } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( int_1, int_2 ) { public void method_2 ( long var_3 ) { } public void method_3 ( ) { var_4 = 1 ; method_4 ( ) ; } } ; var_2. start ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.util.list var_3 , boolean var_4 ) { if ( ( var_1 . method_2 ( ) ) == 0 ) { if ( ( var_5 ) == null ) { var_5 = new type_3 ( ) ; var_5 . method_3 ( string_1 , int_2 ) ; } var_3 . add ( ( string_2 + ( var_5 . method_4 ( string_1 ) ) ) ) ; } }
[0]: private void method_1 ( ) { if ( ( position. x ) < 0 ) position. x = 0 ; if ( ( position. x ) > int_1 ) position. x = 0 ; if ( ( position. y ) < int_2 ) position. y = int_2 ; if ( ( var_1 ) > 0 ) var_1 = 0 ; if ( ( var_1 ) < ( - int_1 ) ) var_1 = - int_1 ; }

************

************
tgt: private void method_1 ( ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( ) . method_3 ( ) ; int var_3 = new java.util.random ( ) . method_4 ( var_1 . size ( ) ) ; type_1 var_4 = var_1 . get ( var_3 ) ; java.lang.string var_5 = var_4 . method_5 ( ) ; method_6 ( var_5 ) ; method_7 ( false ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { if ( ( var_1. equals ( string_1 ) ) || ( var_1. equals ( string_2 ) ) ) { method_2 ( ) ; method_3 ( ) ; } else { java.lang.string var_2 = var_3 ; method_4 ( var_2 ) ; method_5 ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { var_2 . method_2 ( ( ( string_1 + var_1 ) + string_2 ) ) ; type_2 var_3 = method_3 ( var_1 . method_4 ( ) ) ; if ( var_3 == null ) { var_3 = method_5 ( var_1 ) ; } else { var_3 . method_6 ( true ) ; } if ( ! ( var_4 . contains ( var_3 ) ) ) { var_4 . add ( var_3 ) ; } if ( ( var_5 ) != null ) { var_5 . method_1 ( var_1 ) ; } }
[0]: public java.lang.string method_1 ( java.lang.string id, java.lang.string format ) throws type_1 { type_2 var_1 = var_2. method_2 ( id ) ; if ( ( var_1!= null ) && ( var_1. method_3 ( ). equals ( var_3 ) ) ) { return var_4. method_4 ( var_1 ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { var_1 . setstate ( var_2 ) ; var_3 . method_2 ( var_4 ) ; switch ( var_5 . method_3 ( ) ) { case var_6 : type_1 var_7 = ( ( type_1 ) ( var_8 . get ( var_9 ) ) ) ; if ( var_7 != null ) var_7 . method_4 ( ) ; break ; } }
[0]: public void method_1 ( type_1 p ) { try { byte id = type_1. getid ( p ) ; out. method_2 ( id ) ; p. method_3 ( out ) ; } catch ( java.io.ioexception var_1 ) { var_1. method_4 ( ) ; } catch ( java.lang.nullpointerexception var_1 ) { java.lang.system.out.println ( ( ( string_1 + ( this ) ) + string_2 ) ) ; method_5 ( ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int var_1 = ( ( int ) ( 1 + ( ( java.lang.math.random ( ) ) * int_1 ) ) ) ; int var_2 = int_2 ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( string_1 ) ; type_2 var_2 = new type_2 ( ) ; var_1. method_1 ( null ) ; var_1. method_2 ( new type_3 ( ( ( var_3 ) * ( var_4 ) ), ( ( var_5 ) * ( var_4 ) ) ) ) ; var_1. method_3 ( var_2 ) ; var_1. method_4 ( var_6 ) ; var_1. method_5 ( false ) ; var_1. method_6 ( ) ; var_1. method_7 ( true ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = type_2 . method_2 ( this ) . add ( var_2 , var_3 ) . add ( var_4 , var_5 ) . add ( var_6 , var_7 ) . build ( ) ; return type_2 . method_3 ( var_1 ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) var_1. add ( var_2. get ( i ). method_3 ( ). method_4 ( ) ) ; var_1. method_5 ( ( 1.0 / ( var_2. size ( ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 string , type_1 var_1 , type_2 var_2 ) { final type_3 var_3 = getcontext ( ) . method_3 ( string ) ; final type_3 var_4 = getcontext ( ) . method_3 ( var_1 ) ; final type_3 var_5 = ( ( type_3 ) ( var_3 . method_1 ( getcontext ( ) . method_4 ( ) . method_5 ( ) , var_4 ) ) ) ; return getcontext ( ) . method_6 ( var_5 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; final android.view.view var_3 = method_3 ( var_4 ) ; var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; method_4 ( ). method_5 ( 0, null, this ) ; if ( var_1 == null ) { method_6 ( ) ; } }

************

************
tgt: protected boolean method_1 ( java.lang.string var_1 ) { if ( ( var_1 != null ) && ( ! ( var_1 . contains ( string_4 ) ) ) ) { if ( ( ( var_1 . contains ( string_1 ) ) || ( var_1 . contains ( string_2 ) ) ) || ( var_1 . contains ( string_3 ) ) ) { return true ; } } return false ; }
[0]: public java.lang.string tostring ( ) { final java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( final type_1 string : this. method_1 ( ) ) { var_1. append ( string ). append ( string_1 ). append ( get ( string ) ). append ( char_1 ) ; } return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( var_2 ) ; var_3 = new type_1 ( var_4 ) ; var_5 = new type_2 ( ) ; var_6 = new type_3 ( ) ; var_7 = new type_4 ( ) ; var_9 = new type_6 ( ) ; var_8 = new type_5 ( var_6 , var_7 , var_5 , var_9 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { type_1. method_2 ( string_1, string_2 ) ; var_2 = var_1 ; var_3 = var_4 ; return ; } if ( var_5 ) { type_1. method_2 ( string_1, string_3 ) ; var_2 = var_6 ; var_3 = var_7 ; } else { type_1. method_2 ( string_1, string_4 ) ; var_2 = var_8 ; var_3 = var_9 ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { method_2 ( ) ; var_1 . method_3 ( new type_2 ( int_1 , 1 ) , new type_2 ( int_2 , int_1 ) ) ; var_1 . method_2 ( new type_2 ( 1 , 1 ) , char_1 ) ; method_4 ( var_2 , ( ( char [ ] [ ] ) ( var_1 . method_5 ( ) ) ) ) ; }
[0]: public < type_1 > type_1 method_1 ( type_2 < type_1 > var_1 ) { type_1 var_2 = ( null!= ( this. var_3 ) )? method_2 ( var_1 ) : null ; type_1 var_4 = method_3 ( var_1 ) ; type_3. method_4 ( ( ( null!= var_2 ) && ( null!= var_4 ) ) ) ; return null!= var_2? var_2 : var_4 ; }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < type_1 > param ; param = new java.util.arraylist < type_1 > ( ) ; param . add ( new type_2 ( new java.util.arraylist < type_1 > ( ) ) ) ; param . add ( new type_2 ( new java.util.arraylist < type_1 > ( ) ) ) ; var_1 . method_2 ( param ) ; assertequals ( param , var_1 . method_3 ( ) ) ; }
[0]: public void method_1 ( ) { try { java.net.url url = var_1. method_2 ( null ) ; fail ( ( string_1 + url ) ) ; } catch ( type_2 var_2 ) { var_3. method_3 ( ( string_2 + var_2 ) ) ; } catch ( java.lang.exception var_4 ) { var_3. error ( string_3, var_4 ) ; fail ( ( string_4 + var_4 ) ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_1 var_2 , type_2 var_3 , type_3 var_4 ) { var_4 . method_2 ( true ) ; var_1 . settext ( var_5 ) ; var_3 . settext ( string_1 ) ; var_3 . method_3 ( string_2 ) ; type_4 . method_4 ( var_1 , var_2 ) ; var_6 . target = var_7 ; var_10 . settext ( var_11 ) ; }
[0]: public void method_1 ( type_1 params ) { method_2 ( ). method_1 ( params, new type_2 ( ) { public void method_3 ( ) { method_4 ( ) ; } } ) ; var_2. method_5 ( new type_3 ( params. method_6 ( ). method_7 ( ) ) ) ; }

************

************
tgt: private type_1 method_1 ( ) { if ( this . keys . isempty ( ) ) { for ( type_1 key : type_1 . values ( ) ) { if ( key == ( var_1 ) ) continue ; this . keys . add ( key ) ; } } final int index = type_2 . method_2 ( this . keys . size ( ) ) ; final type_1 tmp = this . keys . get ( index ) ; this . keys . remove ( index ) ; return tmp ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_1. method_2 ( ) ; var_3 = type_2. method_3 ( ) ; if ( ( var_3 )!= null ) { type_3 var_4 = type_3. method_4 ( var_3 ) ; type_4 var_5 = new type_4 ( var_4 ) ; if ( var_6 ) { android.content.intent i = new android.content.intent ( var_7, var_8 class ) ; var_7. method_5 ( i ) ; } } }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; message = var_1 . start ( this . var_2 , this . var_3 ) ; java.lang.system.err.println ( ( string_1 + ( message ) ) ) ; if ( ( message ) != null ) { return message ; } else { return string_2 ; } }
[0]: public void method_1 ( type_1 var_1, boolean b ) { switch ( var_1. getid ( ) ) { case var_2 : break ; case var_3 : if ( b ) var_4. method_2 ( var_5 ) ; else var_4. method_2 ( var_6 ) ; break ; case var_7 : if ( b ) var_8. method_2 ( var_5 ) ; else var_8. method_2 ( var_5 ) ; break ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int x = var_2 . method_2 ( ) ; x = x + int_1 ; if ( x > ( var_3 ) ) { x = var_3 ; if ( ( var_4 ) != null ) { var_4 . method_3 ( ) ; } var_4 = null ; var_2 . method_4 ( false ) ; } var_2 . method_5 ( x , y ) ; }
[0]: public void method_1 ( type_1 event ) { if ( var_1. getname ( ). equals ( var_2 ) ) { new type_2 ( string_1 ) ; return ; } if ( var_3 ) { var_4. method_2 ( true ) ; ( ( type_3 ) ( type_4. method_3 ( ) ) ). method_4 ( ) ; } else { type_5. method_5 ( var_4 ) ; new type_6 ( var_5. method_6 ( ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 item ) { if ( ( item . method_2 ( ) ) == ( var_1 ) ) { android.content.intent var_2 = new android.content.intent ( method_3 ( ) , var_3 class ) ; var_2 . method_4 ( var_4 ) ; method_5 ( var_2 ) ; } return super . method_1 ( item ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; type_1 var_3 = new type_1 ( args ) ; type_2. method_1 ( var_3. method_2 ( ) ) ; while (! ( var_3. method_3 ( ) ) ) { type_2. show ( var_4 ) ; java.lang.string var_5 = var_1. method_4 ( ) ; java.lang.string var_6 = var_3. method_5 ( var_5 ) ; type_2. method_1 ( var_6 ) ; } var_1. method_6 ( ) ; }

************

************
tgt: private void method_1 ( ) { var_1 . execute ( new type_1 < java.lang.integer > ( var_2 . method_2 ( ) . method_3 ( ) . getvalue ( ) . getid ( ) ) { public void method_4 ( ) { var_3 . method_5 ( var_4 , true ) ; } } ) ; }
[0]: protected void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string target, java.lang.string var_4 ) { java.lang.string var_5 = this. method_2 ( var_1 ) ; type_1 var_6 = new type_1 ( var_5, var_2, var_3 ) ; type_2 var_7 = new type_2 ( this, var_6, var_5, target, var_4 ) ; this. method_3 ( var_7 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . init ( context ) ; type_2 response = new type_2 ( ) ; var_1 . method_3 ( new type_3 ( new type_4 ( string_2 ) ) , response ) ; type_5 . assertequals ( var_4 , response . method_4 ( ) ) ; }
[0]: public java.lang.boolean delete ( int id ) throws type_1, type_2, type_3 { type_4 var_1 = var_2. method_1 ( id ) ; var_1. method_2 ( var_3 ) ; if ( ( var_4. method_3 ( var_1 ) ) || ( var_5. method_4 ( var_6 ) ) ) { return ( var_2. update ( var_1 ). method_5 ( ). compareto ( var_3 ) ) == 0 ; } return false ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( final java.util.hashset < type_1 > set ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( set . size ( ) ) ; for ( type_1 c : set ) { if ( var_1 . isempty ( ) ) { var_1 . add ( c ) ; } else { var_1 . add ( method_2 ( c , var_1 ) , c ) ; } } return var_1 ; }
[0]: public void method_1 ( java.lang.void result ) { var_1. method_2 ( ). settext ( type_1. method_3 ( ) ) ; var_1. method_2 ( ). setenabled ( true ) ; var_1. method_4 ( ). method_5 ( type_1. method_6 ( ) ) ; var_2. method_7 ( ). method_8 ( true ) ; }

************

************
tgt: public static java.util.list < java.lang.integer > method_1 ( java.util.list < ? > list , int count ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( list . size ( ) ) ; ++ i ) { var_1 . add ( i ) ; } if ( ( list . size ( ) ) == count ) { return var_1 ; } type_1 . method_1 ( var_1 ) ; return var_1 . method_2 ( 0 , count ) ; }
[0]: public int method_1 ( ) { type_1 var_1 = new type_1 ( string_1, var_2 ) ; java.lang.string var_3 = var_1. format ( var_4. gettime ( ) ) ; if ( var_3. contains ( string_2 ) ) { return java.lang.integer. method_2 ( var_3. replace ( string_2, string_2 ) ) ; } else { return java.lang.integer. method_2 ( var_3 ) ; } }

************

************
tgt: public void assertequals ( java.lang.object var_2 , java.lang.object var_1 ) { if ( ( var_2 == null ) && ( var_1 == null ) ) return ; if ( ( var_2 != null ) && ( var_2 . equals ( var_1 ) ) ) return ; fail ( format ( var_2 , var_1 ) ) ; }
[0]: public java.util.arraylist method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( ( var_2. get ( i ). method_2 ( ) ) == string_1 ) { var_1. add ( var_2. get ( i ) ) ; } } return var_1 ; }

************

************
tgt: private boolean method_1 ( ) { java.io.file f = new java.io.file ( string_1 ) ; if ( f . method_2 ( ) ) { try { java.io.fileinputstream var_1 = new java.io.fileinputstream ( f ) ; type_1 var_2 = new type_1 ( var_1 ) ; var_3 = ( ( type_2 ) ( var_2 . method_3 ( ) ) ) ; } catch ( java.lang.exception var_4 ) { java.lang.system.out.println ( string_2 ) ; return false ; } } else return false ; return true ; }
[0]: public type_1 method_1 ( type_1 var_1, type_2 params ) throws java.io.ioexception { var_1. method_2 ( var_2 ) ; var_1. field ( var_3, method_3 ( ) ) ; var_4. method_1 ( var_1, params ) ; var_5. method_1 ( var_1, params ) ; var_6. method_1 ( var_1, params ) ; var_7. method_1 ( var_1, params ) ; var_1. method_4 ( ) ; return var_1 ; }

************

************
tgt: protected java.lang.string method_1 ( java.net.url var_2 ) throws java.lang.exception { final java.lang.string var_4 = type_1 . tostring ( var_2 , var_5 ) ; type_2 content = type_3 . method_3 ( string_1 , var_4 ) ; type_4 var_6 = var_7 . method_4 ( url , content ) ; type_5 response = var_6 . execute ( ) ; return type_6 . tostring ( new type_7 ( response . method_5 ( ) ) ) ; }
[0]: private static int method_1 ( int var_1 ) { var_2. set ( var_3, var_1 ) ; var_2. set ( var_4, var_5 ) ; var_2. set ( var_6, int_1 ) ; int var_7 = var_2. get ( var_8 ) ; int var_9 = ( var_2. get ( var_10 ) ) - 1 ; return ( ( var_7 - var_9 ) + int_2 ) / int_3 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = method_4 ( ) ; var_3 . method_7 ( var_6 ) ; var_7 = new android.content.intent ( this , var_8 class ) ; method_8 ( var_7 , var_9 , var_10 ) ; }
[0]: public void show ( type_1 var_1, type_2 var_2, type_3 var_3, java.util.list < java.lang.string > var_4, java.util.list < java.lang.string > var_5, java.util.list < java.lang.string > var_6 ) { this. var_4 = var_4 ; this. var_5 = var_5 ; this. var_6 = var_6 ; method_1 ( var_2, var_3 ) ; show ( var_1. method_2 ( ), string_1 ) ; }

************

************
tgt: public void method_1 ( java.util.collection < type_1 > var_1 , java.util.collection < type_2 > var_2 ) { if ( var_1 != null ) { this . var_3 . method_2 ( ) . method_3 ( var_1 ) ; this . var_4 . field ( var_5 , var_1 ) . method_4 ( ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_3 = this. var_4 ; for ( type_3 var_5 : var_6 ) { try { boolean var_7 = var_3. method_2 ( var_5 ) ; if (! var_7 ) { continue ; } else { type_4 var_8 = var_9. get ( var_2 ) ; method_3 ( var_8, var_5 ) ; } } catch ( java.lang.exception var_10 ) { java.lang.system.err.println ( string_2 ) ; var_10. method_4 ( ) ; } } } }

************

************
tgt: private void method_1 ( ) { this . var_1 = getcontext ( ) . method_2 ( type_1 . method_3 ( var_2 class , method_4 ( ) , new java.util.arraylist < java.lang.string > ( var_3 ) ) ) ; this . var_4 = getcontext ( ) . method_2 ( type_1 . method_3 ( var_5 class , method_4 ( ) , var_6 . method_5 ( ) ) ) ; }
[0]: public static boolean add ( type_1 var_1 ) { boolean var_2 = true ; for ( type_2 < type_1 > var_3 : var_4 ) { if (! ( var_3. add ( var_1 ) ) ) { var_2 = false ; } } type_3. method_1 ( ) ; type_3. method_2 ( var_1 ) ; return var_2 ; }

************

************
tgt: protected void method_1 ( final type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ) . method_6 ( true ) ; }
[0]: public static void method_1 ( ) { var_1. add ( new type_1 ( var_2 ) ) ; var_1. add ( new type_1 ( var_3 ) ) ; type_2. method_2 ( new type_3 ( ). method_3 ( new type_1 ( var_4 ) ). method_4 ( var_1 ). method_5 ( new type_1 ( var_5 ) ). method_5 ( new type_1 ( var_6, 1, int_1 ) ) ) ; }

************

************
tgt: public void method_1 ( android.content.context context , type_1 var_1 , int [ ] var_2 ) { type_2 . method_2 ( var_3 , string_1 ) ; for ( int var_4 : var_2 ) { if ( method_3 ( context , var_4 ) ) { var_1 . method_5 ( var_4 , method_6 ( context , var_4 ) ) ; method_4 ( context , var_4 ) ; } } super . method_1 ( context , var_1 , var_2 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; } if (! ( var_2 ) ) { var_2 = true ; method_2 ( ). method_3 ( ). add ( var_3, var_1 ). method_4 ( ) ; } else { method_2 ( ). method_3 ( ). remove ( var_1 ). method_4 ( ) ; var_1 = null ; var_2 = false ; } }

************

************
tgt: public boolean method_1 ( double var_1 , double var_2 , double var_3 , double var_4 ) { if ( ( ( ( ( var_5 ) == var_1 ) && ( ( var_6 ) == var_2 ) ) && ( ( var_7 ) == var_3 ) ) && ( ( var_8 ) == var_4 ) ) { return true ; } return false ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2 ) { try { type_2 var_3 = new type_2 ( new java.io.fileoutputstream ( var_2 ) ) ; var_3. method_2 ( var_1 ) ; var_3. method_3 ( ) ; var_4. method_4 ( java.lang.string.format ( var_5, var_2 ) ) ; } catch ( java.io.ioexception var_6 ) { throw new type_3 ( string_1, var_6 ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { try { var_1 . method_2 ( var_3 ) ; var_2 . method_3 ( var_3 , string_1 , string_1 ) ; } catch ( type_2 var_4 ) { var_4 . method_4 ( ) ; throw new type_1 ( var_4 ) ; } }
[0]: public boolean method_1 ( ) { boolean var_1 = super. method_1 ( ) ; if (! var_1 ) { type_1 var_2 = method_2 ( false ) ; if ( var_2!= null ) { type_2 var_3 = var_2. method_3 ( ) ; if ( var_3!= null ) { var_1 = var_3. method_4 ( ). method_5 ( ). method_1 ( var_3. method_6 ( ), null ) ; } } } return var_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; var_3 . put ( method_3 ( ) ) ; var_3 . put ( method_5 ( var_1 . method_6 ( ) ) ) ; var_4 . method_7 ( var_3 ) ; }
[0]: public void method_1 ( ) { method_2 ( var_1 ) ; type_1 var_2 = type_2. method_3 ( var_3 class ) ; var_4. method_4 ( float_1, var_2 ) ; type_3 var_5 = method_5 ( var_6 class ) ; if ( var_5!= null ) { asserttrue ( string_1, var_7. method_6 ( var_5 ) ) ; } else { fail ( string_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { boolean var_3 = var_4 . method_2 ( var_5 . method_3 ( ) ) ; if ( var_3 ) { var_6 . method_4 ( var_7 ) ; var_8 . method_4 ( var_9 ) ; } var_1 . method_8 ( ) ; }
[0]: public boolean contains ( java.lang.string key ) { int [ ] var_1 = method_1 ( key ) ; for ( int var_2 : var_1 ) { if ( var_3. method_2 ( ( var_2 % ( var_4 ) ) ) ) { return true ; } } return false ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.string title , java.lang.string msg ) { type_2 . method_1 ( var_1 , title , msg , false , null , new type_3 ( ) { public void method_2 ( type_4 var_2 , int var_3 ) { var_2 . method_3 ( ) ; } } ) ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_3. getstring ( string_1, string_2 ) ; if ( ( var_1. isempty ( ) ) || ( ( var_1. compareto ( var_2 ) ) < 0 ) ) { return true ; } else { return false ; } }

************

************
tgt: private void method_1 ( android.content.intent intent ) { final int var_1 = intent . method_2 ( var_2 , var_3 ) ; final type_1 var_4 = method_3 ( ) ; if ( ( var_4 == null ) || ( ( method_4 ( var_4 ) ) != var_1 ) ) { var_3 = var_1 ; method_6 ( ) . method_7 ( ) . replace ( var_5 , method_8 ( var_1 ) ) . commit ( ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = method_2 ( ) ; for ( int i = 0, count = var_1. method_3 ( ) ; i < count ; i ++ ) { android.view.view var_2 = var_1. method_4 ( i ) ; type_2 var_3 = var_4. method_5 ( var_2, i ) ; if ( var_3!= null ) var_2. method_6 ( var_3 ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 context ) { type_3 var_1 = ( ( type_3 ) ( method_2 ( context , 0 ) ) ) ; java.lang.string path = method_3 ( context , 0 ) ; type_4 var_2 = ( ( type_4 ) ( method_2 ( context , 1 ) ) ) ; type_1 var_3 = var_2 . value ( ) ; method_5 ( var_1 , path , var_3 ) ; var_3 . method_6 ( var_4 , var_5 ) ; return var_3 ; }
[0]: private void method_1 ( double var_1, double var_2, double var_3 ) { method_2 ( new type_1 ( type_2. method_3 ( ), type_2. method_4 ( ), type_3. method_5 ( var_1 ), type_3. method_5 ( var_3 ), type_3. method_5 ( var_2 ) ) ) ; }

************

************
tgt: static void method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1 , string_2 , string_3 } ; int n = type_1 . method_2 ( var_2 , string_4 , string_5 , var_3 , var_4 , null , var_1 , var_1 [ 0 ] ) ; if ( n == ( var_5 ) ) { type_2 . method_3 ( ) ; java.lang.system.exit ( 0 ) ; } else if ( n == ( var_6 ) ) { java.lang.system.exit ( 0 ) ; } }
[0]: public void put ( java.util.map < java.lang.string, java.lang.object > event ) { type_1 < type_2 > var_1 = var_2. method_1 ( ) ; long var_3 = var_1. method_2 ( ) ; try { type_2 var_4 = var_1. get ( var_3 ) ; if ( ( event!= null ) && ( ( event. size ( ) ) > 0 ) ) var_4. method_3 ( event ) ; } finally { var_1. method_4 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { type_1 var_2 = var_3 ; var_4 = string_1 ; var_6 = var_1 ; value = method_2 ( ) ; } else { var_4 = var_1 . format ( var_5 ) . tostring ( ) ; var_6 = var_1 ; if ( ( var_6 ) != null ) { value = ( ( method_2 ( ) ) + string_2 ) + ( method_3 ( ) ) ; } else { value = method_2 ( ) ; } } }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_1!= null ) && ( var_1. isempty ( ) ) ) { for ( type_1 item : list ) { if ( var_1. equals ( item. getname ( ) ) ) { return item ; } } } return null ; } return null ; }

************

************
tgt: public type_1 update ( type_1 var_1 ) throws type_2 , java.lang.nullpointerexception { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( ) ; } else if ( ( var_1 . getid ( ) ) == null ) { throw new type_2 ( ) ; } return var_2 . update ( var_1 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { if ( ( var_1. split ( string_1 ). length )!= int_1 ) { throw new type_2 ( ) ; } for ( type_3 type : type_3. values ( ) ) { if ( var_1. startswith ( type. type ) ) { return new type_1 ( var_1. split ( string_2 ) [ 1 ], type ) ; } } return new type_1 ( var_1. split ( string_2 ) [ 1 ], var_2 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 ) ; type_1 var_3 = new type_1 ( ) ; var_3 . method_3 ( string_1 ) ; var_3 . method_4 ( int_1 ) ; var_3 . method_5 ( string_2 ) ; type_2 . method_6 ( var_1 . method_7 ( var_2 , var_3 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { assert var_1!= null ; type_2 var_2 = type_3. method_2 ( var_1. method_3 ( ) ) ; if ( ( this. var_3 ) == var_2 ) { this. var_3 = null ; } else if ( method_4 ( ). contains ( var_2 ) ) { this. var_4 = var_2 ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_5 . method_4 ( var_2 . method_5 ( ) ) ; var_6 . setenabled ( false ) ; final android.view.view var_7 = method_2 ( var_8 ) ; var_7 . method_3 ( var_4 ) ; var_7 . method_6 ( new type_2 ( ) { public void method_1 ( android.view.view var_1 ) { var_5 . method_7 ( ) ; } } ) ; }
[0]: private void execute ( ) { java.lang.integer var_1 = null ; try { var_1 = var_2. method_1 ( var_3 ) ; } finally { } if ( ( var_1 == null ) || ( var_1 <= ( - 1 ) ) ) { return ; } java.util.calendar var_4 = java.util.calendar.getinstance ( ) ; var_4. method_2 ( new java.util.date ( ) ) ; var_4. add ( var_5, ( - var_1 ) ) ; var_6. method_3 ( var_4. gettime ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 ) throws java.lang.exception { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; var_2 . method_2 ( method_3 ( ) ) ; method_4 ( var_2 ) ; super . method_1 ( var_1 ) ; var_3 . method_5 ( method_6 ( ) ) ; }
[0]: public boolean method_1 ( final android.content.intent var_1, final android.content.intent response ) { java.lang.string var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) { type_1. method_3 ( response, string_1 ) ; } else { type_2 error = type_3. method_4 ( var_1 ) ; if ( error == ( var_3 ) ) { method_5 ( response, var_4 ) ; } else { type_1. method_6 ( response ) ; } } var_5. method_7 ( this. getclass ( ). getname ( ), string_2 ) ; return true ; } }

************

************
tgt: public int method_1 ( java.io.file source , java.io.file var_1 ) { status = var_2 ; try { status = var_3 ; status = method_2 ( source , var_1 ) ; } catch ( type_1 var_4 ) { method_3 ( var_4 . method_4 ( ) ) ; return var_5 ; } catch ( java.lang.exception var_4 ) { method_3 ( ( string_1 + ( var_4 . method_4 ( ) ) ) ) ; return var_5 ; } return status ; }
[0]: public static type_1 method_1 ( type_2 node, type_3 var_1, type_4 var_2 ) { return new type_1 ( node, type_5. method_2 ( ), ( - 1 ), var_2, type_6. method_3 ( ), type_7. method_4 ( ), var_1, null, null ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_2 . getview ( ) ) != null ) { type_1 var_1 = ( ( type_1 ) ( var_2 . getview ( ) . method_2 ( var_3 ) ) ) ; var_1 . settext ( ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + ( var_5 ) ) + string_3 ) + ( var_6 ) ) + string_4 ) ) ; } }
[0]: public type_1 < java.lang.string > start ( type_2 var_1 ) { this. var_1 = var_1 ; type_3 var_2 = type_4. method_1 ( ) ; var_3 = var_2. method_2 ( this ) ; if ( var_4 ) { return type_1. method_3 ( var_3 ) ; } return type_1. method_4 ( ) ; }

************

************
tgt: private < type_1 > void method_1 ( type_2 < type_1 > var_1 , type_3 var_2 ) { try { var_3 . method_2 ( type_4 . method_3 ( var_1 ) ) ; if ( var_3 . method_4 ( ) ) { var_3 . method_9 ( ) ; } else { var_1 . method_7 ( this ) ; var_3 . method_8 ( ) ; } } catch ( type_6 var_4 ) { var_3 . method_9 ( ) ; } catch ( java.lang.throwable var_4 ) { var_2 . method_10 ( var_1 , var_4 ) ; } }
[0]: public void method_1 ( ) { if ( ( key )!= ( - 1 ) ) { java.util.arraylist < type_1 > var_1 = var_2. get ( key ) ; var_1. remove ( this ) ; if ( var_1. isempty ( ) ) { var_2. remove ( key ) ; } key = - 1 ; } super. method_1 ( ) ; } }

************

************
tgt: protected boolean method_1 ( ) { if ( ( ( ( ( var_1 ) != null ) && ( ! ( method_2 ( ) ) ) ) && ( ( var_1 . method_3 ( ) ) == ( method_4 ( ) ) ) ) && ( ( var_1 . method_5 ( ) ) == ( ( ( method_6 ( ) ) + ( method_7 ( ) ) ) - int_1 ) ) ) { return true ; } return false ; }
[0]: public void method_1 ( android.view.view view ) { switch ( view. getid ( ) ) { case var_1 : android.content.intent intent = new android.content.intent ( this, var_2 class ) ; intent. method_2 ( var_3, this. var_4. method_3 ( ) ) ; method_4 ( intent ) ; break ; } }

************

************
tgt: public void add ( byte [ ] data , java.lang.string name , java.lang.string filename , java.lang.string var_1 ) { var_2 . add ( this . var_4 ) ; var_2 . add ( var_3 ) ; var_2 . add ( method_1 ( name , filename , var_1 ) ) ; var_2 . add ( data ) ; var_2 . add ( var_3 ) ; }
[0]: public void method_1 ( ) { while ( ( var_1 ) && (! ( var_2 ) ) ) { method_2 ( ) ; try { java.lang.thread. method_3 ( var_3 ) ; } catch ( java.lang.throwable t ) { if ( var_4 ) { java.lang.system.err.println ( t ) ; } } } method_4 ( ) ; } }

************

************
tgt: public synchronized void method_1 ( type_1 context ) throws java.io.ioexception { try { this . var_1 . method_1 ( ) ; } catch ( type_2 var_2 ) { type_3 . error ( var_2 ) ; } finally { if ( ( this . var_3 ) != null ) { this . var_3 . method_1 ( ) ; } } }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( ( var_3. get ( var_1. method_2 ( ) ) )!= null ) && ( ( var_3. get ( var_2. method_2 ( ) ) )!= null ) ) return 0 ; if ( ( var_3. get ( var_1. method_2 ( ) ) )!= null ) return 1 ; if ( ( var_3. get ( var_2. method_2 ( ) ) )!= null ) return - 1 ; return - 1 ; }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3 . method_2 ( 0 , int_1 , 0 , 0 , string_1 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , int_1 , int_1 , 0 , 0 ) ; var_1 = type_3 . method_2 ( 0 , int_1 , 0 , 0 , string_2 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , int_2 , int_1 , 0 , 0 ) ; }
[0]: public type_1 < type_2 > method_1 ( type_3 var_1, type_4 var_2, type_5 var_3 ) { type_2 var_4 = var_2. method_2 ( var_3 ) ; if ( var_4!= ( var_5 ) ) { type_6. get ( var_2 ). var_6. method_3 ( var_4. method_4 ( ) ) ; var_4. method_5 ( 1 ) ; return new type_1 < type_2 > ( var_7, var_4 ) ; } return new type_1 < type_2 > ( var_8, var_4 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { if ( ( ( ( ( i ( ) ) >= 0 ) && ( ( i ( ) ) < ( var_2 . length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( var_2 [ 0 ] . length ) ) ) return var_2 [ i ( ) ] [ j ] ; return null ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) )!= ( var_2 ) ) { ( var_3 ) ++ ; if ( ( ( var_3 ) % ( var_4 ) ) == 0 ) { method_3 ( var_1 ) ; } } }

************

************
tgt: long method_1 ( long time ) { long id = time ; for ( ; ; ) { long var_2 = var_3 . get ( ) ; if ( var_2 >= id ) id = var_2 + 1 ; if ( var_3 . method_2 ( var_2 , id ) ) break ; } return id ; }
[0]: public type_1 method_1 ( android.content.context context, int var_1 ) { this. method_2 ( context ) ; java.util.collections.sort ( this. var_2 ) ; if ( var_1 >= ( this. var_2. size ( ) ) ) { return null ; } else { for ( type_1 var_3 : var_2 ) { if ( ( java.lang.integer.parseint ( var_4. trim ( ) ) ) == var_1 ) { return var_3 ; } } } return null ; } }

************

************
tgt: public void method_1 ( ) { android.view.view view = ( ( type_1 ) ( context ) ) . method_2 ( ) ; if ( view == null ) view = new android.view.view ( context ) ; type_2 var_1 = ( ( type_2 ) ( context . method_3 ( var_2 ) ) ) ; if ( var_1 == null ) return ; var_1 . method_4 ( view . method_5 ( ) , 0 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 ; boolean var_2 ; for ( type_2 a : type_3. values ( ) ) { var_2 = a == ( type_4 ) ; var_1 = new type_1 ( a, var_3 ) ; type_5. assertequals ( string_1, ( var_2? var_3 : 0 ), var_1. method_2 ( ) ) ; type_5. assertequals ( string_2, ( var_2? 0 : var_3 ), var_1. method_3 ( ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 path ) { java.lang.string var_1 = type_2 . method_2 ( path . getname ( ) ) ; if ( var_1 != null ) { var_1 = var_1 . tolowercase ( ) ; } for ( java.lang.string var_2 : var_3 ) { if ( var_2 . equals ( var_1 ) ) { return true ; } } return false ; }
[0]: private void method_1 ( int var_1 ) { int var_2 = int_1 ; int var_3 = method_2 ( var_2 ) ; java.lang.string var_4 = method_3 ( ). getstring ( var_5 ) ; int var_6 = int_2 ; for ( int i = 0 ; i < var_6 ; i ++ ) { while ( var_7. contains ( var_3 ) ) { var_3 = method_2 ( var_2 ) ; } type_1. i ( var_4, ( var_3 + string_1 ) ) ; var_7. add ( var_3 ) ; } } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string result = string_1 ; if ( this . var_1 ) { result += string_2 ; } result += ( this . name ) + string_3 ; if ( this . var_2 ) { result += string_4 ; } result += ( string_5 + ( this . var_3 ) ) + string_6 ; return result ; }
[0]: public static void method_1 ( type_1 event ) { type_2 data = ( ( type_2 ) ( event. method_2 ( ). getdata ( var_1 ) ) ) ; if ( data!= null ) { event. getconfig ( ). method_3 ( var_2, new type_3 ( var_3 ) ) ; event. getconfig ( ). add ( var_2, string_1, var_4 ). method_4 ( string_2 ) ; } }

************

************
tgt: private void method_1 ( int var_1 , int var_2 , java.lang.string type ) { type_1 item = getdata ( var_2 , type ) . get ( var_1 ) ; data . add ( item ) ; var_3 = new type_2 ( this , var_4 , data ) ; if ( method_2 ( var_1 , var_2 , type ) ) { var_3 . method_3 ( ) . remove ( var_5 ) ; } var_6 . method_4 ( var_3 ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { type_3. method_2 ( var_2, ( string_1 + ( var_1. method_3 ( ) ) ) ) ; if (! ( var_1. method_3 ( ) ) ) { type_3. method_4 ( var_2, string_2, var_1. method_5 ( ) ) ; var_3 = 1 ; } else { var_3 = - 1 ; } }

************

************
tgt: public void method_1 ( int [ ] var_1 ) { var_2 [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( var_3 ) ; i ++ ) { var_2 [ i ] = index += var_1 [ ( i - 1 ) ] ; } type_1 . method_2 ( var_2 , 0 , var_1 , 0 , var_3 ) ; var_4 = index ; method_3 ( var_4 , false ) ; }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( new type_2 ( method_3 ( ). method_4 ( ), var_2 ), new type_3 ( var_1. method_5 ( ) ) ) ; type_4 var_3 ; if ( ( var_1. method_6 ( ) ) == 1 ) { var_3 = var_4 ; } else { var_3 = var_5 ; } method_2 ( new type_2 ( method_3 ( ). method_4 ( ), var_6 ), var_3 ) ; method_7 ( var_7 ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4 < type_2 > handle = new type_4 < type_2 > ( method_2 ( ) ) ; java.util.map < java.lang.string , java.lang.string > var_2 = new java.util.hashmap < > ( ) ; var_2 . put ( string_1 , var_3 ) ; var_2 . put ( string_2 , var_1 . getid ( ) ) ; method_3 ( var_2 , var_4 , handle ) ; return handle ; }
[0]: public static void method_1 ( type_1 [ ] var_1, type_1 var_2 ) { for ( type_1 var_3 : var_1 ) { if ( var_3 == null ) { continue ; } switch ( var_3. method_2 ( ) ) { case var_4 : case var_5 : var_6 = var_7 ; var_8 = var_9 ; break ; } } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; var_1 . method_2 ( method_3 ( ) . getcolor ( var_2 ) ) ; var_3 . method_4 ( var_4 ) ; var_5 . method_4 ( var_6 ) ; var_7 . settext ( method_3 ( ) . gettext ( var_8 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. i ( var_2, string_1 ) ; if ( ( var_3 )!= null ) var_1. method_2 ( var_4, var_3 ) ; var_1. method_3 ( var_5, var_6 ) ; var_1. method_4 ( var_7, var_8 ) ; }

************

************
tgt: public void method_1 ( java.lang.string data ) { try { type_2 var_1 = new type_2 ( data ) ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { var_2 . add ( var_1 . getstring ( i ) ) ; } method_2 ( int_1 ) ; } catch ( type_3 var_3 ) { var_3 . method_3 ( ) ; } }
[0]: public java.util.list < java.lang.object > method_1 ( java.util.list < java.lang.object > list ) { for ( type_1 var_1 : var_2 ) { if ( var_1 instanceof type_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 ) ) ; list. method_2 ( var_3. method_1 ( list ) ) ; } } return list ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( var_1 . method_3 ( ) . tostring ( ) ) ; var_2 . method_4 ( var_3 . method_3 ( ) . tostring ( ) ) ; var_2 = var_2 . method_5 ( ) ; return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( ( var_1 == null ) || (! ( var_1. method_2 ( string_1 ) ) ) ) { method_3 ( ) ; } else { var_2 = var_1. method_4 ( string_1 ) ; } if ( ( method_5 ( ) )!= null ) { } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( var_1 . size ( ) ) ; for ( type_2 info : var_1 ) { int start = info . method_2 ( ) ; int end = ( info . method_3 ( ) ) + 1 ; if ( start <= end ) { type_1 var_2 = new type_1 ( start , end ) ; list . add ( var_2 ) ; } } return list ; }
[0]: public type_1 method_1 ( ) { if ( isempty ( ) ) return null ; type_1 x = var_1 [ var_2 ] ; var_1 [ var_2 ] = null ; ( var_2 ) ++ ; if ( ( var_2 ) == ( n ) ) var_2 = 0 ; return x ; }

************

************
tgt: protected boolean method_1 ( java.lang.string var_1 ) { return ( ( ( java.lang.boolean . method_2 ( type_1 . method_3 ( string_1 ) ) ) || ( ( type_2 . method_4 ( ) ) == null ) ) || ( type_3 . equals ( type_2 . method_4 ( ) ) ) ) || ( type_2 . method_4 ( ) . equals ( var_1 ) ) ; }
[0]: public void execute ( type_1 var_1 ) { java.lang.string text = var_1. method_1 ( string_1 ) ; java.lang.string var_2 = string_2 ; type_2 var_3 = new type_2 ( text ) ; var_2 = var_3. method_2 ( ) ; var_4. method_3 ( new type_3 ( text, var_2 ) ) ; var_4. method_4 ( var_1 ) ; var_4. method_4 ( var_1 ) ; }

************

************
tgt: private java.lang.string method_1 ( java.util.arraylist < type_1 > list ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1 . append ( string_1 ) ; for ( int i = 0 ; i < ( list . size ( ) ) ; i ++ ) { var_1 . append ( list . get ( i ) . tostring ( ) ) . append ( string_2 ) ; } var_1 . method_2 ( var_1 . length ( ) ) ; var_1 . append ( string_3 ) ; return var_1 . tostring ( ) ; }
[0]: public type_1 < type_2 > method_1 ( final type_3 var_1, final type_4 < type_2, type_5 > var_2 ) { final type_1 < type_2 > var_3 = super. method_1 ( var_1, var_2 ) ; final type_6 < type_2, type_5 > var_4 = var_2. method_2 ( ) ; var_3. add ( new type_7 ( var_5, var_6, var_6, var_4 ) ) ; var_3. add ( new type_8 ( var_6 ) ) ; return var_3 ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string str ) { java.lang.string url = method_2 ( str ) ; java.lang.string content = null ; try { content = type_1 . method_3 ( url ) ; } catch ( type_2 var_1 ) { var_2 . method_4 ( string_1 , str ) ; return null ; } catch ( java.io.ioexception var_1 ) { var_2 . method_4 ( string_2 , url , var_1 . method_5 ( ) ) ; return null ; } return content ; }
[0]: public int method_1 ( java.lang.object var_1, java.lang.object var_2 ) { type_1 var_3 = ( ( type_1 ) ( var_1 ) ) ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; return java.lang.long. method_2 ( var_5. method_3 ( ) ). compareto ( java.lang.long. method_2 ( var_6. method_3 ( ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( ) ; switch ( var_1 . size ( ) ) { case 0 : break ; case 1 : { method_3 ( var_1 ) ; break ; } default : { } } }
[0]: public type_1 method_1 ( type_2 data ) { type_3 var_1 = new type_3 ( data. method_2 ( ), data. method_3 ( ) ) ; type_4. method_4 ( var_2, ( string_1 + ( data. method_5 ( ) ) ) ) ; type_5 var_3 = type_6. method_6 ( data. method_7 ( ). method_8 ( ) ) ; return new type_1 ( ). position ( var_1 ). title ( data. method_5 ( ) ). method_9 ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) { throw new java.lang.nullpointerexception ( ) ; } var_1 [ var_2 ] = item ; ++ ( size ) ; method_2 ( var_2 , method_3 ( ) ) ; var_2 = ( ++ ( var_2 ) ) % ( var_1 . length ) ; if ( ( size ) > ( ( var_1 . length ) / int_1 ) ) { method_4 ( ( ( var_1 . length ) * int_1 ) ) ; } }
[0]: public type_1 index ( ) { int var_1 = 1 ; int var_2 = type_2. method_1 ( string_1 ) ; java.lang.string name = string_2 ; type_3 < type_4 > var_3 = var_4. method_2 ( var_1, var_2, name ) ; return new type_1 ( string_3 ). data ( string_4, var_3 ) ; }

************

************
tgt: public static boolean method_1 ( final type_1 var_1 ) { final java.lang.string var_3 = type_3 . method_2 ( var_1 . gettype ( ) ) ; if ( ( ( type_4 . method_3 ( var_3 , string_1 ) ) || ( type_4 . method_3 ( var_3 , string_2 ) ) ) || ( type_4 . method_3 ( var_3 , string_3 ) ) ) { return true ; } else { return false ; } }
[0]: public void method_1 ( ) { for ( type_1 var_1 : type_2. values ) { type_3 var_2 = type_4. method_2 ( var_3 ) ; type_5. assertequals ( var_3, var_1. show, var_2. method_3 ( ) ) ; type_5. assertequals ( var_3, java.lang.integer.parseint ( var_4 ), var_2. method_4 ( ) ) ; type_5. assertequals ( var_3, java.lang.integer.parseint ( var_5 ), var_2. method_5 ( ) ) ; } }

************

************
tgt: public void method_1 ( final type_1 < java.lang.string > event ) { this . method_2 ( true ) ; final type_2 var_1 = ( ( type_2 ) ( event . method_3 ( ) ) ) ; final type_3 var_2 = ( ( type_3 ) ( var_1 . method_4 ( ) ) ) ; this . method_5 ( param , var_1 , var_2 ) ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; if (! ( var_1. method_2 ( ) ) ) { var_1. method_3 ( var_2 ) ; var_1. method_4 ( ) ; type_1 var_3 = ( ( type_1 ) ( method_5 ( ). method_6 ( var_4 ) ) ) ; var_3. method_7 ( var_1, var_5 ) ; } }

************

************
tgt: private int method_1 ( type_1 var_1 ) { type_2 target = new type_2 ( 0 , 0 ) ; int var_2 = 0 ; for ( type_1 var_3 : var_4 ) { type_2 var_5 = method_2 ( var_1 . method_3 ( ) , var_3 . method_3 ( ) ) ; int var_6 = var_1 . method_4 ( var_3 ) ; } return var_2 ; }
[0]: private void method_1 ( ) { type_1. method_2 ( var_1 ) ; var_2. message = method_3 ( var_3 ). gettext ( ). tostring ( ) ; var_2. date = new java.util.date ( ) ; var_2. method_4 ( ) ; var_1. method_5 ( ) ; }

************

************
tgt: void method_1 ( final type_1 var_1 , final type_2 listener ) { if ( listener == null ) throw new type_3 ( string_1 ) ; java.util.list < type_2 > var_3 = var_2 . get ( var_1 ) ; if ( var_3 != null ) { if ( ( var_3 . size ( ) ) > 1 ) var_3 . remove ( listener ) ; else method_2 ( var_1 ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = context. method_2 ( ) ; if ( var_1 instanceof type_3 ) { type_3 var_3 = ( ( type_3 ) ( var_1 ) ) ; type_4 var_4 = var_3. method_3 ( ) ; var_4. method_4 ( var_3 ) ; if ( var_4. method_5 ( ). isempty ( ) ) var_2. method_6 ( var_5, var_4 ) ; } var_2. method_6 ( var_5, var_1 ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 , java.lang.object var_2 , java.lang.string var_3 ) { if ( type_1 . equals ( var_1 , var_2 ) ) { method_2 ( true , ( ( var_3 + string_1 ) + var_2 ) ) ; } else { method_2 ( false , ( ( var_3 + string_2 ) + var_2 ) ) ; } }
[0]: protected void method_1 ( type_1 t, boolean var_1 ) { super. method_1 ( t, var_1 ) ; if ( t!= null ) { settext ( ( ( ( ( ( t. getid ( ) ) + string_1 ) + ( t. getname ( ) ) ) + string_1 ) + ( t. method_2 ( ) ) ) ) ; } else { var_2. method_3 ( new type_2 ( string_2 ) ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( method_2 ( ) ) >= int_1 ) { if ( ( var_1 ) >= int_2 ) { var_1 = 0 ; var_2 = false ; method_3 ( int_1 ) ; } else var_1 += 1 ; } else { if ( ( var_1 ) >= int_2 ) { method_4 ( int_1 ) ; method_3 ( int_1 ) ; } else var_1 += 1 ; } }
[0]: public java.lang.string method_1 ( int var_1 ) { type_1 < type_2 > item = first ; java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < var_1 ; i ++ ) { var_2 += ( item. tostring ( ) ) + ( item. method_2 ( ) ) ; } return var_2 ; }

************

************
tgt: private static boolean equals ( java.util.properties p , java.lang.string var_1 , java.lang.string var_2 , boolean var_3 ) { java.lang.string var_4 = p . method_1 ( var_1 ) ; if ( var_4 == null ) return false ; if ( ! var_3 ) var_4 = var_4 . tolowercase ( ) ; return var_4 . equals ( var_2 ) ; }
[0]: public void method_1 ( java.util.list < java.lang.string > var_1, java.lang.integer var_2, java.lang.integer var_3, java.lang.string var_4, java.lang.string var_5, java.lang.string var_6, java.lang.string var_7 ) { type_1 var_8 = new type_1 ( ) ; var_8. method_2 ( var_1 ) ; var_8. method_3 ( method_4 ( var_5, var_4, var_6 ) ) ; var_8. method_5 ( var_2 ) ; var_8. method_6 ( var_3 ) ; var_8. method_7 ( var_7 ) ; var_9. method_8 ( var_10, var_8 ) ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = method_2 ( ) ; java.util.list < type_1 > var_2 = null ; int var_3 = 0 ; while ( var_3 < ( ( var_1 . size ( ) ) - 1 ) ) { type_1 field = var_1 . get ( var_3 ) ; if ( var_4 . method_3 ( field ) ) { var_2 . add ( field ) ; } var_3 ++ ; } return var_2 ; }
[0]: public static type_1 method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. method_2 ( ). method_3 ( string_1, var_1 ). method_4 ( ) ; if ( type_2. method_5 ( var_2, var_5 ) ) { return var_3 ; } return null ; }

************

************
tgt: public void method_1 ( ) { type_2 < type_3 > var_4 = var_2 . method_2 ( var_3 class ) . method_3 ( string_1 , 1 ) . method_4 ( string_2 ) . method_5 ( int_1 , 1 ) ; assertnotnull ( var_4 ) ; type_3 [ ] array = new type_3 [ ] { var_5 } ; int i = 0 ; for ( type_3 var_6 : var_4 ) { assertequals ( array [ i ] , var_6 ) ; i ++ ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; var_3. info ( ( string_1 + var_2 ) ) ; if (! ( type_3. contains ( var_2 ) ) ) { type_4. method_3 ( ) ; } type_3. method_4 ( var_2 ) ; return type_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { boolean end = false ; while ( ! end ) { if ( ( var_1 . size ( ) ) > 0 ) { type_1 element = var_1 . remove ( 0 ) ; element . method_2 ( var_2 ) ; int id = element . method_3 ( ) ; element . method_5 ( ) ; end = ( var_3 ) == id ; } else { java.lang.thread . method_6 ( ) ; } } method_7 ( ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( ). method_2 ( var_2, var_3 ). method_2 ( var_4, var_5 ). method_2 ( var_6, var_7 ). method_3 ( var_8, type_2. method_4 ( method_5 ( ), var_9 ) ) ; if ( ( var_10 )!= null ) { var_1. method_6 ( var_11, var_10. method_7 ( ) ) ; } var_12. method_8 ( var_1. build ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . method_2 ( type_1 . get ( string_1 ) . method_3 ( type_2 . method_4 ( string_2 ) ) ) . method_6 ( type_3 . status ( ) . method_7 ( ) ) . method_6 ( type_3 . content ( ) . string ( type_4 . method_8 ( string_5 ) ) ) ; }
[0]: private void method_1 ( final type_1 var_1, final type_2 var_2, final type_3 path, final type_4 <?,? > var_3, final type_5 var_4 ) { type_6. method_2 ( string_1, var_2. name ( ), path, var_3 ) ; type_7. method_3 ( path, var_4, var_1 ) ; if ( var_3 instanceof type_8 ) { var_1. method_4 ( var_2, path, var_3 ) ; } else { var_1. put ( var_2, path, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == null ) return ; type_1 var_2 = method_2 ( var_3 , var_4 ) ; if ( ( var_2 != null ) && ( ( var_1 ) != null ) ) { var_1 . method_3 ( var_5 , var_2 ) ; var_6 . method_4 ( var_2 ) ; } var_7 . method_5 ( var_1 . build ( ) ) ; var_8 . show ( var_6 , var_9 ) ; var_10 = null ; }
[0]: public void method_1 ( int var_1 ) { if ( ( var_1 == ( - 1 ) ) || ( ( var_2 [ var_1 ] ) == null ) ) return ; if ( ( type_1. method_2 ( var_2 [ var_1 ]. method_3 ( ) ) ) > 0 ) { method_4 ( var_2 [ var_1 ] ) ; } else { if (! ( var_3 ) ) { method_4 ( var_2 [ var_1 ] ) ; } } var_2 [ var_1 ] = null ; } }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.string.format ( string_1 , var_2 . method_2 ( ) ) ; java.lang.string var_3 = java.lang.string.format ( string_1 , var_2 . method_3 ( ) ) ; return ( ( ( string_2 + var_1 ) + string_3 ) + var_3 ) + string_4 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { if ( ( var_2 )!= null ) return var_2 ; expr. method_1 ( var_1 ) ; if ( expr. method_2 ( ) ) var_2 = var_3 ; else if ( expr. method_3 ( ) ) var_2 = var_4 ; else throw new type_3 ( string_1 ) ; return var_2 ; }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = ( ( string_3 + ( this . method_1 ( ) ) ) + string_4 ) + ( this . method_2 ( ) ) ; var_1 = ( var_1 + "\n" ) + ( var_2 . tostring ( ) ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.lang.exception { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = var_1. method_2 ( ). method_3 ( var_3. string class ) ; type_2 var_4 = var_5. method_4 ( var_2, var_6 class ) ; java.lang.string data = this. method_5 ( var_4 ) ; this. method_6 ( data ) ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( var_1 . method_4 ( ) . settext ( var_4 ) ) ; var_1 . method_3 ( var_1 . method_4 ( ) . settext ( var_3 ) ) ; var_1 . method_5 ( this ) ; if ( ! ( var_5 . isempty ( ) ) ) { var_6 . method_6 ( var_7 ) ; var_8 . method_7 ( var_9 ) ; } else { var_8 . method_7 ( var_10 ) ; var_8 . settext ( getstring ( var_11 ) ) ; } }
[0]: public void method_1 ( long var_1, android.content.context context ) { this. var_1 = var_1 ; if ( ( var_1 < ( var_2 ) ) && ( var_1!= ( - 1 ) ) ) { type_1. i ( var_3, string_1 ) ; method_2 ( var_1, context ) ; } method_3 ( context ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , java.lang.object var_3 ) throws java.lang.exception { type_1 var_4 = ( ( type_1 ) ( var_1 ) ) ; type_3 var_5 = new type_4 ( var_4 ) ; if ( var_5 . method_2 ( ) ) { var_4 . method_3 ( string_2 , var_5 . method_4 ( ) ) ; } else { var_4 . method_3 ( string_2 , null ) ; } return true ; }
[0]: public void method_1 ( ) { try { var_1 = new type_1 ( string_1, int_1 ) ; var_1. method_2 ( true ) ; var_1. method_3 ( int_2 ) ; var_2 = new java.io.bufferedreader ( new type_2 ( var_1. method_4 ( ) ) ) ; var_3 = var_1. method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; } catch ( type_3 var_4 ) { } catch ( java.io.ioexception var_4 ) { } }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = method_2 ( var_1 , string_1 ) ; final java.lang.string var_3 = ( method_2 ( var_1 , string_2 ) ) + string_3 ; var_1 . method_1 ( ( ( var_2 + ( type_2 . method_3 ( var_1 . getname ( ) ) ) ) + var_3 ) ) ; var_4 . put ( var_1 . getname ( ) , var_1 . method_5 ( ) . method_6 ( ) ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { this. var_1 = var_1 ; if ( ( var_1. method_2 ( ). size ( ) )!= 0 ) { method_3 ( var_1 ) ; method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; } else { } return var_1 ; }

************

************
tgt: public double [ ] method_1 ( double [ ] var_1 ) { assert ( var_1 . length ) == int_1 ; int index = var_2 [ ( ( int ) ( ( ( var_1 [ 1 ] ) * ( var_3 ) ) + ( var_1 [ 0 ] ) ) ) ] ; double [ ] var_4 = this . var_5 . get ( index ) ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( var_1. method_2 ( ), var_1. method_3 ( ) ) ; var_3 = type_3. method_4 ( ). format ( new java.util.date ( ) ) ; type_4. method_5 ( var_4, ( ( ( string_1 + ( var_1. method_2 ( ) ) ) + string_2 ) + ( var_1. method_3 ( ) ) ) ) ; type_5. method_6 ( ). method_7 ( new type_6 ( var_2 ) ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > result = this . var_1 . select ( var_2 ) ; type_2 . assertequals ( int_1 , result . size ( ) ) ; type_2 . assertequals ( var_3 , result . get ( 0 ) ) ; type_2 . assertequals ( var_4 , result . get ( 1 ) ) ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( var_2, ( ( int ) ( - ( var_3. method_3 ( ) ) ) ), ( ( method_4 ( ) ) - ( var_3. method_5 ( ) ) ) ) ) { type_1. method_6 ( this ) ; method_7 ( ) ; } }

************

************
tgt: public int method_1 ( ) { var_1 = ( var_1 ) - ( var_2 ) ; if ( ( var_1 ) < 0 ) { var_3 = true ; int buf = var_1 ; var_1 = 0 ; return ( var_2 ) + ( buf + ( var_2 ) ) ; } return ( var_2 ) * int_1 ; }
[0]: public void method_1 ( ) { while ( ( var_1. size ( ) ) > 0 ) { type_1 var_2 = var_1. remove ( ) ; type_2. method_2 ( ). method_3 ( var_2 ) ; if (! ( var_2. method_4 ( ) ) ) ( ( type_3 ) ( var_2. method_5 ( ) ) ). method_6 ( var_2. method_7 ( ), var_2. method_8 ( ) ) ; } }

************

************
tgt: private int method_1 ( final type_1 first , final java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { return first . method_2 ( ) . compareto ( ( ( type_1 ) ( var_1 ) ) . method_2 ( ) ) ; } else if ( ( var_1 instanceof type_2 ) || ( var_1 instanceof type_3 ) ) { return - 1 ; } return 1 ; }
[0]: public void method_1 ( android.view.view view, type_1 var_1 ) { super. method_1 ( view, var_1 ) ; var_2 = new type_2 ( getactivity ( ), var_3 ) ; var_4. method_2 ( var_2 ) ; var_4. method_3 ( this ) ; if ( type_3. method_4 ( getactivity ( ) ) ) { method_5 ( true ) ; method_6 ( var_5 ) ; } else { type_4. method_7 ( getactivity ( ), getstring ( var_6 ), var_7 ). show ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception , type_2 { type_1 token ; if ( position . method_2 ( ) ) { token = position . method_3 ( ) ; } else { token = super . method_4 ( ) ; if ( token != null ) { position . add ( token ) ; } } return token ; }
[0]: public int method_1 ( int var_1 ) { int var_2 = var_1 ; if ( ( ( var_3 ) < ( java.lang.math.abs ( var_2 ) ) ) && ( var_1 < 0 ) ) { var_2 = - ( var_3 ) ; var_3 = 0 ; } else { var_3 += var_1 ; } if ( var_2!= 0 ) var_4. method_2 ( var_2 ) ; return var_2 ; }

************

************
tgt: private void method_1 ( ) { this . var_1 = new type_1 ( this ) ; this . var_2 = new type_2 ( this ) ; this . var_3 = new type_3 ( this ) ; this . var_4 = new type_4 ( this ) ; this . var_5 = new type_5 ( this ) ; this . var_6 = new type_6 ( this ) ; this . var_7 = new type_7 ( this ) ; }
[0]: public boolean method_1 ( ) { int var_1 = this. var_2. method_2 ( ) ; boolean var_3 = ( this. var_4 )!= var_1 ; if ( var_3 && ( type_1. method_3 ( ) ) ) type_1. method_4 ( string_1 ) ; this. var_4 = var_1 ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 writer ) { writer . method_2 ( var_1 ) ; writer . method_3 ( "id" , id ) ; writer . method_4 ( string_1 , var_2 ) ; writer . method_4 ( string_2 , var_3 ) ; writer . method_4 ( string_4 , var_5 ) ; writer . method_5 ( ) ; }
[0]: protected type_1 < type_2 > method_1 ( type_1 < type_2 > var_1 ) { try { type_3 var_2 = method_2 ( var_1 ) ; type_3 var_3 = var_4. method_1 ( var_2 ) ; var_1 = method_3 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { var_6. method_4 ( var_7, var_5, var_8 ) ; throw new type_4 ( var_5 ) ; } return var_1 ; }

************

************
tgt: public static type_1 method_1 ( android.content.context context , boolean var_1 ) { var_2 = true ; var_3 = ( var_1 ) ? var_4 : var_5 ; boolean var_6 = type_2 . method_2 ( context ) ; type_1 . method_3 ( context , ( ! var_6 ) ) ; return var_7 ; }
[0]: private void method_1 ( long var_1, type_1 var_2 ) { type_2 var_3 = var_4. method_2 ( ( string_1 + ( var_5 ) ), var_6 ) ; while ( var_3!= null ) { method_3 ( var_1, new type_3 ( context, ( ( java.util.list < java.lang.object > ) ( var_3. method_4 ( ) ) ), var_2. method_5 ( ), var_2. method_6 ( ) ) ) ; var_3 = var_4. method_2 ( ( string_1 + ( var_5 ) ), var_6 ) ; } }

************

************
tgt: public boolean method_1 ( int var_1 ) { int var_2 = 1 ; int var_3 = 0 ; while ( var_2 < ( var_1 + 1 ) ) { int temp = var_2 ; var_2 += var_3 ; var_3 = temp ; if ( var_2 == var_1 ) { return true ; } } return false ; }
[0]: public java.util.list < type_1 > method_1 ( double var_1, int var_2, type_2 var_3 ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( ) ; list. add ( new type_1 ( var_4, var_1 ) ) ; list. add ( new type_1 ( var_5 ). method_2 ( var_2 ) ) ; list. add ( var_3. build ( ). method_3 ( var_6 ) ) ; return list ; }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_2 var_2 ) { java.util.list < type_3 > var_3 = null ; type_4 var_4 = var_1 . method_2 ( ) ; if ( null != var_4 ) { var_3 = var_4 . method_3 ( ) ; } type_5 . method_4 ( var_2 , var_5 , ( var_3 == null ? new java.util.arraylist < type_3 > ( ) : var_3 ) ) ; }
[0]: public void method_1 ( type_1 error ) { if ( error!= null ) { method_2 ( ( ( ( string_1 + ( error. method_3 ( ) ) ) + string_2 ) + ( error. method_4 ( ) ) ) ) ; } else { type_2. method_5 ( var_1, string_3 ) ; method_2 ( string_3 ) ; } }

************

************
tgt: public boolean show ( ) { if ( var_2 ) { return true ; } if ( ! ( var_1 . method_1 ( ) ) ) { return false ; } for ( type_1 var_3 : var_4 ) { if ( ! ( type_2 . method_2 ( var_1 , var_3 , var_5 , data ) ) ) { return false ; } } var_2 = true ; return true ; }
[0]: private boolean method_1 ( type_1 c, type_2 var_1, type_3 var_2 ) { if ( ( var_2. count ( var_3 ) ) > 1 ) { var_4. add ( ( ( ( ( ( ( var_5. name ( ) ) + string_1 ) + ( c. name ) ) + string_2 ) + string_3 ) + ( var_1. name ) ) ) ; return false ; } return true ; }

************

************
tgt: public boolean method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ ] { method_2 ( ) , method_3 ( ) } ; boolean var_2 = false ; try { type_1 . method_4 ( this , var_1 ) ; var_2 = true ; } catch ( java.lang.exception var_4 ) { type_3 . method_5 ( var_5 , string_1 , var_4 ) ; } return var_2 ; }
[0]: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if (! ( obj instanceof type_1 ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return type_2. equals ( var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 a = type_2 . method_2 ( var_1 class ) ; type_2 . method_3 ( a . method_4 ( ) ) . method_5 ( string_1 ) ; type_3 . assertequals ( string_1 , a . method_4 ( ) ) ; type_2 . method_6 ( a , type_2 . method_7 ( 1 ) ) . method_4 ( ) ; type_2 . method_6 ( a , type_2 . method_8 ( ) ) . method_9 ( ) ; }
[0]: public void method_1 ( java.lang.boolean var_1 ) { if ( ( var_2. method_2 ( ) ) && ( ( method_3 ( ) )!= null ) ) { var_2. method_4 ( (! var_1 ) ) ; type_1. method_5 ( getactivity ( ), getactivity ( ). getstring ( ( var_1? var_3 : var_4 ), method_3 ( ) ) ) ; } }

************

************
tgt: protected type_1 method_1 ( ) throws type_2 { try { type_3 var_1 = type_4 . method_2 ( method_3 ( ) , var_2 class , true , false ) ; var_3 . info ( string_1 ) ; return var_1 . method_6 ( ) ; } catch ( type_5 var_4 ) { type_3 var_1 = new type_3 ( ) ; var_1 . method_7 ( ) ; var_3 . info ( string_2 ) ; return var_1 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( var_2 ) ; var_1. method_3 ( false ) ; var_1 = null ; } if ( ( var_3 )!= null ) { var_3. method_3 ( false ) ; var_3. method_4 ( ). method_5 ( var_3 ) ; var_3 = null ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { type_1 var_1 = type_2 . method_1 ( string_1 ) ; type_1 var_2 = type_2 . method_1 ( string_2 ) ; type_1 var_3 = type_2 . method_1 ( string_3 ) ; java.lang.system.out.println ( var_1 . get ( int_1 ) . method_3 ( ) ) ; type_3 var_4 = new type_3 ( ) ; var_4 . method_2 ( var_1 ) ; }
[0]: public void method_1 ( ) { method_2 ( var_1 ) ; type_1 var_2 = type_2. method_3 ( ). method_4 ( ) ; var_3 = ( ( float ) ( var_4 ) ) / float_1 ; var_5 = ( ( float ) ( var_2. height ) ) / float_2 ; var_6. method_5 ( var_3 ) ; var_6. method_6 ( var_5 ) ; var_7. method_7 ( var_3, var_3 ) ; var_8 = true ; }

************

************
tgt: public void method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; type_1 var_2 = new type_2 ( ) ; type_3 var_3 = var_2 . method_2 ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { asserttrue ( ( ( var_3 . method_3 ( ( ( ( var_1 . method_4 ( ) ) * ( ( var_4 ) - ( min ) ) ) + ( min ) ) , string_1 , string_2 ) ) > 0 ) ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { return ; } var_1 = ( ( type_1 ) ( method_2 ( ). method_3 ( var_2 ) ) ). method_4 ( ) ; if ( ( var_1 ) == null ) { return ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { this . var_3 . method_2 ( var_1 , var_2 , false , new type_1 < java.lang.string > ( ) { public void method_3 ( java.lang.string result ) { getview ( ) . method_4 ( ) . method_5 ( result ) ; } public void method_6 ( java.lang.throwable var_4 ) { } } ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; var_3. setvalue ( var_2. method_2 ( ) ) ; var_4. setvalue ( var_2. method_2 ( ) ) ; var_5. setvalue ( var_2. method_3 ( ) ) ; var_6. setvalue ( var_2. method_3 ( ) ) ; var_7. setvalue ( var_2. method_2 ( ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string name ) { if ( name . isempty ( ) ) { return string_1 ; } type_1 var_1 = type_2 . method_2 ( name ) ; if ( var_1 . isempty ( ) ) { return var_2 ; } return var_3 . get ( ) . method_3 ( var_1 , var_2 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.lang.thread var_3 = new java.lang.thread ( ) { public void method_3 ( ) { try { java.lang.thread. method_4 ( int_1 ) ; } catch ( type_2 var_4 ) { var_4. method_5 ( ) ; } finally { android.content.intent intent = new android.content.intent ( var_5 this, var_6 class ) ; method_6 ( intent ) ; method_7 ( var_7, var_8 ) ; } } } ; type_3 var_3 ; start ( ) ; } }

************

************
tgt: public static java.util.list < type_1 > method_1 ( type_2 var_1 , java.util.date var_2 ) { java.util.list < type_1 > result = new java.util.arraylist < type_1 > ( ) ; type_3 . method_2 ( var_1 . method_3 ( ) , result , var_2 , 0 , type_3 . method_4 ( ) , 0 , null , ( - 1 ) , false , null ) ; for ( type_1 b : result ) { b . method_5 ( var_1 ) ; } return result ; }
[0]: public void method_1 ( byte [ ] data, type_1 var_1 ) { if ( var_1 == null ) return ; float step = var_1. method_2 ( ). method_3 ( ) ; var_2 = type_2. method_4 ( step, ( step * ( var_1. method_2 ( ). method_5 ( ) ) ) ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 var_1 , type_4 var_2 , type_5 var_3 ) { type_2 var_4 = var_2 . method_2 ( var_3 ) ; if ( var_5 ) { return new type_1 < type_2 > ( var_6 , var_4 ) ; } type_6 var_7 = this . method_3 ( var_1 , var_2 , float_1 ) ; return this . method_4 ( var_4 , var_1 , var_2 , var_3 , var_7 ) ? new type_1 < type_2 > ( var_8 , var_4 ) : new type_1 < type_2 > ( var_6 , var_4 ) ; }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { type_4. method_2 ( var_2, ( string_1 + ( response. method_3 ( ) ) ) ) ; type_4. method_2 ( var_2, ( string_2 + ( type_5. method_4 ( var_1. method_5 ( ). method_6 ( ) ) ) ) ) ; switch ( response. method_6 ( ). var_3 ) { case int_1 : break ; default : type_6. method_7 ( new type_7 ( var_1, response ) ) ; break ; } }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , java.lang.string [ ] var_2 ) { type_2 var_3 = new type_2 ( ) ; java.lang.string [ ] var_4 = new java.lang.string [ ] { string_1 , string_2 } ; java.lang.string var_5 = var_3 . method_2 ( var_4 , null , null ) ; type_4 var_6 = var_7 . method_4 ( var_5 , null ) ; return new type_1 ( var_6 ) ; }
[0]: private java.util.date method_1 ( java.lang.string var_1, boolean var_2 ) { for ( type_1 format : var_3 ) { try { java.util.date result = format. method_2 ( var_1 ) ; return ( result. gettime ( ) ) > ( var_4 )? new java.util.date ( var_4 ) : result ; } catch ( type_2 var_5 ) { type_3. method_3 ( var_6, string_1 ) ; } } if ( var_2 ) return method_4 ( var_1, false ) ; else return null ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 . assertequals ( int_1 , method_2 ( int_1 , 0 ) ) ; type_1 . assertequals ( int_1 , method_2 ( int_2 , 1 ) ) ; type_1 . assertequals ( int_1 , method_2 ( int_3 , ( - 1 ) ) ) ; type_1 . assertequals ( int_1 , method_2 ( int_4 , int_5 ) ) ; type_1 . assertequals ( int_6 , method_2 ( int_7 , int_8 ) ) ; }
[0]: private type_1 method_1 ( java.util.list < type_1 > var_1 ) { java.lang.string var_2 = var_3. getvalue ( ) ; for ( type_1 var_4 : var_1 ) { if ( var_4. method_2 ( ). getname ( ). equals ( var_2 ) ) { return var_4 ; } } return null ; }

************

************
tgt: private boolean method_1 ( boolean var_1 , java.util.list < type_1 > var_2 ) { if ( var_1 ) { for ( type_1 var_3 : var_2 ) { if ( type_2 . method_2 ( var_3 ) ) { return true ; } } return false ; } return true ; }
[0]: private long method_1 ( type_1 var_1 ) { long var_2 ; long var_3 = type_2. method_2 ( ) ; if ( ( var_1. method_3 ( ) ) == ( var_4 ) ) var_2 = var_1. method_4 ( ) ; else var_2 = var_3 ; long var_5 = ( var_3 - var_2 ) / ( var_6 ) ; return type_3. method_5 ( 0, var_5 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) { if ( var_1 != null ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( type_2 id : var_1 ) { var_2 . append ( ( ( type_3 ) ( id ) ) . method_2 ( ) ) . append ( char_1 ) ; } return var_2 . tostring ( ) . substring ( 0 , ( ( var_2 . length ( ) ) - int_1 ) ) ; } else { return null ; } }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 a = new type_2 ( ) ; for ( type_3 error : errors ) { a. put ( error ) ; } var_1. put ( string_1, a ) ; return var_1 ; }

************

************
tgt: public boolean method_1 ( android.view.view var_1 , int var_2 , type_1 event ) { if ( ( event . method_2 ( ) ) == ( var_3 ) ) { switch ( var_2 ) { case var_4 : method_3 ( ) ; return true ; default : break ; } } return false ; }
[0]: int method_1 ( java.lang.object value, int var_1 ) { int var_2 = var_1 ; if ( ( value!= null ) && ( value instanceof java.lang.string ) ) { try { var_2 = java.lang.integer. method_2 ( ( ( java.lang.string ) ( value ) ) ) ; } catch ( type_1 var_3 ) { } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , int var_4 , boolean var_5 ) { if ( ( var_1 != null ) && ( ( var_1 . method_2 ( ) ) != null ) ) { type_4 var_6 = var_1 . method_2 ( ) ; if ( ( var_6 . method_3 ( string_1 ) ) == true ) { var_6 . method_4 ( string_1 ) ; } } }
[0]: org. junit. assert. assertthat ( errors, contains ( new type_1 ( string_1 ), new type_1 ( string_2 ) ) )

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { for ( type_2 var_3 : var_1 ) { if ( ( var_2 . get ( i ) . method_2 ( ) ) == ( var_3 . method_2 ( ) ) ) { var_2 . remove ( i ) ; } } } method_3 ( filename , var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2. method_1 ( var_1 ) ; var_3. method_2 ( var_4, var_4. method_3 ( var_1 ) ) ; var_5. method_2 ( var_4, var_4. method_4 ( ) ) ; var_6. method_1 ( var_1 ) ; var_7. method_1 ( var_1 ) ; var_8. method_1 ( var_1 ) ; var_9. method_1 ( var_1 ) ; } }

************

************
tgt: private boolean method_1 ( ) { if ( this . method_2 ( ) ) { return false ; } for ( type_1 var_1 : var_2 ) { method_3 ( var_1 ) ; break ; } var_2 . method_4 ( ) ; msg ( string_1 ) ; var_3 . method_5 ( var_4 , var_5 . method_6 ( ) ) ; msg ( string_2 ) ; return true ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; for ( type_1 var_1 : method_2 ( ). method_3 ( ) ) { type_2 var_2 = method_4 ( var_1 ) ; if ( var_2. method_5 ( ) ) { var_2. method_6 ( false, true ) ; var_2. method_7 ( true ) ; } } var_3. method_8 ( ) ; var_4. method_8 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , boolean var_3 ) throws type_1 { if ( ( ! var_3 ) && ( var_4 . contains ( var_1 ) ) ) throw new type_1 ( ( ( ( string_1 + var_1 ) + string_2 ) + ( type_2 . method_2 ( var_1 ) ) ) ) ; type_2 . method_3 ( var_1 , var_2 ) ; if ( ! ( var_4 . contains ( var_1 ) ) ) var_4 . add ( var_1 ) ; type_2 . method_4 ( var_4 ) ; }
[0]: public void method_1 ( type_1 var_1, int position ) { if ( ( var_1. getid ( ) ) == ( var_2 ) ) { type_2 var_3 = var_4. method_2 ( position ) ; for ( type_3 var_5 : method_3 ( ) ) { var_5. method_4 ( ). method_5 ( var_3 ) ; } method_6 ( var_6, 0, 0 ) ; } }

************

************
tgt: public static void add ( type_1 var_1 , java.lang.string key , java.lang.object value ) { java.util.map < java.lang.string , java.lang.object > var_2 = type_2 . method_1 ( var_1 , null , true ) ; if ( var_2 == null ) { return ; } var_2 . put ( key , value ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { try ( type_3 var_2 = method_2 ( var_1, string_1 ) ) { var_3. method_3 ( var_1. method_4 ( ), var_2 ) ; if ( (! ( var_4 ) ) || ( ( var_5 ) == null ) ) { method_5 ( var_1 ) ; var_4 = true ; } } catch ( java.lang.exception var_6 ) { throw new type_2 ( var_6 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string status , java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { var_4 . method_2 ( var_5 ) ; if ( status . equals ( string_1 ) ) { method_3 ( this . var_3 ) ; } else if ( status . equals ( string_2 ) ) { method_4 ( string_3 ) ; } }
[0]: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; while ( ( method_1 ( ) )!= null ) { var_1 += method_2 ( ) ; if ( ( method_1 ( ) )!= null ) { var_1 += string_2 ; } } var_1 += string_3 ; return var_1 ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return null ; } int index = var_1 . method_2 ( var_2 ) ; if ( index > 0 ) { java.lang.string var_3 = var_1 . substring ( 0 , index ) ; if ( type_1 . equals ( var_3 ) ) { return var_1 . substring ( ( index + 1 ) ) ; } } return var_1 ; }
[0]: public void method_1 ( type_1 var_1, java.lang.object var_2, java.lang.object var_3 ) { var_4. method_2 ( ). setvalue ( java.lang.string. method_3 ( ( ( int ) ( var_5. getvalue ( ) ) ) ) ) ; var_6. method_4 ( ). method_5 ( ( ( var_5. getvalue ( ) ) / int_1 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . method_2 ( string_1 , null , null ) ; java.util.hashmap < java.lang.string , java.lang.class < ? > > var_2 = method_3 ( ) ; assertequals ( 0 , var_2 . size ( ) ) ; java.util.hashmap < java.lang.string , byte [ ] > data = method_4 ( ) ; assertequals ( 0 , data . size ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( ) ; var_3 = new type_2 ( int_1, new type_3 ( ) { public void method_1 ( type_1 var_1 ) { if ( var_2. method_3 ( ) ) var_2. method_4 ( ) ; } } ) ; var_3. method_5 ( true ) ; var_3. start ( ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 ) { type_4 var_3 = method_2 ( var_4 , var_1 ) ; if ( ( var_2 == null ) && ( var_1 != ( var_5 ) ) ) { throw new type_5 ( string_1 ) ; } var_3 . method_3 ( var_2 ) ; return var_3 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { boolean var_2 = false ; java.util.iterator < type_1 > iterator = var_3. iterator ( ) ; while ( iterator. method_2 ( ) ) { type_1 var_4 = iterator. method_3 ( ) ; if ( var_4!= null ) { iterator. remove ( ) ; var_2 = true ; break ; } } return var_2 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string var_1 = type_1 . method_2 ( var_2 ) ; assertequals ( var_3 , var_1 ) ; java.lang.string var_4 = type_1 . method_3 ( var_1 ) ; assertequals ( var_2 , var_4 ) ; var_4 = type_1 . method_3 ( var_2 ) ; assertequals ( var_2 , var_4 ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 var_2 = new type_2 ( var_1 ) ; type_3 var_3 = type_3. method_2 ( ( ( ( var_4 ) * int_1 ) + ( var_5 ) ) ) ; var_3. method_3 ( id. method_4 ( ) ) ; var_3. method_3 ( id. method_5 ( ) ) ; var_2. method_6 ( var_3. array ( ) ) ; method_7 ( var_6, var_2 ) ; method_7 ( var_7, var_2 ) ; var_2. method_8 ( ) ; }

************

************
tgt: public final void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = type_2 . method_2 ( ( ( var_3 ) + var_1 ) ) ; if ( ( ! ( var_4 . method_3 ( ) ) ) && ( string_1 . equals ( type_3 . method_4 ( string_2 ) ) ) ) type_4 . execute ( null , ( string_3 + ( var_5 ) ) ) ; var_4 . method_5 ( var_2 ) ; var_4 . method_6 ( method_7 ( ) , var_6 . method_8 ( ) ) ; method_9 ( false ) ; }
[0]: public void method_1 ( ) throws type_1, type_2 { java.lang.string var_1 = string_1 ; type_3 var_2 = var_3 ; type_4 var_4 = new type_5 ( var_2 ) ; type_6 var_5 = new type_6 ( var_4 ) ; type_7 query = new type_8 ( var_1 ) ; java.util.set < java.lang.string > var_6 = var_5. method_2 ( query ) ; for ( java.lang.string var_7 : var_6 ) java.lang.system.out.println ( var_7 ) ; java.lang.system.out.println ( java.lang.integer.parseint ( string_2 ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws type_2 { int var_2 = method_2 ( var_1 ) ; if ( ( var_2 > 0 ) && ( var_2 < ( var_3 ) ) ) { switch ( var_2 ) { case 0 : var_1 . method_3 ( string_1 ) ; var_1 . method_3 ( java.lang.string.format ( string_2 , type_3 . tostring ( new java.util.date ( ) ) ) ) ; break ; } } method_4 ( var_1 , var_4 ) ; }
[0]: public void method_1 ( final type_1 var_1 ) { if ( var_2. method_2 ( var_3, var_4 ) ) open. method_3 ( ) ; if ( var_5. remove ( var_1 ) ) var_6. method_4 ( ). method_5 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ; var_1. method_8 ( ) ; } }

************

************
tgt: public void method_1 ( final java.lang.string var_1 , final java.util.list < java.lang.string > var_3 , final java.util.list < java.lang.string > var_4 , final java.lang.string var_5 ) { type_1 var_6 = new type_1 ( ) ; var_6 . method_2 ( var_1 ) ; java.lang.string var_7 = type_2 . method_3 ( var_6 , var_3 , var_4 ) ; org.testng.assert.assertequals ( var_7 , var_5 ) ; }
[0]: protected void method_1 ( ) { type_1. method_2 ( string_1, string_2 ) ; type_2 var_1 = new type_3 ( var_2 ). method_3 ( ). build ( ) ; var_3 = new type_4 ( this ). method_4 ( var_4, var_1 ). build ( ) ; var_3. method_5 ( ) ; super. method_1 ( ) ; var_5 = type_5. method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.throwable { java.lang.string var_1 = method_2 ( ) ; java.util.list < java.lang.string > var_2 = method_3 ( var_3 . method_4 ( ) ) ; var_2 . add ( string_1 ) ; final java.lang.string var_4 = string_2 ; method_5 ( var_1 , var_2 , var_4 , true ) ; }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2, float x, float y, float var_3, float var_4 ) { if ( var_1!= null ) { var_2. method_2 ( ) ; var_1. method_3 ( x, ( ( ( var_5 ) - y ) - ( var_1. method_4 ( ) ) ) ) ; var_1. method_5 ( var_3, var_4 ) ; var_1. method_6 ( var_2 ) ; var_2. end ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( ) ; var_2 . method_2 ( int_1 ) ; var_2 . method_3 ( int_1 ) ; var_2 . method_5 ( var_4 ) ; if ( ( type_4 . method_6 ( this , var_5 ) ) == ( var_6 ) ) { type_5 . method_7 ( var_7 , var_2 , this ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; type_1 var_1 = type_1. method_2 ( ) ; type_2 var_2 = var_1. method_3 ( ) ; type_3 var_3 = ( ( type_3 ) ( method_4 ( ) ) ) ; for ( type_4 var_4 : var_3. method_5 ( ) ) { var_2. method_6 ( var_4 ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_2 var_1 = super . method_1 ( ) . method_2 ( ) ; if ( ( var_3 ) != null ) { var_1 . method_3 ( type_3 . method_4 ( var_2 , this . name , var_3 . gettime ( ) . method_5 ( ) ) ) ; } return var_1 . build ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { double var_2 = type_3. method_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; int var_3 = type_4. method_5 ( var_4, var_5 ) ; var_2 = method_6 ( var_2, var_3 ) ; return new type_1 ( var_6, var_2, this, var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( var_1 . method_2 ( ) ) == 0 ) { getactivity ( ) . method_3 ( ) ; } else { var_1 . method_4 ( ( ( var_1 . method_2 ( ) ) - 1 ) , true ) ; } }
[0]: public int method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : method_2 ( ) ) { if ( var_1. contains ( var_2. method_3 ( ) ) ) { var_1. add ( var_2. method_3 ( ) ) ; } } return var_1. size ( ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_2 . method_2 ( int_2 ) ; var_2 . method_3 ( string_1 ) ; var_2 . method_4 ( string_2 ) ; var_2 . method_5 ( float_1 ) ; var_2 . method_6 ( new type_3 ( java.util.calendar.getinstance ( ) . method_7 ( ) ) ) ; java.lang.system.out.println ( var_1 . method_8 ( var_2 ) ) ; }
[0]: public java.lang.string add ( type_1 var_1, java.lang.string line ) { boolean var_2 = method_1 ( line, var_1. method_2 ( ) ) ; boolean var_3 = method_1 ( line, var_1. method_3 ( ) ) ; if ( ( var_2 && var_3 ) || ( (! var_2 ) && (! var_3 ) ) ) { return ( string_1 + line ) + ( java.lang.integer.tostring ( line ) ) ; } else if ( var_2 && (! var_3 ) ) { return ( string_1 + line ) + ( java.lang.integer.tostring ( line ) ) ; } return null ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 , boolean var_3 ) { assert var_1 != null ; if ( var_1 instanceof type_3 ) { var_1 . method_2 ( ) ; var_1 . method_3 ( ) ; } var_1 . method_4 ( ) ; var_1 . method_5 ( ) ; var_1 . method_6 ( ) ; var_1 . method_7 ( ) ; var_1 . method_8 ( ) ; var_1 . method_9 ( ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { if ( ( this. var_1. size ( ) )!= 0 ) { for ( int i = 0 ; i < ( this. var_1. size ( ) ) ; i ++ ) { if ( this. var_1. get ( i ). equals ( var_1 ) ) { return true ; } else { return false ; } } } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { this . var_3 . put ( var_1 , true ) ; if ( var_2 ) if ( ( var_4 ) && ( ! ( var_1 . method_2 ( ) . var_5 ) ) ) type_2 . method_3 ( ) . method_4 ( var_1 . id ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { var_3. show ( ) ; java.lang.string var_4 = var_5. method_2 ( ). tostring ( ) ; method_3 ( var_4 ) ; type_2. method_4 ( this ). method_5 ( var_4 ). method_6 ( new type_3 ( this ) ). method_7 ( var_6 ). method_8 ( ( ( type_4 ) ( method_9 ( var_7 ) ) ) ) ; var_3. method_10 ( ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_2 i = method_2 ( ) ; int var_1 = new java.util.random ( ) . method_3 ( ( ( i . method_4 ( ) . size ( ) ) - 1 ) ) ; java.lang.system.out.println ( i . method_4 ( ) . get ( var_1 ) ) ; return i . method_4 ( ) . get ( var_1 ) ; }
[0]: public type_1 put ( type_2 key, type_1 value ) { type_1 var_1 = var_2. get ( key. method_1 ( ) ). add ( key, value ) ; if ( var_4 ) { method_2 ( ) ; var_4 = false ; } return var_1 ; }

************

************
tgt: private type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) ; type_2 var_2 = method_3 ( ) ; type_3 var_3 = new type_3 ( var_1 . method_4 ( ) , string_1 , var_2 . method_4 ( ) ) ; type_3 var_4 = new type_3 ( var_1 . method_5 ( ) , string_2 , var_2 . method_5 ( ) ) ; var_4 . method_6 ( new java.lang.string ( string_3 ) , new java.lang.string ( string_3 ) ) ; type_1 var_5 = new type_1 ( string_4 , var_1 , var_2 , var_3 , var_4 ) ; return var_5 ; }
[0]: public void method_1 ( ) { if ( var_1 ) { method_2 ( ) ; type_1. method_3 ( var_2, ( string_1 + ( var_1 ) ) ) ; } type_2. method_4 ( null ) ; type_1. method_3 ( var_2, string_2 ) ; method_5 ( ) ; var_3 = true ; if (! ( var_4 ) ) { method_6 ( this ) ; } else { method_7 ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) throws java.io.ioexception { if ( ( var_1 . method_2 ( ) ) >= 1 ) { this . var_2 = ( ( type_2 ) ( var_1 . method_3 ( 0 ) ) ) ; this . var_3 = ( ( java.util.list < type_3 > ) ( var_1 . method_4 ( 1 , new java.util.arraylist < type_3 > ( ) ) ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; type_3 var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; method_4 ( ) ; }

************

************
tgt: public void start ( ) { new java.lang.thread ( ( ) - > { while ( true ) { final type_1 var_1 ; try { var_1 = method_1 ( ) ; new java.lang.thread ( ( ) - > method_3 ( var_1 ) ) . start ( ) ; } catch ( java.io.ioexception var_2 ) { var_2 . method_2 ( ) ; return ; } } } ) . start ( ) ; }
[0]: public void method_1 ( ) { status = var_1 ; method_2 ( ) ; java.io.file file = new java.io.file ( ( ( ( ( var_2 ) + string_1 ) + ( type_1. method_3 ( url ) ) ) + string_2 ) ) ; file. delete ( ) ; var_3 = 0 ; }

************

************
tgt: private boolean method_1 ( java.net.url url , java.util.hashset < java.lang.string > set ) { boolean var_1 = false ; for ( java.lang.string var_2 : set ) { if ( type_1 . method_2 ( type_1 . method_3 ( var_2 ) , url ) ) { var_1 = true ; } } return var_1 ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { float var_3 = ( var_4 ) / int_1 ; var_1. method_2 ( 0, 0, var_3, var_2 ) ; for ( int i = 1 ; i <= int_2 ; i ++ ) { float var_5 = var_3 * ( i * int_3 ) ; var_1. method_3 ( new type_3 ( ( - var_3 ), ( - var_3 ), var_3, var_3 ), int_4, int_1, false, var_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( int_1 , int_2 ) { public void method_2 ( long var_3 ) { } public void method_3 ( ) { var_4 = 1 ; method_4 ( ) ; } } ; var_2 . start ( ) ; }
[0]: public void add ( type_1 var_1, type_2 var_2 ) { assert var_2!= null ; type_3 < type_2 > n = method_1 ( var_1, var_2 ) ; if ( ( var_3 ) == null ) { assert ( var_4 ) == null ; var_4 = n ; var_3 = n ; } var_3. method_2 ( n ) ; var_3 = n ; }

************

************
tgt: private void method_1 ( ) { if ( ( position . x ) < 0 ) position . x = 0 ; if ( ( position . x ) > int_1 ) position . x = int_1 ; if ( ( position . y ) < int_2 ) position . y = int_2 ; if ( ( var_1 ) > 0 ) var_1 = 0 ; if ( ( var_1 ) < ( - int_1 ) ) var_1 = - int_1 ; }
[0]: public boolean equals ( final java.lang.object var_1 ) { if (! ( var_1 instanceof type_1 ) ) { return false ; } final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( var_3. equals ( var_4 ) ) && ( name. equals ( var_4 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { if ( ( var_1 . equals ( string_1 ) ) || ( var_1 . equals ( string_2 ) ) ) { method_2 ( ) ; method_3 ( ) ; } else { java.lang.string var_2 = var_3 ; method_4 ( var_2 ) ; method_5 ( var_2 ) ; } } else { java.lang.string var_2 = var_3 ; method_4 ( var_2 ) ; method_5 ( var_2 ) ; } }
[0]: public boolean equals ( final java.lang.object var_1 ) { if ( ( this ) == var_1 ) { return true ; } if ( ( var_1!= null ) && ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) { final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( value. equals ( var_2. value ) ) && ( value. equals ( var_2. value ) ) ; } return false ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string id ) throws type_1 { type_2 var_1 = var_2 . method_2 ( id ) ; if ( ( var_1 != null ) && ( var_1 . method_3 ( ) . equals ( var_3 ) ) ) { return var_4 . method_4 ( var_1 ) ; } return null ; }
[0]: public double method_1 ( double var_1 ) { if ( ( method_2 ( ) ) == 0 ) return 0 ; double var_2 = super. method_1 ( var_1 ) ; double var_3 = var_4. method_1 ( var_2 ) ; double var_5 = var_3 - var_2 ; if ( var_5!= 0 ) super. method_3 ( var_5 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 p ) { try { byte id = type_1 . getid ( p ) ; out . method_2 ( id ) ; p . method_3 ( out ) ; } catch ( java.io.ioexception var_1 ) { var_1 . method_4 ( ) ; } catch ( java.lang.nullpointerexception var_1 ) { java.lang.system.err.println ( ( ( string_1 + ( this ) ) + string_2 ) ) ; method_5 ( ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( ) ; try { type_2 var_2 = var_1. method_3 ( var_3 ) ; type_3. assertthat ( var_2. method_4 ( ), type_4. method_5 ( var_3 ) ) ; java.util.list < java.lang.string > var_4 = var_2. method_6 ( ) ; java.util.list < java.lang.string > var_5 = java.util.arrays.aslist ( var_6, var_7 ) ; type_3. assertthat ( var_4, type_4. method_5 ( var_5 ) ) ; } catch ( java.lang.exception var_8 ) { var_8. method_7 ( ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( string_1 ) ; var_1 . method_3 ( new type_2 ( ) ) ; var_1 . method_5 ( false ) ; var_1 . method_6 ( ) ; var_1 . method_4 ( var_6 ) ; var_1 . method_7 ( true ) ; }
[0]: private static int method_1 ( type_1 [ ] var_1, byte var_2 ) { int var_3 = var_4 ; for ( type_1 var_5 : var_1 ) { int label = var_5. method_2 ( ) ; if ( ( label > 0 ) && ( label < var_3 ) ) { var_3 = label ; } } if ( var_3!= ( var_4 ) ) { return var_3 ; } else { return 0 ; } } return 0 ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) var_1 . add ( var_2 . get ( i ) . method_3 ( ) ) ; var_1 . method_5 ( ( 1.0 / ( var_2 . size ( ) ) ) ) ; }
[0]: private static void method_1 ( java.lang.string var_1, java.lang.integer var_2 ) { for ( java.lang.string var_3 : var_4. get ( var_1 ). get ( ( var_2 - 1 ) ). method_2 ( ) ) { var_4. get ( var_1 ). get ( ( var_2 - 1 ) ). put ( var_3, null ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; method_4 ( ) . method_5 ( 0 , null , this ) ; if ( var_1 == null ) { method_6 ( ) ; } }
[0]: private void method_1 ( android.content.intent intent ) { if ( type_1. equals ( intent. method_2 ( ) ) ) { java.lang.string query = intent. method_3 ( var_1 ) ; type_2 var_2 = type_3. method_4 ( this ). method_5 ( query ) ; var_3. method_6 ( var_2 ) ; var_3. method_7 ( ) ; } else { var_3. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { if ( ( var_1 ) == null ) { java.lang.system.out.println ( string_1 ) ; return ; } type_1 var_2 = method_2 ( ) ; if ( ! ( method_3 ( ( string_2 + ( id ) ) ) ) ) { java.lang.system.out.println ( string_3 ) ; } var_1 . method_4 ( ) ; var_1 = null ; var_2 . method_5 ( ) ; }
[0]: private java.lang.string [ ] method_1 ( java.util.arraylist < java.lang.string > var_1 ) { int count = var_1. size ( ) ; java.lang.string [ ] var_2 = new java.lang.string [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { var_2 [ i ] = var_1. get ( i ) ; var_3. method_2 ( ( ( ( string_1 + ( var_2 [ i ] ) ) + string_2 ) + ( var_1. get ( i ) ) ) ) ; } return var_2 ; }

************

************
tgt: public java.lang.string tostring ( ) { final java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; for ( final java.lang.string string : this . method_1 ( ) ) { var_1 . append ( string ) . append ( string_1 ) . append ( get ( string ) ) . append ( char_1 ) ; } return var_1 . tostring ( ) ; }
[0]: public static void method_1 ( type_1 var_1 ) { if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( var_1. tostring ( ) ) ) ) ; type_2. method_1 ( var_1 ) ; if ( (! ( type_3. method_2 ( var_1 ) ) ) && (! ( var_1 instanceof type_4 ) ) ) type_2. method_1 ( new type_5 ( var_1 ), var_1. method_3 ( ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { var_2 = var_1 ; var_3 = var_4 ; return ; } if ( var_5 ) { var_2 = var_6 ; var_3 = var_7 ; } else { var_2 = var_8 ; var_3 = var_9 ; } }
[0]: private void method_1 ( type_1 var_1 ) { var_2 = ( ( type_2 ) ( var_1 ) ) ; if ( ( var_1. contains ( var_3. method_2 ( ) ) ) && ( ( var_1. method_3 ( ) ) == false ) ) { var_4 = true ; if ( ( var_5 ) <= 0 ) var_6 = int_1 ; } else { var_4 = false ; var_7 = false ; if ( var_3. method_4 ( ) ) { var_3. method_5 ( false ) ; } } } }

************

************
tgt: public < type_1 > type_1 method_1 ( type_2 < type_1 > var_1 ) { type_1 var_2 = method_2 ( var_1 ) ; type_1 var_4 = method_3 ( var_1 ) ; type_3 . method_4 ( ( ( null != var_2 ) && ( null != var_4 ) ) ) ; return null != var_2 ? var_2 : var_4 ; }
[0]: public java.lang.string method_1 ( int var_1 ) { java.util.date var_2 = new java.util.date ( ) ; type_1 var_3 = new type_1 ( string_1 ) ; java.util.calendar c = java.util.calendar.getinstance ( ) ; c. method_2 ( var_2 ) ; c. add ( var_4, var_1 ) ; java.lang.string var_5 = var_3. format ( c. gettime ( ) ) ; return var_5 ; }

************

************
tgt: public void method_1 ( ) { try { java.net.url url = var_1 . method_2 ( null ) ; type_1 . fail ( ( string_1 + url ) ) ; } catch ( type_2 var_2 ) { var_3 . info ( ( string_2 + var_2 ) ) ; } catch ( java.lang.exception var_4 ) { var_3 . error ( string_3 , var_4 ) ; type_1 . fail ( ( string_4 + var_4 ) ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.string var_2 = ( method_2 ( var_1. method_3 ( 0 ) ) ) + ( var_1. method_3 ( 0 ) ) ; int i = 1 ; while ( ( var_1. method_3 ( i ) )!= null ) { var_2 += ( method_2 ( var_1. method_3 ( i ) ) ) + ( var_1. method_3 ( i ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 params ) { method_2 ( ) . method_1 ( var_1 , new type_2 ( ) { public void method_3 ( ) { method_4 ( ) ; var_2 . method_5 ( new type_3 ( method_2 ( ) . method_6 ( ) . method_7 ( ) ) ) ; } } ) ; }
[0]: public type_1 method_1 ( java.lang.string id ) { type_2 var_1 = this. var_2. method_1 ( id ) ; if ( var_1 == null ) { java.lang.string message = string_1 + id ; java.lang.string url = string_2 + id ; var_3. error ( ( ( string_3 + id ) + string_4 ) ) ; throw new type_3 ( message, url ) ; } var_3. info ( ( string_5 + var_1 ) ) ; return type_1. method_2 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_1 . method_2 ( ) ; var_3 = type_2 . method_3 ( ) ; if ( ( var_3 ) != null ) { type_3 var_4 = type_3 . method_4 ( var_3 ) ; type_4 var_5 = new type_4 ( var_4 , var_7 ) ; if ( var_6 ) { android.content.intent i = new android.content.intent ( var_7 , var_8 class ) ; var_7 . method_5 ( i ) ; } } }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_2. method_2 ( ). method_3 ( ). method_4 ( ) ) { var_1. method_5 ( type_3. method_1 ( var_3, var_2 ), new type_4 ( type_5. method_6 ( var_2. method_2 ( ). method_7 ( ). gettime ( ) ) ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean b ) { switch ( var_1 . getid ( ) ) { case var_2 : break ; case var_3 : if ( b ) var_4 . method_2 ( var_5 ) ; else var_4 . method_2 ( var_6 ) ; break ; case var_7 : if ( b ) var_8 . method_2 ( var_5 ) ; else var_8 . method_2 ( var_6 ) ; break ; } }
[0]: type_1 method_1 ( char var_1, boolean var_2 ) { ( var_3 ) -- ; int var_4 = method_2 ( var_1 ) ; type_1 var_5 = var_6. get ( var_4 ) ; if ( ( ( var_7 ) == 1 ) && var_2 ) { var_6. set ( var_4, null ) ; } else { var_8 = false ; } return var_5 ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( var_1 . getname ( ) . equals ( var_2 ) ) { new type_2 ( string_1 ) ; return ; } if ( var_3 ) { var_4 . method_2 ( true ) ; } else { type_5 . method_5 ( var_4 ) ; new type_6 ( var_5 . method_6 ( ) ) ; } }
[0]: public void method_1 ( java.net.url url, type_1 var_1 ) { var_2 = type_2. method_2 ( ) ; type_3. method_3 ( new type_4 < > ( string_1 ) ) ; type_5. method_3 ( new type_4 < > ( string_2 ) ) ; type_6. method_3 ( new type_4 < > ( string_3 ) ) ; type_7. method_4 ( new type_4 < > ( string_4 ) ) ; method_5 ( ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; type_1 var_3 = new type_1 ( ) ; type_2 . method_1 ( var_3 . method_2 ( ) ) ; while ( ! ( var_3 . method_3 ( ) ) ) { type_2 . show ( var_4 ) ; java.lang.string var_5 = var_1 . method_4 ( ) ; java.lang.string var_6 = var_3 . method_5 ( var_5 ) ; type_2 . method_1 ( var_6 ) ; } var_1 . method_6 ( ) ; }
[0]: public final void method_1 ( boolean var_1 ) { if ( method_2 ( ) ) { java.lang.system.out.println ( string_1 ) ; } if ( ( ( method_2 ( ) ) && (! ( method_3 ( ) ) ) ) && var_1 ) { method_4 ( ) ; var_2. set ( true ) ; } else if ( (! var_1 ) && ( method_3 ( ) ) ) { method_5 ( ) ; var_2. set ( false ) ; } }

************

************
tgt: protected void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string target , java.lang.string var_4 ) { java.lang.string var_5 = this . method_2 ( var_1 ) ; type_1 var_6 = new type_1 ( var_5 , var_2 , var_3 ) ; type_2 var_7 = new type_2 ( this , var_6 , target , var_4 ) ; this . method_3 ( var_7 ) ; }
[0]: public void method_1 ( final type_1 var_1, final java.lang.string value ) throws java.lang.exception { method_2 ( var_1 ) ; final java.lang.string var_2 = var_1. method_3 ( id ) ; method_4 ( var_2 ) ; method_5 ( var_2 ) ; for ( int i = 0 ; i < ( value. length ( ) ) ; i ++ ) { var_1. method_6 ( type_2. tostring ( value. method_7 ( i ) ) ) ; method_8 ( int_1 ) ; } method_9 ( var_2 ) ; }

************

************
tgt: public java.lang.boolean delete ( int id ) throws type_1 , type_2 , type_3 { type_4 var_1 = var_2 . method_1 ( id ) ; var_1 . method_2 ( var_3 ) ; if ( ( var_5 . method_4 ( var_6 ) ) || ( var_4 . method_3 ( var_1 ) ) ) { return ( var_2 . update ( var_1 ) . method_5 ( ) . compareto ( var_3 ) ) == 0 ; } return false ; }
[0]: public java.lang.object method_1 ( final java.lang.object... param ) { try { return type_1. method_2 ( param [ 0 ], var_1. method_3 ( ) ) ; } catch ( java.lang.exception var_2 ) { type_2 var_3 = type_2. method_4 ( new type_3 ( ( ( ( string_1 + ( param [ 0 ] ) ) + string_2 ) + ( var_1 ) ) ), var_2 ) ; throw var_3 ; } }

************

************
tgt: public boolean execute ( ) { var_1 . method_2 ( ) . settext ( type_1 . method_3 ( ) ) ; var_1 . method_2 ( ) . setenabled ( true ) ; var_1 . method_4 ( ) . method_5 ( type_1 . method_6 ( ) ) ; var_2 . method_7 ( ) . method_8 ( true ) ; return false ; }
[0]: public boolean method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { if ( var_2. get ( i ). getname ( ). equals ( var_1. getname ( ) ) ) { return false ; } } var_2. add ( var_1 ) ; method_2 ( var_2, var_3 ) ; return true ; }

************

************
tgt: private int method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , var_2 ) ; java.lang.string var_3 = var_1 . format ( var_4 . gettime ( ) ) ; var_3 = ( var_3 . startswith ( "0" ) ) ? var_3 . substring ( 1 ) : var_3 ; return java.lang.integer . method_2 ( var_3 ) ; }
[0]: public java.lang.string tostring ( ) { type_1 < type_2 > var_1 = var_2 ; if ( var_1 == null ) { return string_1 ; } java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; var_3. append ( ( string_2 + ( var_1. data ) ) ) ; while ( ( var_4 )!= null ) { var_1 = var_4 ; var_3. append ( string_3 ). append ( var_1. data ) ; } var_3. append ( string_4 ) ; return var_3. tostring ( ) ; }

************

************
tgt: public java.util.arraylist method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( ( var_2 . get ( i ) . method_2 ( ) ) == 1 ) { var_1 . add ( var_2 . get ( i ) ) ; } } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. getvalue ( ) )!= null ) { var_2. method_2 ( ) ; for ( type_1 var_3 : var_1. method_3 ( ) ) { type_2 var_4 = var_3. getvalue ( var_5 class ) ; if (! ( var_6 ) ) { var_2. add ( var_4 ) ; } } var_7. method_4 ( ) ; } var_8. method_5 ( ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_2 params ) throws java.io.ioexception { var_1 . method_2 ( var_2 ) ; var_1 . field ( var_3 , method_3 ( ) ) ; var_4 . method_1 ( var_1 , params ) ; var_5 . method_1 ( var_1 , params ) ; var_6 . method_1 ( var_1 , params ) ; if ( ( var_7 ) != null ) { var_7 . method_1 ( var_1 , params ) ; } var_1 . method_4 ( ) ; return var_1 ; }
[0]: private double method_1 ( final type_1 var_1 ) { double var_2 = 0.0 ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { double var_4 = var_1. method_2 ( i ) ; var_2 += var_4 * var_4 ; } return var_2 ; }

************

************
tgt: private static int method_1 ( int var_1 ) { java.util.calendar c = java.util.calendar.getinstance ( ) ; c . set ( var_3 , var_1 ) ; c . set ( var_4 , var_5 ) ; c . set ( var_6 , int_1 ) ; int var_7 = c . get ( var_8 ) ; int var_9 = ( c . get ( var_10 ) ) - 1 ; return ( ( var_7 - var_9 ) + int_2 ) / int_3 ; }
[0]: public int method_1 ( ) { int start = this. name. method_2 ( string_1 ) ; int var_1 = this. name. method_2 ( string_1, ( start + 1 ) ) ; if ( ( start!= ( - 1 ) ) || ( var_1!= ( - 1 ) ) ) { java.lang.string var_2 = this. name. substring ( ( start + 1 ), var_1 ) ; this. var_3 = java.lang.integer.parseint ( var_2 ) ; return this. var_3 ; } else return 1 ; }

************

************
tgt: public void show ( type_1 var_1 , type_2 var_2 , type_3 var_3 , java.util.list < java.lang.string > var_4 , java.util.list < java.lang.string > var_5 , java.util.list < java.lang.string > var_6 ) { this . var_4 = var_4 ; this . var_6 = var_6 ; this . var_5 = var_5 ; method_1 ( var_2 , var_3 ) ; show ( var_1 . method_2 ( ) , string_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2. method_2 ( ) ) || ( var_3. method_2 ( ) ) ) { if (! ( var_4. method_3 ( ) ) ) var_4. setenabled ( true ) ; else { var_4. method_4 ( ) ; var_4. method_5 ( string_1 ) ; var_4. setenabled ( false ) ; } method_6 ( int_1 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.lang.system.out.println ( ( string_1 + ( var_2 ) ) ) ; type_2 var_3 = this . var_4 ; for ( type_3 var_5 : var_6 ) { try { boolean var_7 = var_3 . method_2 ( var_5 ) ; if ( ! var_7 ) { continue ; } else { type_4 var_8 = var_9 . get ( var_2 ) ; method_3 ( var_8 , var_5 ) ; } } catch ( java.lang.exception var_10 ) { java.lang.system.err.println ( string_2 ) ; } } }
[0]: private static void method_1 ( int var_1, int var_2 ) { switch ( var_2 ) { case var_3 : if (! ( var_4. contains ( var_1 ) ) ) { var_4. method_2 ( var_1 ) ; } break ; case var_5 : if (! ( var_6. contains ( var_1 ) ) ) { var_6. method_2 ( var_1 ) ; } break ; } }

************

************
tgt: public static boolean add ( type_1 var_1 ) { boolean var_2 = true ; for ( type_2 < type_1 > var_3 : var_4 ) { if ( ! ( var_3 . add ( var_1 ) ) ) { var_2 = false ; } } if ( var_2 ) { type_3 . method_1 ( ) ; type_3 . method_2 ( var_1 ) ; } return var_2 ; }
[0]: public static boolean method_1 ( type_1 b, int var_1 ) { if (! ( type_2. method_2 ( b, var_1, string_1 ) ) ) return false ; int c = type_2. method_3 ( b ) ; while ( true ) { if (! ( type_3. method_4 ( b, ( var_1 + 1 ) ) ) ) break ; if (! ( type_2. method_5 ( b, string_1, c ) ) ) break ; c = type_2. method_3 ( b ) ; } return true ; } }

************

************
tgt: public static void method_1 ( ) { var_1 . add ( new type_1 ( var_2 ) ) ; var_1 . add ( new type_1 ( var_3 ) ) ; type_2 . method_2 ( new type_3 ( ) . method_3 ( new type_1 ( var_4 ) ) . method_4 ( var_1 ) . method_5 ( new type_1 ( var_5 , 1 , 1 ) ) . method_5 ( new type_1 ( var_6 , int_1 , 1 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.map < java.lang.string, java.lang.object > result = new type_2 < > ( ) ; int count = 0 ; type_3 var_2 = var_1. method_2 ( string_1 ) ; for ( java.lang.string key : var_2 ) { result. put ( key, var_3. method_3 ( key ) ) ; count ++ ; } assertequals ( var_4. size ( ), count ) ; assertequals ( var_4, result ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; } if ( ! ( var_2 ) ) { var_2 = true ; method_2 ( ) . method_3 ( ) . add ( var_3 , var_1 ) . method_4 ( ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { if ( int_1!= ( args.length ) ) { type_1. method_1 ( ) ; return ; } type_1 var_1 = new type_1 ( args [ 0 ], args [ 1 ], java.lang.integer.parseint ( args [ int_2 ] ) ) ; try { var_1. method_2 ( ) ; } catch ( java.lang.classnotfoundexception | type_2 | type_3 var_2 ) { var_2. method_3 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 ) { try ( type_2 var_3 = new type_2 ( new java.io.fileoutputstream ( var_2 ) ) ) { var_3 . method_2 ( var_1 ) ; var_3 . method_3 ( ) ; var_4 . method_4 ( java.lang.string.format ( var_5 , var_2 ) ) ; } catch ( java.io.ioexception var_6 ) { throw new type_3 ( string_1 , var_6 ) ; } }
[0]: protected type_1 < type_2 < java.lang.string > > method_1 ( final type_3 var_1 ) { try { final java.lang.string var_2 = method_2 ( var_1. gettype ( ) ) ; return var_3. method_3 ( var_2 ) ; } catch ( type_4 var_4 ) { final type_4 var_5 = new type_4 ( type_5. method_4 ( var_6, var_4 ), var_4 ) ; return type_6. method_5 ( var_5 ) ; } }

************

************
tgt: public boolean method_1 ( ) { boolean var_1 = super . method_1 ( ) ; if ( ! var_1 ) { type_1 var_2 = method_2 ( false ) ; if ( var_2 != null ) { type_2 var_3 = var_2 . method_3 ( ) ; if ( ( var_3 != null ) && ( ( var_3 . method_4 ( ) ) != null ) ) { var_1 = var_3 . method_4 ( ) . method_5 ( ) . method_1 ( var_3 . method_6 ( ) , null ) ; } } } return var_1 ; }
[0]: public java.lang.string method_1 ( java.lang.long var_1, java.lang.long var_2, type_1 var_3, type_2 var_4 ) { type_3 var_5 = var_6. method_2 ( var_1 ) ; var_3. method_3 ( string_1, var_5 ) ; var_3. method_3 ( string_2, var_7. method_4 ( var_1 ) ) ; var_3. method_3 ( string_3, method_5 ( var_1 ) ) ; var_8. method_6 ( var_3, var_2, var_1, var_4 ) ; return string_4 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; type_1 var_2 = type_2 . method_3 ( var_3 class ) ; var_4 . method_4 ( float_1 , var_2 ) ; type_3 var_5 = method_5 ( var_2 , var_6 class ) ; if ( var_5 != null ) { type_4 . asserttrue ( string_1 , var_7 . method_6 ( var_5 ) ) ; } else { type_4 . fail ( string_2 ) ; } }
[0]: public java.lang.object method_1 ( java.lang.object target ) throws java.lang.exception { java.lang.string [ ] var_1 = ( ( type_1 ) ( var_2 ) ). method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; java.lang.string var_4 = ( ( var_5. gettext ( ) ) + ( var_6. get ( string_1 ) ) ) + string_2 ; var_1 [ int_1 ] = var_4 ; ( ( type_1 ) ( var_2 ) ). method_3 ( var_1 ) ; return null ; }

************

************
tgt: public boolean contains ( java.lang.string key ) { int [ ] var_1 = method_1 ( key ) ; for ( int var_2 : var_1 ) { if ( ! ( var_3 . method_2 ( ( var_2 % ( var_4 ) ) ) ) ) { return false ; } } return true ; }
[0]: public java.lang.string method_1 ( java.lang.integer var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; while ( var_1!= 0 ) { for ( java.util.map.entry < java.lang.integer, java.lang.string > var_3 : var_4. method_2 ( ) ) { java.lang.integer var_5 = var_3. method_3 ( ) ; java.lang.string var_6 = var_3. getvalue ( ) ; if ( var_1 >= var_5 ) { var_1 -= var_5 ; var_2. append ( var_6 ) ; } } } return var_2. tostring ( ) ; } return null ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_3 . getstring ( string_1 , string_2 ) ; if ( ( var_2 . isempty ( ) ) || ( ( var_1 . compareto ( var_2 ) ) < 0 ) ) { return true ; } else { return false ; } }
[0]: public void method_1 ( ) { new type_1 ( ) { { var_1. method_2 ( ) ; result = var_2 ; var_1. method_3 ( ) ; result = var_3 ; var_1. method_4 ( ) ; result = var_4 ; var_1. method_5 ( ) ; result = var_5 ; type_2. method_6 ( var_2, var_4 ) ; result = var_6 ; new type_3 ( var_6, var_5, var_7 ) ; result = var_8 ; } } ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = method_2 ( ) ; for ( int i = 0 , count = ( var_1 == null ) ? 0 : var_1 . method_3 ( ) ; i < count ; i ++ ) { android.view.view var_2 = var_1 . method_4 ( i ) ; type_2 var_3 = var_4 . method_5 ( var_2 , i ) ; if ( var_3 != null ) var_2 . method_6 ( var_3 ) ; } }
[0]: public void method_1 ( ) { var_1 = new type_1 ( var_2. method_2 ( ) ) ; type_2. method_3 ( ) ; var_3. method_3 ( ) ; type_3. method_3 ( ) ; var_4. method_3 ( ) ; method_4 ( ) ; type_4. method_5 ( string_1 ) ; }

************

************
tgt: private void method_1 ( double var_1 , double var_2 , double var_3 ) { method_2 ( new type_1 ( type_2 . method_3 ( ) , type_2 . method_4 ( ) , type_3 . method_5 ( var_2 ) , type_3 . method_5 ( var_3 ) , type_3 . method_5 ( var_1 ) ) ) ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; switch ( var_1 ) { case var_3 : { if ( ( var_2 == ( var_4 ) ) && ( null!= data ) ) { java.util.arraylist < java.lang.string > result = data. method_2 ( var_5 ) ; var_6. settext ( result. get ( 0 ) ) ; method_3 ( result. get ( 0 ) ) ; } break ; } } } }

************

************
tgt: public void put ( java.util.map < java.lang.string , java.lang.object > event ) { if ( ( event != null ) && ( ( event . size ( ) ) > 0 ) ) { long var_3 = var_1 . method_2 ( ) ; try { type_2 var_4 = var_1 . get ( var_3 ) ; var_4 . method_3 ( event ) ; } finally { var_1 . method_4 ( var_3 ) ; } } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = method_2 ( ) ; type_3 var_3 = var_2. method_3 ( ) ; if ( ( var_3!= null ) && ( ( var_4 )!= null ) ) { type_4. method_4 ( var_5 ) ; type_4. start ( this ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_1 != null ) && ( ! ( var_1 . isempty ( ) ) ) ) { for ( type_1 item : list ) { if ( var_1 . equals ( item . getname ( ) ) ) { return item ; } } } return null ; }
[0]: protected type_1 method_1 ( final int var_1, final int var_2 ) { final type_2 var_3 = var_4 ; final type_2 var_5 = new type_2 ( ( ( var_4. x ) + ( var_6 ) ), var_4. y, var_1, var_4. height ) ; var_4 = new type_2 ( var_4. x, var_4. y, ( ( var_6 ) + var_1 ), var_4. height ) ; var_7 = var_5 ; var_8 = var_3 ; return var_5. method_2 ( var_1, var_2 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws type_2 { if ( ( var_1 . split ( string_1 ) . length ) != int_1 ) { throw new type_2 ( ) ; } for ( type_3 type : type_3 . values ( ) ) { if ( var_1 . touppercase ( ) . startswith ( type . type ) ) { return new type_1 ( var_1 . split ( string_2 ) [ 1 ] , type ) ; } } return new type_1 ( var_1 . split ( string_2 ) [ 1 ] , var_2 ) ; }
[0]: public static type_1 method_1 ( java.lang.string name, java.lang.string var_1, type_2 var_2 ) { type_1 var_3 = new type_1 ( name ) ; if ( var_2!= null ) var_3. method_2 ( var_2 ) ; if ( var_1!= null ) var_3. method_3 ( var_1 ) ; var_3. method_4 ( new java.awt.font ( var_4, var_5, int_1 ) ) ; type_3. init ( var_3, false ) ; return var_3 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { assert var_1 != null ; final type_2 var_2 = type_3 . method_2 ( var_1 . method_3 ( ) ) ; if ( ( var_3 ) == var_2 ) { var_3 = null ; } else if ( method_4 ( ) . contains ( var_2 ) ) { var_4 = var_2 ; } }
[0]: public boolean method_1 ( ) { return ( ( ( ( var_1 )!= ( status ) ) || ( null!= ( var_2. method_2 ( ) ) ) ) || ( null!= ( content ) ) ) || ( null!= ( file ) ) ; }

************

************
tgt: private void execute ( ) { java.lang.integer var_1 = null ; if ( var_2 . contains ( var_3 ) ) { var_1 = var_2 . method_1 ( var_3 ) ; } if ( ( var_1 == null ) || ( var_1 <= ( - 1 ) ) ) { return ; } java.util.calendar var_4 = java.util.calendar.getinstance ( ) ; var_4 . method_2 ( new java.util.date ( ) ) ; var_4 . add ( var_5 , ( - var_1 ) ) ; var_6 . method_3 ( var_4 . gettime ( ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.lang.system.out.println ( type_1. method_1 ( new int [ ] { int_1, int_2, int_1, int_2, int_1, 1, int_3, int_4, int_1, int_1, int_1, int_1, int_1, int_1, int_1 } ) ) ; java.lang.system.out.println ( type_1. method_2 ( new int [ ] { int_1, int_2, int_1, int_2, int_1, int_1, int_1, int_1, int_1, int_1 } ) ) ; }

************

************
tgt: public boolean method_1 ( final android.content.intent var_1 , final android.content.intent response ) { type_2 error = type_3 . method_4 ( var_1 ) ; if ( error == ( var_3 ) ) { method_5 ( response , var_4 ) ; } else { type_1 . method_6 ( response ) ; } var_5 . method_7 ( this . getclass ( ) . getname ( ) , string_2 ) ; return true ; }
[0]: private void method_1 ( double var_1 ) { var_2 = ( x ) + ( ( var_3 [ 0 ] ) * var_1 ) ; var_4 = ( y ) + ( ( var_3 [ 1 ] ) * var_1 ) ; var_5 = ( ( int ) ( var_2 ) ) ; var_6 = ( ( int ) ( var_4 ) ) ; var_6 = ( ( int ) ( var_4 ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 node , type_3 var_1 , type_4 var_2 ) { return new type_1 ( node , type_5 . method_2 ( ) , ( - 1 ) , var_2 , type_6 . method_3 ( ) , type_7 . method_4 ( ) , var_1 , null , null , null ) ; }
[0]: public void method_1 ( ) { final type_1 var_1 = ( ( type_1 ) ( method_2 ( ). method_3 ( ) ) ) ; var_1. method_4 ( true ) ; var_2 = type_2. method_5 ( var_3, var_1, var_4 ) ; method_6 ( ) ; type_3. method_7 ( method_2 ( ) ) ; }

************

************
tgt: public type_1 < java.lang.string > start ( type_2 var_1 ) { this . var_1 = var_1 ; type_3 var_2 = type_4 . method_1 ( ) ; var_3 = var_2 . method_2 ( this ) ; if ( var_4 ) { return type_1 . method_4 ( ) ; } return type_1 . method_3 ( var_3 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_1. method_2 ( var_2 ) ; var_2. method_3 ( var_1 ) ; } if ( ( var_3 ) == null ) { var_3 = new type_3 ( ) ; type_4 var_4 = new type_4 ( ) ; var_3. method_2 ( var_4 ) ; var_4. method_3 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 = var_2 . get ( key ) ; if ( var_1 != null ) { var_1 . remove ( this ) ; if ( var_1 . isempty ( ) ) { var_2 . remove ( key ) ; } } super . method_1 ( ) ; }
[0]: public boolean method_1 ( int var_1 ) { int var_2 = var_3. get ( var_1 ). method_2 ( ) ; var_3. get ( var_1 ). method_3 ( ) ; if ( var_2 > ( var_3. get ( var_1 ). method_2 ( ) ) ) return true ; else return false ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( var_4 ) != null ) { switch ( view . getid ( ) ) { case var_1 : android.content.intent intent = new android.content.intent ( this , var_2 class ) ; intent . method_2 ( var_3 , this . var_4 . method_3 ( ) ) ; method_4 ( intent ) ; } } }
[0]: public static type_1 method_1 ( type_2 context ) throws java.lang.classnotfoundexception, type_3, type_4, type_5, type_6 { type_7 var_1 = new type_7 ( ) ; type_8 var_2 = context. method_2 ( ) ; type_9. method_3 ( context ) ; type_9. method_4 ( context, var_1 ) ; type_9. method_5 ( context ) ; type_9. method_6 ( context, var_1 ) ; return var_1. method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { while ( ( var_1 ) && ( ! ( var_2 ) ) ) { method_2 ( ) ; try { java.lang.thread . method_3 ( var_3 ) ; } catch ( java.lang.throwable t ) { if ( var_4 ) { java.lang.system.err.println ( t ) ; } } } if ( var_2 ) { method_4 ( ) ; } }
[0]: public java.lang.string method_1 ( ) { if (! ( this. var_1 ) ) return ( string_1 + ( this. var_2 ) ) + string_2 ; else return ( method_2 ( ( string_1 + ( this. var_2. getname ( ) ) ) ) ) + string_3 ; }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_3 . get ( var_1 . method_2 ( ) ) ) != null ) return 1 ; if ( ( var_3 . get ( var_2 . method_2 ( ) ) ) != null ) return - 1 ; return 1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { for ( int var_1 = 0 ; var_1 < ( var_2. size ( ) ) ; var_1 ++ ) { for ( int var_3 = var_1 ; var_3 < ( var_2. size ( ) ) ; var_3 ++ ) { if ( var_1!= var_3 ) { method_2 ( var_2. get ( var_1 ), var_2. get ( var_3 ) ) ; } } } }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 var_1 , type_4 var_2 , type_5 var_3 ) { type_2 var_4 = var_2 . method_2 ( var_3 ) ; if ( var_4 != ( var_5 ) ) { if ( type_6 . get ( var_2 ) . var_6 . method_3 ( var_4 . method_4 ( ) ) ) { var_4 . method_5 ( 1 ) ; return new type_1 < type_2 > ( var_7 , var_4 ) ; } } return new type_1 < type_2 > ( var_8 , var_4 ) ; }
[0]: public type_1 method_1 ( final java.io.file file ) { final type_1 var_1 = new type_1 ( ) ; type_2 var_2 ; try { var_2 = method_2 ( file ) ; } catch ( final java.lang.exception var_3 ) { var_1. method_3 ( ( ( ( string_1 + file ) + string_2 ) + ( var_3. method_4 ( ) ) ) ) ; var_1. method_5 ( ) ; return var_1 ; } method_6 ( var_2, var_1 ) ; method_7 ( var_2, var_1 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_1 . method_2 ( ) ) != ( var_2 ) ) { ( var_3 ) ++ ; if ( ( ( var_3 ) % ( var_4 ) ) == 0 ) { method_3 ( var_1 ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { if ( var_1. getname ( ). startswith ( string_1 ) ) { var_2. put ( string_2, var_3 ) ; } else { var_4. put ( string_2, ( ( var_5 ) + string_3 ) ) ; } }

************

************
tgt: public type_1 method_1 ( android.content.context context , int var_1 ) { this . method_2 ( context ) ; java.util.collections.sort ( this . var_2 ) ; if ( var_1 > ( this . var_2 . size ( ) ) ) { return null ; } else { for ( type_1 var_3 : var_2 ) { if ( ( java.lang.integer.parseint ( var_4 . trim ( ) ) ) == var_1 ) { return var_3 ; } } } return null ; }
[0]: public java.lang.string method_1 ( ) { java.lang.stringbuilder out = new java.lang.stringbuilder ( ) ; out. append ( string_1 ) ; for ( java.lang.string var_1 : var_2. method_2 ( ) ) { out. append ( var_1 ). append ( var_2. get ( var_1 ) [ 0 ] ). append ( var_2. get ( var_1 ) [ 1 ] ) ; } return out. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 ; boolean var_2 ; for ( type_2 a : type_3 . values ( ) ) { var_2 = type_4 . equals ( a ) ; var_1 = new type_1 ( a , var_3 ) ; type_5 . assertequals ( string_1 , ( var_2 ? var_3 : 0 ) , var_1 . method_2 ( ) ) ; type_5 . assertequals ( string_2 , ( var_2 ? 0 : var_3 ) , var_1 . method_3 ( ) ) ; } }
[0]: public type_1 method_1 ( ) { if ( ( ( var_1 ) == null ) || ( method_2 ( ). isempty ( ) ) ) { var_2 = var_3 ; return var_2 ; } type_2 var_4 = ( ( type_2 ) ( method_3 ( ) ) ) ; var_2 = var_4. method_4 ( this ) ; method_5 ( var_4. method_6 ( ). method_7 ( ) ) ; if ( ( var_2 ) instanceof type_3 ) { method_8 ( ( ( type_3 ) ( var_2 ) ) ) ; } return var_2 ; }

************

************
tgt: private void method_1 ( int var_1 ) { int var_2 = int_1 ; int var_3 = method_2 ( var_2 ) ; java.lang.string var_4 = method_3 ( ) . getstring ( var_5 ) ; int var_6 = int_2 ; for ( int i = 0 ; i < var_6 ; i ++ ) { while ( var_7 . contains ( var_3 ) ) { var_3 = method_2 ( var_2 ) ; } type_1 . i ( var_4 , java.lang.integer.tostring ( var_3 ) ) ; var_7 . add ( var_3 ) ; } }
[0]: public void add ( int index, double element ) { method_1 ( index ) ; method_2 ( 1 ) ; type_1. method_3 ( array, index, array, ( index + 1 ), ( ( size ( ) ) - index ) ) ; set ( index, element ) ; method_4 ( 1 ) ; }

************

************
tgt: public static void method_1 ( type_1 event ) { type_2 data = type_2 . get ( event . method_2 ( ) ) ; event . getconfig ( ) . method_3 ( var_2 , new type_3 ( var_3 ) ) ; event . getconfig ( ) . add ( var_2 , string_1 , var_4 ) . method_4 ( string_2 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { list. add ( int_1 ) ; list. add ( int_2 ) ; list. add ( int_3 ) ; list. add ( int_4, 1 ) ; assertequals ( new java.lang.integer ( int_4 ), list. get ( 1 ) ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { type_3 . method_2 ( var_2 , ( string_1 + ( var_1 . method_3 ( ) ) ) ) ; if ( ( var_1 . method_3 ( ) ) == false ) { type_3 . method_4 ( var_2 , string_2 , var_1 . method_5 ( ) ) ; var_3 = - 1 ; } else { var_3 = 1 ; } }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { method_2 ( position ) ; type_2 var_2 = var_3. get ( position ) ; android.content.intent var_4 = new android.content.intent ( this, var_5 class ) ; type_3 var_6 = new type_3 ( ) ; var_6. method_3 ( var_7, var_2 ) ; var_4. method_4 ( var_6 ) ; method_5 ( var_4, var_8 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { method_2 ( new type_2 ( method_3 ( ) . method_4 ( ) , var_2 ) , new type_3 ( var_1 . method_5 ( ) ) ) ; type_4 var_3 ; if ( ( var_1 . method_6 ( ) ) > 0 ) { var_3 = var_4 ; } else { var_3 = var_5 ; } method_2 ( new type_2 ( method_3 ( ) . method_4 ( ) , var_6 ) , var_3 ) ; method_7 ( var_7 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, int var_2, int var_3, boolean var_4 ) throws type_2 { type_1 var_5 ; type_3 var_6 = method_2 ( var_1 ) ; var_7. method_3 ( ( string_1 + string_2 ), var_6. getid ( ), var_3, var_2 ) ; method_4 ( var_2, var_6. getid ( ) ) ; method_5 ( var_2 ) ; var_5 = method_1 ( var_2, var_3, var_4 ) ; return var_5 ; }

************

************
tgt: public static void method_1 ( type_1 [ ] var_1 , type_1 var_2 ) { for ( type_1 var_3 : var_1 ) { if ( ( var_3 == null ) || ( ( var_3 . getid ( ) ) != ( var_2 . getid ( ) ) ) ) { continue ; } var_6 = var_7 ; var_8 = var_9 ; break ; } }
[0]: public java.util.set < type_1 > method_1 ( type_2 var_1 ) { type_3 var_2 = ( ( type_3 ) ( var_1. method_2 ( ). method_3 ( string_1 ) ) ) ; var_2 = var_3. method_4 ( var_2 ) ; return var_4. method_5 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_3 ) != null ) var_1 . method_2 ( var_4 , var_3 ) ; var_1 . method_3 ( var_5 , var_6 ) ; var_1 . method_4 ( var_7 , var_8 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = getconfig ( ) ; var_1. method_2 ( ( ( var_2. method_3 ( ) ) * int_1 ) ) ; var_1. method_4 ( var_2. method_5 ( ) ) ; for ( int index : var_2. method_6 ( ) ) { var_1. method_7 ( ( index + ( ( var_2. method_8 ( index ) ) * int_1 ) ), ( ( var_2. method_8 ( index ) ) * int_1 ) ) ; } }

************

************
tgt: public java.util.list < java.lang.object > method_1 ( java.util.list < java.lang.object > list ) { for ( type_1 var_1 : var_2 ) { if ( var_1 instanceof type_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 ) ) ; list . method_2 ( var_3 . method_1 ( new java.util.arraylist < > ( ) ) ) ; } } return list ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( var_2. method_2 ( string_1 ) ) ; var_3. method_3 ( string_2, var_4 class ) ; var_3. method_3 ( string_3, var_4 class ) ; var_3. method_3 ( string_4, var_4 class ) ; var_3. method_4 ( ) ; var_3. update ( ) ; type_2. method_5 ( var_5 class, new type_3 ( ) ) ; method_6 ( new type_4 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_1 == null ) || ( ! ( var_1 . method_2 ( string_1 ) ) ) ) { } else { var_2 = var_1 . method_4 ( string_1 ) ; } if ( ( method_5 ( ) ) != null ) { } }
[0]: public void method_1 ( ) { if ( var_1 ) { return ; } var_1 = true ; type_1 var_2 = var_3 ; if ( var_2!= null ) { var_3 = null ; if ( var_4 ) { var_5. method_2 ( var_2 ) ; } } method_3 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { if ( isempty ( ) ) return null ; type_1 x = var_1 [ var_2 ] ; var_1 [ ( ( var_2 ) ++ ) ] = null ; if ( ( var_2 ) == ( n ) ) var_2 = 0 ; return x ; }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; for ( java.lang.string x : var_3 ) { if ( type_3. method_2 ( x, var_4 ) ) { return true ; } } for ( java.lang.string x : var_5 ) { if ( type_3. method_2 ( x, var_4 ) ) { return true ; } } return false ; } }

************

************
tgt: public void execute ( type_1 var_1 ) { java.lang.string text = var_1 . getvalue ( 0 ) . tostring ( ) ; java.lang.string var_2 = string_2 ; type_2 var_3 = new type_2 ( text ) ; var_2 = var_3 . method_2 ( ) ; var_4 . method_3 ( new type_3 ( text , var_2 ) ) ; var_4 . method_4 ( var_1 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. method_2 ( int_1, ( ( ( var_1. method_3 ( ). height ) - ( var_2. height ) ) - int_2 ), var_3, var_2. height ) ; this. method_4 ( ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( final type_3 var_1 , final type_4 < type_2 , type_5 > var_2 ) { final type_1 < type_2 > var_3 = super . method_1 ( var_1 , var_2 ) ; final type_6 < type_2 , type_5 > var_4 = var_2 . method_2 ( ) ; var_3 . add ( new type_7 ( var_5 , var_5 , var_6 , var_4 ) ) ; var_3 . add ( new type_8 ( var_6 ) ) ; return var_3 ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1, int_1, int_1, int_1, int_2, int_3, int_1, int_1, int_4, int_5 ) ; type_2 var_2 = var_1. method_1 ( ) ; type_3 var_3 = new type_3 ( false, true, false, false ) ; java.util.list < type_2 > var_4 = var_3. method_2 ( var_2 ) ; java.lang.system.out.println ( var_4. get ( 0 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 . method_3 ( var_1 . method_4 ( ) ) ) ; var_1 . method_5 ( 1 ) ; type_2 var_3 = var_4 . method_6 ( string_1 ) ; var_1 . method_8 ( new java.util.hashset < type_2 > ( java.util.arrays.aslist ( var_3 ) ) ) ; var_5 . method_9 ( var_1 ) ; }
[0]: public void delete ( java.lang.string id ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { if ( ( var_2. get ( i ). getid ( ). equals ( id ) ) && ( ( var_2. get ( i ) )!= null ) ) { this. var_2. delete ( java.lang.integer.parseint ( var_2. get ( i ). getid ( ) ) ) ; } } }

************

************
tgt: public int method_1 ( java.lang.object var_1 , java.lang.object var_2 ) { type_1 var_3 = ( ( type_1 ) ( var_1 ) ) ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; return java.lang.long . method_1 ( var_5 . method_3 ( ) , var_6 . method_3 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( ) ; var_3. method_3 ( var_2 ) ; var_4. method_4 ( var_3 ) ; var_3. method_5 ( 0, true ) ; var_5. method_6 ( getstring ( var_6 ), var_7 [ 0 ] ) ; var_5. method_7 ( ) ; var_8. method_8 ( ) ; var_9. settext ( method_9 ( 0, var_7 [ 0 ] ) ) ; }

************

************
tgt: public type_1 method_1 ( type_2 data ) { type_3 var_1 = new type_3 ( data . method_2 ( ) , data . method_3 ( ) ) ; type_5 var_3 = type_6 . method_6 ( data . method_7 ( ) . method_8 ( ) ) ; return new type_1 ( ) . position ( var_1 ) . title ( data . method_5 ( ) ) . method_9 ( var_3 ) ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1, type_1 var_2 ) { java.lang.string var_3 = var_4. method_2 ( var_1 ) ; type_2 var_5 = method_3 ( var_3 ) ; type_2 var_6 = method_4 ( var_2 ) ; return ( ( var_7 ) == var_5 ) || ( ( var_7 ) == var_6 )? type_3. method_5 ( ) : ( ( var_8 ) == var_5 ) || ( ( var_8 ) == var_6 )? type_4. method_5 ( ) : type_5. method_5 ( ) ; }

************

************
tgt: public type_1 index ( ) { int var_1 = 1 ; int var_2 = type_2 . method_1 ( string_1 ) ; type_3 < type_4 > var_3 = var_4 . method_2 ( var_1 , var_2 , string_2 , string_2 ) ; return new type_1 ( string_3 ) . data ( string_4 , var_3 ) ; }
[0]: public type_1 method_1 ( type_2 var_1, java.lang.object var_2, type_3 var_3 ) { this. method_2 ( ) ; java.util.list < type_4 > var_4 = this. method_3 ( var_1, var_2, var_3 ) ; return type_5. method_4 ( this. var_5, var_4 ) ; }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : type_2 . values ) { type_3 var_2 = type_4 . method_2 ( var_3 ) ; type_5 . assertnotnull ( var_2 ) ; type_5 . assertequals ( var_3 , var_1 . show , var_2 . method_3 ( ) ) ; type_5 . assertequals ( var_3 , java.lang.integer.parseint ( var_4 ) , var_2 . method_4 ( ) ) ; type_5 . assertequals ( var_3 , java.lang.integer.parseint ( var_5 ) , var_2 . method_5 ( ) ) ; } }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { type_2 < type_3 > var_3 = method_2 ( var_2. method_3 ( ), var_2. method_4 ( ), var_2. method_5 ( ), var_2. method_6 ( ) ) ; if ( var_3!= null ) { var_4. put ( var_2. method_3 ( ), var_3 ) ; } } } }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 . method_2 ( ) ) ) { var_1 . method_3 ( var_2 ) ; var_1 . method_4 ( ) ; type_1 var_3 = ( ( type_1 ) ( method_5 ( ) . method_6 ( var_4 ) ) ) ; var_3 . method_7 ( var_1 , var_5 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = new type_1 ( this ) ; var_2. method_2 ( var_3. method_3 ( ) ) ; var_2. method_4 ( var_3. method_5 ( ) ) ; if ( ( var_4 )!= null ) { var_2. method_6 ( ( ( type_2 ) ( var_4 ) ). method_7 ( ) ) ; } var_2. method_8 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( var_1 ) ; var_2 . message = method_3 ( var_3 ) . gettext ( ) . tostring ( ) ; if ( type_1 . isempty ( var_2 . message ) ) { var_2 . delete ( ) ; } else { var_2 . date = new java.util.date ( ) ; var_2 . method_4 ( ) ; } var_1 . method_5 ( ) ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { var_2. method_2 ( var_3 ) ; this. var_1. method_3 ( ) ; var_4. method_3 ( ) ; method_4 ( var_1 ) ; for ( type_1 var_5 : var_1 ) { this. var_1. add ( var_5 ) ; if ( ( var_6. method_5 ( ) )!= null ) { var_6. method_5 ( ). method_6 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = context . method_2 ( ) ; if ( var_1 instanceof type_3 ) { type_3 var_3 = ( ( type_3 ) ( var_1 ) ) ; type_4 var_4 = var_3 . method_3 ( ) ; var_4 . method_4 ( var_3 ) ; if ( var_4 . method_5 ( ) . isempty ( ) ) var_2 . method_6 ( var_5 , var_4 ) ; } var_2 . method_1 ( var_5 , var_1 ) ; var_2 . method_6 ( var_5 , var_1 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { var_2. info ( string_1 ) ; for ( java.lang.string key : var_3. method_2 ( ) ) { if ( var_4. method_3 ( key ) ) { if ( key. equals ( string_2 ) ) continue ; var_3. set ( key, var_4. getstring ( key, null ) ) ; } } } }

************

************
tgt: protected void method_1 ( type_1 t , boolean var_1 ) { super . method_1 ( t , var_1 ) ; if ( t != null ) { settext ( t . getname ( ) ) ; } else { var_2 . method_3 ( new type_2 ( string_2 ) ) ; } }
[0]: public void method_1 ( java.lang.boolean status, java.lang.string message ) { if ( status ) { type_1. method_2 ( ). method_3 ( this, this ) ; method_4 ( true ) ; } else { type_2. method_2 ( ). method_5 ( this, string_1, ( ( ( string_2 + status ) + string_3 ) + message ), var_1, var_2 ) ; } }

************

************
tgt: public java.lang.string method_1 ( int var_1 ) { type_1 < type_2 > item = first ; java.lang.string var_2 = string_1 ; if ( ( size ( ) ) == 0 ) return var_2 ; for ( int i = 0 ; i < var_1 ; i ++ ) { var_2 += ( item . tostring ( ) ) + "\n" ; item = item . method_2 ( ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 position ) { if ( ( this. var_1 ) == null ) throw new type_2 ( ) ; if ( (! ( this. var_1. method_2 ( position ) ) ) || (! ( method_3 ( ) ) ) ) throw new type_3 ( ) ; this. position = position ; this. var_1 = position ; }

************

************
tgt: public void method_1 ( java.util.list < java.lang.string > var_1 , java.lang.integer var_2 , java.lang.integer var_3 , java.lang.string var_5 , java.lang.string var_6 , java.lang.string var_7 ) { type_1 var_8 = new type_1 ( ) ; var_8 . method_2 ( var_1 ) ; var_8 . method_3 ( method_4 ( var_5 , var_6 ) ) ; var_8 . method_5 ( var_2 ) ; var_8 . method_6 ( var_3 ) ; var_8 . method_7 ( var_7 ) ; var_9 . method_8 ( var_10 , var_8 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.lang.string title ; title = getstring ( var_3 ) ; method_3 ( ). method_4 ( title ) ; var_4 = ( ( type_2 ) ( method_5 ( var_5 ) ) ) ; var_6 = ( ( type_3 ) ( method_6 ( var_7 ) ) ) ; var_8 = ( ( type_4 ) ( method_5 ( var_9 ) ) ) ; }

************

************
tgt: private void method_1 ( ) { int var_1 = file . method_2 ( ) ; int var_2 = file . method_2 ( ) ; int var_3 = file . method_2 ( ) ; file . method_4 ( ) ; int var_4 = int_1 ; int var_5 = 0 ; java.lang.string var_6 = string_1 ; var_7 . add ( ( ( type_1 ) ( new type_2 ( var_6 , var_1 , var_2 , var_5 , var_3 , var_4 ) ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = new int [ ( var_3. method_2 ( ). size ( ) ) - 1 ] ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) var_2 [ i ] = 0 ; super. method_1 ( var_1 ) ; if ( ( var_4 )!= null ) { method_3 ( var_1, var_4 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { type_1 var_3 = var_4 . method_2 ( ) . method_3 ( string_1 , var_1 ) . method_4 ( ) ; if ( var_3 == null ) { return null ; } if ( type_2 . method_5 ( var_2 , var_5 ) ) { return var_3 ; } return null ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; int var_3 = var_1. method_1 ( ) ; long var_4 = var_1. method_1 ( ) ; long c = var_1. method_1 ( ) ; long var_5 = 0 ; long result = type_1. method_2 ( ( var_4 + 1 ), ( c + 1 ), var_3, var_5 ) ; java.lang.system.out.println ( result ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; var_3 . info ( ( string_1 + var_2 ) ) ; if ( ! ( type_3 . contains ( var_2 ) ) ) { type_4 . method_3 ( var_2 ) ; } type_3 . method_4 ( var_2 ) ; return type_1 . method_5 ( ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. split ( var_3, int_1 ) ; method_2 ( var_2 [ 0 ] ) ; var_4 = var_2 [ 1 ]. substring ( 0, var_2 [ 1 ]. method_3 ( var_5 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_12 ) == null ) { return ; } type_1 var_1 = new type_1 ( ) . method_2 ( var_2 , var_3 ) . method_2 ( var_4 , var_5 ) . method_2 ( var_6 , var_7 ) . method_3 ( var_8 , type_2 . method_4 ( method_5 ( ) , var_9 ) ) ; if ( ( var_10 ) != null ) { var_1 . method_6 ( var_11 , var_10 . method_7 ( ) ) ; } var_12 . method_8 ( var_1 . build ( ) ) ; }
[0]: private boolean method_1 ( type_1 [ ] var_1, int var_2, int var_3 ) { if ( var_3 < var_2 ) { throw new type_2 ( ( ( ( string_1 + var_3 ) + string_2 ) + var_2 ) ) ; } for ( int i = var_2 ; i < var_3 ; i ++ ) { type_1 token = var_1 [ i ] ; for ( type_3 var_4 : token. method_2 ( ) ) { if ( var_4. method_3 ( ) ) { return true ; } } } return false ; } }

************

************
tgt: private void method_1 ( final type_1 var_1 , final type_2 var_2 , final type_3 path , final type_4 < ? , ? > var_3 , final type_5 var_4 ) { type_6 . method_2 ( string_1 , var_2 . name ( ) , path , var_3 ) ; method_3 ( var_2 , path , var_1 , var_4 ) ; if ( var_3 instanceof type_8 ) { var_1 . method_4 ( var_2 , path , var_3 ) ; } else { var_1 . put ( var_2 , path , var_3 ) ; } }
[0]: public boolean method_1 ( java.lang.long var_1 ) { synchronized ( var_2 ) { for ( type_1 var_3 : var_4 ) { java.lang.long time = var_5. get ( var_3. method_2 ( ) ) ; if ( ( time == null ) || ( var_1 > time ) ) { return false ; } } } return true ; } }

************

************
tgt: public void method_1 ( int var_1 ) { if ( ( var_1 == ( - 1 ) ) || ( ( var_2 [ var_1 ] ) == null ) ) return ; if ( ( type_1 . method_2 ( var_2 [ var_1 ] . method_3 ( ) ) ) >= 0 ) { method_4 ( var_2 [ var_1 ] ) ; } else { if ( ! ( var_3 ) ) { method_4 ( var_2 [ var_1 ] ) ; } } var_2 [ var_1 ] = null ; }
[0]: private type_1 < type_2 > method_1 ( type_3 var_1, type_4 node, type_1 < type_2 > var_2 ) { if ( node == null ) return var_2 ; if ( var_1. contains ( node. p ) ) var_2. method_2 ( node. p ) ; if ( var_1. method_3 ( var_3 ) ) { method_1 ( var_1, var_4, var_2 ) ; method_1 ( var_1, var_5, var_2 ) ; } return var_2 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { if ( ( var_2 ) != null ) return var_2 ; expr . method_1 ( var_1 ) ; if ( expr . method_2 ( ) ) var_2 = var_3 ; else if ( expr . method_3 ( ) ) var_2 = var_4 ; else return null ; return var_2 ; }
[0]: private type_1 method_1 ( type_1 var_1, short var_2 ) { type_2 var_3 = new type_2 ( ) ; if ( var_2 == ( var_4 ) ) { var_3. method_2 ( var_4 ) ; } else if ( var_2 == ( var_5 ) ) { var_3. method_2 ( var_5 ) ; } else if ( var_2 == ( var_6 ) ) { var_3. method_2 ( var_6 ) ; } var_1. method_3 ( var_3. build ( ) ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.lang.exception { java.lang.string var_2 = var_1 . method_2 ( ) . method_3 ( var_3 . string class ) ; type_2 var_4 = var_5 . method_4 ( var_2 , var_6 class ) ; java.lang.string data = this . method_5 ( var_4 ) ; this . method_6 ( data ) ; }
[0]: private void method_1 ( ) { int var_1 ; if ( var_2 ) { var_1 = results. size ( ) ; } else { var_1 = ( results. size ( ) ) - 1 ; } method_2 ( this, var_3, var_3 ) ; method_3 ( this, var_3, ( ( results. size ( ) ) - 1 ) ) ; var_3 = results. size ( ) ; }

************

************
tgt: public void method_1 ( long var_1 , android.content.context context ) { this . var_1 = var_1 ; if ( ( var_1 < ( var_2 ) ) && ( var_1 != ( - 1 ) ) ) { type_1 . i ( var_3 , string_1 ) ; method_2 ( var_1 , context ) ; } }
[0]: public void update ( ) { for ( type_1 var_1 : var_2 ) { if ( var_1. isempty ( ) ) { var_2. remove ( var_1 ) ; var_3. method_1 ( var_1. method_2 ( ) ) ; type_2. info ( ( ( string_1 + ( var_1. method_2 ( ) ) ) + string_2 ) ) ; } } }

************

************
tgt: public void method_1 ( ) { try { var_1 = new type_1 ( string_1 , int_1 ) ; var_1 . method_2 ( true ) ; var_1 . method_3 ( 0 ) ; var_2 = new java.io.bufferedreader ( new type_2 ( var_1 . method_4 ( ) ) ) ; var_3 = var_1 . method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; } catch ( type_3 var_4 ) { } catch ( java.io.ioexception var_4 ) { } }
[0]: public static void main ( java.lang.string [ ] args ) { if ( ( args [ 0 ] ) == null ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.exit ( 1 ) ; } java.lang.string var_1 = args [ 0 ] ; java.util.arraylist < type_1 > var_2 = type_2. method_1 ( var_1 ) ; type_3 var_3 = new type_3 ( ) ; java.util.arraylist < type_4 > var_4 = var_3. method_2 ( var_2 ) ; java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { this . var_1 = var_1 ; if ( ( var_1 . method_2 ( ) . size ( ) ) != 0 ) { method_3 ( var_1 ) ; method_5 ( var_1 ) ; method_4 ( var_1 ) ; method_6 ( var_1 ) ; } else { } return var_1 ; }
[0]: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; var_2 = new java.util.arraylist < type_1 > ( ) ; var_3 = new java.util.arraylist < type_1 > ( ) ; var_4 = new java.util.arraylist < type_1 > ( ) ; var_5 = new java.util.arraylist < type_1 > ( ) ; var_6 = new java.util.arraylist < type_1 > ( ) ; var_7 = new java.util.arraylist < type_1 > ( ) ; var_8 = new java.util.arraylist < type_1 > ( ) ; var_9 = new java.util.arraylist < type_2 > ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = new type_2 ( var_1 . method_2 ( ) , var_1 . method_3 ( ) ) ; var_3 = type_3 . method_4 ( ) . format ( new java.util.date ( ) ) ; type_4 . method_5 ( var_4 , ( ( ( string_1 + ( var_1 . method_2 ( ) ) ) + string_2 ) + ( var_1 . method_3 ( ) ) ) ) ; type_5 . method_6 ( ) . method_7 ( new type_6 ( var_2 ) ) ; }
[0]: public void init ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { type_4 var_2 = null ; java.util.list < type_5 > var_3 = var_4. method_1 ( ) ; var_1. method_2 ( string_1, var_3 ) ; type_6. info ( string_2 ) ; var_2 = var_1. method_3 ( string_3 ) ; var_2. method_4 ( var_1, response ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( var_2 , ( - ( var_3 . method_3 ( ) ) ) , ( ( method_4 ( ) ) - ( var_3 . method_5 ( ) ) ) ) ) { type_1 . method_6 ( this ) ; method_7 ( ) ; } }
[0]: protected void method_1 ( type_1 target ) { assert ( var_1 )!= null ; assert ( var_2 )!= null ; if ( var_1. method_1 ( var_2, target ) ) { for ( type_1 var_3 : var_4 ) if ( ( var_5. size ( ) ) == 0 ) var_4. remove ( var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { while ( ( var_1 . size ( ) ) > 0 ) { type_1 var_2 = var_1 . remove ( ) ; ( ( type_3 ) ( var_2 . method_5 ( ) ) ) . method_6 ( var_2 . method_7 ( ) , var_2 . method_8 ( ) ) ; } }
[0]: private boolean method_1 ( ) { int var_1 = java.lang.integer. method_2 ( var_2. gettext ( ). tostring ( ) ) ; if ( var_1 > ( method_3 ( ) ) ) { var_3. method_4 ( getstring ( var_4, var_5. method_5 ( ) ) ) ; method_6 ( var_2 ) ; return false ; } return true ; }

************

************
tgt: public void method_1 ( android.view.view view , type_1 var_1 ) { super . method_1 ( view , var_1 ) ; var_2 = new type_2 ( getactivity ( ) , var_3 ) ; var_4 . method_2 ( var_2 ) ; var_4 . method_3 ( this ) ; if ( isempty ) { if ( type_3 . method_4 ( getactivity ( ) ) ) { method_5 ( true ) ; method_6 ( var_5 ) ; } else { type_4 . method_7 ( getactivity ( ) , getstring ( var_6 ) , var_7 ) . show ( ) ; } } }
[0]: public void method_1 ( type_1 var_1, int position ) { var_2. method_2 ( var_2. getcontext ( ). method_3 ( ). getcolor ( var_3 [ ( position + ( ( var_4 ) % ( var_3. length ) ) ] ) ) ) ; var_5. settext ( var_6 [ position ]. method_4 ( ) ) ; var_7. settext ( var_6 [ position ]. method_5 ( ) ) ; }

************

************
tgt: public int method_1 ( int var_1 ) { int var_2 = var_1 ; if ( ( ( var_3 ) < ( java.lang.math.abs ( var_2 ) ) ) && ( var_1 < 0 ) ) { var_2 = ( - ( var_3 ) ) + 1 ; var_3 = 1 ; } else { var_3 += var_1 ; } if ( var_2 != 0 ) var_4 . method_2 ( var_2 ) ; return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { for ( int x = 1 ; x < ( ( var_1. length ( ) ) + 1 ) ; x ++ ) { java.lang.string var_2 = string_1 + x ; java.lang.string var_3 = method_2 ( var_1, var_2 ) ; if ( var_3. equals ( string_3 ) ) { } else if ( method_3 ( var_4, var_3 ) ) { var_4. put ( var_4. length ( ), var_3 ) ; } } } }

************

************
tgt: public boolean method_1 ( ) { int var_1 = this . var_2 . method_2 ( ) ; boolean var_3 = ( ( var_4 ) != null ) && ( ( this . var_4 ) != var_1 ) ; if ( var_3 && ( type_1 . method_3 ( ) ) ) type_1 . method_4 ( string_1 ) ; this . var_4 = var_1 ; return var_3 ; }
[0]: private synchronized type_1 method_1 ( ) { final type_2 var_1 = new type_2 ( var_2, type_3. method_2 ( ) ) ; var_1. method_3 ( string_1 ) ; var_1. method_4 ( true ) ; this. var_3. add ( var_1 ) ; return var_1. method_5 ( ) ; }

************

************
tgt: protected type_1 < type_2 > method_1 ( type_1 < type_2 > var_1 ) { try { type_3 var_2 = method_2 ( var_1 ) ; type_3 var_3 = var_4 . method_1 ( var_2 ) ; var_1 = method_3 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { throw new type_4 ( var_5 ) ; } return var_1 ; }
[0]: private java.lang.string method_1 ( java.lang.object var_1 ) throws java.lang.exception { type_1 var_2 = type_2. method_2 ( var_1, var_3 class ) ; if ( var_2 == null ) { return null ; } java.lang.string var_4 = ( ( java.lang.string ) ( var_2. method_3 ( var_1 ) ) ) ; if ( type_3. method_4 ( var_4 ) ) { type_4. method_5 ( string_1, var_1, var_2. getname ( ) ) ; } return var_4 ; }

************

************
tgt: private void method_1 ( type_1 var_2 ) { type_2 var_3 = var_4 . method_2 ( ( string_1 + ( var_5 ) ) , var_6 ) ; while ( var_3 != null ) { method_3 ( new type_3 ( context , ( ( java.util.list < java.lang.object > ) ( var_3 . method_4 ( ) ) ) , var_2 . method_5 ( ) , var_2 . method_6 ( ) ) ) ; var_3 = var_4 . method_2 ( ( string_1 + ( var_5 ) ) , var_6 ) ; } }
[0]: public type_1 method_1 ( java.lang.integer var_1 ) { type_1 var_2 = new type_1 ( ) ; try { type_2 var_3 = var_4. method_2 ( var_5. method_1 ( var_1 ) ) ; var_6. add ( var_7. method_3 ( var_3 ) ) ; } catch ( type_3 var_8 ) { var_8. method_4 ( ) ; var_9. error ( var_8. tostring ( ), var_8 ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.util.set < type_1 > var_1 = var_2 . method_2 ( string_1 ) ; assertnotnull ( var_1 ) ; assertequals ( 1 , var_1 . size ( ) ) ; assertequals ( string_1 , var_1 . iterator ( ) . method_3 ( ) . getid ( ) ) ; }
[0]: protected java.lang.string [ ] get ( type_1 var_1 ) { java.lang.string var_2 = type_2. method_1 ( ). method_2 ( p. method_3 ( var_1 ) ). method_4 ( ) ; try { } catch ( java.lang.nullpointerexception var_3 ) { return new java.lang.string [ ] { } ; } return new java.lang.string [ ] { var_2 } ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( double var_1 , int var_2 , type_2 var_3 ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( ) ; list . add ( new type_1 ( var_5 ) . method_2 ( var_2 ) ) ; list . add ( var_3 . build ( ) . method_3 ( var_6 ) ) ; return list ; }
[0]: public type_1 method_1 ( ) { method_2 ( ) ; type_1 var_1 = var_2. method_3 ( ) ; var_2 = var_2. method_4 ( ) ; var_2. method_5 ( null ) ; if ( ( var_2 ) == null ) { var_3 = null ; } ( var_4 ) -- ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 error ) { if ( error != null ) { method_2 ( ( ( ( string_1 + ( error . method_3 ( ) ) ) + string_2 ) + ( error . method_4 ( ) ) ) ) ; } else { type_2 . method_5 ( var_1 , string_3 ) ; } }
[0]: void method_1 ( ) { var_1. method_2 ( false ) ; if ( ( var_2 )!= null ) { var_2. method_3 ( ) ; var_2 = null ; node. method_4 ( var_3 ) ; node. method_4 ( var_4 ) ; node. method_4 ( var_5 ) ; var_6. setvalue ( new type_1 ( var_7 ) ) ; } }

************

************
tgt: private boolean method_1 ( type_1 c , type_2 var_1 , type_3 var_2 ) { if ( ( var_2 . count ( var_3 ) ) > 1 ) { errors . add ( ( ( ( ( ( ( var_5 . name ( ) ) + string_1 ) + ( c . name ) ) + string_2 ) + string_3 ) + ( var_1 . name ) ) ) ; return false ; } return true ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = null ; try { type_1 var_2 = method_2 ( ) ; for ( int i = int_1 ; i < ( var_2. length ( ) ) ; i ++ ) { var_1. put ( var_2. method_3 ( i ) ) ; } } catch ( type_2 var_3 ) { var_3. method_4 ( ) ; } finally { return var_1 ; } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof type_1 ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( ( this . length ( ) ) == ( var_1 . length ( ) ) ) && ( type_2 . equals ( var_2 , var_3 ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) { java.util.arraylist < type_2 > var_2 = type_3. method_2 ( var_3 ) ; if ( ( var_2. size ( ) ) > 0 ) { method_3 ( ) ; method_4 ( var_2 ) ; if ( var_4. method_5 ( ) ) { method_4 ( var_3 ) ; } this. method_6 ( false ) ; } else { var_5. settext ( string_1 ) ; } }

************

************
tgt: public void method_1 ( java.lang.boolean var_1 ) { if ( ( var_2 . method_2 ( ) ) && ( ( method_3 ( ) ) != null ) ) { var_2 . method_4 ( var_1 ) ; type_1 . method_5 ( getactivity ( ) , getactivity ( ) . getstring ( ( var_1 ? var_3 : var_4 ) , method_3 ( ) ) ) ; } }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( string_1 ) ; var_2. add ( var_3 ) ; var_2. add ( var_4 ) ; java.util.arraylist < type_2 > var_5 = new java.util.arraylist < > ( ) ; var_5. add ( var_1 ) ; assertequals ( string_2, var_5, var_6. method_2 ( var_4, var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( false ) ; var_1 = null ; } if ( ( var_3 ) != null ) { var_3 . method_3 ( false ) ; var_3 = null ; } }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2, type_2 < java.lang.string > var_3, boolean var_4, java.lang.string var_5 ) { if ( method_2 ( var_2 ) ) { var_1. method_3 ( type_3. method_4 ( var_3. method_5 ( null ) ). method_6 ( var_6 ). method_7 ( ). method_8 ( var_4 ). method_9 ( var_5 ). build ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception { if ( var_1 . isempty ( ) ) { return null ; } java.lang.string var_2 = var_1 . getname ( ) ; java.io.file var_3 = new java.io.file ( var_2 ) ; var_1 . method_2 ( var_3 ) ; type_1 var_4 = method_3 ( var_2 ) ; boolean var_5 = var_3 . delete ( ) ; return var_4 ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { type_2 var_2 = new type_3 ( ). method_2 ( ) ; type_4 < type_1 > query = var_2. method_3 ( string_1, var_3 class ) ; query. method_4 ( string_2, var_1 ) ; query. method_4 ( string_3, string_4 ) ; return query. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 ) ; type_1 var_2 = type_2 . method_3 ( ) . method_4 ( ) ; var_3 = ( ( float ) ( var_4 ) ) / float_1 ; var_5 = ( ( float ) ( var_2 . height ) ) / float_2 ; var_6 . method_5 ( var_3 ) ; var_6 . method_6 ( var_5 ) ; var_7 . method_7 ( var_3 , var_5 ) ; var_8 = true ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( var_3 )!= null?! ( var_3. equals ( var_2. method_1 ( ) ) ) : ( var_2. method_1 ( ) )!= null ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; number = 0 ; var_2 = false ; type_2 . method_3 ( this . method_4 ( ) , string_1 . method_4 ( ) . method_5 ( ) , string_1 , string_1 ) ; method_6 ( var_3 . main ) ; final type_3 var_4 = ( ( type_3 ) ( method_7 ( var_5 . count ) ) ) ; var_4 . settext ( number . tostring ( ) ) ; }
[0]: public static byte [ ] method_1 ( final int value ) { final byte [ ] var_1 = new byte [ int_1 ] ; var_1 [ 0 ] = ( ( byte ) ( value < < int_2 ) ) ; var_1 [ 1 ] = ( ( byte ) ( value < < int_3 ) ) ; var_1 [ int_4 ] = ( ( byte ) ( value < < int_5 ) ) ; var_1 [ int_6 ] = ( ( byte ) ( value ) ) ; return var_1 ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = ( ( type_1 ) ( method_2 ( ) . method_3 ( var_2 ) ) ) . method_4 ( ) ; } if ( ( var_1 ) == null ) { return ; } }
[0]: public void method_1 ( type_1 var_1, int position ) { method_2 ( var_1 ) ; var_2. method_3 ( position ) ; var_3. method_4 ( var_4, var_5. get ( position ) ) ; var_3. method_5 ( var_4 ) ; var_3. method_6 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; var_3 . setvalue ( var_2 . method_2 ( ) ) ; var_4 . setvalue ( var_2 . method_2 ( ) ) ; var_5 . setvalue ( var_2 . method_2 ( ) ) ; var_6 . setvalue ( var_2 . method_2 ( ) ) ; var_7 . setvalue ( var_2 . method_2 ( ) ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { var_2. add ( new type_2 ( string_1, var_1. method_2 ( ). tostring ( ) ) ) ; var_2. add ( new type_2 ( string_1, var_1. method_2 ( ). tostring ( ) ) ) ; method_3 ( ) ; var_3. method_4 ( var_2 ) ; var_4. method_5 ( var_3 ) ; var_5. method_6 ( ) ; return true ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.lang.thread var_3 = new java.lang.thread ( ) { public void method_3 ( ) { try { java.lang.thread . method_4 ( int_1 ) ; } catch ( type_2 var_4 ) { var_4 . method_5 ( ) ; } finally { android.content.intent intent = new android.content.intent ( var_5 this , var_6 class ) ; method_6 ( intent ) ; method_7 ( var_7 , var_8 ) ; } } } ; var_3 . start ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { if ( type_2. get ( string_1 ). equals ( string_2 ) ) method_3 ( ) ; else method_4 ( ) ; } else if ( ( var_1. method_2 ( ) ) == ( var_3 ) ) { super. method_1 ( new type_1 ( this, var_3 ) ) ; method_4 ( ) ; } else super. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( byte [ ] data , type_1 var_1 ) { if ( var_1 == null ) return ; step = var_1 . method_2 ( ) . method_3 ( ) ; var_2 = type_2 . method_4 ( step , ( ( step ) * ( var_1 . method_2 ( ) . method_5 ( ) ) ) ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( int_1, ( ( var_2 ) - int_2 ) ) ; if ( ( var_3. size ( ) ) > 0 ) { var_1. text ( var_3. get ( var_4 ). getname ( ), 0, 0 ) ; } else { var_1. text ( string_1, 0, 0 ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_3 < type_2 > response ) { type_4 . method_2 ( var_2 , ( string_1 + ( response . method_3 ( ) ) ) ) ; type_4 . method_2 ( var_2 , ( string_2 + ( type_5 . method_4 ( var_1 . method_5 ( ) . method_6 ( ) ) ) ) ) ; switch ( response . method_3 ( ) ) { case int_1 : break ; default : type_6 . method_7 ( new type_7 ( var_1 , response ) ) ; break ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = var_3. method_2 ( var_1 ) ; if ( var_2!= null ) { java.lang.string var_4 = var_2. method_3 ( ) ; java.lang.string var_5 = var_2. method_4 ( ) ; method_5 ( var_4, var_5 ) ; var_6 = var_2 ; } else { var_7. method_6 ( var_8 ) ; } }

************

************
tgt: private java.util.date method_1 ( java.lang.string var_1 , boolean var_2 ) { long var_4 = new java.util.date ( ) . gettime ( ) ; for ( type_1 format : var_3 ) { try { java.util.date result = format . method_2 ( var_1 ) ; return ( result . gettime ( ) ) > var_4 ? new java.util.date ( var_4 ) : result ; } catch ( type_2 var_5 ) { type_3 . method_3 ( var_6 , string_1 ) ; } } return var_2 ? method_4 ( var_1 , false ) : null ; }
[0]: private < type_1 > java.lang.object method_1 ( type_1 var_1, java.lang.string fieldname ) throws type_2 { type_3 field = method_2 ( var_1, fieldname ) ; try { return field. get ( var_1 ) ; } catch ( type_4 var_2 ) { throw new type_2 ( java.lang.string.format ( var_3, string_1, fieldname, var_1. getclass ( ) ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.util.list < type_1 > var_1 ) { java.lang.string var_2 = var_3 . getvalue ( ) ; for ( type_1 var_4 : var_1 ) { if ( var_4 . method_2 ( ) . getname ( ) . equals ( var_2 ) ) { return var_4 ; } } return null ; }
[0]: public static type_1 < java.lang.object > method_1 ( java.lang.object x ) { if ( x instanceof type_1 ) { return ( ( type_1 < java.lang.object > ) ( x ) ) ; } else { java.util.list < java.lang.object > list = new java.util.arraylist < java.lang.object > ( 1 ) ; list. add ( 1 ) ; return list ; } }

************

************
tgt: protected long method_1 ( type_1 var_1 ) { if ( ( var_1 . method_3 ( ) ) != ( var_4 ) ) return 0 ; long var_2 = var_1 . method_4 ( ) ; long var_3 = type_2 . method_2 ( ) ; long var_5 = ( var_3 - var_2 ) / ( var_6 ) ; return type_3 . method_5 ( 0 , var_5 ) ; }
[0]: public void method_1 ( ) { try { while ( true ) { var_1. method_2 ( 1 ) ; var_2. method_2 ( ) ; java.lang.string a = var_3. method_3 ( ). tostring ( ) ; var_4. method_4 ( a ) ; var_2. method_5 ( ) ; } } catch ( java.lang.exception x ) { x. method_6 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 a = new type_2 ( ) ; for ( type_3 error : errors ) { a . put ( error . method_1 ( ) ) ; } var_1 . put ( string_1 , a ) ; return var_1 ; }
[0]: public void method_1 ( ) { var_1 = null ; var_2. method_2 ( ). remove ( var_3 ) ; var_4. method_3 ( ). remove ( var_3 ) ; var_3. method_4 ( ) ; var_1 = null ; var_3. method_5 ( ) ; var_3 = null ; type_1. method_6 ( ) ; }

************

************
tgt: int method_1 ( java.lang.object value , int var_1 ) { int var_2 = var_1 ; if ( ( value != null ) && ( value instanceof java.lang.string ) ) { try { var_2 = java.lang.integer . method_2 ( ( ( java.lang.string ) ( value ) ) ) ; } catch ( type_1 var_3 ) { var_2 = var_1 ; } } return var_2 ; }
[0]: public static void method_1 ( ) { type_1. start ( ) ; var_1. info ( string_1 ) ; try { type_2. method_2 ( string_2 ) ; type_2. method_2 ( string_3 ) ; java.lang.string [ ] var_2 = new java.lang.string [ ] { string_4, string_5, string_6 } ; java.lang.string [ ] values = new java.lang.string [ ] { string_3, string_7, string_8, string_9 } ; type_3. method_2 ( var_2, values ) ; } catch ( type_4 var_3 ) { } } }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > errors = new java.util.arraylist < > ( ) ; errors . add ( new type_1 ( string_1 ) ) ; errors . add ( new type_1 ( string_2 ) ) ; java.lang.string message = var_1 . method_2 ( errors ) ; type_2 . assertthat ( message ) . method_3 ( ( ( ( ( ( ( "\n" + ( var_2 ) ) + string_3 ) + string_4 ) + "\n" ) + string_5 ) + "\n" ) ) ; }
[0]: public void method_1 ( java.lang.string data ) { android.content.intent i = new android.content.intent ( ) ; i. method_2 ( var_1 ) ; i. method_3 ( var_2, data ) ; i. method_4 ( string_1 ) ; method_5 ( android.content.intent. method_6 ( i, string_2 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { var_2 . method_1 ( var_1 ) ; var_3 . method_2 ( var_4 , var_4 . method_3 ( var_1 ) ) ; var_5 . method_2 ( var_4 , var_4 . method_4 ( ) ) ; var_6 . method_1 ( var_1 ) ; var_8 . method_1 ( var_1 ) ; var_9 . method_1 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { try { var_2. method_2 ( var_3. gettext ( ), var_4. gettext ( ), var_5. gettext ( ), var_6. gettext ( ) ) ; var_7. settext ( string_1 ) ; method_3 ( ) ; method_4 ( ) ; } catch ( type_2 var_8 ) { var_7. settext ( string_2 ) ; } }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : method_2 ( ) . method_3 ( ) ) { type_2 var_2 = method_4 ( var_1 ) ; if ( var_2 . method_5 ( ) ) { var_2 . method_6 ( false , true ) ; var_2 . method_7 ( true ) ; } } var_3 . method_8 ( ) ; var_4 . method_8 ( ) ; super . method_1 ( ) ; }
[0]: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 = type_2. method_2 ( ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( method_3 ( ). method_4 ( var_1. get ( i ). method_3 ( ) ) ) { var_2 = 0 ; var_3 += 1 ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { if ( ( var_1 . getid ( ) ) == ( var_2 ) ) { if ( var_4 . isempty ( ) ) return ; type_2 var_3 = var_4 . method_2 ( position ) ; for ( type_3 var_5 : method_3 ( ) ) { var_5 . method_4 ( ) . method_5 ( var_3 ) ; } method_6 ( var_6 , 0 , 0 ) ; } }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_1. get ( i ). method_1 ( ) ; if ( ( var_1. get ( i ). method_2 ( ) ) == 0 ) var_1. remove ( i ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { try ( type_3 var_2 = method_2 ( var_1 , string_1 ) ) { var_3 . method_3 ( var_1 . method_4 ( ) , var_2 ) ; if ( ! ( var_4 ) ) { method_5 ( var_1 ) ; var_4 = true ; } } catch ( java.lang.exception var_6 ) { throw new type_2 ( var_6 ) ; } }
[0]: public boolean add ( type_1 var_1 ) { java.lang.object [ ] var_2 = new java.lang.object [ ( var_3. length ) + 1 ] ; for ( int x = 0 ; x < ( var_3. length ) ; x ++ ) { var_2 [ x ] = var_3 [ x ] ; } var_2 [ var_3. length ] = var_1 ; return true ; }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = string_1 ; int temp = start ; while ( temp != ( end ) ) { var_1 += ( array [ temp ] ) + string_2 ; if ( temp == ( ( array . length ) - 1 ) ) { temp = 0 ; } else { temp ++ ; } } var_1 += array [ temp ] ; var_1 += string_3 ; return var_1 ; }
[0]: public synchronized type_1 method_1 ( ) { method_2 ( ) ; if ( var_1. isempty ( ) ) return null ; type_1 tmp = null ; java.lang.long key = var_1. get ( 0 ) ; tmp = type_2. method_3 ( key ) ; var_1. remove ( 0 ) ; return tmp ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.object var_2 , java.lang.object var_3 ) { var_4 . method_2 ( ) . setvalue ( java.lang.string . method_3 ( ( ( int ) ( var_5 . getvalue ( ) ) ) ) ) ; var_6 . method_5 ( ( ( var_5 . getvalue ( ) ) / int_1 ) ) ; var_6 . method_4 ( ) . method_5 ( ( ( var_5 . getvalue ( ) ) / int_1 ) ) ; }
[0]: public java.lang.boolean method_1 ( type_1 var_1 ) { java.lang.boolean var_2 = true ; type_2 var_3 = new type_2 ( ) ; var_3. put ( var_4, var_1. method_2 ( ). tostring ( ) ) ; var_3. put ( var_5, var_1. method_3 ( ). tostring ( ) ) ; var_3. put ( var_6, var_1. method_4 ( ) ) ; type_3 var_7 = this. method_5 ( ) ; var_7. method_6 ( var_8, null, var_3 ) ; var_7. method_7 ( ) ; return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( ) ; if ( ( var_3 ) == null ) { var_3 = new type_2 ( int_1 , new type_3 ( ) { public void method_1 ( type_1 var_1 ) { if ( var_2 . method_3 ( ) ) var_2 . method_4 ( ) ; } } ) ; var_3 . method_5 ( true ) ; var_3 . start ( ) ; } }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3. method_2 ( int_1, int_2, 0, 0, string_1 ) ; var_1. method_3 ( ) ; method_4 ( var_1, int_2, int_2, 0, 0 ) ; type_4. method_5 ( var_2 ) ; var_1 = type_3. method_2 ( int_3, int_2, 0, 0, string_1 ) ; var_1. method_3 ( ) ; method_4 ( var_1, 0, int_2, 0, 0 ) ; type_4. asserttrue ( var_2 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { boolean var_2 = false ; java.util.iterator < type_1 > iterator = var_3 . iterator ( ) ; while ( iterator . method_2 ( ) ) { type_1 var_4 = iterator . method_3 ( ) ; if ( var_4 != null ) { var_3 . remove ( var_4 ) ; var_2 = true ; break ; } } return var_2 ; }
[0]: private static type_1 method_1 ( type_2 item, type_3 offset ) { if ( item. method_2 ( ). method_3 ( string_1 ) ) { return type_4. method_4 ( item, offset ) ; } else if ( item. method_2 ( ). method_3 ( string_2 ) ) { } else { type_4. method_5 ( ( ( string_3 + ( item. method_2 ( ) ) ) + string_4 ) ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 var_2 = new type_2 ( var_1 ) ; type_3 var_3 = type_3 . method_2 ( ( ( var_4 ) * int_1 ) ) ; var_3 . method_3 ( id . method_4 ( ) ) ; var_3 . method_3 ( id . method_5 ( ) ) ; var_2 . method_6 ( var_3 . array ( ) ) ; method_7 ( var_6 , var_2 ) ; method_7 ( var_7 , var_2 ) ; var_2 . method_8 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( var_2. get ( 1 ), var_2. get ( 0 ), var_2. get ( int_1 ) ) ; type_1 var_3 = var_1. method_2 ( ) ; asserttrue ( var_1. equals ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { java.lang.string var_1 = string_1 ; type_3 var_2 = var_3 ; type_4 var_4 = new type_5 ( var_2 ) ; type_6 var_5 = new type_6 ( var_4 ) ; type_7 query = new type_8 ( var_1 ) ; java.util.set < java.lang.string > var_6 = var_5 . method_2 ( query ) ; java.lang.system.out.println ( var_6 . size ( ) ) ; for ( java.lang.string var_7 : var_6 ) java.lang.system.out.println ( var_7 ) ; }
[0]: private void method_1 ( ) { var_1. add ( new type_1 ( ) ) ; var_1. add ( new type_2 ( ) ) ; var_1. add ( new type_3 ( ) ) ; var_1. add ( new type_4 ( ) ) ; var_1. add ( new type_5 ( ) ) ; var_1. add ( new type_6 ( ) ) ; var_1. add ( new type_7 ( ) ) ; var_1. add ( new type_8 ( ) ) ; var_1. add ( new type_9 ( ) ) ; }

************

************
tgt: void method_1 ( final type_1 var_1 ) { if ( var_2 . method_2 ( var_3 , var_4 ) ) open . method_3 ( ) ; if ( var_5 . remove ( var_1 ) ) var_6 . method_4 ( ) . method_5 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, type_1 var_2 ) throws type_2, java.io.ioexception { type_3 var_3 = type_3. method_2 ( var_4, type_4. method_3 ( var_2 ) ) ; type_5 var_5 = new type_6 ( ). url ( ( ( ( var_6 ) + string_1 ) + var_1 ) ). method_4 ( string_2, method_5 ( ) ). method_1 ( var_3 ). build ( ) ; return method_6 ( var_5 ) ; }

************

************
tgt: protected void method_1 ( ) { type_1 . method_2 ( string_1 , string_2 ) ; type_2 var_1 = new type_3 ( var_2 ) . method_3 ( ) . build ( ) ; var_3 = new type_4 ( this ) . method_4 ( var_4 , var_1 ) . build ( ) ; var_3 . method_5 ( ) ; super . method_1 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, float var_3, float var_4, float var_5 ) { if ( method_2 ( var_1 ) ) { return true ; } else { return var_6. method_3 ( var_1. method_4 ( ), this, true, false ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 , float x , float y , float var_3 , float var_4 ) { if ( var_1 != null ) { var_2 . method_2 ( ) ; var_2 . method_6 ( var_1 , x , ( ( ( var_5 ) - y ) - var_4 ) , var_3 , var_4 ) ; var_2 . end ( ) ; } }
[0]: private java.lang.boolean method_1 ( ) { type_1 var_1 = new type_1 ( this. var_2 ) ; java.lang.string var_3 = var_1. method_2 ( ) ; long var_4 = var_1. method_3 ( ) ; try { this. var_5. method_4 ( var_4, var_3, this. var_2 ) ; } catch ( java.lang.exception var_6 ) { type_2. method_5 ( ( string_1 + ( var_6. tostring ( ) ) ), string_2 ) ; return false ; } return true ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 var_1 = type_1 . method_2 ( ) ; type_2 var_2 = var_1 . method_3 ( ) ; type_3 var_3 = ( ( type_3 ) ( method_4 ( ) ) ) ; if ( ( var_3 . method_5 ( ) ) != null ) { for ( type_4 var_4 : var_3 . method_5 ( ) ) { var_2 . method_6 ( var_4 ) ; var_2 . method_1 ( ) ; } } }
[0]: public type_1 method_1 ( java.util.map < java.lang.string, java.lang.object > var_1, java.lang.string... names ) { if ( ( var_1 == null ) || ( names == null ) ) return this ; for ( java.lang.string var_2 : names ) { if ( var_1. method_2 ( var_2 ) ) { java.lang.object var_3 = var_1. get ( var_2 ) ; if ( type_2. isempty ( var_3 ) ) { set ( var_2, var_4 ) ; } else { set ( var_2, var_3 ) ; } } } return this ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { double var_2 = type_3 . method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; int var_3 = ( type_4 . method_5 ( var_4 , var_5 ) ) + 1 ; var_2 = method_6 ( var_2 , var_3 ) ; return new type_1 ( var_6 , var_2 , this , var_1 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_2 temp = var_2 ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { int index = method_2 ( var_1. method_3 ( i ) ) ; if ( temp. method_4 ( index ) ) { temp = temp. method_5 ( index ) ; } else { return null ; } } return temp ; }

************

************
tgt: public int method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; for ( type_1 var_2 : method_2 ( ) ) { if ( ! ( var_1 . contains ( var_2 . method_3 ( ) ) ) ) { var_1 . add ( var_2 . method_3 ( ) ) ; } } return var_1 . size ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( 0 ). method_3 ( string_1 ) ) { var_1. method_4 ( 0, ( ( var_2 ) + string_2 ) ) ; var_1. method_4 ( 1, ( ( ( ( var_3 ) + string_3 ) + ( var_2 ) ) + string_4 ) ) ; var_1. method_4 ( int_1, ( ( var_4 ) + string_5 ) ) ; var_1. method_4 ( int_2, ( ( var_5 ) + string_6 ) ) ; } }

************

************
tgt: java.lang.string add ( type_1 var_1 , java.lang.string line ) { boolean var_2 = method_1 ( line , var_1 . method_2 ( ) ) ; boolean var_3 = method_1 ( line , var_1 . method_3 ( ) ) ; if ( var_2 && var_3 ) { return ( string_1 + line ) + "\n" ; } else if ( var_2 && ( ! var_3 ) ) { return line + "\n" ; } return "\n" ; }
[0]: public void method_1 ( type_1 context, type_2 intent ) { boolean value = intent. method_2 ( string_1, false ) ; type_3. method_3 ( var_1, string_2 ) ; type_2 msg = new type_2 ( string_3 ) ; msg. method_4 ( string_1, value ) ; type_4. method_5 ( context ). method_6 ( msg ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { if ( ( this . var_1 . size ( ) ) != 0 ) { for ( int i = 0 ; i < ( this . var_1 . size ( ) ) ; i ++ ) { if ( this . var_1 . get ( i ) . equals ( var_1 ) ) { return true ; } } } return false ; }
[0]: public final type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4. method_2 ( var_1, string_1 ) ; return type_1. method_3 ( new type_5 < type_2 > ( this, type_6. method_4 ( ), type_6. method_4 ( ), var_2, var_3, var_1, type_6. method_4 ( ), var_4, var_3 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_3 . show ( ) ; java.lang.string var_4 = var_5 . method_2 ( ) . tostring ( ) ; method_3 ( var_4 ) ; type_2 . method_4 ( this ) . method_5 ( var_4 ) . method_6 ( new type_3 ( this ) ) . method_8 ( ( ( type_4 ) ( method_9 ( var_7 ) ) ) ) ; var_3 . method_10 ( ) ; }
[0]: private static boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = true ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { int c = var_1. method_2 ( i ) ; if ( c > int_1 ) { var_2 = false ; break ; } } return var_2 ; }

************

************
tgt: public type_1 put ( type_2 key , type_1 value ) { type_1 var_1 = var_2 . get ( ( ( java.lang.math.abs ( key . method_1 ( ) ) ) % ( var_3 ) ) ) . add ( key , value ) ; if ( var_4 ) { method_2 ( ) ; var_4 = false ; } return var_1 ; }
[0]: public void method_1 ( type_1 < type_2 > var_1 ) { if ( ( method_2 ( ). size ( ) )!= 1 ) { return ; } type_2 var_2 = method_3 ( ) ; if ( var_2 == null ) { return ; } var_1. method_4 ( var_2 ) ; if ( var_2 instanceof type_3 ) { var_1. method_5 ( var_3 ) ; } else { var_1. method_5 ( var_4 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { method_2 ( ) ; type_1 . method_3 ( var_2 , ( string_1 + ( var_1 ) ) ) ; } type_2 . method_4 ( null ) ; type_1 . method_3 ( var_2 , string_2 ) ; method_5 ( ) ; var_3 = true ; method_7 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception { if ( response. method_2 ( ) ) { java.lang.string var_2 = response. method_3 ( ). string ( ) ; type_3. method_4 ( string_1, var_2 ) ; method_5 ( ) ; } else { type_3. method_4 ( string_1, string_2 ) ; method_6 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; method_4 ( ) ; }
[0]: public java.util.list < type_1 > get ( int var_1 ) { java.util.list < type_1 > result = null ; try { type_2 var_2 = type_3. method_1 ( ). method_2 ( ) ; result = var_2. method_3 ( this. var_1 ) ; } catch ( java.lang.exception var_3 ) { type_4. method_4 ( var_4, string_1 ) ; } return result ; }

************

************
tgt: public void method_1 ( ) { status = var_1 ; method_2 ( ) ; java.io.file file = new java.io.file ( ( ( ( ( var_2 ) + string_1 ) + ( filename ) ) + string_2 ) ) ; file . delete ( ) ; var_3 = 0 ; }
[0]: public double [ ] method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) var_1 [ i ] = data [ i ] ; var_2 = - 1 ; type_1. method_2 ( var_1, var_3, int_2, var_2 ) ; double [ ] var_4 = type_1. method_3 ( ) ; return var_4 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { float var_3 = ( var_4 ) / int_1 ; var_1 . method_2 ( 0 , 0 , var_3 , var_2 ) ; for ( int i = 1 ; i <= int_2 ; i ++ ) { float var_5 = var_3 * ( i * int_3 ) ; var_1 . method_3 ( new type_3 ( ( - var_5 ) , ( - var_5 ) , var_5 , var_5 ) , int_4 , int_1 , false , var_2 ) ; } }
[0]: private static void method_1 ( ) { int id = type_1. method_2 ( string_1 ) ; type_2 var_1 = type_2. method_3 ( id ) ; if ( var_1 == null ) { java.lang.system.out.println ( ( ( string_2 + id ) + string_3 ) ) ; return ; } var_1. delete ( ) ; java.lang.system.out.println ( ( ( string_2 + id ) + string_4 ) ) ; java.lang.system.out.println ( ( ( string_2 + id ) + string_4 ) ) ; }

************

************
tgt: public void add ( type_1 var_1 , type_2 var_2 ) { assert var_2 != null ; type_3 < type_2 > n = method_1 ( var_1 , var_2 ) ; if ( ( var_3 ) == null ) { assert ( var_4 ) == null ; var_4 = n ; var_3 = n ; return ; } var_3 . method_2 ( n ) ; var_3 = n ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_5. method_4 ( new type_4 ( ) ) ; method_3 ( var_7 ). method_5 ( new type_5 ( ) { public void method_6 ( android.view.view var_8 ) { method_7 ( ) ; } } ) ; type_6. init ( ) ; } }

************

************
tgt: public boolean equals ( final java.lang.object var_1 ) { if ( ! ( var_1 instanceof type_1 ) ) { return false ; } final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( var_3 . equals ( var_4 ) ) && ( name . equals ( var_2 . name ) ) ; }
[0]: public void method_1 ( type_1 var_1, boolean var_2 ) { type_2 var_3 = new type_2 ( ( ( method_2 ( ) ) * int_1 ), ( ( method_2 ( ) ) * int_1 ), method_3 ( ). method_4 ( ), method_3 ( ). method_5 ( ) ) ; var_1. method_6 ( var_4 ) ; if ( var_2 == true ) { var_1. method_1 ( var_3 ) ; var_1. method_7 ( var_3 ) ; } else { var_1. method_1 ( var_3 ) ; } }

************

************
tgt: public boolean equals ( final java.lang.object var_1 ) { if ( ( this ) == var_1 ) { return true ; } if ( ( var_1 != null ) && ( ( getclass ( ) ) == ( var_1 . getclass ( ) ) ) ) { final type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return value . equals ( var_2 . value ) ; } return false ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_2 ( var_1. method_3 ( ) ) ; var_2. method_4 ( var_1. method_5 ( ) ) ; var_2. method_6 ( ). add ( var_3 ) ; type_2. method_7 ( var_3, var_4 ) ; var_2. method_6 ( ). add ( var_3 ) ; }

************

************
tgt: public double method_1 ( double var_1 ) { if ( ( method_2 ( ) ) == 0 ) return 0 ; double var_2 = super . method_1 ( var_1 ) ; double var_3 = var_4 . method_1 ( var_2 ) ; double var_5 = var_2 - var_3 ; if ( var_5 != 0 ) { super . method_3 ( var_5 ) ; } return var_3 ; }
[0]: public static boolean method_1 ( java.lang.string name ) { if (! ( type_1. method_2 ( ). method_3 ( ) ) ) return true ; if ( var_1. method_4 ( name ) ) return var_1. get ( name ). method_5 ( ) ; return false ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( false ) ; try { type_2 var_2 = var_1 . method_3 ( var_3 ) ; type_3 . assertthat ( var_2 . method_4 ( ) , type_4 . method_5 ( var_3 ) ) ; java.util.list < java.lang.string > var_4 = var_2 . method_6 ( ) ; java.util.list < java.lang.string > var_5 = java.util.arrays.aslist ( var_6 , var_7 ) ; type_3 . assertthat ( var_4 , type_4 . method_5 ( var_5 ) ) ; } catch ( java.lang.exception var_8 ) { var_8 . method_7 ( ) ; } }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { if ( ( ( response. method_2 ( ) ) == null ) && ( ( response. method_2 ( ). var_2. size ( ) ) == 0 ) ) { var_3. method_3 ( var_4 ) ; return ; } var_3. method_4 ( response. method_2 ( ). var_2 ) ; }

************

************
tgt: private static int method_1 ( type_1 [ ] var_1 , byte var_2 ) { int var_3 = var_4 ; for ( type_1 var_5 : var_1 ) { int label = var_5 . method_2 ( ) ; if ( ( ( label > 0 ) && ( label < var_3 ) ) && ( var_2 == ( var_5 . getcolor ( ) ) ) ) { var_3 = label ; } } if ( var_3 != ( var_4 ) ) { return var_3 ; } else { return 0 ; } }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { var_2. method_2 ( string_1, var_1. method_3 ( ) ) ; var_2. method_2 ( string_2, var_1. method_4 ( ) ) ; var_2. method_2 ( string_3, var_1. method_5 ( ) ) ; type_3. method_1 ( var_1 ) ; var_3. info ( string_4 ) ; return string_5 ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 , java.lang.integer var_2 ) { for ( java.lang.string var_3 : var_4 . get ( var_1 ) . get ( var_2 ) . method_2 ( ) ) { var_4 . get ( var_1 ) . get ( var_2 ) . put ( var_3 , null ) ; } }
[0]: public long method_1 ( type_1 c ) { type_2. method_2 ( var_1, string_1, c. getname ( ) ) ; if ( c. method_3 ( ) ) return 1 ; if ( c. method_4 ( ) ) { try { type_2. method_2 ( var_1, string_2 ) ; c. method_5 ( null ). get ( ) ; c. method_6 ( ). method_7 ( ) ; } catch ( java.lang.exception var_2 ) { type_2. method_2 ( var_1, string_3, var_2 ) ; } } return 1 ; } }

************

************
tgt: private void method_1 ( android.content.intent intent ) { if ( type_1 . equals ( intent . method_2 ( ) ) ) { java.lang.string query = intent . method_3 ( var_1 ) ; var_2 = type_3 . method_4 ( this ) . method_5 ( query ) ; var_3 . method_6 ( var_2 ) ; var_3 . method_7 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1. method_2 ( ). method_3 ( ). method_4 ( ). method_5 ( string_1 ). method_6 ( ). method_7 ( ). method_8 ( ). method_9 ( string_2 ). method_6 ( ). method_10 ( string_3 ). method_6 ( ). method_7 ( ). method_11 ( ). method_6 ( ) ; }

************

************
tgt: private java.lang.string [ ] method_1 ( java.util.arraylist < java.lang.string > var_1 ) { int count = var_1 . size ( ) ; java.lang.string [ ] var_2 = new java.lang.string [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { var_2 [ i ] = var_1 . get ( i ) ; } return var_2 ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; var_6 = var_4. method_3 ( var_7 ) ; var_8 = var_4. method_3 ( var_9 ) ; var_10 = type_4. method_4 ( ) ; var_11 = new type_5 ( ) ; return var_4 ; }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( var_1 . method_3 ( ) ) ) ) ; type_2 . method_1 ( var_1 ) ; if ( ( ! ( type_3 . method_2 ( var_1 ) ) ) && ( ! ( var_1 instanceof type_4 ) ) ) type_2 . method_1 ( new type_5 ( var_1 ) , var_1 . method_3 ( ) ) ; }
[0]: public void method_1 ( type_1 item ) { method_2 ( ). add ( item ) ; java.lang.object [ ] var_1 = new java.lang.object [ int_1 ] ; var_1 [ 0 ] = item. method_3 ( ). method_4 ( ) ; var_1 [ 1 ] = item. method_3 ( ). method_5 ( ) ; var_1 [ int_2 ] = item. method_6 ( ) ; super. method_1 ( var_1 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 = ( ( type_2 ) ( var_1 ) ) ; if ( ( var_1 . contains ( var_3 . method_2 ( ) ) ) && ( ( var_1 . method_3 ( ) ) == false ) ) { var_4 = true ; if ( ( var_5 ) <= 0 ) var_6 = int_1 ; } else { var_4 = false ; var_7 = false ; if ( var_3 . method_4 ( ) ) { var_3 . method_5 ( ) ; } } }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] var_2 ; try { var_2 = method_2 ( var_1, null ) ; type_2. method_3 ( var_2 ) ; return var_2 [ ( ( var_2. length ) - 1 ) ] ; } catch ( type_3 var_3 ) { throw new type_4 ( string_1, var_3 ) ; } }

************

************
tgt: public java.lang.string method_1 ( int var_1 ) { java.util.date var_2 = new java.util.date ( ) ; type_1 var_3 = new type_1 ( string_1 ) ; java.util.calendar c = java.util.calendar.getinstance ( ) ; c . method_2 ( var_2 ) ; c . add ( var_4 , var_1 ) ; return var_3 . format ( c . gettime ( ) ) ; }
[0]: private final boolean method_1 ( type_1 type, java.lang.object msg, byte var_1 ) { if ( type_2. method_2 ( var_1, type ) ) return var_2. method_3 ( ) ; synchronized ( var_3 ) { var_2. method_4 ( method_5 ( type ) ) ; var_2. method_4 ( var_4 ) ; var_2. method_4 ( string_1 ) ; var_2. method_6 ( msg ) ; } return var_2. method_3 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = ( method_2 ( var_1 . method_3 ( 0 ) ) ) + "\n" ; int i = 1 ; while ( ( var_1 . method_3 ( i ) ) != null ) { var_2 += ( method_2 ( var_1 . method_3 ( i ) ) ) + "\n" ; i ++ ; } return var_2 ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; var_2. method_3 ( ) ; method_4 ( 0 ) ; method_5 ( 0, string_1 ) ; var_3. method_6 ( new type_1 ( ) { public void method_7 ( ) { method_8 ( ) ; } }, int_1 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.long id ) { type_2 var_1 = this . var_2 . method_1 ( id ) ; if ( var_1 == null ) { java.lang.string message = string_1 + id ; java.lang.string url = string_2 + id ; var_3 . error ( ( ( string_3 + id ) + string_4 ) ) ; throw new type_3 ( message , url ) ; } var_3 . info ( ( string_5 + var_1 ) ) ; return type_1 . method_2 ( var_1 ) ; }
[0]: public void method_1 ( ) { if (! ( var_1 ) ) { var_2. method_2 ( ) ; var_1 = true ; } var_3. method_3 ( context, new type_1 ( ) { public void method_4 ( java.util.list < type_2 > var_4 ) { if ( var_4 == null ) { var_2. method_5 ( ) ; } else if ( ( var_4. size ( ) ) == 0 ) { var_2. method_6 ( ) ; } else { var_2. method_7 ( var_4 ) ; } } } ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 . method_2 ( ) . method_3 ( ) . method_4 ( ) ) { var_1 . method_5 ( type_3 . method_1 ( var_3 , var_2 ) , new type_4 ( type_5 . method_6 ( var_2 . method_2 ( ) . method_3 ( ) . gettime ( ) ) ) ) ; } }
[0]: private static int method_1 ( java.util.arraylist < type_1 > var_1 ) { int var_2 = 0 ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_2 += var_1. get ( i ). method_2 ( ). method_3 ( ) ; } return var_2 ; }

************

************
tgt: type_1 method_1 ( char var_1 , boolean var_2 ) { ( var_3 ) -- ; int var_4 = method_2 ( var_1 ) ; type_1 var_5 = var_6 . get ( var_4 ) ; if ( ( ( var_7 ) == 1 ) && var_2 ) { var_6 . set ( var_4 , null ) ; } return var_5 ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { type_1 i = ( ( type_1 ) ( var_1 ) ) ; return ( this. var_2. equals ( var_3 ) ) && ( this. var_4. equals ( var_5 ) ) ; } else if ( var_1 instanceof java.lang.string ) { return this. var_4. equals ( ( ( java.lang.string ) ( var_1 ) ) ) ; } return false ; }

************

************
tgt: public void method_1 ( java.net.url url , type_1 var_1 ) { var_2 = type_2 . method_2 ( ) ; type_3 . method_3 ( new type_4 < > ( string_1 ) ) ; type_5 . method_3 ( new type_4 < > ( string_2 ) ) ; type_6 . method_3 ( new type_4 < > ( string_3 ) ) ; type_7 . method_3 ( new type_4 < > ( "name" ) ) ; type_8 . method_3 ( new type_4 < > ( string_4 ) ) ; method_5 ( ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 + ( ( java.lang.string ) ( var_3 ) ) ; type_1 var_2 = type_1. method_2 ( string_3 ). get ( ) ; type_2 < type_3, type_4 > result = new type_5 ( ). method_3 ( var_2, var_3 ) ; asserttrue ( result. method_4 ( ) ) ; assertequals ( var_1, result. method_5 ( ). method_6 ( ) ) ; assertequals ( string_4, result. method_5 ( ). type ( ) ) ; }

************

************
tgt: public final void method_1 ( boolean var_1 ) { if ( ( ( method_2 ( ) ) && ( ! ( method_3 ( ) ) ) ) && var_1 ) { method_4 ( ) ; var_2 . set ( true ) ; } else if ( ( ! var_1 ) && ( method_3 ( ) ) ) { method_5 ( ) ; var_2 . set ( false ) ; } }
[0]: public java.util.list < java.lang.string > method_1 ( type_1 var_1 ) throws type_2 { if ( var_1 == null ) return null ; java.util.list < java.lang.string > var_2 = new java.util.linkedlist < java.lang.string > ( ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) var_2. add ( ( ( java.lang.string ) ( var_1. get ( i ) ) ) ) ; return var_2 ; }

************

************
tgt: void method_1 ( final type_1 var_1 , final java.lang.string value ) throws java.lang.exception { method_2 ( var_1 ) ; final java.lang.string var_2 = var_1 . method_3 ( "id" ) ; method_4 ( var_2 ) ; method_5 ( var_2 ) ; for ( int i = 0 ; i < ( value . length ( ) ) ; i ++ ) { var_1 . method_6 ( type_2 . tostring ( value . method_7 ( i ) ) ) ; method_8 ( int_1 ) ; } method_9 ( ) ; }
[0]: private type_1 method_1 ( final type_2 name, final java.util.list < type_3 > list, final boolean var_1, final boolean var_2 ) { if ( var_1 && (! var_2 ) ) { return new type_1 ( name, list ) ; } else if ( ( method_2 ( ) ) && ( name. method_3 ( type_4. method_4 ( ) ) ) ) { return new type_5 ( name, list ) ; } else { return new type_1 ( name, list ) ; } }

************

************
tgt: public java.lang.object method_1 ( final java.lang.object ... param ) { try { return type_1 . method_2 ( param [ 0 ] , var_1 . method_3 ( ) ) ; } catch ( java.lang.exception var_2 ) { throw new type_3 ( ( ( ( string_1 + ( param [ 0 ] ) ) + string_2 ) + ( var_1 ) ) , var_2 ) ; } }
[0]: public java.lang.string method_1 ( ) throws type_1, java.io.ioexception { java.util.list < java.lang.string > var_1 = type_2. method_2 ( new java.io.filereader ( file ) ) ; java.lang.string var_2 = string_1 ; for ( java.lang.string line : var_1 ) { var_2 += line + ""\n"" ; } return var_2. substring ( 0, var_2. length ( ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { if ( var_2 . get ( i ) . getname ( ) . equals ( var_1 . getname ( ) ) ) { return false ; } } var_2 . add ( var_1 ) ; return true ; }
[0]: public void method_1 ( type_1 <?,? > var_1, java.util.collection < type_2 > result ) { type_3 p = ( ( type_3 ) ( var_1 ) ) ; for ( type_4 var_2 : type_5. method_2 ( p. method_3 ( ). values ( ), var_3 class ) ) { result. method_4 ( var_2. method_5 ( ) ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { type_1 < type_2 > var_1 = var_2 ; if ( this . isempty ( ) ) { return string_1 ; } java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; var_3 . append ( ( string_2 + ( var_1 . data ) ) ) ; while ( ( var_4 ) != null ) { var_1 = var_4 ; var_3 . append ( string_3 ) . append ( var_1 . data ) ; } var_3 . append ( string_4 ) ; return var_3 . tostring ( ) ; }
[0]: public java.lang.double method_1 ( ) throws java.io.ioexception, type_1 { java.lang.string var_1 = java.lang.string. method_2 ( method_3 ( ) ) ; type_2 pattern = type_2. method_4 ( string_1 ) ; java.util.regex.matcher var_2 = pattern. method_5 ( var_1 ) ; return var_2. method_6 ( )? java.lang.double. method_2 ( var_2. method_7 ( 0 ) ) : float_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( ) ; if ( ( var_1 . getvalue ( ) ) != null ) { for ( type_1 var_3 : var_1 . method_3 ( ) ) { type_2 var_4 = var_3 . getvalue ( var_5 class ) ; if ( ! ( var_6 ) ) { var_2 . add ( var_4 ) ; } } } var_7 . method_4 ( ) ; var_8 . method_5 ( ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = var_2. getstring ( string_1, var_3 ) ; long var_4 ; try { var_4 = java.lang.long.parselong ( var_1 ) ; } catch ( java.lang.exception var_5 ) { var_4 = int_1 ; } type_1. i ( var_6, ( string_2 + var_4 ) ) ; if ( var_4!= 0 ) { var_4 = ( int_2 * int_3 ) * var_4 ; method_2 ( var_4 ) ; } else { type_1. i ( var_6, string_3 ) ; } }

************

************
tgt: private double method_1 ( final type_1 var_1 ) { double var_2 = 0.0 ; for ( int i = 1 ; i <= ( var_3 ) ; i ++ ) { double var_4 = var_1 . method_2 ( i ) ; var_2 += var_4 * var_4 ; } return var_2 ; }
[0]: private java.util.list < type_1 > method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.util.list < type_1 > var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { var_1. method_2 ( var_3. get ( i ). method_3 ( ) ) ; var_2. add ( var_1 ) ; } return var_2 ; }

************

************
tgt: public int method_1 ( ) { int start = this . name . method_2 ( string_1 ) ; int var_1 = this . name . method_2 ( string_1 , ( start + 1 ) ) ; if ( ( start != ( - 1 ) ) && ( var_1 != ( - 1 ) ) ) { java.lang.string var_2 = this . name . substring ( ( start + 1 ) , var_1 ) ; this . var_3 = java.lang.integer.parseint ( var_2 ) ; return this . var_3 ; } else return 1 ; }
[0]: public boolean method_1 ( type_1 var_1, android.view.view var_2, int var_3, int var_4, long id ) { final type_2 var_5 = var_6. get ( var_3 ). getvalue ( ). get ( var_4 ). method_2 ( ) ; if (! ( var_5. equals ( var_7 ) ) ) { var_7 = var_5 ; if ( var_2!= null ) { if ( ( var_8 )!= null ) { var_8. method_3 ( var_7 ) ; } } } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . method_2 ( ) ) || ( var_3 . method_2 ( ) ) ) { if ( ! ( var_4 . method_3 ( ) ) ) var_4 . setenabled ( true ) ; } else { var_4 . method_4 ( ) ; var_4 . method_5 ( string_1 ) ; var_4 . setenabled ( false ) ; } }
[0]: public void method_1 ( ) { type_1 query = new type_1 ( ) ; type_2 var_1 = type_3. method_2 ( var_2 class ) ; type_3. method_3 ( var_1. getid ( ) ). method_4 ( int_1 ) ; type_3. method_5 ( var_1 ) ; java.lang.long count = var_3. method_6 ( var_1, query ) ; type_4. assertequals ( int_2, count. method_7 ( ) ) ; }

************

************
tgt: public static void method_1 ( int var_1 , int var_2 ) { switch ( var_2 ) { case var_3 : if ( ! ( var_4 . contains ( var_1 ) ) ) { var_4 . method_2 ( var_1 ) ; } break ; case var_5 : if ( ! ( var_6 . contains ( var_1 ) ) ) { var_6 . method_2 ( var_1 ) ; } break ; } }
[0]: public type_1 < type_2 > method_1 ( java.lang.integer var_1 ) throws java.lang.exception { type_3. info ( string_1, var_1 ) ; var_1 = ( ( var_1 == null ) || ( var_1 < 1 ) )? 0 : -- var_1 ; type_1 < type_2 > var_2 = var_3. method_1 ( var_1, int_1 ) ; type_3. info ( string_2, var_2. method_2 ( ) ) ; return var_2 ; }

************

************
tgt: static boolean method_1 ( type_1 b , int var_1 ) { if ( ! ( method_2 ( b , var_1 , string_1 ) ) ) return false ; int c = method_3 ( b ) ; while ( true ) { if ( ! ( type_3 . method_4 ( b , ( var_1 + 1 ) ) ) ) break ; if ( ! ( method_5 ( b , string_1 , c ) ) ) break ; c = method_3 ( b ) ; } return true ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( ) ; var_1. method_3 ( ) ; assertequals ( true, var_1. num ( string_1 ) ) ; assertequals ( false, var_1. num ( string_1 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.map < java.lang.string , java.lang.object > result = new java.util.hashmap < > ( ) ; int count = 0 ; type_3 var_2 = var_1 . method_2 ( string_1 ) ; for ( java.lang.string key : var_2 ) { result . put ( key , var_3 . method_3 ( key ) ) ; count ++ ; } type_4 . assertequals ( var_4 . size ( ) , count ) ; type_4 . assertequals ( var_4 , result ) ; }
[0]: public boolean method_1 ( ) throws type_1 { type_2 var_1 = var_2. method_2 ( var_3 ) ; if ( ( ( var_4 ) <= ( var_5 ) ) && ( var_6. method_3 ( var_7 ) ) ) { var_6. method_4 ( var_7 ) ; return true ; } else { return false ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { if ( int_1 != ( args.length ) ) { type_1 . method_1 ( ) ; return ; } type_1 var_1 = new type_1 ( args [ 0 ] , args [ 1 ] , java.lang.integer.parseint ( args [ int_2 ] ) ) ; var_1 . method_2 ( ) ; }
[0]: public type_1 method_1 ( final java.lang.string var_1 ) { type_2 < java.lang.string, java.util.collection < type_3 > > method = new type_2 < java.lang.string, java.util.collection < type_3 > > ( ) { public java.util.collection < type_3 > execute ( java.lang.string var_2 ) throws type_4 { java.util.collection < type_5 > var_3 = type_6. method_2 ( ). method_3 ( var_1, null ) ; return type_7. method_4 ( var_3 ) ; } } ; return method. method_5 ( var_1 ) ; }

************

************
tgt: protected type_1 < type_2 < java.lang.string > > method_1 ( final type_3 var_1 ) { try { final java.lang.string var_2 = method_2 ( var_1 . gettype ( ) ) ; return var_3 . method_3 ( var_2 ) ; } catch ( type_4 var_4 ) { return type_6 . method_5 ( var_4 ) ; } }
[0]: public static void method_1 ( ) { java.lang.string file = type_1. method_2 ( string_2 ) ; if ( file. equals ( string_3 ) ) { java.lang.system.out.println ( string_4 ) ; } else { try { type_1. method_3 ( file, var_1 ) ; java.lang.system.out.println ( string_5 ) ; } catch ( java.io.ioexception var_2 ) { type_1. method_4 ( var_2 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.long var_1 , java.lang.long var_2 , type_1 var_3 , type_2 var_4 ) { var_3 . method_3 ( string_1 , var_6 . method_2 ( var_1 ) ) ; var_3 . method_3 ( string_2 , var_7 . method_4 ( var_1 ) ) ; var_3 . method_3 ( string_3 , method_5 ( var_1 ) ) ; var_8 . method_6 ( var_3 , var_2 , var_1 , var_4 ) ; return string_4 ; }
[0]: protected java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = type_2. method_2 ( var_4, var_5, var_6, ( ( var_7 ) + var_1 ), var_2, string_1 ) ; type_3 var_8 = new type_3 ( var_3 ) ; var_8. method_3 ( string_2, string_3 ) ; type_4 < java.lang.string > var_9 = new type_5 ( ) ; return var_10. execute ( var_8, var_9 ) ; }

************

************
tgt: public java.lang.object method_1 ( java.lang.object target ) throws java.lang.exception { java.lang.string [ ] var_1 = ( ( type_1 ) ( var_2 ) ) . method_2 ( ) ; type_2 var_3 = new type_2 ( ) ; java.lang.string var_4 = var_5 . gettext ( ) ; var_1 [ int_1 ] = var_4 ; ( ( type_1 ) ( var_2 ) ) . method_3 ( var_1 ) ; return null ; }
[0]: public java.util.list < java.lang.string > method_1 ( ) { java.lang.string var_1 = var_2. get ( string_1 ) ; java.util.list < java.lang.string > var_3 = new java.util.linkedlist < java.lang.string > ( ) ; type_1 var_4 = new type_1 ( var_1, string_2 ) ; while ( var_4. method_2 ( ) ) { java.lang.string var_5 = var_4. method_3 ( ) ; var_3. add ( var_5 ) ; } return var_3 ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.integer var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; while ( var_1 != 0 ) { for ( java.util.map.entry < java.lang.integer , java.lang.string > var_3 : var_4 . method_2 ( ) ) { java.lang.integer var_5 = var_3 . method_3 ( ) ; java.lang.string var_6 = var_3 . getvalue ( ) ; if ( var_1 >= var_5 ) { var_1 -= var_5 ; var_2 . append ( var_6 ) ; break ; } } } return var_2 . tostring ( ) ; }
[0]: public static void method_1 ( android.content.context var_1 ) { type_1. method_2 ( string_1 ) ; try { type_2 var_2 = new type_2 ( var_1 ) ; var_2. method_3 ( string_2 ) ; } catch ( java.lang.exception var_3 ) { var_3. method_4 ( ) ; type_1. method_5 ( string_3 ) ; } }

************

************
tgt: public void method_1 ( ) { new type_1 ( ) { { var_1 . method_2 ( ) ; result = var_2 ; var_1 . method_3 ( ) ; result = var_3 ; var_1 . method_4 ( ) ; result = var_4 ; var_1 . method_5 ( ) ; result = var_5 ; type_2 . method_6 ( var_2 , var_4 ) ; result = var_6 ; } } ; }
[0]: public type_1 < type_2 > method_1 ( type_3 var_1 ) throws java.io.ioexception { assert var_2. method_2 ( ) ; long position = var_1. method_3 ( ) ; switch ( var_1. method_4 ( ) ) { case var_3 : return new type_1 < > ( position ) ; case var_4 : return new type_4 ( position, var_1, var_5, var_2, true ) ; case var_6 : return new type_5 ( position, var_1, var_5 ) ; default : throw new type_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( var_2 . method_2 ( ) ) ; type_2 . method_3 ( ) ; if ( ( var_3 ) != null ) var_3 . method_3 ( ) ; type_3 . method_3 ( ) ; if ( ( var_4 ) != null ) var_4 . method_3 ( ) ; method_4 ( ) ; type_4 . method_5 ( string_1 ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = new type_3 ( ) ; var_1. method_2 ( ). method_3 ( var_3 ) ; var_2. method_4 ( string_1, var_4. method_5 ( var_1 ) ) ; int var_5 = ( ( java.lang.integer ) ( var_4. method_6 ( var_1 ) ) ) ; var_1. method_2 ( ). method_7 ( var_5 ) ; var_3. method_7 ( var_5 ) ; var_2. method_4 ( string_2, var_3 ) ; return type_4. method_8 ( string_3 ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; switch ( var_1 ) { case var_3 : { if ( ( var_2 == ( var_4 ) ) && ( null != data ) ) { java.util.arraylist < java.lang.string > result = data . method_2 ( var_5 ) ; var_6 . settext ( result . get ( 0 ) ) ; method_3 ( result . get ( 0 ) . tolowercase ( ) ) ; } break ; } } }
[0]: private static java.lang.object getvalue ( java.lang.object var_1, java.lang.string... args ) { if ( ( args.length ) > 0 ) { java.lang.string arg = args [ 0 ] ; java.lang.object obj = ( ( type_1 ) ( var_1 ) ). get ( arg ) ; java.lang.string [ ] var_2 = ( ( java.lang.string [ ] ) ( type_2. remove ( args, 0 ) ) ) ; return type_3. getvalue ( obj, var_2 ) ; } else { return null ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = method_2 ( ) ; type_3 var_3 = var_2 . method_3 ( ) ; if ( ( var_3 != null ) && ( ( var_4 ) != null ) ) { } }
[0]: public void method_1 ( final type_1 var_1, final int position ) { var_2. settext ( var_3 [ position ] ) ; var_4. method_2 ( new type_2 ( ) { public void method_3 ( android.view.view var_5 ) { type_3. method_4 ( var_5, method_5 ( position ), var_6 ). show ( ) ; } } ) ; }

************

************
tgt: protected type_1 method_1 ( final int var_1 , final int var_2 ) { final type_2 var_3 = var_4 ; final type_2 var_5 = new type_2 ( ( ( var_4 . x ) + ( var_6 ) ) , var_4 . y , var_1 , var_4 . height ) ; var_4 = new type_2 ( var_4 . x , var_4 . y , ( ( var_6 ) + var_1 ) , var_4 . height ) ; var_4 . split ( var_3 , var_5 ) ; return var_5 . method_2 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1. method_2 ( ) ; int var_3 = var_1. method_3 ( ) ; type_2 var_4 = new type_2 ( string_1, ( ( var_2 + string_2 ) + var_3 ), false ) ; type_3. method_4 ( ). method_5 ( var_5, var_4 ) ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string name , java.lang.string var_1 , type_2 var_2 ) { type_1 var_3 = new type_1 ( name ) ; if ( var_2 != null ) var_3 . method_2 ( var_2 ) ; if ( var_1 != null ) var_3 . method_3 ( var_1 ) ; var_3 . method_4 ( new java.awt.font ( var_4 , var_5 , int_1 ) ) ; type_3 . init ( var_3 , false , false ) ; return var_3 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_1 var_3 = getintent ( ). method_3 ( ) ; var_4 = var_3. method_4 ( var_5 ) ; var_6 = var_3. getstring ( var_7 ) ; var_8 = var_3. getstring ( var_9 ). tostring ( ) ; var_10 = ( var_6 ) + ( text ) ; var_11 = ( ( type_2 ) ( method_5 ( var_12 ) ) ) ; var_11. settext ( var_10 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_2 . method_3 ( var_1 . method_4 ( type_3 . method_5 ( var_3 class ) ) ) . method_6 ( null ) ; type_4 . assertthat ( new type_5 ( ) . method_7 ( var_1 ) . method_8 ( var_4 ) ) . method_9 ( false ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( this. string ) == null ) return this ; int index = method_2 ( var_1 ) ; if ( index > ( - 1 ) ) { this. end = type_2. method_3 ( this. start, index ) ; } return this ; }

************

************
tgt: public boolean method_1 ( ) { return ( ( ( ( null != ( result ) ) || ( ( var_1 ) != ( status ) ) ) || ( null != ( var_2 . method_2 ( ) ) ) ) || ( null != ( content ) ) ) || ( null != ( file ) ) ; }
[0]: public void update ( float var_1 ) { this. var_2. update ( var_1 ) ; this. var_3. update ( var_1 ) ; if ( ( this. var_4. method_1 ( ). method_2 ( ) ) <= 0 ) { var_5. method_3 ( new type_1 ( this. var_5 ) ) ; type_2. method_4 ( ). method_5 ( ) ; var_6. method_6 ( null ) ; this. var_4. method_7 ( ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int [ ] a = new int [ ] { int_1 , int_2 , int_1 , int_2 , int_4 , 1 , int_3 , int_4 , int_4 , int_1 , int_1 , int_1 , int_1 , int_1 , int_1 } ; java.lang.system.out.println ( type_1 . method_1 ( a ) ) ; java.lang.system.out.println ( type_1 . method_2 ( a ) ) ; }
[0]: public boolean method_1 ( ) { if ( ( var_1 ) == 0 ) { return false ; } else { for ( int i = var_1 ; i > 0 ; i -- ) { this. remove ( i ) ; } var_1 = 0 ; } return true ; }

************

************
tgt: private void method_1 ( double var_1 ) { var_2 = ( x ) + ( ( var_3 [ 0 ] ) * var_1 ) ; var_4 = ( y ) + ( ( var_3 [ 1 ] ) * var_1 ) ; var_5 = ( ( int ) ( var_2 ) ) ; var_6 = ( ( int ) ( var_4 ) ) ; if ( ( var_2 ) < 0 ) ( var_5 ) -- ; if ( ( var_4 ) < 0 ) ( var_6 ) -- ; }
[0]: public void method_1 ( android.view.view var_1 ) { android.content.intent intent = new android.content.intent ( method_2 ( ), var_2 class ) ; type_1 var_3 = new type_1 ( ) ; var_3. method_3 ( string_1, false ) ; intent. method_4 ( var_3 ) ; method_5 ( intent, 1 ) ; method_6 ( var_4, var_5 ) ; if ( ( var_6. method_7 ( ) ) == ( var_7 ) ) { var_6. method_8 ( var_8 ) ; } }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = ( ( type_1 ) ( method_2 ( ) . method_3 ( ) ) ) ; var_1 . method_4 ( true ) ; var_2 = type_2 . method_5 ( var_3 , var_1 , var_4 , null ) ; method_6 ( ) ; type_3 . method_7 ( method_2 ( ) ) ; }
[0]: public void method_1 ( ) { method_2 ( string_1 ) ; type_1 var_1 = new type_1 ( method_3 ( ) ) ; java.util.collection < java.lang.string > var_2 = var_1. method_4 ( var_3, string_2 ) ; type_2. assertthat ( var_2 ). method_5 ( string_3 ) ; var_2 = var_1. method_6 ( var_3, string_4 ) ; type_2. assertthat ( var_2 ). isempty ( ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_1 . method_2 ( var_2 ) ; } if ( ( var_3 ) == null ) { var_3 = new type_3 ( ) ; type_4 var_4 = new type_4 ( ) ; var_3 . method_2 ( var_4 ) ; } }
[0]: private boolean method_1 ( int var_1, int time, int [ ] date ) { return ( ( ( var_1 > time ) && ( ( date [ var_2 ] ) == ( var_3 ) ) ) && ( ( date [ var_4 ] ) == ( var_5 ) ) ) && ( ( date [ var_6 ] ) == ( var_7 ) ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { var_2 . method_2 ( ) ; type_2 var_3 = method_3 ( var_1 . method_4 ( ) ) ; var_3 = var_3 . method_5 ( this , var_1 ) ; var_4 . put ( var_1 . method_4 ( ) , var_3 ) ; var_2 . method_6 ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.lang.system.out.println ( type_1. method_1 ( new int [ ] [ ] { new int [ ] { 1, int_1, int_2, int_3 }, new int [ ] { int_4, int_5, int_6, int_7 }, new int [ ] { int_8, int_9, int_10, int_11 } }, int_5 ) ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { int var_2 = var_3 . get ( var_1 ) . method_2 ( ) ; var_3 . get ( var_1 ) . method_3 ( ) ; return var_2 > ( var_3 . get ( var_1 ) . method_2 ( ) ) ; }
[0]: private void method_1 ( ) { java.util.list < java.lang.string > var_1 = var_2. method_2 ( ). method_3 ( ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { var_3. get ( i ). settext ( var_1. get ( i ) ) ; } var_4. settext ( var_1. get ( 1 ) ) ; var_5. settext ( var_1. get ( ( ( var_1. size ( ) ) - 1 ) ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 context ) throws java.lang.classnotfoundexception , type_3 , type_4 , type_5 , type_6 { type_7 var_1 = new type_7 ( ) ; type_9 . method_3 ( context ) ; type_9 . method_4 ( context , var_1 ) ; type_9 . method_5 ( context ) ; type_9 . method_6 ( context , var_1 ) ; return var_1 . method_7 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_1 = var_1 ; type_2 var_2 = this. var_1. method_2 ( ) ; this. var_3 = this. var_1. method_3 ( ). method_4 ( ) ; this. var_4 = this. var_1. method_5 ( ). method_4 ( ) ; var_2. method_6 ( this ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ! ( this . var_1 ) ) return ( string_1 + ( this . var_2 ) ) + string_2 ; else return ( string_1 + ( method_2 ( this . var_2 . getname ( ) ) ) ) + string_3 ; }
[0]: public synchronized void remove ( final java.lang.string var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_3. get ( var_1 ) ) ) ; if ( null!= var_2 ) { int count = var_2. method_1 ( ) ; if ( 0 >= count ) var_3. remove ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { for ( int var_1 = 0 ; var_1 < ( var_2 . size ( ) ) ; var_1 ++ ) { for ( int var_3 = 0 ; var_3 < ( var_2 . size ( ) ) ; var_3 ++ ) { if ( var_1 != var_3 ) { method_2 ( var_2 . get ( var_1 ) , var_2 . get ( var_3 ) ) ; } } } }
[0]: static boolean method_1 ( type_1 var_1, type_2 <? > var_2, java.util.set < java.lang.string > var_3 ) { return ( ( var_2. method_2 ( var_4 ) ) || ( (! ( var_1. method_3 ( ) ) ) && ( var_2. method_2 ( var_5 ) ) ) ) || (! ( var_3. contains ( var_2. getname ( ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( final java.io.file file ) { final type_1 var_1 = new type_1 ( ) ; type_2 var_2 ; try { var_2 = method_2 ( file ) ; } catch ( final java.lang.exception var_3 ) { var_1 . method_3 ( ( ( ( string_1 + file ) + string_2 ) + ( var_3 . method_4 ( ) ) ) ) ; var_1 . method_5 ( ) ; return var_1 ; } method_6 ( var_2 , file , var_1 ) ; method_7 ( var_2 , var_1 ) ; return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1, int var_2 ) { java.lang.string var_3 = type_2. method_1 ( var_1 ) ; java.util.map < java.lang.string, java.lang.string > var_4 = new java.util.hashmap < java.lang.string, java.lang.string > ( ) ; var_4. put ( string_1, string_2 ) ; var_4. put ( string_3, var_3 ) ; return type_1. status ( int_1 ). method_2 ( var_4 ). build ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_1 . getname ( ) . startswith ( string_1 ) ) { var_2 . put ( string_2 , var_3 ) ; var_4 . remove ( string_2 ) ; } else { var_2 . remove ( string_2 ) ; var_4 . put ( string_2 , ( ( var_5 ) + string_3 ) ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 ; try { type_2 var_2 = var_3. method_2 ( ) ; type_3 var_4 = new type_3 ( var_2 ) ; type_1 var_5 = new type_1 ( ) ; var_1 = var_4. method_3 ( var_5 ) ; } catch ( type_4 | type_5 | type_6 | java.lang.classnotfoundexception var_6 ) { var_7. error ( string_1, var_6 ) ; var_1 = type_7. method_4 ( ) ; } return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.stringbuilder out = new java.lang.stringbuilder ( ) ; out . append ( string_1 ) ; for ( java.lang.string var_1 : var_2 . method_2 ( ) ) { out . append ( var_1 ) . append ( "\t" ) . append ( var_2 . get ( var_1 ) [ 0 ] ) . append ( "\t" ) . append ( var_2 . get ( var_1 ) [ 1 ] ) . append ( "\n" ) ; } return out . tostring ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) this. method_1 ( ( ( type_2 ) ( var_1 ) ) ) ; if ( var_1 instanceof type_3 ) this. method_1 ( ( ( type_3 ) ( var_1 ) ) ) ; if ( var_1 instanceof type_4 ) this. method_1 ( ( ( type_4 ) ( var_1 ) ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( method_2 ( ) . isempty ( ) ) { var_2 = var_3 ; return var_2 ; } type_2 var_4 = ( ( type_2 ) ( method_3 ( ) ) ) ; var_2 = var_4 . method_4 ( this ) ; method_5 ( var_4 . method_6 ( ) . method_7 ( ) ) ; if ( ( var_2 ) instanceof type_3 ) { method_8 ( ( ( type_3 ) ( var_2 ) ) ) ; } return var_2 ; }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string title, java.lang.string label ) { if ( ( title. equals ( string_1 ) ) || ( title. equals ( string_1 ) ) ) { var_1. method_2 ( string_2, var_2. method_1 ( label, label, title, label ) ) ; } else { var_1. method_2 ( string_2, var_2. method_1 ( label, label, label, title ) ) ; } return string_3 ; }

************

************
tgt: public void add ( int index , double element ) { if ( index == ( size ( ) ) ) { add ( element ) ; } else { method_1 ( index ) ; method_2 ( 1 ) ; type_1 . method_3 ( array , index , array , ( index + 1 ) , ( ( size ( ) ) - index ) ) ; set ( index , element ) ; method_4 ( 1 ) ; } }
[0]: public java.lang.object method_1 ( java.lang.object var_1, java.lang.string key ) { type_1 < java.lang.class <? >, type_2 <? > > var_2 = var_3 ; java.lang.string [ ] var_4 = key. split ( string_1 ) ; for ( java.lang.string var_5 : var_4 ) { java.lang.object var_6 = method_2 ( var_1, key, var_2 ) ; if ( var_6 == null ) { return null ; } else { var_1 = var_6 ; var_2 = var_7 ; } } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { list . add ( int_1 ) ; list . add ( int_2 ) ; list . add ( int_3 ) ; list . add ( 1 , int_4 ) ; assertequals ( new java.lang.integer ( int_4 ) , list . get ( 1 ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( ). method_3 ( var_2 ) ; if ( var_1 instanceof type_2 ) method_4 ( ) ; else if (! ( var_1 instanceof type_3 ) ) method_2 ( ). method_5 ( string_1, var_3 ) ; else method_2 ( ). method_5 ( ) ; var_4. method_6 ( method_7 ( ). getstring ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { type_2 var_2 = var_3 . get ( position ) ; android.content.intent var_4 = new android.content.intent ( this , var_5 class ) ; type_3 var_6 = new type_3 ( ) ; var_6 . method_3 ( var_7 , var_2 ) ; var_4 . method_4 ( var_6 ) ; method_5 ( var_4 , var_8 ) ; }
[0]: private static boolean method_1 ( type_1 var_1 ) { try { type_2 field = var_2 class. method_2 ( string_1 ) ; field. method_3 ( true ) ; int c = ( ( int ) ( field. get ( var_1 ) ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.exception var_3 ) { } return false ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , int var_2 , int var_3 , boolean var_4 ) throws type_2 { type_1 var_5 ; type_3 var_6 = method_2 ( var_1 ) ; var_7 . method_3 ( ( string_1 + string_2 ) , var_6 . getid ( ) , var_3 , var_2 ) ; method_5 ( var_2 ) ; method_4 ( var_2 , var_6 . getid ( ) ) ; var_5 = method_1 ( var_2 , var_3 , var_4 ) ; return var_5 ; }
[0]: private void method_1 ( int var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { if ( var_4 [ i ] [ j ]. method_2 ( ) ) { var_4 [ i ] [ j ]. method_3 ( var_5, var_1 ) ; } } } return ; } }

************

************
tgt: public java.util.set < type_1 > method_1 ( type_2 var_1 ) { type_3 var_2 = ( ( type_3 ) ( var_1 . method_2 ( ) . method_3 ( string_1 ) ) ) ; if ( var_2 == null ) { return new java.util.hashset < > ( ) ; } var_2 = var_3 . method_4 ( var_2 ) ; return var_4 . method_5 ( var_2 ) ; }
[0]: public static void method_1 ( type_1 var_1, java.io.inputstream var_2 ) throws java.io.ioexception { final int var_3 = var_2. method_2 ( ) ; if ( var_3!= ( - 1 ) ) { final int size = type_2. method_3 ( var_3, var_2 ) ; final java.io.inputstream var_4 = new type_3 ( var_2, size ) ; final type_2 var_5 = type_2. method_4 ( var_4 ) ; var_5. method_5 ( size ) ; var_1. method_6 ( var_5 ) ; var_5. method_7 ( 0 ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = getconfig ( ) ; var_1 . method_4 ( var_2 . method_5 ( ) ) ; for ( int index : var_2 . method_6 ( ) ) { var_1 . method_7 ( index , ( ( var_2 . method_8 ( index ) ) * int_1 ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this, var_3, false ) ; if ( var_1 == null ) { var_4 = type_3. method_4 ( ) ; method_5 ( ). method_6 ( ). replace ( var_5, var_4 ). method_7 ( string_1 ). commit ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( var_2 . method_2 ( string_1 ) ) ; var_3 . method_3 ( string_2 , var_4 class ) ; var_3 . method_3 ( string_3 , var_4 class ) ; var_3 . method_4 ( ) ; var_3 . update ( ) ; type_2 . method_5 ( var_5 class , new type_3 ( ) ) ; method_6 ( new type_4 ( ) ) ; }
[0]: private java.lang.string method_1 ( type_1 var_1, java.lang.string [ ] var_2, java.lang.string var_3 ) { if ( var_2!= null ) { type_2. method_2 ( var_2 ) ; } java.lang.string var_4 = var_3 ; type_3 p = method_3 ( var_2, var_3, var_4 ) ; var_1. method_4 ( ). method_5 ( p ) ; return p. getname ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { return ; } type_1 var_2 = var_3 ; if ( var_2 != null ) { var_3 = null ; if ( var_4 ) { var_5 . method_2 ( var_2 ) ; } } var_1 = true ; method_3 ( ) ; }
[0]: private java.util.list < type_1 > method_1 ( long var_1 ) throws java.io.ioexception { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < > ( ) ; type_2 var_3 = var_4. method_2 ( var_1 ) ; for ( type_3 var_5 : var_3. method_3 ( ) ) { var_2. add ( method_4 ( var_5, var_1 ) ) ; } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; for ( java.lang.string x : var_3 ) { if ( type_3 . method_2 ( x , var_4 ) ) { return true ; } } for ( java.lang.string x : var_5 ) { if ( type_3 . method_2 ( x , var_4 ) ) { return true ; } } return false ; }
[0]: public type_1 method_1 ( ) { type_1 temp = new type_1 ( this. method_2 ( ), this. gettype ( ), this. getid ( ), this. method_3 ( ), string_1, string_1 ) ; for ( type_2 var_1 : this. method_4 ( ) ) { temp. method_5 ( var_1 ) ; } return temp ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . method_2 ( int_1 , ( ( ( var_1 . method_3 ( ) . height ) - ( var_2 . height ) ) - int_1 ) , var_3 , var_2 . height ) ; this . method_4 ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { for ( type_1 var_2 : var_3 ) { if ( var_2. method_2 ( ) ) { var_4. setenabled ( var_5 ) ; var_6. method_3 ( ( var_1 + ( var_4. method_4 ( ) ) ), var_4. method_5 ( ) ) ; } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( int_1 , int_1 , int_1 , int_1 , int_2 , int_3 , int_1 , int_1 , int_4 , int_5 ) ; type_2 var_2 = var_1 . method_1 ( ) ; java.lang.system.out.println ( var_2 ) ; type_3 var_3 = new type_3 ( false , true , false , false ) ; java.util.list < type_2 > var_4 = var_3 . method_2 ( var_2 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2 ) ; method_3 ( ) ; var_1. method_4 ( ). method_5 ( new type_1 ( ( ( ( ( var_3 ) + string_1 ) + url ) + string_2 ) ) ) ; var_1. method_4 ( ). method_5 ( new type_2 ( ( string_3 + url ) ) ) ; }

************

************
tgt: public void delete ( java.lang.string id ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { if ( ( var_2 . get ( i ) . getid ( ) . equals ( id ) ) && ( ( var_2 . get ( i ) ) != null ) ) { this . var_2 . delete ( java.lang.integer.parseint ( var_2 . get ( i ) . getid ( ) ) ) ; break ; } } }
[0]: protected void method_1 ( boolean var_1 ) { var_2. method_2 ( data. method_3 ( var_3. getstring ( var_4 ) ). getstring ( var_5 ) ) ; if (! var_1 ) var_2. method_4 ( data. method_3 ( var_3. getstring ( var_6 ) ). getint ( var_5 ) ) ; else var_2. method_4 ( data. method_3 ( var_3. getstring ( var_6 ) ). getint ( var_5 ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( ) ; var_3 . method_3 ( var_2 ) ; var_4 . method_4 ( var_3 ) ; var_3 . method_5 ( 0 , true ) ; var_5 . method_6 ( getstring ( var_6 ) , var_7 [ 0 ] ) ; var_5 . method_7 ( ) ; var_8 . method_8 ( ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { int var_3 = var_1. method_2 ( ) ; if ( var_1. method_3 ( ) ) { var_3 = var_2. method_4 ( var_1 ). method_2 ( ) ; } switch ( var_3 ) { case int_1 : return ( var_1. method_5 ( ) ) + string_1 ; case int_2 : return ( var_1. method_5 ( ) ) + string_2 ; default : throw new type_3 ( ( string_3 + var_3 ) ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 , type_1 var_2 ) { java.lang.string var_3 = var_4 . method_2 ( var_1 ) ; type_2 var_5 = method_3 ( var_3 ) ; type_2 var_6 = method_4 ( var_2 ) ; return ( ( var_7 ) == var_5 ) || ( ( var_7 ) == var_6 ) ? type_3 . tostring ( ) : ( ( var_8 ) == var_5 ) || ( ( var_8 ) == var_6 ) ? type_4 . tostring ( ) : type_5 . tostring ( ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { method_2 ( ) ; var_1. method_3 ( ). method_1 ( var_2 ) ; var_1. method_3 ( ). method_4 ( ). method_1 ( var_2 ) ; var_1. method_3 ( ). method_4 ( ). method_5 ( var_2 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.object var_2 , type_3 var_3 ) { this . method_2 ( ) ; java.util.list < type_4 > var_4 = this . method_3 ( var_1 , var_2 , false ) ; return type_5 . method_4 ( this . var_5 , var_4 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) throws type_2 { type_4 < type_5 > var_3 = new type_6 < type_5 > ( ). method_3 ( var_1 ). method_4 ( this. var_4 ). method_5 ( this. var_5 ). build ( ) ; return type_7. method_6 ( this. var_4, var_3 ) ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { for ( type_1 var_2 : var_1 ) { type_2 < type_3 > var_3 = method_2 ( var_2 . method_4 ( ) , var_2 . method_5 ( ) , var_2 . method_6 ( ) ) ; var_4 . put ( var_2 . method_3 ( ) , var_3 ) ; } }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.system.out.println ( string_1 ) ; var_1. method_2 ( string_2, new type_2 ( ) ) ; var_1. method_2 ( string_3, java.util.arrays.aslist ( type_3. values ( ) ) ) ; var_1. method_2 ( string_4, java.util.arrays.aslist ( type_4. values ( ) ) ) ; java.lang.system.out.println ( ( string_5 + ( var_2. method_3 ( ). size ( ) ) ) ) ; java.lang.system.out.println ( ( string_6 + ( var_2. method_4 ( ). size ( ) ) ) ) ; return string_7 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = new type_1 ( this ) ; var_2 . method_2 ( var_3 . method_3 ( ) ) ; var_2 . method_4 ( var_3 . method_5 ( ) ) ; if ( ( var_4 ) != null ) { } var_2 . method_8 ( ) ; }
[0]: public char [ ] method_1 ( ) throws java.io.ioexception { char [ ] var_1 = new char [ 0 ] ; java.lang.system.out.print ( string_1 ) ; final type_1 var_2 = new type_1 ( ) ; final java.lang.string var_3 = var_2. method_2 ( char_1 ) ; var_1 = var_3. method_3 ( ) ; var_1 = null ; type_2. method_4 ( ) ; return var_1 ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { var_2 . method_2 ( var_3 ) ; this . var_1 . method_3 ( ) ; var_4 . method_3 ( ) ; method_4 ( var_1 ) ; for ( type_1 var_5 : var_1 ) { this . var_1 . add ( var_5 ) ; } if ( ( var_6 . method_5 ( ) ) != null ) { var_6 . method_5 ( ) . method_6 ( ) ; } }
[0]: public int compareto ( java.lang.object var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; float f = ( var_3 ) + ( var_4 ) ; float var_5 = ( var_6 ) + ( var_7 ) ; if ( f < var_5 ) { return - 1 ; } else if ( f > var_5 ) { return 1 ; } else { return 0 ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { var_2 . info ( string_1 ) ; for ( java.lang.string key : var_3 . method_2 ( true ) ) { if ( var_4 . method_3 ( key ) ) { if ( key . equals ( string_2 ) ) continue ; var_3 . set ( key , var_4 . getstring ( key , null ) ) ; } } }
[0]: public double method_1 ( double [ ] var_1 ) { double var_2 = ( var_1. length ) - 1 ; double var_3 = method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var += java.lang.math.pow ( ( ( var_1 [ i ] ) - var_3 ), int_1 ) ; } var /= var_2 ; return var ; }

************

************
tgt: public void method_1 ( java.lang.boolean status , java.lang.string message ) { if ( status ) { type_1 . method_2 ( ) . method_3 ( this , this ) ; method_4 ( true ) ; } else { type_2 . method_2 ( ) . method_5 ( this , string_1 , ( ( ( string_2 + status ) + string_3 ) + message ) , var_1 , var_2 ) ; method_4 ( false ) ; } }
[0]: public void method_1 ( ) throws type_1 { type_2 [ ] var_1 = null ; method_2 ( var_1 ). method_3 ( var_2 ). method_4 ( method_5 ( ) ) ; var_3. method_6 ( var_4, var_5 ) ; java.util.list < type_3 > var_6 = var_3. method_7 ( type_4. method_8 ( ) ) ; type_5. assertequals ( var_6. size ( ), 0 ) ; }

************

************
tgt: private void method_1 ( type_1 position ) { if ( ( this . var_1 ) == null ) throw new type_2 ( ) ; if ( ! ( this . var_1 . method_2 ( position ) ) ) throw new type_3 ( ) ; this . position = position ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { java.lang.string [ ] var_4 = var_1. split ( string_1 ) ; boolean var_5 = this. var_6. method_1 ( var_4 [ 0 ], var_2, var_3 ) ; boolean var_7 = this. var_8. method_2 ( var_4 [ 1 ], var_2, var_3 ) ; return var_7 && var_5 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; java.lang.string title ; title = getstring ( var_3 ) ; if ( ( method_3 ( ) ) != null ) { method_3 ( ) . method_4 ( title ) ; } var_4 = ( ( type_2 ) ( method_5 ( var_5 ) ) ) ; var_6 = ( ( type_3 ) ( method_6 ( var_7 ) ) ) ; var_8 = ( ( type_4 ) ( method_5 ( var_9 ) ) ) ; }
[0]: protected void method_1 ( ) { try { if ( ( var_1 )!= null ) { type_1. method_2 ( this, true ) ; type_2. method_3 ( this, string_1 ) ; method_4 ( true ) ; var_1 = null ; } } catch ( type_3 var_2 ) { var_2. method_5 ( ) ; } try { var_3. method_6 ( method_7 ( ) ) ; } catch ( type_4 var_2 ) { var_2. method_5 ( ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_4 ) != null ) { var_2 = new int [ ( var_3 . method_2 ( ) . size ( ) ) - 1 ] ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) var_2 [ i ] = 0 ; method_3 ( var_1 , var_4 ) ; } }
[0]: protected void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { java.lang.string var_2 = var_1. method_2 ( string_1 ) ; if ( ( var_2!= null ) && ( var_2. equals ( string_2 ) ) ) { type_4 var_3 = new type_4 ( new type_5 ( ) ) ; java.util.list < type_6 > var_4 = var_3. method_3 ( ) ; var_1. method_4 ( string_3, var_4 ) ; type_7 var_5 = method_5 ( ). method_6 ( string_4 ) ; var_5. method_7 ( var_1, response ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; int var_3 = var_1 . method_1 ( ) ; long var_4 = var_1 . method_1 ( ) ; long c = var_1 . method_1 ( ) ; long var_5 = 0 ; long result = type_1 . method_2 ( ( var_4 + 1 ) , ( c + 1 ) , var_3 , var_5 ) ; java.lang.system.out.println ( ( result - 1 ) ) ; }
[0]: public void method_1 ( ) throws type_1, java.io.ioexception, type_2 { try ( type_3 c = var_1. method_2 ( ). open ( ) ) { if ( (! ( this. var_2. method_3 ( ) ) ) || (! ( method_4 ( ) ) ) ) { return ; } var_2. method_5 ( ( ( string_1 + ( this. name ) ) + string_2 ) ) ; new type_4 ( var_2. method_6 ( ), var_3, var_4, this, var_2 ) ; } } }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1 . split ( var_3 , int_1 ) ; if ( int_1 == ( var_2 . length ) ) { method_2 ( var_2 [ 0 ] ) ; var_4 = var_2 [ 1 ] . substring ( 0 , var_2 [ 1 ] . method_3 ( var_5 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( var_3, string_1 ) ; java.lang.string var_4 = var_1. method_3 ( ). method_4 ( ) ; java.lang.string var_5 = var_1. method_3 ( ). method_4 ( ) ; java.lang.string result = var_4 + var_5 ; var_1. method_3 ( ). method_5 ( result ) ; }

************

************
tgt: private boolean method_1 ( type_1 [ ] var_1 , int var_2 , int var_3 ) { for ( int i = var_2 ; i < var_3 ; i ++ ) { type_1 token = var_1 [ i ] ; for ( type_3 var_4 : token . method_2 ( ) ) { if ( var_4 . method_3 ( ) ) { return true ; } } } return false ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, var_2, false ) ; var_6 = method_3 ( ). getint ( string_1, 0 ) ; var_7 = var_8. get ( var_6 ) ; type_4. method_4 ( super. getcontext ( ), ( ( string_2 + ( var_7. method_5 ( ). getname ( ) ) ) + string_3 ), var_9 ). show ( ) ; return var_4 ; }

************

************
tgt: public boolean method_1 ( java.lang.long var_1 ) { synchronized ( var_2 ) { for ( type_1 var_3 : var_4 ) { java.lang.long time = var_5 . get ( var_3 . method_2 ( ) ) ; if ( ( time == null ) || ( var_1 >= time ) ) { return false ; } } } return true ; }
[0]: public static type_1 method_1 ( final android.content.context context, final java.lang.charsequence title, final java.lang.charsequence message ) { final type_1 var_1 = new type_1 ( context ) ; var_1. method_2 ( false ) ; if ( title!= null ) var_1. method_3 ( title ) ; if ( message!= null ) var_1. method_4 ( message ) ; return var_1 ; }

************

************
tgt: private type_1 < type_2 > method_1 ( type_3 var_1 , type_4 node , type_1 < type_2 > var_2 ) { if ( node == null ) return var_2 ; if ( var_1 . contains ( node . p ) ) var_2 . method_2 ( node . p ) ; if ( var_1 . method_3 ( var_3 ) ) { var_2 = method_1 ( var_1 , var_4 , var_2 ) ; var_2 = method_1 ( var_1 , var_5 , var_2 ) ; } return var_2 ; }
[0]: public static void method_1 ( android.content.context context, java.lang.string var_1, java.lang.string name, java.lang.string var_2, java.lang.string var_3 ) { android.content.intent intent = new android.content.intent ( ) ; intent. method_2 ( var_4, var_1 ) ; intent. method_2 ( var_5, name ) ; intent. method_2 ( var_6, var_2 ) ; intent. method_2 ( var_7, var_3 ) ; intent. method_3 ( context, var_8 class ) ; context. method_4 ( intent ) ; ( ( type_1 ) ( context ) ). method_5 ( ) ; }

************

************
tgt: private type_1 method_1 ( type_1 var_1 , short var_2 ) { type_2 var_3 = new type_2 ( ) ; if ( var_2 == ( var_4 ) ) { var_3 . method_2 ( var_4 ) ; } else if ( var_2 == ( var_5 ) ) { var_3 . method_2 ( var_5 ) ; } else if ( var_2 == ( var_6 ) ) { var_3 . method_2 ( var_6 ) ; } else { var_3 . method_2 ( var_2 ) ; } var_1 . method_3 ( var_3 . build ( ) ) ; return var_1 ; }
[0]: private void method_1 ( type_1 var_1 ) { type_4 var_4 = method_4 ( ). method_5 ( ) ; var_4. add ( var_5, var_1, var_1. getclass ( ). method_6 ( ) ) ; var_4. method_7 ( var_1. method_8 ( ) ) ; var_4. commit ( ) ; type_5. method_9 ( var_6, ( string_1 + ( var_7. method_10 ( ) ) ) ) ; }

************

************
tgt: private void method_1 ( ) { int var_1 ; if ( var_2 ) { var_1 = results . size ( ) ; } else { var_1 = ( results . size ( ) ) - 1 ; } method_2 ( this , var_3 , var_3 ) ; method_3 ( this , var_3 , var_1 ) ; var_3 = results . size ( ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_2 var_2, int var_3, byte var_4 ) { type_3 var_5 = var_6. get ( var_2 ) ; if ( var_5 == null ) { return null ; } return method_2 ( var_1, var_5, var_4, var_3 ) ; }

************

************
tgt: public void update ( ) { synchronized ( var_2 ) { for ( type_1 var_1 : var_2 ) { if ( var_1 . isempty ( ) ) { var_2 . remove ( var_1 ) ; var_3 . method_1 ( var_1 . method_2 ( ) ) ; type_2 . method_3 ( ( ( string_1 + ( var_1 . method_2 ( ) ) ) + string_2 ) ) ; } } } }
[0]: public void method_1 ( ) { var_1. method_2 ( new java.lang.string [ ] { var_2, var_3 } ) ; var_1. method_2 ( new java.lang.string [ ] { var_2 } ) ; type_1. method_3 ( new java.lang.string [ ] { var_2 }, var_1. method_4 ( ) ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) == 0 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.exit ( 1 ) ; } java.lang.string var_1 = args [ 0 ] ; java.util.arraylist < type_1 > var_2 = type_2 . method_1 ( var_1 ) ; type_3 var_3 = new type_3 ( ) ; java.util.arraylist < type_4 > var_4 = var_3 . method_2 ( var_2 ) ; java.lang.system.out.println ( string_2 ) ; }
[0]: public static void method_1 ( type_1 out, java.util.list < type_2 > var_1, type_3 var_2 ) { if ( var_1. isempty ( ) ) { } else { type_4. method_2 ( out ) ; out. method_3 ( string_1 ) ; out. method_3 ( string_2 ) ; out. method_3 ( string_3 ) ; out. method_3 ( ) ; out. method_3 ( ) ; out. method_3 ( string_4 ) ; for ( type_2 p : var_1 ) { out. method_3 ( p. method_4 ( ) ) ; } type_4. method_2 ( out ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 = new java.util.arraylist < type_1 > ( ) ; var_2 = new java.util.arraylist < type_1 > ( ) ; var_3 = new java.util.arraylist < type_1 > ( ) ; var_4 = new java.util.arraylist < type_1 > ( ) ; var_5 = new java.util.arraylist < type_1 > ( ) ; var_6 = new java.util.arraylist < type_1 > ( ) ; var_7 = new java.util.arraylist < type_1 > ( ) ; var_8 = new java.util.hashset < type_1 > ( ) ; var_9 = new java.util.arraylist < type_2 > ( ) ; }
[0]: public void method_1 ( java.lang.string result ) { if ( ( result!= null ) && (! ( result. equals ( string_1 ) ) ) ) { java.lang.string var_1 = type_1. method_2 ( var_2 ) ; type_2 var_3 = var_4. method_3 ( ( ( var_5 ) + var_1 ), var_6 ) ; var_3. method_4 ( ). method_5 ( string_2, result ). commit ( ) ; boolean var_7 = method_6 ( ) ; } }

************

************
tgt: void init ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { type_4 var_2 = null ; java.util.list < type_5 > var_3 = var_4 . method_1 ( ) ; var_1 . method_2 ( string_1 , var_3 ) ; var_2 = var_1 . method_3 ( string_3 ) ; var_2 . method_4 ( var_1 , response ) ; }
[0]: private static void method_1 ( boolean result, int var_1, java.lang.string var_2, java.lang.string var_3 ) { android.content.intent var_4 = new android.content.intent ( var_5 ) ; var_4. method_2 ( string_1, result ) ; var_4. method_2 ( string_2, var_1 ) ; var_4. method_2 ( string_3, var_2 ) ; var_4. method_2 ( string_4, var_3 ) ; var_4. method_2 ( string_4, var_3 ) ; }

************

************
tgt: protected void method_1 ( type_1 target ) { assert ( var_1 ) != null ; assert ( var_2 ) != null ; if ( var_1 . method_1 ( var_2 , target ) ) { for ( type_1 var_3 : var_4 ) if ( ( var_5 . size ( ) ) == 0 ) { var_4 . remove ( var_3 ) ; return ; } } }
[0]: public void method_1 ( double var_1 ) { double var_2 = type_1. method_2 ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this. x = var_2 * ( type_1. method_3 ( var_1 ) ) ; this. y = var_2 * ( type_1. method_4 ( var_1 ) ) ; }

************

************
tgt: private boolean method_1 ( ) { int var_1 = java.lang.integer . method_2 ( var_2 . gettext ( ) . tostring ( ) ) ; if ( var_1 > ( method_3 ( ) ) ) { var_3 . method_4 ( getstring ( var_4 , method_3 ( ) ) ) ; method_6 ( var_2 ) ; return false ; } return true ; }
[0]: public static void method_1 ( java.lang.string content, java.lang.string filename ) { java.io.file file = type_1. method_2 ( filename ) ; try { assert file!= null ; type_2. method_3 ( file, content, type_3. method_4 ( ), true ) ; } catch ( java.io.ioexception var_1 ) { var_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { var_2 . method_2 ( var_2 . getcontext ( ) . method_3 ( ) . getcolor ( var_3 [ ( position + ( ( var_4 ) % ( var_3 . length ) ) ) ] ) ) ; var_5 . settext ( var_6 [ position ] . method_4 ( ) ) ; var_7 . settext ( var_6 [ position ] . method_5 ( var_7 . getcontext ( ) ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = java.lang.string. method_2 ( var_3. getid ( ) ) ; type_1 var_4 = new type_1 ( ) ; type_2 var_5 = new type_2 ( ) ; var_5. method_3 ( string_1, var_3 ) ; var_5. method_4 ( string_2, var_2 ) ; var_5. method_4 ( string_3, var_2 ) ; var_4. method_5 ( var_5 ) ; ( ( type_3 ) ( context ) ). method_6 ( var_4 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { for ( int x = 1 ; x < ( ( var_1 . length ( ) ) + 1 ) ; x ++ ) { java.lang.string var_2 = string_1 + x ; java.lang.string var_3 = method_2 ( var_1 , var_2 ) ; if ( var_3 . equals ( string_3 ) ) { } else if ( method_3 ( var_4 , var_3 ) ) { var_4 . put ( var_4 . length ( ) , var_3 ) ; } } }
[0]: public boolean method_1 ( java.lang.string key ) { int index = ( java.lang.math.abs ( key. method_2 ( ) ) ) % ( this. var_1. length ) ; java.lang.string var_2 ; while ( ( var_2 = this. var_3 [ index ] )!= null ) { if ( key. equals ( var_2 ) ) return true ; index = ( index + 1 ) % ( this. var_3. length ) ; } return false ; }

************

************
tgt: private synchronized type_1 method_1 ( ) { final type_2 var_1 = new type_2 ( var_2 , type_3 . method_2 ( ) ) ; var_1 . method_3 ( string_1 ) ; var_1 . method_4 ( false ) ; this . var_3 . add ( var_1 ) ; return var_1 . method_5 ( ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { int var_2 = ( ( var_3 ) * ( var_4 ) ) + ( ( var_5 ) * ( var_6 ) ) ; int var_7 = ( var_6 ) * ( var_4 ) ; return new type_1 ( var_2, var_7 ) ; }

************

************
tgt: public void method_1 ( ) { final type_1 var_1 = new type_2 ( var_2 ) . method_2 ( var_3 ) . build ( ) ; assertequals ( string_1 , 0 , var_1 . method_3 ( ) . size ( ) ) ; var_1 . method_3 ( ) . add ( string_2 ) ; }
[0]: public static type_1 add ( ) { type_2 var_1 = type_3. method_1 ( method_2 ( ). method_3 ( ). method_4 ( ), var_2 class ) ; if ( ( ( var_3 ) == null ) && ( type_4. method_5 ( ) ) ) var_3 = var_4 ; return type_5. method_6 ( var_1, new type_6 ( ) { public void method_7 ( ) throws java.lang.throwable { type_7. method_8 ( var_1 ) ; } } ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.object var_1 ) throws java.lang.exception { type_1 var_2 = type_2 . method_2 ( var_1 , var_3 class ) ; if ( var_2 == null ) { return null ; } java.lang.string var_4 = ( ( java.lang.string ) ( var_2 . method_3 ( var_1 ) ) ) ; if ( ( var_4 != null ) && ( type_3 . method_4 ( var_4 ) ) ) { type_4 . method_5 ( string_1 , var_1 , var_2 . getname ( ) ) ; } return var_4 ; }
[0]: private java.util.arraylist < type_1 < type_2 > > method_1 ( ) { java.util.arraylist < type_1 < type_2 > > var_1 = new java.util.arraylist < > ( ) ; type_1 < type_2 > var_2 = new type_1 ( ( - int_1 ), int_2, int_3, int_4, int_5, int_3, new java.util.arraylist < > ( ), 1, int_6, var_3 ) ; var_1. add ( var_2 ) ; return var_1 ; }

************

************
tgt: public type_1 method_1 ( java.lang.integer var_1 ) { type_1 var_2 = new type_1 ( ) ; try { type_2 var_3 = var_4 . method_2 ( var_5 . method_1 ( var_1 ) ) ; var_7 . method_3 ( var_3 ) ; var_6 . add ( var_3 ) ; } catch ( type_3 var_8 ) { var_8 . method_4 ( ) ; var_9 . error ( var_8 . tostring ( ) , var_8 ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 p = var_1. method_2 ( ) ; if (! ( method_3 ( p ) ) ) return ; if (! ( var_1. method_4 ( ). method_5 ( ). getname ( ). equals ( var_1. method_6 ( ). method_5 ( ). getname ( ) ) ) ) return ; if ( var_2. getboolean ( string_1 ) ) p. method_7 ( var_3 ) ; if ( var_2. getboolean ( string_2 ) ) p. method_7 ( var_4 ) ; }

************

************
tgt: protected java.lang.string [ ] get ( type_1 var_1 ) { java.lang.string var_2 = null ; try { var_2 = type_2 . method_1 ( ) . method_2 ( p . method_3 ( var_1 ) ) . method_4 ( ) ; } catch ( java.lang.nullpointerexception var_3 ) { return null ; } return new java.lang.string [ ] { var_2 } ; }
[0]: public java.lang.object method_1 ( type_1 var_1, type_2 var_2, type_2 var_3, java.lang.object [ ] args ) { if ( ( var_4. method_2 ( ) ) == null ) { throw new type_3 ( string_1 ) ; } var_4. method_2 ( ). method_3 ( type_4. method_4 ( java.lang.string. method_5 ( args [ 0 ] ), java.lang.string. method_5 ( args [ 1 ] ) ) ) ; return var_5 ; }

************

************
tgt: public type_1 method_1 ( ) { method_2 ( ) ; type_1 var_1 = var_2 . method_3 ( ) ; var_2 = var_2 . method_4 ( ) ; if ( ( var_2 ) == null ) { var_3 = null ; } else { var_2 . method_5 ( null ) ; } ( var_4 ) -- ; return var_1 ; }
[0]: static void method_1 ( type_1 var_1, java.util.map < type_2, java.lang.long > update ) { java.util.map < type_2, java.lang.long > var_2 = type_3. method_2 ( var_1. method_3 ( var_3 ) ) ; for ( java.util.map.entry < type_2, java.lang.long > position : update. method_4 ( ) ) { var_2. put ( position. method_5 ( ), position. getvalue ( ) ) ; } var_1. method_6 ( var_3, type_3. tostring ( var_2 ) ) ; }

************

************
tgt: void method_1 ( ) { if ( null == ( var_1 ) ) { return ; } var_1 . method_2 ( false ) ; if ( ( var_2 ) != null ) { var_2 . method_3 ( ) ; var_2 = null ; node . method_4 ( var_3 ) ; node . method_4 ( var_4 ) ; node . method_4 ( var_5 ) ; var_6 . setvalue ( new type_1 ( var_7 ) ) ; } }
[0]: public static void method_1 ( ) { try { java.io.file var_1 = new java.io.file ( var_2 ) ; type_1 var_3 = type_1. method_2 ( ) ; type_2 var_4 = var_3. method_3 ( ) ; var_5 = var_4. method_4 ( var_1 ) ; var_5. method_5 ( ). method_6 ( ) ; } catch ( java.lang.exception var_6 ) { var_6. method_7 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; try { type_1 var_2 = method_2 ( ) ; for ( int i = int_1 ; i < ( var_2 . length ( ) ) ; i ++ ) { var_1 . put ( var_2 . method_3 ( i ) ) ; } } catch ( type_2 var_3 ) { var_3 . method_4 ( ) ; return null ; } return var_1 ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( ( type_1 ) ( getactivity ( ). method_2 ( ) ) ). method_3 ( ) ) { var_2. method_4 ( var_3 ) ; main. method_5 ( ) ; } else { type_2. method_6 ( main, var_4, var_5 ). show ( ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { java.util.arraylist < type_2 > var_2 = type_3 . method_2 ( var_3 ) ; if ( var_2 != null ) { if ( ( var_2 . size ( ) ) > 0 ) { method_3 ( ) ; method_4 ( var_2 ) ; if ( var_4 . method_5 ( ) ) { method_4 ( var_3 ) ; } this . method_6 ( false ) ; } else { var_5 . settext ( string_1 ) ; } } }
[0]: public void method_1 ( java.io.file path ) { java.io.file [ ] c = path. method_2 ( ) ; for ( java.io.file file : c ) { if ( file. method_3 ( ) ) { method_1 ( file ) ; file. delete ( ) ; } else { file. delete ( ) ; } } path. delete ( ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( string_1 ) ; var_2 . add ( var_4 ) ; var_2 . add ( var_3 ) ; java.util.arraylist < type_2 > var_5 = new java.util.arraylist < > ( ) ; var_5 . add ( var_1 ) ; assertequals ( string_2 , var_5 , var_6 . method_2 ( var_4 , var_3 ) ) ; }
[0]: public static void method_1 ( type_1 var_1, type_2 path, type_3 var_2 ) { if ( ( null == path ) || ( ( path. method_2 ( ). size ( ) ) == 0 ) ) { return ; } type_4. method_3 ( path, var_1, var_2 ) ; type_4. method_4 ( path. method_2 ( ), var_1, var_3, var_2 ) ; type_4. method_5 ( var_1, var_2 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 , type_2 < java.lang.string > var_3 , boolean var_4 , java.lang.string var_5 ) { if ( method_2 ( var_2 ) ) { var_1 . method_3 ( type_3 . method_4 ( var_3 . method_5 ( null ) ) . method_6 ( var_2 ) . method_7 ( ) . method_8 ( var_4 ) . method_9 ( var_5 ) . build ( ) ) ; } }
[0]: private java.lang.object method_1 ( type_1 var_1 ) { type_2 target = method_2 ( var_1 ). method_3 ( ). target ; java.util.hashmap < java.lang.string, java.lang.object > var_2 = new java.util.hashmap < > ( ) ; var_2. put ( var_3, java.util.arrays.aslist ( var_4, var_5 ) ) ; return target ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { var_1 = var_1 . touppercase ( ) ; type_2 var_2 = new type_3 ( ) . method_2 ( ) ; type_4 < type_1 > query = var_2 . method_3 ( string_1 , var_3 class ) ; query . method_4 ( string_2 , var_1 ) ; query . method_4 ( string_3 , string_4 ) ; return query . method_5 ( ) ; }
[0]: public int method_1 ( ) { int result = - 1 ; try { result = type_1. getint ( this. element, string_1 ) ; return result ; } catch ( type_2 var_1 ) { type_3. method_2 ( string_2 ) ; } try { result = type_1. getint ( this. element, string_3 ) ; result ++ ; return result ; } catch ( type_2 var_1 ) { type_3. method_3 ( string_3 ) ; return result ; } }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) return true ; if ( ( var_1 == null ) || ( ! ( var_1 instanceof type_1 ) ) ) return false ; type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ! ( ( var_3 ) != null ? ! ( var_3 . equals ( var_2 . method_1 ( ) ) ) : ( var_2 . method_1 ( ) ) != null ) ; }
[0]: public void method_1 ( type_1 event ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ). method_3 ( this ) ; } var_1 = ( ( type_2 ) ( event. method_4 ( ) ) ) ; var_1. method_2 ( ). method_5 ( this ) ; var_1. method_6 ( new type_3 ( ) { public void method_7 ( ) { method_8 ( ) ; } } ) ; } }

************

************
tgt: public static byte [ ] method_1 ( final int value ) { final byte [ ] var_1 = new byte [ int_1 ] ; var_1 [ 0 ] = ( ( byte ) ( value > > > int_2 ) ) ; var_1 [ 1 ] = ( ( byte ) ( value > > > int_3 ) ) ; var_1 [ int_4 ] = ( ( byte ) ( value > > > int_5 ) ) ; var_1 [ int_6 ] = ( ( byte ) ( value ) ) ; return var_1 ; }
[0]: public void method_1 ( java.lang.string type ) { type_1. method_2 ( string_1 ) ; p = type_2. method_3 ( ). method_4 ( ) ; var_1. method_5 ( var_2 ) ; method_6 ( ) ; var_3. method_7 ( var_4 ) ; method_6 ( ) ; var_5. type ( type ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int position ) { method_2 ( var_1 ) ; var_2 . method_3 ( var_5 . get ( position ) ) ; var_3 . method_4 ( var_4 , var_5 . get ( position ) ) ; var_3 . method_5 ( var_4 ) ; var_3 . method_6 ( var_2 ) ; }
[0]: public void method_1 ( android.view.view view ) { switch ( view. getid ( ) ) { case var_1 : int index = ( var_2. method_2 ( ) ) - 1 ; var_2. method_3 ( ( index > 0? index : ( var_3. method_4 ( ) ) - 1 ) ) ; break ; case var_4 : var_2. method_3 ( ( ( ( var_2. method_2 ( ) ) + 1 ) % ( var_3. method_4 ( ) ) ) ) ; break ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { var_2 . add ( new type_2 ( string_1 , var_1 . method_2 ( ) . tostring ( ) ) ) ; var_3 . method_4 ( var_2 ) ; var_4 . method_5 ( var_3 ) ; var_5 . method_6 ( ) ; return true ; }
[0]: private void method_1 ( ) { if ( var_1. equals ( string_1 ) ) { var_2. method_2 ( var_3. method_3 ( ) ) ; } var_2. method_4 ( var_4, var_5 ) ; if ( ( var_6 ) <= int_1 ) { var_2. method_5 ( var_7, var_8, var_5 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_2 ) ) { if ( type_2 . get ( string_1 ) . equals ( string_2 ) ) method_3 ( ) ; else method_3 ( ) ; } else if ( ( var_1 . method_2 ( ) ) == ( var_3 ) ) { super . method_1 ( new type_1 ( this , var_3 ) ) ; method_4 ( ) ; } else super . method_1 ( var_1 ) ; }
[0]: public void start ( ) throws java.io.ioexception, java.lang.classnotfoundexception, type_1, type_2 { java.lang.string var_1 = string_1 ; do { method_1 ( ) ; var_1 = var_2. method_2 ( ). trim ( ). tolowercase ( ) ; switch ( var_1 ) { case string_2 : var_2. method_3 ( ) ; break ; case string_3 : method_4 ( method_5 ( ) ) ; break ; case string_4 : method_6 ( ) ; default : } } while (! ( var_1. equals ( string_2 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_4 ) >= ( var_3 . size ( ) ) ) { ( var_4 ) -- ; } var_1 . method_2 ( int_1 , ( ( var_2 ) - int_2 ) ) ; if ( ( var_3 . size ( ) ) > 0 ) { var_1 . text ( var_3 . get ( var_4 ) . getname ( ) , 0 , 0 ) ; } else { var_1 . text ( string_1 , 0 , 0 ) ; } }
[0]: public void method_1 ( int var_1, double var_2 ) { type_1 values = new type_1 ( ) ; values. put ( var_3, var_1 ) ; values. put ( var_4, var_2 ) ; type_2 var_5 = method_2 ( ) ; var_5. method_3 ( var_6, null, values ) ; var_5. method_4 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 != null ) { var_6 = var_2 ; java.lang.string var_4 = var_2 . method_3 ( ) ; java.lang.string var_5 = var_2 . method_4 ( ) ; method_5 ( var_4 , var_5 ) ; } else { var_7 . method_6 ( var_8 ) ; } }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { android.content.intent var_3 = new android.content.intent ( var_4 ) ; try { var_3. method_2 ( type_1. method_3 ( string_1 ) ) ; method_4 ( var_3 ) ; type_2. method_5 ( method_6 ( ), var_2, var_5 ). show ( ) ; } catch ( type_3 var_6 ) { java.lang.string var_7 = method_7 ( ). getstring ( var_8 ) ; type_2. method_5 ( method_6 ( ), var_7, var_5 ). show ( ) ; } }

************

************
tgt: private < type_1 > java.lang.object method_1 ( type_1 var_1 , type_3 field ) throws type_2 { try { return field . get ( var_1 ) ; } catch ( type_4 var_2 ) { throw new type_2 ( java.lang.string.format ( var_3 , string_1 , field . getname ( ) , var_1 . getclass ( ) ) ) ; } }
[0]: public void method_1 ( ) { method_2 ( string_1, var_1 ) ; type_1 var_2 = method_3 ( ) ; var_2. method_4 ( index, string_2, string_3 ). method_5 ( string_4, string_5 ). get ( ) ; var_2. method_6 ( ). method_7 ( ). method_8 ( index ). get ( ) ; type_2 var_3 = var_2. method_9 ( index ). get ( ) ; assertthat ( var_3. method_10 ( ). method_11 ( ), method_12 ( 1l ) ) ; }

************

************
tgt: public static type_1 < java.lang.object > method_1 ( java.lang.object x ) { if ( x instanceof type_1 ) { return ( ( type_1 < java.lang.object > ) ( x ) ) ; } else { java.util.list < java.lang.object > list = new java.util.arraylist < java.lang.object > ( 1 ) ; list . add ( x ) ; return list ; } }
[0]: private static void method_1 ( ) throws type_1 { string = var_1 ; if ( ( type_2. isempty ( var_2 ) ) || ( (! ( var_2. tolowercase ( var_3 ). startswith ( string_1 ) ) ) && (! ( var_2. tolowercase ( var_3 ). startswith ( string_2 ) ) ) ) ) { throw new type_1 ( ) ; } else { if ( ( type_2. isempty ( var_2 ) ) || ( (! ( var_2. tolowercase ( var_3 ). startswith ( string_1 ) ) ) && (! ( var_2. tolowercase ( var_3 ). startswith ( string_2 ) ) ) ) { throw new type_1 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { try { while ( true ) { var_1 . method_2 ( 1 ) ; var_2 . method_2 ( ) ; java.lang.system.out.println ( string_1 ) ; var_2 . method_5 ( ) ; } } catch ( java.lang.exception x ) { x . method_6 ( ) ; } }
[0]: public static void init ( ) { var_1 = ( var_2. method_1 ( ) ) == ( var_3 ) ; if ( var_1 ) return ; type_1 var_4 = new type_1 ( var_5. filename ) ; try { if (! ( var_4. method_2 ( string_1 ) ) ) var_4. method_3 ( string_2, null, false ) ; if (! ( var_4. method_2 ( string_3 ) ) ) var_4. method_3 ( string_4, null, false ) ; } finally { var_4. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = null ; var_2 . method_2 ( ) . remove ( var_3 ) ; var_4 . method_3 ( ) . remove ( var_3 ) ; var_3 . method_4 ( ) ; var_3 . method_5 ( ) ; var_3 = null ; type_1 . method_6 ( ) ; }
[0]: public void method_1 ( ) throws type_1 { var_1 =! ( var_1 ) ; type_2 var_2 ; if ( var_1 ) { var_2 = new type_2 ( var_3 class. method_2 ( string_1 ) ) ; var_4. settext ( string_2 ) ; var_5. method_3 ( ) ; } else { var_2 = new type_2 ( var_3 class. method_2 ( string_3 ) ) ; var_4. settext ( string_4 ) ; var_5. method_4 ( ) ; } var_6. method_5 ( new type_3 ( var_2 ) ) ; }

************

************
tgt: public static void method_1 ( ) { type_1 . start ( ) ; java.lang.string [ ] var_2 = new java.lang.string [ ] { "id" , string_4 , string_5 , string_6 } ; java.lang.string [ ] values = new java.lang.string [ ] { string_2 , string_7 , string_8 , string_9 } ; var_1 . info ( string_1 ) ; try { type_2 . method_2 ( string_3 ) ; } catch ( type_4 var_3 ) { } try { type_3 . method_2 ( var_2 , values ) ; } catch ( type_4 var_3 ) { } }
[0]: private static java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = string_1 ; while ( ( line = var_2. method_2 ( ) )!= null ) { var_3. append ( line ) ; } return var_3. tostring ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string content , java.lang.string title ) { android.content.intent i = new android.content.intent ( ) ; i . method_2 ( var_1 ) ; i . method_3 ( var_2 , ( ( title + "\n" ) + content ) ) ; i . method_4 ( string_1 ) ; method_5 ( android.content.intent . method_6 ( i , string_2 ) ) ; }
[0]: public boolean method_1 ( int var_1 ) throws type_1 { type_2 var_2 = var_3. method_2 ( ) ; return ( var_2. delete ( var_4, ( ( type_3 ) + string_1 ), new java.lang.string [ ] { java.lang.string. method_3 ( var_1 ) } ) ) > 0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { var_2 . method_2 ( var_3 . gettext ( ) , var_4 . gettext ( ) , var_5 . gettext ( ) , var_6 . gettext ( ) ) ; var_7 . settext ( string_1 ) ; } catch ( type_2 var_8 ) { var_7 . settext ( string_2 ) ; } method_3 ( ) ; method_4 ( ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2, type_3 var_3, type_2 var_4 ) { int var_5 = java.lang.integer.parseint ( type_4. method_2 ( null, string_1 ) ) ; if ( var_5 >= ( var_2. method_3 ( ) ) ) { type_4. method_4 ( var_6, string_2 ) ; } else { var_4. method_5 ( var_1 ) ; var_2. method_6 ( var_4, var_5 ) ; } var_6. method_7 ( ) ; var_3. method_7 ( ) ; method_8 ( var_3 ) ; }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 = type_2 . method_2 ( ) ; for ( int i = 0 ; i > ( var_1 . size ( ) ) ; i ++ ) { if ( method_3 ( ) . method_4 ( var_1 . get ( i ) . method_3 ( ) ) ) { var_2 = 0 ; var_3 += 1 ; } } }
[0]: public java.lang.boolean method_1 ( ) throws java.lang.exception { try { var_1. method_2 ( var_1. method_3 ( ). method_4 ( ), var_1. method_3 ( ). method_5 ( ) ) ; } catch ( java.lang.throwable t ) { fail ( new type_1 ( ( ( string_1 + string_2 ) + var_1 ), t ) ) ; } return true ; }

************

************
tgt: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_1 ( ) ; if ( ( var_1 . get ( i ) . method_2 ( ) ) <= 0 ) var_1 . remove ( i ) ; } }
[0]: private boolean method_1 ( int x, int y ) { return ( ( ( x > ( type_1. method_2 ( ) ) ) && ( x < ( type_1. method_3 ( ) ) ) ) && ( y < ( type_2. method_2 ( ) ) ) ) && ( y > ( type_2. method_3 ( ) ) ) ; }

************

************
tgt: public boolean add ( type_1 var_1 ) { java.lang.object [ ] var_2 = new java.lang.object [ ( var_3 . length ) + 1 ] ; for ( int x = 0 ; x < ( var_3 . length ) ; x ++ ) { var_2 [ x ] = var_3 [ x ] ; } var_2 [ var_3 . length ] = var_1 ; var_3 = var_2 ; return true ; }
[0]: public static type_1 method_1 ( boolean var_1, type_2 var_2, boolean var_3, boolean var_4 ) { if ( var_1 || ( var_2!= ( var_5 ) ) ) { return new type_3 ( type_4. method_2 ( var_1, var_2, var_4 ), var_3 ) ; } else { return new type_5 ( ) ; } }

************

************
tgt: public synchronized type_1 method_1 ( ) { method_2 ( ) ; if ( var_1 . isempty ( ) ) return null ; type_1 tmp = null ; java.lang.long key = var_1 . get ( 0 ) ; tmp = type_2 . method_3 ( key ) ; return tmp ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; var_2 = var_1. method_3 ( ). tostring ( ) ; var_3. settext ( ( ( var_4. format ( var_5 ) ) + ( var_1. method_3 ( ). tostring ( ) ) ) ) ; var_6. settext ( null ) ; }

************

************
tgt: public java.lang.boolean method_1 ( type_1 var_1 ) { java.lang.boolean var_2 = true ; type_2 var_3 = new type_2 ( ) ; var_3 . put ( var_4 , var_1 . method_2 ( ) . gettime ( ) ) ; var_3 . put ( var_5 , var_1 . method_3 ( ) . gettime ( ) ) ; var_3 . put ( var_6 , var_1 . method_4 ( ) ) ; type_3 var_7 = this . method_5 ( ) ; var_7 . method_6 ( var_8 , null , var_3 ) ; var_7 . method_7 ( ) ; return var_2 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 response = new type_1 ( ) ; var_2. info ( string_1 ) ; try { var_2. info ( ( string_2 + ( var_3 ) ) ) ; response = ( ( type_1 ) ( var_3. method_2 ( var_1 ) ) ) ; var_2. info ( ( string_3 + response ) ) ; } catch ( java.lang.exception var_4 ) { var_2. info ( ( string_4 + ( var_4. method_3 ( ) ) ) ) ; var_4. method_4 ( ) ; } return response ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3 . method_2 ( int_1 , int_2 , 0 , 0 , string_1 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , int_2 , int_2 , 0 , 0 ) ; type_4 . method_5 ( var_2 ) ; var_1 = type_3 . method_2 ( int_3 , int_2 , 0 , 0 , string_1 ) ; var_1 . method_3 ( ) ; type_3 . method_4 ( var_1 , 0 , int_2 , 0 , 0 ) ; type_4 . asserttrue ( var_2 ) ; }
[0]: public type_1 method_1 ( type_2 item, boolean var_1 ) { if ( ( ( var_2 class ) == ( item. getclass ( ) ) ) || ( ( var_2 class ) == ( item. getclass ( ). method_2 ( ) ) ) ) { type_3 var_3 = new type_3 ( item. method_3 ( ) ) ; var_3. method_4 ( var_1 ) ; return var_3 ; } return null ; }

************

************
tgt: private static type_1 method_1 ( type_2 item ) { if ( item . method_2 ( ) . method_3 ( string_1 ) ) { type_3 offset = new type_3 ( ) ; return type_4 . method_4 ( item , offset ) ; } else if ( item . method_2 ( ) . method_3 ( string_2 ) ) { } else { type_4 . method_5 ( ( ( string_3 + ( item . method_2 ( ) ) ) + string_4 ) ) ; } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( var_2 ) ; type_3. method_3 ( var_3 ) ; type_3. method_3 ( new type_4 ( ) ) ; type_5. method_4 ( ) ; type_6. method_4 ( ) ; type_7. method_2 ( string_1 ) ; type_7. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( var_2 . get ( 1 ) , var_2 . get ( 0 ) , var_2 . get ( int_1 ) ) ; type_1 var_3 = new type_1 ( var_2 . get ( 1 ) , var_2 . get ( 0 ) , var_2 . get ( int_1 ) ) ; asserttrue ( var_1 . equals ( var_3 ) ) ; }
[0]: public void method_1 ( ) { if ( ( method_2 ( ( ( method_3 ( ) ) - 1 ) ) ) == null ) { this. var_1. remove ( ( ( method_3 ( ) ) - 1 ) ) ; method_4 ( method_3 ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . add ( new type_1 ( ) ) ; var_1 . add ( new type_3 ( ) ) ; var_1 . add ( new type_4 ( ) ) ; var_1 . add ( new type_5 ( ) ) ; var_1 . add ( new type_6 ( ) ) ; var_1 . add ( new type_7 ( ) ) ; var_1 . add ( new type_8 ( ) ) ; var_1 . add ( new type_9 ( ) ) ; }
[0]: public void method_1 ( int var_1 ) { var_2 += var_1 ; var_3. method_2 ( var_2 ) ; if ( ( ( var_2 ) % ( var_4 ) ) == 0 ) { ( var_5 ) ++ ; var_6. method_3 ( var_7 ) ; var_3. method_4 ( var_5 ) ; } var_8. method_5 ( var_1 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , type_1 var_2 ) throws type_2 , java.io.ioexception { type_3 var_3 = type_3 . method_2 ( var_4 , type_4 . method_3 ( var_2 ) ) ; type_5 var_5 = new type_6 ( ) . url ( ( ( var_6 ) + var_1 ) ) . method_4 ( string_2 , method_5 ( ) ) . method_1 ( var_3 ) . build ( ) ; return method_6 ( var_5 ) ; }
[0]: public void method_1 ( float var_1 ) { var_2. method_2 ( ( ( string_1 + var_1 ) + string_2 ) ) ; if ( var_1 == 0.0f ) { try { var_3. method_3 ( ) ; } catch ( type_1 var_4 ) { var_4. method_4 ( ) ; } } else { var_3. method_5 ( ( var_1 * int_1 ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , float var_3 , float var_4 , float var_5 ) { if ( method_2 ( var_1 ) ) { return true ; } else { return var_6 . method_3 ( var_1 . method_4 ( ) , this , false , true ) ; } }
[0]: private void method_1 ( ) throws java.io.ioexception { type_1 var_1 = new type_1 ( var_2, null, null, null ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; var_3. add ( var_1 ) ; type_2 var_4 = new type_2 ( var_3, null, false, null, null, null, null, null, null ) ; var_5. method_2 ( var_4 ) ; }

************

************
tgt: private java.lang.boolean method_1 ( ) { type_1 var_1 = new type_1 ( this . var_2 ) ; this . var_3 = var_1 . method_2 ( ) ; long var_4 = var_1 . method_3 ( ) ; try { this . var_5 . method_4 ( var_4 , this . var_3 , this . var_2 ) ; } catch ( java.lang.exception var_6 ) { type_2 . method_5 ( ( string_1 + ( var_6 . tostring ( ) ) ) , string_2 ) ; return false ; } return true ; }
[0]: public final void method_1 ( ) { if ( ( this. var_1 )!= null ) { this. var_1. method_2 ( new type_1 ( ) { public void method_3 ( ) { for ( final type_2 var_2 : var_3 ) { method_4 ( var_2, false ) ; } } } ) ; } this. var_4 = true ; this. method_5 ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.util.map < java.lang.string , java.lang.object > var_1 , java.lang.string ... names ) { if ( ( var_1 == null ) || ( names == null ) ) return this ; for ( java.lang.string var_2 : names ) { if ( var_1 . method_2 ( var_2 ) ) { java.lang.object var_3 = var_1 . get ( var_2 ) ; if ( var_3 != null ) { set ( var_2 , var_3 ) ; } } } return this ; }
[0]: protected void method_1 ( ) { new type_1 ( var_1 ). method_2 ( string_1 ). method_3 ( string_2 ). method_4 ( string_3, null ). method_5 ( string_4, new type_2 ( ) { public void method_6 ( type_3 var_2, int var_3 ) { method_7 ( ) ; } } ). show ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 temp = var_2 ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { int index = method_2 ( var_1 . method_3 ( i ) ) ; if ( temp . method_4 ( index ) ) { temp = temp . method_5 ( index ) ; } else { return null ; } } if ( ( temp . getvalue ( ) ) > 0 ) { return temp ; } return null ; }
[0]: public void method_1 ( type_1 item ) { for ( int index = 0 ; index < ( var_1. size ( ) ) ; index ++ ) { if ( ( var_1. get ( index ). index ) == ( item. index ) ) { var_1. remove ( index ) ; } } method_2 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( 0 ) . method_3 ( string_1 ) ) { var_1 . method_4 ( 0 , ( ( var_5 ) + string_2 ) ) ; var_1 . method_4 ( 1 , ( ( ( ( var_3 ) + string_3 ) + ( var_5 ) ) + string_4 ) ) ; var_1 . method_4 ( int_1 , ( ( var_4 ) + string_5 ) ) ; var_1 . method_4 ( int_2 , ( ( var_5 ) + string_6 ) ) ; } }
[0]: public void init ( ) { type_1 var_1 = type_2. method_1 ( ). put ( string_1, var_2. method_2 ( ) ). put ( string_2, var_2. method_3 ( ) ) ; node = type_3. method_4 ( ). method_5 ( true ). method_6 ( var_1. build ( ) ). node ( ) ; try { method_7 ( ) ; } catch ( java.io.ioexception var_3 ) { var_3. method_8 ( ) ; } catch ( type_4 var_3 ) { var_3. method_8 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 context , type_2 intent ) { boolean value = intent . method_2 ( string_1 , false ) ; type_2 msg = new type_2 ( string_3 ) ; msg . method_4 ( string_1 , value ) ; type_4 . method_5 ( context ) . method_6 ( msg ) ; }
[0]: public static boolean method_1 ( type_1 item, boolean var_1 ) { if ( item. method_2 ( ) ) { if ( var_1 ) { return false ; } else { return true ; } } else { if ( var_1 ) { return true ; } else { return false ; } } } return false ; }

************

************
tgt: public final type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4 . method_2 ( var_1 , string_1 ) ; return type_1 . method_3 ( new type_5 < type_2 > ( this , type_6 . method_4 ( ) , type_6 . method_4 ( ) , type_6 . method_4 ( ) , var_3 , var_1 , type_6 . method_4 ( ) , var_4 , var_3 ) ) ; }
[0]: public void method_1 ( ) { while ( ( ( ( t ) < ( var_1 ) ) || ( ( var_2 ) > 0 ) ) || ( ( var_3 ) > 0 ) ) { int j = method_2 ( var_4 ) ; if ( ( var_5 ) <= ( var_4. get ( j ) ) ) { method_3 ( ) ; } else { method_4 ( j ) ; } if ( ( t ) >= ( var_1 ) ) { var_5 = var_6 ; } } method_5 ( ) ; } }

************

************
tgt: protected static boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = true ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { int c = var_1 . method_2 ( i ) ; if ( c > int_1 ) { var_2 = false ; break ; } } return var_2 ; }
[0]: private boolean method_1 ( ) { try { return! ( ( java.lang.double. method_2 ( this. var_1 ) ) == ( java.lang.double. method_2 ( this. time. method_3 ( ). gettext ( ) ) ) ) ; } catch ( java.lang.exception var_2 ) { return false ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 ) { if ( ( method_2 ( ) . size ( ) ) != 1 ) { return ; } type_2 var_2 = method_3 ( ) ; if ( var_2 == null ) { return ; } if ( var_2 instanceof type_3 ) { var_1 . method_5 ( var_3 ) ; } else { var_1 . method_5 ( var_4 ) ; } var_1 . method_4 ( var_2 ) ; }
[0]: public void method_1 ( type_1 var_1, int position ) { type_2 var_2 = ( ( type_2 ) ( var_3 ) ) ; type_3 var_4 = var_5. get ( position ) ; var_6. settext ( var_4. method_2 ( ) ) ; var_7. settext ( var_4. method_3 ( ) ) ; var_8. settext ( var_4. method_4 ( ) ) ; var_9. settext ( var_4. method_5 ( ) ) ; type_4. i ( string_1, var_4. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception { if ( response . method_2 ( ) ) { java.lang.string var_2 = response . method_3 ( ) . string ( ) ; type_3 . method_4 ( string_1 , var_2 ) ; method_6 ( ) ; } else { type_3 . method_4 ( string_1 , string_2 ) ; method_6 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = var_1. method_2 ( ) ; var_3. method_3 ( var_2 ) ; var_4. method_4 ( var_2 ) ; var_5 = type_2. method_5 ( var_6, var_7, var_8 ) ; var_5. method_6 ( var_9, new type_3 ( ) { public void method_7 ( android.view.view var_10 ) { var_4. method_8 ( var_3. method_9 ( ) ) ; } } ) ; var_5. show ( ) ; }

************

************
tgt: public java.util.list < type_1 > get ( int var_1 ) { java.util.list < type_1 > result = null ; try { type_2 var_2 = type_3 . method_1 ( ) . method_2 ( ) ; result = var_2 . method_3 ( var_1 ) ; } catch ( java.lang.exception var_3 ) { type_4 . method_4 ( var_4 , string_1 ) ; } return result ; }
[0]: private void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; var_2 = true ; byte [ ] var_3 = new byte [ ] { ( ( byte ) ( var_4. method_3 ( ) ) ), ( ( byte ) ( type_2. method_4 ( ) ) ), ( ( byte ) ( var_4. method_5 ( ) ) ) } ; var_4. method_6 ( ) ; method_7 ( new type_3 ( var_5, var_6, var_3 ) ) ; }

************

************
tgt: public double [ ] method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) var_1 [ i ] = data [ i ] ; type_1 . method_2 ( var_1 , var_3 , int_2 , ( - 1 ) ) ; double [ ] var_4 = type_1 . method_3 ( ) ; return var_4 ; }
[0]: private void method_1 ( final type_1 var_1, final type_1 var_2 ) { try { var_3. method_2 ( type_2. method_3 ( var_1 ). to ( var_2 ) ) ; type_3. info ( ( ( ( string_1 + var_2 ) + string_2 ) + var_1 ) ) ; } catch ( java.lang.throwable t ) { type_3. error ( ( ( ( string_3 + var_1 ) + string_4 ) + var_2 ), t ) ; } }

************

************
tgt: private static void method_1 ( ) { int id = type_1 . method_2 ( string_1 ) ; type_2 var_1 = type_2 . method_3 ( id ) ; if ( var_1 == null ) { java.lang.system.out.println ( ( ( string_2 + id ) + string_3 ) ) ; return ; } var_1 . delete ( var_1 . gettype ( ) ) ; java.lang.system.out.println ( ( ( string_2 + id ) + string_4 ) ) ; }
[0]: private type_1 method_1 ( java.util.list <? extends type_2 > data ) { type_1 var_1 = new type_3 ( data. size ( ), p ) ; int var_2 = 0 ; for ( type_2 var_3 : data ) { var_1. method_2 ( var_2, var_3. method_3 ( ). method_4 ( ) ) ; var_2 += 1 ; } return new type_4 ( var_1 ). method_5 ( ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_5 . method_4 ( new type_4 ( ) ) ; method_3 ( var_7 ) . method_5 ( new type_5 ( ) { public void method_6 ( android.view.view var_8 ) { method_7 ( ) ; } } ) ; }
[0]: public boolean method_1 ( ) { if ( ( var_1 ) == string_1 ) { return false ; } if ( ( ( var_2 )!= null ) && ( ( var_3 ) == string_1 ) ) { var_4. error ( string_2 ) ; return false ; } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { type_2 var_3 = new type_2 ( method_3 ( ) . method_4 ( ) , method_3 ( ) . method_5 ( ) , method_2 ( ) , method_2 ( ) ) ; var_1 . method_6 ( getcolor ( ) ) ; if ( var_2 == true ) { var_1 . method_1 ( var_3 ) ; var_1 . method_7 ( var_3 ) ; } else { var_1 . method_1 ( var_3 ) ; } }
[0]: protected final void method_1 ( type_1 var_1, int var_2 ) { type_2 args = new type_2 ( ) ; java.lang.string var_3 = ( var_2 >= 0 )? var_4. get ( var_2 ) : string_1 ; args. method_2 ( var_5, var_3 ) ; args. method_2 ( var_6, ( string_2 + ( var_7 ) ) ) ; var_1. method_3 ( args ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return ; } var_2 . method_2 ( var_1 . method_3 ( ) ) ; var_2 . method_4 ( var_1 . method_5 ( ) ) ; var_2 . method_6 ( ) . add ( var_3 ) ; type_2 . method_7 ( var_3 , var_4 ) ; }
[0]: public void handle ( type_1 event ) { if ( ( event. method_1 ( ) ) instanceof type_2 ) { java.lang.integer var_1 ; var_1 = ( ( type_2 < java.lang.integer > ) ( event. method_1 ( ) ) ). getvalue ( ) ; type_3. method_2 ( var_1 ) ; } }

************

************
tgt: public static boolean method_1 ( java.lang.string name ) { name = name . tolowercase ( ) ; if ( ! ( type_1 . method_2 ( ) . method_3 ( ) ) ) return true ; if ( var_1 . method_4 ( name ) ) return var_1 . get ( name ) . method_5 ( ) ; return false ; }
[0]: private static void method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 item ) throws type_2 { if ( ( var_2!= null ) && ( ( var_2. method_2 ( string_1 ) ) >= 0 ) ) throw new type_2 ( type_3. message ( ( var_1 + string_2 ), item ) ) ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_3 < type_2 > response ) { if ( ( ( response . method_2 ( ) ) == null ) || ( ( response . method_2 ( ) . var_2 . size ( ) ) < 1 ) ) { var_3 . method_3 ( var_4 ) ; return ; } var_3 . method_4 ( response . method_2 ( ) . var_2 ) ; }
[0]: private void method_1 ( ) throws type_1 { switch ( var_1 ) { case var_2 : break ; case var_3 : method_2 ( var_4. get ( 0 ) ) ; if ( ( ( var_5 ) % ( var_4. get ( 0 ) ) )!= 0 ) { throw new type_1 ( string_1 ) ; } break ; case var_6 : for ( java.lang.integer number : var_7. values ) { method_2 ( number ) ; } break ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { var_2 . method_2 ( string_1 , var_1 . method_3 ( ) ) ; var_2 . method_2 ( string_2 , var_1 . method_4 ( ) ) ; var_2 . method_2 ( string_3 , var_1 . method_5 ( ) ) ; type_3 . method_1 ( var_1 ) ; return string_5 ; }
[0]: public void method_1 ( ) { type_1. method_2 ( string_1 ) ; method_3 ( var_1, var_2, string_2 ) ; method_3 ( var_1, var_2, string_3 ) ; method_4 ( var_1, var_3, string_4 ) ; method_4 ( var_1, var_3, string_2 ) ; method_4 ( var_1, var_3, string_5 ) ; }

************

************
tgt: public long method_1 ( type_1 c ) { type_2 . method_2 ( var_1 , string_1 , c . getname ( ) ) ; if ( c . method_4 ( ) ) { try { type_2 . method_2 ( var_1 , string_2 ) ; c . method_5 ( null ) . get ( ) ; c . method_6 ( ) . method_7 ( ) ; } catch ( java.lang.exception var_2 ) { type_2 . method_2 ( var_1 , string_3 , var_2 ) ; } } return 1 ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( var_1 == ( this ) ) { return true ; } if (! ( var_1 instanceof type_1 ) ) { return false ; } return this. var_2. equals ( ( ( type_2 ) ( var_1 ) ). var_2 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) throws java.lang.exception { var_1 . method_2 ( ) . method_5 ( string_1 ) . method_6 ( ) . method_3 ( ) . method_4 ( ) . method_7 ( ) . method_8 ( ) . method_9 ( string_2 ) . method_6 ( ) . method_10 ( string_3 ) . method_6 ( ) . method_7 ( ) . method_11 ( ) . method_6 ( ) ; }
[0]: protected java.util.list < type_1 > method_1 ( type_2 var_1, boolean var_2 ) throws type_3 { java.util.list < type_1 > var_3 = var_4. method_2 ( var_1. method_3 ( ) ) ; if ( ( var_3 == null ) || ( var_3. isempty ( ) ) ) { var_3 = method_4 ( var_1 ) ; } if (! var_2 ) return method_5 ( method_6 ( var_3, var_1. method_3 ( ) ) ) ; else return method_6 ( var_3, var_1. method_3 ( ) ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; var_6 = var_4 . method_3 ( var_7 ) ; var_8 = var_4 . method_3 ( var_9 ) ; var_10 = type_4 . method_4 ( ) ; return var_4 ; }
[0]: private void method_1 ( ) { if ( ( ( ( var_1 ) >= ( var_2 ) ) && ( ( type_1. method_2 ( this, var_3 ) )!= ( var_4 ) ) ) && ( ( type_1. method_2 ( this, var_5 ) )!= ( var_4 ) ) ) { method_3 ( new java.lang.string [ ] { var_3, var_5 }, var_6 ) ; } else { android.content.intent intent = new android.content.intent ( this, var_7 class ) ; method_4 ( intent ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { method_2 ( ) . add ( item ) ; java.lang.object [ ] var_1 = new java.lang.object [ int_2 ] ; var_1 [ 0 ] = item . method_3 ( ) . method_4 ( ) ; var_1 [ 1 ] = item . method_3 ( ) . method_5 ( ) ; super . method_1 ( var_1 ) ; }
[0]: public void method_1 ( ) { type_1. assertequals ( java.lang.double. method_2 ( ( - float_1 ) ), type_2. method_3 ( string_1 ) ) ; type_1. assertequals ( java.lang.double. method_2 ( float_2 ), type_2. method_3 ( string_2 ) ) ; type_1. assertequals ( java.lang.double. method_2 ( ( - float_2 ) ), type_2. method_3 ( string_3 ) ) ; type_1. assertequals ( java.lang.double. method_2 ( ( - float_2 ) ), type_2. method_3 ( string_3 ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] var_2 ; try { var_2 = method_2 ( var_1 , null ) ; if ( ( var_2 == null ) || ( ( var_2 . length ) == 0 ) ) { return null ; } type_2 . method_3 ( var_2 ) ; return var_2 [ ( ( var_2 . length ) - 1 ) ] ; } catch ( type_3 var_3 ) { throw new type_4 ( string_1 , var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { method_2 ( 1, 1, method_3 ( ) ) ; if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3. setenabled ( false ) ; var_4 [ 1 ] [ 1 ] = method_3 ( ) ; ( var_5 ) ++ ; }

************

************
tgt: private final boolean method_1 ( type_1 type , java.lang.object msg , byte var_1 ) { if ( ! ( type_2 . method_2 ( var_1 , type ) ) ) return var_2 . method_3 ( ) ; synchronized ( var_3 ) { var_2 . method_4 ( method_5 ( type ) ) ; var_2 . method_4 ( var_4 ) ; var_2 . method_4 ( string_1 ) ; var_2 . method_6 ( msg ) ; } return var_2 . method_3 ( ) ; }
[0]: public void method_1 ( ) { for ( int x = ( ( var_1 ) / int_1 ) - 1 ; x < ( ( ( var_1 ) / int_1 ) + int_1 ) ; x ++ ) { var_2. add ( new type_1 ( x, ( - int_2 ) ) ) ; var_2. add ( new type_1 ( ( ( ( var_1 ) / int_1 ) - 1 ), ( - int_1 ) ) ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; var_2 . method_3 ( ) ; method_4 ( ) ; method_5 ( 0 , string_1 ) ; var_3 . method_6 ( new type_1 ( ) { public void method_7 ( ) { method_8 ( ) ; } } , int_1 ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, ( string_1 + ( method_3 ( ) ) ) ) ; if ( ( method_4 ( ) )!= null ) { method_5 ( false ) ; method_4 ( ). error ( var_2 ) ; } else { type_1. method_2 ( var_1, string_2 ) ; method_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 ) ) { var_2 . method_2 ( ) ; var_1 = true ; } var_3 . method_3 ( context , new type_1 ( ) { public void method_4 ( java.util.list < type_2 > var_4 ) { method_7 ( var_4 ) ; } } ) ; }
[0]: public void method_1 ( android.view.view view ) { android.content.intent intent ; type_1. method_2 ( var_1, string_1 ) ; if ( ( var_2 ) < int_1 ) { intent = new android.content.intent ( var_3 ) ; } else { intent = new android.content.intent ( var_4 ) ; intent. method_3 ( var_5 ) ; } type_1. method_2 ( var_1, string_2 ) ; intent. method_4 ( string_3 ) ; method_5 ( android.content.intent. method_6 ( intent, string_4 ), var_6 ) ; }

************

************
tgt: public static int method_1 ( java.util.arraylist < type_1 > var_1 ) { int var_2 = 0 ; for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_2 += var_1 . get ( i ) . method_2 ( ) . method_3 ( ) ; } return var_2 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { for ( type_1 var_2 : var_3 ) { if ( var_4. equals ( var_1 ) ) { try { var_2. method_2 ( ) ; } catch ( type_2 var_5 ) { var_2. method_3 ( ) ; var_5. method_4 ( ) ; } return var_6 ; } } return null ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { type_1 i = ( ( type_1 ) ( var_1 ) ) ; return ( this . var_2 . equals ( var_3 ) ) && ( this . var_4 . equals ( var_5 ) ) ; } else if ( var_1 instanceof char [ ] ) { return this . var_4 . equals ( ( ( char [ ] ) ( var_1 ) ) ) ; } return false ; }
[0]: public static int method_1 ( byte [ ] var_1 ) { int start = ( var_2 ) + ( var_3 ) ; int end = start + ( var_4 ) ; byte [ ] var_5 = new byte [ var_4 ] ; var_5 = type_1. method_2 ( var_1, start, end ) ; type_2 var_6 = type_2. method_3 ( var_5 ) ; int var_7 = var_6. method_4 ( ) ; return var_7 ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 + ( ( ( "\n" + string_2 ) + "\n" ) + "\n" ) ; type_1 var_2 = type_1 . method_2 ( string_3 ) . get ( ) ; type_2 < type_3 , type_4 > result = new type_5 ( ) . method_3 ( var_2 , var_3 ) ; asserttrue ( result . method_4 ( ) ) ; assertequals ( var_1 , result . method_5 ( ) . method_6 ( ) ) ; assertequals ( string_4 , result . method_5 ( ) . type ( ) ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. split ( var_3 ) ; java.lang.string var_4 = var_5 ; if ( ( var_2. length ) >= ( var_6 ) ) { for ( java.lang.string var_7 : var_2 ) { var_4 += var_7 ; var_4 += var_3 ; } } return var_4 ; }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( type_1 var_1 ) throws type_2 { java.util.list < java.lang.string > var_2 = new java.util.linkedlist < java.lang.string > ( ) ; if ( var_1 == null ) return var_2 ; for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) var_2 . add ( ( ( java.lang.string ) ( var_1 . get ( i ) ) ) ) ; return var_2 ; }
[0]: private void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2. method_2 ( var_3 ) ) ) ; java.lang.string var_4 = string_1 ; type_2 var_5 = new type_3 ( ). method_3 ( var_4 ). method_4 ( string_2 ). method_4 ( string_3 ). method_4 ( string_4 ). method_4 ( string_5 ). build ( ) ; var_1. method_5 ( var_5 ) ; var_2. method_5 ( var_3 ) ; }

************

************
tgt: private type_1 method_1 ( final type_2 name , final java.util.list < type_3 > list , final boolean var_1 , final boolean var_2 ) { if ( var_1 && ( ! var_2 ) ) { return new type_1 ( name , list ) ; } else if ( ( method_2 ( name ) ) && ( name . method_3 ( type_4 . method_4 ( ) ) ) ) { return new type_5 ( name , list ) ; } else { return new type_1 ( name , list ) ; } }
[0]: public void method_1 ( ) { if ( var_1 ) java.lang.system.out.println ( string_1 ) ; type_1 var_2 = new type_1 ( ) ; try { java.lang.system.out.println ( string_2 ) ; var_2. method_2 ( ) ; } catch ( java.io.ioexception | type_2 | type_3 var_3 ) { var_3. method_3 ( ) ; } }

************

************
tgt: private java.lang.string method_1 ( ) throws type_1 , java.io.ioexception { java.util.list < java.lang.string > var_1 = type_2 . method_2 ( new java.io.filereader ( file ) ) ; java.lang.string var_2 = string_1 ; for ( java.lang.string line : var_1 ) { var_2 += line + "\n" ; } return var_2 . substring ( 0 , ( ( var_2 . length ( ) ) - 1 ) ) ; }
[0]: public void method_1 ( ) { while ( true ) { try { this. var_1. method_2 ( ) ; break ; } catch ( type_1 var_2 ) { method_3 ( string_1, var_2 ) ; } catch ( java.lang.exception var_2 ) { method_3 ( string_2, var_2 ) ; } } }

************

************
tgt: public void method_1 ( type_1 < ? , ? > var_1 , java.util.collection < type_2 > result ) { if ( var_1 instanceof type_3 ) { type_3 p = ( ( type_3 ) ( var_1 ) ) ; for ( type_4 var_2 : type_5 . method_2 ( p . method_3 ( ) . values ( ) , var_3 class ) ) { result . method_4 ( var_2 . method_5 ( ) ) ; } } }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 < type_2 > var_2 = var_3. method_2 ( ) ; while ( var_2. method_3 ( ) ) { type_3 b = ( ( type_3 ) ( var_2. method_4 ( ) ) ) ; if ( b. method_5 ( ). equals ( var_1 ) ) { var_3. method_6 ( ) ; b. method_7 ( true ) ; } } }

************

************
tgt: public java.lang.double method_1 ( ) throws java.io.ioexception , type_1 { java.lang.string var_1 = java.lang.string . method_2 ( method_3 ( ) ) ; type_2 pattern = type_2 . method_4 ( string_1 ) ; java.util.regex.matcher var_2 = pattern . method_5 ( var_1 ) ; return var_2 . method_6 ( ) ? java.lang.double . method_2 ( var_2 . method_7 ( 0 ) ) : 0 ; }
[0]: void method_1 ( int var_1, type_1 list ) { type_2 var_2 = new type_2 ( string_1 ) ; list. method_2 ( var_2 ) ; int var_3 = 1 ; while ( var_3!= var_1 ) { type_2 var_4 = new type_2 ( ( string_2 + ( java.lang.integer.tostring ( var_3 ) ) ) ) ; list. method_2 ( var_4 ) ; var_3 ++ ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = var_2 . getstring ( string_1 , var_3 ) ; long var_4 ; try { var_4 = java.lang.long.parselong ( var_1 ) ; } catch ( java.lang.exception var_5 ) { var_4 = int_1 ; } if ( var_4 != 0 ) { var_4 = ( int_2 * int_3 ) * var_4 ; method_2 ( var_4 ) ; } else { } }
[0]: protected static type_1 method_1 ( ) { if (! ( type_2. method_2 ( ) ) ) return null ; type_3 var_1 = type_2. get ( ). method_3 ( ) ; type_1 var_2 = var_1. method_4 ( var_3, new type_4 < type_1 > ( ) { public type_1 method_5 ( ) throws java.lang.exception { return new type_1 ( ) ; } } ) ; return var_2 ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( var_3 . get ( i ) . method_3 ( ) ) ; var_2 . add ( var_1 ) ; } return var_2 ; }
[0]: protected java.lang.exception method_1 ( type_1... params ) { try { type_2 var_1 = ( ( type_3 ) ( method_2 ( ) ) ). method_3 ( var_2 ) ; var_1. method_4 ( var_3 ) ; } catch ( java.io.ioexception var_4 ) { return var_4 ; } catch ( type_4 var_4 ) { return var_4 ; } catch ( type_5 var_4 ) { return var_4 ; } return null ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , android.view.view var_2 , int var_3 , int var_4 , long id ) { final type_2 var_5 = var_6 . get ( var_3 ) . getvalue ( ) . get ( var_4 ) . method_2 ( ) ; if ( ! ( var_5 . equals ( var_7 ) ) ) { var_7 = var_5 ; if ( ( var_8 ) != null ) { var_8 . method_3 ( var_7 ) ; } } return true ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 ; if ( method_2 ( var_1 ) ) { var_2 = var_3. get ( var_1. expr ( ) ) ; var_3. put ( var_1, ( ( ( ( ( var_4 ) + var_2 ) + string_1 ) + ( var_4 ) ) + string_1 ) ) ; } else { var_3. put ( var_1, ( ( var_4 ) + string_2 ) ) ; } }

************

************
tgt: public void method_1 ( ) { try { this . var_1 . method_2 ( ) ; this . var_2 = getclass ( ) . method_3 ( type_1 . method_4 ( var_3 ) ) . method_5 ( ) ; method_6 ( this . var_2 ) ; } catch ( java.lang.nullpointerexception var_4 ) { java.lang.system.out.println ( string_1 ) ; this . var_1 = new type_2 ( ) ; } }
[0]: public java.lang.object add ( java.lang.object var_1, java.lang.object var_2 ) { if ( ( var_1 instanceof java.lang.string ) || ( var_2 instanceof java.lang.string ) ) { return ( var_1. tostring ( ) ) + ( var_2. tostring ( ) ) ; } else { return super. add ( var_1, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 query = new type_1 ( ) ; type_2 var_1 = type_3 . method_2 ( var_2 class ) ; type_3 . method_3 ( var_1 . getid ( ) ) . method_4 ( 1 ) ; type_3 . method_5 ( var_1 ) ; java.lang.long count = var_3 . method_6 ( var_1 , query ) ; type_4 . assertequals ( int_2 , count . method_7 ( ) ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, int var_2 ) { type_2 < type_3 > var_3 = this. var_4. method_2 ( 0 ) ; java.util.list < type_4 > var_5 = this. var_6. method_3 ( ) ; var_1. method_4 ( string_1, string_2 ) ; var_1. method_4 ( string_3, var_3 ) ; var_1. method_4 ( string_4, var_5 ) ; return string_5 ; }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.integer var_1 ) throws java.lang.exception { type_3 . info ( string_1 , var_1 ) ; var_1 = ( ( var_1 == null ) || ( var_1 < 1 ) ) ? 0 : -- var_1 ; type_1 < type_2 > var_2 = var_3 . method_1 ( var_1 , 1 ) ; type_3 . info ( string_2 , var_2 . method_2 ( ) ) ; return var_2 ; }
[0]: public static boolean method_1 ( ) { type_1 var_1 = new type_1 ( string_1, string_2, string_3 ) ; type_1 var_2 = new type_1 ( string_4, string_5, string_3 ) ; java.lang.string var_3 = type_2. method_2 ( var_1 ) ; java.lang.string var_4 = type_2. method_2 ( var_2 ) ; boolean var_5 = var_3. equals ( string_6 ) ; boolean var_6 = var_3. equals ( string_6 ) ; return ( var_5 && var_6 ) == true ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( ) ; assertequals ( true , var_1 . method_3 ( ) ) ; assertequals ( true , var_1 . num ( string_1 ) ) ; assertequals ( false , var_1 . num ( string_1 ) ) ; }
[0]: public final boolean method_1 ( ) throws java.lang.exception { boolean b = false ; for ( type_1 < type_2 > var_1 : var_2 ) { if ( var_1!= null ) { b = b || ( var_1. update ( ) ) ; } } if ( b || ( var_3 ) ) { try { output = type_3. method_2 ( ) ; return true ; } catch ( java.lang.exception var_4 ) { output = null ; throw var_4 ; } } return false ; } }

************

************
tgt: public boolean method_1 ( ) throws type_1 { type_2 var_1 = var_2 . method_2 ( var_3 ) ; if ( ( ( var_1 != null ) && ( ( var_4 ) <= ( var_5 ) ) ) && ( var_6 . method_3 ( var_7 ) ) ) { var_6 . method_4 ( var_7 ) ; return true ; } else { return false ; } }
[0]: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ). method_3 ( ). method_4 ( ) ; type_3 var_2 = type_4. method_5 ( var_1, var_3 class ) ; try { var_4. method_6 ( var_2 ) ; } catch ( type_5 var_5 ) { return method_7 ( var_5. method_8 ( ) ) ; } type_6. method_9 ( ( ( var_2. method_10 ( ) ) + string_1 ) ) ; return method_11 ( type_4. method_12 ( var_2 ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 < java.lang.string , java.util.collection < type_3 > > method = new type_2 < java.lang.string , java.util.collection < type_3 > > ( ) { public java.util.collection < type_3 > execute ( java.lang.string var_1 ) throws type_4 { java.util.collection < type_5 > var_3 = type_6 . method_2 ( ) . method_3 ( var_1 , null ) ; return type_7 . method_4 ( var_3 ) ; } } ; return method . method_5 ( var_1 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = getactivity ( ). method_2 ( string_1, var_2 ) ; java.lang.string [ ] var_3 ; java.lang.string var_4 = var_1. getstring ( string_2, null ) ; if ( var_4!= null ) { var_3 = var_4. split ( string_3 ) ; var_5. method_3 ( java.util.arrays.aslist ( var_3 ) ) ; } var_6. method_4 ( ) ; }

************

************
tgt: public static void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.string file = method_2 ( string_2 ) ; if ( file . equals ( string_3 ) ) { java.lang.system.out.println ( string_4 ) ; } else { try { type_1 . method_3 ( file , var_1 ) ; java.lang.system.out.println ( string_5 ) ; } catch ( java.io.ioexception var_2 ) { type_1 . method_4 ( var_2 ) ; } } }
[0]: public static type_1 < type_2 > method_1 ( double var_1, boolean var_2, type_3 function ) { if ( var_2 ) { return new type_4 ( float_1, var_1, function ) ; } else { return new type_5 ( float_1, var_1, function ) ; } }

************

************
tgt: protected java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) throws java.lang.exception { type_1 var_3 = type_2 . method_2 ( var_4 , var_5 , var_6 , ( ( var_7 ) + var_1 ) , var_2 , null ) ; type_3 var_8 = new type_3 ( var_3 ) ; var_8 . method_3 ( string_2 , string_3 ) ; type_4 < java.lang.string > var_9 = new type_5 ( ) ; return var_10 . execute ( var_8 , var_9 ) ; }
[0]: public void method_1 ( ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < java.lang.integer > ( ) ; var_1. add ( 1 ) ; var_1. add ( int_1 ) ; var_1. add ( int_2 ) ; type_1 var_2 = new type_2 ( ) ; java.lang.string var_3 = var_1. tostring ( ) ; java.lang.string var_4 = type_3. method_2 ( var_1, var_2 ). tostring ( ) ; assertequals ( var_3, var_4 ) ; }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( ) { java.lang.string var_1 = var_2 . get ( string_1 ) ; java.lang.system.err.println ( var_1 ) ; java.util.list < java.lang.string > var_3 = new java.util.linkedlist < java.lang.string > ( ) ; if ( var_1 != null ) { type_1 var_4 = new type_1 ( var_1 , string_2 ) ; while ( var_4 . method_2 ( ) ) { java.lang.string var_5 = var_4 . method_3 ( ) ; var_3 . add ( var_5 ) ; } } return var_3 ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] values = type_1. values ( ) ; for ( type_1 value : values ) { if ( var_1. equals ( value. method_2 ( ) ) ) { return value ; } } throw new type_2 ( ( string_1 + var_1 ) ) ; } }

************

************
tgt: public static void method_1 ( android.content.context var_1 ) { type_1 . method_2 ( string_1 ) ; try { type_2 var_2 = new type_2 ( var_1 ) ; var_2 . method_3 ( string_2 ) ; } catch ( java.lang.nullpointerexception var_3 ) { var_3 . method_4 ( ) ; type_1 . method_5 ( string_3 ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_4 ( ) ; } }
[0]: public void method_1 ( float var_1 ) { var_2. method_2 ( 0.0f, 0.0f, 0.0f, 1.0f ) ; var_2. method_3 ( var_3 ) ; update ( var_1 ) ; var_4. method_4 ( ) ; var_5. method_5 ( var_1, var_4 ) ; var_4. end ( ) ; var_6. method_6 ( ) ; }

************

************
tgt: public type_1 < type_2 > method_1 ( type_3 var_1 ) throws java.io.ioexception { assert var_2 . method_2 ( ) ; long position = var_1 . method_3 ( ) ; switch ( var_1 . method_4 ( ) ) { case var_3 : return new type_1 < > ( position ) ; case var_4 : return new type_4 ( position , var_1 , var_5 , var_2 ) ; case var_6 : return new type_5 ( position , var_1 , var_5 ) ; default : throw new type_6 ( ) ; } }
[0]: private void method_1 ( type_1 var_1 ) { var_2 = var_3. method_2 ( ) ; if ( var_4. remove ( var_1 ) ) { var_5 += var_6 ; } if (! ( var_1 instanceof type_2 ) ) { method_3 ( var_1 ) ; var_7. add ( var_1 ) ; ( var_8 ) -- ; method_4 ( ) ; } else { method_5 ( ( ( type_2 ) ( var_1 ) ) ) ; method_6 ( ( ( type_2 ) ( var_1 ) ) ) ; } method_7 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = new type_3 ( ) ; var_1 . method_2 ( ) . method_3 ( var_3 ) ; var_2 . method_4 ( string_1 , var_4 . method_5 ( var_1 ) ) ; int var_5 = ( ( java.lang.integer ) ( var_4 . method_6 ( var_1 ) ) ) ; var_1 . method_2 ( ) . method_7 ( var_5 ) ; var_3 . method_7 ( var_5 ) ; var_2 . method_4 ( var_3 ) ; return type_4 . method_8 ( string_3 ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { return new type_1 ( var_2, var_3, ( - ( ( ( var_2 ) * ( var_1. method_2 ( ) ) ) + ( ( var_3 ) * ( var_1. method_3 ( ) ) ) ) ) ) ; }

************

************
tgt: private static java.lang.object getvalue ( java.lang.object var_1 , java.lang.string ... args ) { if ( ( ( args.length ) > 0 ) && ( var_1 instanceof type_1 ) ) { java.lang.string arg = args [ 0 ] ; java.lang.object obj = ( ( type_1 ) ( var_1 ) ) . get ( arg ) ; java.lang.string [ ] var_2 = ( ( java.lang.string [ ] ) ( type_2 . remove ( args , 0 ) ) ) ; return type_3 . getvalue ( obj , var_2 ) ; } else { return var_1 ; } }
[0]: public void method_1 ( ) { type_1 pattern = type_1. method_2 ( string_1 ) ; java.lang.string str = string_2 ; java.util.list < java.lang.string > var_1 = type_2. method_3 ( string_3 ) ; type_3 var_2 = new type_3 ( pattern, var_1 ) ; type_4. assertequals ( ( - 1 ), var_2. method_4 ( str ) ) ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , final int position ) { var_2 . settext ( var_3 . get ( position ) ) ; var_4 . method_2 ( new type_2 ( ) { public void method_3 ( android.view.view var_5 ) { type_3 . method_4 ( var_5 , method_5 ( position ) , var_6 ) . show ( ) ; } } ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( var_2 )!= null ) && ( ( var_3 ) == null ) ) var_2. method_2 ( ) ; try { java.lang.thread. method_3 ( int_1 ) ; } catch ( type_2 var_4 ) { } var_5. start ( var_1 ) ; var_2 = var_5 ; var_5. start ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_1 . method_2 ( ) ; int var_3 = var_1 . method_3 ( ) ; type_2 var_4 = new type_2 ( string_1 , ( ( var_2 + string_2 ) + var_3 ) , false ) ; type_3 . method_4 ( ) . method_5 ( this . var_5 , var_4 ) ; }
[0]: public void method_1 ( java.lang.throwable var_1 ) { super. method_1 ( var_1 ) ; method_2 ( false ) ; java.lang.exception var_2 = ( ( java.lang.exception ) ( var_1 ) ) ; java.lang.string var_3 = type_1. method_3 ( var_4. context ( ), var_2 ) ; if ( type_1. method_4 ( var_4. context ( ), var_1. method_5 ( ) ) ) { var_4. method_6 ( ) ; } else { var_4. method_7 ( var_3 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_1 var_3 = getintent ( ) . method_3 ( ) ; var_4 = var_3 . method_4 ( var_5 ) ; var_6 = var_3 . getstring ( var_7 ) ; var_8 = var_3 . getstring ( var_9 ) . tostring ( ) ; var_10 = ( ( var_8 ) + ( text ) ) + ( var_6 ) ; var_11 = ( ( type_2 ) ( method_5 ( var_12 ) ) ) ; var_11 . settext ( var_10 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, type_2 var_2, type_3 var_3 ) throws java.io.ioexception { java.util.map < java.lang.string, java.lang.object > var_4 = new java.util.hashmap < > ( ) ; var_4. put ( string_1, var_3 ) ; var_4. put ( string_2, var_2 ) ; final type_4 var_5 = var_6. method_2 ( ( string_3 + var_1 ), string_4, string_5 ) ; return var_6. method_3 ( var_5, var_4, var_7, var_8 class ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { if ( ( this . string ) == null ) return this ; int index = method_2 ( var_1 ) ; if ( ( index > ( - 1 ) ) && ( index < ( this . end ) ) ) { this . end = type_2 . method_3 ( this . start , index ) ; } return this ; }
[0]: public void method_1 ( ) { while ( true ) { while (! ( method_2 ( ) ) ) { try { java.lang.thread. method_3 ( int_1 ) ; } catch ( type_1 var_1 ) { } if ( var_2 ) return ; } var_3 = false ; var_4. method_4 ( ) ; type_2. method_5 ( var_4. method_6 ( ). method_7 ( ) ) ; type_2. method_8 ( var_4. method_9 ( ), var_4. method_10 ( ) ) ; var_3 = true ; method_11 ( ) ; } } }

************

************
tgt: public void update ( float var_1 ) { this . var_2 . update ( var_1 ) ; this . var_3 . update ( var_1 ) ; if ( ( this . var_4 . method_1 ( ) . method_2 ( ) ) <= 0 ) { var_5 . method_3 ( new type_1 ( this . var_5 ) ) ; type_2 . method_4 ( ) . method_5 ( ) ; var_6 . method_6 ( null ) ; } }
[0]: private void method_1 ( ) { if (! ( var_1. isempty ( ) ) ) { java.lang.string [ ] var_2 = var_1. get ( 0 ). split ( var_3. gettext ( ) ) ; var_4. method_2 ( ). method_3 ( ( b ) - > { b. method_4 ( string_1 ) ; type_1. method_2 ( var_2 ). method_3 ( ( f ) - > b. method_4 ( f ) ) ; } ) ; } }

************

************
tgt: public boolean method_1 ( ) { if ( ( var_1 ) == 0 ) { return false ; } else { for ( int i = var_1 ; i > 0 ; i -- ) { this . remove ( i ) ; } var_1 = 0 ; return true ; } }
[0]: public static java.lang.string method_1 ( java.io.inputstream var_1 ) { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = null ; try { while ( ( line = var_2. method_2 ( ) )!= null ) { var_3. append ( ( line + string_1 ) ) ; } } catch ( java.io.ioexception var_4 ) { var_4. method_3 ( ) ; } return var_3. tostring ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( ) . method_3 ( var_2 ) ; var_1 . method_2 ( ) . method_4 ( var_3 ) ; type_2 var_4 = new type_2 ( ) ; var_4 . method_5 ( var_1 ) ; assertequals ( var_2 , var_4 . method_6 ( ) . method_2 ( ) . method_7 ( ) ) ; assertequals ( var_3 , var_4 . method_6 ( ) . method_2 ( ) . method_8 ( ) ) ; }
[0]: public static boolean method_1 ( int var_1 ) { java.lang.string var_2 = string_1 ; try ( type_1 var_3 = var_4. method_2 ( var_2 ) ) { var_3. method_3 ( 1, var_1 ) ; var_3. method_4 ( var_2 ) ; return true ; } catch ( type_2 var_5 ) { java.util.logging.logger.getlogger ( var_6 class. getname ( ) ). method_5 ( var_7, null, var_5 ) ; } return false ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { android.content.intent intent = new android.content.intent ( method_2 ( ) , var_2 class ) ; type_1 var_3 = new type_1 ( ) ; var_3 . method_3 ( string_1 , false ) ; intent . method_4 ( var_3 ) ; method_5 ( intent , 1 ) ; if ( ( var_6 . method_7 ( ) ) == ( var_7 ) ) { var_6 . method_8 ( var_8 ) ; } }
[0]: public void method_1 ( long var_1 ) throws java.io.ioexception { method_2 ( ) ; if ( var_1 > 0 ) { do { method_3 ( var_1, 0 ) ; } while ( ( ( var_2 ) < var_1 ) && ( var_3. method_4 ( ) ) ) ; } var_4. method_5 ( string_1, this. method_6 ( ). tostring ( ), var_2 ) ; var_5. method_7 ( ). method_8 ( var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { method_2 ( string_1 ) ; java.util.collection < java.lang.string > var_2 = var_1 . method_4 ( var_3 , string_2 ) ; type_2 . assertthat ( var_2 ) . method_5 ( string_3 ) ; var_2 = var_1 . method_6 ( var_3 , string_4 ) ; type_2 . assertthat ( var_2 ) . isempty ( ) ; }
[0]: private void method_1 ( int var_1 ) { type_1. method_2 ( var_2, string_1 ) ; android.content.intent intent = new android.content.intent ( this, var_3 class ) ; intent. method_3 ( var_4 ) ; intent. method_4 ( string_2, var_1 ) ; method_5 ( intent ) ; }

************

************
tgt: private boolean method_1 ( int var_1 , int time , int [ ] date ) { return ( ( ( ( var_1 > time ) && ( ( date [ var_2 ] ) == ( var_3 ) ) ) && ( ( date [ var_4 ] ) == ( var_5 ) ) ) && ( ( date [ var_6 ] ) == ( var_7 ) ) ) && ( time != ( - 1 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; assertequals ( 0, var_2 ) ; java.lang.string var_3 = var_1. method_2 ( 1, int_1 ) ; assertequals ( 1, var_2 ) ; assertequals ( string_1, var_3 ) ; java.lang.string var_4 = var_1. method_2 ( int_1, int_2 ) ; assertequals ( int_1, var_2 ) ; assertequals ( string_2, var_4 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.lang.system.out.println ( type_1 . method_1 ( new int [ ] [ ] { new int [ ] { 1 , int_1 , int_2 , int_3 } , new int [ ] { int_4 , int_5 , int_6 , int_7 } , new int [ ] { int_8 , int_9 , int_10 , int_11 } } , int_8 ) ) ; }
[0]: private type_1 < java.util.list < java.lang.string > > method_1 ( type_2 var_1 ) { return var_2. method_2 ( var_3, var_4, var_1. getid ( ) ). method_3 ( new type_3 < type_4, java.lang.string > ( ) { public java.lang.string method_4 ( type_4 var_5 ) { return type_5. method_5 ( var_5 ). method_6 ( ) ; } } ) ; } }

************

************
tgt: private void method_1 ( ) { java.util.list < java.lang.string > var_1 = var_2 . method_2 ( ) . method_3 ( ) ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { var_3 . get ( i ) . settext ( var_1 . get ( i ) ) ; } var_4 . settext ( var_1 . get ( 1 ) ) ; var_5 . settext ( var_1 . get ( ( ( var_1 . size ( ) ) - 1 ) ) ) ; }
[0]: public type_1 < type_2 > method_1 ( ) { type_3 < type_2 > var_1 = var_2 ; int var_3 = 0 ; do { type_3 < type_2 > var_4 = method_2 ( var_1, var_5 ) ; type_3 < type_2 > var_6 = method_3 ( var_4, var_7 ) ; method_4 ( var_6 ) ; var_1 = var_6 ; var_3 ++ ; } while (! ( method_5 ( var_1, var_5 ) ) ) ; return new type_1 ( var_1, var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . var_1 = var_1 ; type_2 var_2 = this . var_1 . method_2 ( ) ; this . var_3 = ( this . var_1 . method_3 ( ) . method_4 ( ) ) - 1 ; this . var_4 = ( this . var_1 . method_5 ( ) . method_4 ( ) ) - 1 ; var_2 . method_6 ( this ) ; }
[0]: protected void method_1 ( ) { type_1 var_1 = type_2. get ( ) ; if ( ( ( var_1!= null ) && ( var_1. method_2 ( ) ) ) && (! ( type_3. method_3 ( var_1. method_4 ( ) ) ) ) ) { var_2. setvalue ( var_1. method_4 ( ) ) ; var_3. method_5 ( true ) ; var_3. method_6 ( method_7 ( var_1. method_4 ( ) ) ) ; } }

************

************
tgt: public synchronized void remove ( final java.lang.string var_1 ) { type_1 var_2 = var_3 . get ( var_1 ) ; if ( null != var_2 ) { int count = var_2 . method_1 ( ) ; if ( 0 >= count ) var_3 . remove ( var_1 ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception, type_1, type_2 { type_3 var_2 = new type_3 ( this, var_1, this. var_3 ) ; var_4. put ( var_2. method_2 ( ), var_2 ) ; if ( ( var_4. size ( ) ) == 1 ) var_2. method_3 ( var_5 ) ; }

************

************
tgt: private boolean method_1 ( ) { this . var_1 = new type_1 ( ) ; java.util.arraylist < type_2 > var_2 = new java.util.arraylist < type_2 > ( var_3 ) ; boolean var_4 = var_5 . method_2 ( new type_1 [ ] { this . var_1 } , var_2 , var_6 , var_7 , var_8 , var_9 , var_10 ) ; return var_4 ; }
[0]: private java.util.arraylist < java.lang.string > method_1 ( int var_1 ) throws java.io.ioexception { java.util.arraylist < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; while ( var_1!= 0 ) { byte [ ] var_3 = new byte [ int_1 ] ; type_1 var_4 = new type_1 ( var_3, var_3. length ) ; var_5. method_2 ( var_4 ) ; var_2. add ( var_4. getdata ( ). tostring ( ) ) ; var_1 -- ; } return var_2 ; }

************

************
tgt: static boolean method_1 ( type_1 var_1 , type_2 < ? > var_2 , java.util.set < java.lang.string > var_3 ) { return ( ( var_2 . method_2 ( var_4 ) ) || ( ( ! ( var_1 . method_3 ( ) ) ) && ( var_2 . method_2 ( var_5 ) ) ) ) || ( ( ! ( var_3 . isempty ( ) ) ) && ( ! ( var_3 . contains ( var_2 . getname ( ) ) ) ) ) ; }
[0]: private void method_1 ( type_1 result ) { type_2. method_2 ( var_1, ( string_1 + ( result. method_3 ( ) ) ) ) ; if ( result. method_3 ( ) ) { type_3 var_2 = result. method_4 ( ) ; type_2. method_2 ( var_1, var_2. method_5 ( ) ) ; method_6 ( true, var_2. method_5 ( ) ) ; } else { method_6 ( false ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , int var_2 ) { java.lang.string var_3 = type_2 . method_1 ( var_1 , var_2 ) ; java.util.map < java.lang.string , java.lang.string > var_4 = new java.util.hashmap < java.lang.string , java.lang.string > ( ) ; var_4 . put ( string_1 , string_2 ) ; var_4 . put ( string_3 , var_3 ) ; return type_1 . status ( int_1 ) . method_2 ( var_4 ) . build ( ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, type_2 var_2, type_3 var_3, type_4... var_4 ) { return get ( var_5 class, new type_5 ( var_1 ), new type_6 ( var_2 ), new type_7 ( var_4 ), new type_8 ( var_3 ), new type_9 ( ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) throws java.lang.classnotfoundexception , type_4 , type_6 , type_5 { java.util.list < type_1 > var_1 ; type_2 var_2 = var_3 . method_2 ( ) ; type_3 var_4 = new type_3 ( var_2 ) ; type_1 var_5 = new type_1 ( ) ; var_1 = var_4 . method_3 ( var_5 ) ; return var_1 ; }
[0]: void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return ; } var_1 = var_3. method_2 ( var_4 ) ; var_5 = method_3 ( 0, int_1 ) ; var_2. method_4 ( var_5 ) ; if ( ( var_6 )!= null ) { var_6. method_5 ( var_7 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) this . method_1 ( ( ( type_2 ) ( var_1 ) ) ) ; else if ( var_1 instanceof type_3 ) this . method_1 ( ( ( type_3 ) ( var_1 ) ) ) ; else if ( var_1 instanceof type_4 ) this . method_1 ( ( ( type_4 ) ( var_1 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = false ; if ( ( var_1. method_2 ( ) ) == ( var_3 ) ) { var_4 = new type_2 ( var_5, var_6, var_7, var_1. method_3 ( ), var_1. method_4 ( ) ) ; var_8. method_5 ( var_4, var_5. method_6 ( ) ) ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string title , java.lang.string label ) { if ( ( title . equals ( "0" ) ) || ( title . equals ( string_1 ) ) ) { var_1 . method_2 ( string_2 , var_2 . method_1 ( label , label , title , label , true ) ) ; } else { var_1 . method_2 ( string_2 , var_2 . method_1 ( label , label , label , title , false ) ) ; } return string_3 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; int var_1 = method_2 ( ) ; for ( int i = var_1 ; i < ( var_2 ) ; ++ i ) { method_3 ( ) ; } for ( int i = 0 ; i < ( method_2 ( ) ) ; ++ i ) { method_4 ( i ) ; } }

************

************
tgt: public java.lang.object method_1 ( java.lang.object var_1 , java.lang.string key ) { type_1 < java.lang.class < ? > , type_2 < ? > > var_2 = var_3 ; java.lang.string [ ] var_4 = key . split ( string_1 ) ; for ( java.lang.string var_5 : var_4 ) { java.lang.object var_6 = method_2 ( var_1 , var_5 , var_2 ) ; if ( var_6 == null ) { return null ; } else { var_1 = var_6 ; var_2 = var_7 ; } } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; int [ ] values = var_1. method_2 ( var_2 ) ; for ( int i = 0 ; i < ( values. length ) ; i ++ ) var_3. add ( values [ i ] ) ; var_4 = var_1. method_3 ( var_5 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( ) . method_3 ( var_2 ) ; if ( var_1 instanceof type_2 ) method_4 ( ) ; else if ( ! ( var_1 instanceof type_3 ) ) method_2 ( ) . method_5 ( string_1 , var_3 ) ; else method_2 ( ) . method_5 ( ) ; }
[0]: public void method_1 ( ) { if ( var_1 ) { type_1 errors = new type_1 ( ) ; var_2. method_2 ( new type_2 ( errors ) ) ; var_3. method_3 ( errors. tostring ( ) ) ; var_3. method_4 ( null ) ; var_3. method_5 ( true ) ; var_3. method_6 ( true ) ; } }

************

************
tgt: private static boolean method_1 ( type_1 var_1 ) { try { type_2 field = var_2 class . method_2 ( string_1 ) ; field . method_3 ( true ) ; java.lang.object obj = field . get ( var_1 ) ; int c = ( ( java.lang.integer ) ( obj ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.exception var_3 ) { } return false ; }
[0]: public type_1 build ( ) { method_1 ( ) ; final type_1 var_1 = new type_1 ( this ) ; var_2. method_2 ( var_1 ) ; super. var_3 = ( text. length ( ) ) + int_1 ; super. height = 1 ; return var_1 ; }

************

************
tgt: private void method_1 ( int var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { var_4 [ i ] [ j ] . method_3 ( var_5 , var_1 ) ; } } return ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_3. getstring ( var_4, var_5 ) ; if ( var_2. equals ( var_6 ) ) { return true ; } else if ( var_2. equals ( var_5 ) ) { return var_3. getboolean ( var_1, false ) ; } else { if ( var_1. equals ( string_1 ) ) return true ; return! ( var_3. getboolean ( type_1. method_2 ( var_1 ), false ) ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.io.inputstream var_2 ) throws java.io.ioexception { final int var_3 = var_2 . method_2 ( ) ; if ( var_3 == ( - 1 ) ) { } else { final int size = type_2 . method_3 ( var_3 , var_2 ) ; final java.io.inputstream var_4 = new type_3 ( var_2 , size ) ; final type_2 var_5 = type_2 . method_4 ( var_4 ) ; var_5 . method_5 ( size ) ; var_1 . method_6 ( var_5 ) ; var_5 . method_7 ( 0 ) ; } }
[0]: private boolean method_1 ( ) { type_1. method_2 ( var_1 ) ; if ( var_2. method_3 ( ) ) { return true ; } try { int var_3 = java.lang.integer.parseint ( var_2. gettext ( ) ) ; if ( var_3 <= 0 ) { type_1. method_4 ( var_1, string_1 ) ; return false ; } } catch ( type_2 var_4 ) { type_1. method_4 ( var_1, string_2 ) ; return false ; } return true ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this , var_3 , false ) ; if ( var_1 == null ) { var_4 = type_3 . method_4 ( ) ; method_5 ( ) . method_6 ( ) . replace ( var_5 , var_4 , string_1 ) . method_7 ( string_1 ) . commit ( ) ; } }
[0]: private type_1 method_1 ( ) { type_2 var_1 = new type_2 ( var_2 ) ; if ( method_2 ( string_1 ) ) { type_3 var_3 = method_3 ( ) ; var_1. method_4 ( var_3 ) ; var_1. method_5 ( method_6 ( ) ) ; } if ( method_2 ( string_2 ) ) { var_1. method_5 ( method_6 ( ) ) ; } return var_1 ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , java.lang.string [ ] var_2 , java.lang.string var_3 ) { if ( var_2 != null ) { type_2 . method_2 ( var_2 ) ; } type_3 p = method_3 ( var_2 , var_3 ) ; var_1 . method_4 ( ) . method_5 ( p ) ; return p . getname ( ) ; }
[0]: java.lang.string method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4 ) { java.lang.string msg ; if ( method_2 ( var_1, var_2, var_3, var_4 ) ) { msg = ( ( ( ( string_1 + var_1 ) + string_2 ) + var_3 ) + string_3 ) + var_4 ; } else { msg = ( ( ( ( string_4 + var_1 ) + string_2 ) + var_3 ) + string_3 ) + var_4 ; } return msg ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( long var_1 ) throws java.io.ioexception { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < > ( ) ; type_2 var_3 = var_4 . method_2 ( var_1 ) ; if ( var_3 == null ) { return var_2 ; } for ( type_3 var_5 : var_3 . method_3 ( ) ) { var_2 . add ( method_4 ( var_5 , var_1 ) ) ; } return var_2 ; }
[0]: private java.lang.string method_1 ( type_1 var_1 ) throws type_2 { type_3. method_2 ( var_1. method_3 ( var_2 ) ) ; if (! ( var_1. method_4 ( var_3, var_4 ) ) ) { var_5. method_5 ( string_1 ) ; return null ; } return var_1. tostring ( var_1. gettext ( ) ). trim ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 temp = new type_1 ( this . method_2 ( ) , this . gettype ( ) , this . getid ( ) , this . method_3 ( ) , string_1 , string_1 ) ; for ( type_2 var_1 : this . method_4 ( ) ) { java.lang.system.out.println ( var_1 ) ; temp . method_5 ( var_1 ) ; } return temp ; }
[0]: public void method_1 ( final android.view.view var_1 ) { if ( var_2. method_2 ( ) ) { var_2. method_3 ( ) ; var_2. method_4 ( ) ; ( ( type_1 ) ( var_1 ) ). method_5 ( var_3 ) ; var_4. method_6 ( var_5 ) ; var_6. method_6 ( var_7 ) ; } else { var_2. start ( ) ; ( ( type_1 ) ( var_1 ) ). method_5 ( var_8 ) ; } }

************

************
tgt: void method_1 ( java.lang.string var_1 ) { if ( ( var_3 . size ( ) ) > 0 ) var_3 . get ( 0 ) . setenabled ( true ) ; for ( type_1 var_2 : var_3 ) { if ( var_2 . method_2 ( ) ) { var_4 . setenabled ( var_5 ) ; var_6 . method_3 ( ( var_1 + ( var_4 . method_4 ( ) ) ) , var_4 . method_5 ( ) ) ; } } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = type_1. method_1 ( ) ; java.lang.system.out.println ( var_1 ) ; type_1 var_2 = type_1. method_1 ( ) ; java.lang.system.out.println ( var_2 ) ; try { type_2 var_3 = type_2. method_2 ( ) ; var_3. method_3 ( string_1 ) ; } catch ( type_3 var_4 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 ) ; method_3 ( true ) ; var_1 . method_4 ( ) . method_5 ( new type_1 ( ( ( ( ( var_3 ) + string_1 ) + url ) + string_2 ) ) ) ; var_1 . method_4 ( ) . method_5 ( new type_2 ( ( string_3 + url ) ) ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_1. add ( var_2 ) ; var_1. add ( var_3 ) ; var_1. add ( var_4 ) ; var_1. add ( var_5 ) ; var_1. add ( new type_2 ( ) ) ; var_1. add ( var_6 ) ; var_1. add ( var_7 ) ; var_1. add ( var_8 ) ; var_1. add ( var_8 ) ; }

************

************
tgt: protected void method_1 ( boolean var_1 ) { var_2 . method_2 ( data . method_3 ( var_3 . getstring ( var_4 ) ) . getstring ( var_5 ) ) ; if ( ! var_1 ) var_2 . method_4 ( java.lang.integer.parseint ( data . method_3 ( var_3 . getstring ( var_6 ) ) . getstring ( var_5 ) ) ) ; }
[0]: public boolean method_1 ( java.lang.string value ) { char var_1 = value. touppercase ( ). method_2 ( 0 ) ; switch ( var_1 ) { case char_1 : this. method_3 ( ) ; break ; case char_2 : this. method_4 ( ) ; break ; case char_3 : this. method_5 ( ) ; break ; case char_4 : return true ; default : this. var_2. method_6 ( string_1 ) ; break ; } return false ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { int var_3 = var_1 . method_2 ( ) ; switch ( var_3 ) { case int_1 : return ( var_1 . method_5 ( ) ) + string_1 ; case int_2 : return ( var_1 . method_5 ( ) ) + string_2 ; default : throw new type_3 ( ( string_3 + var_3 ) ) ; } }
[0]: private void method_1 ( ) { method_2 ( var_1 ). method_3 ( var_2 ) ; if ( ( this. var_3. size ( ) ) > 0 ) { method_2 ( var_4 ). method_3 ( var_2 ) ; } else { method_2 ( var_5 ). method_3 ( var_6 ) ; ( ( type_1 ) ( method_2 ( var_4 ) ) ). settext ( method_4 ( ). getstring ( var_7 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { var_1 . method_3 ( ) . method_1 ( var_2 ) ; var_1 . method_3 ( ) . method_4 ( ) . method_1 ( var_2 ) ; var_1 . method_3 ( ) . method_4 ( ) . method_5 ( var_2 ) ; method_2 ( ) ; }
[0]: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; var_1. add ( var_2 ) ; var_1. add ( var_3 ) ; var_1. add ( var_4 ) ; java.util.arraylist < type_1 > var_5 = var_6. method_2 ( string_1 ) ; type_2. assertequals ( string_2, true, type_3. method_3 ( var_1, var_5 ) ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) throws type_2 { type_4 < type_5 > var_3 = new type_6 < type_5 > ( ) . method_3 ( var_1 ) . method_4 ( this . var_4 ) . method_5 ( this . var_5 ) . build ( ) ; return method_6 ( this . var_4 , var_3 ) ; }
[0]: protected void method_1 ( type_1 var_1, type_2 response ) throws java.io.ioexception, type_3 { type_4 out = response. method_2 ( ) ; response. method_3 ( var_2 ) ; java.util.list < type_5 > var_3 = type_6. method_4 ( ) ; if ( var_3. isempty ( ) ) { var_1. method_5 ( string_1, var_4 ) ; } else { var_1. method_5 ( string_2, var_5 ) ; var_1. method_5 ( string_3, var_3 ) ; } method_6 ( ). method_7 ( string_4 ). method_8 ( var_1, response ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { java.lang.system.out.println ( string_1 ) ; var_1 . method_2 ( string_2 , new type_2 ( ) ) ; var_1 . method_2 ( string_3 , java.util.arrays.aslist ( type_3 . values ( ) ) ) ; var_1 . method_2 ( string_4 , java.util.arrays.aslist ( type_4 . values ( ) ) ) ; return string_7 ; }
[0]: public void method_1 ( type_1 writer ) throws java.lang.exception { try ( type_2 c = var_1. method_2 ( ) ) { final type_3 var_2 = new type_3 ( ( ( type_4 ) ( c ) ) ) ; var_2. method_3 ( ( ( ( ( string_1 + ( ( string_2 + string_3 ) + string_4 ) ) + ( source. key ) ) + string_5 ) + string_6 ), writer ) ; type_5. info ( string_7, source. name, writer. method_4 ( ) ) ; } }

************

************
tgt: public char [ ] method_1 ( ) throws java.io.ioexception { char [ ] var_1 = new char [ 0 ] ; java.lang.system.out.print ( string_1 ) ; final type_1 var_2 = new type_1 ( ) ; java.lang.string var_3 = var_2 . method_2 ( char_1 ) ; var_1 = var_3 . method_3 ( ) ; var_3 = null ; type_2 . method_4 ( ) ; return var_1 ; }
[0]: private void method_1 ( ) { if (! ( method_2 ( ) ) ) { method_3 ( ) ; } else if ( ( var_1. method_4 ( ) ) == null ) { method_5 ( ) ; } else if (! ( method_6 ( ) ) ) { type_1. i ( var_2, string_1 ) ; type_2. method_7 ( this, string_1, var_3 ). show ( ) ; } else { new type_3 ( var_1 ). execute ( ) ; } }

************

************
tgt: public int compareto ( type_1 var_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; float f = ( var_3 ) + ( var_4 ) ; float var_5 = ( var_6 ) + ( var_7 ) ; if ( f < var_5 ) { return - 1 ; } else if ( f > var_5 ) { return 1 ; } else { return 0 ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; type_1 var_2 = var_3. method_3 ( var_4. method_4 ( ) ) ; java.lang.system.out.println ( ( ( string_1 + ( var_2. method_5 ( ) ) ) + string_2 ) ) ; method_6 ( ) ; }

************

************
tgt: public double method_1 ( double [ ] var_1 ) { double var_2 = var_1 . length ; double var = 0 ; double var_3 = method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var += java.lang.math.pow ( ( ( var_1 [ i ] ) - var_3 ) , int_1 ) ; } var /= var_2 ; return var ; }
[0]: private type_1 < type_2, type_3 >. var_1 method_1 ( type_1 < type_2, type_3 >. var_1 node ) { type_1 < type_2, type_3 >. var_1 var_2 = node ; type_1 < type_2, type_3 >. var_1 var_3 = var_4 ; if ( ( var_5 ) == null ) { var_4 = null ; return var_3 ; } else { return method_1 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 [ ] var_1 = null ; method_2 ( var_1 ) . method_3 ( var_2 ) . method_4 ( method_5 ( ) ) ; var_3 . method_6 ( var_4 , var_5 ) ; java.util.list < type_3 > var_6 = var_3 . method_7 ( type_4 . method_8 ( ) ) ; assertequals ( var_6 . size ( ) , 0 ) ; }
[0]: public void method_1 ( java.util.list < float [ ] > data ) { this. var_1 = null ; this. data = new type_1 [ data. size ( ) ] ; for ( int i = 0 ; i < ( data. size ( ) ) ; i ++ ) { this. data [ i ] = new type_1 ( data. get ( i ), 1, new float [ data. get ( 0 ). length ] ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { java.lang.string [ ] var_4 = var_1 . split ( string_1 ) ; boolean var_7 = this . var_8 . method_2 ( var_4 [ 0 ] , var_2 , var_3 ) ; boolean var_5 = this . var_6 . method_1 ( var_4 [ 1 ] , var_2 , var_3 ) ; return var_7 && var_5 ; }
[0]: public void method_1 ( type_1 var_1, java.util.map data ) { type_2 var_2 = method_2 ( var_3. tostring ( ) ) ; var_2. method_3 ( var_4, new type_3 ( var_1 ) { public void method_4 ( ) { var_1. method_5 ( ) ; } public void fail ( type_4 var_5 ) { var_1. fail ( var_5 ) ; } } ) ; }

************

************
tgt: protected void method_1 ( ) { try { if ( ( var_1 ) != null ) { type_1 . method_2 ( this , true ) ; var_1 = null ; } } catch ( type_3 var_2 ) { var_2 . method_5 ( ) ; } type_2 . method_3 ( this , string_1 ) ; method_4 ( true ) ; try { var_3 . method_6 ( method_7 ( ) ) ; } catch ( type_4 var_2 ) { var_2 . method_5 ( ) ; } }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { android.view.view var_4 = var_1. method_2 ( var_5, null ) ; var_6 = type_4. method_3 ( ) ; var_6. method_4 ( this ) ; var_7 = new type_5 ( getactivity ( ). method_5 ( ), var_8, var_6. method_6 ( ), var_6 ) ; type_6 var_9 = ( ( type_6 ) ( var_4. method_7 ( var_10 ) ) ) ; var_9. method_8 ( var_7 ) ; method_9 ( true ) ; return var_4 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { type_4 var_3 = new type_4 ( new type_5 ( ) ) ; java.util.list < type_6 > var_4 = var_3 . method_3 ( ) ; var_1 . method_4 ( string_3 , var_4 ) ; type_7 var_5 = method_5 ( ) . method_6 ( string_4 ) ; var_5 . method_7 ( var_1 , response ) ; }
[0]: public final synchronized type_1 method_1 ( final int var_1, final long offset, final long length, final int var_2, final type_2 var_3, final long var_4 ) throws type_3 { return this. method_2 ( 0, var_1, true, false, 0, 0, var_2, var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 , java.io.ioexception , type_2 { if ( ( ! ( this . var_2 . method_3 ( ) ) ) || ( ! ( method_4 ( ) ) ) ) { return ; } var_2 . method_5 ( ( ( string_1 + ( this . name ) ) + string_2 ) ) ; new type_4 ( var_2 . method_6 ( ) , var_3 , var_4 , this , var_2 ) ; }
[0]: public type_1 method_1 ( java.lang.string label, type_2 var_1 ) throws java.lang.exception { java.util.map < java.lang.string, java.lang.object > var_2 = new java.util.hashmap < > ( ) ; for ( type_3 var_3 : var_1 ) { var_2. put ( var_3. method_2 ( ), var_3. getvalue ( ) ) ; } java.lang.long var_4 = var_5. method_1 ( var_2, type_4. label ( label ) ) ; return new type_1 ( new type_5 ( java.lang.string. method_3 ( var_4 ) ), label, this ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( var_3 , string_1 ) ; java.lang.string var_5 = var_1 . method_3 ( ) . method_4 ( ) ; java.lang.string var_4 = var_1 . method_3 ( ) . method_4 ( ) ; java.lang.string result = var_4 + var_5 ; var_1 . method_3 ( ) . method_5 ( result ) ; }
[0]: private java.util.arraylist < java.net.url > method_1 ( type_1 var_1 ) { java.util.arraylist < java.net.url > var_2 = new java.util.arraylist < > ( ) ; for ( type_2 a : var_1 ) { java.net.url var_3 = type_3. method_2 ( a. method_3 ( string_1 ) ) ; if ( ( var_3!= null ) && (! ( var_4. method_4 ( var_3 ) ) ) ) { var_2. add ( var_3 ) ; } } return var_2 ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , var_2 , false ) ; var_6 = method_3 ( ) . getint ( string_1 , 0 ) ; var_7 = var_8 . get ( var_6 ) ; return var_4 ; }
[0]: public final void method_1 ( ) { var_1. method_2 ( ) ; for ( type_1 var_2 : var_3 ) { var_2. method_3 ( ) ; } for ( type_1 var_2 : var_3 ) { if ( var_1. method_4 ( var_4. method_5 ( ) ) ) { var_2. method_6 ( ) ; } else { var_2. method_7 ( ) ; } } } }

************

************
tgt: public static type_1 method_1 ( final android.content.context context , final java.lang.charsequence title , final java.lang.charsequence message ) { final type_1 var_1 = new type_1 ( context ) ; var_1 . method_2 ( true ) ; if ( title != null ) var_1 . method_3 ( title ) ; if ( message != null ) var_1 . method_4 ( message ) ; return var_1 ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = var_3. method_2 ( string_1 ) ; var_2. method_3 ( string_2, var_1 ) ; java.util.list < type_1 > var_4 = var_2. method_4 ( ) ; type_1 var_5 = ( ( var_4. size ( ) ) > 0 )? var_4. get ( 0 ) : null ; return var_5 ; }

************

************
tgt: public static void method_1 ( android.content.context context , java.lang.string var_1 , java.lang.string name , java.lang.string var_2 , java.lang.string var_3 ) { android.content.intent intent = new android.content.intent ( ) ; intent . method_2 ( var_4 , var_1 ) ; intent . method_2 ( var_5 , name ) ; intent . method_2 ( var_6 , var_2 ) ; intent . method_2 ( var_7 , var_3 ) ; intent . method_3 ( context , var_8 class ) ; context . method_4 ( intent ) ; }
[0]: public void method_1 ( ) { var_1 = 0 ; var_2 = 0l ; var_3 = 0l ; var_4 = 0l ; var_5 = null ; if ( ( key )!= null ) { type_1. method_2 ( buffer, ( ( byte ) ( 0 ) ) ) ; type_2. method_3 ( key, 0, buffer, 0, key. length ) ; var_1 = var_6 ; } init ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = type_3 . method_2 ( this ) . method_3 ( var_3 ) ; type_4 var_4 = method_4 ( ) . method_5 ( ) ; var_4 . replace ( var_5 , var_1 , var_1 . getclass ( ) . method_6 ( ) ) ; var_4 . method_7 ( var_1 . method_8 ( ) ) ; var_4 . commit ( ) ; type_5 . method_9 ( var_6 , ( string_1 + ( var_7 . method_10 ( ) ) ) ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string state ) { if ( state. equals ( var_2 ) ) { method_1 ( var_3, var_1, state ) ; } else if ( state. equals ( var_4 ) ) { method_1 ( var_5, var_1, state ) ; } if ( state. equals ( var_6 ) ) { method_1 ( var_5, var_1, state ) ; method_1 ( var_3, var_1, state ) ; method_1 ( var_7, var_1, state ) ; } }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_2 var_2 , int var_3 , byte var_4 ) { type_3 var_5 = var_6 . get ( var_2 ) ; if ( var_5 == null ) { return null ; } return method_2 ( var_1 , var_5 , var_4 , var_3 , null ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { if ( var_2 < ( var_3. size ( ) ) ) { var_3. get ( var_2 ). method_1 ( var_1 ) ; type_2. method_1 ( method_2 ( ), var_1. method_2 ( ), var_2 ) ; } else { type_3. method_3 ( var_4, ( ( string_1 + var_2 ) + string_2 ) ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( new java.lang.string [ ] { var_2 , var_3 } ) ; var_1 . method_2 ( new java.lang.string [ ] { var_2 } ) ; type_1 . method_3 ( new java.lang.string [ ] { var_2 , null } , var_1 . method_4 ( ) ) ; }
[0]: public void method_1 ( ) { var_1 = var_2. method_2 ( var_3. method_3 ( string_1 ) ) ; var_4 = var_2. method_2 ( var_3. method_3 ( string_2 ) ) ; var_5 = var_2. method_2 ( var_3. method_3 ( string_3 ) ) ; var_5. method_4 ( ) ; var_1. method_5 ( float_1 ) ; var_1. method_6 ( new type_1 ( ) { public void method_7 ( type_2 var_6 ) { var_1. method_4 ( ) ; var_5. method_4 ( ) ; } } ) ; }

************

************
tgt: public static void method_1 ( type_1 out , java.util.list < type_2 > var_1 , type_3 var_2 ) { if ( var_1 . isempty ( ) ) { } else { out . method_3 ( string_1 ) ; out . method_3 ( string_2 ) ; out . method_3 ( string_3 ) ; out . method_3 ( ) ; out . method_3 ( string_4 ) ; for ( type_2 p : var_1 ) { out . method_3 ( p . method_4 ( ) ) ; } } }
[0]: public static type_1 method_1 ( final java.lang.string var_1, final java.lang.string var_2, final long var_3 ) { boolean var_4 = false ; return new type_1 ( var_5, var_4 ) { protected void method_2 ( type_2 output ) throws java.io.ioexception { output. method_3 ( var_1 ) ; output. method_3 ( var_2 ) ; output. method_4 ( var_3 ) ; } } ; }

************

************
tgt: public void method_1 ( java.lang.string result ) { if ( ( result != null ) && ( ! ( result . equals ( string_1 ) ) ) ) { java.lang.string var_1 = type_1 . method_2 ( var_2 ) ; type_2 var_3 = var_4 . method_3 ( ( ( var_5 ) + var_1 ) , var_6 ) ; var_3 . method_4 ( ) . method_5 ( string_2 , result ) . commit ( ) ; method_6 ( ) ; } }
[0]:  < type_1, type_2 > type_3 < type_1, type_2 > method_1 ( final java.lang.string var_1, final type_4 < type_1, type_2 > var_2, final java.lang.class < type_1 > var_3, final java.lang.class < type_2 > var_4, type_5 < type_6 > var_5 ) { final type_3 < type_1, type_2 > var_6 = super. method_1 ( var_1, var_2, var_3, var_4, var_5 ) ; return type_7. method_2 ( var_6 ) ; }

************

************
tgt: private static void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string var_3 ) { android.content.intent var_4 = new android.content.intent ( var_5 ) ; var_4 . method_2 ( string_2 , var_1 ) ; var_4 . method_2 ( string_3 , var_2 ) ; var_4 . method_2 ( string_4 , var_3 ) ; }
[0]: public static boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( string_1 ) ; java.util.date var_3 ; var_2. method_2 ( false ) ; if ( type_2. method_3 ( var_1 ) ) { return true ; } if ( ( var_1. length ( ) )!= ( var_2. method_4 ( ). length ( ) ) ) { return false ; } try { var_3 = var_2. method_5 ( var_1 ) ; } catch ( type_3 var_4 ) { return false ; } return true ; } }

************

************
tgt: public void method_1 ( double var_1 ) { double var_2 = type_1 . method_2 ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = var_2 * ( type_1 . method_4 ( var_1 ) ) ; this . y = var_2 * ( type_1 . method_3 ( var_1 ) ) ; }
[0]: public void update ( ) { var_1. method_1 ( var_2. method_2 ( ). method_3 ( ), var_2. method_2 ( ). method_4 ( ), var_3 ) ; var_4. method_1 ( var_2. method_5 ( ). method_3 ( ), var_2. method_5 ( ). method_4 ( ), var_5 ) ; }

************

************
tgt: public static void method_1 ( java.lang.string content , java.lang.string filename ) { java.io.file file = type_1 . method_2 ( filename ) ; try { type_2 . method_3 ( file , content , type_3 . method_4 ( ) , true ) ; } catch ( java.io.ioexception var_1 ) { var_1 . method_5 ( ) ; } }
[0]: public boolean method_1 ( type_1 node ) { if ( ( ( this. var_1. x ) == ( node. x ) ) && ( ( this. var_1. y ) <= ( node. y ) ) ) return true ; else return false ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = java.lang.string . method_2 ( var_3 . getid ( ) ) ; type_1 var_4 = new type_1 ( ) ; type_2 var_5 = new type_2 ( ) ; var_5 . method_4 ( string_2 , "0" ) ; var_5 . method_4 ( string_3 , var_2 ) ; var_4 . method_5 ( var_5 ) ; ( ( type_3 ) ( context ) ) . method_6 ( var_4 ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { int var_3 = var_1. method_2 ( var_4 ) ; int var_5 = var_1. method_2 ( var_4 ) ; if ( var_3 < var_5 ) { return 1 ; } if ( var_3 > var_5 ) { return - 1 ; } return 0 ; }

************

************
tgt: public boolean method_1 ( java.lang.string key ) { int index = ( key . method_2 ( ) ) % ( this . var_1 . length ) ; java.lang.string var_2 ; while ( ( var_2 = this . var_3 [ index ] ) != null ) { if ( key . equals ( var_2 ) ) return true ; index = ( index + 1 ) % ( this . var_3 . length ) ; } return false ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( type_1. method_2 ( ) ) { type_2. method_3 ( var_1, string_1 ) ; var_2. method_4 ( var_3 ) ; } else { type_2. method_3 ( var_1, string_2 ) ; type_1. method_5 ( var_4, this, var_2 ) ; } }

************

************
tgt: public type_1 add ( type_1 var_1 ) { int var_2 = ( ( var_3 ) * ( var_4 ) ) + ( ( var_5 ) * ( var_6 ) ) ; int var_7 = ( var_6 ) * ( var_4 ) ; return new type_1 ( var_2 , var_7 ) ; }
[0]: protected void method_1 ( ) { if ( var_1 ) { var_2. method_2 ( var_3. get ( var_4 ), var_3. get ( var_5 ) ) ; var_6. settext ( var_2. method_3 ( ) ) ; var_7. settext ( var_2. method_4 ( ) ) ; } else { var_2. method_5 ( var_3. get ( var_4 ), var_3. get ( var_5 ) ) ; var_7. settext ( var_2. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 { type_3 var_1 = type_4 . method_2 ( var_2 , string_1 ) ; type_5 var_3 = var_2 . method_3 ( ) ; type_6 var_4 = type_4 . method_2 ( var_1 , string_2 ) ; assertequals ( string_3 , var_5 , var_4 ) ; assertequals ( string_4 , var_1 , var_3 ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_2 ( string_1 ) ; var_3. method_2 ( string_1 ) ; var_4. method_2 ( string_1 ) ; var_5. method_2 ( string_1 ) ; var_6. method_2 ( string_1 ) ; var_1. method_2 ( string_2 ) ; var_3. method_2 ( string_1 ) ; var_4. method_2 ( string_1 ) ; var_2. method_2 ( string_1 ) ; var_3. method_2 ( string_1 ) ; var_6. method_2 ( string_1 ) ; var_1. method_2 ( string_2 ) ; }

************

************
tgt: public static type_1 add ( ) { type_2 var_1 = type_3 . method_1 ( method_2 ( ) . method_3 ( ) . method_4 ( ) , var_2 class ) ; return type_5 . method_6 ( var_1 , new type_6 ( ) { public void method_7 ( ) throws java.lang.throwable { type_7 . method_8 ( var_1 ) ; } } ) ; }
[0]: public void method_1 ( ) { type_2 var_2 = new type_2 ( ) ; var_2. method_2 ( int_1 ) ; var_2. method_3 ( string_1 ) ; var_2. method_4 ( string_2 ) ; var_2. method_5 ( string_3 ) ; var_2. method_6 ( 1 ) ; var_2. method_7 ( string_4 ) ; var_2. method_8 ( string_5 ) ; var_2. method_9 ( string_6 ) ; var_2. method_10 ( int_2 ) ; var_2. method_11 ( 1 ) ; var_2. method_12 ( 1 ) ; }

************

************
tgt: private java.util.arraylist < type_1 < type_2 > > method_1 ( ) { java.util.arraylist < type_1 < type_2 > > var_1 = new java.util.arraylist < > ( ) ; type_1 < type_2 > var_2 = new type_1 ( ( - int_1 ) , int_2 , int_3 , int_4 , int_5 , int_3 , new java.util.arraylist < > ( ) , int_5 , int_6 , var_3 ) ; var_1 . add ( var_2 ) ; return var_1 ; }
[0]: public void method_1 ( ) { try { java.lang.string var_1 = type_1. method_2 ( ). method_3 ( ). method_4 ( ) ; java.lang.system.out.println ( type_2. method_2 ( ) ) ; java.lang.system.out.println ( type_2. method_2 ( ). method_5 ( ) ) ; type_2. method_2 ( ). method_5 ( ). method_6 ( var_1, this, string_1 ) ; } catch ( type_3 var_2 ) { type_1. method_2 ( ). method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 p = var_1 . method_2 ( ) ; if ( ! ( method_3 ( p ) ) ) return ; if ( var_1 . method_4 ( ) . method_5 ( ) . getname ( ) . equals ( var_1 . method_6 ( ) . method_5 ( ) . getname ( ) ) ) return ; if ( var_2 . getboolean ( string_1 ) ) p . method_7 ( var_3 ) ; if ( var_2 . getboolean ( string_2 ) ) p . method_7 ( var_4 ) ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; try { var_1 = new type_1 < > ( super. get ( ) ) ; var_2. method_2 ( ) ; method_3 ( ) ; if ( ( var_3 )!= null ) { var_3. method_4 ( ) ; var_3 = null ; } } catch ( type_2 | type_3 var_4 ) { type_4. method_5 ( var_5 class. getname ( ) ). method_6 ( var_6, string_1, var_4 ) ; } var_7 = null ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 , type_2 var_2 , type_2 var_3 , java.lang.object [ ] args ) { assert ( var_4 . method_2 ( ) ) != null : string_1 ; var_4 . method_2 ( ) . method_3 ( type_4 . method_4 ( java.lang.string . method_5 ( args [ 0 ] ) , java.lang.string . method_5 ( args [ 1 ] ) ) ) ; return var_5 ; }
[0]: private void method_1 ( int var_1 ) { if ( ( ( method_2 ( ) ) == null ) || (! ( method_2 ( ). equals ( type_1. method_3 ( getcontext ( ) ). method_4 ( ). first ( ) ) ) ) ) { method_5 ( var_2 ) ; return ; } method_5 ( var_1 ) ; } }

************

************
tgt: static void method_1 ( type_1 var_1 , java.util.map < type_2 , java.lang.long > update ) { java.util.hashmap < type_2 , java.lang.long > var_2 = type_3 . method_2 ( var_1 . method_3 ( var_3 ) ) ; for ( java.util.map.entry < type_2 , java.lang.long > position : update . method_4 ( ) ) { var_2 . put ( position . method_5 ( ) , position . getvalue ( ) ) ; } var_1 . method_6 ( var_3 , type_3 . tostring ( var_2 ) ) ; }
[0]: public static java.lang.string method_1 ( final type_1 < java.lang.string, java.lang.string > var_1 ) { return ( var_1. method_2 ( ). equals ( string_1 )? string_1 : ( ( var_2 ) + ( var_1. method_3 ( ) ) ) + ( var_3 ) ) + ( var_1. method_2 ( ) ) ; }

************

************
tgt: public static void method_1 ( ) { try { java.io.file var_1 = new java.io.file ( var_2 ) ; type_1 var_3 = type_1 . method_2 ( ) ; type_2 var_4 = var_3 . method_3 ( ) ; var_5 = var_4 . method_4 ( var_1 ) ; var_5 . method_5 ( ) . method_6 ( ) ; } catch ( java.lang.exception var_6 ) { return ; } }
[0]: private void method_1 ( java.util.collection < type_1 > var_1, java.util.collection < type_1 > var_2 ) { java.util.iterator < type_1 > var_3 = var_1. iterator ( ) ; while ( var_3. method_2 ( ) ) { type_1 var_4 = var_3. method_3 ( ) ; for ( type_1 var_5 : var_2 ) { if ( var_4. method_4 ( var_5 ) ) { var_3. remove ( ) ; } } } var_2. method_5 ( var_1 ) ; var_3. remove ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( ( type_1 ) ( getactivity ( ) . method_2 ( ) ) ) . method_3 ( ) ) { main . method_5 ( ) ; } else { type_2 . method_6 ( main , var_4 , var_5 ) . show ( ) ; } }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( ) ) { method_3 ( ( ( ( type_1. method_4 ( string_1 ) ) + string_2 ) + ( var_1. method_5 ( ) ) ) ) ; var_1. method_6 ( true ) ; } else { var_1. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( java.io.file path ) { java.io.file [ ] c = path . method_2 ( ) ; if ( c == null ) return ; for ( java.io.file file : c ) { if ( file . method_3 ( ) ) { method_1 ( file ) ; file . delete ( ) ; } else { file . delete ( ) ; } } path . delete ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { try { method_2 ( ( ( java.lang.string ) ( var_2 [ i ]. method_3 ( var_3 ) ) ) ) ; } catch ( type_2 var_4 ) { var_4. method_4 ( ) ; } catch ( type_3 var_4 ) { var_4. method_4 ( ) ; } catch ( type_4 var_4 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 path , type_3 var_2 ) { if ( ( null == path ) || ( ( path . method_2 ( ) . size ( ) ) == 0 ) ) { return ; } type_4 . method_3 ( path , var_1 , var_2 ) ; type_4 . method_4 ( path . method_2 ( ) , var_1 , var_3 , var_2 ) ; type_4 . method_5 ( var_1 , path , var_2 ) ; }
[0]: public java.lang.string method_1 ( java.lang.string url ) { java.util.arraylist < java.lang.string > var_1 = type_1. method_2 ( ). method_3 ( ) ; for ( java.lang.string var_2 : var_1 ) { java.lang.string type_2 = type_1. method_2 ( ). method_4 ( var_2 ) ; if ( type_2. equals ( url ) ) { return var_2 ; } } return url ; }

************

************
tgt: private java.lang.object method_1 ( type_1 var_1 ) { type_2 target = method_2 ( var_1 ) . method_3 ( ) . target ; java.util.map < java.lang.string , java.lang.object > var_2 = new java.util.hashmap < > ( ) ; var_2 . put ( var_3 , java.util.arrays.aslist ( var_4 , var_5 ) ) ; return var_2 ; }
[0]: public void method_1 ( boolean var_1, java.lang.string message, type_1 var_2 ) { method_2 ( ) ; java.util.list < type_2 > var_3 = new java.util.arraylist < > ( ) ; if ( var_1 && ( var_4. method_3 ( var_2, var_3 ) ) ) { var_5. method_4 ( var_3 ) ; } else { message = var_4. method_5 ( message ) ; var_5. method_6 ( message ) ; } }

************

************
tgt: public int method_1 ( ) { int result = - 1 ; try { result = type_1 . getint ( this . element , string_1 ) ; return result ; } catch ( type_2 var_1 ) { type_3 . method_2 ( string_2 ) ; } try { result = type_1 . getint ( this . element , "id" ) ; return result ; } catch ( type_2 var_1 ) { type_3 . method_3 ( string_3 ) ; return result ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( ), new type_3 ( ), int_1, new type_4 ( ) ) ; try { java.lang.thread. method_2 ( int_2 ) ; } catch ( type_5 var_2 ) { var_2. method_3 ( ) ; } type_6. assertequals ( ( ( ( ( string_1 + 0 ) + string_2 ) + int_3 ) + string_3 ), var_1. method_4 ( ). gettext ( ) ) ; var_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( var_1 ) != null ) { if ( ( var_1 . method_2 ( ) ) != null ) { var_1 . method_2 ( ) . method_3 ( this ) ; } } var_1 = ( ( type_2 ) ( event . method_4 ( ) ) ) ; var_1 . method_2 ( ) . method_5 ( this ) ; var_1 . method_6 ( new type_3 ( ) { public void method_7 ( ) { method_8 ( ) ; } } ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1. method_2 ( this. file ) ; assertnotnull ( var_1 ) ; assertnotnull ( var_1. method_3 ( ) ) ; try ( java.io.inputstream var_2 = var_1. method_4 ( ) ) { assertnotnull ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string type ) { type_1 . method_2 ( string_1 ) ; p = type_2 . method_3 ( ) . method_4 ( ) ; var_1 . method_5 ( var_2 ) ; method_6 ( ) ; var_3 . method_7 ( var_4 ) ; method_6 ( ) ; var_3 . method_7 ( var_4 ) ; method_6 ( ) ; var_5 . type ( type ) ; }
[0]: public type_1 < type_2 > method_1 ( ) { java.io.file [ ] var_1 = file. method_2 ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; for ( java.io.file c : var_1 ) { var_2. add ( new type_3 ( c ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( android.view.view view ) { switch ( view . getid ( ) ) { case var_1 : int index = ( var_2 . method_2 ( ) ) - 1 ; var_2 . method_3 ( ( index >= 0 ? index : ( var_3 . method_4 ( ) ) - 1 ) ) ; break ; case var_4 : var_2 . method_3 ( ( ( ( var_2 . method_2 ( ) ) + 1 ) % ( var_3 . method_4 ( ) ) ) ) ; break ; } }
[0]: public void method_1 ( type_1 message, type_2 var_1 ) { method_2 ( var_1 ) ; method_3 ( message, var_1 ) ; method_4 ( var_1 ) ; method_5 ( message, var_1 ) ; method_6 ( var_1 ) ; if ( ( message. method_7 ( ). method_8 ( ) ) && ( message. method_9 ( ) ) ) { var_2. method_10 ( var_3 ) ; } else { var_2. method_10 ( var_4 ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == string_1 ) { var_2 . method_2 ( var_3 . method_3 ( ) ) ; } var_2 . method_4 ( var_4 , var_5 ) ; if ( ( var_6 ) <= int_1 ) { var_2 . method_5 ( var_7 , var_5 , var_8 ) ; } }
[0]: public java.util.collection < type_1 > method_1 ( ) { type_2 var_1 = var_2. method_2 ( ) ; java.util.collection < type_1 > var_3 = var_1. method_3 ( context ) ; if ( ( var_3. size ( ) ) == 0 ) throw new type_3 ( ( string_1 + ( var_2. method_2 ( ). getname ( ) ) ) ) ; return method_4 ( var_3 ) ; }

************

************
tgt: public void start ( ) throws java.io.ioexception , java.lang.classnotfoundexception , type_1 , type_2 { java.lang.string var_1 = string_1 ; do { method_1 ( ) ; var_1 = var_2 . method_2 ( ) . trim ( ) . tolowercase ( ) ; switch ( var_1 ) { case string_2 : var_2 . method_3 ( ) ; break ; case string_3 : method_4 ( method_5 ( ) ) ; break ; case string_4 : method_6 ( ) ; break ; default : } } while ( ! ( var_1 . equals ( string_2 ) ) ) ; }
[0]: public static type_1 < type_2 > method_1 ( final type_3 var_1, final java.io.file file, final java.lang.string url ) { return type_1. method_2 ( new type_4 < type_2 > ( ) { public type_2 method_3 ( ) throws java.lang.exception { return type_5. method_4 ( var_1, file, url ) ; } } ) ; } }

************

************
tgt: public void method_1 ( int var_1 , double var_2 ) { type_1 values = new type_1 ( ) ; values . put ( var_3 , var_1 ) ; type_2 var_5 = method_2 ( ) ; var_5 . method_3 ( var_6 , null , values ) ; var_5 . method_4 ( ) ; }
[0]: public void method_1 ( type_1 src, java.lang.string var_1, java.util.list < type_2 > output ) { if ( var_2. method_2 ( ) ) var_2. method_3 ( java.lang.string.format ( string_1, src. getname ( ), output. size ( ), var_1 ) ) ; method_4 ( output ) ; }

************

************
tgt: private void method_1 ( int [ ] var_1 ) { int var_2 = 0 ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { if ( ( ( var_1 [ i ] ) != ( var_3 ) ) && ( ! ( var_4 [ i ] . method_2 ( ) ) ) ) { var_1 [ i ] = var_3 ; var_2 ++ ; } } }
[0]: public type_1 method_1 ( final java.lang.string var_1 ) { type_2 var_2 = null ; try { final java.util.list < type_3 > var_3 = var_4. method_1 ( var_1 ) ; var_2 = type_1. method_2 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_3 ( ) ; var_2 = type_1. status ( var_6 ) ; } return var_2. build ( ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { android.content.intent var_3 = new android.content.intent ( var_4 ) ; try { var_3 . method_2 ( type_1 . method_3 ( var_1 ) ) ; method_4 ( var_3 ) ; type_2 . method_5 ( method_6 ( ) , var_2 , var_5 ) . show ( ) ; } catch ( type_3 var_6 ) { java.lang.string var_7 = method_7 ( ) . getstring ( var_8 ) ; type_2 . method_5 ( method_6 ( ) , var_7 , var_5 ) . show ( ) ; } var_9 . method_8 ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_2 ( ). build ( ) ; try { type_3 var_2 = new type_4 ( ). method_2 ( var_3 class ). method_3 ( ). method_4 ( new type_5 ( ) ). build ( ) ; type_6 var_4 = var_2. method_5 ( var_3 class. getname ( ) ) ; type_7 var_5 = var_4. method_6 ( string_1 ) ; } finally { type_2. method_7 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_2 = method_3 ( ) ; var_2 . method_4 ( index , string_2 , string_3 ) . method_5 ( string_4 , string_5 ) . get ( ) ; var_2 . method_6 ( ) . method_7 ( ) . method_8 ( index ) . get ( ) ; type_2 var_3 = var_2 . method_9 ( index ) . get ( ) ; assertthat ( var_3 . method_10 ( ) . method_11 ( ) , type_3 . method_12 ( 1l ) ) ; }
[0]: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1. add ( string_1 ) ; var_1. add ( string_2 ) ; var_1. add ( string_3 ) ; var_1. add ( string_4 ) ; java.lang.string var_2 = type_1. method_2 ( type_2. method_3 ( ), var_1 ) ; type_2 var_3 = type_2. method_4 ( ) ; asserttrue ( (! ( type_1. method_2 ( var_3, var_1 ). equals ( var_2 ) ) ) ) ; }

************

************
tgt: private static void method_1 ( ) throws type_1 { java.lang.string var_2 = var_1 ; if ( ( type_2 . isempty ( var_2 ) ) || ( ( ! ( var_2 . tolowercase ( var_3 ) . startswith ( string_1 ) ) ) && ( ! ( var_2 . tolowercase ( var_3 ) . startswith ( string_2 ) ) ) ) ) { throw new type_1 ( ) ; } }
[0]: public void method_1 ( int var_1, int var_2 ) { super. method_1 ( var_1, var_2 ) ; if ( var_3 ) { var_4. method_2 ( var_1, 0 ) ; method_3 ( method_4 ( ), ( ( method_5 ( ) ) + ( var_4. method_5 ( ) ) ) ) ; } }

************

************
tgt: public static void init ( ) { type_1 var_4 = new type_1 ( var_5 . filename ) ; try { if ( ! ( var_4 . method_2 ( string_1 ) ) ) var_4 . method_3 ( string_2 , null , false ) ; if ( ! ( var_4 . method_2 ( string_3 ) ) ) var_4 . method_3 ( string_4 , null , false ) ; } finally { var_4 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( method_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ) { method_5 ( type_2. method_6 ( var_2 ) ) ; } else { method_5 ( type_2. method_6 ( var_3 ) ) ; } var_4 = false ; }

************

************
tgt: public void method_1 ( ) throws type_1 { var_1 = ! ( var_1 ) ; type_2 var_2 ; if ( var_1 ) { var_2 = new type_2 ( getclass ( ) . method_2 ( string_1 ) ) ; var_4 . settext ( string_2 ) ; var_5 . method_3 ( ) ; } else { var_2 = new type_2 ( getclass ( ) . method_2 ( string_3 ) ) ; var_4 . settext ( string_4 ) ; var_5 . method_4 ( ) ; } var_6 . method_5 ( new type_3 ( var_2 ) ) ; }
[0]: public void method_1 ( java.lang.string key, boolean value ) { if ( ( ( ( var_1 ) == null ) || ( ( var_1. method_2 ( ) ) == null ) ) || ( ( var_1. method_2 ( ). gettype ( ) ) == ( var_2 ) ) ) { return ; } var_1. method_2 ( ). method_3 ( key, new type_1 ( type_2. method_4 ( ), value ) ) ; }

************

************
tgt: private static java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line ; while ( ( line = var_2 . method_2 ( ) ) != null ) { var_3 . append ( line ) ; } return var_3 . tostring ( ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { try ( type_3 var_3 = var_2. method_2 ( ) ) { java.lang.string var_5 = string_1 ; var_5 += var_6 ; var_5 += string_2 ; var_5 += var_4 ; var_5 += string_2 ; var_5 += var_7 ; var_5 += string_3 ; var_3. execute ( var_5 ) ; } catch ( type_4 var_8 ) { var_8. method_3 ( ) ; } }

************

************
tgt: public boolean method_1 ( int var_1 ) throws type_1 { type_2 var_2 = var_3 . method_2 ( ) ; return ( var_2 . delete ( var_4 , ( ( type_3 . getname ( ) ) + string_1 ) , new java.lang.string [ ] { java.lang.string . method_3 ( var_1 ) } ) ) > 0 ; }
[0]: protected void method_1 ( ) { if ( var_1. method_2 ( ) ) { type_1 [ ] var_2 = var_3. values ( ). method_3 ( new type_1 [ 0 ] ) ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { if (! ( method_4 ( var_2 [ i ]. name ) ) ) method_5 ( var_2 [ i ] ) ; } if ( var_1. method_6 ( ) ) { method_7 ( ) ; } } }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , type_2 var_4 ) { int var_5 = java.lang.integer.parseint ( type_4 . method_2 ( null , string_1 ) ) ; if ( var_5 >= ( var_2 . method_3 ( ) ) ) { type_4 . method_4 ( var_6 , string_2 ) ; return ; } else { var_4 . method_5 ( var_1 ) ; var_2 . method_6 ( var_4 , var_5 ) ; } var_6 . method_7 ( ) ; var_3 . method_7 ( ) ; method_8 ( var_3 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { int temp = ( ( var_2. getint ( var_3, ( - 1 ) ) ) + 1 ) % ( var_4. size ( ) ) ; var_5. method_2 ( var_4. get ( temp ) ) ; type_2. method_3 ( var_2. getint ( var_3, ( - 1 ) ), temp ) ; var_6. method_4 ( var_3, temp ) ; var_6. commit ( ) ; var_5. start ( ) ; }

************

************
tgt: public java.lang.boolean method_1 ( ) throws java.lang.exception { try { var_1 . method_2 ( var_1 . method_3 ( ) . method_4 ( ) , var_1 . method_3 ( ) . method_5 ( ) ) ; } catch ( java.lang.throwable t ) { var_1 . fail ( new type_1 ( ( ( string_1 + string_2 ) + var_1 ) , t ) ) ; } return true ; }
[0]: public void method_1 ( type_1 response ) { try { if (! ( method_2 ( response ) ) ) { method_3 ( ) ; } else { var_1. method_4 ( var_2, new type_2 ( response ). method_5 ( ) ) ; } } catch ( type_3 var_3 ) { var_3. method_6 ( ) ; } catch ( type_4 var_3 ) { var_3. method_6 ( ) ; } }

************

************
tgt: private boolean method_1 ( int x , int y ) { return ( ( ( x > ( type_1 . method_2 ( ) ) ) && ( x < ( type_1 . method_3 ( ) ) ) ) && ( y > ( type_2 . method_2 ( ) ) ) ) && ( y < ( type_2 . method_3 ( ) ) ) ; }
[0]: public void method_1 ( ) { double [ ] var_1 = ( ( double [ ] ) ( var_2. method_2 ( new double [ var_2. size ( ) ] ) ) ) ; double [ ] var_3 = var_4. method_3 ( ) ; asserttrue ( string_1, var_3. equals ( var_2 ) ) ; var_3 [ 0 ] = float_1 ; asserttrue ( string_2, (! ( var_3. equals ( var_1 ) ) ) ) ; }

************

************
tgt: public static type_1 method_1 ( boolean var_1 , type_2 var_2 , boolean var_3 ) { if ( var_1 || ( var_2 != ( var_5 ) ) ) { return new type_3 ( type_4 . method_2 ( var_1 , var_2 ) , var_3 ) ; } else { return new type_5 ( ) ; } }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) + string_3 ) + ( ( var_1 ) + ( var_3 ) ) ) + string_4 ) + ( ( var_2 ) + ( var_4 ) ) ) + string_5 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; var_2 = var_1 . method_3 ( ) . tostring ( ) ; var_3 . settext ( ( ( var_4 . format ( var_5 ) ) + ( var_2 ) ) ) ; var_6 . settext ( null ) ; }
[0]: private static java.io.file method_1 ( type_1 p, java.io.file name ) throws type_2, java.io.ioexception { if ( name!= null ) { java.io.file f = type_3. method_2 ( name, string_1, string_2 ) ; try ( type_4 var_1 = new type_4 ( f, string_3 ) ) { p. method_3 ( new type_5 ( var_1 ) ) ; } return f ; } return null ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 response = new type_1 ( ) ; var_2 . info ( string_1 ) ; try { var_2 . info ( ( string_2 + ( var_3 ) ) ) ; response = ( ( type_1 ) ( var_3 . method_2 ( var_1 ) ) ) ; var_2 . info ( ( string_3 + response ) ) ; } catch ( java.lang.exception var_4 ) { var_2 . error ( ( string_4 + ( var_4 . method_3 ( ) ) ) ) ; } return response ; }
[0]: public void update ( ) { if ( ( type ) == ( var_1 ) ) { ( var_2 ) ++ ; this. method_1 ( var_3, var_4 ) ; int var_5 = var_6. method_2 ( int_1 ) ; if ( ( var_5 == 0 ) && ( ( ( var_2 ) % int_2 ) == 0 ) ) { type_1. method_3 ( string_1 ) ; method_4 ( var_7, var_3, type_2. method_5 ( ), type_2. method_6 ( ) ) ; var_2 = 0 ; } } }

************

************
tgt: public type_1 method_1 ( type_2 item , boolean var_1 ) { if ( ( var_2 class ) == ( item . getclass ( ) ) ) { type_3 var_3 = null ; var_3 = new type_3 ( item . method_3 ( ) ) ; var_3 . method_4 ( var_1 ) ; return var_3 ; } return null ; }
[0]: public void method_1 ( ) { int var_1 = var_2. method_2 ( ) ; java.lang.string var_3 = var_4. method_3 ( var_1 ) ; if ( var_3!= null ) { type_1 var_5 = method_4 ( ). method_5 ( var_3 ) ; if ( var_5 instanceof type_2 ) { ( ( type_2 ) ( var_5 ) ). method_1 ( ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 . method_2 ( var_2 ) ; type_3 . method_3 ( new type_4 ( ) ) ; type_5 . method_4 ( ) ; type_6 . method_4 ( ) ; type_7 . method_2 ( string_1 ) ; type_7 . method_5 ( ) ; }
[0]: public java.lang.string method_1 ( ) { boolean var_1 ; var_1 = var_2 ; var_2 = true ; if (! ( method_2 ( ) ) ) { return null ; } var_2 = var_1 ; if ( ( var_3 )!= ( var_4 ) ) { return null ; } return var_5 ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( this . var_1 ) != null ) && ( ( this . var_1 . size ( ) ) > 0 ) ) { if ( ( method_2 ( ( ( method_3 ( ) ) - 1 ) ) ) == null ) { this . var_1 . remove ( ( ( method_3 ( ) ) - 1 ) ) ; method_4 ( method_3 ( ) ) ; } } }
[0]: public int method_1 ( ) { try { this. method_2 ( ) ; this. method_3 ( ) ; type_1. method_4 ( new type_2 ( ) { public void method_5 ( ) { method_6 ( true ) ; } } ) ; return var_1 ; } catch ( java.lang.exception var_2 ) { type_3. method_7 ( string_1 ) ; var_2. method_8 ( ) ; return - 1 ; } } return 0 ; }

************

************
tgt: public void method_1 ( int var_1 ) { var_2 += var_1 ; var_3 . method_2 ( var_2 ) ; if ( ( var_2 ) >= ( ( var_5 ) * ( var_4 ) ) ) { ( var_5 ) ++ ; var_6 . method_3 ( var_7 ) ; var_3 . method_4 ( var_5 ) ; } var_8 . method_5 ( var_1 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { try { if ( ( var_2. length ( ) ) <= int_1 ) this. var_1 = var_1 ; else { throw new type_1 ( ( ( string_1 + var_1 ) + string_2 ) ) ; } } catch ( type_1 var_3 ) { var_4 [ int_2 ] = string_3 + ( var_3. method_2 ( ) ) ; method_3 ( ( ( method_4 ( ) ) + 1 ) ) ; } }

************

************
tgt: public void method_1 ( float var_1 ) { var_2 . method_2 ( ( ( string_1 + var_1 ) + string_2 ) ) ; if ( var_1 == 0.0f ) { try { if ( ( var_3 ) != null ) { var_3 . method_3 ( ) ; } } catch ( type_1 var_4 ) { var_4 . method_4 ( ) ; } } else { if ( ( var_3 ) != null ) { var_3 . method_5 ( ( var_1 * int_1 ) ) ; } } }
[0]: public void method_1 ( ) throws java.io.ioexception { boolean var_1 = method_2 ( ) ; if ( var_1 ) { method_3 ( ) ; } else { try { this. method_4 ( ) ; } catch ( type_1 var_2 ) { } try { method_3 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_2 ( string_1 ) ; } } }

************

************
tgt: private void method_1 ( java.lang.string url ) throws java.io.ioexception { type_1 var_1 = new type_1 ( url , null , null , null ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; var_3 . add ( var_1 ) ; type_2 var_4 = new type_2 ( var_3 , null , false , null , null , null , null ) ; var_5 . method_2 ( var_4 ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string string = ( ( this ) == ( var_1 ) )? null : this. name ( ) ; if ( string!= null ) { type_1. method_2 ( string. tolowercase ( ) ) ; } return string ; }

************

************
tgt: public final void method_1 ( ) { if ( ( this . var_1 ) != null ) { this . var_1 . method_2 ( new type_1 ( ) { public void method_3 ( ) { for ( final type_2 var_2 : var_3 ) { method_4 ( var_2 , false ) ; } var_4 = true ; method_5 ( ) ; } } ) ; } else { var_4 = true ; method_5 ( ) ; } }
[0]: protected void method_1 ( ) { try { get ( ) ; } catch ( type_1 var_1 ) { } catch ( type_2 var_2 ) { var_2. method_2 ( ) ; } var_3. put ( var_4, 0 ) ; if ( ( var_5. method_3 ( ) ) == var_4 ) var_6. method_4 ( ). method_5 ( 0, var_3. get ( var_4 ) ) ; var_6. method_6 ( 0, 0 ) ; }

************

************
tgt: protected void method_1 ( ) { new type_1 ( getactivity ( ) ) . method_2 ( string_1 ) . method_3 ( string_2 ) . method_4 ( string_3 , null ) . method_5 ( string_4 , new type_2 ( ) { public void method_6 ( type_3 var_2 , int var_3 ) { method_7 ( ) ; } } ) . show ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( 1, int_1 ) ; assertequals ( int_2, var_1. method_3 ( ). size ( ) ) ; for ( type_3 var_3 : var_1. method_3 ( ) ) { method_4 ( var_3. method_5 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 item ) { for ( int index = 0 ; index < ( var_1 . size ( ) ) ; index ++ ) { if ( ( ( var_1 . get ( index ) . index ) == ( item . index ) ) && ( ( var_1 . get ( index ) . getid ( ) ) == ( item . getid ( ) ) ) ) { var_1 . remove ( index ) ; } } method_2 ( ) ; }
[0]: public static boolean method_1 ( int x, int y, type_1 var_1 ) { if ( ( ( ( var_2 )!= null ) && ( ( var_3 )!= null ) ) && ( var_1!= null ) ) { for ( type_2 < java.lang.integer, java.lang.integer > var_4 : var_3 ) if ( var_1. method_2 ( x, y ) ) return false ; } return true ; }

************

************
tgt: public void init ( ) { try { type_1 var_1 = type_2 . method_1 ( ) . put ( string_1 , var_2 . method_2 ( ) ) . put ( string_2 , var_2 . method_3 ( ) ) ; node = type_3 . method_4 ( ) . method_5 ( true ) . method_6 ( var_1 . build ( ) ) . node ( ) ; method_7 ( ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_8 ( ) ; } }
[0]: public void method_1 ( type_1 token ) { this. var_1. method_2 ( token ) ; if ( ( this. var_2 ) >= 0 ) { this. var_3. remove ( this. var_2 ) ; } if ( ( this. var_4 ) == null ) { return ; } for ( type_1 var_5 : this. var_4 ) { var_5. method_3 ( ). method_4 ( var_5 ) ; var_5. method_5 ( ). method_6 ( var_5 ) ; } this. var_4. method_7 ( ) ; }

************

************
tgt: public static boolean method_1 ( type_1 item , boolean var_1 ) { if ( item == null ) { return false ; } if ( item . method_2 ( ) ) { if ( var_1 ) { return false ; } else { return true ; } } else { if ( var_1 ) { return true ; } else { return false ; } } }
[0]: public void method_1 ( ) { type_1 < java.lang.string > var_1 = var_2. method_2 ( ) ; if (! ( var_1. contains ( var_3 ) ) ) { var_4. method_3 ( ( var_3 + string_1 ) ) ; var_2. method_4 ( var_3 ) ; } if (! ( var_1. contains ( var_5 ) ) ) { var_4. method_3 ( ( var_5 + string_1 ) ) ; var_2. method_4 ( var_5 ) ; } }

************

************
tgt: public void method_1 ( ) { while ( ( ( ( t ) <= ( var_1 ) ) || ( ( var_2 ) > 0 ) ) || ( ( var_3 ) > 0 ) ) { int j = method_2 ( var_4 ) ; if ( ( var_5 ) <= ( var_4 . get ( j ) ) ) { method_3 ( ) ; } else { method_4 ( j ) ; } if ( ( t ) >= ( var_1 ) ) { var_5 = var_6 ; } } method_5 ( ) ; }
[0]: public void start ( ) { try { type_1. replace ( var_1, var_2. height, var_3 ) ; } catch ( type_2 var_4 ) { var_4. method_1 ( ) ; } var_5. method_2 ( ( ( ( var_6 ) / int_1 ) - ( ( var_7 ) / int_1 ) ), ( ( ( var_8. height ) / int_1 ) - ( ( var_7 ) / int_1 ) ) ) ; }

************

************
tgt: private boolean method_1 ( ) { try { return ! ( ( java.lang.double . method_2 ( this . var_1 ) ) == ( ( double ) ( this . time . getvalue ( ) ) ) ) ; } catch ( java.lang.exception var_2 ) { return false ; } }
[0]: public int method_1 ( ) { int var_1 = int_1 ; if ( ( ( var_2 ) == 1 ) || ( ( var_2 ) == int_2 ) ) return int_3 ; else if ( ( var_2 ) > int_4 ) var_1 = var_3. method_2 ( var_4 ) ; if ( var_1!= int_1 ) return var_1 ; var_1 = var_3. method_2 ( var_5 ) ; if ( var_1!= int_1 ) return var_1 ; else { int var_6 = new java.util.random ( ). method_3 ( int_5 ) ; return var_6 ; } } return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_3 , int position ) { type_2 var_2 = ( ( type_2 ) ( var_3 ) ) ; type_3 var_4 = var_5 . get ( position ) ; var_6 . settext ( var_4 . method_2 ( ) ) ; var_7 . settext ( var_4 . method_3 ( ) ) ; var_8 . settext ( var_4 . method_4 ( ) ) ; var_9 . settext ( var_4 . method_5 ( ) ) ; type_4 . i ( string_1 , var_4 . method_4 ( ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ). method_6 ( true ) ; method_7 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_5 = type_2 . method_5 ( var_6 , var_7 , var_8 ) ; var_5 . method_6 ( var_9 , new type_3 ( ) { public void method_7 ( android.view.view var_10 ) { var_4 . method_8 ( var_3 . method_9 ( ) ) ; } } ) ; var_5 . show ( ) ; }
[0]: public type_1 method_1 ( ) throws type_2 { final type_1 var_1 = var_2. method_1 ( ) ; if ( var_1!= null ) { java.lang.string type = type_3. method_2 ( var_3. method_3 ( ) ) ; java.lang.class var_4 = type_3. method_4 ( type ) ; if ( type_4. method_5 ( var_4. method_6 ( ) ). contains ( type ) ) { return var_1 ; } } throw new type_5 ( ) ; } return null ; }

************

************
tgt: private void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; ( var_2 ) ++ ; byte [ ] var_3 = new byte [ ] { ( ( byte ) ( var_4 . method_3 ( ) ) ) , ( ( byte ) ( type_2 . method_4 ( ) ) ) , ( ( byte ) ( var_4 . method_5 ( ) ) ) } ; var_4 . method_6 ( ) ; method_7 ( new type_3 ( var_5 , var_6 , var_3 ) ) ; }
[0]: private static type_1 [ ] method_1 ( type_2 var_1 ) { double var_2 = var_1. method_2 ( ) ; type_1 var_3 = var_1. method_3 ( ) ; type_1 [ ] var_4 = type_3. method_4 ( var_1 ) ; type_1 [ ] var_5 = type_3. method_5 ( var_2, var_3, var_4 ) ; return var_5 ; }

************

************
tgt: private void method_1 ( final type_1 var_1 , final type_1 var_2 ) { try { var_3 . method_2 ( type_2 . method_3 ( var_1 ) . to ( var_2 ) ) ; type_3 . info ( ( ( ( string_1 + var_2 ) + string_2 ) + var_1 ) ) ; } catch ( final java.lang.exception t ) { type_3 . error ( ( ( ( string_3 + var_1 ) + string_4 ) + var_2 ) , t ) ; } }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { this. var_2 = var_2 ; var_3. setenabled ( method_2 ( var_2 ) ) ; if ( var_2. equals ( var_4 ) ) { type_3. method_3 ( ) ; } method_4 ( ) ; method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( java.util.list < ? extends type_2 > data ) { type_1 var_1 = new type_3 ( data . size ( ) , p ) ; int var_2 = 0 ; for ( type_2 var_3 : data ) { var_1 . method_2 ( var_2 , var_3 . method_3 ( ) . method_4 ( ) ) ; var_2 += 1 ; } return new type_4 ( var_1 , false ) . method_5 ( ) ; }
[0]: protected static type_1 method_1 ( ) throws java.io.ioexception { final type_2 var_1 = new type_2 ( ). method_2 ( string_1 ) ; var_1. method_3 ( var_2 class ) ; var_1. method_3 ( var_3 class ) ; type_1 var_4 = type_3. method_4 ( var_5, var_1 ) ; return var_4 ; }

************

************
tgt: private boolean method_1 ( ) { if ( string_1 . equals ( var_1 ) ) { return false ; } if ( ( ! ( "false" . equals ( var_2 ) ) ) && ( string_1 . equals ( var_3 ) ) ) { var_4 . error ( string_2 ) ; return false ; } return true ; }
[0]: public java.lang.string method_1 ( long var_1, long var_2, type_1 var_3 ) { if ( var_1 > 0 ) { type_2 var_4 = var_5. method_2 ( var_1 ) ; var_3. method_3 ( string_1, var_4 ) ; } if ( var_2 > 0 ) { type_3 var_6 = var_7. method_2 ( var_2 ) ; var_3. method_3 ( string_2, var_6 ) ; } var_3. method_3 ( string_3, new type_4 ( ) ) ; return string_4 ; }

************

************
tgt: protected final void method_1 ( type_1 var_1 , java.lang.string var_3 ) { type_2 args = new type_2 ( ) ; args . method_2 ( var_5 , var_3 ) ; args . method_2 ( var_6 , ( string_2 + ( var_7 ) ) ) ; var_1 . method_3 ( args ) ; }
[0]: private static void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3 ; java.lang.string var_4 = var_5. gettext ( ) ; java.lang.string var_6 = var_7. gettext ( ) ; java.lang.string var_8 = var_9. gettext ( ) ; if ( type_2. method_1 ( var_2, var_4, var_6, var_8 ) ) { var_5. settext ( string_1 ) ; var_7. settext ( string_1 ) ; var_9. settext ( string_1 ) ; } else { var_5. settext ( string_2 ) ; } }

************

************
tgt: public void handle ( type_1 event ) { if ( ( event . method_1 ( ) ) instanceof type_2 ) { java.lang.integer var_1 = ( ( type_2 < java.lang.integer > ) ( event . method_1 ( ) ) ) . getvalue ( ) ; type_3 . method_2 ( var_1 ) ; } }
[0]: public void method_1 ( final android.content.intent intent, final type_1 var_1, final java.lang.string var_2 ) { var_3. method_2 ( intent, new type_2 ( ) { public void method_3 ( final android.content.intent intent ) { var_4 super. method_1 ( intent, var_1, var_2 ) ; } } ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_2 . method_3 ( var_1 . getname ( ) ) . method_4 ( null ) ; type_3 . assertthat ( new type_4 ( ) . method_5 ( var_1 ) . method_6 ( var_3 ) ) . method_7 ( false ) ; }
[0]: public void method_1 ( ) { java.lang.string [ ] var_1 = ( ( java.lang.string [ ] ) ( var_2. method_2 ( new java.lang.string [ 0 ] ) ) ) ; java.lang.string [ ] f = ( ( java.lang.string [ ] ) ( var_3. method_3 ( ) ) ) ; asserttrue ( string_1, f. equals ( var_2 ) ) ; f [ 0 ] = string_2 ; asserttrue ( string_3, (! ( f. equals ( var_1 ) ) ) ) ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 item ) throws type_2 { if ( ( var_2 != null ) && ( var_2 . contains ( string_1 ) ) ) throw new type_2 ( type_3 . message ( ( var_1 + string_2 ) , item ) ) ; }
[0]: public static void method_1 ( java.lang.string name ) { type_1 var_1 = new type_2 ( ). method_2 ( new java.io.file ( name ), var_2 class ) ; type_3. info ( string_1 ) ; if ( var_1 == null ) { type_3. method_3 ( string_2, name ) ; } else { synchronized ( var_2 class ) { var_3 = var_1 ; } } }

************

************
tgt: private void method_1 ( ) throws type_1 { switch ( var_1 ) { case var_2 : break ; case var_3 : method_2 ( var_4 . get ( 0 ) ) ; if ( ( ( var_4 . get ( 0 ) ) == 0 ) || ( ( ( var_5 ) % ( var_4 . get ( 0 ) ) ) != 0 ) ) { throw new type_1 ( string_1 ) ; } break ; case var_6 : for ( java.lang.integer number : var_7 . values ) { method_2 ( number ) ; } break ; } }
[0]: public void method_1 ( type_1 var_1, float var_2 ) { var_3. method_2 ( false ) ; var_4. method_2 ( true ) ; if ( ( var_5 ) < ( var_6 ) ) { var_7 = 1 - ( ( var_5 ) / ( var_6 ) ) ; var_4. method_3 ( new type_2 ( 0, 0, 0, ( 1 - ( var_7 ) ) ) ) ; var_8. method_4 ( var_1 ) ; var_8. method_5 ( ) ; var_5 += var_2 ; } else { var_9 = false ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( string_1 ) ; method_3 ( var_1 , var_2 , string_2 ) ; method_3 ( var_1 , var_2 , string_3 ) ; method_4 ( var_1 , var_3 , string_2 ) ; method_4 ( var_1 , var_3 , string_5 ) ; }
[0]: public void method_1 ( ) throws type_1 { final type_2 var_1 = type_3. method_2 ( var_2 class ) ; type_4 var_3 = type_3. method_2 ( var_4 class ) ; var_3 = null ; java.lang.string var_5 = var_1. method_3 ( ) ; if ( var_3!= null ) { var_5 = null ; } else { type_5 var_6 = method_4 ( ) ; var_5 = var_6. method_5 ( var_7, var_8 ) ; type_6. assertequals ( var_9, var_5 ) ; } var_5 = var_5. replace ( string_1, string_2 ) ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( var_1 == ( this ) ) { return true ; } if ( ! ( var_1 instanceof type_2 ) ) { return false ; } return this . var_2 . equals ( ( ( type_2 ) ( var_1 ) ) . var_2 ) ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.string path, type_3 var_1, long offset, int var_2, byte [ ] buffer ) throws java.io.ioexception { type_4 var_3 = new type_4 ( path ) ; var_3. method_2 ( method_3 ( var_4 ), null ) ; var_3. method_2 ( var_5, var_1. method_4 ( ) ) ; var_3. method_2 ( var_6, offset ) ; var_3. method_2 ( var_7, var_2 ) ; return this. var_8. method_5 ( var_3. build ( ), buffer ) ; }

************

************
tgt: protected java.util.list < type_1 > method_1 ( type_2 var_1 , boolean var_2 ) throws type_3 { java.util.list < type_1 > var_3 = var_4 . method_2 ( var_1 . method_3 ( ) ) ; if ( var_3 == null ) { var_3 = method_4 ( var_1 ) ; } if ( ! var_2 ) return method_5 ( method_6 ( var_3 , var_1 . method_3 ( ) ) ) ; else return method_6 ( var_3 , var_1 . method_3 ( ) ) ; }
[0]: private void method_1 ( int var_1 ) { long var_2 = 1l < < ( var_1 & int_1 ) ; if ( ( var_3 [ ( var_1 > > > int_2 ) ] |= var_2 )!= var_2 ) { var_4 [ ( var_1 > > > int_3 ) ] |= 1l < < ( ( var_1 > > > int_2 ) & int_1 ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( ( var_1 ) >= ( var_2 ) ) && ( ( ( type_1 . method_2 ( this , var_3 ) ) != ( var_4 ) ) || ( ( type_1 . method_2 ( this , var_5 ) ) != ( var_4 ) ) ) ) { method_3 ( new java.lang.string [ ] { var_3 , var_5 } , var_6 ) ; } else { android.content.intent intent = new android.content.intent ( this , var_7 class ) ; method_4 ( intent ) ; this . method_5 ( ) ; } }
[0]: public void method_1 ( java.lang.string name, int id ) throws type_1 { java.lang.string query = ( ( ( string_1 + name ) + string_2 ) + id ) + string_3 ; try ( type_2 var_1 = var_2. method_2 ( ) ) { type_3 var_3 = var_1. method_3 ( string_4 ) ; var_3. method_4 ( 1, name ) ; var_3. method_5 ( int_1, id ) ; var_3. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( java.lang.double . method_2 ( ( - float_1 ) ) , type_2 . method_3 ( string_1 ) . getvalue ( ) ) ; type_1 . assertequals ( java.lang.double . method_2 ( float_2 ) , type_2 . method_3 ( string_2 ) . getvalue ( ) ) ; type_1 . assertequals ( java.lang.double . method_2 ( ( - float_2 ) ) , type_2 . method_3 ( string_3 ) . getvalue ( ) ) ; }
[0]: public void method_1 ( ) { getactivity ( ). method_2 ( new type_1 ( ) { public void method_1 ( ) { int i = var_1. method_3 ( ) ; if ( i < count ) { var_1. method_4 ( 1 ) ; } } } ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) java.lang.system.out.println ( ( string_1 + ( method_3 ( ) ) ) ) ; method_4 ( var_3 ) ; var_3 . setenabled ( false ) ; var_4 [ 1 ] [ 1 ] = method_3 ( ) ; ( var_5 ) ++ ; }
[0]: public void method_1 ( ) { type_1. i ( string_1, string_2 ) ; try { type_1. i ( string_3, var_1. method_2 ( ) ) ; } catch ( java.lang.exception var_2 ) { type_1. i ( string_4, var_2. tostring ( ) ) ; } method_3 ( ) ; }

************

************
tgt: public void method_1 ( ) { for ( int x = ( ( var_1 ) / int_1 ) - 1 ; x < ( ( ( var_1 ) / int_1 ) + int_1 ) ; x ++ ) { var_2 . add ( new type_1 ( x , ( - int_2 ) ) ) ; } var_2 . add ( new type_1 ( ( ( ( var_1 ) / int_1 ) - 1 ) , ( - int_1 ) ) ) ; }
[0]: private void method_1 ( java.lang.string results, type_1 var_1, type_2 var_2 ) { java.util.list < type_3 > var_3 = var_4. method_2 ( ) ; if ( ( var_3. isempty ( ) ) || ( results == null ) ) { var_2. put ( var_5, var_3 ) ; } else { var_2. put ( var_5, var_3. method_3 ( 1, var_3. size ( ) ) ) ; var_2. put ( var_6, var_3. get ( 0 ) ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , ( string_1 + ( method_3 ( ) ) ) ) ; if ( ( method_4 ( ) ) != null ) { method_5 ( false ) ; method_4 ( ) . error ( var_2 ) ; } else { type_1 . method_2 ( var_1 , ( string_2 + ( method_3 ( ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2 = var_3 ; listener. method_2 ( ( - 1 ), var_3 ) ; if ( ( var_4 ) == null ) method_3 ( var_1. method_4 ( ) ) ; else { if ( var_4. method_5 ( ) ) { method_6 ( ) ; } else { method_7 ( ) ; } } } }

************

************
tgt: public void method_1 ( android.view.view view ) { android.content.intent intent ; if ( ( var_2 ) < int_1 ) { intent = new android.content.intent ( var_3 ) ; } else { intent = new android.content.intent ( var_4 ) ; intent . method_3 ( var_5 ) ; } intent . method_4 ( string_3 ) ; method_5 ( android.content.intent . method_6 ( intent , string_4 ) , var_6 ) ; }
[0]: public boolean method_1 ( android.view.view view, type_1 event ) { switch ( event. method_2 ( ) ) { case var_1 : type_2 var_2 = new type_2 ( ) ; view. method_3 ( type_3. method_4 ( string_1, string_1 ), var_2, view, 0 ) ; return true ; default : return false ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) { for ( type_1 var_2 : var_3 ) { if ( ( ( var_4 ) != null ) && ( var_4 . equals ( var_1 ) ) ) { try { var_2 . method_2 ( ) ; } catch ( type_2 var_5 ) { var_2 . method_3 ( ) ; var_5 . method_4 ( ) ; } return var_6 ; } } return null ; }
[0]: protected java.lang.string [ ] method_1 ( java.util.arraylist < java.lang.string >... var_1 ) { boolean var_2 = false ; java.lang.string [ ] result = null ; try { type_1 var_3 = new type_1 ( context, context ) ; var_2 = var_3. method_2 ( ) ; if ( var_2 ) result = var_3. method_3 ( ) ; else result = new java.lang.string [ 0 ] ; result [ 0 ] = string_1 ; } catch ( java.lang.exception var_4 ) { var_4. method_4 ( ) ; } return result ; } }

************

************
tgt: private static int method_1 ( byte [ ] var_1 ) { int start = ( var_2 ) + ( var_3 ) ; int end = start + ( var_4 ) ; byte [ ] var_5 = new byte [ var_4 ] ; var_5 = type_1 . method_2 ( var_1 , start , end ) ; type_2 var_6 = type_2 . method_3 ( var_5 ) ; int var_7 = var_6 . method_4 ( ) ; return var_7 ; }
[0]: private void method_1 ( type_1 var_1 ) { try { var_2 = var_3. method_1 ( var_1 ) ; if ( ( var_4 )!= null ) { var_4. method_2 ( var_2. method_3 ( ) ) ; var_4. method_4 ( var_1 ) ; } } catch ( type_2 var_5 ) { method_5 ( var_5 ) ; } }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1 . split ( var_3 ) ; java.lang.string var_4 = var_5 ; if ( ( var_2 . length ) >= ( var_6 ) ) { for ( int i = 1 ; i < ( var_2 . length ) ; i ++ ) { var_4 += var_2 [ i ] ; var_4 += var_3 ; } } return var_4 ; }
[0]: public boolean method_1 ( type_1 var_1, int var_2, int var_3, int var_4, int var_5 ) { boolean var_6 = false ; var_6 = var_2 < ( var_1. x ) ; var_6 = ( var_1. x ) < var_3 ; var_6 = var_4 < ( var_1. y ) ; var_6 = ( var_1. y ) < var_5 ; return var_6 ; }

************

************
tgt: private void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2 . method_2 ( var_3 ) ) ) ; if ( ( var_1 ) != null ) { java.lang.string var_4 = string_1 ; type_2 var_5 = new type_3 ( ) . method_3 ( var_4 ) . method_4 ( string_2 ) . method_4 ( string_3 ) . method_4 ( string_4 ) . method_4 ( string_5 ) . build ( ) ; var_1 . method_5 ( var_5 ) ; } }
[0]: public boolean method_1 ( int var_1 ) { if ( var_1 > ( this. var_2 ) ) { return false ; } else { this. var_2 -= var_1 ; this. var_3 += var_1 ; this. method_2 ( ) ; this. method_3 ( this. var_3 ) ; this. method_4 ( ) ; return true ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) java.lang.system.out.println ( string_1 ) ; type_1 var_2 = new type_1 ( ) ; try { if ( var_1 ) java.lang.system.out.println ( string_2 ) ; var_2 . method_2 ( ) ; } catch ( java.io.ioexception | type_2 | type_3 var_3 ) { var_3 . method_3 ( ) ; } }
[0]: public java.util.map < java.lang.string, java.lang.object > method_1 ( java.lang.string var_1, java.lang.string query, java.lang.string var_2, java.lang.string var_3 ) throws java.io.ioexception { var_4. method_2 ( string_1, var_1 ) ; java.lang.string var_5 = var_6. method_3 ( var_1 ) ; var_4. method_4 ( string_2, var_5 ) ; var_4. method_2 ( string_3, query, var_2, var_3 ) ; return var_7. method_5 ( query, var_2, new type_1 ( var_1, var_5 ), method_6 ( var_3 ) ) ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { try { this . var_1 . method_2 ( ) ; } catch ( type_1 var_2 ) { method_3 ( string_1 , var_2 ) ; break ; } catch ( java.lang.exception var_2 ) { method_3 ( string_2 , var_2 ) ; break ; } } }
[0]: public static int method_1 ( java.lang.string [ ] args ) { int var_1 = - 1 ; if ( ( args.length ) > 0 ) { var_1 = ( ( int ) ( java.lang.integer.parseint ( args [ 0 ] ) ) ) ; if ( var_1 < 1 ) { throw new type_1 ( ) ; } else { } } else { new type_1 ( ) ; } return var_1 ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 < type_2 > var_2 = var_3 . method_2 ( ) ; while ( var_2 . method_3 ( ) ) { type_3 b = ( ( type_3 ) ( var_2 . method_4 ( ) ) ) ; if ( b . method_5 ( ) . equals ( var_1 ) ) { var_3 . method_6 ( ) ; b . method_7 ( true ) ; break ; } } }
[0]: public void method_1 ( android.view.view view ) { java.lang.string var_1 = null ; if ( ( var_2 )!= null ) { var_1 = var_2. gettext ( ). tostring ( ) ; } if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) { method_2 ( getstring ( var_3 ) ) ; return ; } android.content.intent intent = new android.content.intent ( this, var_4 class ) ; intent. method_3 ( string_1, var_1 ) ; method_4 ( intent ) ; }

************

************
tgt: void method_1 ( int var_1 , type_1 list ) { type_2 var_2 = new type_2 ( string_1 ) ; list . method_2 ( var_2 ) ; int var_3 = 1 ; while ( var_3 != var_1 ) { var_3 ++ ; type_2 var_4 = new type_2 ( ( string_2 + ( java.lang.integer.tostring ( var_3 ) ) ) ) ; list . method_2 ( var_4 ) ; } }
[0]: public void method_1 ( ) { method_2 ( ) ; for ( int var_1 = 0 ; var_1 < ( var_2 ) ; var_1 ++ ) { for ( int var_3 = 0 ; var_3 < ( height ) ; var_3 ++ ) { if ( ( var_4. method_3 ( ) ) < ( var_5 ) ) { var_6 [ var_1 ] [ var_3 ] = method_4 ( ) ; } else { var_6 [ var_1 ] [ var_3 ] = char_1 ; } } } }

************

************
tgt: protected static type_1 method_1 ( ) { type_3 var_1 = type_2 . get ( ) . method_3 ( ) ; type_1 var_2 = var_1 . method_4 ( var_3 , new type_4 < type_1 > ( ) { public type_1 method_5 ( ) throws java.lang.exception { return new type_1 ( ) ; } } ) ; return var_2 ; }
[0]: private type_1 method_1 ( final java.util.list < type_2 > var_1, final type_3 var_2, final type_4 var_3 ) throws java.io.ioexception { final type_5 var_4 = this. var_5. method_2 ( var_2 ) ; final type_6 < java.lang.string, type_7 > var_6 = type_8. method_3 ( var_1 ) ; final type_9 var_7 = var_4. method_4 ( ) ; var_3. method_5 ( var_4. method_4 ( ) ). method_6 ( type_8. method_7 ( var_7. method_8 ( ), var_6 ) ) ; return new type_10 ( var_3 ) ; }

************

************
tgt: protected java.lang.exception method_1 ( type_1 ... params ) { try { type_2 var_1 = ( ( type_3 ) ( method_2 ( ) ) ) . method_3 ( var_2 ) ; var_1 . start ( ) ; var_1 . method_4 ( var_3 ) ; } catch ( java.io.ioexception var_4 ) { return var_4 ; } catch ( type_4 var_4 ) { return var_4 ; } catch ( type_5 var_4 ) { return var_4 ; } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2 = var_1 ; var_3 = type_2. method_2 ( ). getint ( string_1 ) ; var_4 = type_2. method_2 ( ). getint ( string_2 ) ; this. var_5 = new type_3 ( var_3, var_4 ) ; method_3 ( type_2. method_4 ( ) ) ; this. var_6 = new type_4 < type_5 > ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 ; if ( method_2 ( var_1 ) ) { var_2 = var_3 . get ( var_1 . expr ( ) ) ; var_3 . put ( var_1 , ( ( ( var_2 + "\n" ) + ( var_4 ) ) + string_1 ) ) ; } else { var_3 . put ( var_1 , ( ( var_4 ) + string_2 ) ) ; } }
[0]: public void method_1 ( final type_1 var_1 ) { this. var_2 = var_1 ; switch ( this. var_2 ) { case var_3 : this. var_4 = this. var_5 ; return ; case var_6 : this. var_4 = this. var_7 ; return ; default : throw new type_2 ( ( ( ( ( string_1 + ( var_8 class. method_2 ( ) ) ) + string_2 ) + var_1 ) + string_3 ) ) ; } }

************

************
tgt: public java.lang.object add ( java.lang.object var_1 , java.lang.object var_2 ) { if ( ( var_1 instanceof java.lang.string ) && ( var_2 instanceof java.lang.string ) ) { return ( ( java.lang.string ) ( var_1 ) ) + var_2 ; } else { return super . add ( var_1 , var_2 ) ; } }
[0]: private java.lang.string method_1 ( type_1 var_1, type_2 var_2, type_3 errors ) { java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_2 ; if ( errors. method_2 ( ) ) { return var_3 ; } type_4 var_5 = var_6. method_3 ( var_2 ) ; var_6. method_4 ( var_5 ) ; var_1. method_5 ( string_3, var_5 ) ; return var_4 ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , int var_2 ) { type_2 < type_3 > var_3 = this . var_4 . method_2 ( var_2 ) ; java.util.list < type_4 > var_5 = this . var_6 . method_3 ( ) ; var_1 . method_4 ( string_1 , string_2 ) ; var_1 . method_4 ( string_3 , var_3 ) ; var_1 . method_4 ( string_4 , var_5 ) ; return string_5 ; }
[0]: public void method_1 ( ) throws java.io.ioexception { method_2 ( var_1. method_3 ( int_1 ) ). method_4 ( null ) ; type_1 < type_2 > result = var_2. method_5 ( int_1 ) ; assertnotnull ( result ) ; asserttrue ( result. method_6 ( ) ) ; asserttrue ( result. method_7 ( ). method_8 ( type_3. method_9 ( var_3 class, int_1 ) ) ) ; method_10 ( var_1 ). method_3 ( int_1 ) ; }

************

************
tgt: public static boolean method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , string_2 , string_3 ) ; type_1 var_2 = new type_1 ( string_4 , string_5 , string_3 ) ; java.lang.string var_3 = type_2 . method_2 ( var_1 ) ; java.lang.string var_4 = type_2 . method_2 ( var_2 ) ; boolean var_5 = var_3 . equals ( string_6 ) ; boolean var_6 = var_4 . equals ( string_6 ) ; return ( var_5 && var_6 ) == true ; }
[0]: public int method_1 ( type_1 <? > var_1, type_1 <? > var_2 ) { if ( ( var_1. end ) < ( var_2. end ) ) return - 1 ; if ( ( var_2. end ) < ( var_1. end ) ) return 1 ; return 0 ; }

************

************
tgt: final boolean method_1 ( ) throws java.lang.exception { boolean b = false ; for ( type_1 < type_2 > var_1 : var_2 ) { if ( var_1 != null ) { b = ( var_1 . update ( ) ) || b ; } } if ( b || ( var_3 ) ) { try { output = type_3 . method_2 ( ) ; return true ; } catch ( java.lang.exception var_4 ) { output = null ; throw var_4 ; } } return false ; }
[0]: private short method_1 ( long var_1 ) { if ( var_1 >= ( var_2. method_2 ( ) ) ) { return int_1 ; } else { return ( ( short ) ( ( data. get ( ( ( int ) ( var_1 ) ) ) ) & int_2 ) ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_2 var_1 = method_2 ( ) . method_3 ( ) . method_4 ( ) ; type_3 var_2 = type_4 . method_5 ( var_1 , var_3 class ) ; java.lang.system.out.println ( type_4 . method_12 ( var_2 ) ) ; try { var_4 . method_6 ( var_2 ) ; } catch ( type_5 var_5 ) { return method_7 ( var_5 . method_8 ( ) ) ; } type_6 . method_9 ( ( ( var_2 . method_10 ( ) ) + string_1 ) ) ; return method_11 ( type_4 . method_12 ( var_2 ) ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = var_2 ; type_2 ( ). method_2 ( var_3 ). build ( ) ; var_4. method_3 ( new java.util.arraylist < type_3 > ( ), var_1, var_5 ) ; if ( var_6 ) type_4. method_4 ( var_7, string_1 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = getactivity ( ) . method_2 ( string_1 , var_2 ) ; java.lang.string [ ] var_3 ; java.lang.string var_4 = var_1 . getstring ( string_2 , null ) ; if ( var_4 != null ) { var_3 = var_4 . split ( string_3 ) ; for ( java.lang.string x : var_3 ) { if ( ( x . trim ( ) . length ( ) ) > 0 ) { var_5 . add ( x . trim ( ) ) ; } } } var_6 . method_4 ( ) ; }
[0]: private void method_1 ( ) { if ( ( type_1. method_2 ( ). method_3 ( ) ) == ( var_1 ) ) { if ( ( var_2. method_4 ( ) ) == false ) var_2. show ( ) ; else { var_3. method_5 ( true ) ; var_4. method_6 ( ) ; } } else { var_3. method_5 ( false ) ; var_4. method_6 ( ) ; } }

************

************
tgt: public static type_1 < type_2 > method_1 ( double var_1 , boolean var_2 , type_3 function ) { if ( var_2 ) { return new type_4 ( var_1 , float_1 , function ) ; } else { return new type_5 ( var_1 , float_1 , function ) ; } }
[0]: public void method_1 ( final type_1 < type_2 > var_1 ) throws java.lang.exception { if (! ( var_2. get ( ) ) ) { if ( var_3 ) { var_1. method_2 ( new type_3 ( var_4, var_2 ) ) ; } var_4. method_3 ( ) ; var_2. set ( true ) ; } else { var_1. method_4 ( var_4 ) ; } } }

************

************
tgt: public void method_1 ( ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < java.lang.integer > ( ) ; var_1 . add ( 1 ) ; var_1 . add ( int_1 ) ; var_1 . add ( int_2 ) ; type_1 var_2 = new type_2 ( ) ; java.util.list < java.lang.integer > result = type_3 . method_2 ( var_1 , var_2 ) ; assertequals ( var_1 , result ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; var_2. method_3 ( 0 ) ; var_3 = 0 ; type_1. method_2 ( var_1, ( string_2 + ( var_2. method_4 ( ) ) ) ) ; method_5 ( ) ; var_4 = false ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { type_1 [ ] values = type_1 . values ( ) ; for ( type_1 value : values ) { if ( var_1 . equals ( value . tostring ( ) ) ) { return value ; } } throw new type_2 ( ( string_1 + var_1 ) ) ; }
[0]: public void method_1 ( java.lang.object target, type_1 errors ) { type_2 var_1 = ( ( type_2 ) ( target ) ) ; long var_2 = var_1. method_2 ( ) ; type_3 < type_4 > var_3 = var_4. method_3 ( var_2 ) ; if (! ( var_3. method_4 ( ) ) ) { errors. method_5 ( string_1, string_2, ( ( string_3 + var_2 ) + string_4 ) ) ; } }

************

************
tgt: public void method_1 ( float var_1 ) { var_2 . method_2 ( 0.0f , 0.0f , 0.0f , 1.0f ) ; var_2 . method_3 ( var_3 ) ; var_4 . method_4 ( ) ; var_5 . method_5 ( var_1 , var_4 ) ; var_4 . end ( ) ; update ( var_1 ) ; var_6 . method_6 ( ) ; }
[0]: protected java.lang.void method_1 ( java.lang.void... var_1 ) { java.util.map < java.lang.string, java.lang.object > var_2 = new java.util.hashmap < > ( ) ; var_2. put ( string_1, start ) ; var_2. put ( string_2, end ) ; type_1. method_2 ( ). method_3 ( var_3, var_4, var_2 ) ; return null ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 = var_3 . method_2 ( ) ; if ( var_4 . remove ( var_1 ) ) { var_5 += var_6 ; } if ( ! ( var_1 instanceof type_2 ) ) { method_3 ( var_1 ) ; var_7 . add ( var_1 ) ; ( var_8 ) -- ; method_4 ( ) ; } else { method_5 ( ( ( type_2 ) ( var_1 ) ) ) ; method_6 ( ( ( type_2 ) ( var_1 ) ) ) ; } }
[0]: private synchronized void method_1 ( type_1 var_1, long var_2 ) throws type_2, type_3 { if (! ( var_1. method_2 ( ) ) ) { long var_3 = var_2 ; long var_4 = ( type_4. method_3 ( ) ) + var_2 ; do { method_4 ( var_3 ) ; if ( var_1. method_2 ( ) ) { return ; } var_3 = var_4 - ( type_4. method_3 ( ) ) ; } while ( var_2 > 0 ) ; throw new type_3 ( var_1. method_5 ( ) ) ; } } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { return new type_1 ( var_2 , var_3 , ( - ( ( ( var_2 ) * ( var_1 . method_2 ( ) ) ) + ( ( var_3 ) * ( var_1 . method_3 ( ) ) ) ) ) , var_1 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { this. var_1 = false ; try { this. var_2. method_2 ( ) ; var_3. method_3 ( ) ; } catch ( type_1 var_4 ) { type_2. info ( string_1, var_4 ) ; } if ( this. var_2. method_4 ( ) ) { this. var_2. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 pattern = type_1 . method_2 ( string_1 ) ; java.lang.string str = string_2 ; java.util.list < java.lang.string > var_1 = type_2 . method_3 ( string_3 ) ; type_3 var_2 = new type_3 ( pattern , var_1 ) ; type_4 . assertequals ( ( - 1 ) , var_2 . method_4 ( str , 0 ) ) ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string id = null ; java.lang.string var_1 = var_2. getid ( ) ; if ( ( var_1!= null ) && ( ( var_1. length ( ) ) > 0 ) ) { id = var_3. replace ( var_1, string_1 ) ; } else { id = method_2 ( ) ; var_2. method_3 ( id ) ; } id += string_2 ; return id ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( var_2 ) != null ) && ( ( var_3 ) == null ) ) var_2 . method_2 ( ) ; try { java.lang.thread . method_3 ( int_1 ) ; } catch ( type_2 var_4 ) { } var_2 = var_5 ; var_5 . start ( var_1 ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { final type_1 var_3 = new type_1 ( var_1, var_2 ) ; var_4 = var_5 ; var_6. method_2 ( var_3, new type_2 ( ) { public void method_3 ( type_3 var_7 ) { var_3. method_4 ( var_7 ) ; } } ) ; }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 ) { super . method_1 ( var_1 ) ; method_2 ( false ) ; java.lang.string var_3 = type_1 . method_3 ( var_4 . context ( ) , ( ( java.lang.exception ) ( var_1 ) ) ) ; if ( type_1 . method_4 ( var_4 . context ( ) , ( ( java.lang.exception ) ( var_1 ) ) ) ) { var_4 . method_6 ( ) ; } else { var_4 . method_7 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { assert var_1!= null ; type_2 var_2 = type_3. method_2 ( var_1. method_3 ( ) ) ; if ( ( this. var_3 ) == var_2 ) { this. var_3 = null ; } else if (! ( method_4 ( ). contains ( var_2 ) ) ) { this. var_4 = var_2 ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , type_2 var_2 , type_3 var_3 ) throws java.io.ioexception { java.util.map < java.lang.string , java.lang.object > var_4 = new java.util.hashmap < > ( ) ; var_4 . put ( string_1 , var_3 ) ; var_4 . put ( string_2 , var_2 ) ; final type_4 var_5 = var_6 . method_2 ( string_3 , var_1 , string_4 , string_5 ) ; return var_6 . method_3 ( var_5 , var_4 , var_7 , var_8 class ) ; }
[0]: protected void method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) { } else if ( var_1 instanceof java.lang.exception ) { var_2. method_2 ( var_3, ( ( java.lang.exception ) ( var_1 ) ) ) ; } else if ( var_1 instanceof byte [ ] ) { var_2. method_3 ( var_3, ( ( byte [ ] ) ( var_1 ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { while ( true ) { while ( ! ( method_2 ( ) ) ) { try { java.lang.thread . method_3 ( int_1 ) ; } catch ( type_1 var_1 ) { } if ( var_2 ) return ; } var_3 = false ; var_4 . method_4 ( ) ; var_3 = true ; type_2 . method_8 ( var_4 . method_9 ( ) , var_4 . method_10 ( ) ) ; type_2 . method_5 ( var_4 . method_6 ( ) . method_7 ( ) ) ; method_11 ( ) ; } }
[0]: public int method_1 ( int var_1 ) { var_2 ^= ( var_2 ) < < int_1 ; var_2 ^= ( var_2 ) > > > int_2 ; var_2 ^= ( var_2 ) < < int_3 ; return ( ( int ) ( ( java.lang.math.abs ( ( ( var_2 ) % var_1 ) ) ) + 1 ) ) ; }

************

************
tgt: private void method_1 ( ) { if ( ! ( var_1 . isempty ( ) ) ) { java.lang.string [ ] var_2 = var_1 . get ( 0 ) . split ( var_3 . gettext ( ) , ( - 1 ) ) ; var_4 . method_2 ( ) . method_3 ( ( b ) - > { b . method_4 ( string_1 ) ; type_1 . method_2 ( var_2 ) . method_3 ( ( f ) - > b . method_4 ( f ) ) ; } ) ; } }
[0]: public static void response ( java.lang.string name, java.lang.string var_1 ) { if ( var_2 ) type_1. method_1 ( string_1 ) ; type_1. method_1 ( ( ( ( string_2 + string_3 ) + name ) + string_4 ) ) ; type_1. method_1 ( ( string_5 + var_1 ) ) ; type_1. method_1 ( string_6 ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { java.lang.string var_1 = ( ( java.lang.string ) ( var_2 . method_2 ( ) ) ) ; var_3 . method_3 ( ) ; if ( var_1 . equals ( string_1 ) ) { } else { } java.lang.string var_4 = ( ( var_5 + string_2 ) + var_1 ) + string_3 ; var_6 . settext ( var_4 ) ; }
[0]: public boolean method_1 ( ) { if ( (! ( var_1. method_2 ( var_2 ) ) ) && (! ( method_3 ( ). method_4 ( ) ) ) ) { return false ; } int var_3 = ( this. method_5 ( ) )? main. method_6 ( ). method_7 ( ) : method_6 ( ). method_7 ( ) ; return ( var_3 - ( method_3 ( ). method_7 ( ) ) ) < int_1 ; }

************

************
tgt: private static java.lang.string method_1 ( java.io.inputstream var_1 ) { java.io.bufferedreader var_2 = new java.io.bufferedreader ( new type_1 ( var_1 ) ) ; java.lang.stringbuilder var_3 = new java.lang.stringbuilder ( ) ; java.lang.string line = null ; try { while ( ( line = var_2 . method_2 ( ) ) != null ) { var_3 . append ( ( line + string_1 ) ) ; } } catch ( java.io.ioexception var_4 ) { var_4 . method_3 ( ) ; } return var_3 . tostring ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( ). equals ( string_1 ) ) { type_2. method_3 ( method_4 ( ), string_2, var_2, var_3 ) ; } if ( var_1 instanceof type_3 ) { type_4 var_4 = ( ( type_3 ) ( var_1 ) ). method_5 ( ) ; type_5. method_6 ( method_4 ( ), var_4 ) ; } }

************

************
tgt: public static boolean method_1 ( int var_1 ) { java.lang.string var_2 = string_1 ; try ( type_1 var_3 = var_4 . method_2 ( var_2 ) ) { var_3 . method_3 ( 1 , var_1 ) ; var_3 . method_4 ( ) ; return true ; } catch ( type_2 var_5 ) { java.util.logging.logger.getlogger ( var_6 class . getname ( ) ) . method_5 ( var_7 , null , var_5 ) ; } return false ; }
[0]: public void method_1 ( java.lang.string name, int var_1 ) { if ( ( name. length ( ) ) > int_1 ) { name = name. substring ( 0, int_1 ) ; } for ( type_1 var_2 : var_3. values ( ) ) { type_2 obj = var_2. method_2 ( var_4 ) ; if ( var_1 == 0 ) { method_3 ( obj, name ). method_1 ( 1 ) ; } method_3 ( obj, name ). method_1 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( long var_1 ) throws java.io.ioexception { method_2 ( ) ; if ( var_1 > 0 ) { do { method_3 ( var_1 ) ; } while ( ( ( var_2 ) < var_1 ) && ( var_3 . method_4 ( ) ) ) ; } var_4 . method_5 ( string_1 , this . method_6 ( ) . tostring ( ) , var_2 ) ; var_5 . method_7 ( ) . method_8 ( var_2 ) ; }
[0]: public final java.lang.object method_1 ( java.lang.object... args ) { method_2 ( ). method_3 ( this, args ) ; try { java.lang.object result = method_4 ( args ) ; if ( type_1. method_5 ( ) ) { result = this. var_1. method_6 ( result ) ; } return result ; } catch ( java.lang.throwable t ) { throw type_2. method_7 ( var_1. method_8 ( t ) ) ; } }

************

************
tgt: private void method_1 ( int position ) { type_1 . method_2 ( var_2 , string_1 ) ; android.content.intent intent = new android.content.intent ( this , var_3 class ) ; intent . method_3 ( var_4 ) ; intent . method_4 ( string_2 , position ) ; method_5 ( intent ) ; }
[0]: public void method_1 ( ) { try { java.lang.string string = new type_1 ( ). execute ( getcontext ( ) ). get ( ) ; assertnotnull ( string ) ; asserttrue ( ( ( string. length ( ) ) > 0 ) ) ; } catch ( type_2 var_1 ) { var_1. method_2 ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; assertequals ( 0 , var_2 ) ; java.lang.string var_3 = var_1 . method_2 ( 1 , int_1 ) ; assertequals ( 1 , var_2 ) ; assertequals ( string_1 , var_3 ) ; java.lang.string var_4 = var_1 . method_2 ( int_1 , int_2 ) ; assertequals ( int_1 , var_2 ) ; assertequals ( string_2 , var_4 ) ; var_1 . method_2 ( 1 , int_1 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 < type_3 < java.lang.string, java.lang.integer > > out ) throws java.lang.exception { if ( ( var_1. method_2 ( ) ) > 0 ) { out. method_3 ( new type_3 ( var_1. method_4 ( ). get ( 0 ). method_5 ( ), 1 ) ) ; } }

************

************
tgt: private type_1 < java.util.list < java.lang.string > > method_1 ( type_2 var_1 ) { return var_2 . method_2 ( var_3 , var_4 , var_1 . getid ( ) ) . method_3 ( new type_3 < type_4 , java.lang.string > ( ) { public java.lang.string method_4 ( type_4 var_5 ) { return type_5 . method_5 ( var_5 ) . method_6 ( ) ; } } ) . first ( ) ; }
[0]: public int method_1 ( ) { int var_1 = 0 ; if ( ( var_2 ) == char_1 ) var_1 = ( var_3 ) * ( var_4 ) ; else if ( ( var_2 ) == char_2 ) var_1 = ( var_5 ) * ( var_4 ) ; else var_1 = ( var_6 ) * ( var_4 ) ; return var_1 ; }

************

************
tgt: public type_1 < type_2 > method_1 ( ) { type_3 < type_2 > var_1 = var_2 ; int var_3 = 0 ; do { type_3 < type_2 > var_4 = method_2 ( var_1 , var_5 ) ; type_3 < type_2 > var_6 = method_3 ( var_4 , var_7 ) ; this . method_4 ( var_6 ) ; var_1 = var_6 ; var_3 ++ ; } while ( ! ( method_5 ( var_1 , var_5 ) ) ) ; return new type_1 ( var_1 , var_3 ) ; }
[0]: public static void method_1 ( android.content.context context, java.lang.string key, java.lang.string value, boolean commit ) { type_1. method_2 ( context ) ; var_1. method_1 ( key, value ) ; if ( commit ) { var_1. commit ( ) ; var_1 = null ; } if ( ( var_2 )!= null ) { var_3. put ( key, value ) ; } }

************

************
tgt: protected void method_1 ( ) { type_1 var_1 = type_2 . get ( ) ; if ( ( var_1 == null ) || ( ! ( var_1 . method_2 ( ) ) ) ) { var_3 . method_5 ( false ) ; } else if ( ! ( type_3 . method_3 ( var_1 . method_4 ( ) ) ) ) { var_2 . setvalue ( var_1 . method_4 ( ) ) ; var_3 . method_5 ( true ) ; var_3 . method_6 ( method_7 ( var_1 . method_4 ( ) ) ) ; } }
[0]: public void method_1 ( final byte [ ] data ) { int var_1 = data. length ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_2. method_4 ( type_1. method_5 ( data ), ( ( var_3 ) + ( position ) ), var_1 ) ; position += var_1 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception , type_1 , type_2 { type_3 var_2 = new type_3 ( this , var_1 , this . var_3 ) ; var_4 . put ( var_2 . method_2 ( ) , var_2 ) ; if ( ( ( var_4 . size ( ) ) == 1 ) && ( ( var_5 ) != null ) ) var_2 . method_3 ( var_5 ) ; }
[0]: private void method_1 ( final type_1 var_1, final java.lang.object var_2, final type_2 buffer ) { final java.lang.string classname = method_2 ( var_1 ) ; final java.lang.object [ ] var_3 = method_3 ( var_1 ) ; java.lang.string var_5 = method_5 ( classname, var_2 ) ; if ( var_5 == null ) { var_5 = string_1 ; } buffer. method_6 ( type_3. method_7 ( var_5 ) ) ; }

************

************
tgt: private java.util.arraylist < java.lang.string > method_1 ( int var_1 ) throws java.io.ioexception { java.util.arraylist < java.lang.string > var_2 = new java.util.arraylist < java.lang.string > ( ) ; while ( var_1 != 0 ) { byte [ ] var_3 = new byte [ int_1 ] ; type_1 var_4 = new type_1 ( var_3 , var_3 . length ) ; var_5 . method_2 ( var_4 ) ; var_2 . add ( new java.lang.string ( var_4 . getdata ( ) ) ) ; var_1 -- ; } return var_2 ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, 1, int_1, int_2 ) ; type_1. method_2 ( var_2, 1, int_2, int_3 ) ; var_1. add ( int_3 ) ; var_1. remove ( int_1 ) ; type_2. asserttrue ( var_2. equals ( var_1 ) ) ; type_2. assertequals ( var_2, var_1. method_3 ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 result ) { type_2 . method_2 ( var_1 , ( string_1 + ( result . method_3 ( ) ) ) ) ; if ( result . method_3 ( ) ) { type_3 var_2 = result . method_4 ( ) ; type_2 . method_2 ( var_1 , var_2 . method_5 ( ) ) ; method_6 ( true ) ; } else { method_6 ( false ) ; } }
[0]: public void method_1 ( ) { this. state = string_1 ; method_2 ( string_2 ) ; method_3 ( ) ; var_1 : try { java.lang.system.out.println ( ( string_3 + ( this. state ) ) ) ; var_2. method_4 ( string_1, this. var_3 ) ; } catch ( java.lang.exception var_4 ) { method_2 ( string_4 ) ; method_5 ( ) ; break var_1 ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , type_2 var_2 , type_3 var_3 , type_4 ... var_4 ) { if ( ( var_4 . length ) == 0 ) { return null ; } return get ( var_5 class , new type_5 ( var_1 ) , new type_6 ( var_2 ) , new type_7 ( var_4 ) , new type_8 ( var_3 ) , new type_9 ( ) ) ; }
[0]: public void method_1 ( java.lang.charsequence var_1, int i, int var_2, int var_3 ) { if ( (! ( var_4. gettext ( ). tostring ( ). isempty ( ) ) ) || (! ( var_5. gettext ( ). tostring ( ). isempty ( ) ) ) ) { var_6. method_2 ( ) ; var_7. settext ( null ) ; var_7. method_3 ( var_8 ) ; } }

************

************
tgt: synchronized void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ( var_2 ) == null ) ) { return ; } var_1 = var_3 . method_2 ( var_4 ) ; var_5 = method_3 ( 0 , int_1 ) ; if ( ( var_6 ) != null ) { var_6 . method_5 ( var_7 ) ; } var_2 . method_4 ( var_5 ) ; }
[0]: public void method_1 ( ) throws java.io.ioexception { type_1 var_1 = var_2. delete ( var_3 ) ; method_2 ( var_1 ) ; type_2. assertequals ( ( ( java.lang.integer ) ( var_3 ) ), var_1. method_3 ( ) ) ; type_1 var_4 = var_2. get ( var_3 ) ; type_2. method_4 ( var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_3 ) ) { var_2 = false ; java.lang.system.out.println ( string_1 ) ; var_4 = new type_2 ( var_5 , var_6 , var_7 , var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; var_8 . method_5 ( var_4 , var_5 . method_6 ( ) ) ; } }
[0]: public void method_1 ( type_1 < java.util.arraylist < type_2 > > var_1, type_3 < java.util.arraylist < type_2 > > response ) { var_2. method_2 ( response. method_3 ( ) ) ; var_3 = var_2. method_4 ( ) ; var_4. method_5 ( var_3 ) ; var_5. method_6 ( var_6 ) ; }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( type_1 var_1 , java.lang.string [ ] args ) { return ( args.length ) == 1 ? method_2 ( args , type_3 . method_3 ( ) . method_4 ( ) . method_5 ( new java.lang.string [ 0 ] ) ) : null ; }
[0]: private void method_1 ( ) { int var_1 = 0 ; for ( type_1 var_2 : var_3 ) { var_1 += var_2. method_2 ( ) ; } for ( type_2 var_4 : var_5 ) { var_1 += var_4. method_2 ( ) ; } for ( type_3 var_6 : var_7 ) { var_1 = var_6. method_2 ( ) ; } this. length = var_1 + ( var_8 ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; int var_1 = method_2 ( ) ; if ( var_1 < ( var_2 ) ) { for ( int i = var_1 ; i < ( var_2 ) ; ++ i ) { method_3 ( ) ; } for ( int i = 0 ; i < ( method_2 ( ) ) ; ++ i ) { method_4 ( i ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { long var_2 = var_1. method_2 ( ) ; type_2 < java.lang.long, java.util.linkedlist < type_1 > > var_3 = method_3 ( var_1. method_4 ( ) ) ; if ( var_3. method_5 ( var_2 ) ) { java.util.linkedlist < type_1 > var_4 = var_3. get ( var_2 ) ; var_4. add ( var_1 ) ; } else { java.util.linkedlist < type_1 > var_4 = new java.util.linkedlist < type_1 > ( ) ; var_4. add ( var_1 ) ; var_3. put ( var_2, var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; int [ ] values = var_1 . method_2 ( var_2 ) ; for ( int value : values ) var_3 . add ( value ) ; var_4 = var_1 . method_3 ( var_5 ) ; }
[0]: protected boolean method_1 ( int var_1, int var_2 ) { return ( ( ( var_1 >= ( var_3 ) ) && ( var_1 <= ( ( var_3 ) + ( var_4 ) ) ) ) && ( var_2 >= ( var_5 ) ) ) && ( var_2 <= ( ( var_5 ) + ( height ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( var_1 ) { type_1 errors = new type_1 ( ) ; var_2 . method_2 ( new type_2 ( errors ) ) ; var_3 . method_3 ( ( ( errors . tostring ( ) ) + string_1 ) ) ; var_3 . method_4 ( null ) ; var_3 . method_5 ( true ) ; java.lang.thread t = new java.lang.thread ( ) { public void method_1 ( ) { var_3 . method_6 ( true ) ; } } ; t . start ( ) ; } }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 var_3, type_2 operation ) { type_3 var_4 = new type_3 ( ) ; var_4. method_2 ( string_1 ) ; type_4 var_5 = new type_4 ( var_1, var_2, var_3 ) ; var_4. method_3 ( (! ( var_6. isempty ( ) ) ) ) ; var_4. method_4 ( var_5 ) ; operation. method_5 ( var_4 ) ; }

************

************
tgt: public type_1 build ( ) { method_1 ( ) ; super . var_3 = ( text . length ( ) ) + int_1 ; super . height = 1 ; final type_1 var_1 = new type_1 ( this ) ; var_2 . method_2 ( var_1 ) ; return var_1 ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == 0 ) { var_1 = var_2. size ( ) ; } if ( ( var_1 ) > 0 ) { ( var_1 ) -- ; } java.lang.string text = var_2. get ( var_1 ) ; var_3. settext ( text ) ; var_3. method_2 ( text. length ( ) ) ; var_3. method_2 ( text. length ( ) ) ; }

************

************
tgt: private static boolean method_1 ( java.lang.string var_1 ) { java.lang.string var_2 = var_3 . getstring ( var_4 , var_5 ) ; if ( var_2 . equals ( var_6 ) ) { return true ; } else if ( var_2 . equals ( var_5 ) ) { return var_3 . getboolean ( var_1 , false ) ; } else { return ! ( var_3 . getboolean ( type_1 . method_2 ( var_1 ) , false ) ) ; } }
[0]: private void method_1 ( ) throws type_1 { java.util.collection < type_2 > var_1 = ( method_2 ( ) )? method_3 ( ). method_4 ( ) : method_3 ( ). method_5 ( ) ; for ( type_3 var_2 : var_3 ) { type_4 var_4 = new type_5 ( var_2. method_6 ( ) ) ; for ( type_2 var_5 : var_1 ) { if ( var_4. method_7 ( var_5 ) ) { method_8 ( var_2, var_5 ) ; } } } } }

************

************
tgt: private boolean method_1 ( ) { type_1 . method_2 ( var_1 ) ; if ( var_2 . method_3 ( ) ) { return true ; } try { int var_3 = java.lang.integer.parseint ( var_2 . gettext ( ) ) ; if ( var_3 < 0 ) { type_1 . method_4 ( var_1 , string_1 ) ; return false ; } } catch ( type_2 var_4 ) { type_1 . method_4 ( var_1 , string_2 ) ; return false ; } return true ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = var_3. method_2 ( ) ; type_4 a = var_4. method_3 ( var_2. method_4 ( ) ) ; java.lang.long var_5 = type_5. method_5 ( var_1 ) ; if ( var_5!= null ) { var_4. method_6 ( var_5, a. getid ( ) ) ; } type_5. method_7 ( var_1, a. getid ( ) ) ; method_8 ( a. getid ( ) ) ; return new type_1 ( var_6, string_1, string_2 ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_2 var_1 = new type_2 ( var_2 ) ; if ( method_2 ( string_1 ) ) { type_3 var_3 = method_3 ( ) ; var_1 . method_4 ( var_3 ) ; } if ( method_2 ( string_2 ) ) { var_1 . method_5 ( method_6 ( ) ) ; } return var_1 ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = null ; type_3 var_3 = null ; java.lang.string var_4 = string_1 + string_2 ; try { var_3 = method_2 ( ) ; } catch ( type_4 var_5 ) { return new java.lang.string ( var_5. method_3 ( ) ) ; } catch ( type_5 var_5 ) { return new java.lang.string ( var_5. method_3 ( ) ) ; } return string_3 ; }

************

************
tgt: java.lang.string method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 ) { java.lang.string msg ; if ( method_2 ( var_1 , var_2 , var_3 , var_4 ) ) { msg = ( ( ( ( string_1 + ( var_1 . getname ( ) ) ) + string_2 ) + var_3 ) + string_3 ) + var_4 ; } else { msg = ( ( ( ( string_4 + ( var_1 . getname ( ) ) ) + string_2 ) + var_3 ) + string_3 ) + var_4 ; } return msg ; }
[0]: private void method_1 ( ) { int id = method_2 ( ) ; type_1 var_1 = var_2. method_3 ( id ) ; if ( var_1 == null ) { var_2. method_4 ( new type_1 ( method_2 ( ), method_5 ( ), method_6 ( ), method_7 ( ), method_8 ( ), method_9 ( ) ) ) ; } else { var_3. method_10 ( string_1, id ) ; java.lang.system.out.println ( var_1 ) ; } }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 ) throws type_2 { type_3 . method_2 ( var_1 . method_3 ( var_2 ) ) ; if ( ( ! ( var_1 . method_4 ( var_3 , var_4 ) ) ) || ( ( var_1 . gettext ( ) ) == ( - 1 ) ) ) { var_5 . method_5 ( string_1 ) ; return null ; } return var_1 . tostring ( var_1 . gettext ( ) ) . trim ( ) ; }
[0]: public void method_1 ( final type_1 var_1, type_2 var_2 ) { this. var_1 = var_1 ; this. var_2 = var_2 ; java.util.list < type_3 > var_3 = method_2 ( ) ; int i = 0 ; for ( type_3 var_4 : var_3 ) { method_1 ( i, var_4, false ) ; i ++ ; } if ( method_3 ( ) ) var_1. method_4 ( ) ; }

************

************
tgt: public void method_1 ( final android.view.view var_1 ) { if ( var_2 . method_2 ( ) ) { var_2 . method_3 ( ) ; var_2 . method_4 ( ) ; ( ( type_1 ) ( var_1 ) ) . method_5 ( var_3 ) ; } else { var_2 . start ( ) ; ( ( type_1 ) ( var_1 ) ) . method_5 ( var_8 ) ; } }
[0]: private void method_1 ( boolean add ) { float var_1 = value ; if ( add ) { value = type_1. min ( var_2, ( ( value ) + ( step ) ) ) ; } else { value = type_1. method_2 ( var_3, ( ( value ) - ( step ) ) ) ; } if ( ( var_4 )!= null ) { var_4. method_3 ( this, value, var_1, var_3, var_2, false ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = type_1 . method_1 ( ) ; java.lang.system.out.println ( var_1 ) ; type_1 var_2 = type_1 . method_1 ( ) ; java.lang.system.out.println ( var_2 ) ; java.lang.system.out.println ( ( var_1 == var_2 ) ) ; try { type_2 var_3 = type_2 . method_2 ( ) ; var_3 . method_3 ( string_1 ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_4 ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; int var_2 ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2 = ( var_1. method_2 ( var_4. size ( ) ) ) + 1 ; var_3. add ( var_4. get ( var_2 ) ) ; } return var_3 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . add ( var_2 ) ; var_1 . add ( var_3 ) ; var_1 . add ( var_4 ) ; var_1 . add ( var_5 ) ; var_1 . add ( new type_2 ( ) ) ; var_1 . add ( var_6 ) ; var_1 . add ( var_7 ) ; }
[0]: public void method_1 ( type_1 event ) { if ( ( var_1. gettype ( ) ) == ( var_2 ) ) { float var_3 = event. values [ 0 ] ; float var_4 = var_3 * ( - float_1 ) ; var_5. method_2 ( ( ( int ) ( var_4 ) ) ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string value ) { char var_1 = value . touppercase ( ) . method_2 ( 0 ) ; switch ( var_1 ) { case char_2 : this . method_4 ( ) ; break ; case char_3 : this . method_5 ( ) ; break ; case char_4 : return true ; default : this . var_2 . method_6 ( string_1 ) ; break ; } return false ; }
[0]: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( method_2 ( ) ) == ( var_1. method_2 ( ) ) ) && ( ( method_3 ( ). method_4 ( ) ) == ( var_1. method_3 ( ) ) ) ) && ( ( getvalue ( ) ) == ( var_1. method_5 ( ) ) ) ) && ( ( getvalue ( ) ) == ( var_1. method_5 ( ) ) ) ; }

************

************
tgt: private void method_1 ( ) { method_2 ( var_1 ) . method_3 ( var_2 ) ; if ( ( this . var_3 . size ( ) ) > 0 ) { method_2 ( var_5 ) . method_3 ( var_2 ) ; method_2 ( var_4 ) . method_3 ( var_2 ) ; } else { method_2 ( var_5 ) . method_3 ( var_6 ) ; ( ( type_1 ) ( method_2 ( var_4 ) ) ) . settext ( method_4 ( ) . getstring ( var_7 ) ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_1 ( var_1 ) ; if ( var_2!= null ) { var_4. method_2 ( string_1, var_2 ) ; var_5. method_2 ( string_2, var_2 ) ; return true ; } else { return false ; } }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; var_1 . add ( var_2 ) ; var_1 . add ( var_3 ) ; var_1 . add ( var_4 ) ; java.util.arraylist < type_1 > var_5 = var_6 . method_2 ( string_1 ) ; }
[0]: public void method_1 ( ) { if (! ( var_1 ) ) return ; type_1 var_2 = ( ( type_1 ) ( type_2. method_2 ( var_3 ) ) ) ; while ( ( var_2!= null ) && ( ( var_2. gettext ( ). method_3 ( 0 ) ) == char_1 ) ) { method_4 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 , type_2 response ) throws java.io.ioexception , type_3 { type_4 out = response . method_2 ( ) ; response . method_3 ( var_2 ) ; java.util.list < type_5 > var_3 = type_6 . method_4 ( ) ; if ( var_3 . isempty ( ) ) { var_1 . method_5 ( string_2 , var_4 ) ; } else { var_1 . method_5 ( string_2 , var_5 ) ; var_1 . method_5 ( string_3 , var_3 ) ; } method_6 ( ) . method_7 ( string_4 ) . method_8 ( var_1 , response ) ; }
[0]: public void method_1 ( boolean var_1 ) { var_2. method_2 ( var_3 ) ; var_4 = new type_1 ( this ) ; var_2. method_3 ( var_4 ) ; var_5 = new type_2 ( var_6, var_1, var_7, this ) ; var_2. method_4 ( var_5 ) ; }

************

************
tgt: void method_1 ( type_1 writer ) throws java.lang.exception { try ( type_4 c = var_1 . method_2 ( ) ) { final type_3 var_2 = new type_3 ( c ) ; var_2 . method_3 ( ( ( ( ( string_1 + ( ( string_2 + string_3 ) + string_4 ) ) + ( source . key ) ) + string_5 ) + string_6 ) , writer ) ; type_5 . info ( string_7 , source . name , writer . method_4 ( ) ) ; } }
[0]: public type_1 method_1 ( ) { for ( type_1 var_1 : this. method_2 ( ) ) { if ( var_1. method_3 ( ) ) { return var_1 ; } } return ( this. method_2 ( ) )!= null? this. method_2 ( ). get ( 0 ) : null ; }

************

************
tgt: private void method_1 ( ) { if ( ! ( method_6 ( ) ) ) { type_1 . i ( var_2 , string_1 ) ; type_2 . method_7 ( this , string_1 , var_3 ) . show ( ) ; } else { new type_3 ( var_1 ) . execute ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) throws type_1 { java.lang.string var_2 = var_3. method_2 ( ) ; java.lang.string [ ] var_4 = var_1. split ( string_1 ) ; for ( java.lang.string var_5 : var_4 ) { if ( ( var_5. length ( ) ) > 0 ) { try { var_3. method_3 ( var_5 ) ; } catch ( type_1 var_6 ) { var_3. method_4 ( var_5 ) ; var_3. method_3 ( var_5 ) ; } } } var_3. method_3 ( var_2 ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; type_1 var_2 = var_3 . method_3 ( var_4 . method_4 ( ) ) ; if ( var_2 != null ) { java.lang.system.out.println ( ( ( string_1 + ( var_2 . method_5 ( ) ) ) + string_2 ) ) ; } method_6 ( ) ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.string.format ( string_1, this. var_2. method_2 ( ), this. var_3. method_2 ( ), this. var_4. method_2 ( ), this. var_5. method_2 ( ) ) ; java.lang.system.out.println ( var_1 ) ; return var_1 ; }

************

************
tgt: private type_1 < type_2 , type_3 > . var_1 method_1 ( type_1 < type_2 , type_3 > . var_1 var_2 ) { type_1 < type_2 , type_3 > . var_1 var_3 = var_4 ; if ( ( var_5 ) == null ) { var_4 = null ; return var_3 ; } else { return method_1 ( var_3 ) ; } }
[0]: private int method_1 ( type_1 node, int var_1, int var_2 ) { return ( ( ( ( var_3 ) + ( var_4 ) ) + ( ( ( var_5 ) * ( node. method_2 ( ) ) ) * ( var_6 ) ) ) + ( ( var_1 - 1 ) * ( var_6 ) ) ) + var_2 ; }

************

************
tgt: public void method_1 ( java.util.list < float [ ] > data ) { this . var_1 = null ; this . data = new type_1 [ data . size ( ) ] ; for ( int i = 0 ; i < ( data . size ( ) ) ; i ++ ) { this . data [ i ] = new type_1 ( data . get ( i ) , 1 , 0.0f ) ; } }
[0]: private static java.lang.string method_1 ( java.io.bufferedreader var_1 ) { java.lang.string line = null ; try { while ( ( line = var_1. method_2 ( ) )!= null ) { if ( ( line. length ( ) ) > 0 ) { return line + string_1 ; } } } catch ( java.io.ioexception var_2 ) { return null ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.util.map data ) { type_2 var_2 = method_2 ( var_3 ) ; var_2 . method_3 ( var_4 , new type_3 ( var_1 ) { public void method_4 ( ) { var_1 . method_5 ( ) ; } public void fail ( type_4 var_5 ) { var_1 . fail ( var_5 ) ; } } ) ; }
[0]: private type_1 method_1 ( ) { synchronized ( var_1 ) { while ( ( var_1. isempty ( ) ) && ( var_2 ) ) { try { var_1. method_2 ( ) ; } catch ( type_2 var_3 ) { } } if (! ( var_2 ) ) { return null ; } return var_1. method_3 ( ) ; } } }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { android.view.view var_4 = var_1 . method_2 ( var_5 , null ) ; var_6 = type_4 . method_3 ( ) ; var_6 . method_4 ( this ) ; var_7 = new type_5 ( getactivity ( ) . method_5 ( ) , var_8 , var_6 . method_6 ( ) , var_6 ) ; type_6 var_9 = ( ( type_6 ) ( var_4 . method_7 ( var_10 ) ) ) ; var_9 . method_8 ( var_7 ) ; return var_4 ; }
[0]: public void method_1 ( android.view.view view ) { method_2 ( ) ; if (! ( type_1. method_3 ( method_4 ( ) ) ) ) { type_2. method_5 ( method_4 ( ), string_1, var_1 ). show ( ) ; method_6 ( ) ; return ; } }

************

************
tgt: public final synchronized type_1 method_1 ( final int var_1 , final long offset , final long length , final int var_2 , final type_2 var_3 , final long var_4 ) throws type_3 { return this . method_2 ( 0 , var_1 , true , true , offset , length , var_2 , var_3 , var_4 ) ; }
[0]: public static boolean method_1 ( type_1 var_1, type_2 type, int x, int y, int var_2 ) { for ( type_3 var_3 : type_4. method_2 ( type, var_1, x, y, var_2 ) ) { if ( var_3 == null ) return false ; for ( type_5 var_4 : var_3. method_3 ( ) ) if ( var_4. method_4 ( type ) ) return false ; } return true ; }

************

************
tgt: public type_1 method_1 ( java.lang.string label , type_2 var_1 ) throws java.lang.exception { java.util.hashmap < java.lang.string , java.lang.object > var_2 = new java.util.hashmap < java.lang.string , java.lang.object > ( ) ; for ( type_3 var_3 : var_1 ) { var_2 . put ( var_3 . method_2 ( ) , var_3 . getvalue ( ) ) ; } java.lang.long var_4 = var_5 . method_1 ( var_2 , type_4 . label ( label ) ) ; return new type_1 ( new type_5 ( java.lang.string . method_3 ( var_4 ) ) , label , this ) ; }
[0]: private void method_1 ( int var_1 ) { int var_2 = method_2 ( var_1 ) ; if ( ( var_2 < 0 ) && ( var_2 > ( - ( var_3 ) ) ) ) { var_4. method_3 ( ) ; var_5 = var_6 ; } else if ( ( var_2 > 0 ) && ( ( var_5 )!= ( var_7 ) ) ) { var_4. method_4 ( ) ; var_5 = var_7 ; } }

************

************
tgt: private java.util.arraylist < java.net.url > method_1 ( type_1 var_1 ) { java.util.arraylist < java.net.url > var_2 = new java.util.arraylist < > ( ) ; for ( type_2 a : var_1 ) { java.net.url var_3 = type_3 . method_2 ( a . method_3 ( string_1 ) ) ; if ( var_3 != null ) { var_2 . add ( var_3 ) ; } } return var_2 ; }
[0]: public java.lang.boolean method_1 ( type_1 field ) { if ( ( field. method_2 ( ) ) == null ) { int y = field. method_3 ( ) ; int x = field. method_4 ( ) ; type_2 var_1 = new type_2 ( x, y, int_1, int_1 ) ; var_1. method_1 ( ) ; field. method_5 ( this ) ; return true ; } return false ; }

************

************
tgt: public final void method_1 ( ) { var_1 . method_2 ( ) ; for ( type_1 var_2 : var_3 ) { var_2 . method_3 ( ) ; } for ( type_1 var_2 : var_3 ) { if ( var_1 . method_4 ( ) ) { var_2 . method_6 ( ) ; } else { var_2 . method_7 ( ) ; } } }
[0]: private int method_1 ( java.lang.string var_1 ) { if ( var_2. method_2 ( var_1 ) ) { return var_2. get ( var_1 ) ; } else { int var_3 = var_2. size ( ) ; var_2. put ( var_1, var_3 ) ; return var_3 ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_2 var_2 = var_3 . method_2 ( string_1 ) ; var_2 . method_3 ( string_2 , var_1 ) ; java.util.list < type_1 > var_4 = var_2 . method_4 ( ) ; type_1 var_5 = ( ! ( var_4 . isempty ( ) ) ) ? var_4 . get ( 0 ) : null ; return var_5 ; }
[0]: private void method_1 ( ) { int var_1 = 0 ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { var_1 = type_1. method_2 ( i ) ; type_2 temp = var_3 [ i ] ; var_3 [ i ] = var_3 [ var_1 ] ; var_3 [ var_1 ] = temp ; } }

************

************
tgt: private void method_1 ( ) { if ( var_1 . method_2 ( var_2 ) ) { var_3 . method_3 ( ) ; } if ( var_1 . method_2 ( var_4 ) ) { var_3 . method_4 ( ) ; } else if ( var_1 . method_2 ( var_6 ) ) { var_3 . method_5 ( ) ; } }
[0]: public void method_1 ( ) { if (! ( var_1. isempty ( ) ) ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( var_1 ) ; final java.util.iterator < type_1 > var_3 = var_2. iterator ( ) ; while ( var_3. method_2 ( ) ) { if ( var_3. method_3 ( ). update ( ) ) { var_3. remove ( ) ; } } var_1 = var_2 ; this. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = 0 ; var_2 = 0l ; var_3 = 0l ; var_4 = 0l ; var_5 = null ; type_1 . method_2 ( buffer , ( ( byte ) ( 0 ) ) ) ; if ( ( key ) != null ) { type_2 . method_3 ( key , 0 , buffer , 0 , key . length ) ; var_1 = var_6 ; } init ( ) ; }
[0]: public boolean equals ( type_1 var_1 ) { if ( var_1 == ( this ) ) return true ; if ( ( var_1 == null ) || ( ( ( var_2 ) == null ) || ( ( var_1. method_1 ( ) ) == null ) ) ) return false ; if ( ( ( var_2 )!= null ) && (! ( var_2. method_2 ( var_1. method_1 ( ) ) ) ) ) return false ; return var_3. method_2 ( var_1. getname ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string state ) { if ( state . equals ( var_2 ) ) { method_1 ( var_3 , var_1 , state ) ; } else if ( state . equals ( var_4 ) ) { method_1 ( var_5 , var_1 , state ) ; } else if ( state . equals ( var_6 ) ) { method_1 ( var_5 , var_1 , state ) ; method_1 ( var_3 , var_1 , state ) ; method_1 ( var_7 , var_1 , state ) ; } }
[0]: public void method_1 ( ) { if ( var_1 ) var_2. info ( ( string_1 + ( var_3 ) ) ) ; java.lang.string var_4 ; if ( ( var_3 )!= null ) return ; else { var_4 = ( string_2 + ( var_3 ) ) + string_3 ; method_2 ( var_5, string_4, string_5, var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { if ( var_2 < ( var_3 . size ( ) ) ) { var_3 . get ( var_2 ) . method_1 ( var_1 ) ; } else { type_3 . method_3 ( var_4 , ( ( string_1 + var_2 ) + string_2 ) ) ; } }
[0]: public void method_1 ( int number ) { var_1 [ number ] = null ; ( var_2 ) -- ; method_2 ( new type_1 ( var_3, number, ( ( var_4 [ ( number + 1 ) ] ) + string_1 ), var_4 [ ( number + 1 ) ] ) ) ; method_3 ( number ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = var_2 . method_2 ( var_3 . method_3 ( string_1 ) ) ; var_4 = var_2 . method_2 ( var_3 . method_3 ( string_2 ) ) ; var_5 = var_2 . method_2 ( var_3 . method_3 ( string_3 ) ) ; var_1 . method_5 ( float_1 ) ; var_1 . method_6 ( new type_1 ( ) { public void method_7 ( type_2 var_6 ) { var_1 . method_4 ( ) ; var_5 . method_4 ( ) ; } } ) ; }
[0]: public void method_1 ( java.lang.string path, java.lang.string filepath ) { java.io.file source = new java.io.file ( filepath ) ; java.io.file var_1 = new java.io.file ( path. trim ( ) ) ; try { type_1. method_2 ( source, var_1 ) ; var_2. info ( ( ( ( string_1 + source ) + string_2 ) + var_1 ) ) ; } catch ( java.io.ioexception var_3 ) { var_2. error ( string_3, var_3 ) ; } }

************

************
tgt: public static type_1 method_1 ( final java.lang.string var_1 , final java.lang.string var_2 , final long var_3 ) { boolean var_4 = true ; return new type_1 ( var_5 , var_4 ) { protected void method_2 ( type_2 output ) throws java.io.ioexception { output . method_3 ( var_1 ) ; output . method_3 ( var_2 ) ; output . method_4 ( var_3 ) ; } } ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { if ( position == 0 ) { android.content.intent intent = new android.content.intent ( var_2, var_3 ) ; intent. method_2 ( string_1 ) ; method_3 ( android.content.intent. method_4 ( intent, string_2 ), 1 ) ; } else if ( position == int_1 ) { method_5 ( int_2 ) ; } else { method_5 ( position ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( getintent ( ) . method_3 ( ) ) ; method_4 ( ) . method_5 ( ) . replace ( var_2 , var_1 ) . commit ( ) ; method_6 ( ) . method_7 ( string_1 ) ; }
[0]: public void method_1 ( type_1 [ ] [ ] var_1 ) { for ( int x = 0 ; x < ( var_1. length ) ; x ++ ) { for ( int y = 0 ; y < ( var_1 [ x ]. length ) ; y ++ ) { if ( ( var_1 [ x ] [ y ] ) == null ) { java.lang.system.out.print ( string_1 ) ; } else { java.lang.system.out.print ( string_2 ) ; } } java.lang.system.out.println ( ) ; } } }

************

************
tgt: < type_1 , type_2 > type_3 < type_1 , type_2 > method_1 ( final java.lang.string var_1 , final type_4 < type_1 , type_2 > var_2 , final java.lang.class < type_1 > var_3 , final java.lang.class < type_2 > var_4 ) { final type_3 < type_1 , type_2 > var_6 = super . method_1 ( var_1 , var_2 , var_3 , var_4 ) ; return type_7 . method_2 ( var_6 ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string filename ) throws type_1, type_2 { method_2 ( filename ) ; type_3. method_3 ( var_1 ) ; type_4 var_2 = type_5. method_4 ( var_1 ) ; java.lang.string var_3 = type_6. method_5 ( var_4, null, var_2. method_6 ( ) ). getvalue ( ) ; type_7. delete ( filename ) ; type_7. method_7 ( var_1, var_3, filename ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( string_1 ) ; java.util.date var_3 ; var_2 . method_2 ( false ) ; if ( type_2 . method_3 ( var_1 ) ) { return true ; } try { var_3 = var_2 . method_5 ( var_1 ) ; return true ; } catch ( type_3 var_4 ) { return false ; } }
[0]: java.util.arraylist method_1 ( java.util.arraylist list, int i, int j ) { java.util.arraylist var_1 = new java.util.arraylist < > ( ) ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { var_1. add ( list. get ( k ) ) ; } return var_1 ; }

************

************
tgt: void update ( ) { var_1 . method_1 ( var_2 . method_2 ( ) . x , var_2 . method_2 ( ) . y , var_3 ) ; var_4 . method_1 ( var_2 . method_5 ( ) . x , var_2 . method_5 ( ) . y , var_5 ) ; }
[0]: public void method_1 ( type_1 var_1, int id ) { java.lang.string name = var_2. gettext ( ). tostring ( ) ; name = name. replace ( string_1, string_2 ) ; if (! ( type_2. method_2 ( name ) ) ) { type_3 f = new type_3 ( ) ; f. method_3 ( name ) ; f. method_4 ( ) ; type_2. method_5 ( this, string_3 ) ; } else { type_2. method_5 ( this, string_4 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 node ) { if ( ( ( this . var_1 . x ) == ( node . x ) ) && ( ( this . var_1 . y ) == ( node . y ) ) ) return true ; else return false ; }
[0]: private void method_1 ( type_1 p ) { int var_1 = ( ( java.lang.integer ) ( p. method_2 ( ) ) ) ; int id = java.lang.integer.parseint ( p. method_3 ( ) ) ; for ( type_2 a : var_2 ) { if ( ( a. method_4 ( ) ) == id ) { a. method_5 ( var_1 ) ; method_6 ( a ) ; } } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { int var_3 = var_1 . method_2 ( var_4 ) ; int var_5 = var_2 . method_2 ( var_4 ) ; if ( var_3 < var_5 ) { return 1 ; } if ( var_3 > var_5 ) { return - 1 ; } return 0 ; }
[0]: public void method_1 ( type_1 msg ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; } if (! ( type_2. method_3 ( var_2, true ) ) ) { return ; } if ( type_2. method_4 ( var_2, true ) ) { type_3. show ( string_1 ) ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; type_1 . method_5 ( var_4 , this , var_2 ) ; if ( type_1 . method_2 ( ) ) { type_2 . method_3 ( var_1 , string_1 ) ; var_2 . method_4 ( var_3 ) ; } else { type_2 . method_3 ( var_1 , string_2 ) ; type_1 . method_5 ( var_4 , this , var_2 ) ; } }
[0]: public void update ( type_1 var_1 ) { final type_2 var_2 = ( var_1 == null )? null : var_3. method_1 ( var_4 ) ; var_5. settext ( ( string_1 + ( var_2 == null? var_1 == null? string_2 : var_4 : var_2. name ) ) ) ; var_6. settext ( ( string_3 + ( var_1. title ) ) ) ; method_2 ( var_1, true ) ; }

************

************
tgt: protected void method_1 ( ) { if ( var_1 ) { var_2 . method_2 ( var_3 ) ; var_6 . settext ( var_2 . method_3 ( ) ) ; var_7 . settext ( var_2 . method_4 ( ) ) ; } else { var_2 . method_5 ( var_3 ) ; var_7 . settext ( var_2 . method_4 ( ) ) ; } }
[0]: public void method_1 ( ) { this. var_1. method_2 ( ( + 1 ) ) ; this. var_2. method_3 ( ( - 1 ), ( - 1 ) ) ; this. var_3. method_4 ( float_1 ) ; this. state = var_4 ; this. var_5. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( string_1 ) ; var_3 . method_2 ( string_1 ) ; var_4 . method_2 ( string_1 ) ; var_5 . method_2 ( string_1 ) ; var_6 . method_2 ( string_1 ) ; var_1 . method_2 ( string_2 ) ; }
[0]: private void init ( type_1 var_1, int var_2 ) { type_2 a = getcontext ( ). method_1 ( var_1, var_3, var_2, 0 ) ; var_4 = a. method_2 ( var_5, 0 ) ; var_6 = a. method_3 ( var_7 ) ; if ( ( var_6 )!= null ) method_4 ( new type_3 ( 0, var_6. method_5 ( method_6 ( ), var_6. method_7 ( ) ) ) ) ; a. method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; var_2 . method_3 ( string_1 ) ; var_2 . method_4 ( string_2 ) ; var_2 . method_5 ( string_3 ) ; var_2 . method_6 ( 1 ) ; var_2 . method_7 ( string_4 ) ; var_2 . method_8 ( string_5 ) ; var_2 . method_9 ( string_6 ) ; var_2 . method_10 ( int_2 ) ; var_2 . method_11 ( 1 ) ; var_2 . method_12 ( 1 ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = new type_1 ( var_3, var_1, var_4, true, 1, 1 ) ; var_3. method_2 ( var_2 ) ; double var_5 = var_2. method_3 ( ) ; double var_6 = var_2. method_4 ( ) ; var_2. method_5 ( var_3 ) ; method_6 ( ( ( ( var_2. method_3 ( ) ) == var_5 ) && ( ( var_2. method_4 ( ) ) == var_6 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { try { java.lang.string var_1 = type_1 . method_2 ( ) . method_3 ( ) . method_4 ( ) ; type_2 . method_2 ( ) . method_5 ( ) . method_6 ( var_1 , this , string_1 ) ; } catch ( type_3 var_2 ) { type_1 . method_2 ( ) . method_7 ( ) ; } }
[0]: public void setvalue ( float var_1 ) { if ( var_1 < 0 ) var_1 = 0 ; else if ( var_1 > 1 ) var_1 = 1 ; float var_2 = var_1 * ( ( method_1 ( ) ) - ( var_3. method_1 ( ) ) ) ; float y = ( - var_2 ) + ( method_2 ( ) ) ; var_3. method_3 ( var_3. method_4 ( ), ( ( method_2 ( ) ) + ( - y ) ) ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; try { var_1 = new type_1 < > ( super . get ( ) ) ; method_3 ( ) ; } catch ( type_2 | type_3 var_4 ) { type_4 . method_5 ( var_5 class . getname ( ) ) . method_6 ( var_6 , string_1 , var_4 ) ; } finally { var_2 . method_2 ( ) ; if ( ( var_3 ) != null ) { var_3 . method_4 ( ) ; var_3 = null ; } var_7 = null ; } }
[0]: public java.util.arraylist < java.lang.string > method_1 ( ) throws java.io.ioexception { java.lang.string var_1 = var_2. method_2 ( ) ; var_3. info ( var_4 ) ; try { java.util.arraylist < java.lang.string > x = var_5. method_3 ( var_1 ) ; return x ; } catch ( java.lang.exception var_6 ) { java.util.arraylist < java.lang.string > x = new java.util.arraylist < java.lang.string > ( ) ; x. add ( var_7 ) ; return x ; } }

************

************
tgt: private void method_1 ( int var_1 ) { if ( ( method_2 ( ) ) == null ) return ; if ( ! ( method_2 ( ) . equals ( type_1 . method_3 ( getcontext ( ) ) . method_4 ( ) . first ( ) ) ) ) { method_5 ( var_2 ) ; return ; } method_5 ( var_1 ) ; }
[0]: protected type_1 method_1 ( int i, boolean var_1 ) { return type_2. method_2 ( data ( ), new int [ ] { 1, 1 }, new int [ ] { 1, 1 }, ( var_1? ( offset ) + i : ( offset ) + i ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( final type_1 < java.lang.string , java.lang.string > var_1 ) { return ( ( var_2 ) + ( var_1 . method_3 ( ) ) ) + ( var_1 . method_2 ( ) . equals ( string_1 ) ? string_1 : ( var_3 ) + ( var_1 . method_2 ( ) ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) throw new type_1 ( string_1 ) ; if ( ( var_1. length ( ) ) > int_1 ) throw new type_1 ( string_2 ) ; if ( ( var_1. length ( ) ) < int_2 ) throw new type_1 ( string_3 ) ; if ( method_2 ( ) ) { throw new type_1 ( string_4 ) ; } this. var_1 = var_1 ; this. length = 0 ; }

************

************
tgt: private void method_1 ( java.util.collection < type_1 > var_1 , java.util.collection < type_1 > var_2 ) { java.util.iterator < type_1 > var_3 = var_1 . iterator ( ) ; while ( var_3 . method_2 ( ) ) { type_1 var_4 = var_3 . method_3 ( ) ; for ( type_1 var_5 : var_2 ) { if ( var_4 . method_4 ( var_5 ) ) { var_3 . remove ( ) ; break ; } } } var_2 . method_5 ( var_1 ) ; }
[0]: public void remove ( ) { if ( ( var_1 ) == null ) { assert ( var_2 ) == ( this ) ; var_2 = null ; return ; } var_3. remove ( this ) ; if ( var_3. isempty ( ) ) { var_1. remove ( ) ; } else { var_1. method_1 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( ) ) { method_3 ( ( ( ( type_1 . method_4 ( string_1 ) ) + string_2 ) + ( var_1 . method_5 ( ) ) ) ) ; var_1 . method_6 ( true ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1, java.io.ioexception, type_2, type_3 { method_1 ( ) ; if ( false ) { type_4. method_2 ( args ) ; } else { new type_4 ( ). method_3 ( string_1, string_2, java.lang.integer.parseint ( string_3 ), string_4, false, int_1, 0, int_2 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { method_2 ( ( ( java.lang.string ) ( var_2 [ p ] . method_3 ( var_3 , new java.lang.object [ ] { } ) ) ) ) ; } catch ( type_2 var_4 ) { var_4 . method_4 ( ) ; } catch ( type_3 var_4 ) { var_4 . method_4 ( ) ; } catch ( type_4 var_4 ) { var_4 . method_4 ( ) ; } }
[0]: public int method_1 ( ) { try { java.lang.string var_1 = method_2 ( method_3 ( string_1 ) ) ; if ( var_1. startswith ( string_2 ) ) { int var_2 = java.lang.integer.parseint ( var_1. substring ( int_1, int_2 ), int_3 ) ; var_3. method_4 ( var_2 ) ; return var_2 ; } else { throw new java.io.ioexception ( ( ( var_4 ) + var_1 ) ) ; } } catch ( java.io.ioexception var_5 ) { var_5. method_5 ( ) ; return var_3. method_6 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string url ) { java.util.arraylist < java.lang.string > var_1 = type_1 . method_2 ( ) . method_3 ( ) ; if ( var_1 != null ) { for ( java.lang.string var_2 : var_1 ) { java.lang.string type_2 = type_1 . method_2 ( ) . method_4 ( var_2 ) ; if ( type_2 . equals ( url ) ) { return var_2 ; } } } return url ; }
[0]: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string answer = string_1 ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) if ( ( var_1. method_2 ( i ) )!= char_1 ) answer += answer. method_2 ( i ) ; return answer ; }

************

************
tgt: public void method_1 ( boolean var_1 , java.lang.string message , type_1 var_2 ) { java.util.list < type_2 > var_3 = new java.util.arraylist < > ( ) ; if ( var_1 && ( var_4 . method_3 ( var_2 , var_3 ) ) ) { var_5 . method_4 ( var_3 ) ; } else { message = var_4 . method_5 ( message ) ; var_5 . method_6 ( message ) ; } }
[0]: public void method_1 ( ) { type_1. asserttrue ( var_1. method_2 ( ) ) ; var_2. add ( type_2. method_3 ( ) ) ; var_1. method_4 ( ) ; boolean var_3 = type_3. method_5 ( ). method_6 ( ) ; type_2. method_1 ( ) ; type_3. method_5 ( ). method_7 ( var_3 ) ; var_1. method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( false ) , new type_3 ( ) , int_1 , new type_4 ( ) ) ; try { java.lang.thread . method_2 ( int_2 ) ; } catch ( type_5 var_2 ) { var_2 . method_3 ( ) ; } type_6 . assertequals ( ( ( ( ( string_1 + 0 ) + string_2 ) + int_3 ) + string_3 ) , var_1 . method_4 ( ) . gettext ( ) ) ; var_1 . method_5 ( ) ; }
[0]: private java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; try ( java.io.bufferedreader var_3 = new java.io.bufferedreader ( new type_1 ( var_1, string_1 ) ) ) { java.lang.string line = var_3. method_2 ( ) ; while ( line!= null ) { var_2. append ( line ) ; line = var_3. method_2 ( ) ; } } return var_2. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1 . method_2 ( this . file ) ; type_2 . assertnotnull ( var_1 ) ; type_2 . assertnotnull ( var_1 . method_3 ( ) ) ; type_2 . assertequals ( this . file . tostring ( ) , var_1 . tostring ( ) ) ; try ( java.io.inputstream var_2 = var_1 . method_4 ( ) ) { type_2 . assertnotnull ( var_2 ) ; } }
[0]: public static void method_1 ( java.util.scanner var_1, boolean [ ] [ ] var_2 ) { boolean var_3 = false ; type_1. method_2 ( var_2 ) ; var_4. method_3 ( string_1, var_5, var_6 ) ; java.lang.system.out.println ( string_2 ) ; for ( int i = 0 ; ( i < ( var_7 ) ) && (! var_3 ) ; i ++ ) { var_3 = type_1. method_4 ( var_1, i, var_2 ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( ) { java.io.file [ ] var_1 = file . method_2 ( ) ; java.util.list < type_2 > var_2 = new java.util.arraylist < type_2 > ( ) ; if ( var_1 != null ) { for ( java.io.file c : var_1 ) { var_2 . add ( new type_3 ( c ) ) ; } } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { var_3. info ( ( ( ( string_1 + ( var_4. method_3 ( ) ) ) + string_2 ) + ( var_4. method_4 ( ) ) ) ) ; var_5. method_5 ( ( var_6 + ( var_7 ) ), var_4. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 message , type_2 var_1 ) { method_2 ( var_1 ) ; method_3 ( message , var_1 ) ; method_4 ( var_1 ) ; method_5 ( message , var_1 ) ; method_6 ( var_1 ) ; if ( message . method_9 ( ) ) { var_2 . method_10 ( var_3 ) ; } else { var_2 . method_10 ( var_4 ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( ). method_3 ( this ) ; var_2 = new type_3 ( this ). title ( var_3 ). title ( var_4 ). method_4 ( false, int_1, true ). method_5 ( false ). build ( ) ; }

************

************
tgt: public java.util.collection < type_1 > method_1 ( ) { type_2 var_1 = var_2 . method_2 ( ) ; java.util.collection < type_1 > var_3 = var_1 . method_3 ( context , false ) ; if ( ( var_3 . size ( ) ) == 0 ) throw new type_3 ( ( string_1 + ( var_2 . method_2 ( ) . getname ( ) ) ) ) ; return method_4 ( var_3 ) ; }
[0]: public static boolean method_1 ( type_1 type, type_1 var_1 ) { if ( type instanceof type_2 ) { return ( ( type_2 ) ( type ) ). contains ( var_1 ) ; } return ( type. equals ( var_1 ) ) || ( type_3. method_2 ( type, var_1 ) ) ; }

************

************
tgt: public static type_1 < type_2 > method_1 ( final type_3 var_1 , final android.content.context context , final java.lang.string url ) { return type_1 . method_2 ( new type_4 < type_2 > ( ) { public type_2 method_3 ( ) throws java.lang.exception { return type_5 . method_4 ( var_1 , context , url ) ; } } ) ; }
[0]: public boolean method_1 ( final type_1 var_1, final java.lang.stringbuilder var_2 ) { type_1. method_2 ( var_1 ) ; java.lang.string var_3 = var_1. substring ( var_4. gettext ( ) ) ; if ( ( var_4. method_3 ( ) )!= null ) { var_2. append ( var_3 ) ; } else { type_2 < int [ ] > var_5 = new type_2 < int [ ] > ( ) ; type_3. method_4 ( var_3, var_2, var_5 ) ; var_6 = var_5. get ( ) ; } return true ; } }

************

************
tgt: public void method_1 ( type_1 src , java.lang.string var_1 , java.util.list < type_2 > output ) { if ( var_2 . method_2 ( ) ) var_2 . method_3 ( java.lang.string.format ( string_1 , src . getname ( ) , ( output != null ? output . size ( ) : 0 ) , var_1 ) ) ; method_4 ( output ) ; }
[0]: public void method_1 ( type_1 var_1 ) { synchronized ( var_4 ) { for ( int var_2 : var_1. method_2 ( ) ) { var_3. put ( var_2, var_1 ) ; } if (! ( var_4. add ( var_1 ) ) ) { for ( type_1 var_5 : var_4 ) { if ( var_5. equals ( var_1 ) ) { var_5. method_3 ( var_1. method_4 ( ) ) ; } } } } }

************

************
tgt: public type_1 method_1 ( final int var_1 ) { type_2 var_2 = null ; try { final java.util.list < type_3 > var_3 = var_4 . method_1 ( var_1 ) ; var_2 = type_1 . method_2 ( var_3 ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_3 ( ) ; var_2 = type_1 . status ( var_6 ) ; } return var_2 . build ( ) ; }
[0]: public void method_1 ( ) { try ( java.io.inputstream var_1 = var_2 class. method_2 ( string_1 ) ) { java.lang.string var_3 = type_1. tostring ( var_1, string_2 ) ; type_2 var_4 = var_5. method_3 ( var_6 class, var_3 ) ; type_3. method_4 ( var_4 ) ; } catch ( java.io.ioexception var_7 ) { var_7. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_2 ( ) . build ( ) ; try { type_3 var_2 = new type_4 ( var_1 ) . method_2 ( var_3 class ) . method_3 ( ) . method_4 ( new type_5 ( ) ) . build ( ) ; type_6 var_4 = var_2 . method_5 ( var_3 class . getname ( ) ) ; type_7 var_5 = var_4 . method_6 ( string_1 ) ; } finally { type_2 . method_7 ( var_1 ) ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.object var_2, java.lang.object var_3 ) { type_2 var_4 = type_3. method_2 ( ). method_3 ( ) ; if ( ( ( java.lang.string ) ( var_3 ) ). method_4 ( string_1 ) ) { var_4. method_5 ( java.lang.integer.parseint ( ( ( java.lang.string ) ( var_3 ) ) ) ) ; method_6 ( view. method_7 ( ). getvalue ( ) ) ; } }

************

************
tgt: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; var_1 . add ( string_1 ) ; var_1 . add ( string_2 ) ; var_1 . add ( string_3 ) ; var_1 . add ( string_4 ) ; java.lang.string var_2 = type_1 . method_2 ( type_2 . method_3 ( ) , var_1 ) ; type_2 var_3 = type_2 . method_4 ( ) ; asserttrue ( type_1 . method_2 ( var_3 , var_1 ) . equals ( var_2 ) ) ; }
[0]: public synchronized boolean method_1 ( java.lang.thread t ) { if ( ( ( var_1 ) == t ) && ( t. method_2 ( ) ) ) { return true ; } else if ( ( ( var_1 ) == null ) && ( ( t == null ) || ( t. method_2 ( ) ) ) ) { return true ; } else { return false ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { super . method_1 ( var_1 , var_2 ) ; if ( ( var_4 ) != null ) { var_4 . method_2 ( var_1 , 0 ) ; method_3 ( method_4 ( ) , ( ( method_5 ( ) ) + ( var_4 . method_5 ( ) ) ) ) ; } }
[0]: public void method_1 ( ) { super. method_1 ( ) ; final android.content.context context = method_2 ( ) ; if ( ( var_1 ) || ( ( type_1. method_3 ( context ) ) > ( var_2. method_4 ( ) ) ) ) { type_2 var_3 = new type_2 ( ) ; var_3. show ( method_5 ( ), string_1 ) ; var_2. method_6 ( context ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ) { method_5 ( type_2 . method_6 ( var_2 ) ) ; } else { method_5 ( type_2 . method_6 ( var_3 ) ) ; } }
[0]: public boolean method_1 ( int var_1 ) { if ( var_1 == ( var_2 ) ) { this. var_3 = string_1 + ( var_2 ) ; return true ; } else if ( var_1 > ( var_2 ) ) { this. var_3 = string_2 ; return false ; } else { this. var_3 = string_3 ; return false ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string text ) { java.util.list < type_1 > values = new java.util.arraylist < type_1 > ( ) ; if ( text . equals ( string_1 ) ) { values = type_1 . method_2 ( var_1 class ) ; } else { values = type_1 . method_3 ( var_1 class , string_2 , text , text ) ; } return values ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; type_2 var_2 = new type_3 ( ). method_3 ( string_1 ). method_4 ( new type_4 ( ) ). method_5 ( new type_5 ( ) ). method_6 ( string_2 ). method_7 ( new type_6 ( ) ). build ( ) ; assertnotnull ( var_1. method_8 ( var_2 ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string key , boolean value ) { if ( ( ( ( var_1 ) == null ) || ( ( var_1 . method_2 ( ) ) == null ) ) || ( ( var_1 . method_2 ( ) . gettype ( ) ) != ( var_2 ) ) ) { return ; } var_1 . method_2 ( ) . method_3 ( key , new type_1 ( type_2 . method_4 ( ) , value ) ) ; }
[0]: public boolean method_1 ( java.lang.string query ) { type_1. method_2 ( string_1, ( string_2 + query ) ) ; java.lang.string var_1 = ( ( ( ( ( string_3 + ( var_2 ) ) + string_4 ) + ( var_3 ) ) + string_5 ) + query ) + string_6 ; var_4 = var_5. method_3 ( var_1, null ) ; var_6 = new type_2 ( getcontext ( ), var_4 ) ; var_7. method_4 ( var_6 ) ; var_8. method_5 ( ) ; return true ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { try ( type_3 var_3 = var_2 . method_2 ( ) ) { java.lang.string var_5 = string_1 ; var_5 += var_6 ; var_5 += string_2 ; var_5 += var_7 ; var_5 += string_2 ; var_5 += var_4 ; var_5 += string_3 ; var_3 . execute ( var_5 ) ; } catch ( type_4 var_8 ) { var_8 . method_3 ( ) ; } }
[0]: public void method_1 ( type_1 < type_2, type_3 > update ) { if ( update == null ) { throw new type_4 ( string_1 ) ; } type_2 var_1 = update. method_2 ( ) ; if ( var_2. method_3 ( var_1 ) ) { var_2. remove ( var_1 ) ; throw new type_5 ( var_2. get ( var_1 ), update ) ; } var_2. put ( var_1, update ) ; }

************

************
tgt: protected void method_1 ( ) { if ( var_1 . method_2 ( ) ) { type_1 [ ] var_2 = var_3 . values ( ) . method_3 ( new type_1 [ 0 ] ) ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { if ( ! ( method_4 ( var_2 [ i ] . name ) ) ) method_5 ( var_2 [ i ] , false ) ; } if ( var_1 . method_6 ( ) ) { method_7 ( ) ; } method_8 ( ) ; } }
[0]: public void set ( double time, type_1 var_1, type_2 var_2 ) { method_1 ( time ) ; method_2 ( var_1 ) ; method_2 ( var_2 ) ; this. var_1. set ( var_1. method_3 ( ) ) ; this. var_2. set ( var_2. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int temp = ( ( var_2 . getint ( var_3 , ( - 1 ) ) ) + 1 ) % ( var_4 . size ( ) ) ; var_5 . method_2 ( var_4 . get ( temp ) ) ; type_2 . method_3 ( temp ) ; var_6 . method_4 ( var_3 , temp ) ; var_6 . commit ( ) ; var_5 . start ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws java.lang.exception { var_2. method_2 ( ). method_3 ( var_3, var_4 ) ; var_2. method_2 ( ). method_3 ( var_5, var_6 ) ; type_3 var_7 = new type_3 ( var_2. method_4 ( ), new type_4 ( new type_5 ( ) ), new type_6 ( ) ) ; var_2. method_2 ( ). method_5 ( var_7 ) ; }

************

************
tgt: public void method_1 ( type_1 response ) { try { var_1 . method_4 ( var_2 , new type_2 ( response ) . method_5 ( ) ) ; } catch ( type_3 var_3 ) { var_3 . method_6 ( ) ; } catch ( type_4 var_3 ) { var_3 . method_6 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; java.lang.system.out.println ( string_1 ) ; var_2 = new type_2 ( ) ; java.util.arraylist < java.lang.string > var_3 = new java.util.arraylist ( java.util.arrays.aslist ( var_4. method_2 ( ). method_3 ( var_5 ) ) ) ; var_6 = new type_3 ( var_4, var_3 ) ; method_4 ( true ) ; }

************

************
tgt: public void method_1 ( ) { double [ ] var_1 = ( ( double [ ] ) ( var_2 . method_2 ( ) ) ) ; double [ ] var_3 = var_4 . method_3 ( ) ; asserttrue ( string_1 , ( var_3 == ( var_2 ) ) ) ; var_3 [ 0 ] = float_1 ; asserttrue ( string_2 , ( var_3 != var_1 ) ) ; }
[0]: public void method_1 ( int element ) { this. var_1 [ ( ++ ( this. size ) ) ] = element ; int var_2 = this. size ; while ( ( this. var_1 [ var_2 ] ) > ( this. var_1 [ this. method_2 ( var_2 ) ] ) ) { this. method_3 ( var_2, this. method_2 ( var_2 ) ) ; var_2 = this. method_2 ( var_2 ) ; } this. var_1 [ ( ++ ( this. size ) ) ] = element ; }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( string_1 + ( var_1 ) ) + string_2 ) + ( var_2 ) ) + string_3 ) + ( ( var_3 ) - ( var_1 ) ) ) + string_4 ) + ( ( var_4 ) - ( var_2 ) ) ) + string_5 ; }
[0]: private static void method_1 ( java.util.arraylist < type_1 > var_1, type_1 var_2 ) { int var_3 = var_1. method_2 ( var_2 ) ; java.lang.string var_4 = type_2. method_3 ( var_1, 0, var_3 ) ; if ( var_4!= null ) { var_1. get ( 0 ). method_4 ( var_4 ) ; } }

************

************
tgt: private static java.io.file method_1 ( type_1 p , java.io.file name ) throws type_2 , java.io.ioexception { if ( name != null ) { java.io.file f = type_3 . method_2 ( name , string_1 , string_2 ) ; try ( type_4 var_1 = new type_4 ( f , string_3 ) ) { p . method_3 ( new type_5 ( var_1 ) ) ; } return f ; } return null ; }
[0]: protected java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) throws java.lang.exception { return ( var_1 == null ) || ( ( var_1. method_2 ( ) ) == ( var_3 ) )? string_1 : ( new type_3 ( this, var_1 ). method_3 ( ) ) > 0? string_2 : string_3 ; }

************

************
tgt: public void update ( ) { if ( ( type ) == ( var_1 ) ) { ( var_2 ) ++ ; this . method_1 ( var_3 , var_4 ) ; int var_5 = var_6 . method_2 ( int_1 ) ; if ( ( var_5 == 0 ) && ( ( ( var_2 ) % int_2 ) == 0 ) ) { type_1 . method_3 ( string_1 ) ; method_4 ( var_7 , var_3 ) ; var_2 = 0 ; } } }
[0]: public void method_1 ( java.util.map < java.lang.string, java.lang.object > var_1 ) { for ( java.lang.object var_2 : var_1. values ( ) ) { if ( (! ( var_2 instanceof java.lang.string ) ) && (! ( var_2 instanceof java.lang.double ) ) ) { throw new type_1 ( string_1 ) ; } } this. var_1 = var_1 ; }

************

************
tgt: public boolean method_1 ( ) { int var_1 = var_2 . method_2 ( ) ; java.lang.string var_3 = var_4 . method_3 ( var_1 ) ; if ( var_3 != null ) { type_1 var_5 = method_4 ( ) . method_5 ( var_3 ) ; if ( var_5 instanceof type_2 ) { return ( ( type_2 ) ( var_5 ) ) . method_1 ( ) ; } } return false ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_3 ; listener. method_2 ( ( - 1 ), var_3 ) ; if ( ( var_4 ) == null ) method_3 ( var_1. method_4 ( ) ) ; else { if ( var_4. method_5 ( ) ) { method_6 ( ) ; } else { method_7 ( ) ; } } }

************

************
tgt: public java.lang.string method_1 ( ) { boolean var_1 ; var_1 = var_2 ; var_2 = true ; if ( ! ( method_2 ( ) ) ) { return null ; } var_2 = var_1 ; if ( ( var_3 ) != ( var_4 ) ) { return null ; } return var_5 . tostring ( ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { type_1 var_2 = new type_1 ( ) ; type_2 var_3 = type_3. method_2 ( ). method_3 ( var_1. method_4 ( ) ) ; java.lang.string var_4 = ( ( var_3. name ) + ( var_2. method_5 ( var_1 ) ) ) + ( var_2. method_5 ( var_1 ) ) ; type_4 var_5 = new type_4 ( this, var_1. getname ( ), var_4 ) ; var_5. method_6 ( ). show ( ) ; } }

************

************
tgt: public int method_1 ( ) { try { this . method_2 ( ) ; this . method_3 ( ) ; this . method_6 ( true ) ; return var_1 ; } catch ( java.lang.exception var_2 ) { type_3 . method_7 ( string_1 ) ; var_2 . method_8 ( ) ; return - 1 ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( null!= var_1 ) if ( var_2 ) { var_1. method_2 ( ) ; type_2 < type_3 > list = var_3. method_3 ( ) ; type_4 event = new type_4 ( this, var_4 ) ; event. method_4 ( var_1 ) ; while ( list. method_5 ( ) ) list. method_6 ( ). method_7 ( event ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { try { if ( ( var_1 . length ( ) ) <= int_1 ) this . var_1 = var_1 ; else { throw new type_1 ( ( ( string_1 + var_1 ) + string_2 ) ) ; } } catch ( type_1 var_3 ) { var_4 [ int_2 ] = string_3 + ( var_3 . method_2 ( ) ) ; method_3 ( ( ( method_4 ( ) ) + 1 ) ) ; } }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.object var_2, java.lang.string [ ] var_3, java.util.map < java.lang.string, java.lang.string > var_4, java.lang.string var_5, type_1 var_6 ) throws type_2 { try { if ( (! ( method_2 ( ) ) ) || (! ( var_6. method_3 ( ) ) ) ) { return true ; } } catch ( type_3 var_7 ) { throw new type_2 ( string_1, var_7 ) ; } var_4 = this. method_4 ( var_1, var_4 ) ; return true ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { boolean var_1 = method_2 ( ) ; if ( var_1 ) { } else { try { this . method_4 ( ) ; } catch ( type_1 var_2 ) { } try { method_3 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_2 ( string_1 ) ; } } }
[0]: public synchronized void method_1 ( long var_1, type_1 var_2 ) { if ( var_1 <= 0 ) throw new type_2 ( ( string_1 + var_1 ) ) ; this. var_3 += var_2. method_2 ( var_1 ) ; for ( ; ; ) { type_3 var_4 = var_5. method_3 ( ) ; if ( ( var_4 == null ) || ( ( var_6 ) < ( var_3 ) ) ) break ; var_5. method_4 ( ). method_5 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string string = ( ( this ) == ( var_1 ) ) ? null : this . name ( ) ; if ( string != null ) { string = type_1 . method_2 ( string . tolowercase ( ) ) ; } return string ; }
[0]: protected void method_1 ( boolean var_1 ) { if ( ( var_2 ) == null ) { return ; } try { final int var_3 = var_4. length ; for ( int i = 0 ; i < var_3 ; ++ i ) { if (! ( ( var_4 [ i ] ) instanceof type_1 ) ) { break ; } method_2 ( i ) ; } method_3 ( ) ; } catch ( java.lang.throwable var_5 ) { type_2. method_4 ( var_5 ) ; } } }

************

************
tgt: protected void method_1 ( ) { try { get ( ) ; } catch ( type_1 var_1 ) { } catch ( type_2 var_2 ) { var_2 . method_2 ( ) ; } var_3 . put ( var_4 , 0 ) ; if ( ( var_5 . method_3 ( ) ) == var_4 ) { var_6 . method_4 ( ) . method_5 ( 0 , var_3 . get ( var_4 ) ) ; var_6 . method_6 ( 0 , 0 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2. method_2 ( ) ) ) ; var_1. method_3 ( var_3, var_4 ) ; var_1. method_3 ( var_5, var_6 ) ; var_1. method_3 ( var_7, var_8 ) ; try { var_9. method_4 ( var_1 ) ; } finally { var_1. method_5 ( ) ; } try { var_2. show ( ) ; } catch ( type_2 var_10 ) { var_10. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( 0 , int_1 ) ; type_2 . assertequals ( int_2 , var_1 . method_3 ( ) . size ( ) ) ; for ( type_3 var_3 : var_1 . method_3 ( ) ) { type_2 . method_4 ( var_3 . method_5 ( ) ) ; } }
[0]: public double method_1 ( java.util.list < java.lang.string [ ] > var_1, java.lang.string var_2 ) { double count = 0 ; for ( java.lang.string [ ] var_3 : var_1 ) { for ( java.lang.string var_4 : var_3 ) { if ( var_4. method_2 ( var_2 ) ) { count ++ ; break ; } } } return 1 + ( type_1. method_3 ( ( ( var_1. size ( ) ) / count ) ) ) ; } return 0 ; }

************

************
tgt: public static boolean method_1 ( int x , int y , type_1 var_1 ) { if ( ( ( var_2 ) == null ) || ( var_2 . isempty ( ) ) ) return false ; if ( ( ( var_3 ) != null ) && ( var_1 != null ) ) { for ( type_2 < java.lang.integer , java.lang.integer > var_4 : var_3 ) if ( var_1 . method_2 ( ( x + ( var_4 . first ) ) , ( y + ( var_5 ) ) ) ) return false ; } return true ; }
[0]: private static float method_1 ( java.util.arraylist < java.lang.float > list, int var_1 ) { float var_2 = - 1.0f ; for ( int a = var_1 ; a < ( list. size ( ) ) ; a ++ ) { if ( ( list. get ( a ) ) > var_2 ) { var_2 = list. get ( a ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 token ) { this . var_1 . method_2 ( token ) ; if ( ( this . var_4 ) == null ) { return ; } for ( type_1 var_5 : this . var_4 ) { var_5 . method_3 ( ) . method_4 ( var_5 ) ; var_5 . method_5 ( ) . method_6 ( var_5 ) ; } this . var_4 . method_7 ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) throws java.lang.exception { type_1 var_2 = this. method_2 ( ) ; type_3 var_3 = this. method_3 ( ) ; var_3. put ( string_1, method_4 ( ) ) ; java.util.list < type_3 > var_4 = var_5. method_5 ( var_3 ) ; var_2. method_6 ( string_2 ) ; var_2. method_7 ( string_3, var_4 ) ; var_2. method_7 ( string_5, var_3 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { type_1 response = var_1 . method_2 ( ( ( string_1 + ( var_2 ) ) + string_2 ) ) . method_3 ( ) . method_4 ( ) . method_5 ( ) ; type_2 . assertequals ( type_3 . method_6 ( ) , response . method_7 ( ) ) ; }
[0]: public void method_1 ( final type_1 < type_2 > var_1 ) { final java.util.list < type_3 > var_2 = new java.util.arraylist < type_3 > ( ) ; final type_4 < java.util.list < type_3 > > var_3 = new type_4 ( var_2, var_4 ) ; method_2 ( var_5, id, var_3, var_1 ) ; method_2 ( var_6, id, var_3, var_1 ) ; var_3. method_3 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < java.lang.string > var_1 = var_2 . method_2 ( ) ; if ( ! ( var_1 . contains ( var_3 ) ) ) { var_4 . method_3 ( ( var_3 + string_1 ) ) ; var_2 . method_4 ( var_3 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1, args ) ; java.lang.system.out.println ( var_3 ) ; if ( var_4 ) { var_2. method_1 ( ) ; java.lang.system.exit ( 0 ) ; } var_5 = var_6 ; var_7. info ( string_1, var_5 ) ; type_1. start ( var_8 ) ; }

************

************
tgt: public void start ( ) { try { type_1 . replace ( var_1 , var_2 . height , var_3 ) ; } catch ( type_2 var_4 ) { var_4 . method_1 ( ) ; } var_5 . method_2 ( ( ( var_6 ) / int_1 ) , ( ( var_8 . height ) / int_1 ) ) ; }
[0]: public static type_1 method_1 ( type_2 var_1, java.lang.string url, java.lang.string var_2, java.lang.string var_3 ) throws type_3 { type_4 var_4 = new type_4 ( new type_1 ( var_1, url, ( ( java.lang.string ) ( null ) ) ) ) ; type_5 var_5 = var_4. method_1 ( var_2, null, var_3 ) ; return new type_1 ( url, var_5 ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = int_1 ; if ( ( ( var_2 ) == 1 ) || ( ( var_2 ) == int_2 ) ) { return int_3 ; } if ( ( var_2 ) >= int_3 ) { var_1 = var_3 . method_2 ( var_4 ) ; if ( var_1 != int_1 ) return var_1 ; var_1 = var_3 . method_2 ( var_5 ) ; if ( var_1 != int_1 ) return var_1 ; } int var_6 = new java.util.random ( ) . method_3 ( int_5 ) ; return var_6 ; }
[0]: private int method_1 ( ) { int var_1 = a. method_2 ( ) ; int var_2 = b. method_2 ( ) ; int y = 0 ; if ( var_1 > var_2 ) { y = var_2 - var_1 ; } else { y = var_1 - var_2 ; } return y ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; method_5 ( ) . method_6 ( true ) ; method_7 ( var_1 ) ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1, java.util.list < type_1 > var_2, type_2 var_3 ) { java.util.list < type_1 > var_4 = var_5. method_2 ( var_3 ) ; for ( type_1 var_6 : var_4 ) { boolean result = false ; for ( type_1 var_7 : var_2 ) { result = result || ( var_6. equals ( var_7 ) ) ; if (! result ) var_1. add ( var_6 ) ; } } }

************

************
tgt: public type_1 method_1 ( ) throws type_2 { final type_1 var_1 = var_2 . method_1 ( ) ; if ( var_1 != null ) { java.lang.string type = type_3 . method_2 ( var_3 . method_3 ( ) ) ; if ( type_4 . method_5 ( var_1 . gettype ( ) ) . contains ( type ) ) { return var_1 ; } } throw new type_5 ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3. method_2 ( var_1, string_1 ) ; int index = method_3 ( var_1. method_4 ( ) ) ; if ( index!= ( - 1 ) ) { long time = ( ( long ) ( ( var_1. gettime ( ). method_5 ( ) ) * ( var_2. get ( index ). var_3 ) ) ) ; return new type_1 ( time ) ; } return var_1. gettime ( ). method_6 ( ) ; }

************

************
tgt: private static type_1 [ ] method_1 ( type_2 var_1 ) { double var_2 = var_1 . method_2 ( ) ; type_1 var_3 = var_1 . method_3 ( ) ; type_1 [ ] var_4 = type_3 . method_4 ( var_1 ) ; return type_3 . method_5 ( var_2 , var_3 , var_4 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return false ; } java.lang.string token = var_2. method_2 ( var_1. method_3 ( ) ). get ( ). tostring ( ) ; if ( ( token == null ) || (! ( token. equals ( var_1. method_4 ( ) ) ) ) ) { return false ; } var_2. method_2 ( var_1. method_3 ( ) ). method_5 ( var_3, var_4 ) ; return true ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { this . var_2 = var_2 ; this . var_1 = var_1 ; var_3 . setenabled ( method_2 ( var_2 ) ) ; if ( var_2 . equals ( var_4 ) ) { type_3 . method_3 ( ) ; } method_4 ( ) ; method_5 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { if (! ( method_2 ( var_2 ) ) ) { type_2. method_3 ( this, string_1 ) ; return ; } var_3 = new type_3 ( ) ; var_4 = new java.lang.thread ( var_5 ) ; var_4. start ( ) ; method_4 ( ) ; }

************

************
tgt: protected static type_1 method_1 ( ) throws java.io.ioexception { final type_2 var_1 = new type_2 ( ) . method_2 ( string_1 ) ; var_1 . method_3 ( var_2 class ) ; java.lang.system.out.println ( string_2 ) ; type_1 var_4 = type_3 . method_4 ( var_5 , var_1 ) ; return var_4 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, int var_3, type_1 var_4 ) { var_5. method_2 ( var_1, var_2, var_3 ) ; java.util.list < type_2 > var_6 = var_7. method_3 ( ) ; var_4. method_4 ( string_1, var_6 ) ; return string_2 ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.long var_1 , java.lang.long var_2 , type_1 var_3 ) { if ( var_1 != null ) { type_2 var_4 = var_5 . method_2 ( var_1 ) ; var_3 . method_3 ( string_1 , var_4 ) ; } if ( var_2 != null ) { type_3 var_6 = var_7 . method_2 ( var_2 ) ; var_3 . method_3 ( string_2 , var_6 ) ; } var_3 . method_3 ( string_3 , new type_4 ( ) ) ; return string_4 ; }
[0]: public void method_1 ( ) { this. var_1. method_2 ( this. var_1. method_3 ( ), ( ( this. var_2. method_4 ( method_5 ( ) ) ) * ( var_3 ) ) ) ; this. var_4 = this. var_2. method_4 ( this. var_4 ) ; method_6 ( string_1 ) ; }

************

************
tgt: private static void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3 ; java.lang.string var_4 = var_5 . gettext ( ) . tolowercase ( ) ; java.lang.string var_6 = var_7 . gettext ( ) ; java.lang.string var_8 = var_9 . gettext ( ) ; if ( type_2 . method_1 ( var_2 , var_4 , var_6 , var_8 ) ) { var_5 . settext ( string_1 ) ; var_7 . settext ( string_1 ) ; var_9 . settext ( string_1 ) ; } else { var_5 . settext ( string_2 ) ; } }
[0]: public void method_1 ( ) throws type_1, type_2, type_3 { type_4 var_1 = new type_4 ( ) ; var_1. method_2 ( type_5. method_3 ( ) ) ; var_1. method_4 ( new type_6 ( string_1 ) ) ; var_1. method_5 ( var_2 ) ; var_3. method_6 ( var_1 ) ; type_7. method_7 ( var_4 ). method_8 ( var_1 ) ; }

************

************
tgt: public void method_1 ( final android.content.intent intent , final type_1 var_1 , final java.lang.string var_2 ) { var_3 . method_2 ( intent , new type_2 ( ) { public void method_3 ( ) { var_4 super . method_1 ( intent , var_1 , var_2 ) ; } } ) ; }
[0]: public void method_1 ( double var_1, double var_2, double var_3, float var_4, float var_5, float var_6, float var_7, float var_8 ) { type_1. method_2 ( var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 ) ; if ( var_9 ) type_1. method_3 ( false ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string [ ] var_1 = ( ( java.lang.string [ ] ) ( var_2 . method_2 ( ) ) ) ; java.lang.string [ ] f = ( ( java.lang.string [ ] ) ( var_3 . method_3 ( ) ) ) ; asserttrue ( string_1 , ( f == ( var_2 ) ) ) ; f [ 0 ] = string_2 ; asserttrue ( string_3 , ( f != var_1 ) ) ; }
[0]: public void add ( int data ) { ( this. size ) ++ ; if ( ( this. var_1 ) == null ) { this. var_1 = new type_1 ( data ) ; } else { type_1 var_2 = this. var_1 ; while ( var_2!= null ) { var_2 = var_3 ; } var_3 = new type_1 ( data ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string name ) { type_1 var_1 = new type_2 ( ) . method_2 ( new java.io.file ( name ) , var_2 class ) ; type_3 . info ( string_1 ) ; if ( var_1 == null ) { type_3 . method_3 ( string_2 , name ) ; return null ; } else { return var_1 ; } }
[0]: public static boolean method_1 ( final type_1 var_1 ) { type_2 var_2 = type_3. method_2 ( ) ; if (! ( var_3. contains ( var_1. method_3 ( ) ) ) ) type_3. method_4 ( var_1. method_3 ( ) ) ; java.util.map < type_1, java.lang.class <? > > var_4 = var_5. get ( var_1. method_3 ( ) ) ; return ( var_4!= null ) && ( ( var_4. get ( var_1 ) )!= null ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , float var_2 ) { var_3 . method_2 ( false ) ; var_4 . method_2 ( true ) ; if ( ( var_5 ) < ( var_6 ) ) { var_7 = 1 - ( ( var_5 ) / ( var_6 ) ) ; var_4 . method_3 ( new type_2 ( 0 , 0 , 0 , ( 1 - ( var_7 ) ) ) ) ; var_8 . method_4 ( var_1 ) ; var_5 += var_2 ; } else { var_9 = false ; } var_8 . method_5 ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_3. method_4 ( this ) ; var_5. method_5 ( new type_4 ( var_5 ) ) ; var_3. method_4 ( new type_5 ( ) { public void method_6 ( type_2 var_3 ) { } public void method_7 ( type_2 var_3, type_6 result, type_7 var_7, float var_8 ) { } } ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { final type_2 var_1 = type_3 . method_2 ( var_2 class ) ; java.lang.string var_5 = var_1 . method_3 ( ) ; type_5 var_6 = method_4 ( ) ; var_5 = var_6 . method_5 ( var_7 , var_8 ) ; type_6 . assertequals ( var_9 , var_5 ) ; var_5 = var_5 . replace ( string_1 , string_2 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_1 ) ; try { type_1 var_2 = new type_1 ( ( ( ( var_3 ) + ( var_4 ) ) + var_1 ) ) ; type_2 var_5 = var_2. method_3 ( ) ; while ( var_5. method_4 ( ) ) { method_5 ( var_2, var_5 ) ; } } catch ( java.io.ioexception var_6 ) { type_3. method_6 ( var_7 ) ; type_4. method_7 ( string_1, var_6 ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.string path , type_3 var_1 , long offset , int var_2 , byte [ ] buffer ) throws java.io.ioexception { type_4 var_3 = new type_4 ( path ) ; var_3 . method_2 ( method_3 ( var_4 ) ) ; var_3 . method_2 ( var_5 , var_1 . method_4 ( ) ) ; var_3 . method_2 ( var_6 , offset ) ; var_3 . method_2 ( var_7 , var_2 ) ; return this . var_8 . method_5 ( var_3 . build ( ) , buffer ) ; }
[0]: private void method_1 ( ) { var_1. method_2 ( ) ; for ( type_1 p : var_2. method_3 ( ) ) { type_2 < type_1 > var_3 = new type_2 < > ( ) ; var_3. method_4 ( type_3. method_5 ( var_4 ) ) ; var_3. setvalue ( p ) ; var_1. add ( var_3 ) ; } var_1. method_2 ( ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { final long var_2 = 1l < < ( var_1 & int_1 ) ; if ( ( var_3 [ ( var_1 > > > int_2 ) ] |= var_2 ) == var_2 ) { var_4 [ ( var_1 > > > int_3 ) ] |= 1l < < ( ( var_1 > > > int_2 ) & int_1 ) ; } }
[0]: public java.lang.string method_1 ( int number ) { java.lang.string temp = java.lang.integer.parseint ( number ) ; int length = temp. length ( ) ; for ( int i = 0 ; i < ( int_1 - length ) ; i ++ ) temp += temp ; return temp ; }

************

************
tgt: public void method_1 ( java.lang.string name , int id ) throws type_1 { try ( type_2 var_1 = var_2 . method_2 ( ) ) { type_3 var_3 = var_1 . method_3 ( string_4 ) ; var_3 . method_4 ( 1 , name ) ; var_3 . method_5 ( int_1 , id ) ; var_3 . method_6 ( ) ; } }
[0]: private void method_1 ( ) { int i = size ( ) ; while ( ( i > 1 ) && ( ( method_2 ( var_1. get ( i ), var_1. get ( ( i / int_1 ) ) ) ) > 0 ) ) { method_3 ( i, ( i / int_1 ) ) ; i /= int_1 ; } }

************

************
tgt: public void method_1 ( ) { if ( ( getactivity ( ) ) == null ) return ; getactivity ( ) . method_2 ( new type_1 ( ) { public void method_1 ( ) { int i = var_1 . method_3 ( ) ; if ( i < count ) { var_1 . method_4 ( 1 ) ; } } } ) ; }
[0]: public void method_1 ( ) { if ( ( length ) > 0 ) { type_1 var_1 = var_2. get ( ( ( length ) - ( length ) ) ) ; var_1. method_2 ( var_3. get ( ( ( length ) - 1 ) ). method_3 ( ) ) ; var_1. method_4 ( var_3. get ( ( ( length ) - 1 ) ). method_5 ( ) ) ; var_2. add ( ( ( length ) - 1 ), var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . i ( string_1 , string_2 ) ; try { type_1 . i ( string_3 , var_1 . method_2 ( ) ) ; } catch ( java.lang.exception var_2 ) { type_1 . i ( string_4 , var_2 . tostring ( ) ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { if ( var_1 ) { return null ; } type_2 var_2 = var_3. method_2 ( var_4 ) ; var_4 = var_2. method_3 ( ) ; if ( ( var_4 ) == null ) { var_1 = true ; } if ( var_2. method_4 ( ). isempty ( ) ) { return null ; } else { return var_2. method_4 ( ) ; } } }

************

************
tgt: private void method_1 ( java.lang.string results , type_2 var_2 ) { java.util.list < type_3 > var_3 = var_4 . method_2 ( ) ; if ( ( var_3 . isempty ( ) ) || ( results == null ) ) { var_2 . put ( var_5 , var_3 ) ; } else { var_2 . put ( var_5 , var_3 . method_3 ( 1 , var_3 . size ( ) ) ) ; var_2 . put ( var_6 , var_3 . get ( 0 ) ) ; } }
[0]: public type_1 method_1 ( type_2 var_1, int var_2, type_1 var_3 ) throws type_3 { java.lang.string title = var_3. getstring ( string_1 ) ; java.lang.string content = var_3. getstring ( string_2 ) ; java.lang.string writer = var_3. getstring ( string_3 ) ; int var_4 = var_3. getint ( string_4 ) ; int status = var_5. method_2 ( string_5, title, string_6, content, string_7, writer, string_8, var_4, string_9 ) ; var_6. put ( string_10, status ) ; return var_6 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_3 ; listener . method_2 ( ( - 1 ) , var_3 ) ; if ( var_1 != null ) { if ( ( var_4 ) == null ) method_3 ( var_1 . method_4 ( ) ) ; else { if ( var_4 . method_5 ( ) ) { method_6 ( ) ; } else { method_7 ( ) ; } } } }
[0]: public void method_1 ( ) { int n ; for ( int j = 0 ; j < int_1 ; j ++ ) { for ( int i = 1 ; i < int_2 ; i ++ ) { if ( type_1. method_2 ( i, j, var_1 ) ) { n = type_1. method_3 ( i, j, var_1 ) ; if ( n >= 0 ) { var_1 [ n ] [ j ]. method_4 ( i ) ; } } } } }

************

************
tgt: public boolean method_1 ( android.view.view view , type_1 event ) { switch ( event . method_2 ( ) ) { case var_1 : view . method_3 ( type_3 . method_4 ( string_1 , string_1 ) , new type_2 ( ) , view , 0 ) ; return true ; default : return false ; } }
[0]: public type_1 method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) == null ) { return var_1 ; } var_2. method_2 ( ) ; final type_1 result = var_2 ; var_2 = null ; if ( ( method_3 ( ) ) instanceof type_3 ) { return ( ( type_3 ) ( method_3 ( ) ) ). method_1 ( var_1 ) ; } return result ; }

************

************
tgt: protected java.lang.string [ ] method_1 ( java.util.arraylist < java.lang.string > ... var_1 ) { boolean var_2 = false ; java.lang.string [ ] result = null ; try { type_1 var_3 = new type_1 ( null , context ) ; var_2 = var_3 . method_2 ( ) ; if ( var_2 ) result = var_3 . method_3 ( ) ; else result = new java.lang.string [ 1 ] ; result [ 0 ] = string_1 ; } catch ( java.lang.exception var_4 ) { var_4 . method_4 ( ) ; } return result ; }
[0]: public java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) throws java.io.ioexception { try { if ( ( this. var_3 ) == null ) { method_2 ( ) ; } java.util.list < java.lang.string > var_4 = java.util.arrays.aslist ( this. var_3. method_3 ( var_1 ). split ( string_1 ) ) ; return var_4 ; } catch ( java.lang.exception var_5 ) { var_5. method_4 ( ) ; } return null ; } }

************

************
tgt: private void method_1 ( type_1 var_1 ) { try { var_2 = var_3 . method_1 ( var_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_4 ( var_1 ) ; var_4 . method_2 ( var_2 . method_3 ( ) ) ; } } catch ( type_2 var_5 ) { method_5 ( var_5 . method_6 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2. get ( java.lang.string. method_2 ( this. var_3 ) ) ) ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; var_4. method_9 ( ) ; var_4. method_10 ( ) ; for ( type_2 var_5 : var_4. method_11 ( ) ) { var_5. method_12 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , int var_2 , int var_3 , int var_4 , int var_5 ) { return ( ( ( var_2 < ( var_1 . x ) ) && ( ( var_1 . x ) < var_3 ) ) && ( var_4 < ( var_1 . y ) ) ) && ( ( var_1 . y ) < var_5 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; int var_5 = type_3. method_4 ( this, var_6 ) ; if ( var_5!= ( var_7 ) ) { type_3. method_5 ( this, var_8, var_9 ) ; } }

************

************
tgt: public boolean method_1 ( int var_1 ) { if ( ( var_1 > ( this . var_2 ) ) && ( var_1 > 0 ) ) { return false ; } else { this . var_2 = - var_1 ; this . var_3 += var_1 ; this . method_2 ( ) ; this . method_3 ( this . var_3 ) ; this . method_4 ( ) ; return true ; } }
[0]: public void method_1 ( ) { try { int var_1 = var_2. method_2 ( var_3 ) ; if ( var_1 > 0 ) { state = var_4 ; var_5. method_3 ( new type_1 ( var_1 ) ) ; } var_6. method_4 ( new type_2 ( ) ) ; var_6. method_5 ( var_7 ) ; var_6. method_6 ( ). method_7 ( ) ; } catch ( java.io.ioexception var_8 ) { var_8. method_8 ( ) ; } } }

************

************
tgt: public java.util.map < java.lang.string , java.lang.object > method_1 ( java.lang.string var_1 , java.lang.string query , java.lang.string var_2 , java.lang.string var_3 ) throws java.io.ioexception { var_4 . method_2 ( string_1 , var_1 ) ; java.lang.string var_5 = var_6 . method_3 ( var_1 ) ; var_4 . method_4 ( string_2 , var_5 ) ; var_4 . method_2 ( string_3 , query , var_2 , var_3 ) ; return var_7 . method_5 ( query , var_2 , new type_1 ( var_5 , var_1 ) , method_6 ( var_3 ) ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3, type_1 var_4 ) throws type_2 { var_3 = type_3. method_2 ( var_3 ) ; if ( ( string_1. equals ( var_3 ) ) || ( string_2. equals ( var_3 ) ) ) { message = new type_4 ( ) ; var_5. add ( message ) ; var_6 = var_4. getvalue ( string_3 ) ; } else if ( type_5. equals ( var_3 ) ) { var_7 = true ; } var_8 = var_3 ; }

************

************
tgt: public static int method_1 ( java.lang.string [ ] args ) { int var_1 = - 1 ; if ( ( args.length ) > 0 ) { var_1 = ( ( int ) ( java.lang.integer.parseint ( args [ 0 ] ) ) ) ; if ( var_1 < 1 ) { throw new type_1 ( ) ; } else { } } else { throw new type_1 ( ) ; } return var_1 ; }
[0]: public boolean method_1 ( int var_1, int var_2 ) { if ( ( ( ( ( this. var_1 ) == var_1 ) && ( ( this. var_2 ) == var_2 ) ) || ( ( this. var_1 ) == var_2 ) ) || ( ( this. var_1 ) == var_2 ) ) || ( var_1 == var_2 ) ) { return true ; } else return false ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = null ; if ( ( var_2 ) != null ) { var_1 = var_2 . gettext ( ) . tostring ( ) ; } if ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) { method_2 ( getstring ( var_3 ) ) ; return ; } android.content.intent intent = new android.content.intent ( this , var_4 class ) ; intent . method_3 ( string_1 , var_1 ) ; method_4 ( intent ) ; }
[0]: private void method_1 ( ) { var_1 = ( ( var_1 ) + 1 ) % ( var_2. size ( ) ) ; var_3 = var_2. get ( var_1 ) ; method_2 ( var_3 ) ; java.lang.system.out.println ( ( string_1 + ( var_3. tostring ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { for ( int var_1 = 0 ; var_1 < ( var_2 ) ; var_1 ++ ) { for ( int var_3 = 0 ; var_3 < ( height ) ; var_3 ++ ) { if ( ( var_4 . method_3 ( ) ) < ( var_5 ) ) { var_6 [ var_1 ] [ var_3 ] = method_4 ( ) ; } else { var_6 [ var_1 ] [ var_3 ] = char_1 ; } } } method_2 ( ) ; }
[0]: private void method_1 ( ) { var_1 = 0 ; var_2. settext ( getstring ( var_3 ) ) ; type_1 item = var_4. get ( 0 ) ; method_2 ( item ) ; var_5. method_3 ( var_6 ) ; var_5. method_4 ( var_4. size ( ) ) ; var_5. method_5 ( 0 ) ; }

************

************
tgt: private type_1 method_1 ( final java.util.list < type_2 > var_1 , final type_3 var_2 , final type_4 var_3 ) throws java.io.ioexception { final type_5 var_4 = this . var_5 . method_2 ( var_2 ) ; final type_6 < java.lang.string , type_7 > var_6 = type_8 . method_3 ( var_1 ) ; final type_9 var_7 = var_4 . method_4 ( ) ; var_3 . method_5 ( var_7 ) . method_6 ( type_8 . method_7 ( var_7 . method_8 ( ) , var_6 ) ) ; return new type_10 ( var_3 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( var_2 class ) ; type_3 [ ] var_3 = new type_3 [ 1 ] ; var_1. method_3 ( var_1. method_4 ( ) ) ; method_5 ( string_1 ) ; type_4 var_4 = new type_4 ( var_3 ) ; assertequals ( var_4. method_6 ( ), string_1 ) ; }

************

************
tgt: void method_1 ( type_1 var_1 ) { this . var_2 = var_1 ; var_3 = type_2 . method_2 ( ) . getint ( string_1 ) ; var_4 = type_2 . method_2 ( ) . getint ( string_2 ) ; this . var_5 = new type_3 ( var_3 , var_4 ) ; method_3 ( ) ; }
[0]: public void method_1 ( int var_1 ) { int var_2 = ( value ) ^ ( var_1 & int_1 ) ; if ( ( ( ( var_1 & int_2 )!= 0 ) && ( ( ( value ) & - int_3 ) == 0 ) ) || ( ( ( var_1 & int_2 ) == 0 ) && ( ( ( value ) & - int_3 )!= 0 ) ) ) { var_2 = - var_2 ; value = var_2 ; } value = var_2 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { if ( var_1 != ( this . var_2 ) ) { this . var_2 = var_1 ; switch ( this . var_2 ) { case var_3 : this . var_4 = this . var_5 ; return ; case var_6 : this . var_4 = this . var_7 ; return ; default : throw new type_2 ( ( ( ( ( string_1 + ( var_8 class . method_2 ( ) ) ) + string_2 ) + var_1 ) + string_3 ) ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { try { type_2. method_2 ( var_2, type_3. method_3 ( string_1, var_1 ) ) ; var_3. method_1 ( var_1 ) ; if ( var_1. method_4 ( ) ) { type_3. method_5 ( string_2 ) ; } } catch ( java.io.ioexception var_4 ) { type_3. method_5 ( ( string_3 + ( var_4. method_6 ( ) ) ) ) ; } }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , type_2 var_2 , type_3 errors ) { java.lang.string var_3 = string_1 ; java.lang.string var_4 = string_2 ; if ( errors . method_2 ( ) ) { return var_3 ; } type_4 var_5 = var_6 . method_3 ( var_2 ) ; var_6 . method_4 ( var_5 ) ; return var_4 ; }
[0]: public static int method_1 ( int [ ] [ ] a ) { int var_1 = var_2 ; for ( int i = 0 ; i < ( a. length ) ; i ++ ) { for ( int j = 0 ; j < ( a. length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > var_1 ) { var_1 = a [ i ] [ j ] ; } } } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { method_2 ( var_1 . method_3 ( int_1 ) ) . method_4 ( null ) ; type_1 < type_2 > result = var_2 . method_5 ( int_1 ) ; assertnotnull ( result ) ; asserttrue ( result . method_6 ( ) ) ; asserttrue ( result . method_7 ( ) . method_8 ( method_9 ( var_3 class , int_1 ) ) ) ; method_10 ( var_1 ) . method_3 ( int_1 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( ), new type_3 ( ) ) ; method_2 ( var_1. method_3 ( ) ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1. start ( var_2, ( i + string_1 ) ) ; asserttrue ( var_1. method_3 ( ) ) ; var_1. method_4 ( ) ; method_2 ( var_1. method_3 ( ) ) ; } }

************

************
tgt: public int method_1 ( type_1 < ? > var_1 , type_1 < ? > var_2 ) { if ( ( var_1 . end ) > ( var_2 . end ) ) return - 1 ; if ( ( var_2 . end ) > ( var_1 . end ) ) return 1 ; return 0 ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = type_1. method_2 ( ) ; var_2. method_3 ( var_1. method_4 ( ) ) ; var_2. method_5 ( ( ( var_1. method_6 ( ) ) == null ) ) ; var_2. method_7 ( var_1. method_8 ( ) ) ; var_2. method_9 ( var_1. method_10 ( ) ) ; var_2. method_11 ( var_1. method_12 ( ). size ( ) ) ; return var_2 ; }

************

************
tgt: private short method_1 ( long var_1 ) { if ( var_1 > ( var_2 . method_2 ( ) ) ) { return int_1 ; } else { return ( ( short ) ( ( data . get ( ( ( int ) ( var_1 ) ) ) ) & int_2 ) ) ; } }
[0]: public boolean method_1 ( int var_1, int var_2, int var_3, int var_4, int var_5 ) { if ( ( var_2 < var_1 ) || ( var_2 > ( var_1 * ( var_6 ) ) ) ) return false ; if ( ( var_4 < var_3 ) || ( var_4 > ( var_3 * ( var_6 ) ) ) ) return false ; if ( var_5 > var_4 ) return false ; return true ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_2 ( ) . method_2 ( var_3 ) . build ( ) ; var_4 . method_3 ( new java.util.arraylist < type_3 > ( ) , var_1 , var_5 ) ; if ( var_6 ) type_4 . method_4 ( var_7 , string_1 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { switch ( method_2 ( ) ) { case var_2 : method_3 ( var_1, string_1, 0, var_3 ) ; break ; case var_4 : method_3 ( var_1, null, 0, var_5 ) ; break ; case var_6 : method_3 ( var_1, null, 0, var_7 ) ; break ; case var_8 : method_3 ( var_1, null, 0, var_3 ) ; break ; default : break ; } }

************

************
tgt: private void method_1 ( ) { if ( ( type_1 . method_2 ( ) . method_3 ( ) ) == ( var_1 ) ) { if ( ( var_2 . method_4 ( ) ) == false ) var_2 . show ( ) ; } else { var_3 . method_5 ( true ) ; } }
[0]: protected byte [ ] method_1 ( java.util.arraylist < java.lang.integer > list ) { byte [ ] var_1 = new byte [ list. size ( ) ] ; java.util.iterator < java.lang.integer > iterator = list. iterator ( ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_1 [ i ] = iterator. method_2 ( ). method_3 ( ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( final type_1 < type_2 > var_1 ) throws java.lang.exception { if ( ! ( var_2 . get ( ) ) ) { if ( var_3 ) { var_1 . method_2 ( new type_3 ( var_4 , var_2 ) ) ; } var_4 . method_3 ( ) ; var_2 . set ( true ) ; } var_1 . method_4 ( var_4 ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( ) ; if ( type_2. method_2 ( var_1. method_3 ( 0 ) ) ) { return var_2 = method_4 ( var_1 ) ; } else { var_2. settext ( var_1 ) ; var_2. method_5 ( string_1 ) ; return var_2 ; } }

************

************
tgt: public void method_1 ( ) { var_4 = false ; type_1 . method_2 ( var_1 , string_1 ) ; var_2 . method_3 ( 0 ) ; var_3 = 0 ; type_1 . method_2 ( var_1 , ( string_2 + ( var_2 . method_4 ( ) ) ) ) ; method_5 ( ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { boolean var_2 = true ; int i = 0 ; java.lang.string var_3 = string_1 ; while ( i < ( var_1. length ( ) ) ) { if ( var_2 ) { var_3 += java.lang.string. method_2 ( var_1. method_3 ( i ) ) ; var_2 = false ; } else { var_2 = true ; } } return var_3 ; }

************

************
tgt: public void method_1 ( java.lang.object target , type_1 errors ) { type_2 var_1 = ( ( type_2 ) ( target ) ) ; if ( var_1 != null ) { long var_2 = var_1 . method_2 ( ) ; type_3 < type_4 > var_3 = var_4 . method_3 ( var_2 ) ; if ( ! ( var_3 . method_4 ( ) ) ) { errors . method_5 ( string_1 , string_2 , ( ( string_3 + var_2 ) + string_4 ) ) ; } } }
[0]: public void method_1 ( android.view.view view ) { to = var_1. gettext ( ). tostring ( ) ; android.content.intent intent = new android.content.intent ( this, var_2 class ) ; intent. method_2 ( string_1, var_3 ) ; intent. method_2 ( string_2, to ) ; method_3 ( intent ) ; }

************

************
tgt: protected java.lang.void method_1 ( java.lang.void ... var_1 ) { java.util.map < java.lang.string , java.lang.object > var_2 = new java.util.hashmap < > ( ) ; var_2 . put ( string_1 , start ) ; var_2 . put ( string_2 , end ) ; if ( end > ( - 1 ) ) { type_1 . method_2 ( ) . method_3 ( var_3 , var_4 , var_2 ) ; } return null ; }
[0]: private boolean method_1 ( type_1 [ ] c, int a, int b ) { for ( int i = a ; i < b ; i ++ ) { if ( type_2. method_2 ( c [ i ], c [ ( i + 1 ) ] ) ) { return false ; } } return true ; }

************

************
tgt: private synchronized void method_1 ( type_1 var_1 , long var_2 ) throws type_2 , type_3 { if ( ! ( var_1 . method_2 ( ) ) ) { long var_3 = var_2 ; long var_4 = ( type_4 . method_3 ( ) ) + var_2 ; do { method_4 ( var_3 ) ; if ( var_1 . method_2 ( ) ) { return ; } var_3 = var_4 - ( type_4 . method_3 ( ) ) ; } while ( var_3 > 0 ) ; throw new type_3 ( var_1 . method_5 ( ) ) ; } }
[0]: private void method_1 ( ) { this. var_1 = ( this. var_2 ) / ( ( ( this. var_3 ) / int_1 ) + 1 ) ; this. var_4 = ( this. var_1 ) * int_2 ; if ( ( this. var_1 ) < float_1 ) { this. var_1 = ( ( float ) ( float_1 ) ) ; } if ( ( this. var_4 ) < 1.0 ) { this. var_4 = ( ( float ) ( 1.0 ) ) ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { this . var_1 . set ( false ) ; try { this . var_2 . method_2 ( ) ; var_3 . method_3 ( ) ; } catch ( type_1 var_4 ) { type_2 . info ( string_1 , var_4 ) ; } if ( this . var_2 . method_4 ( ) ) { this . var_2 . method_1 ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( final type_1 var_1, final type_2 var_2 ) { var_3 = new java.util.arraylist < > ( ) ; assert var_1!= null ; assert var_2!= null ; var_4 = var_1 ; var_5 = null ; method_2 ( var_2 ) ; assert (! ( ( var_1. method_3 ( ). size ( ) )!= 0 ) ) || ( ( var_3. size ( ) )!= 0 ) ; return var_3 ; }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string id ; java.lang.string var_1 = var_2 . getid ( ) ; if ( ( var_1 != null ) && ( ( var_1 . length ( ) ) > 0 ) ) { id = var_3 . replace ( var_1 , string_1 ) ; } else { id = method_2 ( ) ; var_2 . method_3 ( id ) ; } id += string_2 ; return id ; }
[0]: private void method_1 ( ) { var_1 = new type_1 ( this ) ; var_1. method_2 ( var_2, var_3, var_3, var_4, var_5 ) ; var_1. method_3 ( this, this, this, this ) ; var_6 = ( ( android.widget.linearlayout ) ( method_4 ( var_7 ) ) ) ; android.view.view var_8 = method_4 ( var_9 ) ; var_8. method_5 ( true ) ; var_10 = ( ( type_2 ) ( method_4 ( var_11 ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { final type_1 var_3 = new type_1 ( var_1 , var_2 , var_5 ) ; var_6 . method_2 ( var_3 , new type_2 ( ) { public void method_3 ( type_3 var_7 ) { var_3 . method_4 ( var_7 ) ; } } ) ; }
[0]: public java.lang.long method_1 ( java.lang.string var_1, java.lang.long var_2 ) throws type_1 { type_2 var_3 = new type_2 ( var_1, ( var_2!= null? var_2. method_2 ( ) : - 1 ) ) ; java.lang.long var_4 = this. var_5. get ( var_3 ) ; if ( var_4!= null ) return var_4 ; var_4 = method_3 ( var_1, var_2 ) ; this. var_5. put ( var_3, var_4 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { assert var_1 != null ; final type_2 var_2 = type_3 . method_2 ( var_1 . method_3 ( ) ) ; if ( ( var_3 ) == var_2 ) { var_3 = null ; } else if ( ! ( method_4 ( ) . contains ( var_2 ) ) ) { var_4 = var_2 ; } }
[0]: public boolean method_1 ( int id ) { boolean var_1 = false ; int var_2 = var_3. method_2 ( ) ; if ( var_2 <= int_1 ) { int count = var_3. method_1 ( id ) ; if ( count > 0 ) { var_1 = true ; } } return var_1 ; }

************

************
tgt: protected void method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) { } else if ( var_1 instanceof byte [ ] ) { var_2 . method_3 ( var_3 , ( ( byte [ ] ) ( var_1 ) ) ) ; } else if ( var_1 instanceof java.lang.exception ) { var_2 . method_2 ( var_3 , ( ( java.lang.exception ) ( var_1 ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. i ( var_2, string_1 ) ; type_2 var_3 = new type_2 ( ( var_4 + 1 ) ) ; var_3. method_2 ( var_5. method_3 ( ( var_4 + 1 ) ). method_4 ( ) ) ; if ( var_6. method_5 ( ) ) { var_6. method_6 ( false ) ; var_3. method_7 ( false ) ; } else { var_6. method_6 ( true ) ; var_3. method_7 ( true ) ; } var_5. method_8 ( var_3 ) ; }

************

************
tgt: public int method_1 ( int var_1 ) { var_2 ^= ( var_2 ) < < int_1 ; var_2 ^= ( var_2 ) > > > int_2 ; var_2 ^= ( var_2 ) < < int_3 ; return ( ( int ) ( java.lang.math.abs ( ( ( var_2 ) % var_1 ) ) ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { new type_1 ( ). execute ( var_2, var_3 ) ; try { var_4. remove ( string_1 ) ; var_4. put ( string_1, var_3 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_2 ( ) ; } var_6. settext ( string_2 ) ; var_7. method_3 ( var_8 ) ; var_9. method_3 ( var_8 ) ; var_10. method_3 ( var_11 ) ; type_2. method_4 ( string_3, var_4. tostring ( ) ) ; }

************

************
tgt: public static void response ( java.lang.string name , java.lang.string var_1 ) { if ( var_2 ) { type_1 . method_1 ( ( ( ( string_2 + string_3 ) + name ) + string_4 ) ) ; type_1 . method_1 ( ( string_5 + var_1 ) ) ; type_1 . method_1 ( string_6 ) ; type_1 . method_1 ( string_1 ) ; } }
[0]: public boolean method_1 ( int index ) { java.util.list var_1 = method_2 ( ) ; try { type_1. delete ( path ) ; } catch ( java.io.ioexception var_2 ) { java.util.logging.logger.getlogger ( var_3 class. getname ( ) ). method_3 ( var_4, null, var_2 ) ; return false ; } java.lang.system.out.print ( ( ( string_1 + index ) + string_2 ) ) ; java.lang.system.out.println ( ( string_3 + ( var_1. get ( index ) ) ) ) ; var_1. remove ( index ) ; method_4 ( var_1 ) ; return true ; } }

************

************
tgt: public void method_1 ( int var_1 , int field , double var_2 , int var_3 ) { if ( ( ( var_4 ) == field ) || ( ( var_5 ) == field ) ) java.lang.system.out.println ( ( ( ( ( ( string_1 + var_1 ) + string_2 ) + field ) + string_3 ) + var_2 ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( string_1, string_2 ) ; java.lang.string [ ] var_2 = var_1. method_1 ( int_1 ) ; for ( int i = 0 ; i < int_2 ; i ++ ) { java.lang.system.out.print ( ( ( var_2 [ i ] ) + string_3 ) ) ; } }

************

************
tgt: boolean method_1 ( ) { if ( ( var_1 . method_2 ( var_2 ) ) || ( ! ( method_3 ( ) . method_4 ( ) ) ) ) { return false ; } int var_3 = ( this . method_5 ( ) ) ? main . method_6 ( ) . method_7 ( ) : method_6 ( ) . method_7 ( ) ; return ( var_3 - ( method_3 ( ) . method_7 ( ) ) ) < int_1 ; }
[0]: public java.util.list < type_1 > execute ( ) { if ( ( end ) == null ) { if ( ( var_1 ) == 0 ) { return var_2. method_1 ( var_3, start, end ) ; } else { return var_2. method_2 ( var_3, start, end, var_1 ) ; } } else { if ( ( var_1 ) == 0 ) { return var_2. method_3 ( var_3, start ) ; } else { return var_2. method_4 ( var_3, start, var_1 ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) . equals ( string_1 ) ) { type_2 . method_3 ( method_4 ( ) , string_2 , var_2 , var_3 , true ) ; } if ( var_1 instanceof type_3 ) { type_4 var_4 = ( ( type_3 ) ( var_1 ) ) . method_5 ( ) ; type_5 . method_6 ( method_4 ( ) , var_4 ) ; } }
[0]: public type_1 method_1 ( final type_1 var_1, final type_2 var_2 ) throws type_3 { type_1 var_3 ; if ( var_1 == null ) { var_3 = var_4. method_2 ( ) ; } else { var_3 = var_1 ; } final java.lang.string name = var_2. getvalue ( ) ; final java.lang.string var_5 = var_2. getvalue ( string_1 ) ; type_4. info ( string_2, var_3. method_3 ( ), name, var_5 ) ; return var_3. method_4 ( name, var_5 ) ; }

************

************
tgt: public void method_1 ( java.lang.string name , int var_1 ) { for ( type_1 var_2 : var_3 . values ( ) ) { type_2 obj = var_2 . method_2 ( var_4 ) ; if ( var_1 == 0 ) { method_3 ( obj , name ) . method_1 ( 1 ) ; } method_3 ( obj , name ) . method_1 ( var_1 ) ; } }
[0]: public java.util.map < java.lang.string, double [ ] > method_1 ( int var_1 ) { this. method_2 ( var_1 ) ; java.util.map < java.lang.string, double [ ] > var_2 = new java.util.hashmap < > ( ) ; var_2. put ( string_1, this. var_3. get ( ( var_1 - 1 ) ). method_3 ( ) ) ; var_2. put ( string_2, this. var_3. get ( ( var_1 - 1 ) ). method_4 ( ) ) ; return var_2 ; }

************

************
tgt: public final java.lang.object method_1 ( java.lang.object ... args ) { try { method_2 ( ) . method_3 ( this , args ) ; java.lang.object result = method_4 ( args ) ; if ( type_1 . method_5 ( ) ) { result = var_1 . method_6 ( result ) ; } return result ; } catch ( java.lang.throwable t ) { throw type_2 . method_7 ( var_1 . method_8 ( t ) ) ; } }
[0]: public type_1 method_1 ( java.lang.long var_1 ) throws java.lang.exception { java.util.list < type_2 > var_2 = ( ( java.util.list < type_2 > ) ( var_3. get ( var_1. tostring ( ) ) ) ) ; type_1 var_4 = new type_1 ( string_1, string_2, var_2 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( ) { try { java.lang.string string = new type_1 ( getcontext ( ) , null ) . execute ( ) . get ( ) ; assertnotnull ( string ) ; asserttrue ( ( ( string . length ( ) ) > 0 ) ) ; } catch ( type_2 | type_3 var_1 ) { var_1 . method_2 ( ) ; } }
[0]: public java.lang.string method_1 ( int var_1 ) { if ( ( var_2. method_2 ( var_1 ) ) == char_1 ) { return string_1 ; } java.lang.string var_3 = string_2 ; boolean var_4 = false ; var_3 = var_2. method_3 ( var_1 ) ; if ( var_3. contains ( string_3 ) ) ( this. var_5 ) ++ ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 < type_3 < java.lang.string , java.lang.long > > out ) throws java.lang.exception { if ( ( var_1 . method_2 ( ) ) > 0 ) { out . method_3 ( new type_3 ( var_1 . method_4 ( ) . get ( 0 ) . method_5 ( ) , 1l ) ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; method_3 ( var_1. method_4 ( ) ). method_5 ( new type_3 ( ) ) ; type_4. assertthat ( new type_5 ( null ). method_6 ( var_1 ). method_7 ( var_3 ) ). method_8 ( false ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = 0 ; switch ( var_2 ) { case char_1 : var_1 = ( var_3 ) * ( var_4 ) ; break ; case char_2 : var_1 = ( var_5 ) * ( var_4 ) ; break ; default : var_1 = ( var_6 ) * ( var_4 ) ; break ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 p = ( ( type_2 ) ( var_1. method_2 ( ) ) ) ; var_2. method_3 ( ) ; p. method_4 ( ). method_5 ( p. method_6 ( ) ) ; var_3. method_7 ( var_1. method_2 ( ). method_8 ( ), var_1. method_2 ( ). method_9 ( ) ) ; }

************

************
tgt: public static synchronized void method_1 ( android.content.context context , java.lang.string key , java.lang.string value , boolean commit ) { type_1 . method_2 ( context ) ; var_1 . method_1 ( key , value ) ; if ( commit ) { var_1 . commit ( ) ; } if ( ( var_2 ) != null ) { var_3 . put ( key , value ) ; } }
[0]: public type_1 method_1 ( int var_1 ) { type_2 var_2 = var_3. method_2 ( string_1 ) ; java.lang.string var_4 = new java.lang.integer ( var_1 ). tostring ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) if ( var_2. get ( i ). method_3 ( string_1 ). getvalue ( ). equals ( var_4 ) ) return new type_1 ( var_2. get ( i ) ) ; return null ; }

************

************
tgt: public void method_1 ( final byte [ ] data ) { int var_1 = data . length ; method_2 ( var_1 ) ; method_3 ( ( ( position ) + var_1 ) ) ; var_2 . method_4 ( type_1 . method_5 ( data ) , ( ( var_3 ) + ( position ) ) , var_1 ) ; position += var_1 ; end = ( ( position ) > ( end ) ) ? position : end ; }
[0]: public type_1 method_1 ( type_2 var_1, android.view.view view, type_1 params ) { var_2 = true ; type_1 b = var_1. method_2 ( view, params ) ; if ( b!= null ) params = b ; var_2 = false ; type_3 var_3 = method_3 ( var_1 ) ; if ( var_3!= null ) { b = var_3. method_4 ( var_1, view, params ) ; if ( b!= null ) params = b ; } return params ; }

************

************
tgt: private void method_1 ( final type_1 var_1 , final java.lang.object var_2 , final type_2 buffer ) { final java.lang.string classname = method_2 ( var_1 ) ; java.lang.string var_5 = method_5 ( classname , var_2 ) ; if ( var_5 == null ) { var_5 = string_1 ; } buffer . method_6 ( type_3 . method_7 ( var_5 ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; boolean result = var_1. method_2 ( ) ; method_3 ( result ) ; var_1. method_4 ( ) ; result = var_1. method_2 ( ) ; method_3 ( result ) ; var_1. method_5 ( ) ; result = var_1. method_2 ( ) ; method_3 ( result ) ; var_1. method_6 ( ) ; result = var_1. method_2 ( ) ; asserttrue ( result ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , 1 , int_1 , int_2 ) ; type_1 . method_2 ( var_2 , 1 , int_2 , int_3 ) ; var_1 . add ( int_3 ) ; var_1 . remove ( int_1 ) ; type_2 . asserttrue ( var_2 . equals ( var_1 ) ) ; type_2 . assertequals ( var_2 , var_1 ) ; }
[0]: public void method_1 ( final java.util.map < type_1, java.util.set < type_2 <? > > > var_1 ) { type_3. method_2 ( this. var_2. method_3 ( ), new type_4 < type_1, java.lang.object > ( ) { public java.lang.object method_4 ( type_1 var_3 ) { var_2. get ( var_3 ). method_5 ( var_1. get ( var_3 ) ) ; return null ; } } ) ; }

************

************
tgt: public void method_1 ( ) { this . state = string_1 ; method_2 ( string_2 ) ; method_3 ( ) ; try { java.lang.system.out.println ( ( string_3 + ( this . state ) ) ) ; var_2 . method_4 ( string_1 , this . var_3 ) ; } catch ( java.lang.exception var_4 ) { method_2 ( string_4 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2. method_2 ( string_1, string_2 ) ; var_1. method_3 ( var_2. method_4 ( ). method_5 ( var_3 [ 1 ] ) ) ; type_3 params = new type_3 ( var_4, var_4 ) ; var_5 = ( ( int ) ( var_6. method_6 ( 0 ). method_7 ( ) ) ) ; var_7 = var_8 ; var_9. method_8 ( var_1, params ) ; var_10 = var_9. method_6 ( 1 ) ; }

************

************
tgt: public void method_1 ( java.lang.charsequence var_1 , int i , int var_2 , int var_3 ) { if ( ! ( var_5 . gettext ( ) . tostring ( ) . isempty ( ) ) ) { var_6 . method_2 ( ) ; var_7 . settext ( null ) ; var_7 . method_3 ( var_8 ) ; } }
[0]: public java.util.map < java.lang.string, java.lang.integer > method_1 ( ) { java.util.map < java.lang.string, java.lang.integer > var_1 = new java.util.hashmap < java.lang.string, java.lang.integer > ( var_2. method_2 ( ). intvalue ( ) ) ; java.util.set < java.lang.string > keys = var_2. method_3 ( this. var_3 ) ; java.util.iterator < java.lang.string > var_4 = keys. iterator ( ) ; while ( var_4. method_4 ( ) ) { java.lang.string key = var_4. method_5 ( ) ; var_1. put ( key, ( - 1 ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { type_1 var_1 = var_2 . delete ( var_3 ) ; method_2 ( var_1 ) ; assertequals ( ( ( java.lang.integer ) ( var_3 ) ) , var_1 . method_3 ( ) ) ; type_1 var_4 = var_2 . get ( var_3 ) ; method_4 ( var_4 ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( string_1, string_2 ) ; while ( ( var_1. method_3 ( ) ) == ( var_2 ) ) { short [ ] data = new short [ ( var_3 ) / int_1 ] ; var_1. method_4 ( data, 0, ( ( var_3 ) / int_1 ) ) ; type_1. method_2 ( string_1, string_3 ) ; var_4. method_5 ( data ) ; } }

************

************
tgt: public void method_1 ( type_1 < java.util.arraylist < type_2 > > var_1 , type_3 < java.util.arraylist < type_2 > > response ) { var_2 . method_2 ( response . method_3 ( ) ) ; var_3 = var_2 . method_4 ( ) ; java.util.collections.sort ( var_3 ) ; var_4 . method_5 ( var_3 ) ; var_5 . method_6 ( var_6 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if (! ( this. type_2. contains ( var_1 ) ) ) { throw new type_3 ( string_1 ) ; } else { type_4. add ( var_1 ) ; var_1. method_2 ( string_2 ) ; type_2. remove ( var_1 ) ; return true ; } }

************

************
tgt: private void method_1 ( ) { int var_1 = var_8 ; for ( type_1 var_2 : var_3 ) { var_1 += var_2 . method_2 ( ) ; } for ( type_2 var_4 : var_5 ) { var_1 += var_4 . method_2 ( ) ; } for ( type_3 var_6 : var_7 ) { var_1 += var_6 . method_2 ( ) ; } this . length = var_1 ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; method_2 ( ). method_3 ( ) ; if ( ( (! ( var_1 ) ) && (! ( var_2 ) ) ) && (! ( var_3 ) ) ) method_4 ( ) ; else { if ( var_3 ) method_5 ( ) ; if ( var_1 ) method_6 ( ) ; if ( var_2 ) method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { long var_2 = var_1 . method_2 ( ) ; type_2 < java.lang.long , java.util.linkedlist < type_1 > > var_3 = method_3 ( var_1 . method_4 ( ) ) ; if ( var_3 . method_5 ( var_2 ) ) { java.util.linkedlist < type_1 > var_4 = var_3 . get ( var_2 ) ; var_4 . add ( var_1 ) ; } else { java.util.linkedlist < type_1 > var_4 = new java.util.linkedlist ( ) ; var_4 . add ( var_1 ) ; var_3 . put ( var_2 , var_4 ) ; } }
[0]: public void init ( type_1 event ) { type_2. method_1 ( new type_3 ( ) ) ; type_4. method_2 ( ). method_3 ( ). method_1 ( new type_5 ( ) ) ; type_4. method_2 ( ). method_3 ( ). method_1 ( new type_6 ( ) ) ; type_7. info ( type_8. method_4 ( string_1 ) ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { return ( ( ( var_1 >= ( var_3 ) ) && ( var_1 <= ( ( var_3 ) + ( var_4 ) ) ) ) && ( var_2 >= ( var_5 ) ) ) && ( var_2 <= ( ( var_5 ) + ( height ) ) ) ; }
[0]: public boolean contains ( java.lang.string var_1 ) { if ( ( var_2 )!= null ) { int var_3 = var_1. compareto ( var_2 ) ; if ( var_3 == 0 ) return true ; else if ( ( var_3 < 0 ) && ( ( var_4 )!= null ) ) return var_4. contains ( var_1 ) ; else if ( ( var_3 > 0 ) && ( ( var_4 )!= null ) ) return var_5. contains ( var_1 ) ; } return false ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 var_3 , type_2 operation ) { type_3 var_4 = new type_3 ( ) ; var_4 . method_2 ( string_1 ) ; type_4 var_5 = new type_4 ( var_1 , var_2 , var_3 ) ; var_4 . method_4 ( var_5 ) ; operation . method_5 ( var_4 ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, type_2 var_2 ) { if ( ( var_1. method_2 ( string_1 ) )!= null ) { var_2. method_3 ( string_2 ) ; var_1. method_4 ( string_2, string_3 ) ; return string_4 ; } else { var_1. method_3 ( string_2 ) ; var_1. method_3 ( string_5 ) ; var_2. method_4 ( string_6, var_2. method_5 ( string_6 ) ) ; return string_7 ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_2 . size ( ) ) == 0 ) { return ; } if ( ( var_1 ) == 0 ) { var_1 = var_2 . size ( ) ; } if ( ( var_1 ) > 0 ) { ( var_1 ) -- ; } java.lang.string text = var_2 . get ( var_1 ) ; var_3 . settext ( text ) ; var_3 . method_2 ( text . length ( ) ) ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.object data ) { final int var_2 = ( ( java.lang.string ) ( data ) ). length ( ) ; if ( var_2!= ( var_3 ) ) { type_2. method_2 ( getactivity ( ). method_3 ( ), method_4 ( ). getstring ( var_4 ), var_5 ). show ( ) ; return false ; } return true ; }

************

************
tgt: protected void method_1 ( ) throws type_1 { java.util.collection < type_2 > var_1 = ( method_2 ( ) ) ? method_3 ( ) . method_4 ( ) : method_3 ( ) . method_5 ( ) ; for ( type_3 var_2 : var_3 ) { type_4 var_4 = new type_5 ( var_2 . method_6 ( ) ) ; for ( type_2 var_5 : var_1 ) { if ( var_4 . method_7 ( var_5 ) ) { method_8 ( var_2 , var_5 ) ; } } } }
[0]: private void method_1 ( ) { type_1 var_1 = getintent ( ). method_2 ( ) ; if ( ( var_1. get ( string_1 ) )!= null ) { var_2 = new type_2 ( ( ( java.lang.integer [ ] [ ] ) ( var_1. get ( string_1 ) ) ) ) ; } else { var_2 = new type_2 ( ) ; } var_2. start ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = var_3 . method_2 ( ) ; if ( var_2 != null ) { type_4 a = var_4 . method_3 ( var_2 . method_4 ( ) ) ; if ( a != null ) { type_5 . method_7 ( var_1 , a . getid ( ) ) ; method_8 ( a . getid ( ) ) ; } } return new type_1 ( var_6 , string_1 , string_2 ) ; }
[0]: public static void method_1 ( final type_1 context, final java.lang.string var_1, final type_2 params ) { if ( context. method_2 ( ) ) { type_3. method_3 ( var_2, ( string_1 + var_1 ) ) ; context. method_4 ( var_3 class ). method_5 ( var_1, params ) ; } else { type_3. method_3 ( var_2, string_2 ) ; } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = null ; type_3 var_3 = null ; java.lang.string var_4 = string_1 + string_2 ; try { var_3 = method_2 ( ) ; } catch ( java.lang.classnotfoundexception var_5 ) { return new java.lang.string ( var_5 . method_3 ( ) ) ; } catch ( type_4 var_5 ) { return new java.lang.string ( var_5 . method_3 ( ) ) ; } catch ( type_5 var_5 ) { return new java.lang.string ( var_5 . method_3 ( ) ) ; } return string_3 ; }
[0]: public void handle ( type_1 var_1 ) throws java.io.ioexception { var_2. method_1 ( string_1 ) ; java.util.scanner var_3 = new java.util.scanner ( method_2 ( ) ). method_3 ( string_2 ) ; java.lang.string response = ( var_3. method_4 ( ) )? var_3. method_5 ( ) : string_3 ; var_1. method_6 ( int_1, response. length ( ) ) ; type_2 var_4 = var_1. method_7 ( ) ; var_4. method_8 ( response. method_9 ( ) ) ; var_4. method_10 ( ) ; var_4. method_11 ( ) ; }

************

************
tgt: private void method_1 ( ) { int id = method_2 ( ) ; type_1 var_1 = var_2 . method_3 ( id ) ; if ( var_1 == null ) { var_2 . method_4 ( new type_1 ( id , method_5 ( ) , method_6 ( ) , method_7 ( ) , method_8 ( ) , method_9 ( ) ) ) ; } else { var_3 . method_10 ( string_1 , id ) ; java.lang.system.out.println ( var_1 ) ; } }
[0]: public int method_1 ( java.lang.string text ) { int sum = 0 ; char [ ] var_1 = text. method_2 ( ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) sum = sum + ( var_1 [ i ] ) ; return int_1 + sum ; }

************

************
tgt: public void method_1 ( final type_1 var_1 , type_2 var_2 ) { this . var_1 = var_1 ; this . var_2 = var_2 ; java.util.list < type_3 > var_3 = method_2 ( ) ; int i = 0 ; for ( type_3 var_4 : var_3 ) { method_1 ( i , var_4 , false , true ) ; i ++ ; } if ( method_3 ( ) ) var_1 . method_4 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) throws type_3 { type_4 var_3 = ( ( type_4 ) ( var_2. get ( string_1 ) ) ) ; var_1. method_2 ( var_3. intvalue ( ) ) ; type_2 var_4 = ( ( type_2 ) ( var_2. get ( string_2 ) ) ) ; java.lang.string name = ( ( java.lang.string ) ( var_4. get ( ""name"" ) ) ) ; var_1. method_3 ( name ) ; }

************

************
tgt: private void method_1 ( boolean add ) { var_1 = value ; if ( add ) { value = type_1 . min ( var_2 , ( ( value ) + ( step ) ) ) ; } else { value = type_1 . method_2 ( var_3 , ( ( value ) - ( step ) ) ) ; } if ( ( var_4 ) != null ) { var_4 . method_3 ( this , value , var_1 , var_3 , var_2 , false ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( ) ; try { var_1. method_1 ( ) ; } catch ( java.lang.exception var_2 ) { var_2. method_3 ( ) ; } finally { type_1. method_4 ( ) ; } try { java.lang.thread. method_5 ( var_1. method_6 ( ) ) ; } catch ( java.lang.exception var_2 ) { var_2. method_3 ( ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; int var_2 ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2 = ( var_1 . method_2 ( var_4 . size ( ) ) ) + 1 ; java.lang.system.out.println ( ( string_1 + var_2 ) ) ; var_3 . add ( var_4 . get ( ( var_2 - 1 ) ) ) ; } return var_3 ; }
[0]: public void method_1 ( ) { this. var_1 = ( ( type_1 ) ( this. var_2. method_2 ( ). method_3 ( ) ) ) ; java.lang.system.out.println ( string_1 ) ; type_2 var_3 = new type_2 ( this. var_4, this. var_5, this. var_6, this. var_1, this. var_7 ) ; type_3 var_8 = new type_3 ( var_3 ) ; var_8. start ( ) ; }

************

************
tgt: public double [ ] method_1 ( double [ ] var_1 ) { double [ ] var_2 = new double [ var_3 ] ; if ( ( var_3 ) == ( var_4 ) ) { var_2 [ var_5 ] = var_1 [ var_6 ] ; } var_2 [ var_7 ] = var_1 [ var_8 ] ; var_2 [ var_9 ] = var_1 [ var_10 ] ; var_2 [ var_11 ] = var_1 [ var_12 ] ; var_2 [ var_13 ] = var_1 [ var_14 ] ; return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; float var_3 = 1 / ( var_4 ) ; var_1. method_3 ( ). method_4 ( var_3, var_3, var_3 ) ; var_2 = var_1. method_2 ( ) ; var_1. method_3 ( ). method_5 ( ( - ( var_5. x ) ), ( - ( var_5. y ) ), ( ( - ( var_6 ) ) - ( float_1 * ( var_4 ) ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( var_5 ) == null ) return ; if ( ( var_1 . gettype ( ) ) == ( var_2 ) ) { float var_3 = event . values [ 0 ] ; float var_4 = var_3 * ( - float_1 ) ; var_5 . method_2 ( ( ( int ) ( var_4 ) ) ) ; } }
[0]: public boolean method_1 ( type_1 [ ] [ ] var_1, int var_2, int var_3 ) { boolean result = false ; type_1 state = var_1 [ var_2 ] [ var_3 ] ; if ( ( state == ( var_4 ) ) || ( state == ( var_5 ) ) ) { result = true ; } return result ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( method_2 ( ) ) == ( var_1 . method_2 ( ) ) ) && ( ( method_3 ( ) . method_4 ( ) ) == ( var_1 . method_3 ( ) ) ) ) && ( ( method_5 ( ) ) == ( var_1 . method_6 ( ) ) ) ) && ( ( method_6 ( ) ) == ( var_1 . method_5 ( ) ) ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.net.url var_2, java.lang.string var_3 ) { type_2. assertnotnull ( var_1, string_1 ) ; type_2. assertnotnull ( var_2, string_2 ) ; type_2. assertnotnull ( var_3, string_3 ) ; java.lang.string var_4 = type_3. method_2 ( var_2 ) ; return new type_1 ( var_5, var_1, var_3, var_4 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . method_1 ( var_1 ) ; if ( var_2 != null ) { var_4 . method_2 ( string_1 , var_2 . getid ( ) ) ; var_5 . method_2 ( string_2 , var_2 . getid ( ) ) ; return true ; } else { return false ; } }
[0]: public void method_1 ( float var_1, float var_2, float var_3 ) { var_4. method_2 ( ( - var_1 ) ) ; new type_1 ( var_4, var_5. method_3 ( ), var_2, var_3, var_1, var_6, var_7 ). method_4 ( var_8 ) ; java.lang.system.out.println ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 ) ) return ; while ( ( ( type_2 . method_2 ( var_3 ) ) != null ) && ( ( ( ( type_1 ) ( type_2 . method_2 ( var_3 ) ) ) . gettext ( ) . method_3 ( 0 ) ) == char_1 ) ) { method_4 ( ) ; } }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; switch ( var_1 ) { case int_1 : if ( ( var_2 == ( var_3 ) ) && ( data!= null ) ) { java.util.arraylist < java.lang.string > result = data. method_2 ( var_4 ) ; var_5. settext ( result. get ( 0 ) ) ; new type_1 ( ). execute ( var_6, result. get ( 0 ) ) ; } break ; } } }

************

************
tgt: public void method_1 ( boolean var_1 ) { var_2 . method_2 ( var_3 ) ; var_4 = new type_1 ( this ) ; var_2 . method_3 ( var_4 ) ; var_5 = new type_2 ( var_1 , var_7 , this ) ; var_2 . method_4 ( var_5 ) ; }
[0]: public static void method_1 ( boolean var_1 ) { try { java.io.filereader var_2 = new java.io.filereader ( string_1 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_2 ) ; java.lang.string line ; while ( ( line = var_3. method_2 ( ) )!= null ) { java.lang.system.out.println ( line ) ; var_2. method_3 ( ) ; } } catch ( java.io.ioexception var_4 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { for ( type_1 var_1 : this . method_2 ( ) ) { if ( var_1 . method_3 ( ) ) { return var_1 ; } } return ( ( this . method_2 ( ) ) != null ) && ( ( this . method_2 ( ) . size ( ) ) > 0 ) ? this . method_2 ( ) . get ( 0 ) : null ; }
[0]: public void method_1 ( type_1 var_1, boolean remove, boolean var_2 ) { if ( (! remove ) && (! var_2 ) ) { method_2 ( var_1 ) ; method_3 ( ) ; } else if (! var_2 ) method_4 ( var_1. method_5 ( ) ) ; else if ( remove && var_2 ) { method_4 ( var_1. method_5 ( ) ) ; method_3 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws type_1 { java.lang.string var_2 = var_3 . method_2 ( ) ; var_3 . method_3 ( string_1 ) ; java.lang.string [ ] var_4 = var_1 . split ( string_1 ) ; for ( java.lang.string var_5 : var_4 ) { if ( ( var_5 . length ( ) ) > 0 ) { try { var_3 . method_3 ( var_5 ) ; } catch ( type_1 var_6 ) { var_3 . method_4 ( var_5 ) ; var_3 . method_3 ( var_5 ) ; } } } var_3 . method_3 ( var_2 ) ; }
[0]: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; if (! ( var_2. isempty ( ) ) ) { return new java.util.arraylist < java.lang.string > ( var_2. method_2 ( ) ) ; } else { for ( type_1 var_3 : var_4. method_3 ( ). get ( 0 ). method_4 ( ) ) { var_1. add ( var_3. getid ( ) ) ; } } return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.string.format ( string_1 , this . var_2 . method_2 ( ) , this . var_3 . method_2 ( ) , this . var_4 . method_2 ( ) , this . var_5 . method_2 ( ) ) ; return var_1 ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( type_2 var_2 : this. var_2 ) { var_1. method_2 ( var_2. method_3 ( ) ) ; var_1. method_2 ( var_2. method_4 ( ) ) ; } return var_1 ; }

************

************
tgt: private int method_1 ( type_1 node , int var_1 , int var_2 ) { return ( ( ( ( var_3 ) + ( var_4 ) ) + ( ( ( var_5 ) * ( node . method_2 ( ) ) ) * ( var_6 ) ) ) + ( var_1 * ( var_6 ) ) ) + var_2 ; }
[0]: private int method_1 ( type_1 < type_2, type_3 >. var_1 node ) { int var_2 = 0 ; int var_3 = 0 ; if ( ( var_4 )!= null ) { var_2 = method_1 ( var_4 ) ; } if ( ( var_5 )!= null ) { var_3 = method_1 ( var_5 ) ; } return 1 + ( type_4. method_2 ( var_2, var_3 ) ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.io.bufferedreader var_1 ) { java.lang.string line = null ; try { while ( ( line = var_1 . method_2 ( ) ) != null ) { if ( ( line . length ( ) ) > 0 ) { return ( line + string_1 ) + ( type_1 . method_3 ( var_1 ) ) ; } } } catch ( java.io.ioexception var_2 ) { return null ; } return null ; }
[0]: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3. method_2 ( var_2, var_3 ) ; this. var_4 = type_4. method_3 ( ) ; this. var_5 = new type_5 ( var_4, var_1, type_3. method_4 ( var_1, var_6, var_7, var_3 ) ) ; type_6. method_5 ( this. var_4, var_2, var_6, var_7, var_3 ) ; }

************

************
tgt: private type_1 method_1 ( ) { synchronized ( var_1 ) { while ( ( var_1 . isempty ( ) ) && ( var_2 . get ( ) ) ) { try { var_1 . method_2 ( ) ; } catch ( type_2 var_3 ) { } } if ( ! ( var_2 . get ( ) ) ) { return null ; } return var_1 . method_3 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1, type_2 data, int position ) { var_1. method_2 ( data. method_3 ( ) ) ; var_1. settext ( data. method_4 ( ) ) ; var_1. method_5 ( data. method_3 ( ). substring ( 0, 1 ) ) ; var_1. method_2 ( data. method_3 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { method_2 ( ) ; if ( ! ( type_1 . method_3 ( method_4 ( ) ) ) ) { type_2 . method_5 ( method_4 ( ) , string_1 , var_1 ) . show ( ) ; method_6 ( ) ; } }
[0]: public void method_1 ( ) { if (! ( this. var_1 ) ) { return ; } type_1 var_2 ; try { var_2 = new type_1 ( new java.io.fileoutputstream ( var_3 ) ) ; var_2. method_2 ( this. data ) ; var_2. method_2 ( this. var_4 ) ; var_2. method_3 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_4 ( ) ; } }

************

************
tgt: public static boolean method_1 ( type_1 var_1 , type_2 type , int x , int y , int var_2 ) { for ( type_3 var_3 : type_4 . method_2 ( type , var_1 , x , y , var_2 , 0 ) ) { if ( var_3 == null ) return false ; for ( type_5 var_4 : var_3 . method_3 ( ) ) if ( var_4 . method_4 ( type ) ) return false ; } return true ; }
[0]: public static boolean method_1 ( type_1 var_1 ) { boolean var_2 = true ; if ( var_1 == null ) return true ; for ( int i = 0 ; i < ( var_1. method_2 ( ) ) ; i ++ ) { if ( ( var_1. method_3 ( i ) )!= null ) return false ; } return var_2 ; }

************

************
tgt: private void method_1 ( int var_1 ) { int var_2 = method_2 ( var_1 ) ; if ( ( var_2 < 0 ) && ( var_2 > ( - ( var_3 ) ) ) ) { var_4 . method_3 ( var_1 ) ; var_5 = var_6 ; } else if ( ( var_2 > 0 ) && ( ( var_5 ) != ( var_7 ) ) ) { var_4 . method_4 ( var_1 ) ; var_5 = var_7 ; } }
[0]: private void split ( type_1 message ) { type_2 < type_3 > var_1 = this. var_2. get ( var_3 ) ; int var_4 = message. start ; for ( type_3 var_5 : var_1 ) { var_6. method_1 ( new type_1 ( this, var_6, var_4, ( ( var_4 + ( var_5. i ) ) - 1 ), var_7 ) ) ; var_4 += var_5. i ; } }

************

************
tgt: public java.lang.boolean method_1 ( type_1 field ) { if ( ( field . method_2 ( ) ) == null ) { java.lang.system.out.println ( field . method_2 ( ) ) ; int y = field . method_3 ( ) ; int x = field . method_4 ( ) ; type_2 var_1 = new type_2 ( x , y , int_1 , int_1 ) ; var_1 . method_1 ( ) ; field . method_5 ( this ) ; return true ; } return false ; }
[0]: protected final type_1 method_1 ( java.lang.object target ) { type_2 var_1 = ( ( type_3 ) ( target ) ). method_2 ( ) ; if ( var_1!= null ) { if ( var_1 instanceof type_4 ) { return ( ( type_4 ) ( var_1 ) ). method_3 ( ) ; } else { if ( var_2 ) { var_3. method_4 ( string_1, var_4 class. getname ( ) ) ; } } } return null ; }

************

************
tgt: private int method_1 ( final java.lang.string var_1 ) { if ( var_2 . method_2 ( var_1 ) ) { return var_2 . get ( var_1 ) ; } else { int var_3 = var_2 . size ( ) ; var_2 . put ( var_1 , var_3 ) ; return var_3 ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( string_1, ( ( string_2 + string_3 ) + ( var_1 ) ) ) ; if (! ( var_2. equals ( string_4 ) ) ) method_3 ( var_2 ) ; final type_2 var_3 = new type_2 ( ) { public void method_4 ( ) { if ( method_5 ( ) ) method_6 ( ) ; } } ; var_4 = var_5. method_7 ( var_3, 0, int_1, var_6 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = method_3 ( ) ; type_3 var_4 = var_3 . method_4 ( ) ; type_4 var_5 = new type_4 ( ) ; java.lang.string var_6 = var_5 . tostring ( ) ; var_4 . replace ( var_7 , var_5 , var_6 ) ; var_4 . commit ( ) ; }
[0]: public static < type_1 > java.util.list < type_1 > method_1 ( type_2 < type_1 >... var_1 ) { java.util.list < type_1 > results = new java.util.arraylist < > ( ) ; for ( type_2 < type_1 > var_2 : var_1 ) { results. add ( var_2. method_2 ( ) ) ; } return results ; }

************

************
tgt: public void method_1 ( ) { int var_1 = 0 ; for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { var_1 = type_1 . method_2 ( i ) ; type_2 temp = var_3 [ i ] ; var_3 [ i ] = var_3 [ var_1 ] ; var_3 [ var_1 ] = temp ; } }
[0]: public static type_1 method_1 ( java.util.date date ) { java.util.calendar var_1 = java.util.calendar.getinstance ( ) ; var_1. method_2 ( date ) ; type_1 var_2 = new type_1 ( ) ; var_3 = var_1. get ( var_4 ) ; var_5 = var_1. get ( ( ( var_6 ) + 1 ) ) ; var_7 = var_1. get ( var_8 ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_1 . isempty ( ) ) ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist ( var_1 ) ; final java.util.iterator < type_1 > var_3 = var_2 . iterator ( ) ; while ( var_3 . method_2 ( ) ) { if ( var_3 . method_3 ( ) . update ( ) ) { var_3 . remove ( ) ; } } var_1 = var_2 ; this . method_4 ( ) ; } }
[0]: public java.lang.string method_1 ( int line, int var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; if ( ( this. var_3. size ( ) ) > 0 ) { this. var_3. method_2 ( ) ; } java.lang.string var_4 = method_3 ( ) ; var_2. append ( method_4 ( string_1, var_4, line, var_1 ) ) ; return var_2. tostring ( ) ; }

************

************
tgt: public boolean equals ( type_1 var_1 ) { if ( var_1 == ( this ) ) return true ; if ( ( var_1 == null ) || ( ( ( method_1 ( ) ) == null ) ^ ( ( var_1 . method_1 ( ) ) == null ) ) ) return false ; if ( ( ( var_2 ) != null ) && ( ! ( var_2 . method_2 ( var_1 . method_1 ( ) ) ) ) ) return false ; return var_3 . method_2 ( var_1 . getname ( ) ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 ) > 0 ) { if (! ( var_2 ) ) { if ( ( var_1 ) < ( var_3 ) ) { var_1 -= var_4 ; } } var_1 = ( var_1 ) + ( ( ( var_1 ) * ( var_5 ) ) / ( var_6 ) ) ; } }

************

************
tgt: void method_1 ( ) { if ( var_1 ) var_2 . info ( ( string_1 + ( var_3 ) ) ) ; java.lang.string var_4 ; if ( ( var_3 ) != null ) { return ; } else { var_4 = ( string_2 + ( var_3 ) ) + string_3 ; method_2 ( var_5 , string_5 , var_4 ) ; } }
[0]: public boolean method_1 ( int x, int y ) { var_1 [ x ] [ y ]. method_2 ( true ) ; ( var_2 ) ++ ; if ( var_1 [ x ] [ y ]. method_3 ( ) ) { ( var_3 ) ++ ; if (! ( method_4 ( ) ) ) { var_4. method_5 ( new type_1 ( x, y ) ) ; new type_1 ( x, y ). method_6 ( ) ; } return true ; } return false ; }

************

************
tgt: void method_1 ( int number ) { var_1 [ number ] = null ; ( var_2 ) -- ; if ( ( var_4 [ ( number + 1 ) ] ) != null ) method_2 ( new type_1 ( var_3 , number , ( ( var_4 [ ( number + 1 ) ] ) + string_1 ) , var_4 [ ( number + 1 ) ] ) ) ; var_4 [ ( number + 1 ) ] = null ; method_3 ( number ) ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 var_2 ) { type_1 var_3 = var_4 ; if ( var_3 == null ) { synchronized ( this ) { var_3 = var_4 ; if ( var_3 == null ) { type_1 var_5 = type_4. method_2 ( var_1. method_3 ( ), var_2 ) ; if ( var_5 == null ) throw new type_5 ( this, string_1 ) ; var_4 = var_3 = var_5 ; } } } return var_3 ; }

************

************
tgt: public void method_1 ( java.lang.string path , java.lang.string filepath ) { java.io.file source = new java.io.file ( filepath ) ; java.io.file var_1 = new java.io.file ( path . trim ( ) ) ; try { type_1 . method_2 ( source , var_1 ) ; } catch ( java.io.ioexception var_3 ) { var_2 . error ( string_3 ) ; } }
[0]: public void method_1 ( ) throws type_1, java.io.ioexception, type_2, type_3, type_4 { type_5 var_1 = new type_5 ( ) ; type_6 response = new type_6 ( ) ; response. method_2 ( string_1, string_2 ) ; response. method_3 ( int_1 ) ; var_1. method_4 ( response ) ; var_1. start ( ) ; type_7 var_2 = new type_7 ( var_1. method_5 ( string_3 ) ) ; boolean result = var_2. method_6 ( string_4 ) ; type_8. assertequals ( false, result ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { if ( position == 0 ) { android.content.intent intent = new android.content.intent ( var_2 , var_3 ) ; intent . method_2 ( string_1 ) ; method_3 ( android.content.intent . method_4 ( intent , string_2 ) , 1 ) ; } else { method_5 ( position ) ; } }
[0]: public static < type_1 > java.util.list < type_1 > method_1 ( type_1... values ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( values. length ) ; for ( type_1 var_1 : values ) list. add ( var_1 ) ; return list ; }

************

************
tgt: public void method_1 ( type_1 [ ] [ ] var_1 ) { for ( int x = 0 ; x < ( var_1 . length ) ; x ++ ) { for ( int y = 0 ; y < ( var_1 [ x ] . length ) ; y ++ ) { if ( ( var_1 [ y ] [ x ] ) == null ) { java.lang.system.out.print ( string_1 ) ; } else { java.lang.system.out.print ( string_2 ) ; } } java.lang.system.out.println ( ) ; } }
[0]: private void method_1 ( java.lang.string var_1, type_1 output ) { try { if ( ( var_2. method_2 ( var_1 ) )!= null ) { var_2. method_3 ( var_1 ) ; } var_2. method_4 ( var_1, output ) ; } catch ( type_2 var_3 ) { var_4. error ( ( string_1 + var_1 ), var_3 ) ; throw new type_3 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string filename ) throws type_1 , type_2 { type_3 . method_3 ( var_1 ) ; type_4 var_2 = type_5 . method_4 ( var_1 ) ; java.lang.string var_3 = type_6 . method_5 ( var_4 , null , var_2 . method_6 ( ) ) . getvalue ( ) ; type_7 . delete ( filename ) ; type_7 . method_7 ( var_1 , var_3 , filename ) ; }
[0]: public static void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { if ( ( ( var_2 )!= null ) && ( ( var_3 )!= null ) ) { type_2. method_2 ( type_2. method_3 ( var_1 ) ) ; } else { type_3. method_4 ( var_4, string_1 ) ; var_5 = var_1 ; } } }

************

************
tgt: java.util.arraylist method_1 ( java.util.arraylist list , int i , int j ) { java.lang.system.out.println ( ( string_1 + list ) ) ; java.util.arraylist var_1 = new java.util.arraylist < > ( ) ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { var_1 . add ( list . get ( k ) ) ; } java.lang.system.out.println ( ( ( ( ( ( string_2 + i ) + string_3 ) + j ) + string_4 ) + var_1 ) ) ; return var_1 ; }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent intent ) { if ( var_1 == ( var_3 ) ) { var_4 = false ; var_5 = false ; if ( var_2 == ( var_6 ) ) { var_7. method_2 ( ) ; } else { type_1 var_8 = type_1. method_3 ( method_4 ( ), string_1, var_9 ) ; var_8. show ( ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , int id ) { java.lang.string name = var_2 . gettext ( ) . tostring ( ) ; if ( ! ( type_2 . method_2 ( name ) ) ) { type_3 f = new type_3 ( ) ; f . method_3 ( name ) ; f . method_4 ( ) ; type_2 . method_5 ( this , string_3 ) ; } else { type_2 . method_5 ( this , string_4 ) ; } }
[0]: public void method_1 ( type_1 < type_2 > result ) { if ( result. method_2 ( ) ) { type_2 var_1 = result. get ( ) ; type_3 var_2 = var_1. method_3 ( ) ; var_3. method_4 ( ( var_2 == null? var_2 : var_4 ) ) ; } else { var_3. method_4 ( var_5 ) ; } var_6. method_5 ( var_3. method_6 ( ), var_3. method_3 ( ), true ) ; }

************

************
tgt: private void method_1 ( type_1 p ) { int var_1 = ( ( java.lang.integer ) ( p . method_2 ( ) ) ) ; int id = java.lang.integer.parseint ( p . method_3 ( ) ) ; java.lang.system.out.println ( ( ( id + string_1 ) + ( java.lang.math.random ( ) ) ) ) ; for ( type_2 a : var_2 ) { if ( ( a . method_4 ( ) ) == id ) { a . method_5 ( var_1 ) ; } } }
[0]: public int method_1 ( int var_1, int var_2 ) { type_1 var_3 = new type_1 ( string_1, java.lang.string. method_2 ( var_1 ) ) ; var_3. append ( string_2, java.lang.string. method_2 ( var_2 ) ). append ( string_3, var_4 ) ; type_2 var_5 = var_6. method_3 ( var_3 ) ; var_6. method_4 ( ) ; return 0 ; }

************

************
tgt: public void method_1 ( type_1 msg ) { if ( ! ( type_2 . method_3 ( var_2 , true ) ) ) { return ; } if ( type_2 . method_4 ( var_2 , true ) ) { type_3 . show ( string_1 ) ; } if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; } }
[0]: private void method_1 ( java.lang.string var_1 ) { ( var_2 ) ++ ; java.lang.string [ ] var_3 = var_1. replaceall ( string_1, string_2 ). replaceall ( string_3, string_4 ). split ( string_2 ) ; for ( java.lang.string var_4 : var_3 ) { var_5. add ( var_4. length ( ) ) ; var_6 += var_4. length ( ) ; } }

************

************
tgt: public void update ( type_1 var_1 ) { final type_2 var_2 = ( var_1 == null ) ? null : var_3 . method_1 ( var_4 ) ; var_5 . settext ( ( string_1 + ( var_2 == null ? var_1 == null ? string_2 : var_4 : var_2 . name ) ) ) ; var_6 . settext ( ( string_3 + ( var_1 == null ? string_2 : var_1 . title ) ) ) ; method_2 ( var_1 , true ) ; }
[0]: public void method_1 ( type_1 buf ) throws java.io.ioexception { int var_1 = buf. method_2 ( ) ; assert null!= ( var_2 ) : string_1 ; var_2. method_3 ( buf ) ; var_3. method_4 ( buf ) ; var_4. method_5 ( ( ( ( var_4. method_6 ( ) ) + var_1 ) - int_1 ) ) ; var_3. method_4 ( buf ) ; }

************

************
tgt: public void method_1 ( ) { this . var_1 . method_2 ( ( + 1 ) ) ; this . var_2 . method_3 ( ( - 1 ) , ( - 1 ) ) ; this . var_3 . method_4 ( float_1 ) ; this . state = var_4 ; }
[0]: org. junit. assert. assertequals ( """", java.lang.string. tostring ( ) )

************

************
tgt: private void init ( type_1 var_1 , int var_2 ) { type_2 a = getcontext ( ) . method_1 ( var_1 , var_3 , var_2 , 0 ) ; var_4 = a . method_2 ( var_5 , 0 ) ; method_4 ( a . method_3 ( var_7 ) ) ; a . method_8 ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 item ) { type_4 < type_5 > var_2 = method_2 ( ). method_3 ( var_3, type_6. method_4 ( var_1 ) ) ; if (! ( var_2. method_5 ( ) ) ) { return null ; } assert var_2 instanceof type_1 ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; var_4. method_6 ( int_1 ) ; throw new type_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; java.lang.string var_4 = "0" ; type_1 var_2 = new type_1 ( var_3 , var_1 , var_4 , true , 1 , 1 ) ; var_3 . method_2 ( var_2 ) ; double var_5 = var_2 . method_3 ( ) ; double var_6 = var_2 . method_4 ( ) ; var_2 . method_5 ( var_3 ) ; method_6 ( ( ( ( var_2 . method_3 ( ) ) == var_5 ) && ( ( var_2 . method_4 ( ) ) == var_6 ) ) ) ; }
[0]: public void method_1 ( type_1 date ) { type_2 var_1 = null ; type_3 var_2 = null ; type_4 var_3 = null ; try { java.lang.string var_4 = string_1 ; var_1 = method_2 ( ) ; var_2 = var_1. method_3 ( var_4 ) ; var_2. method_4 ( 1, date ) ; var_2. execute ( ) ; java.lang.system.out.println ( string_2 ) ; var_1. method_5 ( ) ; } catch ( java.lang.exception var_5 ) { java.lang.system.out.println ( string_3 ) ; } }

************

************
tgt: public void setvalue ( float var_1 ) { if ( var_1 < 0 ) var_1 = 0 ; else if ( var_1 > 1 ) var_1 = 1 ; float var_2 = ( method_2 ( ) ) + ( var_1 * ( ( method_1 ( ) ) - ( var_3 . method_1 ( ) ) ) ) ; var_3 . method_3 ( var_3 . method_4 ( ) , var_2 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1, type_2 var_2 ) { java.util.list < type_3 > var_3 = type_4. method_2 ( var_1 ) ; if (! ( var_3. isempty ( ) ) ) { type_1 var_4 = type_4. method_3 ( var_2 ) ; type_3 var_5 = var_4. method_4 ( ) ; if ( type_4. method_5 ( var_3, var_5 ) ) { return var_4 ; } } type_5. method_6 ( ) ; return null ; } return null ; }

************

************
tgt: public java.util.arraylist < java.lang.string > method_1 ( ) { try { java.lang.string var_1 = var_2 . method_2 ( ) ; var_3 . info ( var_4 ) ; java.util.arraylist < java.lang.string > x = var_5 . method_3 ( var_1 ) ; return x ; } catch ( java.lang.exception var_6 ) { java.util.arraylist < java.lang.string > x = new java.util.arraylist < java.lang.string > ( ) ; x . add ( var_7 ) ; return x ; } }
[0]: private void method_1 ( final java.lang.string query ) { var_1. execute ( new type_1 ( ) { public void method_2 ( ) { type_2 execute = var_2. execute ( query ) ; try { execute. method_3 ( ) ; } catch ( java.lang.exception var_3 ) { var_3. method_4 ( ) ; var_4. set ( true ) ; } } } ) ; } }

************

************
tgt: protected type_1 method_1 ( int i , boolean var_1 ) { return method_2 ( data ( ) , new int [ ] { 1 , 1 } , new int [ ] { 1 , 1 } , ( var_1 ? ( offset ) + i : i ) ) ; }
[0]: public java.lang.void method_1 ( ) throws java.io.ioexception { try { while (! ( java.lang.thread. method_2 ( ). method_3 ( ) ) ) { try { method_4 ( ) ; } catch ( type_1 | type_2 var_1 ) { method_5 ( ) ; java.lang.thread. method_6 ( int_1 ) ; } } } catch ( final type_3 var_2 ) { } catch ( final type_4 var_2 ) { } return null ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) throw new type_1 ( string_1 ) ; if ( ( var_1 . length ( ) ) > int_1 ) throw new type_1 ( string_2 ) ; if ( ( var_1 . length ( ) ) < int_2 ) throw new type_1 ( string_3 ) ; this . var_1 = var_1 ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_2 = var_1. method_2 ( ) ; type_1 var_3 = new type_1 ( string_2 ) ; var_4 = var_3. method_2 ( ) ; type_1 var_3 = new type_1 ( string_3 ) ; var_5 = var_6. method_2 ( ) ; }

************

************
tgt: public void remove ( ) { if ( ( var_1 ) == null ) { var_2 = null ; return ; } var_3 . remove ( this ) ; if ( var_3 . isempty ( ) ) { var_1 . remove ( ) ; } else { var_1 . method_1 ( ) ; } }
[0]: public void method_1 ( type_1 msg ) { switch ( var_1 ) { case var_2 : java.lang.object [ ] var_3 = ( ( java.lang.object [ ] ) ( msg. obj ) ) ; type_2 var_4 = ( ( type_2 ) ( var_3 [ 0 ] ) ) ; if ( ( var_5 ) == ( var_4. method_2 ( ) ) ) var_4. method_3 ( ( ( java.lang.object [ ] ) ( var_3 [ 1 ] ) ) ) ; break ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 , java.io.ioexception , type_2 , type_3 { method_1 ( ) ; if ( false ) { type_4 . method_2 ( args ) ; } else { new type_4 ( ) . method_3 ( string_1 , string_2 , java.lang.integer.parseint ( string_3 ) , string_4 , false , int_1 , 0 , int_2 , 0 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; var_3. method_2 ( var_4, null, var_2. method_3 ( var_1 ) ) ; for ( type_3 values : var_2. method_4 ( var_1 ) ) { var_3. method_2 ( var_5, null, values ) ; } }

************

************
tgt: public int method_1 ( ) { try { java.lang.string var_1 = method_2 ( method_3 ( string_1 ) ) ; if ( var_1 . startswith ( string_2 ) ) { int var_2 = java.lang.integer.parseint ( var_1 . substring ( int_1 , int_2 ) , int_3 ) ; var_3 . method_4 ( var_2 ) ; return var_2 ; } throw new java.io.ioexception ( ( ( var_4 ) + var_1 ) ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_5 ( ) ; return var_3 . method_6 ( ) ; } }
[0]: private int method_1 ( int position ) { int count = 0 ; if ( ( var_1 ) && ( ( var_2 ) < position ) ) count ++ ; if ( ( var_3 ) && ( ( var_4 ) < position ) ) count ++ ; return count ; }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string answer = string_1 ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) if ( ( var_1 . method_2 ( i ) ) != char_1 ) answer += var_1 . method_2 ( i ) ; return answer ; }
[0]: public void update ( final type_1 position ) { this. position. set ( position ) ; this. var_1. method_1 ( position ) ; this. var_2. method_1 ( position ) ; this. var_3. method_1 ( position ) ; this. var_4. method_2 ( position ) ; this. var_5. method_1 ( position ) ; this. var_6. method_1 ( position ) ; type_2. method_3 ( this. var_7, this. var_8 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . asserttrue ( var_1 . method_2 ( ) ) ; boolean var_3 = type_3 . method_5 ( ) . method_6 ( ) ; var_2 . add ( type_2 . method_3 ( ) ) ; var_1 . method_4 ( ) ; type_2 . method_1 ( ) ; type_3 . method_5 ( ) . method_7 ( var_3 ) ; var_1 . method_8 ( ) ; }
[0]: public void method_1 ( int var_1, int var_2, android.content.intent data ) { if ( var_1 == ( var_3 ) ) { long var_4 = data. method_2 ( var_5, 0 ) ; java.util.calendar var_6 = new type_1 ( ) ; var_6. method_3 ( new java.util.date ( var_4 ) ) ; method_4 ( var_6 ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; try ( java.io.bufferedreader var_3 = new java.io.bufferedreader ( new type_1 ( var_1 , string_1 ) ) ) { java.lang.string line = var_3 . method_2 ( ) ; while ( line != null ) { var_2 . append ( line . trim ( ) ) ; line = var_3 . method_2 ( ) ; } } return var_2 . tostring ( ) ; }
[0]: private void method_1 ( ) throws type_1, type_2 { type_3 var_1 = type_4. method_2 ( ) ; type_5 var_2 ; if ( var_1. method_3 ( ). method_4 ( ) ) { var_2 = ( ( type_5 ) ( var_1. method_3 ( ). method_5 ( ) ) ) ; } else { var_2 = new type_6 ( ) ; } var_1. method_6 ( var_2 ) ; var_1. method_6 ( var_2 ) ; }

************

************
tgt: public static void method_1 ( java.util.scanner var_1 , boolean [ ] [ ] var_2 ) { boolean var_3 = false ; type_1 . method_2 ( var_2 ) ; var_4 . method_3 ( string_1 , var_5 , var_6 ) ; java.lang.system.out.println ( string_2 ) ; for ( int i = 0 ; ! var_3 ; i ++ ) { var_3 = type_1 . method_4 ( var_1 , i , var_2 ) ; } }
[0]: protected void method_1 ( ) { if ( ( var_1 )!= null ) { var_1. method_2 ( ) ; var_1. method_3 ( this ) ; } var_2. method_4 ( null ) ; type_1 var_3 = new type_1 ( ) ; var_3. method_5 ( this ) ; super. method_1 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_2 ) ) { var_3 . info ( ( ( ( string_1 + var_6 ) + string_2 ) + ( var_4 . method_4 ( ) ) ) ) ; var_5 . method_5 ( ( var_6 + ( var_7 ) ) , var_4 . method_4 ( ) ) ; } }
[0]: public void method_1 ( type_1 event ) { int var_1 = 0 ; var_2 = new type_2 ( var_1, string_1, string_1, string_1 ) ; type_3 var_3 = new type_3 ( var_4, var_4, string_2, true, var_2 ) ; var_5. setenabled ( false ) ; var_6. setenabled ( false ) ; var_7. setenabled ( false ) ; var_3. method_2 ( true ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 . method_2 ( ) . method_3 ( this ) ; var_2 = new type_3 ( this ) . title ( var_3 ) . content ( var_4 ) . method_4 ( false , int_1 , true ) . method_5 ( false ) . build ( ) ; }
[0]: public double [ ] method_1 ( ) { for ( int i = 0 ; i < ( this. var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( this. var_2 ) ; j ++ ) { this. var_3 [ this. var_2 ] [ i ] = this. var_3 [ j ] [ i ] ; } } return this. var_3 [ this. var_2 ] ; }

************

************
tgt: public static boolean method_1 ( type_1 type , type_1 var_1 ) { if ( type instanceof type_2 ) { return ( ( type_2 ) ( type ) ) . contains ( var_1 ) ; } return ( type . equals ( var_1 ) ) || ( type_3 . method_2 ( var_1 , type ) ) ; }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { super. method_1 ( var_1, var_2, var_3 ) ; if ( var_1 == ( var_4 ) ) { if ( ( var_3 [ 0 ] ) == ( var_5 ) ) { android.content.intent var_6 = new android.content.intent ( var_7 ) ; var_6. method_2 ( string_1 ) ; method_3 ( var_6, var_8 ) ; } else { type_1. method_4 ( getactivity ( ), string_2, var_9 ). show ( ) ; } } }

************

************
tgt: public boolean method_1 ( final type_1 var_1 , final java.lang.stringbuilder var_2 ) { type_1 . method_2 ( var_1 ) ; java.lang.string var_3 = var_1 . substring ( var_4 . gettext ( ) ) ; if ( ( var_4 . method_3 ( ) ) != null ) { var_2 . append ( var_3 ) ; return true ; } return method_4 ( var_3 , var_2 ) ; }
[0]: public type_1 method_1 ( byte c ) { for ( int i = 0 ; i < ( this. var_1 ) ; i ++ ) { if ( ( keys [ i ] ) == ( method_2 ( c ) ) ) { return new type_2 ( var_2, i ) ; } } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { synchronized ( var_4 ) { if ( ! ( var_4 . add ( var_1 ) ) ) { for ( type_1 var_5 : var_4 ) { if ( var_5 . equals ( var_1 ) ) { var_5 . method_3 ( var_1 . method_4 ( ) ) ; } } } else { for ( int var_2 : var_1 . method_2 ( ) ) { var_3 . put ( var_2 , var_1 ) ; } } } }
[0]: public void remove ( type_1 var_1 ) { int var_2 = ( ( var_1. y ) * ( var_3 ) ) + ( var_1. x ) ; if (! ( var_4. method_1 ( var_2 ) ) ) { var_5. info ( string_1 ) ; return ; } if ( var_1. equals ( var_6 ) ) { var_5. info ( string_2 ) ; var_5. info ( string_3 ) ; this. method_2 ( ) ; } var_4. remove ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { try ( java.io.inputstream var_1 = var_2 class . method_2 ( string_1 ) ) { java.lang.string var_3 = type_1 . tostring ( var_1 , string_2 ) ; type_2 var_4 = var_5 . method_3 ( var_6 class , var_3 ) ; type_3 . assertnotnull ( var_4 ) ; } catch ( java.io.ioexception var_7 ) { var_7 . method_5 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; for ( int i = 0 ; i < ( var_1. method_2 ( ) ) ; i += int_1 ) { int var_3 = ( var_2. method_3 ( ( ( var_1. method_4 ( ) ) - 1 ) ) ) + 1 ; type_2. method_5 ( var_1. method_6 ( i ), var_1. method_6 ( ( i + 1 ) ), var_3, var_1. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.object var_2 , java.lang.object var_3 ) { if ( ( ( java.lang.string ) ( var_3 ) ) . method_4 ( string_1 ) ) { var_4 . method_5 ( java.lang.integer.parseint ( ( ( java.lang.string ) ( var_3 ) ) ) ) ; method_6 ( view . method_7 ( ) . getvalue ( ) ) ; } }
[0]: private static type_1 method_1 ( java.lang.string var_1 ) { try { java.io.file f = new java.io.file ( var_1 ) ; if ( f. method_2 ( ) ) return new type_2 ( f ) ; else if ( f. method_3 ( ) ) return new type_3 ( new type_4 ( f ) ) ; } catch ( java.io.ioexception var_2 ) { } return null ; }

************

************
tgt: public synchronized boolean method_1 ( java.lang.thread t ) { if ( t == null ) { if ( ( ( this . var_1 ) == null ) || ( ! ( this . var_1 . method_2 ( ) ) ) ) return true ; else return false ; } else if ( t . method_2 ( ) ) { if ( ( this . var_1 ) == t ) return true ; else return false ; } else return false ; }
[0]: public static type_1 index ( ) { type_2 var_1 = type_3. method_1 ( method_2 ( ). get ( string_1 ) ) ; if ( var_1!= null ) { method_3 ( index. method_4 ( var_1 ) ) ; } return type_4. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; final android.content.context context = method_2 ( ) ; if ( ( type_1 . method_3 ( context ) ) > ( var_2 . method_4 ( ) ) ) { type_2 var_3 = new type_2 ( ) ; var_3 . show ( method_5 ( ) , string_1 ) ; var_2 . method_6 ( context ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { type_2 var_3 = new type_2 ( ) ; var_3. put ( string_1, ( ( type_3 ) ( var_4. method_2 ( var_5 ) ) ). gettext ( ). tostring ( ) ) ; var_3. put ( string_2, ( ( type_3 ) ( var_4. method_2 ( var_6 ) ) ). gettext ( ). tostring ( ) ) ; var_7. method_3 ( string_3, null, var_3 ) ; var_1. method_4 ( ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { count += 1 ; if ( var_1 == ( var_2 ) ) { this . var_3 = string_1 + ( var_2 ) ; return true ; } else if ( var_1 > ( var_2 ) ) { this . var_3 = string_2 ; return false ; } else { this . var_3 = string_3 ; return false ; } }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; android.content.intent var_3 = getintent ( ) ; var_4 = ( ( type_2 ) ( var_3. method_3 ( string_1 ) ) ) ; method_4 ( ) ; method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = method_2 ( ) ; type_2 var_2 = new type_3 ( ) . method_3 ( string_1 ) . method_4 ( new type_4 ( ) ) . method_5 ( new type_5 ( ) ) . method_7 ( new type_6 ( ) ) . build ( ) ; type_7 . assertnotnull ( var_1 . method_8 ( var_2 ) ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1, ( ( var_2 ) + 1 ) ) ; type_1. method_2 ( var_1, string_2, ( ( var_2 ) + 1 ) ) ; type_1. method_2 ( var_1, string_3, ( ( var_2 ) + 1 ) ) ; type_1. method_2 ( var_1, string_4, ( ( var_2 ) + 1 ) ) ; type_1. method_2 ( var_1, string_5, ( ( var_2 ) + 1 ) ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string query ) { type_1 . method_2 ( string_1 , ( string_2 + query ) ) ; java.lang.string var_1 = ( ( ( ( ( string_3 + ( var_2 ) ) + string_4 ) + ( var_3 ) ) + string_5 ) + query ) + string_6 ; var_4 = var_5 . method_3 ( var_1 , null ) ; var_7 . method_4 ( var_6 ) ; var_8 . method_5 ( ) ; return true ; }
[0]: private boolean method_1 ( final type_1 start, final type_1 target ) { if ( method_2 ( ) ) if ( ( ( start. method_3 ( ) ) == int_1 ) && ( ( target. method_3 ( ) ) == int_2 ) ) return true ; else if ( ( ( start. method_3 ( ) ) == int_3 ) && ( ( target. method_3 ( ) ) == 1 ) ) return true ; return false ; }

************

************
tgt: public void method_1 ( type_1 < type_2 , type_3 > update ) { if ( update == null ) { throw new type_4 ( string_1 ) ; } type_2 var_1 = update . method_2 ( ) ; if ( var_2 . method_3 ( var_1 ) ) { throw new type_5 ( var_2 . remove ( var_1 ) , update ) ; } var_2 . put ( var_1 , update ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( ) ; int var_4 = var_5. method_3 ( var_2 ) ; if ( var_4 < ( var_5. size ( ) ) ) { var_5. method_4 ( var_2 ) ; var_5. add ( ( var_4 + 1 ), var_2 ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { type_1 var_4 = new type_1 ( ) ; var_4 . method_2 ( var_5 . method_3 ( var_1 ) ) ; var_4 . method_4 ( var_6 . method_3 ( var_2 ) ) ; var_4 . method_5 ( var_3 ) ; return var_7 . method_6 ( var_4 ) ; }
[0]: public void update ( double var_1 ) { var_2 += ( var_1 * ( var_3 ) ) / ( var_4 ) ; var_5 += ( var_1 * ( var_6 ) ) / ( var_4 ) ; x += var_1 * ( var_2 ) ; y += var_1 * ( var_5 ) ; }

************

************
tgt: public void set ( double time , type_1 var_1 , type_2 var_2 ) { method_2 ( var_1 ) ; method_2 ( var_2 ) ; this . time . set ( time ) ; this . var_1 . set ( var_1 . method_3 ( ) ) ; this . var_2 . set ( var_2 . method_4 ( ) ) ; }
[0]: public void method_1 ( ) { if (! ( var_1. method_2 ( ) ) ) { return ; } if ( ( var_2 )!= null ) { throw new type_1 ( string_1 ) ; } type_2. method_3 ( ) ; var_2 = new type_3 ( type_4. method_4 ( ), method_5 ( ) ) ; var_2. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) throws java.lang.exception { var_2 . method_2 ( ) . method_3 ( var_5 , var_6 ) ; type_3 var_7 = new type_3 ( var_2 . method_4 ( ) , new type_4 ( new type_5 ( ) ) , new type_6 ( ) ) ; var_2 . method_2 ( ) . method_5 ( var_7 ) ; }
[0]: public void method_1 ( type_1 var_1, int i ) { counter. setvalue ( java.lang.integer. method_2 ( var_2. gettext ( ). tostring ( ) ) ) ; listener. method_3 ( counter. method_4 ( ) ) ; counter. method_5 ( counter. method_4 ( ) ) ; counter. method_5 ( counter. method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; java.lang.system.out.println ( string_1 ) ; var_2 = new type_2 ( ) ; java.util.arraylist < java.lang.string > var_3 = new java.util.arraylist ( java.util.arrays.aslist ( var_4 . method_2 ( ) . method_3 ( var_5 ) ) ) ; var_6 = new type_3 ( var_4 , var_3 ) ; }
[0]: protected java.lang.boolean method_1 ( java.lang.string... params ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2 var_3 = new type_2 ( var_1 ) ; type_3 var_4 = var_3. method_2 ( var_1. method_2 ( ) ) ; type_4 < type_5 > var_5 = var_4. method_3 ( var_6, var_7 class ) ; boolean result = method_4 ( var_5, params [ 1 ], params [ 0 ] ) ; return result ; }

************

************
tgt: public void method_1 ( int element ) { this . var_1 [ ( ( this . size ) ++ ) ] = element ; int var_2 = ( this . size ) - 1 ; while ( ( this . var_1 [ var_2 ] ) > ( this . var_1 [ this . method_2 ( var_2 ) ] ) ) { this . method_3 ( var_2 , this . method_2 ( var_2 ) ) ; var_2 = this . method_2 ( var_2 ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; var_2. method_3 ( 1.0f ) ; method_4 ( ) ; var_3 = false ; var_4 = true ; var_5 = true ; var_1. method_5 ( ) ; var_6. method_5 ( ) ; var_7. method_5 ( ) ; var_8. method_5 ( ) ; method_6 ( ) ; var_9. method_7 ( string_1 ) ; }

************

************
tgt: private static void method_1 ( java.util.arraylist < type_1 > var_1 , type_1 var_2 ) { java.lang.string var_4 ; int var_3 = var_1 . method_2 ( var_2 ) ; var_4 = type_2 . method_3 ( var_1 , 0 , var_3 ) ; var_1 . get ( 0 ) . method_4 ( var_4 ) ; }
[0]: public type_1 method_1 ( ) { type_1 result = new type_1 ( ) ; var_1 = var_2 ; var_3 = method_2 ( ) ; var_4 = method_3 ( ) ; var_5 = var_6 ; if ( ( var_7 ) == ( type_2. method_4 ( var_2 ) ) ) { var_8 = - 1 ; } else { var_8 = var_7 ; } var_9. method_5 ( ) ; var_9. method_6 ( method_7 ( ) ) ; result. method_8 ( method_8 ( ) ) ; var_10 = method_9 ( ) ; return result ; }

************

************
tgt: protected java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) throws java.lang.exception { if ( ( var_1 == null ) || ( ( var_1 . method_2 ( ) ) == ( var_3 ) ) ) return string_1 ; java.lang.integer result = new type_3 ( this , var_1 ) . method_3 ( ) ; return ( result != null ) && ( result > 0 ) ? string_2 : string_3 ; }
[0]: public void method_1 ( double var_1 ) { if ( var_1 == 0 ) { var_2 = false ; var_3 = var_4 ; this. var_1 = var_1 ; return ; } else if ( var_1 > 1 ) { return ; } this. var_2 = true ; this. var_1 = var_1 ; this. var_3 = ( var_4 ) * ( 1 - var_1 ) ; }

************

************
tgt: public void method_1 ( java.util.map < java.lang.string , java.lang.object > var_1 ) { for ( java.lang.object var_2 : var_1 . values ( ) ) { if ( ( ( ! ( var_2 instanceof java.lang.string ) ) && ( ! ( var_2 instanceof java.lang.integer ) ) ) && ( ! ( var_2 instanceof java.lang.double ) ) ) { throw new type_1 ( string_1 ) ; } } this . var_1 = var_1 ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; type_1. method_2 ( ). method_3 ( ( ( var_1 ) + ( var_2 ) ) ) ; type_1. method_2 ( ). method_3 ( var_3 ) ; if ( ( var_4 )!= null ) { getactivity ( ). method_4 ( var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_3 ; if ( var_1 != null ) { listener . method_2 ( ( - 1 ) , var_3 ) ; if ( ( var_4 ) == null ) method_3 ( var_1 . method_4 ( ) ) ; else { if ( var_4 . method_5 ( ) ) { method_6 ( ) ; } else { method_7 ( ) ; } } } }
[0]: public void method_1 ( android.view.view view ) { java.lang.string var_1 = var_2. gettext ( ). tostring ( ) ; if ( var_1. equals ( string_1 ) ) { type_1. method_2 ( this, string_2, var_3 ). show ( ) ; return ; } method_3 ( var_1 ) ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { type_2 var_3 = type_3 . method_2 ( ) . method_3 ( var_1 . method_4 ( ) ) ; type_1 var_2 = new type_1 ( ) ; java.lang.string var_4 = ( ( var_3 . name ) + "\n" ) + ( var_2 . method_5 ( var_1 ) ) ; type_4 var_5 = new type_4 ( this , var_1 . getname ( ) , var_4 ) ; var_5 . method_6 ( ) . show ( ) ; } }
[0]: private double method_1 ( type_1 p ) { double var_1 = 0 ; double var_2 = 0 ; for ( java.util.arraylist < java.lang.integer > var_3 : var_4 ) { for ( int var_5 : var_3 ) { var_5 = java.lang.math.abs ( var_5 ) ; var_2 ++ ; if ( ( var_5 >= 1 ) || ( var_5 <= int_1 ) ) { var_1 += 1 ; } } } if ( var_2 == 0 ) { return 0 ; } return var_1 / var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( null != var_1 ) if ( var_2 ) { var_1 . method_2 ( ) ; type_4 event = new type_4 ( this , var_4 ) ; event . method_4 ( var_1 ) ; for ( type_3 listener : var_3 ) listener . method_7 ( event ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( (! ( var_1 instanceof type_2 ) ) && ( this. var_2. method_2 ( var_3 ) ) ) { type_3 var_4 = ( ( type_3 ) ( this. var_2. get ( var_3 ) ) ) ; var_4. method_3 ( var_1 ) ; if ( var_4. method_4 ( var_1 ) ) { this. method_5 ( var_1 ) ; } } super. method_1 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.object var_2 , java.lang.string [ ] var_3 , java.util.map < java.lang.string , java.lang.string > var_4 , java.lang.string var_5 , type_1 var_6 ) throws type_2 { try { if ( ( ! ( method_2 ( ) ) ) || ( ! ( var_6 . method_3 ( ) ) ) ) { return true ; } } catch ( type_3 var_7 ) { throw new type_2 ( string_1 , var_7 ) ; } this . method_4 ( var_1 , var_4 ) ; return true ; }
[0]: public static boolean method_1 ( ) { boolean var_1 = false ; type_1 var_2 = type_2. method_2 ( var_3 class ). method_3 ( ) ; type_3 < type_4 > var_4 = var_2. method_4 ( var_5 class ) ; if ( var_4!= null ) { type_4 var_6 = var_2. method_5 ( var_4 ) ; var_1 = var_6. method_6 ( ) ; } return var_1 ; }

************

************
tgt: public synchronized void method_1 ( long var_1 , type_1 var_2 ) { if ( var_1 <= 0 ) throw new type_2 ( ( string_1 + var_1 ) ) ; this . var_3 += var_2 . method_2 ( var_1 ) ; for ( ; ; ) { type_3 var_4 = var_5 . method_3 ( ) ; if ( ( var_4 == null ) || ( ( var_6 ) > ( var_3 ) ) ) break ; var_5 . method_4 ( ) . method_5 ( ) ; } }
[0]: public boolean method_1 ( java.util.date date ) { java.util.calendar var_1 = java.util.calendar.getinstance ( method_2 ( ) ) ; var_1. method_3 ( date ) ; var_1. set ( var_2, 0 ) ; java.util.date var_3 = var_1. gettime ( ) ; var_1. add ( var_4, ( - 1 ) ) ; java.util.date var_5 = method_4 ( var_1. gettime ( ) ) ; return ( var_5!= null ) && ( var_5. equals ( var_3 ) ) ; }

************

************
tgt: protected void method_1 ( boolean var_1 ) { if ( ( var_2 ) == null ) { return ; } try { final int var_3 = var_4 . length ; for ( int i = 0 ; i < var_3 ; ++ i ) { if ( ( var_4 [ i ] ) instanceof type_1 ) { method_2 ( i ) ; } } method_3 ( ) ; } catch ( java.lang.throwable var_5 ) { type_2 . method_4 ( var_5 ) ; } }
[0]: public static int method_1 ( java.util.list < java.lang.integer [ ] > var_1 ) { java.util.set < java.lang.integer > var_2 = new java.util.hashset < java.lang.integer > ( ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.integer [ ] var_4 : var_1 ) { type_2. method_2 ( var_3, var_4 ) ; } for ( type_1 var_4 : var_3 ) { var_2. method_3 ( var_4. method_4 ( ) ) ; } return var_2. size ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2 . method_2 ( ) ) ) ; var_1 . method_3 ( var_5 , var_6 ) ; var_1 . method_3 ( var_7 , var_8 ) ; try { var_9 . method_4 ( var_1 ) ; } finally { var_1 . method_5 ( ) ; } try { var_2 . show ( ) ; } catch ( type_2 var_10 ) { var_10 . method_6 ( ) ; } }
[0]: public void method_1 ( type_1 var_1, long var_2, long var_3 ) { type_2 var_4 = var_1. method_2 ( ) ; if ( var_2 == 0 ) { var_4. method_3 ( string_1 ). method_4 ( string_2 ). method_4 ( string_3 ) ; var_2 ++ ; } if ( var_2 == 1 ) { } }

************

************
tgt: public double method_1 ( java.util.list < java.lang.string [ ] > var_1 , java.lang.string var_2 ) { double count = 0 ; for ( java.lang.string [ ] var_3 : var_1 ) { for ( java.lang.string var_4 : var_3 ) { if ( var_4 . method_2 ( var_2 ) ) { count ++ ; break ; } } } return type_1 . method_3 ( ( ( ( var_1 . size ( ) ) / 1 ) + count ) ) ; }
[0]: public static void method_1 ( java.lang.string filename, int n ) throws java.io.ioexception { java.io.file file = new java.io.file ( filename ) ; java.io.fileoutputstream var_1 = new java.io.fileoutputstream ( file ) ; java.io.bufferedwriter var_2 = new java.io.bufferedwriter ( new type_1 ( var_1 ) ) ; for ( int i = 0 ; i <= n ; i ++ ) { var_2. method_2 ( type_2. method_3 ( type_2. method_4 ( ) ) ) ; var_2. method_5 ( ) ; } var_2. method_6 ( ) ; }

************

************
tgt: private static float method_1 ( java.util.arraylist < java.lang.float > list , int var_1 ) { float var_2 = - 1.0f ; for ( int a = 0 ; a <= var_1 ; a ++ ) { if ( ( list . get ( a ) ) > var_2 ) { var_2 = list . get ( a ) ; } } return var_2 ; }
[0]: private void method_1 ( ) { var_1. method_1 ( ) ; var_2 = type_1. method_2 ( 1, ( ( var_2 ) - 1 ) ) ; if ( var_1. method_3 ( ) ) { method_4 ( ) ; var_3. method_1 ( ) ; var_2 = method_5 ( ) ; } if ( var_1. method_6 ( ) ) method_7 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.string out ) throws java.lang.exception { type_1 var_2 = this . method_2 ( ) ; type_3 var_3 = this . method_3 ( ) ; var_3 . put ( string_1 , method_4 ( ) ) ; java.util.list < type_3 > var_4 = var_5 . method_5 ( var_3 ) ; var_2 . method_6 ( string_2 ) ; var_2 . method_7 ( string_3 , var_4 ) ; java.lang.system.out.println ( ( string_4 + ( var_4 . size ( ) ) ) ) ; var_2 . method_7 ( string_5 , var_3 ) ; return var_2 ; }
[0]: public java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; for ( type_2 var_2 : method_2 ( ) ) { if ( var_3. equals ( name ) ) { var_1. add ( new type_1 ( context, this, var_4 ) ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( final type_1 < type_2 > var_1 ) { final java.util.list < type_3 > var_2 = new java.util.arraylist < type_3 > ( ) ; final type_4 < java.util.list < type_3 > > var_3 = new type_4 < java.util.list < type_3 > > ( var_2 , var_4 ) ; method_2 ( var_5 , id , var_3 , var_1 ) ; method_2 ( var_6 , id , var_3 , var_1 ) ; var_3 . method_3 ( ) ; }
[0]: public void method_1 ( int var_1 ) { android.view.view view = var_2. method_2 ( var_1 ) ; type_1 title = ( ( type_1 ) ( view. method_3 ( var_3 ) ) ) ; type_1 var_4 = ( ( type_1 ) ( view. method_3 ( var_5 ) ) ) ; title. method_4 ( var_6 ) ; var_4. method_4 ( type_2. getcolor ( getcontext ( ), var_7 ) ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( var_1 , args ) ; java.lang.system.out.println ( var_3 ) ; if ( var_4 ) { var_2 . method_1 ( ) ; java.lang.system.exit ( 0 ) ; } var_5 = var_6 ; var_7 . info ( string_1 , var_5 ) ; type_1 . start ( var_5 ) ; }
[0]: public void method_1 ( type_1 out ) throws java.io.ioexception { super. method_1 ( out ) ; out. method_2 ( var_1 ) ; out. method_2 ( var_2 ) ; for ( int i = 0 ; i < ( var_3. length ) ; i ++ ) { out. method_3 ( var_3 [ i ] ) ; out. method_3 ( var_4 [ i ] ) ; } }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 , java.lang.string url , java.lang.string var_2 , java.lang.string var_3 ) throws type_3 { type_4 var_4 = new type_4 ( new type_1 ( var_1 , url , ( ( java.lang.string ) ( null ) ) ) ) ; type_5 var_5 = var_4 . method_1 ( var_2 , null , var_3 ) ; return new type_1 ( var_1 , url , var_5 ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; var_2. method_3 ( true ) ; var_3. method_3 ( false ) ; var_4. method_3 ( false ) ; var_5. method_3 ( false ) ; var_6. method_3 ( false ) ; var_7. method_3 ( false ) ; var_8. method_3 ( true ) ; var_9. method_3 ( false ) ; var_10. method_3 ( false ) ; this. var_11 = true ; }

************

************
tgt: private int method_1 ( ) { int var_1 = a . method_2 ( ) ; int var_2 = b . method_2 ( ) ; int y = 0 ; if ( var_1 < var_2 ) { y = var_2 - var_1 ; } else { y = var_1 - var_2 ; } return y ; }
[0]: void method_1 ( ) throws type_1 { java.lang.string var_1 = new java.lang.string ( var_2. method_2 ( ). method_3 ( ) ) ; java.lang.string time = new java.lang.string ( var_3. method_2 ( ). method_3 ( ) ) ; var_4. method_4 ( var_1, time, string_1 ) ; method_5 ( ) ; type_2 var_5 = ( ( type_2 ) ( add. method_6 ( ). method_7 ( ) ) ) ; var_5. method_8 ( ) ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 , java.util.list < type_1 > var_2 , type_2 var_3 ) { java.util.list < type_1 > var_4 = var_5 . method_2 ( var_3 ) ; for ( type_1 var_6 : var_2 ) { boolean result = false ; for ( type_1 var_7 : var_4 ) { result = result || ( var_6 . equals ( var_7 ) ) ; } if ( ! result ) { var_1 . add ( var_6 ) ; } } }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.long id ) { java.lang.string var_2 = var_1. getname ( ) ; type_2 var_3 = var_4. method_2 ( var_2 ) ; type_2 var_5 = var_4. method_3 ( id ) ; type_3 var_6 = new type_3 ( ) ; var_6. method_4 ( var_3 ) ; var_6. method_5 ( var_5 ) ; var_6. method_6 ( false ) ; var_6. method_7 ( true ) ; var_7. method_8 ( var_6 ) ; return string_1 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 . method_2 ( var_1 , string_1 ) ; int index = method_3 ( var_1 . method_4 ( ) ) ; if ( index >= 0 ) { long time = ( ( long ) ( ( var_1 . gettime ( ) . method_5 ( ) ) * ( var_2 . get ( index ) . var_3 ) ) ) ; return new type_1 ( time ) ; } return var_1 . gettime ( ) . method_6 ( ) ; }
[0]: public static java.util.map < type_1, type_2 > method_1 ( type_1 file ) { java.util.map < type_1, type_2 > var_1 = new type_3 < type_1, type_2 > ( ) ; for ( type_1 var_2 : type_4. method_2 ( file ) ) { type_2 var_3 = type_4. method_3 ( var_2 ) ; var_1. put ( var_2, var_3 ) ; } return var_1 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_1 == null ) { return false ; } java.lang.string token = ( ( java.lang.string ) ( var_2 . method_2 ( var_1 . method_3 ( ) ) . get ( ) ) ) ; if ( ( token == null ) || ( ! ( token . equals ( var_1 . method_4 ( ) ) ) ) ) { return false ; } var_2 . method_2 ( var_1 . method_3 ( ) ) . method_5 ( var_3 , var_4 ) ; return true ; }
[0]: public static type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception, type_3 { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( true ) ; if ( ( var_3 ) == null ) { throw new type_3 ( string_1 ) ; } var_2. method_3 ( var_3 ) ; type_4. method_1 ( var_2, var_1 ) ; return var_2 ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { if ( ! ( method_2 ( var_2 ) ) ) { type_2 . method_3 ( this , string_1 ) ; return ; } var_3 = new type_3 ( ) ; var_4 = new java.lang.thread ( var_3 ) ; var_4 . start ( ) ; java.lang.system.out.println ( string_2 ) ; method_4 ( ) ; }
[0]: private void method_1 ( final type_1 < type_2 > var_1, final type_2 event ) { try { var_1. method_2 ( this, event ) ; } catch ( java.lang.exception var_2 ) { var_3. remove ( var_1 ) ; if ( ( var_4 )!= null ) { var_4. method_3 ( var_2 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 , int var_3 , type_1 var_4 ) { java.lang.system.out.println ( var_1 ) ; java.lang.system.out.println ( var_2 ) ; java.lang.system.out.println ( var_3 ) ; var_5 . method_2 ( var_1 , var_2 , var_3 ) ; java.util.list < type_2 > var_6 = var_7 . method_3 ( ) ; var_4 . method_4 ( string_1 , var_6 ) ; return string_2 ; }
[0]: public void method_1 ( type_1 var_1, type_2 response ) throws java.lang.exception { java.lang.string path = type_3. method_2 ( method_3 ( string_1, var_1 ) ) ; if ( ( path == null ) || ( type_4. method_4 ( path ) ) ) { throw new java.lang.exception ( string_2 ) ; } boolean var_2 = method_5 ( ). method_1 ( path ) ; method_6 ( new type_5 ( ). put ( string_3, var_2 ). tostring ( ), response. method_7 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { this . var_1 . method_2 ( this . var_1 . method_3 ( ) , ( ( this . var_2 . method_4 ( method_5 ( ) ) ) * ( var_3 ) ) ) ; this . var_4 = this . var_2 . method_4 ( this . var_4 ) ; }
[0]: public void method_1 ( type_1 out ) throws java.io.ioexception { super. method_1 ( out ) ; int var_1 = var_2. size ( ) ; out. method_2 ( var_1 ) ; for ( int i = 0 ; i < var_1 ; i ++ ) { type_2 var_3 = var_2. get ( i ) ; out. method_3 ( var_3. method_4 ( ) ) ; out. method_3 ( var_3. method_5 ( ) ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 , type_2 , type_3 { type_4 var_1 = new type_4 ( ) ; var_1 . method_2 ( type_5 . method_3 ( ) ) ; var_1 . method_4 ( new type_6 ( string_1 ) ) ; var_1 . method_5 ( var_2 ) ; var_3 . method_6 ( var_1 ) ; method_7 ( var_4 ) . method_8 ( var_1 ) ; }
[0]: public java.util.list < java.util.map < java.lang.string, java.lang.object > > handle ( type_1 var_1 ) { java.util.list < java.util.map < java.lang.string, java.lang.object > > rows = new java.util.arraylist < java.util.map < java.lang.string, java.lang.object > > ( ) ; while ( var_1. method_1 ( ) ) { rows. add ( this. method_2 ( var_1 ) ) ; } return rows ; }

************

************
tgt: public void method_1 ( double var_1 , double var_2 , double var_3 , double var_4 , float var_5 , float var_6 , float var_7 , float var_8 ) { type_1 . method_2 ( var_1 , var_2 , var_3 , var_4 , var_5 , var_6 , var_7 , var_8 ) ; if ( var_9 ) type_1 . method_3 ( false ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { var_2. method_2 ( ) ; type_3 var_3 = var_1. method_3 ( var_4 ) ; for ( int i = 0 ; i < ( var_3. method_4 ( ) ) ; i ++ ) { type_2 var_5 = var_3. method_5 ( 0 ) ; type_1 var_6 = new type_1 ( ) ; var_7 = var_5. method_6 ( var_8 ) ; var_9 = var_5. method_6 ( var_10 ) ; var_2. add ( var_6 ) ; } return var_2 ; }

************

************
tgt: public void add ( int data ) { ( this . size ) ++ ; if ( ( this . var_1 ) == null ) { this . var_1 = new type_1 ( data ) ; } else { type_1 var_2 = this . var_1 ; while ( ( var_3 ) != null ) { var_2 = var_3 ; } var_3 = new type_1 ( data ) ; } }
[0]: private int method_1 ( int var_1 ) throws java.io.ioexception { int var_2 = 0 ; method_2 ( ) ; if ( ( ( ( var_3 )!= char_1 ) && ( ( var_3 )!= char_2 ) ) && ( ( var_3 )!= char_3 ) ) { method_3 ( ) ; } while ( ( var_3 ) == char_1 ) { method_2 ( ) ; method_3 ( ) ; if ( ( ++ var_2 ) == var_1 ) { break ; } } return var_2 ; } }

************

************
tgt: public static boolean method_1 ( final type_1 var_1 ) { final type_2 var_2 = type_3 . method_2 ( ) ; if ( var_2 == null ) return false ; if ( ! ( var_3 . contains ( var_1 . method_3 ( ) ) ) ) type_3 . method_4 ( var_1 . method_3 ( ) ) ; java.util.map < type_1 , java.lang.class < ? > > var_4 = var_5 . get ( var_1 . method_3 ( ) ) ; return ( var_4 != null ) && ( ( var_4 . get ( var_1 ) ) != null ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2. get ( var_1 ) )!= null ) { var_3 = var_2. get ( var_1 ) ; type_2. i ( string_1, ( ( var_3 ) + string_2 ) ) ; type_3. method_2 ( this, ( string_3 + ( var_3 ) ), var_4 ). show ( ) ; return false ; } return true ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_3 ) ( method_3 ( var_6 ) ) ) ; var_3 . method_4 ( this ) ; var_5 . method_5 ( new type_4 ( var_5 ) ) ; }
[0]: protected void method_1 ( type_1 state ) { if ( state instanceof type_2 ) { final type_2 var_1 = ( ( type_2 ) ( state ) ) ; super. method_1 ( var_1. method_2 ( ) ) ; method_3 ( var_2 ) ; var_3. settext ( var_4 ) ; var_5. settext ( var_4 ) ; } else { super. method_1 ( state ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { method_2 ( var_1 ) ; try ( type_1 var_2 = new type_1 ( ( ( ( var_3 ) + ( var_4 ) ) + var_1 ) ) ) { type_2 var_5 = var_2 . method_3 ( ) ; while ( var_5 . method_4 ( ) ) { method_5 ( var_2 , var_5 ) ; } } catch ( java.io.ioexception var_6 ) { type_3 . method_6 ( var_7 ) ; type_4 . method_7 ( string_1 , var_6 ) ; } }
[0]: public long method_1 ( ) { if ( var_1. isempty ( ) ) { return var_2. size ( ) ; } java.util.collections.sort ( var_2 ) ; java.util.collections.sort ( var_1 ) ; java.util.date var_3 = var_2. get ( ( ( var_2. size ( ) ) - 1 ) ) ; long var_4 = 0 ; for ( java.util.date date : var_2 ) { if ( date. method_2 ( var_3 ) ) { var_4 ++ ; } } return var_4 ; } return 0 ; }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( ) ; if ( ( var_2 ) != null ) { for ( type_1 p : var_2 . method_3 ( ) ) { type_2 < type_1 > var_3 = new type_2 < > ( ) ; var_3 . method_4 ( type_3 . method_5 ( var_4 ) ) ; var_3 . setvalue ( p ) ; var_1 . add ( var_3 ) ; } } }
[0]: public int method_1 ( type_1 source, long var_1 ) throws type_2 { int result = 0 ; type_3 var_2 = source. method_2 ( ) ; type_4 var_3 = null ; var_3 = var_2. method_3 ( var_4 ) ; var_3. method_4 ( 1, var_1 ) ; result = var_3. method_5 ( ) ; var_3. method_6 ( ) ; var_2. method_6 ( ) ; return result ; }

************

************
tgt: private java.lang.string method_1 ( int number ) { java.lang.stringbuilder temp = new java.lang.stringbuilder ( java.lang.integer . method_2 ( number ) ) ; int length = temp . length ( ) ; for ( int i = 0 ; i < ( int_1 - length ) ; i ++ ) temp . append ( "0" ) . append ( temp ) ; return temp . tostring ( ) ; }
[0]: protected void method_1 ( ) { if ( ( ( ( var_1 )!= ( var_2 ) ) && ( ( var_3 )!= null ) ) && ( ( var_4 )!= null ) ) { var_1 = var_2 ; method_2 ( ) ; var_3. method_3 ( ) ; method_4 ( 0, null ) ; } else { method_4 ( 0, null ) ; } }

************

************
tgt: private void method_1 ( int i ) { while ( ( i > 1 ) && ( ( method_2 ( var_1 . get ( i ) , var_1 . get ( ( i / int_1 ) ) ) ) > 0 ) ) { method_3 ( i , ( i / int_1 ) ) ; i /= int_1 ; } }
[0]: public static void method_1 ( int [ ] [ ] var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_1. length ) ; var_2 ++ ) { for ( int var_3 = 0 ; var_3 < int_1 ; var_3 ++ ) { java.util.random var_4 = new java.util.random ( ) ; var_1 [ var_2 ] [ var_3 ] = var_4. method_2 ( int_2 ) ; } } }

************

************
tgt: public void method_1 ( ) { if ( ( length ) > 0 ) { type_1 var_1 = var_2 . get ( ( ( length ) - ( length ) ) ) ; var_1 . method_2 ( var_3 . get ( length ) . method_3 ( ) ) ; var_1 . method_4 ( var_3 . get ( length ) . method_5 ( ) ) ; var_2 . add ( length , var_1 ) ; } }
[0]: public java.lang.string put ( java.lang.string key, java.lang.string value ) { if ( ( size ) == ( ( var_1 ) * ( var_2 ) ) ) { method_1 ( ) ; } type_1 var_3 = var_4 [ method_2 ( key ) ] ; java.lang.string var_5 = var_4 [ method_2 ( key ) ]. add ( key, value ) ; if ( var_5!= null ) { ++ ( size ) ; return var_5 ; } else { return null ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { if ( var_1 ) { return null ; } type_2 var_2 = var_3 . method_2 ( var_4 ) ; var_4 = var_2 . method_3 ( ) ; if ( ( ( var_4 ) == null ) || ( var_4 . isempty ( ) ) ) { var_1 = true ; } if ( var_2 . method_4 ( ) . isempty ( ) ) { return null ; } else { return var_2 . method_4 ( ) ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) throws type_2 { type_3 status = this. var_3. method_2 ( var_1 ) ; if ( ( status!= null ) && (! ( status. method_3 ( ) ) ) ) { if ( status. method_4 ( ). equals ( var_2 ) ) { method_5 ( var_1 ) ; } else { throw new type_2 ( string_1 ) ; } } else { throw new type_2 ( string_2 ) ; } this. var_3. remove ( status ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 , type_1 var_3 ) throws type_3 { java.lang.string title = var_3 . getstring ( string_1 ) ; java.lang.string content = var_3 . getstring ( string_2 ) ; java.lang.string writer = var_3 . getstring ( string_3 ) ; boolean var_4 = var_3 . getboolean ( string_4 ) ; int status = var_5 . method_2 ( string_5 , title , string_6 , content , string_7 , writer , string_8 , var_4 , string_9 ) ; var_6 . put ( string_10 , status ) ; return var_6 ; }
[0]: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( type_2 var_2 : var_3 ) { if ( ( var_2. getvalue ( ) )!= null ) { method_2 ( var_1, var_2 ) ; } } return var_1 ; }

************

************
tgt: public void method_1 ( ) { int n ; for ( int j = 0 ; j < int_1 ; j ++ ) { for ( int i = 1 ; i < int_2 ; i ++ ) { if ( type_1 . method_2 ( i , j , var_1 ) ) { n = type_1 . method_3 ( i , j , var_1 ) ; if ( n >= 0 ) { var_1 [ n ] [ j ] . method_4 ( i ) ; break ; } } } } }
[0]: private int method_1 ( type_1 var_1 ) { int offset ; offset = var_1. method_2 ( ). size ( ) ; offset = ( offset == 1 )? offset - 1 : offset - int_1 ; return ( ( var_1. method_3 ( ) ) - ( ( var_1. size ( ) ) - offset ) ) + int_1 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_2 ) == null ) { return var_1 ; } var_2 . method_2 ( ) ; type_1 result = var_2 ; var_2 = null ; if ( ( method_3 ( ) ) instanceof type_3 ) { result = ( ( type_3 ) ( method_3 ( ) ) ) . method_1 ( var_1 ) ; } return super . method_1 ( result ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 file ) throws java.lang.exception { type_3 var_2 = new type_3 ( ) ; var_2. method_2 ( file. method_3 ( ) ) ; var_2. method_4 ( file. method_5 ( ) ) ; var_2. method_6 ( file. method_7 ( ) ) ; var_2. method_8 ( file. method_9 ( ) ) ; var_3. method_10 ( var_2 ) ; var_1. method_11 ( var_2. getid ( ) ) ; }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( java.lang.string var_1 ) throws java.io.ioexception { java.util.list < java.lang.string > var_2 = null ; try { if ( ( this . var_3 ) == null ) { method_2 ( ) ; } java.util.list < java.lang.string > var_4 = java.util.arrays.aslist ( ( ( java.lang.string ) ( this . var_3 . get ( var_1 ) ) ) . split ( string_1 ) ) ; return var_4 ; } catch ( java.lang.exception var_5 ) { var_5 . method_4 ( ) ; } return null ; }
[0]: private boolean method_1 ( type_1 node, type_2 var_1 ) throws java.lang.exception { type_3 status ; java.lang.string var_2 = var_3 ; status = this. method_2 ( node, var_2, null, null ) ; if (! ( status. method_3 ( ) ) ) { type_4. method_4 ( string_1, var_2, status ) ; return false ; } type_4. method_4 ( string_2, node ) ; return true ; }

************

************
tgt: public void method_1 ( ) { var_1 = ( ( type_1 ) ( var_2 . get ( java.lang.string . method_2 ( this . var_3 ) ) ) ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_3 ( ) ; var_4 . method_9 ( ) ; var_4 . method_10 ( ) ; for ( type_2 var_5 : var_4 . method_11 ( ) ) { var_5 . method_12 ( ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { type_2 var_1 = new type_2 ( 0 ) ; return var_2. method_2 ( ). method_3 ( ( var_3 ) - > new type_1 ( var_1. method_4 ( ), var_3 ) ). method_5 ( type_3. method_6 ( ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; int var_5 = type_3 . method_4 ( this , var_6 ) ; if ( var_5 != ( var_7 ) ) { type_3 . method_5 ( this , var_8 , var_9 ) ; } else { type_4 var_10 = new type_4 ( ) ; var_10 . execute ( this ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { final java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; int var_2 = method_2 ( ) ; for ( int i = 0 ; i < ( var_3. size ( ) ) ; ++ i ) { if ( i!= var_2 ) { for ( type_1 var_4 : var_3. get ( i ) ) var_1. add ( var_4 ) ; } } return var_1 ; }

************

************
tgt: private void method_2 ( ) throws java.io.ioexception { int var_1 = var_2 . method_2 ( var_3 ) ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; if ( var_1 > 0 ) { state = var_4 ; var_5 . method_3 ( new type_1 ( var_1 ) ) ; } var_6 . method_5 ( var_7 ) ; var_6 . method_6 ( ) . method_7 ( ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { try { var_2 = new java.net.url ( var_1 ) ; new java.lang.thread ( this ). start ( ) ; } catch ( type_1 var_3 ) { var_3. method_2 ( ) ; } return ( var_2 )!= null ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , type_1 var_4 ) throws type_2 { if ( ( string_1 . equals ( var_3 ) ) || ( string_2 . equals ( var_3 ) ) ) { message = new type_4 ( ) ; var_5 . add ( message ) ; var_6 = var_4 . getvalue ( string_3 ) ; } else if ( type_5 . equals ( var_3 ) ) { var_7 = true ; } var_8 = var_3 ; }
[0]: public boolean method_1 ( ) { if ( ( method_2 ( ) )!= ( var_1 ) ) return false ; if (! ( method_3 ( ) ) ) return false ; method_4 ( var_2 ) ; if ( ( var_3 )!= null ) var_3. method_5 ( method_6 ( ) ) ; return true ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { return ( ( ( ( this . var_1 ) == var_1 ) && ( ( this . var_2 ) == var_2 ) ) || ( ( ( this . var_1 ) == var_2 ) && ( ( this . var_2 ) == var_1 ) ) ) || ( var_1 == var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) + ( var_5 ) ) + string_4 ) + ( var_6 ) ) + string_5 ) + ( var_7 ) ) + string_4 ) + ( var_8 ) ) + string_4 ) + string_6 ; var_1. method_2 ( var_2 ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = ( ( var_1 ) + 1 ) % ( var_2 . size ( ) ) ; var_3 = var_2 . get ( var_1 ) ; method_2 ( var_3 , var_1 ) ; java.lang.system.out.println ( ( string_1 + ( var_3 . tostring ( ) ) ) ) ; }
[0]: public void method_1 ( int var_1 ) { if ( ( var_2 )!= var_1 ) { var_2 = var_1 ; var_3 = ( var_4 ) / var_1 ; method_2 ( ) ; var_5. method_3 ( var_1 ) ; var_5. method_4 ( var_6 ) ; if (! ( method_5 ( ) ) ) { method_6 ( ) ; } } }

************

************
tgt: private void method_1 ( ) { var_1 = 0 ; var_2 . settext ( getstring ( var_3 ) ) ; type_1 item = var_4 . get ( 0 ) ; method_2 ( item ) ; var_5 . method_3 ( var_6 ) ; var_5 . method_5 ( 0 ) ; }
[0]: private void method_1 ( ) { java.lang.string message = var_1. gettext ( ) ; if ( message. equals ( string_1 ) ) { return ; } var_1. settext ( string_1 ) ; type_1 var_2 = new type_1 ( message, var_3 ) ; method_2 ( var_2 ) ; method_3 ( message ) ; var_1. settext ( string_1 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_3 [ ] var_3 = new type_3 [ 1 ] ; var_1 . method_3 ( var_1 . method_4 ( ) ) . method_5 ( string_1 ) ; type_4 var_4 = new type_4 ( var_3 ) ; assertequals ( var_4 . method_6 ( ) , string_1 ) ; }
[0]: public static void method_1 ( ) { java.lang.system.out.println ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { if ( ( ( i % int_2 ) == 0 ) && ( i!= 0 ) ) { java.lang.system.out.println ( ) ; java.lang.system.out.println ( string_1 ) ; } java.lang.system.out.println ( ( string_2 + ( i + 1 ) ) ) ; } java.lang.system.out.println ( ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { int var_2 = ( value ) ^ ( var_1 & int_1 ) ; if ( ( ( ( var_1 & int_2 ) != 0 ) && ( ( ( value ) & int_2 ) == 0 ) ) || ( ( ( var_1 & int_2 ) == 0 ) && ( ( ( value ) & int_2 ) != 0 ) ) ) { var_2 = - var_2 ; } value = var_2 ; }
[0]: public void method_1 ( ) { if ( this. var_1. method_2 ( item ) ) { final java.util.set < type_1 > var_2 = this. var_1. get ( item ) ; var_2. remove ( var_3 ) ; if ( var_2. isempty ( ) ) this. var_1. remove ( item ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { var_3 . method_1 ( var_1 ) ; if ( var_1 . method_4 ( ) ) { type_3 . method_5 ( string_2 ) ; } } catch ( java.io.ioexception var_4 ) { type_3 . method_5 ( ( string_3 + ( var_4 . method_6 ( ) ) ) ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) ; if ( var_3 ) { var_4. method_4 ( ) ; method_5 ( ) ; var_5. method_6 ( ) ; var_3 = false ; } else { if ( method_7 ( ) ) { var_4. start ( ) ; var_4. method_8 ( int_1 ) ; type_2. method_9 ( ) ; var_3 = true ; } else { method_5 ( ) ; } } }

************

************
tgt: public static int method_1 ( int [ ] [ ] a ) { int var_1 = var_2 ; for ( int i = 0 ; i < ( a . length ) ; i ++ ) { for ( int j = 0 ; j < ( a [ i ] . length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > var_1 ) { var_1 = a [ i ] [ j ] ; } } } return var_1 ; }
[0]: public type_1 method_1 ( ) { if ( ( first )!= ( ( ( var_1 ) + 1 ) % ( var_2. length ) ) ) { if ( ( first ) > 0 ) { return ( ( type_1 ) ( var_2 [ ( ( first ) - 1 ) ] ) ) ; } else { return ( ( type_1 ) ( var_2 [ ( ( var_2. length ) - 1 ) ] ) ) ; } } return null ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( new type_2 ( ) , new type_3 ( ) ) ; method_2 ( var_1 . method_3 ( ) ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . start ( var_2 ) ; asserttrue ( var_1 . method_3 ( ) ) ; var_1 . method_4 ( ) ; method_2 ( var_1 . method_3 ( ) ) ; } }
[0]: public int method_1 ( int number ) { type_1 var_1 = null ; for ( type_1 var_2 : var_3 ) { if ( ( var_2. method_2 ( ) ) == number ) { var_1 = var_2 ; } } if ( var_1 == null ) { return 0 ; } else { return var_1. getid ( ) ; } } return - 1 ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { if ( var_1 == null ) { return null ; } type_1 var_2 = type_1 . method_2 ( ) ; var_2 . method_3 ( var_1 . method_4 ( ) ) ; var_2 . method_5 ( ( ( var_1 . method_6 ( ) ) == null ) ) ; var_2 . method_7 ( var_1 . method_8 ( ) ) ; var_2 . method_9 ( var_1 . method_10 ( ) ) ; var_2 . method_11 ( var_1 . method_12 ( ) . size ( ) ) ; return var_2 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; var_2. method_3 ( 0 ) ; var_2. method_1 ( ) ; this. var_3. method_4 ( ) ; for ( int i = 0 ; i < ( var_4. length ) ; i ++ ) var_4 [ i ] = null ; method_5 ( ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 , int var_3 , int var_4 , int var_5 ) { if ( ( var_2 < var_1 ) || ( var_2 > ( var_1 * ( var_6 ) ) ) ) return false ; if ( ( var_4 < var_3 ) || ( var_4 > ( var_3 * ( var_6 ) ) ) ) return false ; return true ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ) ) == ( var_2 ) ) { if ( ( var_3 )!= null ) { var_3 = null ; method_3 ( ) ; return ; } var_4 = var_5 = true ; type_2. method_4 ( int_1, string_1 ) ; method_5 ( false ) ; method_6 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { switch ( method_2 ( ) ) { case var_2 : method_3 ( var_1 , string_1 , 1 , var_3 ) ; break ; case var_4 : method_3 ( var_1 , null , 0 , var_5 ) ; break ; case var_6 : method_3 ( var_1 , null , 0 , var_7 ) ; break ; case var_8 : method_3 ( var_1 , null , 0 , var_3 ) ; break ; } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string str ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; while ( ( str. length ( ) ) > 0 ) { str = method_2 ( str, var_1 ) ; } line = 0 ; var_2 = 0 ; return var_1 ; }

************

************
tgt: protected byte [ ] method_1 ( java.util.arraylist < java.lang.integer > list ) { if ( list == null ) return null ; byte [ ] var_1 = new byte [ list . size ( ) ] ; java.util.iterator < java.lang.integer > iterator = list . iterator ( ) ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_1 [ i ] = iterator . method_2 ( ) . method_3 ( ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 event ) throws java.io.ioexception { int i ; try { i = java.lang.integer.parseint ( var_1. gettext ( ) ) ; } catch ( java.lang.exception var_2 ) { return ; } method_2 ( ) ; method_3 ( i ) ; method_4 ( i ) ; method_5 ( ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( ) ; if ( type_2 . method_2 ( var_1 . method_3 ( 0 ) ) ) { return method_4 ( var_1 ) ; } else { var_2 . settext ( var_1 ) ; var_2 . method_5 ( string_1 ) ; return var_2 ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; method_4 ( ) ; method_5 ( var_3 ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; method_11 ( ) ; var_3. method_12 ( var_4 ) ; var_5 = method_13 ( ) ; var_6 = method_14 ( ). method_15 ( var_7 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { boolean var_2 = true ; int i = 0 ; java.lang.string var_3 = string_1 ; while ( i < ( var_1 . length ( ) ) ) { if ( var_2 ) { var_3 += java.lang.string . method_2 ( var_1 . method_3 ( i ) ) ; var_2 = false ; } else { var_2 = true ; } i ++ ; } return var_3 ; }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( var_1!= null ) { var_2 = var_1 ; int i = var_2. method_2 ( char_1 ) ; i = java.lang.integer.parseint ( var_2. substring ( 0, i ) ) ; if ( i > ( var_3 ) ) var_3 = ( ( byte ) ( i ) ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { to = var_1 . gettext ( ) . tostring ( ) ; android.content.intent intent = new android.content.intent ( this , var_2 class ) ; intent . method_2 ( string_1 , var_3 ) ; intent . method_2 ( "id" , id ) ; intent . method_2 ( string_2 , to ) ; method_3 ( intent ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = null ; if ( var_1!= null ) { var_2 = new type_1 ( ) ; var_2. method_2 ( var_1. getstring ( ""id"" ) ) ; var_2. method_3 ( var_1. getstring ( string_1 ) ) ; var_2. method_4 ( var_1. getstring ( string_2 ) ) ; var_2. method_5 ( this. method_6 ( var_1. method_7 ( string_3 ) ) ) ; } return var_2 ; }

************

************
tgt: private boolean method_1 ( type_1 [ ] c , int a , int b ) { for ( int i = b - 1 ; i >= a ; i -- ) { if ( type_2 . method_2 ( c [ ( i + 1 ) ] , c [ i ] ) ) { return false ; } } return true ; }
[0]: public int method_1 ( ) { if ( method_2 ( ) ) { return 1 ; } else if ( method_3 ( ) ) { return int_1 ; } else if ( method_4 ( ) ) { return int_2 ; } else if ( method_5 ( ) ) { return int_3 ; } return 0 ; } }

************

************
tgt: public void method_1 ( ) { this . var_1 = ( this . var_2 ) / ( ( ( this . var_3 ) / int_1 ) + 1 ) ; this . var_4 = ( this . var_1 ) * int_2 ; if ( ( this . var_1 ) < float_1 ) { this . var_1 = ( ( float ) ( float_1 ) ) ; } if ( ( this . var_4 ) < 1.0 ) { this . var_4 = ( ( float ) ( 1.0 ) ) ; } }
[0]: private type_1 method_1 ( ) { type_1 var_1 ; try { var_1 = ( ( type_1 ) ( getactivity ( ) ) ) ; } catch ( type_2 var_2 ) { throw new type_3 ( java.lang.string.format ( string_1, var_3 class. method_2 ( ) ) ) ; } return var_1 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( final type_1 var_1 , final type_2 var_2 ) { var_3 = new java.util.arraylist < > ( ) ; assert var_1 != null ; assert var_2 != null ; var_4 = var_1 ; var_5 = null ; method_2 ( var_2 ) ; assert ( ( var_1 . method_3 ( ) . size ( ) ) == 0 ) || ( ( var_3 . size ( ) ) != 0 ) ; return var_3 ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 text ) { final type_4 var_2 = var_3. method_2 ( ) ; text = type_5. method_3 ( text, var_1 ) ; if ( var_1 == ( var_4 ) ) { return new type_6 ( var_2, var_5, var_6, text ) ; } else { return new type_7 ( var_2, var_5, var_6, text, var_7 ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 ( this ) ; var_1 . method_2 ( var_2 , var_3 , var_3 , var_4 , var_5 ) ; var_1 . method_3 ( this , this , this , this ) ; android.view.view var_8 = method_4 ( var_9 ) ; var_8 . method_5 ( true ) ; var_10 = ( ( type_2 ) ( method_4 ( var_11 ) ) ) ; }
[0]: public void method_1 ( java.util.map var_1, java.lang.string fieldname ) { if ( ( var_2 ) == ( var_3 ) ) { type_1 var_4 = new type_1 ( var_1, fieldname ) ; type_2 var_5 = method_2 ( ) ; var_6 = var_4 ; var_7 = context ; var_2 = var_8 ; } }

************

************
tgt: public java.lang.long method_1 ( java.lang.string var_1 , java.lang.long var_2 ) throws type_1 { type_2 var_3 = new type_2 ( var_1 , ( var_2 != null ? var_2 . method_2 ( ) : - 1 ) ) ; java.lang.long var_4 = this . var_5 . get ( var_3 ) ; if ( var_4 != null ) return var_4 ; var_4 = method_3 ( var_1 , var_2 , null ) ; this . var_5 . put ( var_3 , var_4 ) ; return var_4 ; }
[0]: public void method_1 ( android.view.view view ) { int id = view. getid ( ) ; type_1 var_1 = ( ( type_1 ) ( view ) ) ; if ( var_1. method_2 ( ) ) { type_2. method_3 ( var_2, string_1 ) ; } else { type_2. method_3 ( var_2, string_2 ) ; } }

************

************
tgt: public boolean method_1 ( int id ) { boolean var_1 = false ; int var_2 = var_3 . method_2 ( ) ; if ( var_2 < int_1 ) { int count = var_3 . method_1 ( id ) ; if ( count > 0 ) { var_1 = true ; } } return var_1 ; }
[0]: public type_1 start ( type_2 var_1 ) throws type_3 { var_2. method_1 ( var_1 ) ; var_2. method_2 ( var_1. method_3 ( ) ) ; java.util.list < type_4 > var_3 = var_4 ; type_1 var_5 = new type_1 ( string_1 ) ; var_5. method_4 ( string_2, var_3 ) ; return var_5 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_2 var_3 = new type_2 ( ( var_4 + 1 ) ) ; var_3 . method_2 ( var_5 . method_3 ( ( var_4 + 1 ) ) . method_4 ( ) ) ; if ( var_6 . method_5 ( ) ) { var_6 . method_6 ( false ) ; var_3 . method_7 ( false ) ; } else { var_6 . method_6 ( true ) ; var_3 . method_7 ( true ) ; } var_5 . method_8 ( var_3 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; type_1 var_1 = method_3 ( ) ; try { method_4 ( var_1 ) ; method_5 ( var_1 ) ; type_2 var_2 = method_6 ( ). method_7 ( var_3 ). method_8 ( var_4 ). method_9 ( new type_3 ( ). method_10 ( var_5 ) ) ; var_1. method_11 ( new type_4 ( var_2 ) ) ; } finally { var_1. method_12 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { new type_1 ( ) . execute ( var_2 , var_3 ) ; try { var_4 . remove ( string_1 ) ; var_4 . put ( string_1 , var_3 ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_2 ( ) ; } var_6 . settext ( string_2 ) ; var_7 . method_3 ( var_8 ) ; var_9 . method_3 ( var_8 ) ; var_10 . method_3 ( var_11 ) ; }
[0]: public static type_1 method_1 ( type_1 var_1, double var_2 ) { final type_1 var_3 = new type_1 ( ) ; type_2. method_2 ( var_1, var_3, var_4 ) ; final type_1 var_5 = new type_1 ( ) ; type_3. method_3 ( var_3, new type_4 ( int_1, int_2, int_3 ), new type_4 ( int_4, int_5, int_4 ), var_5 ) ; var_5. method_4 ( var_5, var_6 ) ; return var_5 ; }

************

************
tgt: public boolean method_1 ( int index ) { java.util.list var_1 = method_2 ( ) ; try { type_1 . delete ( path ) ; } catch ( java.io.ioexception var_2 ) { java.util.logging.logger.getlogger ( var_3 class . getname ( ) ) . method_3 ( var_4 , null , var_2 ) ; return false ; } var_1 . remove ( index ) ; method_4 ( var_1 ) ; return true ; }
[0]: private void method_1 ( type_1 var_1 ) { method_2 ( var_2 ) ; type_2. method_3 ( this ) ; var_3. method_4 ( this ) ; var_3. method_5 ( ). method_6 ( 0 ). method_7 ( true ) ; android.widget.linearlayout var_4 = ( ( android.widget.linearlayout ) ( var_3. method_8 ( 0 ) ) ) ; var_4. method_9 ( new type_3 ( ) { public void method_10 ( android.view.view var_5 ) { method_11 ( var_6 ) ; var_7. method_12 ( var_8 ) ; } } ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( string_1 , string_2 ) ; java.lang.string [ ] [ ] var_2 = var_1 . method_1 ( ) ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { for ( int j = 1 ; j < int_2 ; j ++ ) { java.lang.system.out.print ( ( ( var_2 [ i ] [ j ] ) + string_3 ) ) ; } java.lang.system.out.println ( ) ; } }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) % int_1 ) == 0 ) { method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; } else { method_9 ( type_1. method_10 ( var_2 ) ) ; } method_11 ( type_1. method_10 ( var_3 ) ) ; method_12 ( ) ; execute ( ) ; }

************

************
tgt: public java.util.list < type_1 > execute ( ) { if ( ( end ) != null ) { if ( ( var_1 ) == 0 ) { return var_2 . method_1 ( var_3 , start , end ) ; } else { return var_2 . method_2 ( var_3 , start , end , var_1 ) ; } } else { if ( ( var_1 ) == 0 ) { return var_2 . method_3 ( var_3 , start ) ; } else { return var_2 . method_4 ( var_3 , start , var_1 ) ; } } }
[0]: public type_1 method_1 ( type_2 message, type_3 var_1 ) { type_4. method_2 ( ). method_3 ( ( ) - > { type_5 var_2 = var_3. method_4 ( ) ; if ( var_2!= null ) { type_6. method_5 ( var_2, var_4 ) ; type_7. method_5 ( var_2, var_4 ) ; } } ) ; return null ; } }

************

************
tgt: private type_1 method_1 ( final type_1 var_1 , final type_2 var_2 ) throws type_3 { type_1 var_3 ; if ( var_1 == null ) { var_3 = this . var_4 . method_2 ( ) ; } else { var_3 = var_1 ; } final java.lang.string name = var_2 . getvalue ( "name" ) ; final java.lang.string var_5 = var_2 . getvalue ( string_1 ) ; type_4 . info ( string_2 , var_3 . method_3 ( ) , name , var_5 ) ; return var_3 . method_4 ( name , var_5 ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; type_2. method_3 ( null ) ; type_3 var_2 = var_1. method_4 ( ) ; try { if ( var_2. method_5 ( ) ) var_2. commit ( ) ; } catch ( type_4 var_3 ) { if ( ( var_2!= null ) && ( var_2. method_5 ( ) ) ) var_2. method_6 ( ) ; throw var_3 ; } finally { var_1. method_7 ( ) ; } } }

************

************
tgt: public java.util.hashmap < java.lang.string , double [ ] > method_1 ( int var_1 ) { this . method_2 ( var_1 ) ; java.util.hashmap < java.lang.string , double [ ] > var_2 = new java.util.hashmap < > ( ) ; var_2 . put ( string_1 , this . var_3 . get ( ( var_1 - 1 ) ) . method_3 ( ) ) ; var_2 . put ( string_2 , this . var_3 . get ( ( var_1 - 1 ) ) . method_4 ( ) ) ; return var_2 ; }
[0]: boolean method_1 ( type_1 var_1 ) { return ( ( var_2 ) && (! ( var_1. method_2 ( ) ) ) ) || ( ( ( (! ( var_2 ) ) && ( ( var_3 )!= null ) ) && (! ( var_3. isempty ( ) ) ) ) && (! ( var_3. equals ( var_1. method_3 ( ) ) ) ) ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) throws java.lang.exception { java.util.list < type_2 > var_2 = ( ( java.util.list < type_2 > ) ( var_3 . get ( var_1 ) ) ) ; type_1 var_4 = new type_1 ( string_1 , string_2 , var_2 ) ; return var_4 ; }
[0]: private void method_1 ( android.view.view view ) { type_1. method_2 ( var_1, string_1 ) ; var_2 = new type_2 ( this ) ; type_3 var_3 = new type_4 ( getactivity ( ) ) ; var_4 = ( ( type_5 ) ( view. method_3 ( var_5 ) ) ) ; var_4. method_4 ( var_2 ) ; var_4. method_5 ( var_3 ) ; type_6 var_6 = new type_7 ( var_2 ) ; type_8 var_7 = new type_8 ( var_6 ) ; var_7. method_6 ( var_4 ) ; }

************

************
tgt: public java.lang.string method_1 ( int var_1 ) { if ( ( var_2 . method_2 ( var_1 ) ) == char_1 ) { return string_1 ; } java.lang.string var_3 = string_2 ; var_3 = var_2 . method_3 ( var_1 ) ; if ( var_3 . contains ( string_3 ) ) ( this . var_5 ) ++ ; return var_3 ; }
[0]: public int method_1 ( type_1 state, type_2 var_1, type_3 var_2, int var_3 ) { int var_4 = state. method_2 ( ). method_3 ( state ) ; type_4 var_5 = ( ( type_5 ) ( state. method_2 ( ) ) ). var_6 [ var_4 ] ; if ( var_5!= null ) return var_5. getcolor ( ) ; return int_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_2 . method_3 ( var_1 . method_4 ( ) ) . method_5 ( new type_3 ( ) ) ; type_4 . assertthat ( new type_5 ( ) . method_6 ( var_1 ) . method_7 ( var_3 ) ) . method_8 ( false ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) { type_1 var_2 ; try { var_2 = var_3. method_2 ( ) ; } catch ( java.lang.exception var_4 ) { return ; } if ( var_2 == null ) { return ; } java.util.map < java.lang.string, java.lang.string > var_5 = method_3 ( var_1 ) ; type_2 var_6 = type_3. method_4 ( var_2 ) ; for ( type_4 var_7 : var_8 ) { var_7. method_5 ( var_6, var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 p = ( ( type_2 ) ( var_1 . method_2 ( ) ) ) ; var_2 . method_3 ( ) ; p . method_4 ( ) . method_5 ( p . method_6 ( ) ) ; var_2 . method_7 ( p . method_8 ( ) , p . method_9 ( ) ) ; }
[0]: public static java.lang.class method_1 ( java.lang.class var_1 ) { type_1 [ ] var_2 = var_1. method_2 ( ) ; for ( type_1 var_3 : var_2 ) { if ( var_3 instanceof type_2 ) { type_1 [ ] var_4 = ( ( type_2 ) ( var_3 ) ). method_3 ( ) ; if ( ( var_4. length ) > 1 ) { return ( ( java.lang.class ) ( var_4 [ 0 ] ) ) ; } } } return null ; }

************

************
tgt: public type_1 method_1 ( int var_1 ) { type_2 var_2 = var_3 . method_2 ( string_1 ) ; java.lang.string var_4 = java.lang.integer.tostring ( var_1 ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) if ( var_2 . get ( i ) . method_3 ( string_1 ) . getvalue ( ) . equals ( var_4 ) ) return new type_1 ( var_2 . get ( i ) ) ; return null ; }
[0]: private java.lang.long method_1 ( java.lang.string var_1 ) { type_1 query = var_2. method_2 ( string_1 ) ; query. method_3 ( string_2, var_1 ) ; java.util.list < type_2 > var_3 = ( ( java.util.list < type_2 > ) ( query. method_4 ( ) ) ) ; if ( ( var_3!= null ) && ( ( var_3. size ( ) )!= 0 ) ) { return var_3. get ( 0 ). getid ( ) ; } return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , android.view.view view , type_1 params ) { type_3 var_3 = method_3 ( var_1 , false ) ; var_2 = true ; type_1 b = var_1 . method_2 ( view , params ) ; if ( b != null ) params = b ; var_2 = false ; if ( var_3 != null ) { b = var_3 . method_4 ( var_1 , view , params ) ; if ( b != null ) params = b ; } return params ; }
[0]: public java.lang.string getstring ( java.lang.string var_1, java.lang.string var_2 ) { try { java.lang.string key = var_3. method_1 ( var_1 ) ; java.lang.string value = var_4. getstring ( key, var_2 ) ; if ( value!= null ) return var_3. method_2 ( value ) ; } catch ( java.lang.exception var_5 ) { var_5. method_3 ( ) ; } return null ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( false , false , false ) ; boolean result = var_1 . method_2 ( ) ; method_3 ( result ) ; var_1 . method_4 ( ) ; result = var_1 . method_2 ( ) ; method_3 ( result ) ; var_1 . method_5 ( ) ; result = var_1 . method_2 ( ) ; method_3 ( result ) ; var_1 . method_6 ( ) ; result = var_1 . method_2 ( ) ; asserttrue ( result ) ; }
[0]: private static double method_1 ( final java.lang.string var_1, final java.lang.string var_2, final double var_3, final double var_4, final type_1 var_5 ) { if ( var_5 == null ) { return var_6 ; } double var_7 = var_5. method_1 ( var_1, var_2 ) ; if ( var_7 < ( var_6 ) ) { return var_4 ; } else { return ( ( var_3 - ( var_6 ) ) * ( var_7 * var_7 ) ) + ( var_6 ) ; } }

************

************
tgt: public void method_1 ( final java.util.map < type_1 , java.util.set < type_2 < ? > > > var_1 ) { for ( type_1 var_3 : var_1 . method_3 ( ) ) { var_2 . get ( var_3 ) . method_5 ( var_1 . get ( var_3 ) ) ; } }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2 ) { try { if ( ( var_2!= null ) && ( var_2. method_2 ( ) ) ) { var_2. method_1 ( ) ; } type_3. method_1 ( var_1 ) ; } catch ( type_4 var_3 ) { throw new type_5 ( var_3. method_3 ( ), var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2 . method_2 ( string_1 , string_2 ) ; var_1 . method_3 ( var_2 . method_4 ( ) . method_5 ( var_3 [ 1 ] , null ) ) ; type_3 params = new type_3 ( var_4 , var_4 ) ; var_5 = ( ( int ) ( var_6 . method_6 ( 0 ) . method_7 ( ) ) ) ; var_7 = var_8 ; var_9 . method_8 ( var_1 , params ) ; var_10 = var_9 . method_6 ( 1 ) ; }
[0]: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = var_2. method_2 ( ). method_3 ( ) ; var_1. method_4 ( ). set ( var_3 ) ; if ( ( var_3 )!= null ) { var_1. method_5 ( ) ; } } else { var_1 = null ; } }

************

************
tgt: public java.util.map < java.lang.string , java.lang.integer > method_1 ( ) { java.util.map < java.lang.string , java.lang.integer > var_1 = new java.util.hashmap < java.lang.string , java.lang.integer > ( ) ; java.util.set < java.lang.string > keys = var_2 . method_3 ( this . var_3 ) ; java.util.iterator < java.lang.string > var_4 = keys . iterator ( ) ; while ( var_4 . method_4 ( ) ) { java.lang.string key = var_4 . method_5 ( ) ; var_1 . put ( key , ( - 1 ) ) ; } return var_1 ; }
[0]: public void method_1 ( ) { if ( type_1. method_2 ( method_3 ( ) ) ) { var_1. method_4 ( true ) ; new type_2 ( null, var_2, var_3, method_3 ( ) ). execute ( ) ; } else { var_1. method_4 ( false ) ; type_3. method_5 ( this, string_1, var_4 ). show ( ) ; } }

************

************
tgt: public void method_1 ( ) { while ( ( var_1 . method_3 ( ) ) == ( var_2 ) ) { short [ ] data = new short [ ( var_3 ) / int_1 ] ; var_1 . method_4 ( data , 0 , ( ( var_3 ) / int_1 ) ) ; var_4 . method_5 ( data ) ; } }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { if ( var_1 == 0 ) { if ( ( ( ( var_3. length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_4 ) ) ) && ( ( var_3 [ 1 ] ) == ( var_5 ) ) ) { var_6. setenabled ( true ) ; } } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ! ( this . type_2 . contains ( var_1 ) ) ) { throw new type_3 ( string_1 ) ; } else { type_4 . add ( var_1 ) ; var_1 . method_2 ( string_2 ) ; type_2 . remove ( var_1 ) ; type_4 . remove ( var_1 ) ; } return true ; }
[0]: public void method_1 ( ) { if ( ( java.lang.math.abs ( ( ( var_1 ) - ( var_2 ) ) ) ) > ( var_3 ) ) { return ; } if ( ( java.lang.math.abs ( ( ( var_4 ) - ( var_5 ) ) ) ) > ( var_3 ) ) { return ; } var_6 = true ; listener. method_2 ( ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; method_2 ( ) . method_3 ( ) ; if ( ( ! ( var_1 ) ) && ( ! ( var_3 ) ) ) method_4 ( ) ; else { if ( var_3 ) method_5 ( ) ; if ( var_1 ) method_6 ( ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 + ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) ; type_1 b = type_1. method_2 ( var_1 ) ; type_2 var_2 = new type_3 ( ) ; type_4 var_3 = var_2. method_3 ( b ) ; type_5. assertequals ( var_4, var_3 ) ; b. method_3 ( var_5, b. method_4 ( b. method_5 ( ), var_3 ) ) ; }

************

************
tgt: public void init ( type_1 event ) { type_2 . method_1 ( new type_3 ( ) ) ; type_2 . method_1 ( new type_5 ( ) ) ; type_4 . method_2 ( ) . method_3 ( ) . method_1 ( new type_6 ( ) ) ; type_7 . info ( type_8 . method_4 ( string_1 ) ) ; }
[0]: public boolean method_1 ( int var_1, byte value ) { boolean var_2 = false ; int result = ( ( var_3. method_2 ( ) [ var_1 ] ) & int_1 ) - ( value & int_1 ) ; if ( result < 0 ) { var_2 = true ; result = ( int_1 - ( result * ( - 1 ) ) ) - 1 ; } var_3. method_2 ( ) [ var_1 ] = ( ( byte ) ( result ) ) ; return var_2 ; }

************

************
tgt: public boolean contains ( java.lang.string var_1 ) { if ( ( var_2 ) != null ) { int var_3 = var_1 . compareto ( var_2 ) ; if ( var_3 == 0 ) return true ; else if ( ( var_3 < 0 ) && ( ( var_4 ) != null ) ) return var_4 . contains ( var_1 ) ; else if ( ( var_3 > 0 ) && ( ( var_5 ) != null ) ) return var_5 . contains ( var_1 ) ; } return false ; }
[0]: protected void method_1 ( type_1 var_1 ) { var_2 = type_2. method_2 ( ). method_3 ( ). get ( 0 ) ; super. method_1 ( var_1 ) ; method_4 ( var_3 ) ; var_4. context = this ; var_5 = new type_3 ( method_5 ( ), var_2 ) ; var_6 = ( ( type_4 ) ( method_6 ( var_7 ) ) ) ; var_6. method_7 ( var_5 ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 ) { if ( ( var_1 . method_2 ( string_1 ) ) != null ) { var_1 . method_3 ( string_2 ) ; var_1 . method_4 ( string_2 , string_3 ) ; return string_4 ; } else { var_1 . method_3 ( string_2 ) ; var_1 . method_3 ( string_5 ) ; var_2 . method_4 ( string_6 , var_2 . method_5 ( string_6 ) ) ; return string_7 ; } }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) { if ( ( method_2 ( ) ) && ( ( var_3. method_3 ( var_4, var_1, var_5 ). var_6 ) == ( var_7 ) ) ) { return ( ( var_8. method_4 ( ) ) == null ) || ( var_2 == ( var_8. method_4 ( ). method_4 ( ) ) ) ; } return false ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.object data ) { final int var_2 = data . tostring ( ) . length ( ) ; if ( var_2 != ( var_3 ) ) { type_2 . method_2 ( getactivity ( ) . method_3 ( ) , method_4 ( ) . getstring ( var_4 ) , var_5 ) . show ( ) ; return false ; } return true ; }
[0]: private type_1 method_1 ( type_2 var_1, long var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( var_2 ) ; var_3. method_3 ( var_1. getid ( ) ) ; var_3. method_4 ( var_1. method_5 ( ) ) ; var_3. method_6 ( var_1. method_7 ( ) ) ; var_3. method_8 ( var_1. method_9 ( ) ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) { try { var_1 = new type_1 ( string_1 , var_2 , var_3 , date , var_4 , var_5 , var_6 , var_7 , string_2 , string_3 , 1 ) ; assertequals ( var_2 , var_1 . method_2 ( ) ) ; } catch ( type_2 var_8 ) { fail ( ( string_4 + ( var_8 . method_3 ( ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1, int id ) { type_2 var_2 = ( ( type_3 ) ( var_1 ) ). method_2 ( ) ; int var_3 = ( ( java.lang.integer ) ( var_2. method_3 ( ) ) ) ; method_4 ( var_3 ) ; var_1. method_5 ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = getintent ( ) . method_2 ( ) ; if ( ( var_1 != null ) && ( ( var_1 . get ( string_1 ) ) != null ) ) { var_2 = new type_2 ( ( ( java.lang.integer [ ] [ ] ) ( var_1 . get ( string_1 ) ) ) ) ; } else { var_2 = new type_2 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( ). method_3 ( string_1 ) ) { method_4 ( ( ( type_2 ) ( var_2. method_5 ( ) ) ) ) ; method_6 ( var_3. gettext ( ) ) ; method_7 ( true ) ; method_8 ( false ) ; method_9 ( ) ; } }

************

************
tgt: public static void method_1 ( final type_1 context , final java.lang.string var_1 , final type_2 params ) { if ( context . method_2 ( ) ) { context . method_4 ( var_3 class ) . method_5 ( var_1 , params ) ; } else { type_3 . method_3 ( var_2 , string_2 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2. method_2 ( getcontext ( ), var_1 ) ; if ( var_3!= null ) { method_3 ( var_3, var_4, var_4 ) ; } }

************

************
tgt: public void handle ( final type_1 var_1 ) throws java.io.ioexception { var_2 . method_1 ( string_1 ) ; final java.util.scanner var_3 = new java.util.scanner ( this . method_2 ( ) ) . method_3 ( string_2 ) ; final java.lang.string response = ( var_3 . method_4 ( ) ) ? var_3 . method_5 ( ) : string_3 ; var_1 . method_6 ( int_1 , response . length ( ) ) ; final type_2 var_4 = var_1 . method_7 ( ) ; var_4 . method_8 ( response . method_9 ( ) ) ; var_4 . method_11 ( ) ; }
[0]: private void method_1 ( ) { var_1. setvalue ( ( ( ( ( ( ( var_2 ) == null ) || ( ( var_3. size ( ) ) < ( var_4 ) ) ) || ( ( var_3. size ( ) ) > ( var_5 ) ) ) || ( ( var_6 ) == null ) ) ) ; java.lang.system.out.println ( var_1 ) ; }

************

************
tgt: int method_1 ( java.lang.string text ) { if ( text == null ) text = java.util.calendar.getinstance ( ) . gettime ( ) . tostring ( ) ; int sum = 0 ; char [ ] var_1 = text . method_2 ( ) ; for ( int i = 0 ; i < ( text . length ( ) ) ; i ++ ) sum = sum + ( var_1 [ i ] ) ; return int_1 + sum ; }
[0]: public void remove ( type_1 item ) throws type_2 { if ( var_1. method_1 ( item ) ) { this. var_1. remove ( item ) ; } else { throw new type_2 ( ( ( item. method_2 ( ) ) + string_1 ) ) ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) throws type_3 { type_4 var_3 = ( ( type_4 ) ( var_2 . get ( string_1 ) ) ) ; var_1 . method_2 ( var_3 . intvalue ( ) ) ; type_2 var_4 = ( ( type_2 ) ( var_2 . get ( string_2 ) ) ) ; java.lang.string name = var_4 . getstring ( "name" ) ; var_1 . method_3 ( name ) ; }
[0]: private void method_1 ( ) { for ( type_1 var_1 : var_2 ) { for ( type_2 var_3 : var_1. method_2 ( ) ) { if ( var_3. method_3 ( ) ) { if ( var_3. method_4 ( ) ) { var_4. add ( 0, var_3 ) ; } else { var_4. add ( var_3 ) ; } } } } method_5 ( ) ; } }

************

************
tgt: public void method_1 ( ) { while ( true ) { type_1 . method_2 ( ) ; try { var_1 . method_1 ( ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_3 ( ) ; } finally { type_1 . method_4 ( ) ; } try { java.lang.thread . method_5 ( var_1 . method_6 ( ) ) ; } catch ( java.lang.exception var_2 ) { var_2 . method_3 ( ) ; } } }
[0]: public final type_1 method_1 ( final type_2 var_1 ) throws type_3 { type_4 id = method_2 ( var_1 ) ; java.lang.string var_2 = type_5. method_3 ( ). path ( ( ( ( method_4 ( ) ) + string_1 ) + ( id. tostring ( ) ) ) ). build ( ). method_5 ( ) ; return type_1. status ( var_3 ). method_6 ( string_2, var_2 ). build ( ) ; }

************

************
tgt: public void method_1 ( ) { while ( true ) { this . var_1 = ( ( type_1 ) ( this . var_2 . method_2 ( ) . method_3 ( ) ) ) ; java.lang.system.out.println ( string_1 ) ; type_2 var_3 = new type_2 ( this . var_4 , this . var_5 , this . var_6 , this . var_1 , this . var_7 ) ; type_3 var_8 = new type_3 ( var_3 ) ; var_8 . start ( ) ; } }
[0]: public void method_1 ( android.content.context context ) { super. method_1 ( context ) ; try { var_1 = ( ( type_1 ) ( context ) ) ; } catch ( type_2 var_2 ) { throw new type_2 ( ( ( context. tostring ( ) ) + string_1 ) ) ; } type_3. method_2 ( context, var_1. tostring ( ), var_3 ). show ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; float var_3 = 1 ; var_1 . method_3 ( ) . method_4 ( var_3 , var_3 , var_3 ) ; var_2 = var_1 . method_2 ( ) ; var_1 . method_3 ( ) . method_5 ( ( - ( var_5 . x ) ) , ( - ( var_5 . y ) ) , ( ( - ( var_6 ) ) - ( float_1 * ( var_4 ) ) ) ) ; }
[0]: private java.lang.string method_1 ( ) { try { java.lang.string result = ( ( method_2 ( ) ) + ( var_1. name ) ) + ( var_2 ) ; type_1. method_3 ( type_2. get ( result ) ) ; return result ; } catch ( java.io.ioexception var_3 ) { throw new type_3 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 [ ] [ ] var_1 , int var_2 , int var_3 ) { boolean result = false ; type_1 state = var_1 [ var_3 ] [ var_2 ] ; if ( ( state == ( var_4 ) ) || ( state == ( var_5 ) ) ) { result = true ; } return result ; }
[0]: private void method_1 ( java.lang.object var_1 ) { var_2 = new java.util.arraylist < type_1 > ( ) ; if ( var_1 instanceof java.lang.object [ ] ) { for ( java.lang.object var_3 : ( ( java.lang.object [ ] ) ( var_1 ) ) ) { var_2. add ( type_1. method_2 ( method_3 ( ). getactivity ( ), var_3 ) ) ; } } else { var_2. add ( type_1. method_2 ( method_3 ( ). getactivity ( ), var_1 ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.net.url var_2 , java.lang.string var_3 ) { type_2 . assertnotnull ( var_1 , string_1 ) ; type_2 . assertnotnull ( var_2 , string_2 ) ; type_2 . assertnotnull ( var_3 , string_3 ) ; java.lang.string var_4 = type_3 . method_2 ( var_2 ) ; return new type_1 ( var_5 , var_1 , var_4 , var_3 ) ; }
[0]: private void method_1 ( java.lang.string url, final type_1 var_1 ) { if ( 0 == ( type_2. method_2 ( ). method_3 ( ). size ( ) ) ) { var_1. error ( url ) ; } else { var_1. method_4 ( ) ; type_2. method_2 ( ). method_1 ( ) ; } }

************

************
tgt: public void method_1 ( float var_1 , float var_2 , float var_3 ) { var_4 . method_2 ( ( - var_1 ) ) ; new type_1 ( var_4 , var_5 . method_3 ( ) , var_2 , var_3 , var_1 , var_6 , var_7 ) . method_4 ( var_8 ) ; }
[0]: public type_1 method_1 ( ) { return type_2. method_2 ( type_3. method_3 ( ) ). add ( string_1, method_4 ( ) ). add ( string_2, method_5 ( ). name ( ) ). add ( string_3, gettype ( ). name ( ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; switch ( var_1 ) { case int_1 : if ( ( var_2 == ( var_3 ) ) && ( data != null ) ) { java.util.arraylist < java.lang.string > result = data . method_2 ( var_4 ) ; var_5 . settext ( result . get ( 0 ) ) ; new type_1 ( ) . execute ( result . get ( 0 ) ) ; } break ; } }
[0]: public double method_1 ( java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = type_2. get ( var_1 ) ; java.lang.string name = var_2. getname ( ) ; if ( ( name. compareto ( string_1 ) ) == 0 ) return - 1 ; type_3 var_3 = var_2. method_2 ( ). method_3 ( ) ; java.lang.double var_4 = var_3. method_4 ( ) ; return var_4 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { final type_1 var_1 = new type_2 ( ) . method_2 ( var_2 , string_1 ) . build ( ) ; final type_3 var_3 = new type_4 ( ) . method_3 ( var_1 ) . build ( ) ; type_5 var_4 = new type_6 ( var_5 ) . method_4 ( var_6 ) . method_5 ( var_3 ) . build ( ) ; assertequals ( string_2 , type_8 . method_6 ( string_1 ) , var_4 . method_7 ( ) ) ; }
[0]: public void method_1 ( java.util.map var_1, type_1 var_2 ) { if ( var_1. method_2 ( string_1 ) ) { int var_3 = java.lang.integer.parseint ( ( ( java.lang.string ) ( var_1. get ( string_1 ) ) ) ) ; var_2. method_1 ( var_3 ) ; } else { var_2. method_1 ( method_3 ( ) ) ; } }

************

************
tgt: public static void method_1 ( boolean var_1 ) { try { java.io.filereader var_2 = new java.io.filereader ( string_1 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( var_2 ) ; java.lang.string line ; while ( ( line = var_3 . method_2 ( ) ) != null ) { java.lang.system.out.println ( line ) ; } var_2 . method_3 ( ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_4 ( ) ; } }
[0]: public java.util.list < type_1 > list ( java.lang.string [ ] var_1 ) { type_2 var_2 = type_2. method_1 ( var_1 [ 0 ], var_3 ) ; type_2 var_4 = type_2. method_1 ( var_1 [ 1 ], var_3 ) ; java.util.list < type_1 > var_5 = var_6. method_2 ( string_1, var_7 class ). method_3 ( string_2, var_2 ). method_3 ( string_3, var_4 ). method_4 ( ) ; return var_5 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean remove , boolean var_2 ) { if ( ( ! remove ) && ( ! var_2 ) ) { method_2 ( var_1 ) ; method_3 ( ) ; } else if ( ! var_2 ) method_4 ( var_1 . method_5 ( ) ) ; else if ( remove && var_2 ) { method_3 ( ) ; } }
[0]: public synchronized void start ( ) { assert ( this. state ) == ( var_1 ) : string_1 + ( this. state ) ; this. state = var_2 ; if ( var_3 ) type_1. method_1 ( string_2 ) ; this. method_2 ( ) ; if ( var_3 ) type_1. method_1 ( string_3 ) ; this. var_4. start ( ) ; if ( ( this. var_5 ) == 0 ) { this. method_3 ( ) ; } this. var_6. method_4 ( this ) ; }

************

************
tgt: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; if ( ! ( var_2 . isempty ( ) ) ) { return new java.util.arraylist < java.lang.string > ( var_2 . method_2 ( ) ) ; } else if ( ( var_4 ) != null ) { for ( type_1 var_3 : var_4 . method_3 ( ) . get ( 0 ) . method_4 ( ) ) { var_1 . add ( var_3 . getid ( ) ) ; } } return var_1 ; }
[0]: public void remove ( int index ) { if ( ( index < 0 ) || ( index >= ( var_1 ) ) ) { throw new type_1 ( ) ; } for ( int i = index ; i < ( var_1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } ( var_1 ) -- ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; for ( type_2 obj : this . var_2 ) { var_1 . method_2 ( obj . method_3 ( ) ) ; var_1 . method_2 ( obj . method_4 ( ) ) ; } return var_1 ; }
[0]: public int method_1 ( char c ) { if ( type_1. method_2 ( c ) ) { return ( c - char_1 ) + 1 ; } if ( c == char_2 ) return int_1 ; if ( c == char_3 ) return int_2 ; if ( c == char_4 ) return int_3 ; if ( c == char_5 ) return int_4 ; if ( c == char_6 ) return int_5 ; throw new type_2 ( ( string_1 + c ) ) ; }

************

************
tgt: protected int method_1 ( type_1 < type_2 , type_3 > . var_1 node ) { int var_2 = 0 ; int var_3 = 0 ; if ( ( var_4 ) != null ) { var_2 = method_1 ( var_4 ) ; } if ( ( var_5 ) != null ) { var_3 = method_1 ( var_5 ) ; } return 1 + ( type_4 . method_2 ( var_2 , var_3 ) ) ; }
[0]: public void method_1 ( ) { byte [ ] buffer = new byte [ int_1 ] ; int var_1 ; while ( true ) { try { var_1 = var_2. method_2 ( buffer ) ; var_3. method_3 ( int_2, var_1, ( - 1 ), buffer ). method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { type_1. method_5 ( method_6 ( ), string_1, var_5 ). show ( ) ; } } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3 . method_2 ( var_2 , var_3 ) ; this . var_4 = type_4 . method_3 ( ) ; this . var_5 = new type_5 ( var_4 , var_1 , type_3 . method_4 ( var_1 , var_6 , var_7 , var_3 ) ) ; type_6 . method_5 ( this . var_4 , var_2 , var_6 , var_7 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1, type_3 var_2, java.lang.string var_3, long var_4, java.util.list < type_4 > var_5 ) { type_5 key = new type_5 ( var_3, var_2, var_4 ) ; try { return var_6. get ( key, new type_6 < type_1 > ( ) { public type_1 method_2 ( ) throws java.lang.exception { return type_7. method_3 ( var_1, var_2, var_3, var_4, var_5 ) ; } } ) ; } catch ( type_8 var_7 ) { throw new type_9 ( var_7 ) ; } } }

************

************
tgt: public void method_1 ( ) throws type_1 { type_2 var_1 = type_3 . method_2 ( var_2 class ) ; type_4 var_3 = new type_5 ( var_4 , var_1 , null , null , null , null , null , null ) ; type_3 . method_3 ( var_1 . method_4 ( var_5 ) ) . method_5 ( new type_6 ( string_1 ) ) ; var_3 . method_6 ( var_5 ) ; }
[0]: public static void method_1 ( java.util.collection <? extends type_1 > c ) { for ( type_1 var_1 : c ) { for ( java.lang.string key : var_2. get ( var_1 ) ) { java.util.arraylist < type_1 > list = var_3. get ( key ) ; list. remove ( var_1 ) ; var_4. method_2 ( string_1, var_5 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 data , int position ) { var_1 . method_2 ( data . method_3 ( ) ) ; var_1 . settext ( data . method_4 ( ) ) ; var_1 . method_5 ( data . method_3 ( ) . substring ( 0 , 1 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( var_3. gettext ( ) ) ; var_2. method_3 ( var_4. gettext ( ) ) ; var_2. method_4 ( java.lang.integer.parseint ( var_5. gettext ( ) ) ) ; type_2. method_5 ( var_2 ) ; method_6 ( ) ; type_2. method_7 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ! ( this . var_1 ) ) { return ; } type_1 var_2 ; try { var_2 = new type_1 ( new java.io.fileoutputstream ( var_3 ) ) ; var_2 . method_2 ( this . data ) ; var_2 . method_3 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_4 ( ) ; } }
[0]: public java.util.arraylist < type_1 > method_1 ( final java.lang.string var_1 ) throws type_2 { java.util.arraylist < type_1 > results = new java.util.arraylist < type_1 > ( ) ; if ( var_1 == null ) { return results ; } type_1 var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) { type_3 var_3 = new type_3 ( ) ; var_3. method_3 ( var_4, var_1 ) ; } return var_2. method_4 ( ) ; }

************

************
tgt: public static boolean method_1 ( type_1 var_1 ) { boolean var_2 = true ; if ( var_1 == null ) return true ; for ( int i = 0 ; i < ( var_1 . method_2 ( ) ) ; i ++ ) { if ( ! ( var_1 . method_3 ( i ) . isempty ( ) ) ) return false ; } return true ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.list < type_1 < java.lang.double > > var_1 = type_2. method_1 ( args [ 0 ], true ) ; java.lang.system.out.println ( ( ( string_1 + ( var_1. size ( ) ) ) + string_2 ) ) ; java.lang.system.out.println ( string_3 ) ; java.lang.system.out.println ( type_3. method_2 ( var_1 ) ) ; java.lang.system.out.println ( string_4 ) ; type_3. method_3 ( var_1 ) ; }

************

************
tgt: private void split ( type_1 message ) { type_2 < type_3 > var_1 = this . var_2 . get ( var_3 ) ; if ( var_1 == null ) { return ; } int var_4 = message . start ; for ( type_3 var_5 : var_1 ) { var_6 . method_1 ( new type_1 ( this , var_6 , var_4 , ( ( var_4 + ( var_5 . i ) ) - 1 ) , var_7 ) ) ; var_4 += var_5 . i ; } this . var_2 . remove ( var_3 ) ; }
[0]: private void method_1 ( final boolean [ ] var_1 ) { int i = 1 ; assert null!= var_1 ; assert null!= ( this. var_2 ) ; for ( final boolean var_3 : var_1 ) if ( var_3 ) this. var_2. method_2 ( ( i ++ ) ) ; else this. var_2. method_2 ( i ) ; }

************

************
tgt: protected final type_1 method_1 ( java.lang.object target ) { if ( target instanceof type_3 ) { type_2 var_1 = ( ( type_3 ) ( target ) ) . method_2 ( ) ; if ( var_1 != null ) { if ( var_1 instanceof type_4 ) { return ( ( type_4 ) ( var_1 ) ) . method_3 ( ) ; } else { if ( var_2 ) { var_3 . method_4 ( string_1 , var_4 class . getname ( ) ) ; } } } } return null ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) throws type_1, type_2, type_3, type_4, type_5 { type_6 var_4 = this. getclass ( ). method_2 ( ( string_1 + ( type_7. method_3 ( var_3 ) ) ) ) ; type_8 var_5 ; var_5 = ( ( type_8 ) ( var_4. method_4 ( this ) ) ) ; this. method_1 ( var_1, var_2, var_5 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( string_1 , ( ( string_2 + string_3 ) + ( var_1 ) ) ) ; if ( ( ( var_1 ) != null ) && ( ! ( var_1 . equals ( string_4 ) ) ) ) method_3 ( var_2 ) ; final type_2 var_3 = new type_2 ( ) { public void method_4 ( ) { if ( method_5 ( ) ) method_6 ( ) ; } } ; var_4 = var_5 . method_7 ( var_3 , 0 , int_1 , var_6 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( var_1. getvalue ( ) )!= null ) && ( var_1. getvalue ( ). equals ( var_2 ) ) ) { type_2. method_2 ( string_1, java.lang.string.format ( string_2, var_1. getvalue ( ), var_2 ) ) ; method_3 ( var_3, var_4, var_2 ) ; } else { type_2. method_2 ( string_1, java.lang.string.format ( string_3, var_4, var_2 ) ) ; } }

************

************
tgt: public static < type_1 > java.util.list < type_1 > method_1 ( type_2 < ? extends type_1 > ... var_1 ) { java.util.list < type_1 > results = new java.util.arraylist < > ( ) ; for ( type_2 < ? extends type_1 > var_2 : var_1 ) { results . add ( var_2 . method_2 ( ) ) ; } return results ; }
[0]: protected void method_1 ( java.lang.string var_1 ) { var_2 = var_1 ; java.lang.string var_3 = var_4. method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_5. size ( ) ) ; i ++ ) { if ( var_5. get ( i ). equals ( var_3 ) ) { var_6. method_3 ( i ) ; break ; } } var_4. method_4 ( ) ; var_4. method_5 ( ) ; var_5. remove ( i ) ; } }

************

************
tgt: public static type_1 method_1 ( java.util.date date ) { java.util.calendar var_1 = java.util.calendar.getinstance ( ) ; var_1 . method_2 ( date ) ; type_1 var_2 = new type_1 ( ) ; var_3 = var_1 . get ( var_4 ) ; var_5 = ( var_1 . get ( var_6 ) ) + 1 ; var_7 = var_1 . get ( var_8 ) ; return var_2 ; }
[0]: private java.util.list < java.lang.string > method_1 ( java.util.hashmap < java.lang.string, java.lang.integer > var_1, int n ) { type_1 var_2 = new type_1 ( var_1 ) ; type_2 < java.lang.string, java.lang.integer > var_3 = new type_2 < > ( var_2 ) ; var_3. method_2 ( var_1 ) ; java.util.arraylist < java.lang.string > keys = new java.util.arraylist < > ( ) ; keys. method_3 ( var_3. method_4 ( ) ) ; return keys. method_5 ( n, n ) ; }

************

************
tgt: public java.lang.string method_1 ( int line , int var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; java.lang.string var_4 = method_3 ( ) ; var_2 . append ( method_4 ( string_1 , var_4 , line , var_1 ) ) ; return var_2 . tostring ( ) ; }
[0]: public void method_1 ( android.view.view view, type_1 var_1 ) { super. method_1 ( view, var_1 ) ; final type_2 var_2 = method_2 ( ) ; if ( var_2!= null ) { type_3. method_3 ( var_2, view ) ; } method_4 ( ) ; if ( var_2!= null ) { var_2. method_5 ( this ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ! ( var_2 ) ) { if ( ( var_1 ) < ( var_3 ) ) { var_1 -= var_4 ; } } var_1 = ( var_1 ) + ( ( ( var_1 ) * ( var_5 ) ) / ( var_6 ) ) ; }
[0]: public void method_1 ( ) { var_1 = var_2 ; type_1. method_2 ( ) ; type_2. method_3 ( string_1 ) ; var_3. method_4 ( ) ; if ( ( var_4. id )!= ( var_5 ) ) { type_3. method_5 ( true ) ; } for ( type_4 var_6 : var_7 ) { if ( ( var_4. id )!= ( var_8. id ) ) { var_6. method_6 ( ) ; } } }

************

************
tgt: public boolean method_1 ( int x , int y ) { var_1 [ x ] [ y ] . method_2 ( true ) ; ( var_2 ) ++ ; if ( var_1 [ x ] [ y ] . method_3 ( ) ) { ( var_3 ) ++ ; if ( ! ( method_4 ( ) ) ) { var_4 . method_5 ( new type_1 ( x , y ) ) ; } return true ; } return false ; }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = ( ( ( ( string_1 + ( var_2 [ 0 ]. getname ( ) ) ) + string_2 ) + ( method_2 ( ) ) ) + string_3 ) + ( var_3 ) ; this. var_4 = false ; this. var_2 = null ; this. var_5 = 0 ; return var_1 ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 var_2 , java.lang.string name ) { type_1 var_3 = var_4 ; if ( var_3 == null ) { synchronized ( this ) { var_3 = var_4 ; if ( var_3 == null ) { type_1 var_5 = type_4 . method_2 ( var_1 . method_3 ( ) , var_2 , name ) ; if ( var_5 == null ) throw new type_5 ( this , string_1 ) ; var_4 = var_3 = var_5 ; } } } return var_3 ; }
[0]: private void method_1 ( int var_1, type_1 var_2 ) { final java.lang.string line = var_3. method_2 ( ( var_1 - 1 ) ) ; final int start = method_3 ( line ) ; if ( var_2. method_4 ( start ) ) { method_5 ( var_1, start, var_2 ) ; } else { method_5 ( var_1, start, var_2 ) ; } }

************

************
tgt: public void method_1 ( ) throws type_1 , java.io.ioexception , type_2 , type_3 , type_4 { type_5 var_1 = new type_5 ( ) ; type_6 response = new type_6 ( ) ; response . method_2 ( string_1 , string_2 ) ; response . method_3 ( int_1 ) ; var_1 . method_4 ( response ) ; var_1 . start ( ) ; type_7 var_2 = new type_7 ( var_1 . url ( string_3 ) ) ; boolean result = var_2 . method_6 ( string_4 ) ; type_8 . assertequals ( false , result ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( int_1, int_1 ) ; type_1 var_2 = new type_1 ( 1, 0 ) ; var_3 = var_4 ; size ( int_2, int_3 ) ; var_5 = new type_2 ( var_1, var_2, null, null, null ) ; }

************

************
tgt: public static < type_1 > java.util.list < type_1 > method_1 ( type_1 ... values ) { java.util.list < type_1 > list = new java.util.arraylist < type_1 > ( values . length ) ; for ( type_1 var_1 : values ) { list . add ( var_1 ) ; } return list ; }
[0]: protected type_1 method_1 ( java.lang.string name ) throws java.io.ioexception { type_1 index = var_1. get ( name ) ; if ( index == null ) { synchronized ( var_2 ) { index = var_1. get ( name ) ; if ( index == null ) { index = method_2 ( name, method_3 ( name ) ) ; if ( method_4 ( ) ) { index. open ( ) ; } var_1. put ( name, index ) ; method_5 ( index, name ) ; } } } return index ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 , type_1 output ) { try { var_2 . method_4 ( var_1 , output ) ; } catch ( type_2 var_3 ) { var_4 . error ( ( string_1 + var_1 ) , var_3 ) ; throw new type_3 ( var_3 ) ; } }
[0]: private boolean method_1 ( int var_1, int var_2 ) { if ( var_2 <= ( ( var_3. length ) - int_1 ) ) { if ( ( ( var_3 [ var_1 ] [ var_2 ] ) == ( var_3 [ var_1 ] [ ( var_2 + 1 ) ] ) ) && ( ( var_3 [ var_1 ] [ var_2 ] ) == ( var_3 [ var_1 ] [ ( var_2 + int_2 ) ] ) ) ) { return true ; } } return false ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { if ( ( ( var_2 ) != null ) && ( ( var_3 ) != null ) ) { type_2 . method_2 ( type_2 . method_3 ( var_1 ) ) ; } else { var_5 = var_1 ; } } }
[0]: private static java.lang.string method_1 ( type_1 message ) throws java.lang.exception { if ( ( message. method_2 ( ) ) == null ) { return null ; } java.lang.string var_1 = null ; java.lang.string var_2 = message. method_2 ( ) ; int var_3 = var_2. method_3 ( var_4 ) ; if ( var_3!= ( - 1 ) ) { var_1 = var_2. substring ( ( var_3 + 1 ) ) ; } return var_1 ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent intent ) { if ( var_1 == ( var_3 ) ) { var_4 = false ; var_5 = false ; if ( var_2 == ( var_6 ) ) { var_7 . method_2 ( ) ; } else { type_1 var_8 = type_1 . method_3 ( context , string_1 , var_9 ) ; var_8 . show ( ) ; } } }
[0]: public type_1 method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; type_3 var_3 ; while ( true ) { var_3 = ( ( type_3 ) ( var_2. method_2 ( ) ) ) ; if ( ( var_3. getvalue ( ) ) >= ( var_2. method_3 ( ). getvalue ( ) ) ) return var_2 ; var_2. setstate ( var_3 ) ; var_2. method_4 ( var_4 ) ; } return null ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > result ) { if ( result . method_2 ( ) ) { type_2 var_1 = result . get ( ) ; type_3 var_2 = var_1 . method_3 ( ) ; var_3 . method_4 ( ( var_2 == null ? var_4 : var_2 ) ) ; } else { var_3 . method_4 ( var_5 ) ; } var_6 . method_5 ( var_3 . method_6 ( ) , var_3 . method_3 ( ) , true ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.thread var_2 = new java.lang.thread ( var_1 ) ; var_2. start ( ) ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; char var_5 = char_1 ; while ( var_5!= char_2 ) { java.lang.system.out.println ( string_1 ) ; var_5 = var_3. method_2 ( ). method_3 ( 0 ) ; java.lang.system.out.println ( var_5 ) ; } var_3. method_4 ( ) ; var_1. method_5 ( ) ; }

************

************
tgt: public int method_1 ( int var_1 , int var_2 ) { type_1 var_3 = new type_1 ( string_1 , java.lang.string . method_2 ( var_1 ) ) ; var_3 . append ( string_2 , java.lang.string . method_2 ( var_2 ) ) . append ( string_3 , var_4 ) ; type_2 var_5 = var_6 . method_3 ( var_3 ) ; return 0 ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = new type_1 ( ) ; try { var_2. method_2 ( new type_2 ( java.lang.integer.parseint ( var_1 ) ) ) ; fail ( string_2 ) ; } catch ( type_3 var_3 ) { assertequals ( var_4 class, var_3. getclass ( ) ) ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { ( var_2 ) ++ ; var_1 = var_1 . trim ( ) ; java.lang.string [ ] var_3 = var_1 . replaceall ( string_1 , string_2 ) . replaceall ( string_3 , string_4 ) . split ( string_2 ) ; for ( java.lang.string var_4 : var_3 ) { var_5 . add ( var_4 . length ( ) ) ; var_6 += var_4 . length ( ) ; } }
[0]: private void method_1 ( int var_1 ) { type_1 < type_2 > var_2 = state. method_2 ( ) ; if ( ( var_1 > 0 ) && ( var_2!= null ) ) { long var_3 = var_4. method_3 ( ( - var_1 ) ) ; if ( var_3 <= ( var_5 ) ) { var_2. method_4 ( ( ( var_6 ) - ( var_5 ) ) ) ; } } }

************

************
tgt: public void method_1 ( type_1 buf ) throws java.io.ioexception { int var_1 = buf . method_2 ( ) ; assert null != ( var_2 ) : string_1 ; var_2 . method_3 ( buf ) ; var_3 . method_4 ( buf ) ; var_4 . method_5 ( ( ( var_4 . method_6 ( ) ) + var_1 ) ) ; var_3 . method_4 ( buf ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 c = var_2. method_2 ( int_1, 0 ) ; var_3 = var_2. method_3 ( string_1, var_4, var_5 ) ; var_3. method_4 ( var_2 ) ; var_6 = new type_3 ( var_7, var_7, var_7, var_7 ) ; var_1. add ( var_3, c ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.stringbuilder b = new java.lang.stringbuilder ( ) ; b . append ( index ) . append ( "\n" ) ; b . append ( var_1 ) . append ( "\n" ) ; b . append ( var_2 ) . append ( "\n" ) ; b . append ( method_2 ( ) ) . append ( "\n" ) ; b . append ( var_3 ) . append ( "\n" ) ; b . append ( ( var_4 ? 1 : 0 ) ) ; return b . tostring ( ) ; }
[0]: public type_1 method_1 ( type_2 message, type_3 var_1 ) { if ( ( var_2 ) == ( var_3 ) ) { type_4 var_4 = type_5. method_2 ( type_6. method_3 ( ). var_5 ) ; if ( var_4 == null ) { var_6. error ( string_1 ) ; } else { var_4. method_4 ( var_7 ) ; } } return null ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 item ) { type_4 < type_5 > var_2 = method_2 ( ) . method_3 ( var_3 , type_6 . method_4 ( var_1 ) ) ; if ( ! ( var_2 . method_5 ( ) ) ) { return null ; } assert var_2 instanceof type_1 ; type_1 var_4 = ( ( type_1 ) ( var_2 ) ) ; throw new type_7 ( ) ; }
[0]:  final synchronized void method_1 ( type_1 var_1 ) { method_2 ( var_2, var_3, var_4 ) ; type_2 var_5 = method_3 ( var_1 ) ; this. var_1. add ( var_5 ) ; var_6 = null ; if ( method_4 ( var_5 ) ) { ( var_7 ) -- ; if ( ( var_8 )!= null ) { var_8. method_5 ( this, var_7 ) ; } method_6 ( ) ; state = var_9 ; var_10. method_7 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 date ) { type_2 var_1 = null ; type_3 var_2 = null ; type_4 var_3 = null ; try { java.lang.string var_4 = string_1 ; var_1 = method_2 ( ) ; var_2 = var_1 . method_3 ( var_4 ) ; var_2 . method_4 ( 1 , date ) ; var_2 . execute ( ) ; java.lang.system.out.println ( string_2 ) ; } catch ( java.lang.exception var_5 ) { java.lang.system.out.println ( string_3 ) ; } }
[0]: public static java.util.map < java.lang.string, java.lang.string > method_1 ( ) { if ( ( var_1 ) == null ) { type_1. method_2 ( ) ; } if ( ( var_2 ) == null ) { var_2 = new java.util.hashmap < java.lang.string, java.lang.string > ( ) ; for ( java.util.map.entry < java.lang.string, java.lang.string > var_3 : var_1. method_3 ( ) ) { var_2. put ( var_3. getvalue ( ), var_3. method_4 ( ) ) ; } } return var_2 ; }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 , type_2 var_2 ) { java.util.list < type_3 > var_3 = type_4 . method_2 ( var_1 ) ; if ( ! ( var_3 . isempty ( ) ) ) { type_1 var_4 = type_4 . method_3 ( var_2 ) ; if ( var_4 == null ) { return null ; } type_3 var_5 = var_4 . method_4 ( ) ; if ( type_4 . method_5 ( var_3 , var_5 ) ) { return var_4 ; } } return null ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.thread var_1 = var_2. method_2 ( 1, int_1 ) ; assertnotnull ( var_1. method_3 ( ) ) ; assertequals ( var_1. method_3 ( ). method_4 ( ). intvalue ( ), int_1 ) ; assertequals ( int_2, var_1. method_3 ( ). method_5 ( ). intvalue ( ) ) ; }

************

************
tgt: private void method_1 ( final java.lang.string query ) { var_1 . execute ( ( ) - > { type_2 execute = var_2 . execute ( query ) ; try { execute . method_3 ( ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_4 ( ) ; var_4 . set ( true ) ; } } ) ; }
[0]: public void update ( long var_1 ) { method_1 ( ( ( var_2 ) + ( ( ( ( ( var_3 ) - var_1 ) + ( var_4 ) ) * ( var_5 ) ) / ( var_6 ) ) ) ) ; if ( ( var_1 - ( var_3 ) ) > ( var_7 ) ) { var_8 = var_9 [ int_1 ] ; method_2 ( var_10 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; java.util.arraylist < type_2 > var_2 = ( ( java.util.arraylist < type_2 > ) ( var_1 . method_2 ( ) ) ) ; for ( type_2 type_3 : var_2 ) { method_3 ( string_1 . equals ( type_3 . method_4 ( ) ) ) ; } }
[0]: public type_1 method_1 ( ) { type_1 var_1 = var_2 [ 1 ] ; var_2 [ 1 ] = var_2 [ var_3 ] ; var_2 [ var_3 ] = null ; method_2 ( ) ; type_2. method_3 ( var_2, ( -- ( var_3 ) ) ) ; return var_1 ; }

************

************
tgt: public java.lang.void method_1 ( ) throws java.io.ioexception { try { while ( ! ( java.lang.thread . method_2 ( ) . method_3 ( ) ) ) { try { method_4 ( ) ; } catch ( type_1 | type_2 var_1 ) { java.lang.thread . method_6 ( int_1 ) ; } method_5 ( ) ; } } catch ( final type_3 var_2 ) { } catch ( final type_4 var_2 ) { } return null ; }
[0]: private int method_1 ( ) { int x ; java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; while ( true ) { java.lang.system.out.print ( string_1 ) ; x = var_1. method_2 ( ) ; if ( ( x >= 1 ) && ( x <= int_1 ) ) return x ; } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 ) ; var_2 = var_1 . method_2 ( ) ; type_1 var_3 = new type_1 ( string_2 ) ; var_4 = var_3 . method_2 ( ) ; type_1 var_6 = new type_1 ( string_3 ) ; var_5 = var_6 . method_2 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) var_2. method_2 ( ) ; if ( ( var_3 )!= null ) var_3. method_3 ( ) ; if ( ( var_4 )!= null ) var_4. method_4 ( ) ; var_5. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 msg ) { switch ( var_1 ) { case var_2 : java.lang.object [ ] var_3 = ( ( java.lang.object [ ] ) ( msg . obj ) ) ; type_2 var_4 = ( ( type_2 ) ( var_3 [ 0 ] ) ) ; msg . obj = null ; if ( ( var_5 ) == ( var_4 . method_2 ( ) ) ) var_4 . method_3 ( ( ( java.lang.object [ ] ) ( var_3 [ 1 ] ) ) ) ; break ; } }
[0]: private double method_1 ( type_1 t, type_2 c ) { if ( ( t. method_2 ( ) ) > ( ( var_1 ) + 1 ) ) { return ( ( var_1 ) + 1 ) * ( var_2 ) ; } return t. method_3 ( ) ; }

************

************
tgt: public java.lang.long method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; long id = var_3 . method_2 ( var_4 , null , var_2 . method_3 ( var_1 ) ) ; for ( type_3 values : var_2 . method_4 ( var_1 ) ) { var_3 . method_2 ( var_5 , null , values ) ; } return id ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) { return true ; } if ( ( var_1 == null ) || ( ( getclass ( ) )!= ( var_1. getclass ( ) ) ) ) { return false ; } type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( var_3 ) == ( var_4 ) ) && ( var_5. equals ( var_6 ) ) ; }

************

************
tgt: private int method_1 ( int position ) { int count = 0 ; if ( ( var_1 ) && ( ( ( var_2 ) + ( var_3 ? 1 : 0 ) ) < position ) ) { count ++ ; } if ( ( var_3 ) && ( ( var_4 ) < position ) ) count ++ ; return count ; }
[0]: private void method_1 ( ) { var_1 = type_1. method_2 ( ) ; int var_2 = method_3 ( ) ; int var_3 = 0 ; var_3 = method_4 ( var_3 ) ; var_3 = method_5 ( var_3 ) ; var_3 = method_6 ( var_3 ) ; method_7 ( var_2, var_3 ) ; }

************

************
tgt: public void update ( final type_1 position ) { this . position . set ( position ) ; this . var_1 . method_1 ( this . position ) ; this . var_2 . method_1 ( this . position ) ; this . var_3 . method_1 ( this . position ) ; this . var_4 . method_2 ( this . position ) ; this . var_5 . method_1 ( this . position ) ; this . var_6 . method_1 ( this . position ) ; type_2 . method_3 ( this . var_7 , this . var_8 ) ; }
[0]: public synchronized type_1 method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( ( var_1!= null ) || ( var_2 ) ) { return var_1 ; } assert var_3 ; if (! ( var_3 ) ) { return null ; } var_1 = method_3 ( ) ; assert var_1!= null ; method_4 ( true, var_1 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { if ( var_1 == ( var_3 ) ) { long var_4 = data . method_2 ( var_5 , 0 ) ; java.util.calendar var_6 = java.util.calendar.getinstance ( ) ; var_6 . method_3 ( new java.util.date ( var_4 ) ) ; method_4 ( var_6 ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2, int height ) { type_2. info ( string_1, type_3. method_2 ( ) ) ; init ( var_2, height ) ; method_3 ( ) ; type_4. method_4 ( var_3 ) ; method_5 ( var_3 ) ; method_6 ( ) ; }

************

************
tgt: private void method_1 ( ) throws type_1 , type_2 { type_3 var_1 = type_4 . method_2 ( ) ; type_5 var_2 = null ; if ( var_1 . method_3 ( ) . method_4 ( ) ) { var_2 = ( ( type_5 ) ( var_1 . method_3 ( ) . method_5 ( ) ) ) ; } else { var_2 = new type_6 ( ) ; } var_1 . method_6 ( var_2 ) ; }
[0]: public void method_1 ( java.lang.string value ) { if ( ( value. length ( ) ) > 0 ) { java.lang.string var_1 = string_1 ; method_2 ( value, var_1, var_2 ) ; if (! ( value. method_3 ( var_1 ) ) ) { var_3. method_4 ( true ) ; } if ( ( java.lang.integer. method_5 ( value ) ) >= 0 ) { var_3. method_4 ( false ) ; } } }

************

************
tgt: protected void method_1 ( ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; var_1 . method_3 ( this ) ; } if ( ( var_2 ) != null ) { var_2 . method_4 ( null ) ; } type_1 var_3 = new type_1 ( ) ; var_3 . method_5 ( this ) ; super . method_1 ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_1. method_2 ( (! ( var_1. method_3 ( ) ) ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ), var_2 class ) ; intent. method_4 ( var_3, var_4 ) ; method_5 ( intent ) ; getactivity ( ). method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { int var_1 = 0 ; var_2 = new type_2 ( var_1 , string_1 , string_1 , string_1 , string_1 ) ; type_3 var_3 = new type_3 ( var_4 , var_4 , string_2 , true , var_2 ) ; var_5 . setenabled ( false ) ; var_6 . setenabled ( false ) ; var_7 . setenabled ( false ) ; var_3 . method_2 ( true ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_1. method_2 ( var_3 ) ) ) ; android.content.intent var_4 = new android.content.intent ( this. getactivity ( ), var_5 class ) ; var_4. method_3 ( var_6, var_2 ) ; method_4 ( var_4 ) ; }

************

************
tgt: public double [ ] method_1 ( ) { for ( int i = 0 ; i < ( this . var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( this . var_2 ) ; j ++ ) { this . var_3 [ this . var_2 ] [ i ] += this . var_3 [ j ] [ i ] ; } } return this . var_3 [ this . var_2 ] ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, var_2, var_3 ) ; type_1. method_3 ( null, var_4, var_5 ) ; if ( type_2. method_4 ( var_6 ) ) { var_7 = type_2. method_5 ( var_6 ) ; } else { var_8 = type_2. method_6 ( var_6 ) ; } type_2. method_7 ( ( ( var_7 )!= null? var_7 : var_8 ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { switch ( var_1 ) { case var_4 : { if ( ( ( var_3 . length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_5 ) ) ) { android.content.intent var_6 = new android.content.intent ( var_7 ) ; var_6 . method_2 ( string_1 ) ; method_3 ( var_6 , var_8 ) ; } } } }
[0]: public type_1 < java.util.list < type_2 > > method_1 ( int var_1 ) { java.util.list < type_2 > var_2 = var_3. method_2 ( var_1 ) ; if ( var_2. isempty ( ) ) { return new type_1 ( var_4 ) ; } type_3 var_5 = new type_3 ( ) ; var_5. set ( string_1, string_2 ) ; return new type_1 ( var_2, var_5, var_6 ) ; }

************

************
tgt: public type_1 method_1 ( byte c ) { for ( int i = 0 ; i < ( this . var_1 ) ; i ++ ) { if ( ( keys [ i ] ) == c ) { return new type_2 ( var_2 , i ) ; } } return null ; }
[0]: public long method_1 ( type_1 var_1 ) throws java.io.ioexception, type_2 { long var_2 = 0 ; type_3 var_3 = new type_3 ( method_2 ( var_1 ), type_4. method_3 ( var_1 ) ) ; for ( int var_4 : method_4 ( var_1 ) ) { java.util.map < java.lang.string, type_5 > var_5 = method_5 ( var_1, var_3, var_4 ) ; for ( type_5 var_6 : var_5. values ( ) ) { var_2 += var_6. method_6 ( ) ; } } return var_2 ; }

************

************
tgt: public void remove ( type_1 var_1 ) { int var_2 = ( ( var_1 . y ) * ( var_3 ) ) + ( var_1 . x ) ; if ( ! ( var_4 . method_1 ( var_2 ) ) ) { var_5 . info ( string_1 ) ; return ; } var_4 . remove ( var_2 ) ; if ( var_1 . equals ( var_6 ) ) { var_5 . info ( string_2 ) ; var_5 . info ( string_3 ) ; this . method_2 ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { this. var_2. method_2 ( new type_1 ( var_3, var_1, null, null ) ) ; this. var_2. method_3 ( ) ; if ( ( this. var_4. contains ( var_1 ) ) == false ) this. var_4. add ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.random var_2 = new java.util.random ( ) ; for ( int i = int_1 ; i < ( var_1 . method_2 ( ) ) ; i += int_1 ) { int var_3 = ( var_2 . method_3 ( ( ( var_1 . method_4 ( ) ) - 1 ) ) ) + 1 ; type_2 . method_5 ( var_1 . method_6 ( i ) , var_1 . method_6 ( ( i + 1 ) ) , var_3 , var_1 . method_4 ( ) ) ; } }
[0]: public boolean method_1 ( type_1 x ) { if ( (! ( nodes. contains ( x. method_2 ( ) ) ) ) || (! ( nodes. contains ( x. method_3 ( ) ) ) ) ) { java.lang.system.out.println ( string_1 ) ; return false ; } else { var_1. remove ( x ) ; return true ; } }

************

************
tgt: private static type_1 method_1 ( java.lang.string var_1 ) { try { java.io.file f = new java.io.file ( var_1 ) ; if ( f . method_2 ( ) ) return new type_2 ( f ) ; else if ( f . method_3 ( ) ) return new type_3 ( f ) ; } catch ( java.io.ioexception var_2 ) { } return null ; }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { int id = var_1. method_2 ( id ) ; type_2 var_3 = type_3. method_3 ( var_1, var_4 ) ; int var_5 = var_2 + id ; var_6. put ( var_5, new type_4 ( var_3 ) ) ; }

************

************
tgt: public static type_1 index ( ) { type_2 var_1 = type_3 . method_1 ( method_2 ( ) . get ( string_1 ) ) ; if ( var_1 != null ) { return method_3 ( index . method_4 ( var_1 ) ) ; } return type_4 . method_5 ( ) ; }
[0]: public int method_1 ( int x, int y, int var_1 ) { if ( ( ( ( x >= ( var_2 ) ) || ( y >= ( var_2 ) ) ) || ( x < 0 ) ) || ( y < 0 ) ) { throw new type_1 ( ( ( string_1 + ( var_2 ) ) + ( var_2 ) ) ) ; } int var_3 = ( var_1 - 1 ) % ( 1 < < ( var_4 ) ) ; var_5 [ x ] [ y ] = var_3 ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 ) { type_2 var_3 = new type_2 ( ) ; var_3 . put ( string_1 , ( ( type_3 ) ( var_4 . method_2 ( var_5 ) ) ) . gettext ( ) . tostring ( ) ) ; var_3 . put ( string_2 , java.lang.integer.parseint ( ( ( type_3 ) ( var_4 . method_2 ( var_6 ) ) ) . gettext ( ) . tostring ( ) ) ) ; var_7 . method_3 ( string_3 , null , var_3 ) ; var_1 . method_4 ( ) ; }
[0]: public static void method_1 ( ) { type_1. method_2 ( ) ; type_1. method_3 ( ) ; method_4 ( var_1, var_2, string_1, string_2 ) ; method_5 ( var_1, var_3, string_1 ) ; if (! ( ( java.lang.boolean ) ( method_5 ( var_4, var_5, string_3 ) ) ) ) { method_5 ( var_6, var_7 ) ; method_5 ( var_8, var_3, string_4, string_5 ) ; } else { method_5 ( var_4, var_3, string_3 ) ; } method_4 ( var_4, var_9, string_6 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = getintent ( ) ; var_4 = ( ( type_2 ) ( var_3 . method_3 ( string_1 ) ) ) ; method_4 ( ) ; method_5 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. settext ( ( ( ( string_1 + ( ( var_3. method_2 ( ) ) + var_4 ) ) + string_2 ) + ( java.lang.math.round ( ( ( var_3. method_3 ( ) ) + var_4 ) ) ) ) ) ; type_2. method_4 ( method_5 ( ), string_3, var_5 ). show ( ) ; var_6 = ( var_3. method_2 ( ) ) + var_4 ; var_7 = 1 ; method_6 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; type_1 . method_2 ( var_1 , string_2 ) ; type_1 . method_2 ( var_1 , string_3 ) ; type_1 . method_2 ( var_1 , string_4 ) ; type_1 . method_2 ( var_1 , string_5 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2. method_2 ( var_2, ( string_1 + var_1 ) ) ; type_3 event = new type_3 ( method_3 ( ), var_1, new java.util.date ( ) ) ; if ( var_3. method_4 ( event ) ) { var_4. method_1 ( new type_3 ( method_3 ( ), var_1, new java.util.date ( ) ) ) ; } var_5 = false ; method_5 ( ) ; }

************

************
tgt: private boolean method_1 ( final type_1 start , final type_1 target ) { if ( method_2 ( ) ) { if ( ( ( start . method_3 ( ) ) == int_1 ) && ( ( target . method_3 ( ) ) == int_2 ) ) return true ; } else { if ( ( ( start . method_3 ( ) ) == int_3 ) && ( ( target . method_3 ( ) ) == 1 ) ) return true ; } return false ; }
[0]: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( ). method_3 ( var_2 ) ) ) ; var_3 = ( ( type_2 ) ( method_2 ( ). method_3 ( var_4 ) ) ) ; if ( ( var_5 ) == null ) { method_4 ( var_6 ). method_5 ( var_7 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . method_2 ( ) ; int var_4 = var_5 . method_3 ( var_2 ) ; if ( var_4 < ( ( var_5 . size ( ) ) - 1 ) ) { var_5 . method_4 ( var_2 ) ; var_5 . add ( ( var_4 + 1 ) , var_2 ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; var_1. method_2 ( ) ; var_2 = type_1. method_3 ( ) ; var_3 = ( var_4. method_4 ( string_1, 0 ) ) + ( ( var_2 ) - ( var_5 ) ) ; var_4. method_5 ( string_1, var_3 ) ; }

************

************
tgt: public void update ( double var_1 ) { var_2 += var_1 * ( ( var_3 ) / ( var_4 ) ) ; var_5 += var_1 * ( ( var_6 ) / ( var_4 ) ) ; x += var_1 * ( var_2 ) ; y += var_1 * ( var_5 ) ; }
[0]: public synchronized java.lang.string method_1 ( long size ) { long var_1 = type_1. method_2 ( ) ; long t = var_1 - ( var_2 ) ; var_2 = var_1 ; if ( t == 0 ) return string_1 ; sum += size ; return java.lang.string.format ( string_2, ( size / t ), ( ( sum ) / ( var_1 - ( var_3 ) ) ), sum ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( var_1 ) == null ) || ( ! ( var_1 . method_2 ( ) ) ) ) { return ; } if ( ( var_2 ) != null ) { throw new type_1 ( string_1 ) ; } type_2 . method_3 ( ) ; var_2 = new type_3 ( type_4 . method_4 ( ) , method_5 ( ) ) ; var_2 . method_6 ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_2 = var_3. method_2 ( ) ; for ( type_2 var_4 : this. var_5 ) { if ( var_4. getname ( ). equals ( var_2 ) ) { method_3 ( var_4. method_4 ( ) ) ; break ; } } method_5 ( this. method_6 ( ), var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int i ) { if ( var_2 . gettext ( ) . tostring ( ) . trim ( ) . isempty ( ) ) return ; counter . setvalue ( java.lang.integer . method_2 ( var_2 . gettext ( ) . tostring ( ) ) ) ; listener . method_3 ( counter . method_4 ( ) ) ; counter . method_5 ( counter . method_4 ( ) ) ; }
[0]: private static final java.lang.string method_1 ( ) { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) + string_6 ) ) + ( var_1 ) ) + string_7 ) + string_8 ) + string_3 ) + string_4 ) + string_5 ) + string_6 ) + ( var_2 ) ) + string_7 ) + string_9 ) + string_3 ) + string_10 ) + string_5 ) + string_6 ) + ( var_3 ) ) + string_7 ; }

************

************
tgt: protected java.lang.boolean method_1 ( java.lang.string ... params ) { type_1 var_1 = new type_1 ( var_2 ) ; type_2 var_3 = new type_2 ( var_1 ) ; type_3 var_4 = var_3 . method_2 ( var_1 . method_2 ( ) ) ; type_4 < type_5 > var_5 = var_4 . method_3 ( var_6 , var_7 class ) ; boolean result ; result = method_4 ( var_5 , params [ 1 ] , params [ 0 ] ) ; return result ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, int var_2 ) throws java.lang.exception { java.util.arraylist < java.lang.string [ ] > var_3 = type_1. method_2 ( ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) + string_3 ) ) ; return var_3. get ( 1 ) [ 0 ] ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; var_2 . method_3 ( 1.0f ) ; method_4 ( ) ; var_3 = false ; var_4 = true ; var_5 = true ; var_1 . method_5 ( ) ; var_6 . method_5 ( ) ; var_7 . method_5 ( ) ; var_8 . method_5 ( ) ; var_9 . method_7 ( string_1 ) ; }
[0]: public void method_1 ( android.view.view view ) { type_1. method_2 ( ). method_3 ( ) ; if ( var_1. method_4 ( ) ) method_5 ( ) ; android.widget.button var_2 = ( ( android.widget.button ) ( method_6 ( var_3 ) ) ) ; var_2. setenabled ( false ) ; method_7 ( ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 result = new type_1 ( ) ; var_1 = var_2 ; var_3 = method_2 ( ) ; var_4 = method_3 ( ) ; var_5 = var_6 ; var_8 = ( ( var_7 ) != ( type_2 . method_4 ( var_2 ) ) ) ? var_7 : - 1 ; var_9 . method_5 ( ) ; var_9 . method_6 ( method_7 ( ) ) ; result . method_8 ( method_8 ( ) ) ; var_10 = method_9 ( ) ; return result ; }
[0]: private void method_1 ( java.lang.string var_1, float var_2, boolean var_3 ) { if ( var_3 ) { var_4. settext ( ( ( ( var_2 + ( var_5 ) ) + var_1 ) + ( var_6 ) ) ) ; } var_4. settext ( ( ( ( var_1 + ( var_5 ) ) + var_2 ) + ( var_6 ) ) ) ; }

************

************
tgt: public void method_1 ( double var_1 ) { if ( var_1 == 0 ) { var_2 = false ; var_3 = var_4 ; this . var_1 = var_1 ; return ; } else if ( var_1 > 1 ) { return ; } this . var_2 = true ; this . var_1 = var_1 ; this . var_3 = ( ( int ) ( java.lang.math.round ( ( ( var_4 ) * ( 1 - var_1 ) ) ) ) ) ; }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( i == ( var_2 ) ) { var_1. get ( i ). method_2 ( ). method_3 ( true ) ; } else { var_1. get ( i ). method_2 ( ). method_3 ( false ) ; } } }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; type_1 . method_2 ( ) . method_3 ( var_2 ) ; type_1 . method_2 ( ) . method_3 ( var_3 ) ; if ( ( var_4 ) != null ) { getactivity ( ) . method_4 ( var_4 ) ; } }
[0]: public type_1 method_1 ( float value ) { if ( ( var_1 ) == ( var_2 ) ) return method_2 ( new float [ ] { value }, new int [ ] { 1 }, new int [ ] { 1 }, 0 ) ; else if ( ( var_1 ) == ( var_3 ) ) return method_1 ( ( ( double ) ( value ) ) ) ; else return method_1 ( ( ( int ) ( value ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { java.lang.string var_1 = var_2 . gettext ( ) . tostring ( ) ; if ( var_1 . equals ( string_1 ) ) { type_1 . method_2 ( this , string_2 , var_3 ) . show ( ) ; return ; } method_3 ( var_1 ) ; var_2 . settext ( string_1 ) ; }
[0]: public boolean equals ( java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( ( var_2. method_1 ( ). compareto ( this. method_1 ( ) ) ) == 0 ) && ( ( var_2. method_2 ( ). compareto ( this. method_2 ( ) ) ) == 0 ) ; } return false ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( var_2 class ) ; type_2 . method_3 ( var_1 . method_4 ( ) ) . method_5 ( null ) ; type_3 . assertthat ( new type_4 ( ) . method_6 ( var_1 ) . method_7 ( var_3 ) ) . method_8 ( false ) ; }
[0]: public void method_1 ( type_1 message ) { if ( ( var_1 ) == 1 ) { switch ( var_2 ) { case 1 : var_3 = true ; break ; case int_1 : var_4 = true ; break ; case int_2 : var_5 = true ; break ; } if ( ( ( var_3 ) && ( var_3 ) ) && ( var_3 ) ) { var_6. method_2 ( ) ; } var_7. method_3 ( ) ; } } }

************

************
tgt: private double method_1 ( type_1 p ) { double var_1 = 0 ; double var_2 = 0 ; for ( java.util.arraylist < java.lang.integer > var_3 : var_4 ) { for ( int var_5 : var_3 ) { var_5 = java.lang.math.abs ( var_5 ) ; var_2 ++ ; if ( ( var_5 >= 1 ) && ( var_5 <= int_1 ) ) { var_1 += 1 ; } } } if ( var_2 == 0 ) { return 0 ; } return var_1 / var_2 ; }
[0]: public boolean method_1 ( android.view.view var_1, type_1 event ) { switch ( event. method_2 ( ) ) { case var_2 : var_3 = ( ( java.lang.string ) ( var_1. method_3 ( ) ) ) ; var_4 = true ; break ; case var_5 : type_2 var_6 = ( ( type_2 ) ( var_1 ) ) ; method_4 ( ( ( java.lang.string ) ( var_6. method_3 ( ) ) ) ) ; var_4 = false ; break ; } return true ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ! ( var_1 instanceof type_2 ) ) && ( this . var_2 . method_2 ( var_3 ) ) ) { type_3 var_4 = ( ( type_3 ) ( this . var_2 . get ( var_3 ) ) ) ; var_4 . method_3 ( var_1 ) ; } super . method_1 ( var_1 ) ; }
[0]: public static int method_1 ( int var_1, boolean var_2, java.lang.string text ) { if ( var_2 ) { java.lang.string var_3 = text ; if ( (! ( var_3. isempty ( ) ) ) && ( type_1. method_2 ( string_1, var_3 ) ) ) { var_1 = java.lang.integer.parseint ( text ) ; } else { type_2. method_3 ( ( string_2 + string_3 ) ) ; } } return var_1 ; } return 0 ; }

************

************
tgt: public static boolean method_1 ( ) { boolean var_1 = false ; type_1 var_2 = type_2 . method_2 ( var_3 class ) . method_3 ( ) ; if ( var_2 == null ) { return false ; } type_3 < type_4 > var_4 = var_2 . method_4 ( var_5 class ) ; if ( var_4 != null ) { type_4 var_6 = var_2 . method_5 ( var_4 ) ; var_1 = var_6 . method_6 ( ) ; } return var_1 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; method_3 ( var_2. method_4 ( ) ) ; var_3. method_5 ( ) ; method_3 ( var_2. method_4 ( ) ) ; var_4. method_6 ( ) ; method_3 ( var_2. method_4 ( ) ) ; var_5. method_7 ( ) ; method_8 ( var_2. method_4 ( ) ) ; method_3 ( var_2. method_9 ( ) ) ; method_3 ( var_1. method_10 ( ) ) ; }

************

************
tgt: public boolean method_1 ( java.util.date date ) { java.util.calendar var_1 = java.util.calendar.getinstance ( method_2 ( ) ) ; var_1 . method_3 ( date ) ; var_1 . set ( var_2 , 0 ) ; java.util.date var_3 = var_1 . gettime ( ) ; var_1 . add ( var_4 , 1 ) ; java.util.date var_5 = method_4 ( var_1 . gettime ( ) ) ; return ( var_5 != null ) && ( var_5 . equals ( var_3 ) ) ; }
[0]: public type_1 < type_2 > method_1 ( java.lang.string var_1 ) { type_3 handle = new type_3 ( method_2 ( ) ) ; java.util.map < java.lang.string, java.lang.string > var_2 = new java.util.hashmap < > ( ) ; var_2. put ( string_1, var_3 ) ; var_2. put ( string_1, var_1 ) ; method_3 ( var_2, var_4, handle ) ; return handle ; }

************

************
tgt: public static int method_1 ( java.util.list < java.lang.integer [ ] > var_1 ) { java.util.list < java.lang.integer > var_2 = new java.util.arraylist < java.lang.integer > ( ) ; java.util.list < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( java.lang.integer [ ] var_4 : var_1 ) { type_2 . method_2 ( var_3 , var_4 ) ; } for ( type_1 var_4 : var_3 ) { var_2 . method_3 ( var_4 . method_4 ( ) ) ; } return var_2 . size ( ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { try { type_1. method_1 ( ) ; } catch ( java.lang.exception var_1 ) { type_2. method_2 ( var_2, var_1. tostring ( ), var_1 ) ; } if ( ( args.length ) == 1 ) { type_3. method_3 ( args [ 0 ] ) ; } else { type_3. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , long var_2 , long var_3 ) { type_2 var_4 = var_1 . method_2 ( ) ; if ( var_2 == 0 ) { var_4 . method_3 ( string_1 ) . method_4 ( string_2 ) . method_4 ( string_3 ) ; var_2 ++ ; } if ( var_2 == 1 ) { var_4 . method_3 ( string_1 ) . method_4 ( string_2 ) . method_4 ( string_3 ) ; var_2 ++ ; } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1, string_2 ) ; type_2 var_2 = new type_2 ( string_3, string_4 ) ; var_1. remove ( var_2 ) ; type_2 [ ] var_3 = var_1. method_2 ( ) ; if ( ( var_3 [ 0 ] ) == var_2 ) { fail ( string_5 ) ; } }

************

************
tgt: public static void method_1 ( java.lang.string filename , int n ) throws java.io.ioexception { java.io.file file = new java.io.file ( filename ) ; java.io.fileoutputstream var_1 = new java.io.fileoutputstream ( file ) ; java.io.bufferedwriter var_2 = new java.io.bufferedwriter ( new type_1 ( var_1 ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { var_2 . method_2 ( type_2 . method_3 ( type_2 . method_4 ( ) ) ) ; var_2 . method_5 ( ) ; } var_2 . method_6 ( ) ; }
[0]: public java.lang.string method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string var_3 ) throws type_2 { try { var_1. method_2 ( ) ; type_3 var_4 = var_1. method_3 ( ). var_5. method_4 ( method_5 ( var_3 ), var_2 ) ; return method_6 ( var_4. id ) ; } catch ( java.lang.exception var_6 ) { throw new type_2 ( method_7 ( ( string_1 + var_2 ), ( string_2 + var_3 ) ), var_6 ) ; } finally { var_1. method_8 ( ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_1 ( ) ; var_2 = type_1 . method_2 ( 0 , ( ( var_2 ) - 1 ) ) ; if ( var_1 . method_3 ( ) ) { method_4 ( ) ; var_3 . method_1 ( ) ; var_2 = method_5 ( ) ; } if ( var_1 . method_6 ( ) ) method_7 ( ) ; }
[0]: private void init ( android.content.context context ) { android.view.view var_1 = method_1 ( context, var_2, this ) ; var_3 = ( ( type_1 ) ( var_1. method_2 ( var_4 ) ) ) ; var_5 = ( ( type_2 ) ( var_1. method_2 ( var_6 ) ) ) ; var_7 = ( ( type_3 ) ( context ) ) ; var_3 = ( ( type_1 ) ( var_1. method_2 ( var_4 ) ) ) ; }

************

************
tgt: public java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = new java.util.hashset < type_1 > ( ) ; for ( type_2 var_2 : method_2 ( ) ) { if ( var_3 . equals ( name ) ) { var_1 . add ( new type_1 ( context , var_3 , var_4 ) ) ; } } return var_1 ; }
[0]: protected java.lang.string method_1 ( final type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; final type_3 var_3 = ( ( type_3 ) ( var_2 ) ) ; final java.lang.string var_4 = var_3. method_1 ( ) ; boolean var_5 = var_4. isempty ( ) ; boolean var_6 =! var_5 ; if ( var_6 ) { return var_4 ; } return null ; }

************

************
tgt: public void method_1 ( int var_1 ) { android.view.view view = var_2 . method_2 ( var_1 ) ; if ( view == null ) return ; type_1 title = ( ( type_1 ) ( view . method_3 ( var_3 ) ) ) ; type_1 var_4 = ( ( type_1 ) ( view . method_3 ( var_5 ) ) ) ; title . method_4 ( var_6 ) ; var_4 . method_4 ( type_2 . getcolor ( getcontext ( ) , var_7 ) ) ; }
[0]: public static type_1 method_1 ( java.util.list < java.lang.string > key ) throws type_2 { if ( ( key. size ( ) ) < int_1 ) { throw new type_2 ( ( ( string_1 + ( key. size ( ) ) ) + string_2 ) ) ; } return new type_1 ( key. get ( 0 ), key. get ( int_2 ), key. get ( 1 ) ) ; }

************

************
tgt: public void method_1 ( type_1 out ) throws java.io.ioexception { super . method_1 ( out ) ; out . method_2 ( var_2 ) ; out . method_2 ( ( ( var_1 ) - ( var_2 ) ) ) ; for ( int i = 0 ; i < ( var_3 . length ) ; i ++ ) { out . method_3 ( var_3 [ i ] ) ; out . method_3 ( var_4 [ i ] ) ; } }
[0]: public void method_1 ( ) throws type_1 { if ( ( var_1 )!= null ) { if ( var_2. method_2 ( ) ) { var_2. method_3 ( ( ( string_1 + ( var_1 ) ) + string_2 ) ) ; } var_3. method_4 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( var_1 . method_2 ( ) ) { var_2 . method_3 ( true ) ; var_3 . method_3 ( false ) ; var_4 . method_3 ( false ) ; var_5 . method_3 ( false ) ; var_6 . method_3 ( false ) ; var_7 . method_3 ( false ) ; var_8 . method_3 ( true ) ; var_9 . method_3 ( false ) ; var_10 . method_3 ( false ) ; this . var_11 = true ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { if ( var_3. method_2 ( ) ) { java.lang.system.out.println ( string_1 ) ; var_2 = null ; } if ( ( var_3. method_3 ( ) ) == false ) { var_2 = null ; } java.lang.string [ ] list = var_4. method_4 ( var_2, var_1 ) ; if ( list!= null ) { for ( java.lang.string var_5 : list ) { var_4. method_5 ( var_2, var_1, var_5 ) ; } } } }

************

************
tgt: void method_1 ( ) throws type_1 { java.lang.string var_1 = new java.lang.string ( var_2 . method_2 ( ) . method_3 ( ) ) ; java.lang.string time = new java.lang.string ( var_3 . method_2 ( ) . method_3 ( ) ) ; var_4 . method_4 ( var_1 , java.lang.integer.parseint ( time ) , string_1 ) ; java.lang.system.out.println ( string_2 ) ; method_5 ( ) ; type_2 var_5 = ( ( type_2 ) ( add . method_6 ( ) . method_7 ( ) ) ) ; var_5 . method_8 ( ) ; }
[0]: public type_1 method_1 ( int var_1, int var_2, int var_3 ) { switch ( var_3 ) { case 1 : type_2 var_4 = new type_2 ( ) ; return var_4. method_2 ( var_1, var_2 ) ; case int_1 : type_3 var_5 = new type_3 ( ) ; return var_5. method_2 ( var_1, var_2 ) ; } return null ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 . method_2 ( new type_1 ( string_1 , new type_2 ( 0 , int_1 ) , type_3 . method_3 ( int_2 , int_2 ) ) ) ; assertequals ( int_1 , var_1 . method_4 ( ) , 0 ) ; position . method_5 ( int_3 ) ; assertequals ( int_4 , var_1 . method_4 ( ) , 0 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1. method_2 ( this. file. method_3 ( ) ) ; assertnotnull ( var_1 ) ; assertnotnull ( var_1. method_4 ( ) ) ; try ( java.io.inputstream var_2 = var_1. method_5 ( ) ) { assertnotnull ( var_2 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.long id ) { java.lang.string var_2 = var_1 . getname ( ) ; type_2 var_5 = var_4 . method_2 ( var_2 ) ; type_2 var_3 = var_4 . method_3 ( id ) ; type_3 var_6 = new type_3 ( ) ; var_6 . method_4 ( var_3 ) ; var_6 . method_5 ( var_5 ) ; var_6 . method_6 ( false ) ; var_6 . method_7 ( true ) ; var_7 . method_8 ( var_6 ) ; return string_1 ; }
[0]: public boolean remove ( type_1 var_1 ) { boolean var_2 = false ; if ( var_1 instanceof type_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 ) ) ; java.io.file file = new java.io.file ( var_3. method_1 ( ) ) ; var_2 = file. delete ( ) ; if (! var_2 ) { type_3. method_2 ( var_4, java.lang.string.format ( string_1, var_3. method_1 ( ) ) ) ; } } type_3. method_2 ( var_4, string_2 ) ; return var_2 ; } return false ; }

************

************
tgt: public static java.util.map < type_1 , type_2 > method_1 ( type_1 file ) { java.util.map < type_1 , type_2 > var_1 = new type_3 < type_1 , type_2 > ( ) ; for ( type_1 var_2 : type_4 . method_2 ( file ) ) { type_2 var_3 = type_4 . method_3 ( var_2 ) ; if ( var_3 != null ) { var_1 . put ( var_2 , var_3 ) ; } } return var_1 ; }
[0]: public void method_1 ( ) { java.lang.string text = ( ( string_1 + string_2 ) + string_3 ) + string_4 ; type_1. assertequals ( new type_2 ( type_3. method_2 ( ( string_5 + ( string_6 + string_7 ) ) ) ), new type_4 ( ). method_3 ( text ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception , type_3 { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( true ) ; if ( ( var_3 ) != null ) { throw new type_3 ( string_1 ) ; } var_2 . method_3 ( var_3 ) ; type_4 . method_1 ( var_2 , var_1 ) ; return var_2 ; }
[0]: public type_1 method_1 ( java.util.arraylist < type_1 > list ) { type_2 var_1 = new type_2 ( list ) ; if ( ( var_2 ) == 1 ) { return var_1. method_2 ( ) ; } if ( ( var_2 ) == int_1 ) { return var_1. method_3 ( ) ; } return null ; }

************

************
tgt: private void method_1 ( final type_1 < type_2 > var_1 , final type_2 event ) { if ( var_3 . contains ( var_1 ) ) { try { var_1 . method_2 ( this , event ) ; } catch ( java.lang.exception var_2 ) { var_3 . remove ( var_1 ) ; if ( ( var_4 ) != null ) { var_4 . method_3 ( var_2 ) ; } } } }
[0]: public boolean method_1 ( final type_1 var_1 ) { final type_2 var_2 = var_1. method_2 ( var_3 ) ; if ( ( ( var_2!= null ) && ( var_4. equals ( var_2. method_3 ( ) ) ) ) && ( var_5. equals ( var_2. method_4 ( ) ) ) ) { var_6. add ( var_1 ) ; } return true ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string path ) throws java.lang.exception { path = type_3 . method_2 ( path ) ; if ( ( path == null ) || ( type_4 . method_4 ( path ) ) ) { throw new java.lang.exception ( string_2 ) ; } boolean var_2 = method_5 ( ) . method_1 ( path ) ; return new type_5 ( ) . put ( string_3 , var_2 ) . tostring ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2. method_2 ( var_2, string_1 ) ; var_1. method_3 ( string_2, this. method_4 ( ). method_5 ( ) ) ; var_1. method_3 ( string_3, this. method_4 ( ). method_6 ( ) ) ; var_1. method_3 ( string_4, this. method_4 ( ). method_7 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 out ) throws java.io.ioexception { super . method_1 ( out ) ; int var_1 = var_2 . size ( ) ; out . method_2 ( var_1 ) ; for ( type_2 var_3 : var_2 ) { out . method_3 ( var_3 . method_4 ( ) ) ; out . method_3 ( var_3 . method_5 ( ) ) ; } }
[0]: public static void method_1 ( ) { type_1 file = var_1. method_2 ( string_1 ) ; if ( file. method_3 ( ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = var_3. method_4 ( var_1. method_2 ( string_1 ) ) ; } else { var_2 = var_3. method_4 ( var_1. method_5 ( string_3 ) ) ; var_2. method_6 ( var_4 ) ; var_2. method_7 ( ) ; var_2. method_8 ( true ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { android.content.intent intent = new android.content.intent ( this , var_2 class ) ; intent . method_2 ( string_3 , ( ( type_3 ) ( var_3 . method_3 ( position ) ) ) ) ; method_4 ( intent ) ; }
[0]: public static void method_1 ( java.lang.string arg, java.util.arraylist < java.lang.string > list ) { if ( ( list. method_2 ( arg ) ) == ( - 1 ) ) { var_1. method_3 ( string_1, arg ) ; } else { var_1. method_3 ( string_2, arg, list. method_2 ( arg ) ) ; } }

************

************
tgt: public java.util.list < java.util.map < java.lang.string , java.lang.object > > handle ( type_1 var_1 ) { java.util.list < java.util.map < java.lang.string , java.lang.object > > rows = new java.util.arraylist < java.util.map < java.lang.string , java.lang.object > > ( ) ; while ( ! ( var_1 . method_1 ( ) ) ) { rows . add ( this . method_2 ( var_1 ) ) ; } return rows ; }
[0]: public void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = var_1. getstring ( ""id"" ) ; type_2 var_3 = new type_2 ( var_4, var_5 ) { public void method_2 ( ) throws type_3 { type_4 var_6 = var_7. get ( var_2 ) ; var_6. method_1 ( ) ; var_8. method_3 ( ) ; } } ; var_8. method_4 ( var_3 ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { var_2 . method_2 ( ) ; type_3 var_3 = var_1 . method_3 ( var_4 ) ; for ( int i = 0 ; i < ( var_3 . method_4 ( ) ) ; i ++ ) { type_2 var_5 = var_3 . method_5 ( i ) ; type_1 var_6 = new type_1 ( ) ; var_7 = var_5 . method_6 ( var_8 ) ; var_9 = var_5 . method_6 ( var_10 ) ; var_2 . add ( var_6 ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1, boolean var_2, boolean var_3, boolean var_4, boolean var_5 ) { this. var_1 = var_1 ; var_6 = ( ( type_2 ) ( var_1 ) ) ; var_6. method_2 ( var_7, var_8 ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( var_4, var_5 ) ; method_8 ( var_3 ) ; method_9 ( ) ; method_10 ( var_2 ) ; method_11 ( ) ; method_12 ( ) ; method_13 ( ) ; method_14 ( ) ; }

************

************
tgt: private int method_1 ( int var_1 ) throws java.io.ioexception { int var_2 = 0 ; method_2 ( ) ; if ( ( ( ( var_3 ) != char_1 ) && ( ( var_3 ) != char_2 ) ) && ( ( var_3 ) != char_3 ) ) { method_3 ( ) ; var_2 = 1 ; } while ( ( ( var_3 ) == char_1 ) && ( ( var_2 ++ ) != var_1 ) ) { method_2 ( ) ; method_3 ( ) ; } return var_2 ; }
[0]: private void method_1 ( int var_1 ) { int var_2 = var_3. method_2 ( ) ; if ( ( var_3. method_3 ( ) ) && ( var_1 >= ( ( var_4 ) - var_2 ) ) ) { ( var_5 ) ++ ; method_4 ( false ) ; method_5 ( ( string_1 + ( var_5 ) ) ) ; int start = var_6 ; method_6 ( var_7, start, var_8 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 . get ( var_1 ) ) != null ) { var_3 = var_2 . get ( var_1 ) ; type_2 . i ( string_1 , ( ( var_3 ) + string_2 ) ) ; } return false ; }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) { if ( ( type_1. method_2 ( ) )!= ( type_1. method_3 ( ) ) ) { var_2. method_4 ( ( ) - > var_1. method_5 ( ) ) ; } else { var_1. method_5 ( ) ; } } }

************

************
tgt: protected void method_1 ( type_1 state ) { if ( state instanceof type_2 ) { final type_2 var_1 = ( ( type_2 ) ( state ) ) ; super . method_1 ( var_1 . method_2 ( ) ) ; method_3 ( var_2 ) ; var_3 . settext ( var_4 ) ; if ( ( var_5 ) != null ) { var_5 . settext ( var_4 ) ; } } else { super . method_1 ( state ) ; } }
[0]: public static java.util.set < java.lang.string > method_1 ( final java.util.list < type_1 > var_1 ) { java.util.set < java.lang.string > var_2 = new java.util.hashset < > ( ) ; for ( final type_1 var_3 : var_1 ) { if (! ( var_3. method_2 ( ). isempty ( ) ) ) { var_2. add ( var_3. method_2 ( ) ) ; } } return var_2 ; }

************

************
tgt: public long method_1 ( ) { if ( var_1 . isempty ( ) ) { return var_2 . size ( ) ; } java.util.collections.sort ( var_2 ) ; java.util.collections.sort ( var_1 ) ; java.util.date var_3 = var_1 . get ( ( ( var_1 . size ( ) ) - 1 ) ) ; long var_4 = 0 ; for ( java.util.date date : var_2 ) { if ( date . method_2 ( var_3 ) ) { var_4 ++ ; } } return var_4 ; }
[0]: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_1 c : var_2. method_2 ( ) ) { var_1. add ( c. method_3 ( ) ) ; } return var_1 ; }

************

************
tgt: public int method_1 ( type_1 source , long var_1 ) throws type_2 { int result = 0 ; type_3 var_2 = source . method_2 ( ) ; type_4 var_3 = null ; var_3 = var_2 . method_3 ( var_4 ) ; var_3 . method_4 ( 1 , var_1 ) ; result = var_3 . method_5 ( ) ; return result ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.thread. method_2 ( ). method_3 ( getclass ( ). method_4 ( ) ) ; type_1 var_1 = new type_2 ( ) ; var_1. method_5 ( method_6 ( ) ) ; var_1. start ( ) ; type_3 var_2 = var_1. method_7 ( ) ; java.lang.string result = var_2. method_8 ( string_1, string_2, string_3, string_4, var_3. string class ) ; type_4. assertequals ( string_5, result ) ; }

************

************
tgt: protected void method_1 ( ) { if ( ( ( ( var_1 ) != ( var_2 ) ) && ( ( var_3 ) != null ) ) && ( ( var_4 ) != null ) ) { var_1 = var_2 ; method_2 ( ) ; var_3 . method_3 ( ) ; if ( ( var_1 ) == ( var_2 ) ) method_4 ( 0 , null ) ; } }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2 ) { for ( int i = 0 ; i < ( var_3. size ( ) ) ; i ++ ) { var_2. method_2 ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + ( var_4 ) ) + string_3 ), var_3. get ( i ). id ) ; } ( var_1. state ) ++ ; var_5 = 0 ; var_6 = 0 ; }

************

************
tgt: public static void method_1 ( int [ ] [ ] var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_1 . length ) ; var_2 ++ ) { for ( int var_3 = 0 ; var_3 < ( var_1 [ 0 ] . length ) ; var_3 ++ ) { java.util.random var_4 = new java.util.random ( ) ; var_1 [ var_2 ] [ var_3 ] = var_4 . method_2 ( int_2 ) ; } } }
[0]: public type_1 method_1 ( type_2 var_1, java.lang.string var_2 ) { if ( var_3. isempty ( ) ) { return null ; } type_1 var_4 = var_3. remove ( new type_3 ( var_1, var_2 ) ) ; if ( var_5. method_2 ( ) ) { var_5. info ( string_1, var_1, var_2, var_3. size ( ) ) ; } return var_4 ; }

************

************
tgt: public java.lang.string put ( java.lang.string key , java.lang.string value ) { if ( ( size ) == ( ( var_1 ) * ( var_2 ) ) ) { method_1 ( ) ; } type_1 var_3 = var_4 [ method_2 ( key ) ] ; java.lang.string var_5 = var_4 [ method_2 ( key ) ] . add ( key , value ) ; if ( var_5 != null ) { return var_5 ; } else { ++ ( size ) ; return null ; } }
[0]: private type_1 method_1 ( type_2 var_1, java.lang.string var_2 ) { for ( type_1 var_3 : var_1. method_2 ( ) ) { java.lang.string var_4 = var_3. method_3 ( ) ; if ( ( var_4!= null ) && ( var_2. equals ( var_4 ) ) ) { return var_3 ; } } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) throws type_2 { type_3 status = this . var_3 . method_2 ( var_1 , var_2 ) ; if ( ( status != null ) && ( ! ( status . method_3 ( ) ) ) ) { if ( status . method_4 ( ) . equals ( var_2 ) ) { method_5 ( var_1 ) ; } else { throw new type_2 ( string_1 ) ; } } else { throw new type_2 ( string_2 ) ; } this . var_3 . remove ( status ) ; }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( java.lang.string var_2 : this. var_1. split ( string_1 ) ) { long id = java.lang.long.parselong ( var_2 ) ; type_1 var_3 = var_4. method_2 ( id ) ; var_1. add ( var_3 ) ; } return var_1 ; }

************

************
tgt: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( type_2 var_2 : var_3 ) { if ( ( var_2 . getvalue ( ) ) != null ) { var_1 . add ( ( ( type_1 ) ( var_2 . getvalue ( ) ) ) ) ; } } return var_1 ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.util.map var_1 = new java.util.map ( string_1 ) ; java.util.map var_2 = new java.util.map ( string_2 ) ; type_1 var_3 = new type_1 ( var_1 ) ; type_1 var_4 = new type_1 ( var_2 ) ; var_3. method_1 ( ) ; java.lang.system.out.println ( var_3. method_2 ( ) ) ; }

************

************
tgt: private int method_1 ( type_1 var_1 ) { int offset ; offset = var_1 . method_2 ( ) . size ( ) ; offset = ( offset == 1 ) ? offset - 1 : offset - int_1 ; offset = 0 ; return ( ( var_1 . method_3 ( ) ) - ( ( var_1 . size ( ) ) - offset ) ) + int_1 ; }
[0]: public int method_1 ( ) throws type_1 { try { java.lang.string var_1 = ( null!= ( method_2 ( ) ) )? method_2 ( ). getstring ( ) : string_1 ; var_2 = null ; var_3. method_3 ( ). method_4 ( var_1 ) ; } catch ( java.io.ioexception var_4 ) { throw new type_1 ( var_4 ) ; } catch ( type_2 var_4 ) { throw new type_1 ( var_4 ) ; } return var_5 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 file ) throws java.lang.exception { if ( ( file . method_7 ( ) ) > 0 ) { type_3 var_2 = new type_3 ( ) ; var_2 . method_2 ( file . method_3 ( ) ) ; var_2 . method_4 ( file . method_5 ( ) ) ; var_2 . method_6 ( file . method_7 ( ) ) ; var_2 . method_8 ( file . method_9 ( ) ) ; var_3 . method_10 ( var_2 ) ; var_1 . method_11 ( var_2 . getid ( ) ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( getactivity ( ) ) ; type_4 var_3 = getactivity ( ). method_2 ( ) ; android.view.view var_4 = var_3. method_3 ( var_5, null ) ; var_2. method_4 ( var_4 ) ; return var_2. method_5 ( ) ; }

************

************
tgt: private boolean method_1 ( type_1 node , type_2 var_1 ) throws java.lang.exception { type_3 status ; java.lang.string var_2 = var_3 ; status = this . method_2 ( node , var_2 , null , null ) ; if ( ! ( status . method_3 ( ) ) ) { type_4 . error ( string_1 , var_2 , status ) ; return false ; } type_4 . info ( string_2 , node ) ; return true ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { type_2 var_2 = var_3. method_2 ( var_1 ) ; java.util.list < type_1 > list = var_4. method_3 ( var_2. method_4 ( ) ) ; java.util.collections.sort ( list, new type_3 < type_1 > ( ) { public int method_5 ( type_1 var_5, type_1 var_6 ) { return ( var_6. method_6 ( ). gettime ( ) ) > ( var_5. method_6 ( ). gettime ( ) )? 1 : - 1 ; } } ) ; return list ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { type_2 var_1 = new type_2 ( 0 ) ; return var_2 . method_2 ( ) . method_3 ( ( var_3 ) - > new type_1 ( var_1 . method_4 ( ) , var_3 . trim ( ) ) ) . method_5 ( type_3 . method_6 ( ) ) ; }
[0]: protected int method_1 ( type_1 var_1, int position, type_2 var_2, type_3 state ) { int var_3 ; if ( var_2 == ( var_4 ) ) { var_3 = 0 ; } else { var_3 = var_5. method_2 ( ) ; } if ( var_6 ) { state. method_3 ( position ) ; } var_5. method_1 ( var_1. view, var_3 ) ; return var_3 ; }

************

************
tgt: protected java.util.list < type_1 > method_1 ( ) { final java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; int var_2 = method_2 ( ) ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; ++ i ) { if ( i != var_2 ) { for ( type_1 var_4 : var_3 . get ( i ) ) var_1 . add ( var_4 ) ; } } return var_1 ; }
[0]: public static int method_1 ( java.lang.string [ ] args ) throws type_1, java.lang.nullpointerexception { type_2 var_1 = new type_2 ( args ) ; java.lang.long var_2 = java.lang.long. method_2 ( type_3. method_3 ( string_1 ) ) ; type_4 x = new type_4 ( var_2, var_1 ) ; type_5. method_4 ( x. getdata ( ) ) ; x = null ; var_2 = null ; var_1 = null ; return 0 ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { if ( ( var_2 ) != null ) return true ; try { var_2 = new java.net.url ( var_1 ) ; new java.lang.thread ( this ) . start ( ) ; } catch ( type_1 var_3 ) { var_3 . method_2 ( ) ; } return ( var_2 ) != null ; }
[0]: public void method_1 ( long var_1, java.lang.string var_2, java.lang.string var_3, java.util.list < type_1 > result, type_2 type, java.lang.string var_4 ) { type_3 var_5 = new type_3 ( var_2, var_3, result, type, var_4 ) ; java.lang.string var_6 ; try { var_6 = var_7. method_2 ( var_5 ) ; var_8. method_3 ( var_5 ) ; var_9. method_4 ( ( var_6 + ""\n"" ) ) ; } catch ( java.io.ioexception var_10 ) { type_4. error ( string_1, var_10 ) ; } }

************

************
tgt: public boolean method_1 ( ) { synchronized ( this ) { if ( ( method_2 ( ) ) != ( var_1 ) ) return false ; if ( ! ( method_3 ( ) ) ) return false ; method_4 ( var_2 ) ; } if ( ( var_3 ) != null ) var_3 . method_5 ( method_6 ( ) ) ; return true ; }
[0]: private type_1 method_1 ( type_2 var_1, type_3 var_2, java.lang.string var_3, final java.lang.string var_4, java.lang.object id ) { final int var_5 = var_1. method_2 ( ). update ( new type_4 ( ). method_3 ( var_3 ). method_4 ( ( var_4 + string_1 ) ). method_5 ( java.lang.string. method_6 ( id ) ). build ( ), var_2 ) ; return var_5 > 0? type_1. method_7 ( var_5, var_3 ) : method_8 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) + ( var_5 ) ) + string_4 ) + ( var_6 ) ) + string_4 ) + ( var_7 ) ) + string_4 ) + ( var_8 ) ) + string_5 ) + string_6 ; var_1 . method_2 ( var_2 ) ; }
[0]: void method_1 ( type_1 var_1, java.lang.object var_2, java.util.set < type_2 > var_3, type_3 var_4 ) { synchronized ( this ) { type_4 var_5 = var_6. get ( var_2 ) ; if ( var_5 == null ) { var_5 = new type_4 ( var_1, var_2, var_4 ) ; var_6. put ( var_2, var_5 ) ; } var_5. method_2 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { if ( ( var_2 ) != var_1 ) { var_2 = var_1 ; var_3 = ( var_4 ) / var_1 ; method_2 ( ) ; if ( ( var_5 ) != null ) { var_5 . method_3 ( var_1 ) ; var_5 . method_4 ( var_6 ) ; } if ( ! ( method_5 ( ) ) ) { method_6 ( ) ; } } }
[0]: public void method_1 ( android.view.view var_1 ) { if (! ( var_2. method_2 ( ) ) ) { type_1. method_3 ( var_2, string_1, var_3 ). show ( ) ; return ; } android.content.intent intent = new android.content.intent ( getcontext ( ), var_4 class ) ; type_2 var_5 = new type_2 ( ) ; var_5. method_4 ( string_2, method_5 ( ) ) ; intent. method_6 ( var_5 ) ; method_7 ( intent ) ; }

************

************
tgt: public void method_1 ( java.lang.string message ) { if ( message . equals ( string_1 ) ) { return ; } var_1 . settext ( string_1 ) ; type_1 var_2 = new type_1 ( message , var_3 ) ; method_2 ( var_2 ) ; method_3 ( message ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { type_1. method_1 ( ( ) - > { try { type_2. method_2 ( new type_3 ( ) ) ; type_4. method_3 ( false ) ; } catch ( type_5 var_1 ) { var_1. method_4 ( ) ; } type_6 var_2 = new type_6 ( ) ; type_7. method_5 ( var_2 ) ; var_2. method_6 ( true ) ; } ) ; } }

************

************
tgt: public static void method_1 ( ) { java.lang.system.out.println ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { if ( ( ( i % int_2 ) == 0 ) && ( i != 0 ) ) { java.lang.system.out.println ( ) ; java.lang.system.out.println ( string_1 ) ; } java.lang.system.out.print ( ( string_2 + ( i + 1 ) ) ) ; } java.lang.system.out.println ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( ( type_2. method_2 ( this, var_2 ) )!= ( var_3 ) ) && ( ( type_2. method_2 ( this, var_4 ) )!= ( var_3 ) ) ) { type_2. method_3 ( this, new java.lang.string [ ] { var_5 }, var_6 ) ; } method_4 ( ) ; }

************

************
tgt: public void method_1 ( ) { synchronized ( this . var_1 ) { if ( this . var_1 . method_2 ( item ) ) { final java.util.set < type_1 > var_2 = this . var_1 . get ( item ) ; var_2 . remove ( var_3 ) ; if ( var_2 . isempty ( ) ) this . var_1 . remove ( item ) ; } } }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; var_1 = var_2. method_2 ( ) ; var_3 = var_2. method_3 ( ) ; var_4 = var_2. method_4 ( ) ; var_5. height = var_2. method_5 ( ) ; type_1. method_6 ( var_5, type_2. get ( var_6 ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) ; if ( var_3 ) { var_4 . method_4 ( ) ; method_5 ( ) ; var_5 . method_6 ( ) ; var_3 = false ; } else { if ( method_7 ( ) ) { var_4 . start ( ) ; var_4 . method_8 ( int_1 ) ; var_3 = true ; } else { method_5 ( ) ; } } }
[0]: public boolean method_1 ( type_1 data ) { if ( ( ( var_1 ) == null ) && ( ( var_2 )!= null ) ) { for ( type_2 var_3 : data. method_2 ( ) ) { if ( var_3. getid ( ). equals ( var_2 ) ) { this. var_1 = var_3 ; } } } return ( ( ( data. method_3 ( ) )!= null ) && ( ( data. method_4 ( ) )!= null ) ) && ( ( this. var_1 )!= null ) ; }

************

************
tgt: public type_1 method_1 ( ) { if ( ( first ) != ( ( ( var_1 ) + 1 ) % ( var_2 . length ) ) ) { if ( ( first ) > 0 ) { return ( ( type_1 ) ( var_2 [ ( ( ( first ) - 1 ) % ( var_2 . length ) ) ] ) ) ; } else { return ( ( type_1 ) ( var_2 [ ( ( var_2 . length ) - 1 ) ] ) ) ; } } return null ; }
[0]: public void method_1 ( android.view.view var_1 ) { if (! ( var_2. method_2 ( ) ) ) { method_3 ( true ) ; } else { method_3 ( false ) ; } if ( ( var_3. method_4 ( ) )!= ( var_4 ) ) { method_5 ( var_3 ) ; method_5 ( var_5 ) ; } }

************

************
tgt: public int method_1 ( int number ) { type_1 var_1 = new type_1 ( ) ; for ( type_1 var_2 : var_3 ) { if ( ( var_2 . method_2 ( ) ) == number ) { var_1 = var_2 ; } } if ( var_1 == null ) { return 0 ; } else { return var_1 . getid ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) this. method_1 ( ( ( type_2 ) ( var_1 ) ) ) ; if ( var_1 instanceof type_3 ) this. method_1 ( ( ( type_3 ) ( var_1 ) ) ) ; else var_1. method_1 ( this ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( ) ; var_2 . method_3 ( 0 ) ; var_2 . method_1 ( ) ; this . var_3 . method_4 ( ) ; for ( int i = 0 ; i < ( var_4 . length ) ; i ++ ) var_4 [ i ] = null ; var_4 = null ; method_5 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( getactivity ( ). method_2 ( var_3 ) ) ) ; int var_4 = var_5 ; method_3 ( string_1 ) ; var_6 = new type_3 ( getactivity ( ), var_4, var_7 ) ; var_2. method_4 ( var_6 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) ) == ( var_2 ) ) { if ( ( var_3 ) != null ) { var_3 = null ; method_3 ( ) ; return ; } var_4 = var_5 = true ; type_2 . method_4 ( int_1 , string_1 ) ; method_5 ( false ) ; } }
[0]: public void method_1 ( int var_1, int id ) { switch ( var_1 ) { case 0 : var_2 = string_1 ; break ; case 1 : var_2 = string_2 ; break ; case int_1 : var_2 = string_3 ; break ; case int_2 : var_2 = string_4 ; break ; case int_3 : var_2 = string_5 ; break ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string str ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; while ( ( str . length ( ) ) > 0 ) { str = method_2 ( str , var_1 ) ; } line = 1 ; var_2 = 1 ; return var_1 ; }
[0]: private void method_1 ( int var_1, int var_2 ) { if ( ( ( method_2 ( ). var_3. length ) - 1 ) < var_1 ) return ; int [ ] var_4 = method_2 ( ). var_3 [ var_1 ] ; for ( int var_5 = 0 ; var_5 < ( var_4. length ) ; var_5 ++ ) { if ( ( var_4 [ var_5 ] ) == var_2 ) { method_3 ( var_5 ) ; break ; } } }

************

************
tgt: public void method_1 ( type_1 event ) throws java.io.ioexception { java.lang.system.out.println ( string_1 ) ; int i ; try { i = java.lang.integer.parseint ( var_1 . gettext ( ) ) ; } catch ( java.lang.exception var_2 ) { return ; } method_5 ( ) ; method_2 ( ) ; method_3 ( i ) ; method_4 ( i ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.string path = ( ( ( ( ( ( type_1. method_2 ( ) ) + ( var_3 ) ) + var_1 ) + string_1 ) + var_2 ) + string_2 ; type_2. info ( ( string_3 + path ) ) ; return path ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; method_5 ( var_3 ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( ) ; method_10 ( ) ; method_11 ( ) ; var_3 . method_12 ( var_4 ) ; var_5 = method_13 ( ) ; var_6 = method_14 ( ) . method_15 ( var_7 ) ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { try { java.lang.string var_2 = var_1. getstring ( string_1 ) ; if ( var_2. isempty ( ) ) { return method_2 ( var_1 ) ; } else { return method_3 ( var_1 ) ; } } catch ( java.lang.exception var_3 ) { } return null ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { var_2 = var_1 ; if ( var_1 != null ) { int i = var_2 . method_2 ( char_1 ) ; i = java.lang.integer.parseint ( var_2 . substring ( 0 , i ) ) ; if ( i > ( var_3 ) ) var_3 = ( ( byte ) ( i ) ) ; } }
[0]: private void method_1 ( type_1 var_1, boolean var_2 ) { type_2 var_3 = type_2. get ( var_4 ) ; method_2 ( var_3, 1 ) ; var_5. method_3 ( var_1. method_4 ( ), var_1. height ( ) ) ; if ( var_2 ) { method_5 ( var_3, var_1. method_4 ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = null ; if ( var_1 != null ) { var_2 = new type_1 ( ) ; var_2 . method_2 ( var_1 . getstring ( "id" ) ) ; var_2 . method_3 ( var_1 . getstring ( string_1 ) ) ; var_2 . method_4 ( var_1 . getstring ( string_2 ) ) ; } return var_2 ; }
[0]: public static boolean method_1 ( type_1 var_1 ) { if ( var_2. contains ( var_1 ) ) { return true ; } else { for ( type_2 var_3 : var_1. method_2 ( ). method_3 ( var_4 ). method_4 ( var_1 ). method_5 ( ) ) { if ( var_3. getid ( ). method_6 ( var_5 ) ) { return true ; } } } if ( var_1. getid ( ). equals ( var_6 ) ) return true ; return false ; } }

************

************
tgt: public int method_1 ( ) { if ( method_2 ( ) ) { return 1 ; } else if ( method_3 ( ) ) { return int_1 ; } else if ( method_4 ( ) ) { return int_2 ; } else if ( method_5 ( ) ) { return int_3 ; } else { return 0 ; } }
[0]: protected type_1 method_1 ( java.lang.string... params ) { type_1 var_1 = new type_1 ( ) ; var_1 = type_2. method_2 ( var_2. method_3 ( ), var_2. method_4 ( ), var_3. method_5 ( ). method_6 ( ). method_3 ( ), var_3. method_5 ( ). method_6 ( ). method_4 ( ), params [ 1 ] ) ; try { java.lang.thread. method_7 ( int_1 ) ; } catch ( type_3 var_4 ) { var_4. method_8 ( ) ; } return var_1 ; }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_1 ; try { var_1 = ( ( type_1 ) ( getactivity ( ) ) ) ; } catch ( type_2 var_2 ) { throw new type_3 ( java.lang.string.format ( string_1 , var_3 class . method_2 ( ) ) , var_2 ) ; } return var_1 ; }
[0]: public type_1 method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) { for ( type_1 f : var_2 ) { try { if ( type_2. method_2 ( f. method_3 ( ). method_4 ( ), var_1. method_3 ( ). method_4 ( ) ) ) return f ; } catch ( java.io.ioexception var_3 ) { var_3. method_5 ( ) ; } } } return null ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 text ) { final type_4 var_2 = var_3 . method_2 ( ) ; text = type_5 . method_3 ( text , var_1 ) ; if ( var_1 == ( var_4 ) ) { return new type_6 ( var_2 , var_5 , var_6 , text , var_7 ) ; } else { return new type_7 ( var_2 , var_5 , var_6 , text , var_7 ) ; } }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { switch ( var_1 ) { case 1 : if ( var_2 == ( var_3 ) ) { int var_4 = data. method_2 ( var_5, 0 ) ; if ( var_4!= 0 ) { long var_6 = data. method_3 ( var_7, 0 ) ; if ( var_6!= 0 ) method_4 ( var_8. method_5 ( var_6 ) ) ; } } } }

************

************
tgt: public void method_1 ( java.util.map var_1 , java.lang.object fieldname ) { if ( ( var_2 ) == ( var_3 ) ) { type_1 var_4 = new type_1 ( var_1 , fieldname ) ; type_2 var_5 = method_2 ( ) ; var_6 = var_4 ; var_7 = context ; var_2 = var_8 ; } }
[0]: public void method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) return ; var_2 = var_1 ; if (! ( var_3. getvalue ( ). equals ( var_1 ) ) ) this. var_3. setvalue ( var_1 ) ; method_2 ( ) ; var_4. method_3 ( string_1, var_1, ( ( method_4 ( ) ) == null? string_2 : method_4 ( ). size ( ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 var_1 = ( ( type_1 ) ( view ) ) ; if ( var_1 . method_2 ( ) ) { type_2 . method_3 ( var_2 , string_1 ) ; } else { type_2 . method_3 ( var_2 , string_2 ) ; } }
[0]: public static int method_1 ( final java.lang.string str ) { int var_1 = - int_1 ; final byte [ ] var_2 = str. method_2 ( var_3 ) ; for ( final byte b : var_2 ) { { int var_4 = var_1 ^ b ; var_1 = var_4 ; var_1 = var_1 * int_2 ; } } return var_1 ; } }

************

************
tgt: public type_1 start ( type_2 var_1 ) throws type_3 { var_2 . method_1 ( var_1 ) ; var_2 . method_2 ( ) ; java.util.list < type_4 > var_3 = var_4 ; type_1 var_5 = new type_1 ( string_1 ) ; var_5 . method_4 ( string_2 , var_3 ) ; return var_5 ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( x, y ) ; if ( var_1 == null ) return ; var_2. method_3 ( x, y ) ; type_1 var_3 = var_4 [ var_5 ] ; if ( var_3 == null ) return ; var_4 [ var_5 ] = null ; var_2. method_4 ( var_3, x, y ) ; var_4 [ var_5 ] = var_1 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; type_1 var_1 = method_3 ( ) ; try { method_4 ( var_1 ) ; method_5 ( var_1 ) ; type_2 var_2 = method_6 ( ) ; var_1 . method_11 ( new type_4 ( var_2 ) ) ; } finally { var_1 . method_12 ( ) ; } }
[0]: public void method_1 ( type_1 view, int var_1, int var_2, int var_3 ) { var_4 = ( ( ( ( java.lang.integer.tostring ( var_1 ) ) + string_1 ) + ( java.lang.integer.tostring ( var_2 ) ) ) + string_1 ) + ( java.lang.integer.tostring ( var_3 ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_1 var_1 , double var_2 ) { final type_1 var_3 = new type_1 ( ) ; type_2 . method_2 ( var_1 , var_3 , var_4 ) ; final type_1 var_5 = new type_1 ( ) ; type_3 . method_3 ( var_3 , new type_4 ( int_1 , int_2 , int_3 ) , new type_4 ( int_4 , int_5 , int_4 ) , var_5 ) ; final type_1 result = new type_1 ( ) ; var_5 . method_4 ( result , var_6 ) ; return result ; }
[0]: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; try { var_1 = var_2. method_2 ( string_1, var_3, var_4 ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_3 ( ) ; } var_6. method_4 ( var_1 ) ; }

************

************
tgt: private void method_1 ( ) { method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; var_3 . method_4 ( this ) ; var_3 . method_5 ( ) . method_6 ( 0 ) . method_7 ( true ) ; android.widget.linearlayout var_4 = ( ( android.widget.linearlayout ) ( var_3 . method_8 ( 0 ) ) ) ; var_4 . method_9 ( new type_3 ( ) { public void method_10 ( android.view.view var_5 ) { method_11 ( var_6 ) ; var_7 . method_12 ( var_8 ) ; } } ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { int var_3 = var_1. method_2 ( ) ; int var_4 = var_2. method_2 ( ) ; if ( var_3 == var_4 ) return 0 ; else if ( var_3 > var_4 ) return 1 ; return - 1 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( ) ; method_9 ( type_1 . method_10 ( var_2 ) ) ; method_11 ( type_1 . method_10 ( var_3 ) ) ; method_12 ( ) ; execute ( ) ; }
[0]: public java.util.list < type_1 > method_1 ( ) { if ( ( this. var_1 ) == null ) { this. var_1 = new type_2 ( ). method_2 ( var_2 class ). method_3 ( var_3. method_4 ( this. method_5 ( ) ) ). method_6 ( type_3. method_7 ( var_4 ) ). method_8 ( ) ; } return var_1 ; }

************

************
tgt: public type_1 method_1 ( type_2 message , type_3 var_1 ) { type_4 . method_2 ( ) . method_3 ( ( ) - > { type_5 var_2 = var_3 . method_4 ( ) ; if ( var_2 != null ) { type_6 . method_5 ( var_2 , var_4 ) ; type_7 . method_5 ( var_2 , null ) ; } } ) ; return null ; }
[0]: public void method_1 ( type_1 key, type_1 value, type_2 context ) throws java.io.ioexception, type_3 { java.lang.string [ ] var_1 = value. tostring ( ). split ( string_1 ) ; java.lang.string [ ] var_2 = var_1 [ 0 ]. split ( string_2 ) ; if ( ( java.lang.integer.parseint ( var_2 [ int_1 ] ) ) == 0 ) { title. set ( string_3 ) ; var_3. set ( java.lang.double. method_2 ( var_2 [ 0 ] ) ) ; context. method_3 ( title, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) ; type_2 . method_3 ( null ) ; type_3 var_2 = var_1 . method_4 ( ) ; try { if ( var_2 . method_5 ( ) ) var_2 . commit ( ) ; } catch ( type_4 var_3 ) { if ( ( var_2 != null ) && ( var_2 . method_5 ( ) ) ) var_2 . method_6 ( ) ; throw var_3 ; } finally { } }
[0]: public < type_1 > type_2 < java.util.list < type_1 > > method_1 ( final java.lang.string var_1, final java.lang.class var_2 ) { assert var_1!= null ; assert var_2!= null ; if ( var_3. method_2 ( var_1 ) ) return new type_2 ( ( ( java.util.list < type_1 > ) ( method_3 ( var_1, var_2 ) ) ) ) ; else return var_4 ; }

************

************
tgt: boolean method_1 ( type_1 var_1 ) { return ( ( var_2 ) && ( ! ( var_1 . method_2 ( ) ) ) ) || ( ( ! ( var_2 ) ) && ( ( var_1 . method_2 ( ) ) || ( ( ( ( var_3 ) != null ) && ( ! ( var_3 . isempty ( ) ) ) ) && ( ! ( var_3 . equals ( var_1 . method_3 ( ) ) ) ) ) ) ) ; }
[0]: public static int method_1 ( int var_1, int size ) { int var_2 ; while ( type_1. method_2 ( var_1 ) ) { var_2 = var_1 ++ ; if ( ( ( var_1 % int_1 ) ^ ( size + 1 ) ) == 1 ) { var_2 = 1 ; } } return var_2 ; }

************

************
tgt: private void method_1 ( android.view.view view ) { type_1 . method_2 ( var_1 , string_1 ) ; var_2 = new type_2 ( getactivity ( ) , this ) ; type_3 var_3 = new type_4 ( getactivity ( ) ) ; var_4 = ( ( type_5 ) ( view . method_3 ( var_5 ) ) ) ; var_4 . method_4 ( var_2 ) ; var_4 . method_5 ( var_3 ) ; type_6 var_6 = new type_7 ( var_2 ) ; type_8 var_7 = new type_8 ( var_6 ) ; var_7 . method_6 ( var_4 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; method_3 ( ) ; type_2 var_3 = ( ( type_2 ) ( method_4 ( var_4 ) ) ) ; var_5 = new type_3 ( method_5 ( ) ) ; var_3. method_6 ( var_5 ) ; }

************

************
tgt: public int method_1 ( type_1 state , type_2 var_1 , type_3 var_2 , int var_3 ) { int var_4 = state . method_2 ( ) . method_3 ( state ) ; if ( ( state . method_2 ( ) ) instanceof type_5 ) { type_4 var_5 = ( ( type_5 ) ( state . method_2 ( ) ) ) . var_6 [ var_4 ] ; if ( var_5 != null ) return var_5 . getcolor ( ) ; } return int_1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2. method_2 ( type_1. method_3 ( ) ) ; int var_2 = var_1. method_4 ( ) ; int var_3 = var_2 % int_1 ; type_1 var_4 = ( var_3 == 1 )? var_1 : var_1. method_5 ( ( int_2 - var_3 ) ) ; type_3 var_5 = type_3. method_6 ( var_6. method_7 ( var_7 ) ) ; assertequals ( var_4, var_5. method_8 ( var_1 ). get ( ) ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { type_1 var_2 ; try { var_2 = var_3 . method_2 ( ) ; } catch ( java.lang.exception var_4 ) { return ; } if ( var_2 == null ) { return ; } java.util.map < java.lang.string , java.lang.string > var_5 = type_3 . method_3 ( var_1 ) ; type_2 var_6 = type_3 . method_4 ( var_2 ) ; for ( type_4 var_7 : var_8 ) { var_7 . method_5 ( var_6 , var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2 ) ; if (! ( var_3. method_3 ( ) ) ) { var_3. method_1 ( var_1 ) ; } for ( type_2 var_4 : var_5 ) { if (! ( var_4. method_3 ( ) ) ) { var_4. method_1 ( var_1 ) ; } } for ( type_3 p : var_6 ) { if ( p. method_4 ( ) ) { p. method_1 ( var_1 ) ; } } } }

************

************
tgt: public static java.lang.class method_1 ( java.lang.class var_1 ) { type_1 [ ] var_2 = var_1 . method_2 ( ) ; for ( type_1 var_3 : var_2 ) { if ( var_3 instanceof type_2 ) { type_1 [ ] var_4 = ( ( type_2 ) ( var_3 ) ) . method_3 ( ) ; if ( ( var_4 . length ) > 0 ) { return ( ( java.lang.class ) ( var_4 [ 0 ] ) ) ; } } } return null ; }
[0]: private int method_1 ( double [ ] var_1 ) { double var_2 = var_1 [ 0 ] ; int var_3 = 0 ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] ) > 0 ) { if ( ( java.lang.double. method_2 ( var_1 [ i ], var_2 ) ) > 1 ) { var_2 = var_1 [ i ] ; var_3 = i ; } } } return var_3 ; }

************

************
tgt: private java.lang.long method_1 ( java.lang.string var_1 ) { type_1 query = var_2 . method_2 ( string_1 ) ; query . method_3 ( string_2 , var_1 ) ; java.util.list < type_2 > var_3 = ( ( java.util.list < type_2 > ) ( query . method_4 ( ) ) ) ; if ( ( var_3 != null ) && ( ! ( var_3 . isempty ( ) ) ) ) { return var_3 . get ( 0 ) . getid ( ) ; } return null ; }
[0]: public void get ( java.lang.string key, java.lang.string var_1, type_1 var_2 ) { type_2 var_3 = method_1 ( var_1 ) ; java.lang.object value = var_3. method_2 ( ). get ( key ) ; if ( value!= null ) { var_2. method_3 ( value. tostring ( ) ) ; } else { var_2. method_3 ( null ) ; } }

************

************
tgt: public java.lang.string getstring ( java.lang.string var_1 , java.lang.string var_2 ) { try { java.lang.string key = var_3 . method_1 ( var_1 ) ; java.lang.string value = var_4 . getstring ( key , null ) ; if ( value != null ) return var_3 . method_2 ( value ) ; } catch ( java.lang.exception var_5 ) { var_5 . method_3 ( ) ; } return var_2 ; }
[0]: private void method_1 ( ) { type_1 var_1 = var_2. method_2 ( ) ; var_1. info ( ( string_1 + ( var_3. method_3 ( ) ) ) ) ; try { type_2. method_4 ( var_1, var_3. method_3 ( ), type_3. method_5 ( ), true ) ; } catch ( java.io.ioexception var_4 ) { throw new type_4 ( var_4 ) ; } }

************

************
tgt: private static double method_1 ( final java.lang.string var_1 , final java.lang.string var_2 , final double var_3 , final double var_4 , final type_1 var_5 ) { if ( var_5 == null ) { return var_6 ; } double var_7 = var_5 . method_1 ( var_1 , var_2 ) ; if ( var_7 < var_4 ) { return var_4 ; } else { return ( ( var_3 - ( var_6 ) ) * ( var_7 * var_7 ) ) + ( var_6 ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { for ( int position : var_2. method_2 ( ) ) { var_3. remove ( position ) ; var_4. remove ( position ) ; var_5. method_3 ( var_2. get ( position ) ) ; } var_6. method_4 ( ) ; var_2. method_5 ( ) ; method_6 ( var_7 ). method_7 ( var_8 ) ; method_6 ( var_9 ). method_7 ( var_8 ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 ) { try { if ( ( var_2 != null ) && ( ! ( var_2 . method_2 ( ) ) ) ) { var_2 . method_1 ( ) ; } type_3 . method_1 ( var_1 ) ; } catch ( type_4 var_3 ) { throw new type_5 ( var_3 . method_3 ( ) , var_3 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > list = new java.util.linkedlist < > ( ) ; java.util.list < type_2 > var_1 = method_2 ( ) ; for ( type_2 var_2 : var_1 ) { if (! ( type_3. method_3 ( var_2 ) ) ) { list. add ( new type_1 ( var_2 ) ) ; } } return list ; }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) == null ) { var_1 = var_2 . method_2 ( ) . method_3 ( ) ; if ( ( var_3 ) != null ) { var_1 . method_4 ( ) . set ( var_3 ) ; } } }
[0]: public static void method_1 ( boolean var_1 ) { if ( ( ( var_2 )!= null ) && ( ( type_1. method_2 ( ). var_3 )!= null ) ) { var_2. set ( var_4, var_1 ) ; type_1. method_3 ( ) ; type_2. method_4 ( type_3. method_5 ( ) ). method_6 ( ). method_7 ( var_5, var_1 ). commit ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( type_1 . method_2 ( method_3 ( ) ) ) { var_1 . method_4 ( true ) ; new type_2 ( null , var_2 , var_3 , false , method_3 ( ) ) . execute ( ) ; } else { var_1 . method_4 ( false ) ; type_3 . method_5 ( this , string_1 , var_4 ) . show ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1, byte [ ] var_2, boolean var_3 ) { type_1. method_2 ( var_4, ( string_1 + ( new java.lang.string ( var_2 ) ) ) ) ; java.lang.string message = new java.lang.string ( var_2 ) ; type_2 var_5 = new type_2 ( ) ; var_5. method_3 ( java.lang.long.parselong ( message. split ( string_2 ) [ 0 ] ) ) ; var_5. method_4 ( java.lang.integer.parseint ( message. split ( string_2 ) [ 1 ] ) ) ; new type_3 ( ). execute ( var_5 ) ; }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { if ( var_1 == 0 ) { if ( ( ( ( var_3 . length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_4 ) ) ) && ( ( var_3 [ 1 ] ) == ( var_4 ) ) ) { var_6 . setenabled ( true ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1. method_2 ( ) ; type_3 var_3 = ( ( type_3 ) ( var_2. method_3 ( type_4. method_4 ( string_1 ) ) ) ) ; method_5 ( var_3. method_6 ( ), var_1. method_7 ( ), var_1. method_8 ( ) ) ; var_1. method_9 ( ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( java.lang.math.abs ( ( ( var_1 ) - ( var_2 ) ) ) ) > ( var_3 ) ) { return ; } if ( ( java.lang.math.abs ( ( ( var_4 ) - ( var_5 ) ) ) ) > ( var_3 ) ) { return ; } var_6 = true ; listener . method_2 ( var_1 , var_4 ) ; }
[0]: private void method_1 ( final type_1 msg ) { if ( msg instanceof type_2 ) { type_2 var_1 = ( ( type_2 ) ( msg ) ) ; var_1. method_2 ( method_3 ( ) ) ; parameters = var_1. method_4 ( parameters ) ; var_2 = var_1. method_5 ( ) ; } else { if ( (! ( var_3 ) ) && ( msg!= null ) ) { msg. method_6 ( ) ; } this. message = msg ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 + ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) ; type_1 b = type_1 . method_2 ( var_1 ) ; type_2 var_2 = new type_3 ( ) ; type_4 var_3 = var_2 . method_3 ( b ) ; assertequals ( var_4 , var_3 ) ; b . method_3 ( var_5 , b . method_4 ( b . method_5 ( ) , var_3 ) ) ; }
[0]: public final synchronized type_1 method_1 ( final type_2 var_1, final type_3 var_2, final int target, final long offset, final long length, final int var_3, final type_4 var_4, final long var_5 ) throws type_5 { return this. method_2 ( var_1, var_2, target, true, length, var_3, var_3, var_4, var_5 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 , byte value ) { boolean var_2 = false ; int result = ( ( var_3 . method_2 ( ) [ var_1 ] ) & int_1 ) - ( value & int_1 ) ; if ( result < 0 ) { var_2 = true ; result = ( int_1 - ( result * ( - 1 ) ) ) + 1 ; } var_3 . method_2 ( ) [ var_1 ] = ( ( byte ) ( result ) ) ; return var_2 ; }
[0]: public java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( this. counter ) ; i ++ ) { if ( var_1!= null ) { var_1. add ( this. var_2. get ( i ) ) ; } } return var_1 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_4 ( var_3 ) ; var_4 . context = this ; var_5 = new type_3 ( method_5 ( ) , var_2 ) ; var_6 = ( ( type_4 ) ( method_6 ( var_7 ) ) ) ; var_6 . method_7 ( var_5 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( ( var_2. method_2 ( ) ) == ( var_3 ) ) { var_2. method_3 ( var_4 ) ; var_5. method_4 ( var_6 ) ; } else { var_2. method_3 ( var_7 ) ; var_5. method_4 ( var_8 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) { if ( ( method_2 ( ) ) && ( ( var_3 . method_3 ( var_4 , var_1 , var_5 ) . var_6 ) == ( var_7 ) ) ) { return ( var_2 == null ) || ( var_2 == ( var_8 . method_4 ( ) . method_4 ( ) ) ) ; } return false ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_1 ) ; var_2 = type_2. method_3 ( this, var_3 ) ; var_2. method_4 ( var_4 ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( ) ; method_8 ( getintent ( ) ) ; method_9 ( ). method_10 ( var_5, null, this ) ; }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , java.lang.long var_2 ) { type_1 var_3 = new type_1 ( ) ; var_3 . method_2 ( var_2 ) ; var_3 . method_3 ( var_1 . getid ( ) ) ; var_3 . method_4 ( var_1 . method_5 ( ) ) ; var_3 . method_6 ( var_1 . method_7 ( ) ) ; var_3 . method_8 ( var_1 . method_9 ( ) ) ; return var_3 ; }
[0]: public boolean method_1 ( type_1 item ) { boolean status ; switch ( item. method_2 ( ) ) { case var_1 : method_3 ( new android.content.intent ( this, var_2 class ) ) ; status = true ; break ; case var_3 : status = true ; break ; case var_4 : method_4 ( null ) ; status = true ; break ; default : return super. method_1 ( item ) ; } return status ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int id ) { type_2 var_2 = ( ( type_3 ) ( var_1 ) ) . method_2 ( ) ; int var_3 = - 1 ; if ( ( var_2 . method_3 ( ) ) != null ) { var_3 = ( ( java.lang.integer ) ( var_2 . method_3 ( ) ) ) ; } method_4 ( var_3 ) ; }
[0]: protected void method_1 ( java.lang.string var_1 ) { super. method_1 ( var_1 ) ; type_1 msg = var_2. method_2 ( var_3, filename ) ; var_2. method_3 ( msg ) ; if (! ( var_4 ) ) { var_5. method_4 ( var_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) . method_3 ( string_1 ) ) { method_4 ( ( ( type_2 ) ( var_2 . method_5 ( ) ) ) ) ; method_6 ( var_3 . gettext ( ) ) ; method_7 ( true ) ; method_8 ( false ) ; } }
[0]: private type_1 method_1 ( int var_1, type_2 var_2 ) { double var_3 = var_2. method_2 ( ) ; int var_4 = var_2. method_3 ( ) ; type_3 var_5 = var_2. method_4 ( ) ; double var_6 = ( var_5. method_5 ( ) ) + ( var_5. method_6 ( ) ) ; double var_7 = ( var_5. method_7 ( ) ) + ( var_5. method_8 ( ) ) ; return new type_1 ( var_1, var_4, var_3, var_7, var_6 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; type_3 var_3 = var_2 . method_2 ( getcontext ( ) , var_1 ) ; if ( var_3 != null ) { method_3 ( var_3 , var_4 , var_4 ) ; } else { type_4 . method_4 ( string_1 ) ; } }
[0]: public static synchronized type_1 method_1 ( android.content.context context ) { if ( ( var_1 ) == null ) { type_2 var_2 = ( ( type_2 ) ( context. method_2 ( var_3 ) ) ) ; type_3 var_4 = context. method_3 ( ) ; var_1 = new type_1 ( context, var_2, type_1. method_4 ( var_4 ), type_1. method_5 ( var_4 ) ) ; } return var_1 ; }

************

************
tgt: private void method_1 ( ) { var_1 . setvalue ( ( ( ( ( ( var_2 ) == null ) || ( ( var_3 . size ( ) ) < ( var_4 ) ) ) || ( ( var_3 . size ( ) ) > ( var_5 ) ) ) || ( ( var_6 ) == null ) ) ) ; }
[0]: protected void method_1 ( type_1 param ) throws java.lang.throwable { type_2 var_1 = ( ( type_2 ) ( param. args [ 1 ] ) ) ; method_2 ( var_1 ) ; type_3 var_2 = ( ( type_3 ) ( param. args [ 0 ] ) ) ; method_3 ( var_2 ) ; }

************

************
tgt: public void remove ( type_1 item ) throws type_2 { if ( var_1 . method_1 ( item ) ) { this . var_1 . remove ( item . getname ( ) ) ; } else { throw new type_2 ( ( ( item . method_2 ( ) ) + string_1 ) ) ; } }
[0]: public type_1 method_1 ( type_2 var ) { try { type_3 id = var_1. get ( var ) ; if ( id == null ) return null ; type_1 n = id. method_2 ( ) ; if ( n == null ) { n = id. method_3 ( ). method_2 ( id ) ; id. method_4 ( n ) ; } return n ; } catch ( java.lang.exception var_2 ) { type_4. method_5 ( this, java.lang.string.format ( string_1, var ), var_2 ) ; return null ; } }

************

************
tgt: private void method_1 ( ) { for ( type_1 var_1 : var_2 ) { for ( type_2 var_3 : var_1 . method_2 ( ) ) { if ( var_3 . method_3 ( ) ) { if ( var_3 . method_4 ( ) ) { var_4 . add ( 0 , var_3 ) ; } else { var_4 . add ( var_3 ) ; } } } } if ( ! ( var_4 . isempty ( ) ) ) { method_5 ( ) ; } }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2, type_2 var_3 ) { method_2 ( var_1, var_2, var_3 ) ; var_4. info ( string_1, var_1. method_3 ( ), var_2, var_5, var_6 ) ; throw new type_3 ( var_5, var_6 ) ; }

************

************
tgt: public final type_1 method_1 ( final type_2 var_1 ) throws type_3 { type_4 id = method_2 ( var_1 ) ; java.lang.string var_2 = ( ( method_4 ( ) ) + string_1 ) + ( id . tostring ( ) ) ; return type_1 . status ( var_3 ) . method_6 ( string_2 , var_2 ) . build ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 data ) { data. method_2 ( var_2 ) ; type_3 var_3 = type_4. method_3 ( ). method_4 ( var_1, data ) ; type_5. method_5 ( var_4, ( string_1 + ( var_3. method_6 ( ) ) ) ) ; android.content.intent intent = new android.content.intent ( var_5 ) ; intent. method_7 ( var_6, var_3 ) ; type_6. method_3 ( var_7 ). method_8 ( intent ) ; }

************

************
tgt: public void method_1 ( android.content.context context ) { super . method_1 ( context ) ; try { var_1 = ( ( type_1 ) ( context ) ) ; } catch ( type_2 var_2 ) { throw new type_2 ( ( ( context . tostring ( ) ) + string_1 ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { int var_2 = var_3. method_2 ( ) ; int var_4 = var_3. method_3 ( ) ; java.util.calendar var_5 = java.util.calendar.getinstance ( ) ; var_5. set ( var_6, var_2 ) ; var_5. set ( var_7, var_4 ) ; var_8. set ( var_9, 0 ) ; var_10. method_4 ( true ) ; var_11. method_5 ( ) ; var_12. method_6 ( var_13, var_5. method_7 ( ), var_14 ) ; }

************

************
tgt: private java.io.file method_1 ( ) { try { java.lang.string result = ( method_2 ( ) ) + ( var_1 . name ) ; type_1 . method_3 ( type_2 . get ( result ) ) ; return new java.io.file ( result ) ; } catch ( java.io.ioexception var_3 ) { throw new type_3 ( ) ; } }
[0]: public static type_1 method_1 ( type_2 element ) { type_3 var_1 = null ; try { while ( ( var_1 = element. method_2 ( ) ) == null ) element = element. method_3 ( ) ; return ( ( type_1 ) ( var_1 ) ) ; } catch ( type_4 var_2 ) { type_5. method_4 ( string_1, var_2 ) ; return null ; } }

************

************
tgt: private void method_1 ( java.lang.object var_1 ) { var_2 = new java.util.arraylist < type_1 > ( ) ; if ( var_1 instanceof java.lang.object [ ] ) { for ( java.lang.object var_3 : ( ( java.lang.object [ ] ) ( var_1 ) ) ) { var_2 . add ( type_1 . method_2 ( method_3 ( ) , var_3 ) ) ; } } else { var_2 . add ( type_1 . method_2 ( method_3 ( ) , var_1 ) ) ; } }
[0]: protected type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = type_3. method_2 ( var_1 ) ; if ( var_2. method_3 ( ) ) return var_2 ; type_1 var_3 = type_4. method_2 ( var_2. end ( ) ) ; if ( var_3. method_3 ( ) ) return var_3 ; var_2 = type_5. method_2 ( var_2. end ( ) ) ; if ( var_2. method_3 ( ) ) return var_2 ; var_3. method_4 ( var_2. end ( ) ) ; return var_3 ; }

************

************
tgt: private void method_1 ( final type_1 var_1 ) { if ( 0 == ( type_2 . method_2 ( ) . method_3 ( ) . size ( ) ) ) { var_1 . error ( string_1 ) ; } else { var_1 . method_4 ( ) ; type_2 . method_2 ( ) . method_1 ( ) ; } }
[0]: public void method_1 ( type_1 i ) { if (! ( method_2 ( ) ) ) { boolean var_1 = ( ++ ( count ) ) >= ( var_2 ) ; var_3. method_1 ( i ) ; if ( var_1 && (! ( var_4 ) ) ) { var_4 = true ; try { var_3. method_3 ( ) ; } finally { method_4 ( ) ; } } } }

************

************
tgt: public type_1 method_1 ( ) { return type_2 . method_2 ( super . method_1 ( ) ) . add ( string_1 , method_4 ( ) ) . add ( string_2 , method_5 ( ) . name ( ) ) . add ( string_3 , gettype ( ) . name ( ) ) ; }
[0]: private void method_1 ( java.util.set < java.io.file > var_1 ) { final java.lang.string var_2 = method_2 ( var_1 ) ; final java.lang.string var_3 = method_3 ( ) [ 0 ] ; for ( java.lang.string var_4 : var_5 ) { final java.lang.string var_6 = ( ( var_2 + char_1 ) + var_4 ) + var_3 ; final boolean var_7 = type_1. method_4 ( var_6, var_1 ) ; if ( var_7 ) { final java.lang.string var_8 = method_5 ( var_2, var_4 ) ; method_6 ( var_8 ) ; } } }

************

************
tgt: public double method_1 ( java.lang.string var_1 ) throws java.io.ioexception { type_1 var_2 = type_2 . get ( var_1 ) ; if ( var_2 == null ) return - 1 ; java.lang.string name = var_2 . getname ( ) ; if ( ( name . compareto ( string_1 ) ) == 0 ) return - 1 ; type_3 var_3 = var_2 . method_2 ( ) . method_3 ( ) ; java.lang.double var_4 = var_3 . method_4 ( ) ; return var_4 ; }
[0]: public type_1 method_1 ( type_2 var_1, type_3 var_2, type_4 var_3 ) throws java.io.ioexception { type_1 var_4 = new type_1 ( ) ; var_4. method_2 ( true ) ; var_4. method_3 ( var_1 ) ; var_4. method_4 ( var_2 ) ; var_4. method_5 ( method_6 ( ) ) ; var_4. method_7 ( var_3 ) ; return var_4 ; }

************

************
tgt: public void method_1 ( java.util.map var_1 , type_1 var_2 ) { if ( var_1 . method_2 ( string_1 ) ) { int var_3 = java.lang.integer.parseint ( ( ( java.lang.string ) ( var_1 . get ( string_1 ) ) ) ) ; if ( var_3 < 1 ) var_2 . method_1 ( method_3 ( ) ) ; else var_2 . method_1 ( var_3 ) ; } else { var_2 . method_1 ( method_3 ( ) ) ; } }
[0]: private void method_1 ( ) { int var_1 = java.lang.integer.parseint ( var_2. getstring ( getstring ( var_3 ), java.lang.integer.tostring ( var_4 ) ) ) ; if ( var_1 == ( var_4 ) ) { return ; } else if ( var_1 == ( var_5 ) ) { android.content.intent intent = new android.content.intent ( this, var_6 class ) ; method_2 ( intent, var_7 ) ; } else if ( var_1 == ( var_8 ) ) { var_9 = true ; } }

************

************
tgt: public java.util.list < type_1 > list ( java.lang.string [ ] var_1 ) { type_2 var_2 = type_2 . method_1 ( var_1 [ 0 ] , var_3 ) ; type_2 var_4 = type_2 . method_1 ( var_1 [ 1 ] , var_3 ) ; return var_6 . method_2 ( string_1 , var_7 class ) . method_3 ( string_2 , var_2 ) . method_3 ( string_3 , var_4 ) . method_4 ( ) ; }
[0]: public void method_1 ( type_1 view, int var_1 ) { if ( ( var_2 ) <= 1 ) { return ; } if ( ( ( var_2 ) == ( var_3 ) ) && ( var_1 == ( var_4 ) ) ) { if (! ( var_5 ) ) { var_5 = true ; var_6. method_2 ( var_7 ) ; var_8. method_3 ( ) ; } } }

************

************
tgt: public synchronized void start ( ) { assert ( this . state ) == ( var_1 ) : string_1 + ( this . state ) ; this . state = var_2 ; if ( var_3 ) type_1 . method_1 ( string_2 ) ; this . method_2 ( ) ; if ( var_3 ) type_1 . method_1 ( string_3 ) ; this . var_4 . start ( ) ; this . var_6 . method_4 ( this ) ; }
[0]: type_1 method_1 ( type_2 < type_3 > var_1, type_4 var_2, int var_3 ) { for ( int i = 0 ; i <= var_3 ; i ++ ) { type_1 position = method_2 ( var_1, var_2, new java.util.hashmap < > ( ), var_3 ) ; if ( position!= null ) { return position ; } } return null ; }

************

************
tgt: public void remove ( int index ) { if ( ( index < 0 ) || ( index >= ( var_1 ) ) ) { throw new type_1 ( ) ; } for ( int i = index ; i < ( ( var_1 ) - 1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } ( var_1 ) -- ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2, java.lang.string message ) { type_1 var_3 = new type_1 ( this. var_4. method_2 ( ), var_1, var_2, message ) ; var_5. init ( ) ; var_5. method_3 ( var_3 ) ; var_5. method_4 ( ) ; }

************

************
tgt: private int method_1 ( char c ) { if ( type_1 . method_2 ( c ) ) { return ( c - char_1 ) + 1 ; } if ( c == char_2 ) return int_1 ; if ( c == char_3 ) return int_2 ; if ( c == char_4 ) return int_3 ; if ( c == char_5 ) return int_4 ; if ( c == char_6 ) return int_5 ; throw new type_2 ( ( string_1 + c ) ) ; }
[0]: public type_1 method_1 ( java.lang.string name ) throws type_2 { type_1 var_1 ; try { var_1 = type_3. method_2 ( name, var_2 ) ; } catch ( type_4 var_3 ) { type_5. error ( string_1, var_3 ) ; return null ; } catch ( java.lang.exception var_3 ) { type_5. error ( string_2, var_3 ) ; throw new type_2 ( var_3 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { byte [ ] buffer = new byte [ int_1 ] ; int var_1 ; while ( true ) { try { var_1 = var_2 . method_2 ( buffer ) ; var_3 . method_3 ( int_2 , var_1 , ( - 1 ) , buffer ) . method_4 ( ) ; } catch ( java.io.ioexception var_4 ) { } } }
[0]: private static boolean method_1 ( final type_1 var_1, final type_1 var_2 ) { return ( var_2. method_2 ( ). getid ( ). equals ( var_2. method_2 ( ). getid ( ) ) ) && ( var_3. method_3 ( var_1, var_4 ) ) ; }

************

************
tgt: public static type_1 method_1 ( type_2 var_1 , type_3 var_2 , java.lang.string var_3 , long var_4 , java.util.list < type_4 > var_5 ) { type_5 key = new type_5 ( var_3 , var_2 , var_4 , var_5 ) ; try { return var_6 . get ( key , new type_6 < type_1 > ( ) { public type_1 method_2 ( ) throws java.lang.exception { return type_7 . method_3 ( var_1 , var_2 , var_3 , var_4 , var_5 ) ; } } ) ; } catch ( type_8 var_7 ) { throw new type_9 ( var_7 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { type_1. method_1 ( int_1, string_1, ( ( var_2 ) + ( var_1 [ i ] ) ), i, var_3 [ i ] ) ; type_1. method_1 ( int_1, string_2, ( ( var_2 ) + ( var_1 [ i ] ) ), i, var_3 [ i ] ) ; } }

************

************
tgt: public static void method_1 ( java.util.collection < ? extends type_1 > c ) { for ( type_1 var_1 : c ) { for ( java.lang.string key : var_2 . get ( var_1 ) ) { java.util.arraylist < type_1 > list = var_3 . get ( key ) ; list . remove ( var_1 ) ; } } }
[0]: protected void method_1 ( java.lang.integer result ) { if ( result < int_1 ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_1. method_3 ( var_3 ) ; type_2 var_4 = ( ( type_2 ) ( method_2 ( var_5 ) ) ) ; var_4. method_3 ( var_6 ) ; var_7. method_4 ( ) ; method_5 ( string_1 ) ; } else { var_7. method_4 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( var_3 . gettext ( ) ) ; var_2 . method_3 ( var_4 . gettext ( ) ) ; var_2 . method_4 ( java.lang.integer.parseint ( var_5 . gettext ( ) ) ) ; type_2 . method_5 ( var_2 ) ; type_2 . method_7 ( var_2 ) ; }
[0]: public boolean equals ( java.lang.object obj ) { if ( obj == null ) return false ; if (! ( obj instanceof type_1 ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( ( type_2. equals ( var_2, var_3 ) ) && ( type_2. equals ( var_4, var_5 ) ) ) || ( ( type_2. equals ( var_2, var_5 ) ) && ( type_2. equals ( var_2, var_5 ) ) ) ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( final java.lang.string var_1 ) throws type_2 { java.util.arraylist < type_1 > results = new java.util.arraylist < type_1 > ( ) ; if ( var_1 == null ) { return results ; } type_1 var_2 = method_2 ( var_1 ) ; if ( var_2 == null ) { type_3 var_3 = new type_3 ( ) ; throw var_3 . method_3 ( var_4 , var_1 ) ; } return var_2 . method_4 ( ) ; }
[0]: private boolean method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_3 ) ) ) { return true ; } type_2 var_4 = ( var_1 == ( var_3 ) )? var_3 : var_1. method_2 ( ) ; type_2 var_5 = ( var_2 == ( var_3 ) )? var_3 : var_2. method_2 ( ) ; return method_3 ( var_4, var_5 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.list < type_1 < java.lang.double > > var_1 = type_2 . method_1 ( args [ 0 ] , false ) ; java.lang.system.out.println ( ( ( string_1 + ( var_1 . size ( ) ) ) + string_2 ) ) ; java.lang.system.out.println ( string_3 ) ; java.lang.system.out.println ( type_3 . method_2 ( var_1 ) ) ; java.lang.system.out.println ( string_4 ) ; type_3 . method_3 ( var_1 ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { var_2 = 0 ; switch ( position ) { case 1 : var_2 += 1 ; method_2 ( var_3 ) ; break ; case int_1 : var_2 += int_1 ; method_2 ( var_3 ) ; break ; } }

************

************
tgt: private void method_1 ( final boolean [ ] var_1 ) { int i = 1 ; assert null != var_1 ; assert null != ( this . var_2 ) ; for ( final boolean var_3 : var_1 ) { if ( var_3 ) this . var_2 . method_2 ( i ) ; i ++ ; } }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = ( var_3 ) | ( var_4 ) ; int var_5 = var_1. method_2 ( ) ; boolean var_6 = ( var_5 & var_2 )!= 0 ; if ( var_6 ) { int var_7 = var_1. method_3 ( ) ; if ( var_7 < 0 ) { this. method_4 ( ) ; return ; } if ( var_7 > 0 ) { this. method_5 ( ) ; return ; } } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) throws type_1 , type_2 , type_3 , type_4 , type_5 { type_6 var_4 = this . getclass ( ) . method_2 ( ( string_1 + ( type_7 . method_3 ( var_3 ) ) ) ) ; java.lang.object var_5 ; var_5 = var_4 . method_4 ( this ) ; this . method_1 ( var_1 , var_2 , var_5 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { method_2 ( ) ; type_1 var_2 = new type_1 ( ) ; var_2. method_3 ( new type_2 ( var_1 ) ) ; var_3 = var_2. method_4 ( ) ; this. var_4 = ( ( int ) ( var_3. get ( string_1 ) ) ) * int_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( var_1 . getvalue ( ) ) != null ) && ( var_1 . getvalue ( ) . equals ( var_2 ) ) ) { type_2 . method_2 ( string_1 , java.lang.string.format ( string_2 , var_1 . getvalue ( ) , var_2 ) ) ; method_3 ( var_3 , var_4 ) ; } else { type_2 . method_2 ( string_1 , java.lang.string.format ( string_3 , var_4 , var_2 ) ) ; } }
[0]: private boolean method_1 ( ) { int var_1 = java.lang.integer. method_2 ( var_2. gettext ( ). tostring ( ) ) ; if ( var_1 <= ( method_3 ( ) ) ) { var_3. method_4 ( getstring ( var_4, var_5. method_5 ( ) ) ) ; method_6 ( var_2 ) ; return false ; } return true ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 ) { if ( var_2 . equals ( var_1 ) ) return ; var_2 = var_1 ; java.lang.string var_3 = var_4 . method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_5 . size ( ) ) ; i ++ ) { if ( var_5 . get ( i ) . equals ( var_3 ) ) { var_6 . method_3 ( i ) ; break ; } } var_4 . method_4 ( ) ; var_4 . method_5 ( ) ; }
[0]: protected type_1 method_1 ( type_2 var_1, type_3 var_2 ) { java.lang.string var_3 = string_1 ; if ( ( var_2. method_2 ( ) )!= string_1 ) { var_3 = ( ( string_2 + ( var_2. method_2 ( ) ) ) + string_3 ) + ( var_2. method_3 ( ) ) ; } return method_4 ( var_2, var_1. getvalue ( string_4 ), var_1. getvalue ( string_5 ), var_1. getvalue ( string_6 ), var_3 ) ; }

************

************
tgt: private java.util.list < java.lang.string > method_1 ( java.util.hashmap < java.lang.string , java.lang.integer > var_1 , int n ) { type_1 var_2 = new type_1 ( var_1 ) ; type_2 < java.lang.string , java.lang.integer > var_3 = new type_2 < > ( var_2 ) ; var_3 . method_2 ( var_1 ) ; java.util.arraylist < java.lang.string > keys = new java.util.arraylist < > ( ) ; keys . method_3 ( var_3 . method_4 ( ) ) ; return ( keys . size ( ) ) > n ? keys . method_5 ( 0 , n ) : keys ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { super. method_1 ( var_1, var_2 ) ; final type_3 context = this. var_1. getactivity ( ). method_2 ( ) ; var_3 = var_2 ; type_4. method_3 ( var_4, string_1 ) ; var_5 = type_5. method_4 ( context ) ; type_6. method_4 ( ). method_5 ( string_2 ) ; type_6. method_4 ( ). method_5 ( string_3 ) ; }

************

************
tgt: public void method_1 ( android.view.view view , type_1 var_1 ) { super . method_1 ( view , var_1 ) ; final type_2 var_2 = method_2 ( ) ; if ( var_2 != null ) { type_3 . method_3 ( var_2 , view ) ; } if ( var_2 != null ) { var_2 . method_5 ( this ) ; } method_4 ( ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.object var_2 ) { try { java.lang.string var_3 = method_2 ( var_1 ) ; int var_4 = var_5. method_3 ( var_1 ) ; var_5. setvalue ( var_3, method_4 ( var_2, var_4 ) ) ; } catch ( type_1 var_6 ) { throw new type_2 ( var_6 ) ; } }

************

************
tgt: public void method_1 ( ) { var_1 = var_2 ; type_1 . method_2 ( ) ; type_2 . method_3 ( string_1 ) ; var_3 . method_4 ( ) ; for ( type_4 var_6 : var_7 ) { if ( ( var_4 . id ) != ( var_8 . id ) ) { var_6 . method_6 ( ) ; } } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; double var_2 = var_1. method_1 ( ) ; double var_3 = var_1. method_2 ( ) ; double error = var_3 - var_2 ; java.lang.system.out.println ( ( string_1 + var_2 ) ) ; java.lang.system.out.println ( ( string_2 + var_3 ) ) ; java.lang.system.out.println ( ( string_3 + error ) ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = ( ( ( ( string_1 + ( var_2 [ 0 ] . getname ( ) ) ) + string_2 ) + ( method_2 ( ) ) ) + string_3 ) + ( var_3 ) ; this . var_4 = false ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { var_2 [ i ] = null ; } this . var_5 = 0 ; return var_1 ; }
[0]: java.lang.object method_1 ( type_1 var_1, int var_2, type_2 key, type_3 var_3, java.lang.object [ ] args, boolean var_4 ) throws type_4 { type_5 var_5 = method_2 ( var_2, key, false, var_4 ) ; if ( var_5 instanceof type_6 ) { return method_1 ( var_1, ( ( type_6 ) ( var_5 ) ), var_3, args ) ; } return method_3 ( var_1, var_2, var_5, key. getstring ( ), args, var_3, var_4 ) ; }

************

************
tgt: private void method_1 ( int var_1 , type_1 var_2 ) { final java.lang.string line = var_3 . method_2 ( ( var_1 - 1 ) ) ; if ( ! ( line . isempty ( ) ) ) { final int start = method_3 ( line ) ; if ( var_2 . method_4 ( start ) ) { method_5 ( var_1 , start , var_2 ) ; } } }
[0]: public void method_1 ( ) { var_1. setenabled ( var_2 ) ; var_3. setenabled ( var_2 ) ; var_4. setenabled ( true ) ; if (! ( var_5 ) ) { var_6. setenabled ( var_2 ) ; } if ( var_7 ) { method_2 ( string_1, string_2 ) ; } else { method_2 ( string_3, string_4 ) ; } }

************

************
tgt: void method_1 ( ) { type_1 var_1 = new type_1 ( int_1 , int_1 ) ; type_1 var_2 = new type_1 ( 1 , 0 ) ; type_1 size = new type_1 ( int_2 , int_3 ) ; var_5 = new type_2 ( var_1 , var_2 , size , size , size ) ; }
[0]: public void method_1 ( ) { for ( type_1 var_1 : type_2. values ( ) ) { if ( ( ( var_1!= ( var_2 ) ) && ( var_1!= ( var_3 ) ) ) && ( var_1!= ( var_4 ) ) ) { type_3. assertequals ( var_5. method_2 ( var_1 ), var_6 ) ; } } }

************

************
tgt: protected type_1 method_1 ( java.lang.string name ) throws java.io.ioexception { type_1 index = var_1 . get ( name ) ; if ( index == null ) { synchronized ( var_2 ) { index = var_1 . get ( name ) ; if ( index == null ) { index = method_2 ( name , method_3 ( name ) ) ; if ( method_4 ( ) ) { index . open ( ) ; } method_5 ( index , name ) ; var_1 . put ( name , index ) ; } } } return index ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1, int var_2, int offset, java.util.date var_3, java.util.date var_4, type_3 [ ] var_5, type_4... var_6 ) { return var_7. method_1 ( var_1. method_2 ( ), var_3, var_4, java.util.arrays.aslist ( var_5 ), java.util.arrays.aslist ( var_6 ), var_2, offset ) ; }

************

************
tgt: private boolean method_1 ( int var_1 , int var_2 ) { if ( var_2 <= ( ( var_3 [ 0 ] . length ) - int_1 ) ) { if ( ( ( var_3 [ var_1 ] [ var_2 ] ) == ( var_3 [ var_1 ] [ ( var_2 + 1 ) ] ) ) && ( ( var_3 [ var_1 ] [ var_2 ] ) == ( var_3 [ var_1 ] [ ( var_2 + int_2 ) ] ) ) ) { java.lang.system.out.println ( string_1 ) ; return true ; } } return false ; }
[0]: private double method_1 ( int var_1 ) { double var_2 = method_2 ( ) ; int k = var_1 ; int var_3 = data. length ; return ( type_1. method_3 ( ( var_2 / var_3 ) ) ) + ( ( var_3 - k ) * ( type_1. method_3 ( ( 1.0 - ( var_2 / var_3 ) ) ) ) ) ; }

************

************
tgt: private static java.lang.string method_1 ( type_1 message ) throws java.lang.exception { if ( ( message . method_2 ( ) ) == null ) { return null ; } java.lang.string var_1 = null ; java.lang.string var_2 = message . method_2 ( ) ; int var_3 = var_2 . method_3 ( var_4 ) ; if ( var_3 != ( - 1 ) ) { var_1 = var_2 . substring ( var_3 ) ; } return var_1 ; }
[0]: public void replaceall ( java.util.list < type_1 > var_1 ) { if ( ( var_1 == null ) || ( var_1. isempty ( ) ) ) { return ; } if ( ( var_2 ) == null ) { var_2 = new java.util.arraylist < > ( ) ; } var_2. method_1 ( ) ; var_2. method_2 ( var_1 ) ; method_3 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; type_3 var_3 ; while ( true ) { var_3 = ( ( type_3 ) ( var_2 . method_2 ( ) ) ) ; if ( ( var_3 . getvalue ( ) ) >= ( var_2 . method_3 ( ) . getvalue ( ) ) ) return var_2 ; var_2 . method_4 ( var_4 ) ; var_2 . setstate ( var_3 ) ; } }
[0]: public int method_1 ( ) { int var_1 = type_1. method_2 ( method_3 ( ), method_4 ( ) ) ; java.util.iterator < type_2 > var_2 = this. method_5 ( ). iterator ( ) ; while ( var_2. method_6 ( ) ) { var_1 += var_2. method_7 ( ). method_1 ( ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; java.lang.thread var_2 = new java.lang.thread ( var_1 ) ; var_2 . start ( ) ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; char var_5 = char_1 ; java.lang.system.out.println ( string_1 ) ; var_5 = var_3 . method_2 ( ) . method_3 ( 0 ) ; while ( var_5 != char_2 ) { var_5 = var_3 . method_2 ( ) . method_3 ( 0 ) ; } var_3 . method_4 ( ) ; var_1 . method_5 ( ) ; }
[0]: public java.util.list < type_1 > method_1 ( int var_1, java.util.date var_2, java.util.date var_3 ) throws type_2 { java.util.list < type_1 > var_4 = new java.util.arraylist < > ( ) ; java.util.list < type_1 > var_5 = new java.util.arraylist < > ( ) ; if ( var_6. method_2 ( ). isempty ( ) ) { type_3 var_7 = new type_3 ( var_2, var_3 ) ; var_5 = var_7. method_2 ( var_2, var_3 ) ; } return var_4 ; }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = new type_1 ( ) ; try { var_2 . method_2 ( new type_2 ( java.lang.integer.parseint ( var_1 ) ) ) ; } catch ( type_3 var_3 ) { assertequals ( var_4 class , var_3 . getclass ( ) ) ; } }
[0]: private java.util.list < type_1 > method_1 ( java.lang.string var_1, java.util.list < type_2 > var_2 ) { for ( type_2 var_3 : var_2 ) { if ( var_3. method_2 ( ). equals ( var_1 ) ) return var_3. method_3 ( ) ; } return new java.util.arraylist < type_1 > ( ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { if ( var_1 > 0 ) { type_1 < type_2 > var_2 = state . method_2 ( ) ; if ( var_2 != null ) { long var_3 = var_4 . method_3 ( ( - var_1 ) ) ; if ( var_3 <= ( var_5 ) ) { var_2 . method_4 ( ( ( var_6 ) - ( var_5 ) ) ) ; } } } }
[0]: public void method_1 ( type_1 var_1, int id ) { var_2. method_2 ( var_3 ) ; for ( java.lang.string var_4 : var_3 ) { type_2. method_3 ( ). method_4 ( string_1 ) ; } var_5 = new java.util.arraylist < > ( ) ; var_6. method_5 ( new type_3 ( this, var_7, var_5 ) ) ; method_6 ( ) ; type_4. method_7 ( this, string_2, var_8 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 c = var_2 . method_2 ( int_1 , 0 ) ; var_3 = var_2 . method_3 ( string_1 , var_4 , var_5 ) ; var_3 . method_4 ( this ) ; var_6 = new type_3 ( var_7 , var_7 , var_7 , var_7 ) ; var_1 . add ( var_3 , c ) ; }
[0]: public void method_1 ( int var_1, type_1... var_2 ) throws type_2, type_3 { if (! ( method_2 ( var_2 ) ) ) { throw new type_3 ( ) ; } this. var_1 = var_1 ; method_3 ( ) ; method_4 ( ) ; var_3 = false ; }

************

************
tgt: public type_1 method_1 ( type_2 message , type_3 var_1 ) { if ( ( var_2 ) == ( var_3 ) ) { if ( ( type_6 . method_3 ( ) . var_5 ) == null ) { return null ; } type_4 var_4 = type_5 . method_2 ( type_6 . method_3 ( ) . var_5 ) ; if ( var_4 == null ) { return null ; } else { var_4 . method_4 ( var_7 ) ; } } return null ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2. get ( var_3 ) ) == null ) var_2. put ( var_3, var_1 ) ; else { var_2. get ( var_3 ). remove ( ) ; var_4 -= var_5 ; var_6 -= var_7 ; var_2. put ( var_3, var_1 ) ; } }

************

************
tgt: final synchronized void method_1 ( type_1 var_1 ) { method_2 ( var_2 , var_3 , var_4 ) ; type_2 var_5 = method_3 ( var_1 ) ; this . var_1 . add ( var_5 ) ; var_6 = null ; if ( method_4 ( var_5 ) ) { ( var_7 ) -- ; if ( ( var_8 ) != null ) { var_8 . method_5 ( this , var_7 ) ; } state = var_9 ; var_10 . method_7 ( ) ; method_6 ( ) ; } }
[0]: public void method_1 ( ) { for ( type_1 var_1 : this. var_2 ) { if (! ( this. var_3. method_2 ( var_1. method_3 ( ). getname ( ) ) ) ) { var_1. method_4 ( ( string_1 + ( var_4. info ( var_1. method_3 ( ). getname ( ) ) ) ) ) ; type_2. method_5 ( var_1, var_1. method_6 ( ) ) ; } this. var_2. remove ( var_1 ) ; } }

************

************
tgt: public static java.util.map < java.lang.string , java.lang.string > method_1 ( ) { type_1 . method_2 ( ) ; var_2 = new java.util.hashmap < java.lang.string , java.lang.string > ( ) ; for ( java.util.map.entry < java.lang.string , java.lang.string > var_3 : var_1 . method_3 ( ) ) { var_2 . put ( var_3 . getvalue ( ) , var_3 . method_4 ( ) ) ; } return var_2 ; }
[0]: public type_1 < java.lang.string > method_1 ( type_2 var_1 ) { try { var_2 = method_2 ( var_1, var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_3 ( ) ; } return new type_1 < java.lang.string > ( string_1, var_5 ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.thread var_1 = var_2 . method_2 ( 1 , int_1 ) ; assertnotnull ( var_1 . method_3 ( ) ) ; assertequals ( int_1 , var_1 . method_3 ( ) . method_4 ( ) . intvalue ( ) ) ; assertequals ( int_2 , var_1 . method_3 ( ) . method_5 ( ) . intvalue ( ) ) ; }
[0]: private java.util.list < type_1 > method_1 ( int var_1, int var_2, int length ) { java.util.list < type_1 > nodes = new java.util.arraylist < > ( ) ; int var_3 = method_2 ( ) ; for ( int position = 0 ; position < length ; position ++ ) { int var_4 = var_1 + position ; if ( var_4 > var_3 ) { break ; } type_1 node = var_5 [ var_4 ] [ var_2 ] ; nodes. add ( node ) ; } return nodes ; }

************

************
tgt: public void update ( long var_1 ) { method_1 ( ( ( var_2 ) + ( ( ( ( ( var_3 ) - var_1 ) + ( var_4 ) ) * ( var_5 ) ) / ( var_6 ) ) ) ) ; if ( ( var_1 - ( var_3 ) ) > ( var_7 ) ) { var_8 = var_9 [ int_1 ] ; method_2 ( ) ; } }
[0]: public void method_1 ( ) { int var_1 = ( var_2 ) - ( var_3 ) ; var_4 = float_1 / int_1 ; double var_5 = java.lang.math.pow ( ( 1 + ( var_4 ) ), var_1 ) ; var_6 = ( var_6 ) * var_5 ; var_3 = var_2 ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = var_2 [ 1 ] ; var_2 [ 1 ] = var_2 [ var_3 ] ; var_2 [ var_3 ] = null ; ( var_3 ) -- ; method_2 ( ) ; var_2 = ( ( type_1 [ ] ) ( type_2 . method_3 ( var_2 , ( ( var_3 ) + 1 ) ) ) ) ; return var_1 ; }
[0]: private void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( ) ; java.util.list var_2 = var_1. method_2 ( null, null, null, null, null, null, null ) ; var_1 = ( ( type_2 ) ( var_2. get ( 0 ) ) ) ; { { try { type_3. method_3 ( string_1, ( ( new java.lang.string ( var_1. method_4 ( ), string_2 ) ) + string_3 ) ) ; } catch ( type_4 var_3 ) { var_3. method_5 ( ) ; } } } }

************

************
tgt: private int method_1 ( ) { int x ; java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; while ( true ) { java.lang.system.out.print ( string_1 ) ; x = var_1 . method_2 ( ) ; if ( ( x >= 1 ) & ( x <= int_1 ) ) return x - 1 ; } }
[0]: private static type_1 [ ] method_1 ( java.lang.string [ ] var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < > ( var_1. length ) ; type_1 var_3 = new type_1 ( ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_3. type = var_4 ; var_5 = var_1 [ i ] ; var_2. add ( var_3 ) ; } var_2. add ( var_3 ) ; return var_2. method_2 ( new type_1 [ 0 ] ) ; }

************

************
tgt: public void method_2 ( ) { if ( ( var_2 ) != null ) { var_2 . method_2 ( ) ; var_2 = null ; } if ( ( var_3 ) != null ) { var_3 . method_3 ( ) ; var_3 = null ; } if ( ( var_4 ) != null ) { var_4 . method_4 ( ) ; var_4 = null ; } }
[0]: public double method_1 ( double a ) { if ( a <= float_1 ) { return ( 1 - ( out ( ( 1 - ( a * int_1 ) ) ) ) ) * float_1 ; } return ( ( out ( ( a * int_1 ) - 1 ) ) ) * float_1 ; }

************

************
tgt: private double method_1 ( type_1 t , type_2 c ) { if ( ( t . method_2 ( ) ) > ( ( var_1 ) + 1 ) ) { return ( ( var_1 ) + 1 ) * ( var_2 ) ; } return t . method_1 ( ) ; }
[0]: private void method_1 ( ) { if (! ( var_1. method_2 ( ) ) ) { java.util.map < java.lang.string, java.lang.string > params = new java.util.hashmap < java.lang.string, java.lang.string > ( ) ; final java.lang.string var_2 = string_1 ; final java.lang.string token = string_2 ; java.lang.string var_3 = type_1. getdata ( method_3 ( ), var_4 ) ; params. put ( var_2, var_5 ) ; params. put ( token, var_3 ) ; var_1. method_4 ( params ) ; var_1. method_5 ( false ) ; } }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( ( this ) == var_1 ) { return true ; } if ( ( var_1 == null ) || ( ( getclass ( ) ) != ( var_1 . getclass ( ) ) ) ) { return false ; } type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return var_5 . equals ( var_6 ) ; }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( method_2 ( ) ) ; var_1. method_3 ( type_2. method_4 ( var_2 ) ) ; var_1. method_3 ( type_2. method_4 ( var_3 ) ) ; var_1. method_3 ( type_3. method_4 ( var_4 ) ) ; var_5. method_5 ( var_1 ) ; var_6. method_6 ( var_5 ) ; var_6. method_6 ( var_5 ) ; }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; int var_1 = getintent ( ) . method_2 ( var_2 , ( - 1 ) ) ; if ( var_1 != ( - 1 ) ) method_3 ( new type_1 ( ) . method_4 ( new type_2 ( var_1 ) ) ) ; }
[0]: public type_1 method_1 ( type_2 [ ] var_1 ) { type_1 var_2 = new type_1 ( ) ; var_3 = var_1. length ; var_4 = new java.util.arraylist < type_3 > ( var_1. length ) ; for ( type_2 var_5 : var_1 ) { type_3 var_6 = new type_3 ( ). method_2 ( var_5 ) ; var_4. add ( var_6 ) ; } return var_2 ; }

************

************
tgt: private boolean method_1 ( ) { var_1 = type_1 . method_2 ( ) ; int var_2 = method_3 ( ) ; int var_3 = 0 ; var_3 = method_4 ( var_3 ) ; var_3 = method_5 ( var_3 ) ; var_3 = method_6 ( var_3 ) ; return method_7 ( var_2 , var_3 ) ; }
[0]: public void method_1 ( java.util.list < type_1 > var_1 ) { this. var_2. method_2 ( ) ; this. var_2. method_3 ( var_1 ) ; java.util.collections.sort ( var_2 ) ; var_3 = var_2. get ( 0 ). method_4 ( ) ; var_4 = null ; }

************

************
tgt: public synchronized type_1 method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( ( var_1 != null ) || ( var_2 ) ) { return var_1 ; } if ( ! ( var_3 ) ) { return null ; } var_1 = method_3 ( ) ; assert var_1 != null ; method_4 ( true , var_1 ) ; return var_1 ; }
[0]: private final void method_1 ( type_1 var_1, int offset, int min ) { for ( int i = 0 ; i < ( ( var_2 ) + 1 ) ; i ++ ) { int var_3 = i * offset ; var_1. method_2 ( 0, var_3, min, var_3, var_4 ) ; var_1. method_2 ( var_3, 0, var_3, min, var_4 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int height ) { type_2 . info ( string_1 , type_3 . method_2 ( ) ) ; this . var_1 = var_1 ; init ( var_2 , height ) ; method_3 ( ) ; type_4 . method_4 ( var_3 ) ; method_5 ( var_3 ) ; method_6 ( ) ; }
[0]: public java.util.list < java.lang.string > method_1 ( ) { if (! ( type_1. method_2 ( ) ) ) { java.util.list < java.lang.string > params = new java.util.arraylist < > ( int_1 ) ; for ( type_2 value : type_1. getvalue ( ) ) { params. add ( ( ( ( string_1 + ( type_1. getname ( ) ) ) + string_2 ) + ( type_1. method_3 ( method_4 ( value ) ) ) ) ) ; } return params ; } else { return super. method_1 ( ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string value ) { if ( ( value . length ( ) ) > 0 ) { java.lang.string var_1 = string_1 ; method_2 ( value , var_1 , var_2 ) ; if ( ! ( value . method_3 ( var_1 ) ) ) { var_3 . method_4 ( true ) ; return false ; } if ( ( java.lang.integer . method_5 ( value ) ) >= 0 ) { var_3 . method_4 ( false ) ; return true ; } } return true ; }
[0]: private static int method_1 ( int [ ] array, int k ) { if ( ( array. length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = type_1. method_2 ( 0, k ) ; return array [ i ] ; } } else return - 1 ; } return 0 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_1 . method_2 ( ( ! ( var_1 . method_3 ( ) ) ) ) ; android.content.intent intent = new android.content.intent ( getactivity ( ) , var_2 class ) ; intent . method_4 ( var_3 , var_4 ) ; method_5 ( intent ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( ) ; method_3 ( var_1 ) ; var_3. method_4 ( string_1, string_2 ) ; var_3. method_4 ( string_3, string_4 ) ; var_3. method_4 ( string_5, string_6 ) ; var_3. method_4 ( string_7, var_4 ) ; var_3. method_4 ( string_8, string_9 ) ; method_5 ( var_3 ) ; method_6 ( var_3 ) ; method_7 ( var_1, var_3 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = ( ( java.lang.string ) ( var_1 . method_2 ( var_3 ) ) ) ; android.content.intent var_4 = new android.content.intent ( getactivity ( ) , var_5 class ) ; var_4 . method_3 ( var_6 , var_2 ) ; method_4 ( var_4 ) ; }
[0]: private type_1 method_1 ( type_2 date, type_3 var_1, java.lang.string var_2 ) { java.util.list < type_1 > var_3 = var_4. method_2 ( var_1, var_2 ) ; for ( type_1 var_5 : var_3 ) { if ( ( ( var_5. method_3 ( ) ) == null ) || ( var_5. method_3 ( ). method_4 ( ). method_5 ( date. method_6 ( 1 ) ) ) ) { return var_5 ; } } return null ; }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , var_2 , var_3 ) ; type_1 . method_3 ( var_4 , var_5 ) ; if ( type_2 . method_4 ( var_6 ) ) { var_7 = type_2 . method_5 ( var_6 ) ; } else { var_8 = type_2 . method_6 ( var_6 ) ; } type_2 . method_7 ( ( ( var_7 ) != null ? var_7 : var_8 ) ) ; }
[0]: public static void main ( java.lang.string [ ] args ) throws type_1 { type_2 type_3 = new type_2 ( ) ; java.util.list < java.lang.string > var_1 = type_3. method_1 ( ) ; try { java.lang.string var_2 = type_3. method_2 ( ( ( ( var_3 ) + string_1 ) + string_2 ) ) ; type_3. method_3 ( type_3. method_4 ( var_2 ) ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_5 ( ) ; } }

************

************
tgt: public type_1 < java.util.list < type_2 > > method_1 ( int var_1 ) { java.util.list < type_2 > var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 . isempty ( ) ) { return new type_1 ( var_4 ) ; } return new type_1 ( var_2 , var_6 ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { if ( var_1!= null ) { var_2. method_2 ( ) ; method_3 ( var_1 ) ; var_2. method_4 ( type_2. method_5 ( new type_3 ( var_1. method_6 ( ), var_1. method_7 ( ) ), var_3 ) ) ; } type_3 var_4 = var_2. method_8 ( ). target ; var_5 = var_2. method_9 ( new type_4 ( ). position ( new type_3 ( var_6, var_7 ) ). method_10 ( true ) ) ; }

************

************
tgt: public long method_1 ( type_1 var_1 ) throws java.io.ioexception , type_2 { long var_2 = 0 ; type_3 var_3 = new type_3 ( method_2 ( var_1 ) , type_4 . method_3 ( var_1 ) ) ; for ( java.lang.string var_4 : method_4 ( var_1 ) ) { java.util.map < java.lang.string , type_5 > var_5 = method_5 ( var_1 , var_3 , var_4 ) ; for ( type_5 var_6 : var_5 . values ( ) ) { var_2 += var_6 . method_6 ( ) ; } } return var_2 ; }
[0]: public void method_1 ( int index, type_1 var_1 ) throws type_2 { assert var_1!= null ; type_3 var_2 = var_3. get ( index ) ; if ( (! ( var_2. equals ( var_1 ) ) ) && ( var_3. contains ( var_1 ) ) ) { if (! ( var_1. method_2 ( ). contains ( var_4 ) ) ) { throw new type_2 ( ) ; } } var_2. method_3 ( var_1 ) ; var_3. set ( index, var_2 ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws java.io.ioexception { this . var_2 . method_2 ( new type_1 ( var_3 , null , null , var_1 ) ) ; this . var_2 . method_3 ( ) ; if ( ( this . var_4 . contains ( var_1 ) ) == false ) this . var_4 . add ( var_1 ) ; }
[0]: public boolean method_1 ( type_1 item ) { switch ( item. method_2 ( ) ) { case var_1 : type_2. method_3 ( new type_3 ( ) ) ; method_4 ( ) ; return true ; case var_2 : type_2. method_3 ( new type_4 ( ) ) ; method_4 ( ) ; return true ; } return super. method_1 ( item ) ; }

************

************
tgt: public boolean method_1 ( type_1 x ) { if ( ( ! ( nodes . contains ( x . method_2 ( ) ) ) ) || ( ! ( nodes . contains ( x . method_3 ( ) ) ) ) ) { java.lang.system.out.println ( string_1 ) ; } else { if ( var_1 . remove ( x ) ) { return true ; } } return false ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( method_2 ( var_3 ) ) ) ; var_4. method_3 ( var_2. method_4 ( var_5, null ) ) ; android.widget.button var_6 = ( ( android.widget.button ) ( method_5 ( var_7 ) ) ) ; var_6. method_6 ( this ) ; android.widget.button var_8 = ( ( android.widget.button ) ( method_5 ( var_9 ) ) ) ; var_8. method_6 ( this ) ; method_7 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int var_2 ) { int id = var_1 . method_2 ( "id" ) ; type_2 var_3 = type_3 . method_3 ( var_1 ) ; int var_5 = var_2 + id ; var_6 . put ( var_5 , new type_4 ( var_3 ) ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { type_1 c = new type_1 ( var_2 ) ; c. method_2 ( ( ( c. method_3 ( ) ) + string_1 ) ) ; if ( c. method_4 ( var_3, var_1 ) ) { this. var_3 = var_1 ; method_5 ( ( ( var_3 ) + string_1 ), tostring ( ), false ) ; return true ; } return false ; }

************

************
tgt: public int method_1 ( int x , int y , int var_1 ) { if ( ( ( ( x >= ( var_2 ) ) || ( y >= ( var_2 ) ) ) || ( x < 0 ) ) || ( y < 0 ) ) { throw new type_1 ( ( ( string_1 + ( var_2 ) ) + "\n" ) ) ; } int var_3 = var_1 % ( 1 < < ( var_4 ) ) ; var_5 [ x ] [ y ] = var_3 ; return var_3 ; }
[0]: public boolean method_1 ( ) { if (! ( type_1. method_2 ( date ) ) ) return false ; if ( ( ( ( ( ( this. var_1 ) == 0 ) && ( ( this. var_2 ) == 0 ) ) && ( ( this. var_3 ) == 0 ) ) && ( ( this. var_4 ) == 0 ) ) && ( ( this. var_5 ) == 0 ) ) return false ; if ( ( this. var_1 ) <= 0 ) return false ; return true ; }

************

************
tgt: public static void method_1 ( ) { type_1 . method_2 ( ) ; type_1 . method_3 ( ) ; method_5 ( var_1 , var_2 , string_1 , string_2 ) ; method_5 ( var_1 , var_3 , string_1 ) ; if ( ! ( ( java.lang.boolean ) ( method_5 ( var_4 , var_5 , string_3 ) ) ) ) { method_5 ( var_6 , var_7 ) ; method_5 ( var_8 , var_3 , string_4 , string_5 ) ; } else { method_5 ( var_4 , var_3 , string_3 ) ; } method_4 ( var_4 , var_9 , string_6 ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = method_2 ( var_1 ) ; java.util.list < type_4 > var_3 = var_1. method_3 ( ) ; for ( type_4 var_4 : var_3 ) { type_1 var_5 = method_1 ( var_4 ) ; if ( var_5!= null ) { var_2. method_4 ( var_5 ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . settext ( ( ( ( string_1 + ( ( var_3 . method_2 ( ) ) + var_4 ) ) + string_2 ) + ( java.lang.math.round ( ( ( var_3 . method_3 ( ) ) + var_4 ) ) ) ) ) ; type_2 . method_4 ( method_5 ( ) , string_3 , var_5 ) . show ( ) ; var_6 = ( var_3 . method_2 ( ) ) + var_4 ; if ( ( var_7 ) != 1 ) { var_7 = 1 ; } method_6 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. node = var_1 ; var_2. settext ( node. method_2 ( ) ) ; var_3. settext ( node. method_3 ( ). getvalue ( ) ) ; var_4. settext ( node. method_4 ( ). getvalue ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_2 , ( string_1 + var_1 ) ) ; type_3 event = new type_3 ( method_3 ( ) , var_1 , new java.util.date ( ) ) ; if ( var_3 . method_4 ( event ) ) { var_4 . method_1 ( event ) ; } var_5 = false ; method_5 ( ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_1. method_2 ( ). size ( ) )!= 0 ) { this. var_1 = var_1. method_2 ( ) ; if ( ( var_2 )!= null ) { method_3 ( var_1. method_4 ( var_2. method_5 ( ) ) ) ; } method_6 ( ) ; type_1 var_3 = new type_1 ( ) ; var_3. method_7 ( this. var_1 ) ; method_8 ( var_3 ) ; } } }

************

************
tgt: private void method_1 ( ) { var_1 = ( ( type_1 ) ( method_2 ( ) . method_3 ( var_2 ) ) ) ; var_3 = ( ( type_2 ) ( method_2 ( ) . method_3 ( var_4 ) ) ) ; if ( ( var_5 ) == null ) { android.view.view view = method_4 ( var_6 ) ; if ( view != null ) { view . method_5 ( var_7 ) ; } } }
[0]: public boolean equals ( final java.lang.object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if (! ( obj instanceof type_1 ) ) { return false ; } type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( id )!= ( var_1. id ) ) { return false ; } return true ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( ( var_1 ) != null ) { var_1 . method_2 ( ) ; var_2 = type_1 . method_3 ( ) ; var_3 = ( var_4 . method_4 ( string_1 , 0 ) ) + ( ( var_2 ) - ( var_5 ) ) ; var_4 . method_5 ( string_1 , var_3 ) ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = var_2. getvalue ( ) ; if ( ( method_2 ( ) ) && ( method_3 ( var_1 ) ) ) { try { java.lang.string var_3 = method_4 ( var_1 ) ; if ( method_5 ( var_3 ) ) { var_2. setvalue ( var_3 ) ; var_4. method_6 ( var_5 ) ; var_4. setvalue ( var_3 ) ; } } catch ( java.lang.exception var_6 ) { var_4. method_7 ( ) ; type_1. method_8 ( string_1, var_6 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( long size ) { synchronized ( this ) { sum += size ; } long var_1 = type_1 . method_2 ( ) ; long t = var_1 - ( var_2 ) ; var_2 = var_1 ; if ( t == 0 ) return string_1 ; return java.lang.string.format ( string_2 , ( size / t ) , ( ( sum ) / ( var_1 - ( var_3 ) ) ) , sum ) ; }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2. method_2 ( ) ; this. var_2. add ( var_1, var_3 ) ; this. method_3 ( new type_2 ( this, var_4, string_1 ) ) ; this. method_4 ( null ) ; this. method_5 ( true ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { java.lang.string var_2 = var_3 . method_2 ( ) ; for ( type_2 var_4 : this . var_5 ) { if ( var_4 . getname ( ) . equals ( var_2 ) ) { method_3 ( var_4 . method_4 ( ) ) ; break ; } } method_5 ( this . method_6 ( ) , var_2 ) ; }
[0]: protected java.lang.object method_1 ( type_1 context, type_2 <? > var_1 ) { type_3 < type_4 < java.lang.object, java.lang.object > > var_2 = method_2 ( var_1 ) ; type_1 var_3 = method_3 ( context ) ; if ( var_3. method_4 ( ) ) { return null ; } if ( var_2 == null ) { return null ; } var_2. value ( ). set ( type_5. method_5 ( var_3. method_6 ( ), var_2 ), var_3. getvalue ( ) ) ; return context. getvalue ( ) ; }

************

************
tgt: private static final java.lang.string method_1 ( ) { return ( ( ( ( ( ( ( ( ( string_1 + ( ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) + string_6 ) ) + ( var_1 ) ) + string_7 ) + string_9 ) + string_3 ) + string_10 ) + string_5 ) + string_6 ) + ( var_3 ) ) + string_7 ; }
[0]: public void method_1 ( type_1 < type_2, type_3 > var_1 ) { type_4. method_2 ( var_2, ( ( ( string_1 + ( var_1. method_3 ( ) ) ) + string_2 ) + ( var_1. method_4 ( ) ) ) ) ; method_5 ( ) ; method_6 ( var_1 ) ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , int var_2 ) throws java.lang.exception { java.util.arraylist < java.lang.string [ ] > var_3 = type_1 . method_2 ( ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) + string_3 ) ) ; return var_3 . get ( 0 ) [ 0 ] ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1. method_3 ( ) ). method_4 ( type_2. method_5 ( ) ) ; java.util.list < type_3 > var_2 = var_3. method_6 ( ) ; type_4. assertthat ( var_2, method_7 ( method_5 ( ) ) ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 . method_2 ( ) . method_3 ( ) ; if ( var_1 . method_4 ( ) ) method_5 ( ) ; android.widget.button var_2 = ( ( android.widget.button ) ( method_6 ( var_3 ) ) ) ; var_2 . setenabled ( false ) ; android.content.intent var_4 = new android.content.intent ( this , var_5 class ) ; method_8 ( var_4 ) ; }
[0]: private void method_1 ( java.lang.string var_1, type_1 var_2 ) { type_2 format = new type_2 ( ) ; try { method_2 ( var_1 ) ; format. method_3 ( java.lang.long.parselong ( var_1 ) ) ; var_2. method_4 ( format ) ; } catch ( java.lang.exception var_3 ) { method_5 ( var_4, var_3. method_6 ( ), var_3 ) ; } }

************

************
tgt: private void method_1 ( java.lang.string var_1 , float var_2 , boolean var_3 ) { var_4 . settext ( ( ( ( var_1 + ( var_5 ) ) + var_2 ) + ( var_6 ) ) ) ; if ( var_3 ) { var_4 . settext ( ( ( ( var_2 + ( var_5 ) ) + var_1 ) + ( var_6 ) ) ) ; } }
[0]: public type_1 method_1 ( type_2 message, type_3 var_1 ) { type_4 var_2 = var_3 ; if ( ( var_2!= null ) && ( ( var_2. method_2 ( ) ) instanceof type_5 ) ) { type_6 var_4 = new type_6 ( var_2, 0 ) ; type_7 state = ( ( type_8 ) ( var_2. method_2 ( ) ) ). update ( var_5, var_4, int_1 ) ; type_9. error ( var_4. method_3 ( ) ) ; return new type_10 ( var_4. method_3 ( ) ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { var_1 . get ( i ) . method_2 ( ) . method_3 ( ( i == ( var_2 ) ) ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2. intvalue ( ) ) ) ) ; type_1 var_3 = ( ( type_1 ) ( method_2 ( var_4. intvalue ( ) ) ) ) ; method_3 ( var_3, string_1 ) ; method_3 ( var_1, string_1 ) ; var_5 = 0 ; }

************

************
tgt: public type_1 method_1 ( float value ) { if ( ( var_1 ) == ( var_2 ) ) return method_2 ( new float [ ] { value } , new int [ ] { 1 , 1 } , new int [ ] { 1 , 1 } , 0 ) ; else if ( ( var_1 ) == ( var_3 ) ) return method_1 ( ( ( double ) ( value ) ) ) ; else return method_1 ( ( ( int ) ( value ) ) ) ; }
[0]: public boolean method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; var_2. delete ( var_3, ( ( ( var_4 ) + string_1 ) + var_1 ), null ) ; var_2. delete ( var_5, ( ( ( var_4 ) + string_1 ) + var_1 ), null ) ; return ( var_2. delete ( var_6, ( ( ( var_7 ) + string_1 ) + var_1 ), null ) ) > 0 ; }

************

************
tgt: public boolean equals ( java.lang.object var_1 ) { if ( var_1 instanceof type_1 ) { type_1 var_2 = ( ( type_1 ) ( var_1 ) ) ; return ( var_2 . method_1 ( ) . equals ( this . method_1 ( ) ) ) && ( var_2 . method_2 ( ) . equals ( this . method_2 ( ) ) ) ; } return false ; }
[0]: private void init ( type_1 var_1 ) { type_2 var_2 = var_1. method_1 ( ) ; var_3 = ( ( var_2. method_2 ( ) ) == ( var_4 ) )? var_5 : var_6 ; var_7 = ( ( var_2. method_3 ( ) ) == ( var_4 ) )? var_5 : var_6 ; var_8 = new type_3 < java.lang.string, java.lang.string > ( ) ; var_9 = var_1. method_4 ( ). path ( string_1 ). method_5 ( var_10 class ). method_5 ( var_11 class ) ; }

************

************
tgt: public void method_1 ( type_1 message ) { if ( ( var_1 ) == 1 ) { switch ( var_2 ) { case 1 : var_3 = true ; break ; case int_1 : var_4 = true ; break ; case int_2 : var_5 = true ; break ; } if ( ( ( var_3 ) && ( var_4 ) ) && ( var_5 ) ) { var_6 . method_2 ( ) ; } var_7 . method_3 ( ) ; } }
[0]: public void method_1 ( ) { int var_1 = 0 ; int var_2 ; do { var_2 = 0 ; method_2 ( ) ; var_2 = method_3 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; var_1 = var_3. method_4 ( ) ; if ( var_1 == int_1 ) { method_1 ( ) ; } else if ( var_1!= 1 ) { java.lang.system.out.println ( string_3 ) ; } } while ( var_1!= 1 ) ; type_1. method_5 ( var_2 ) ; java.lang.system.out.println ( string_4 ) ; } }

************

************
tgt: public boolean method_1 ( android.view.view var_1 , type_1 event ) { switch ( event . method_2 ( ) ) { case var_2 : break ; case var_5 : type_2 var_6 = ( ( type_2 ) ( var_1 ) ) ; method_4 ( ( ( java.lang.string ) ( var_6 . method_3 ( ) ) ) ) ; var_4 = false ; break ; } return true ; }
[0]: private void method_1 ( int var_1, java.lang.string var_2, java.lang.string var_3, java.lang.string title, boolean var_4, int var_5, int rows, int var_6 ) { type_1 var_7 = new type_1 ( var_1, var_2, var_3, title, var_4, var_5, rows, var_8. method_2 ( ). getvalue ( ), var_6 ) ; var_7. method_3 ( ) ; method_4 ( ) ; }

************

************
tgt: public static int method_1 ( boolean var_2 , java.lang.string text ) { int var_1 = - 1 ; if ( var_2 ) { java.lang.string var_3 = text ; if ( ( ! ( var_3 . isempty ( ) ) ) && ( type_1 . method_2 ( string_1 , var_3 ) ) ) { var_1 = java.lang.integer.parseint ( text ) ; } else { type_2 . method_3 ( ( string_2 + string_3 ) ) ; } } return var_1 ; }
[0]: public java.lang.string method_1 ( int var_1 ) { if ( ( ( var_2 ) == null ) || (! ( var_2. method_2 ( var_1 ) ) ) ) { type_1. method_3 ( var_3, string_1 ) ; } int var_4 = var_2. method_4 ( var_5 ) ; java.lang.string var_6 = var_2. getstring ( var_4 ) ; return var_6 ; }

************

************
tgt: public void method_1 ( ) { this . var_1 . method_2 ( ) ; method_3 ( this . var_2 . method_4 ( ) ) ; this . var_3 . method_5 ( ) ; method_3 ( this . var_2 . method_4 ( ) ) ; this . var_4 . method_6 ( ) ; method_3 ( this . var_2 . method_4 ( ) ) ; method_3 ( this . var_2 . method_9 ( ) ) ; method_3 ( this . var_1 . method_10 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_1. method_2 ( ). equals ( var_2. method_3 ( ) ) ) { this. var_3 = var_1. method_4 ( ) ; this. var_4. settext ( var_3 ) ; var_5. method_5 ( false ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( java.lang.string var_1 ) { type_3 < type_2 > handle = new type_3 < type_2 > ( method_2 ( ) ) ; java.util.map < java.lang.string , java.lang.string > var_2 = new java.util.hashmap < > ( ) ; var_2 . put ( string_1 , var_3 ) ; var_2 . put ( "name" , var_1 ) ; method_3 ( var_2 , var_4 , handle ) ; return handle ; }
[0]: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; type_1 var_1 = new type_1 ( ) ; type_1 var_2 = new type_1 ( ) ; type_2 var_3 = new type_2 ( string_2, string_2, string_2, int_1 ) ; var_3. method_2 ( var_1 ) ; var_3. method_2 ( var_2 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { try { new type_1 ( ) . method_1 ( ) ; } catch ( java.lang.exception var_1 ) { type_2 . method_2 ( var_2 , var_1 . tostring ( ) , var_1 ) ; } if ( ( args.length ) == 1 ) { type_3 . method_3 ( args [ 0 ] ) ; } else { type_3 . method_4 ( ) ; } }
[0]: private static boolean method_1 ( char c ) { return ( ( ( c >= char_1 ) && ( c <= char_2 ) ) || ( ( c >= char_3 ) && ( c >= char_4 ) ) ) || ( ( c >= char_5 ) && ( c >= char_6 ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( string_1 , string_2 ) ; type_2 var_2 = new type_2 ( string_3 , string_4 ) ; var_1 . remove ( var_2 ) ; type_2 [ ] var_3 = var_1 . method_2 ( ) ; if ( ( var_3 . length ) != 0 ) { fail ( string_5 ) ; } }
[0]: public type_1 method_1 ( type_1 var_1, java.util.list < java.lang.integer > var_2 ) { type_2 var_3 = var_4. method_2 ( ) ; type_3 var_5 = new type_4 ( ) ; boolean var_6 = var_3. method_3 ( ) ; if (! var_6 ) var_3. method_4 ( ) ; var_1. method_5 ( var_5. method_6 ( var_2 ) ) ; var_4. method_7 ( var_1 ) ; if (! var_6 ) var_3. commit ( ) ; return var_1 ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string var_3 ) throws type_2 { try { var_1 . method_2 ( ) ; type_3 var_4 = var_1 . method_3 ( ) . var_5 . method_4 ( method_5 ( var_3 ) , var_2 ) ; return var_4 != null ? method_6 ( var_4 . id ) : null ; } catch ( java.lang.exception var_6 ) { throw new type_2 ( method_7 ( ( string_1 + var_2 ) , ( string_2 + var_3 ) ) , var_6 ) ; } finally { var_1 . method_8 ( ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = type_3. method_2 ( var_3 class ) ; type_3. method_3 ( var_3 class ). method_4 ( ). method_5 ( var_2 ) ; var_1. method_6 ( ) ; type_3. method_7 ( var_3 class ). method_4 ( ) ; }

************

************
tgt: private void init ( android.content.context context ) { android.view.view var_1 = method_1 ( context , var_2 , this ) ; var_3 = ( ( type_1 ) ( var_1 . method_2 ( var_4 ) ) ) ; var_5 = ( ( type_2 ) ( var_1 . method_2 ( var_6 ) ) ) ; }
[0]: public void method_1 ( type_1 var_1, int id ) { java.lang.string var_2 = var_3. gettext ( ). tostring ( ) ; type_2 var_4 = new type_2 ( var_2, 0 ) ; var_5. set ( i, var_4 ) ; var_6. method_2 ( var_4. getid ( ), var_4 ) ; a. method_3 ( ) ; }

************

************
tgt: protected java.lang.string method_1 ( final type_1 var_1 ) { final type_2 var_3 = var_1 . method_2 ( ) ; if ( var_3 instanceof type_3 ) { final java.lang.string var_4 = ( ( type_3 ) ( var_3 ) ) . method_1 ( ) ; boolean var_5 = var_4 . isempty ( ) ; boolean var_6 = ! var_5 ; if ( var_6 ) { return var_4 ; } } return null ; }
[0]: public int method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( ( count. get ( var_1 ). equals ( count. get ( var_2 ) ) ) && ( ( count. get ( var_1 ) )!= null ) ) { return var_3. get ( var_1 ). compareto ( var_3. get ( var_2 ) ) ; } else { return count. get ( var_1 ). compareto ( count. get ( var_2 ) ) ; } }

************

************
tgt: public static type_1 method_1 ( java.util.list < java.lang.string > key ) throws type_2 { if ( ( key . size ( ) ) < int_1 ) { throw new type_2 ( ( ( string_1 + ( key . size ( ) ) ) + string_2 ) ) ; } return new type_1 ( key . get ( 0 ) , key . get ( 1 ) , key . get ( int_2 ) ) ; }
[0]: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 ; var_1 = new java.util.arraylist < type_1 > ( ) ; type_1 var_2 ; var_2 = new type_2 ( var_3 ) ; var_2. method_2 ( string_1 ) ; var_1. add ( var_2 ) ; var_3. method_3 ( var_1 ) ; assertequals ( var_3. method_4 ( string_1 ), var_2 ) ; }

************

************
tgt: public void method_1 ( ) throws type_1 { if ( ( var_1 ) != null ) { if ( var_2 . method_2 ( ) ) { var_2 . method_3 ( ( ( string_1 + ( var_1 ) ) + string_2 ) ) ; } if ( ( var_3 ) != null ) { var_3 . method_4 ( var_1 ) ; } else { var_1 . method_1 ( ) ; } var_1 = null ; } }
[0]: private static void method_1 ( java.lang.string var_1 ) { try { var_2. method_2 ( ). method_3 ( var_3, var_4, var_5 ) ; asserttrue ( false ) ; } catch ( type_2 var_6 ) { assertequals ( var_6. method_4 ( ). method_5 ( ), int_1 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.string var_2 ) { if ( var_3 . method_2 ( ) ) { var_2 = null ; } if ( ( var_3 . method_3 ( ) ) == false ) { var_2 = null ; } java.lang.string [ ] list = var_4 . method_4 ( var_2 , var_1 ) ; if ( list != null ) { for ( java.lang.string var_5 : list ) { var_4 . method_5 ( var_2 , var_1 , var_5 ) ; } } }
[0]: private void method_1 ( ) { final android.view.view var_1 = method_2 ( ). method_3 ( ) ; var_1. method_4 ( var_2. method_5 ( ) ) ; var_1. method_6 ( var_2. method_7 ( ) ) ; var_3. method_8 ( ). method_9 ( ) ; var_4 = var_5. method_10 ( ) ; var_6 = var_5. method_11 ( ) ; var_7 = var_5. method_12 ( ) ; }

************

************
tgt: public type_1 method_1 ( int var_1 , int var_2 , int var_3 ) { if ( var_3 == 1 ) { type_2 var_4 = new type_2 ( ) ; return var_4 . method_2 ( var_1 , var_2 ) ; } else { type_3 var_5 = new type_3 ( ) ; return var_5 . method_2 ( var_1 , var_2 ) ; } }
[0]: public type_1 method_1 ( type_2 parameters ) { return type_3. method_2 ( parameters. getint ( string_1 ), parameters. getint ( string_2 ), ( ( ( parameters. getint ( string_3 ) ) * ( parameters. getint ( string_1 ) ) ) / int_1 ), parameters. getint ( string_4 ), parameters. getint ( string_5 ), parameters. getint ( string_6 ), parameters. getboolean ( string_7 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_1 . method_2 ( this . file . method_3 ( ) ) ; type_2 . assertnotnull ( var_1 ) ; type_2 . assertnotnull ( var_1 . method_4 ( ) ) ; type_2 . assertequals ( this . file . method_3 ( ) . tostring ( ) , var_1 . tostring ( ) ) ; try ( java.io.inputstream var_2 = var_1 . method_5 ( ) ) { type_2 . assertnotnull ( var_2 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string str = var_2. gettext ( ) ; var_3. settext ( str ) ; var_2. settext ( string_1 ) ; try { var_4. method_2 ( str ) ; var_4. method_3 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_4 ( ) ; } }

************

************
tgt: public void handle ( type_1 var_1 ) { int x = ( ( int ) ( var_1 . method_1 ( ) ) ) / ( var_2 ) ; int y = ( ( int ) ( ( var_1 . method_2 ( ) ) - int_1 ) ) / ( var_2 ) ; if ( ! ( var_3 ) ) { method_3 ( x , y , var_4 ) ; } }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 step = new type_1 ( ) ; double [ ] array = new double [ int_1 ] ; int count = 0 ; while ( count!= int_2 ) { array [ count ] = int_3 * count ; count ++ ; } double var_1 = step. method_2 ( array ) ; asserttrue ( ( ( var_1 == float_1 ) || ( var_1 == int_4 ) ) ) ; }

************

************
tgt: public boolean remove ( type_1 var_1 ) { boolean var_2 = false ; if ( var_1 instanceof type_2 ) { type_2 var_3 = ( ( type_2 ) ( var_1 ) ) ; java.io.file file = new java.io.file ( var_3 . method_1 ( ) ) ; var_2 = file . delete ( ) ; if ( ! var_2 ) { type_3 . method_2 ( var_4 , java.lang.string.format ( string_1 , var_3 . method_1 ( ) ) ) ; } } else { type_3 . method_2 ( var_4 , string_2 ) ; } return var_2 ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_2 ( string_1, var_1. method_3 ( ). method_4 ( ) ) ; type_2 var_3 = var_1. method_5 ( ) ; if ( ( var_3!= null ) && (! ( ( ( var_3. method_6 ( ) ) == ( var_4 ) ) || ( ( var_3. method_6 ( ) ) == ( var_5 ) ) ) ) ) { method_7 ( var_3 ) ; throw new type_3 ( ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string text = "\n" + ( ( ( string_1 + string_2 ) + string_3 ) + string_4 ) ; type_1 . assertequals ( new type_2 ( type_3 . method_2 ( ( string_5 + ( string_6 + string_7 ) ) ) ) , type_4 . method_3 ( text ) ) ; }
[0]: private void method_1 ( ) { var_1 = method_2 ( ) ; for ( java.lang.string var_2 : var_3 ) { boolean var_4 = false ; for ( java.lang.string var_5 : var_6 ) { if ( var_2. method_3 ( var_5 ) ) { var_4 = true ; } if (! var_4 ) { var_1. add ( var_2 ) ; } } } }

************

************
tgt: private type_1 method_1 ( java.util.arraylist < type_1 > list ) { type_2 var_1 = new type_2 ( list ) ; switch ( var_2 ) { case 1 : return var_1 . method_2 ( ) ; case int_1 : return var_1 . method_3 ( ) ; default : return null ; } }
[0]: private double method_1 ( java.util.arraylist < java.lang.double > array ) { double var_1 = method_2 ( array ) ; double var_2 = 0 ; double length = array. size ( ) ; for ( double i : array ) { double var_3 = java.lang.math.pow ( ( i - var_1 ), int_1 ) ; var_2 += var_3 ; } double var_4 = var_2 / length ; return type_1. method_3 ( var_4 ) ; }

************

************
tgt: public boolean method_1 ( final type_1 var_1 ) { final type_2 attribute = var_1 . method_2 ( var_4 ) ; if ( ( attribute != null ) && ( var_5 . equals ( attribute . method_4 ( ) ) ) ) { var_6 . add ( var_1 ) ; } return true ; }
[0]: public void method_1 ( ) { if ( method_2 ( ) ) { if ( method_3 ( method_4 ( ) ) ) { if (! ( var_1 ) ) this. var_2. method_5 ( method_4 ( ), false ) ; method_6 ( ) ; } else method_7 ( ) ; } method_8 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; var_1 . method_3 ( string_2 , this . method_4 ( ) . method_5 ( ) ) ; var_1 . method_3 ( string_3 , this . method_4 ( ) . method_6 ( ) ) ; var_1 . method_3 ( string_4 , this . method_4 ( ) . method_7 ( ) ) ; }
[0]: public type_1 method_1 ( java.lang.string filename, java.lang.string var_1, boolean var_2 ) { type_1 [ ] var_3 = this. method_2 ( var_1 ) ; for ( type_1 var_4 : var_3 ) { java.lang.string file = var_5. replaceall ( ( var_1 + string_1 ), string_2 ) ; if ( var_2 ) file = file. replaceall ( string_3, string_2 ) ; if ( file. equals ( filename ) ) return var_4 ; } return null ; }

************

************
tgt: public static void method_1 ( ) { type_1 file = var_1 . method_2 ( string_1 ) ; if ( file . method_3 ( ) ) { java.lang.system.out.println ( string_2 ) ; var_2 = var_3 . method_4 ( var_1 . method_2 ( string_1 ) ) ; } else { var_2 = var_3 . method_4 ( var_1 . method_5 ( string_3 ) ) ; var_2 . method_7 ( ) ; var_2 . method_6 ( var_4 ) ; } }
[0]: public void method_1 ( ) { final type_1 < java.lang.integer > field = type_2. method_2 ( var_1 class ). method_3 ( string_1 ). method_4 ( int. class ). method_5 ( ( - 1 ) ) ; assertequals ( ( - 1 ), ( ( int ) ( field. get ( ) ) ) ) ; field. set ( 0 ) ; assertequals ( ( - 1 ), ( ( int ) ( field. get ( ) ) ) ) ; }

************

************
tgt: public static void method_1 ( java.lang.string arg , java.util.list < java.lang.string > list ) { if ( ( list . method_2 ( arg ) ) == ( - 1 ) ) { var_1 . method_3 ( string_1 , arg ) ; } else { var_1 . method_3 ( string_2 , arg , list . method_2 ( arg ) ) ; } }
[0]: public int method_1 ( ) { int var_1 = 0 ; for ( int i = ( this. var_2. length ) - 1 ; i >= ( ( this. var_2. length ) / int_1 ) ; i ++ ) { if ( this. var_2 [ i ]. method_2 ( ) ) break ; else var_1 ++ ; } return var_1 ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { final java.lang.string var_2 = var_1 . getstring ( "id" ) ; type_2 var_3 = new type_2 ( var_4 , var_2 , var_5 ) { public void method_2 ( ) throws type_3 { type_4 var_6 = var_7 . get ( var_2 ) ; var_6 . method_1 ( ) ; var_8 . method_3 ( ) ; } } ; var_8 . method_4 ( var_3 ) ; }
[0]: public int method_1 ( android.content.intent intent, int var_1, int var_2 ) { android.content.context var_3 = this ; type_1. method_2 ( var_3, null ) ; java.lang.string var_4 = intent. method_3 ( string_1 ) ; new type_2 ( method_4 ( ), var_4 ). start ( ) ; return super. method_1 ( intent, var_1, var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 , boolean var_3 , boolean var_4 , boolean var_5 ) { this . var_1 = var_1 ; var_6 = ( ( type_2 ) ( var_1 ) ) ; var_6 . method_2 ( var_7 , var_8 ) ; method_3 ( ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; method_7 ( var_4 , var_5 ) ; method_8 ( var_3 ) ; method_10 ( var_2 ) ; method_11 ( ) ; method_12 ( ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_1. method_2 ( var_4 ) ) ) ; java.lang.string var_5 = var_3. method_3 ( ) ; if ( ( method_4 ( var_6, var_7, var_1, var_2 ) )!= null ) { var_8. info ( string_1, var_6 ) ; var_9. method_5 ( new type_4 ( ( string_2 + string_3 ), var_5, true ) ) ; return ; } throw new type_5 ( ) ; }

************

************
tgt: private void method_1 ( int var_1 ) { int var_2 = var_3 . method_2 ( ) ; if ( ( var_3 . method_3 ( ) ) && ( var_1 >= ( ( var_4 ) - var_2 ) ) ) { ( var_5 ) ++ ; method_4 ( false ) ; method_5 ( ( string_1 + ( var_5 ) ) ) ; method_6 ( var_7 , var_6 , var_8 ) ; } }
[0]: public boolean method_1 ( type_1 var_1, final java.lang.object var_2 ) { final java.lang.string var_3 = ( ( java.lang.string ) ( var_2 ) ) ; try { type_2. method_2 ( var_3 ) ; var_4 = false ; return true ; } catch ( type_3 var_5 ) { type_4. method_3 ( var_5, string_1, var_3 ) ; type_5. method_4 ( method_5 ( ), var_6, var_7 ). show ( ) ; return false ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) { if ( ( type_1 . method_2 ( ) ) != ( type_1 . method_3 ( ) ) ) { var_2 . method_4 ( ( ) - > { synchronized ( this ) { if ( ( var_1 ) != null ) { var_1 . method_5 ( ) ; } } } ) ; } else { var_1 . method_5 ( ) ; } } }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { type_1 var_2 = var_1 ; var_1 = null ; try { var_2. method_2 ( var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4. method_3 ( ) ; } var_2. method_4 ( ) ; } }

************

************
tgt: public static java.util.set < java.lang.string > method_1 ( final java.util.list < type_1 > var_1 ) { java.util.set < java.lang.string > var_2 = new java.util.hashset < > ( ) ; for ( final type_1 var_3 : var_1 ) { if ( ( ( var_3 . method_2 ( ) ) != null ) && ( ! ( var_3 . method_2 ( ) . isempty ( ) ) ) ) { var_2 . add ( var_3 . method_2 ( ) ) ; } } return var_2 ; }
[0]: public void method_1 ( android.view.view var_1 ) { android.content.intent intent = new android.content.intent ( var_2, var_3 class ) ; intent. method_2 ( string_1, var_4 [ var_5 ] ) ; intent. method_3 ( var_6 ) ; if ( ( var_7 ) >= int_1 ) { intent. method_3 ( var_8 ) ; } ( ( type_1 ) ( var_2 ) ). method_4 ( intent, 0 ) ; }

************

************
tgt: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; if ( ( var_2 . method_2 ( ) ) != null ) { for ( type_1 c : var_2 . method_2 ( ) ) { var_1 . add ( c . method_3 ( ) ) ; } } return var_1 ; }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) throws type_3 { type_1 id = new type_1 ( ) ; if ( method_2 ( ) ) return null ; try { type_4. method_3 ( id, var_2 ) ; } catch ( java.lang.exception var_3 ) { throw new type_5 ( var_3, ( ( string_1 + var_2 ) + string_2 ) ) ; } method_4 ( id, var_1, false ) ; return id ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_2 ( ) ; var_1 . method_5 ( method_6 ( ) ) ; var_1 . start ( ) ; type_3 var_2 = var_1 . method_7 ( ) ; java.lang.string result = var_2 . method_8 ( string_1 , string_2 , string_3 , string_4 , var_3 . string class ) ; type_4 . assertequals ( string_5 , result ) ; }
[0]: public void method_1 ( type_1 src, java.lang.string var_1, java.util.list < type_2 > var_2 ) { if ( var_3. method_2 ( ) ) var_3. method_3 ( java.lang.string.format ( string_1, src. getname ( ), var_2. size ( ), var_1 ) ) ; method_4 ( var_2 ) ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 var_2 ) { for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { var_2 . method_2 ( ( ( ( ( string_1 + ( ( var_4 ) - 1 ) ) + string_2 ) + ( ( var_4 ) - 1 ) ) + string_3 ) , var_3 . get ( i ) . id ) ; } ( var_1 . state ) ++ ; var_5 = 0 ; var_6 = 0 ; }
[0]: public static boolean method_1 ( java.lang.string var_1 ) throws java.io.ioexception { if ( ( type_1. isempty ( ) ) || ( type_2. isempty ( ) ) ) type_3. method_2 ( ) ; if ( type_2. contains ( var_1 ) ) return true ; return false ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , java.lang.string var_2 ) { if ( var_3 . isempty ( ) ) { return null ; } final type_3 key = new type_3 ( var_1 , var_2 ) ; final type_1 var_4 = var_3 . remove ( key ) ; if ( var_5 . method_2 ( ) ) { var_5 . info ( string_1 , var_1 , var_2 , var_3 . size ( ) ) ; } return var_4 ; }
[0]: private java.lang.string method_1 ( int var_1 ) { type_1 var_2 = var_3. get ( var_1 ) ; type_2 var_4 = new type_2 ( ) ; try { var_4 = ( ( type_2 ) ( var_5. method_2 ( var_2, var_6 class ) ) ) ; } catch ( java.lang.classnotfoundexception | type_3 | type_4 var_7 ) { method_3 ( var_7 ) ; } return var_4. gettext ( ) ; }

************

************
tgt: private java.util.collection method_1 ( type_2 var_1 , java.lang.string var_2 ) { for ( java.util.collection var_3 : var_1 . method_2 ( ) ) { java.lang.string var_4 = var_3 . method_3 ( ) ; if ( ( var_4 != null ) && ( var_2 . equals ( var_4 ) ) ) { return var_3 ; } } return null ; }
[0]: protected byte [ ] method_1 ( long var_1 ) throws java.io.ioexception { int var_2 = method_2 ( var_1 ) ; if ( var_2 < 0 ) return null ; type_1 var_3 = null ; if ( ( var_4 )!= null ) { var_3 = var_5 ; } if ( ( var_2 > 0 ) && ( var_3!= null ) ) { type_2 var_6 = var_3. method_3 ( var_2 ) ; if ( var_6!= null ) { return var_6. method_4 ( var_7 ) ; } } return null ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > var_1 = new java.util.arraylist < > ( ) ; if ( this . var_1 . isempty ( ) ) { return var_1 ; } for ( java.lang.string var_2 : this . var_1 . split ( string_1 ) ) { long id = java.lang.long.parselong ( var_2 ) ; type_1 var_3 = var_4 . method_2 ( id ) ; var_1 . add ( var_3 ) ; } return var_1 ; }
[0]: private static void method_1 ( double var_1, double var_2, boolean var_3 ) { if ( ( var_4 ) == ( var_5 ) ) { type_1. method_2 ( var_3 ) ; } else if ( ( var_4 ) == ( var_6 ) ) { type_1. method_3 ( var_1, var_2, var_3 ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { java.util.map var_1 = new java.util.map ( string_1 ) ; java.util.map var_2 = new java.util.map ( string_2 ) ; type_1 var_3 = new type_1 ( var_1 ) ; type_1 var_4 = new type_1 ( var_2 ) ; var_3 . method_1 ( ) ; var_4 . method_1 ( ) ; java.lang.system.out.println ( var_3 . method_2 ( ) ) ; java.lang.system.out.println ( var_4 . method_2 ( ) ) ; }
[0]: public java.util.arraylist < type_1 > method_1 ( type_2 p ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( method_2 ( ). size ( ) ) ; i ++ ) { if ( ( method_2 ( ). get ( i ). method_3 ( ) ) == p ) { var_1. add ( method_2 ( ). get ( i ) ) ; } } return var_1 ; }

************

************
tgt: public int method_1 ( ) throws type_1 { try { java.lang.string var_1 = ( null != ( method_2 ( ) ) ) ? method_2 ( ) . getstring ( ) : string_1 ; var_2 = null ; var_3 . method_3 ( ) . method_4 ( var_1 ) ; } catch ( java.io.ioexception | type_2 var_4 ) { throw new type_1 ( var_4 ) ; } return var_5 ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string filename, java.lang.string var_2 ) throws type_1 { try ( type_2 var_3 = method_2 ( ) ) { try ( type_3 var_4 = type_4. method_3 ( var_3, var_1, filename, var_2 ) ) { var_4. method_4 ( ) ; } } catch ( type_5 var_5 ) { throw var_6. method_5 ( string_1, var_5 ) ; } } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( getactivity ( ) ) ; type_4 var_3 = getactivity ( ) . method_2 ( ) ; android.view.view view = var_3 . method_3 ( var_5 , null ) ; var_2 . method_4 ( view ) ; return var_2 . method_5 ( ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { final java.util.calendar c = java.util.calendar.getinstance ( ) ; int var_2 = c. get ( var_3 ) ; int var_4 = c. get ( var_5 ) ; var_6 = string_1 ; return new type_3 ( getactivity ( ), this, var_2, var_4, type_4. method_2 ( getactivity ( ) ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { java.util.list < type_1 > list = var_4 . method_1 ( var_1 ) ; java.util.collections.sort ( list , new type_3 < type_1 > ( ) { public int method_5 ( type_1 var_5 , type_1 var_6 ) { return ( var_6 . method_6 ( ) . gettime ( ) ) > ( var_5 . method_6 ( ) . gettime ( ) ) ? 1 : - 1 ; } } ) ; return list ; }
[0]: public int method_1 ( final java.lang.string filename ) { for ( int var_1 = 0 ; var_1 < ( var_2 ) ; var_1 ++ ) { if ( var_3 [ var_1 ]. method_2 ( ). method_3 ( ). contains ( filename ) ) return var_1 ; } return - 1 ; }

************

************
tgt: protected int method_1 ( type_1 var_1 , int position , type_2 var_2 , type_3 state ) { int var_3 ; if ( var_2 == ( var_4 ) ) { var_3 = 0 ; } else { var_3 = var_5 . method_2 ( ) ; } state . method_3 ( position ) ; var_5 . method_1 ( var_1 . view , var_3 ) ; return var_3 ; }
[0]: public void update ( ) { if ( ( ( state ) == ( var_1 ) ) && ( ( ( var_2 ) == null ) || ( var_2. method_1 ( ) ) ) ) { var_3. add ( new type_1 ( var_4, var_4. method_2 ( ) ) ) ; } super. update ( ) ; }

************

************
tgt: public static int method_1 ( java.lang.string [ ] args ) throws type_1 , java.lang.nullpointerexception { type_2 var_1 = new type_2 ( args ) ; java.lang.long var_2 = java.lang.long . method_2 ( type_3 . method_3 ( string_1 ) ) ; type_4 x = new type_4 ( var_2 , var_1 ) ; type_5 . method_4 ( x ) ; x = null ; var_2 = null ; var_1 = null ; return 0 ; }
[0]: private void method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( var_1!= null ) { type_2 var_2 = type_2. method_3 ( ) ; if ( var_2. method_4 ( var_1. method_5 ( ) ) ) { type_3 handle = var_2. method_6 ( var_1. method_5 ( ) ) ; if ( handle!= null ) { handle. method_7 ( this ) ; var_3. method_8 ( handle ) ; } else { var_3. method_8 ( null ) ; } } } }

************

************
tgt: public void method_1 ( long var_1 , java.lang.string var_2 , java.lang.string var_3 , java.util.list < type_1 > result , type_2 type , java.lang.string var_4 ) { type_3 var_5 = new type_3 ( var_2 , var_3 , result , type , var_4 ) ; java.lang.string var_6 ; try { var_6 = var_7 . method_2 ( var_5 ) ; var_8 . method_3 ( var_5 ) ; synchronized ( var_9 ) { var_9 . method_4 ( ( var_6 + "\n" ) ) ; } } catch ( java.io.ioexception var_10 ) { type_4 . error ( string_1 , var_10 ) ; } }
[0]: public void method_1 ( java.lang.string context ) { java.util.set < java.lang.string > var_1 = var_2. get ( context ) ; if ( var_1!= null ) { for ( java.lang.string var_3 : var_1 ) { java.util.set < type_1 > var_4 = var_5. remove ( var_3 ) ; for ( type_1 var_6 : var_4 ) { method_2 ( var_6 ) ; } } var_2. remove ( context ) ; } } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 , type_3 var_2 , java.lang.string var_3 , java.lang.string var_4 , java.lang.string id ) { final int var_5 = var_1 . method_2 ( ) . update ( new type_4 ( ) . method_3 ( var_3 ) . method_4 ( ( var_4 + string_1 ) ) . method_5 ( id ) . build ( ) , var_2 ) ; return var_5 > 0 ? type_1 . method_7 ( var_5 , var_3 ) : method_8 ( var_1 , var_2 , var_3 ) ; }
[0]: public void method_1 ( ) { type_1. assertthat ( type_2. method_2 ( ( ( ( var_1 ) - ( ( ( ( 1 * int_1 ) * int_2 ) * int_3 ) * int_3 ) ) + 1 ), var_1, false, getcontext ( ) ), type_3. method_3 ( method_4 ( var_3, int_4 ) ) ) ; }

************

************
tgt: synchronized void method_1 ( type_1 var_1 , java.lang.object var_2 , java.util.set < type_2 > var_3 , type_3 var_4 ) { type_4 var_5 = var_6 . get ( var_2 ) ; if ( var_5 == null ) { var_5 = new type_4 ( var_1 , var_2 , var_4 ) ; var_6 . put ( var_2 , var_5 ) ; } var_5 . method_2 ( var_3 ) ; }
[0]: public java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > output = new java.util.hashset < > ( ) ; for ( type_1 f : var_1 ) if (! ( f. method_2 ( ) ) ) output. add ( f ) ; return output ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { type_1 . method_3 ( var_2 , string_1 , var_3 ) . show ( ) ; return ; } android.content.intent intent = new android.content.intent ( getcontext ( ) , var_4 class ) ; method_7 ( intent ) ; }
[0]: public void method_1 ( type_1 event ) { boolean var_1 = type_2. method_2 ( ). method_3 ( ) ; if (! var_1 ) { java.lang.string var_2 = type_2. method_2 ( ). method_4 ( ). var_3 ; if ( var_2. contains ( string_1 ) ) { var_4 = true ; java.lang.system.out.println ( string_2 ) ; } } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 . method_1 ( ( ) - > { try { type_2 . method_2 ( new type_3 ( ) ) ; type_4 . method_3 ( true ) ; } catch ( type_5 var_1 ) { var_1 . method_4 ( ) ; } type_6 var_2 = new type_6 ( ) ; type_7 . method_5 ( var_2 ) ; var_2 . method_6 ( true ) ; } ) ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( null == var_1 ) { type_2. method_3 ( ) ; if ( method_4 ( ). method_5 ( ) ) { type_3 var_2 = new type_3 ( ) ; var_2. method_6 ( ( string_1 + ( method_4 ( ). method_7 ( ) ) ) ) ; var_1 = new type_4 ( var_2 ) ; } else { var_1 = new type_4 ( ) ; } } method_8 ( var_1 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( type_2 . method_2 ( this , var_2 ) ) != ( var_3 ) ) && ( ( type_2 . method_2 ( this , var_4 ) ) != ( var_3 ) ) ) { type_2 . method_3 ( this , new java.lang.string [ ] { var_5 } , var_6 ) ; } else { method_4 ( ) ; } }
[0]: public long method_1 ( java.util.hashset < java.lang.string > var_1, java.util.hashset < java.lang.string > var_2 ) { long var_3 = 0 ; for ( java.lang.string var_4 : var_1 ) var_3 ^= var_5. get ( var_4 ) ; for ( java.lang.string var_6 : var_1 ) var_3 ^= var_7. get ( var_6 ) ; return var_3 ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.system.out.println ( string_2 ) ; var_1 = var_2 . method_2 ( ) ; var_3 = var_2 . method_3 ( ) ; var_4 = var_2 . method_4 ( ) ; var_5 . height = var_2 . method_5 ( ) ; type_1 . method_6 ( var_5 , type_2 . get ( var_6 ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = type_2. method_2 ( string_1, var_3. method_3 ( ) ) ; if ( ( var_2!= null ) && ( ( var_2. trim ( ). length ( ) ) > 0 ) ) { var_3. method_4 ( var_2 ) ; type_3. method_5 ( ). method_6 ( var_4, var_2 ) ; type_4. method_7 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 data ) { if ( ( ( var_1 ) == null ) && ( ( var_2 ) != null ) ) { for ( type_2 var_3 : data . method_2 ( ) ) { if ( var_3 . getid ( ) . equals ( var_2 ) ) { this . var_1 = var_3 ; } } } return ( ( data . method_3 ( ) ) != null ) || ( ( data . method_4 ( ) ) != null ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. append ( string_1 ) ; android.content.intent i = new android.content.intent ( ) ; i. method_2 ( this. getstring ( var_3 ), var_4. method_3 ( ). method_4 ( ) ) ; this. method_5 ( var_5, i ) ; this. method_6 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ! ( var_2 . method_2 ( ) ) ) { method_3 ( true ) ; if ( ( var_3 . method_4 ( ) ) != ( var_4 ) ) { type_1 . method_5 ( var_3 ) ; type_1 . method_5 ( var_5 ) ; } } else { method_3 ( false ) ; } }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; type_2 var_3 = var_1 ; type_2 var_4 = new type_2 ( ) ; while ( var_3. method_2 ( var_4 ) ) { var_2. add ( var_5. method_3 ( var_4 ) ) ; var_3 = var_3. method_4 ( ( ( int ) ( ( ( java.lang.math.random ( ) ) * int_1 ) * ( var_6 ) ) ) ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { this . method_1 ( ( ( type_2 ) ( var_1 ) ) ) ; } else if ( var_1 instanceof type_3 ) { this . method_1 ( ( ( type_3 ) ( var_1 ) ) ) ; } else { var_1 . method_1 ( this ) ; } }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_1 result = new type_1 ( ) ; try { type_2 var_2 = var_3. method_2 ( var_1 ) ; result. method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { type_3. error ( var_4. method_4 ( ), var_4 ) ; result. error ( var_4 ) ; } return result ; }

************

************
tgt: public void method_1 ( ) { java.util.list < java.lang.double > var_1 = type_1 . method_2 ( ) ; for ( int i = 0 ; i < ( ( var_2 . method_3 ( ) ) * int_1 ) ; i ++ ) { var_1 . add ( method_4 ( var_2 , ( i / float_1 ) ) ) ; } method_5 ( var_1 , var_3 , var_3 ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.lang.string name, java.lang.string value ) { final type_3 var_3 = new type_3 ( name, value ) ; if ( null == ( var_1. method_2 ( ) ) ) { var_3. method_3 ( string_1 ) ; } else { var_3. method_3 ( var_1. method_2 ( ) ) ; } var_3. method_4 ( java.lang.integer.parseint ( var_4. method_5 ( var_5 ) ) ) ; this. method_1 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( getactivity ( ) . method_2 ( var_3 ) ) ) ; method_3 ( string_1 ) ; int var_4 = var_5 ; var_6 = new type_3 ( getactivity ( ) , var_4 , var_7 ) ; var_2 . method_4 ( var_6 ) ; }
[0]: protected void method_1 ( type_1 keys ) { super. method_1 ( keys ) ; type_2 context = type_3. getcontext ( ) ; android.content.intent var_1 = new android.content.intent ( context, var_2 class ) ; var_1. method_2 ( string_1, method_3 ( ) ) ; var_1. method_2 ( string_2, keys ) ; context. method_4 ( var_1 ) ; }

************

************
tgt: public void method_1 ( int var_1 , int id ) { switch ( var_1 ) { case 0 : var_2 = string_1 ; break ; case 1 : var_2 = string_2 ; break ; case int_1 : var_2 = string_5 ; break ; case int_2 : var_2 = string_4 ; break ; case int_3 : var_2 = string_3 ; break ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.object item, android.view.view view, int position ) { type_2. method_2 ( string_1, string_2 ) ; var_2. method_3 ( var_3. method_4 ( ). get ( var_4 ). method_5 ( ), var_5. get ( position ). method_6 ( ) ) ; var_1. method_7 ( ) ; }

************

************
tgt: private void method_1 ( int var_1 , int var_2 ) { if ( ( ( method_2 ( ) . var_3 ) == null ) || ( ( ( method_2 ( ) . var_3 . length ) - 1 ) < var_1 ) ) return ; int [ ] var_4 = method_2 ( ) . var_3 [ var_1 ] ; for ( int var_5 = 0 ; var_5 < ( var_4 . length ) ; var_5 ++ ) { if ( ( var_4 [ var_5 ] ) == var_2 ) { method_3 ( var_5 ) ; break ; } } }
[0]: public void method_1 ( java.lang.string pattern ) { type_1 temp = var_1 ; while ( ( ( temp. getvalue ( ) )!= pattern ) && ( temp!= ( var_2 ) ) ) { temp = temp. method_2 ( ) ; if ( ( temp. getvalue ( ) ) == pattern ) { var_2 = temp ; } else { java.lang.system.out.println ( ( ( string_1 + pattern ) + string_2 ) ) ; } } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.string path = ( ( ( ( ( type_1 . method_2 ( ) ) + ( var_3 ) ) + var_1 ) + string_1 ) + ( var_2 . trim ( ) ) ) + string_2 ; type_2 . info ( ( string_3 + path ) ) ; return path ; }
[0]: public void method_1 ( int var_1 ) { type_1 var_2 = var_3. get ( var_1 ) ; var_3. remove ( var_1 ) ; var_4 = var_3. size ( ) ; var_6. get ( var_7 ). method_2 ( var_2, ( ( var_7 ) - ( var_5 ) ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { try { java.lang.string var_2 = var_1 . getstring ( string_1 ) ; if ( var_2 . isempty ( ) ) { return method_2 ( var_1 ) ; } else { return method_3 ( var_1 ) ; } } catch ( java.lang.exception var_3 ) { return new type_1 ( ) ; } }
[0]: public static int method_1 ( type_1 var_1, java.lang.string path ) { if ( ( var_2 ) == null ) { var_2 = type_2. method_2 ( var_3 class, string_1, new java.lang.class [ ] { var_4. string class } ) ; } if ( ( var_2 ) == null ) return 0 ; int var_5 = type_2. method_3 ( var_2, var_1, path ) ; return var_5 ; }

************

************
tgt: private void method_1 ( type_1 var_1 , boolean var_2 ) { type_2 var_3 = type_2 . get ( var_4 ) ; if ( var_2 ) { method_5 ( var_3 ) ; } method_2 ( var_3 , 1 ) ; var_5 . method_3 ( var_1 . method_4 ( ) , var_1 . height ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( true ) ; if ( method_3 ( ). method_4 ( var_2 ) ) { method_5 ( method_3 ( ). getstring ( var_2 ) ) ; type_2 var_3 = this. getactivity ( ) ; } else { method_5 ( getactivity ( ). getintent ( ). method_6 ( var_2 ) ) ; } }

************

************
tgt: public static boolean method_1 ( type_1 var_1 ) { if ( var_2 . contains ( var_1 ) ) { return true ; } else { for ( type_2 var_3 : var_1 . method_2 ( ) . method_3 ( var_4 ) . method_4 ( var_1 ) . method_5 ( ) ) { if ( var_3 . getid ( ) . method_6 ( var_5 ) ) { return true ; } } } return false ; }
[0]: private boolean method_1 ( type_1 array ) { type_2 var_1 = array [ 0 ] ; try { if ( ( var_1. method_2 ( string_1 ). getboolean ( string_2 ) ) == false ) { return false ; } } catch ( java.lang.exception var_2 ) { return true ; } return false ; }

************

************
tgt: protected type_1 method_1 ( java.lang.string ... params ) { type_1 var_1 = new type_1 ( ) ; var_1 = type_2 . method_2 ( var_2 . method_3 ( ) , var_2 . method_4 ( ) , var_3 . method_5 ( ) . method_6 ( ) . method_3 ( ) , var_3 . method_5 ( ) . method_6 ( ) . method_4 ( ) , params [ 0 ] ) ; try { java.lang.thread . method_7 ( int_1 ) ; } catch ( type_3 var_4 ) { var_4 . method_8 ( ) ; } return var_1 ; }
[0]: public int compareto ( type_1 var_1 ) { if ( ( this. var_2 ) > ( var_1. method_1 ( ) ) ) return 1 ; if ( ( this. var_2 ) < ( var_1. method_1 ( ) ) ) return - 1 ; return 0 ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 ) { if ( ( var_2 ) != null ) { for ( type_1 f : var_2 ) { try { if ( type_2 . method_2 ( f . method_3 ( ) . method_4 ( ) , var_1 . method_3 ( ) . method_4 ( ) ) ) return f ; } catch ( java.io.ioexception var_3 ) { } } } return null ; }
[0]: private java.lang.string method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = var_1. method_3 ( var_1. method_4 ( new type_3 ( ), true ) ) ; return java.lang.string. method_5 ( var_3. method_6 ( ) ) ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; switch ( var_1 ) { case 1 : if ( var_2 == ( var_3 ) ) { int var_4 = data . method_2 ( var_5 , 0 ) ; if ( var_4 != 0 ) { long var_6 = data . method_3 ( var_7 , 0 ) ; if ( var_6 != 0 ) method_4 ( var_8 . method_5 ( var_6 ) ) ; } } } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = var_1. method_2 ( ) ; var_3. method_3 ( true ) ; type_4. method_4 ( false, ( ( var_3. method_5 ( ) ) + 1 ), int_1, var_3, var_2, var_1 ) ; var_3. method_6 ( int_2 ) ; }

************

************
tgt: public void method_1 ( java.lang.object var_1 ) { if ( var_1 == null ) return ; var_2 = var_1 ; if ( ! ( var_3 . getvalue ( ) . equals ( var_1 ) ) ) this . var_3 . setvalue ( var_1 ) ; method_2 ( ) ; }
[0]: protected void method_1 ( int x ) { var_1 = true ; var_2 = x ; if ( x < ( this. method_2 ( ) ) ) { var_3 = false ; var_4 = true ; var_5 = false ; } else if ( x > ( this. method_2 ( ) ) ) { var_3 = true ; var_4 = false ; var_5 = true ; } }

************

************
tgt: public static int method_1 ( final java.lang.string str ) { int var_1 = - int_1 ; final byte [ ] var_2 = str . method_2 ( var_3 ) ; for ( final byte b : var_2 ) { { var_1 = var_1 ^ b ; var_1 = var_1 * int_2 ; } } return var_1 ; }
[0]: public void method_1 ( float var_1 ) { if ( var_2. method_2 ( ) ) { var_3. method_3 ( new type_1 ( ( ( type_2 ) ( var_3 ) ) ) ) ; method_4 ( ) ; } var_4. method_5 ( 0, 0, 0, 1 ) ; var_4. method_6 ( var_5 ) ; var_6. method_7 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( x , y ) ; if ( var_1 == null ) return ; var_2 . method_3 ( x , y ) ; type_1 var_3 = var_4 [ var_5 ] . item ; if ( var_3 == null ) return ; method_4 ( null , var_5 ) ; var_2 . method_4 ( var_3 , x , y ) ; method_4 ( var_1 , var_5 ) ; }
[0]: public static void method_1 ( ) { type_1. method_2 ( ) ; if ( type_1. method_3 ( ) ) { ( ( type_2 ) ( type_1. method_4 ( ). method_5 ( ) ) ). method_6 ( ) ; } else { ( ( type_3 ) ( type_1. method_4 ( ). method_5 ( ) ) ). method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 view , int var_1 , int var_2 , int var_3 ) { var_2 = var_2 + 1 ; var_4 = ( ( ( ( java.lang.integer.tostring ( var_3 ) ) + string_1 ) + ( java.lang.integer.tostring ( var_2 ) ) ) + string_1 ) + ( java.lang.integer.tostring ( var_1 ) ) ; }
[0]: public java.lang.string method_1 ( final type_1 var_1 ) { if ( var_1 == null ) return string_1 ; if ( var_2. equals ( var_1. method_2 ( ) ) ) return var_3 ; final java.lang.string name = var_4. get ( var_1. method_2 ( ) ) ; if ( name!= null ) return name ; final type_2 var_5 = method_3 ( var_1. method_2 ( ) ) ; if ( var_5!= null ) return var_5. field ( name ) ; return string_2 + ( var_1. method_2 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < java.lang.string > var_1 = new java.util.arraylist < java.lang.string > ( ) ; try { var_1 = var_2 . method_2 ( var_3 , var_3 , var_4 ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_3 ( ) ; } var_6 . method_4 ( var_1 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if (! ( var_2 ) ) { var_2 = true ; type_1 var_3 = type_2. get ( show. gettext ( ). tostring ( ) ) ; show. settext ( var_3. tostring ( ) ) ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { int var_3 = var_1 . method_2 ( ) ; int var_4 = var_2 . method_2 ( ) ; if ( var_3 == var_4 ) return 0 ; else if ( var_3 > var_4 ) return - 1 ; return 1 ; }
[0]: public final type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4. method_2 ( var_1, string_1 ) ; return type_1. method_3 ( new type_5 < type_2 > ( this, type_6. method_4 ( ), type_6. method_4 ( ), var_2, var_1, var_3, type_6. method_4 ( ), var_4, var_3 ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { if ( ( this . var_1 ) == null ) { this . var_1 = new type_2 ( ) . method_2 ( var_2 class ) . method_3 ( var_3 . method_4 ( this . method_5 ( ) ) ) . method_6 ( var_4 , true ) . method_8 ( ) ; } return var_1 ; }
[0]: public void method_1 ( ) { android.content.intent intent = new android.content.intent ( method_2 ( ), var_1 class ) ; intent. method_3 ( string_1, var_2 ) ; intent. method_3 ( string_2, 1 ) ; intent. method_3 ( string_3, this. method_4 ( ) ) ; method_5 ( intent ) ; this. method_6 ( ) ; }

************

************
tgt: public void method_1 ( type_1 key , type_1 value , type_2 context ) throws java.io.ioexception , type_3 { java.lang.string [ ] var_1 = value . tostring ( ) . split ( string_1 ) ; java.lang.string [ ] var_2 = var_1 [ 0 ] . split ( string_2 ) ; if ( ( java.lang.integer.parseint ( var_2 [ int_1 ] ) ) == 0 ) { title . set ( string_3 ) ; var_3 . set ( java.lang.double . method_2 ( var_2 [ 0 ] ) ) ; context . method_3 ( key , var_3 ) ; } }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; type_3 var_2 = new type_3 ( var_1 ) ; var_1. method_3 ( this. var_3 ) ; var_1. method_3 ( this. var_4 ) ; var_1. method_3 ( new type_4 ( float_1, int_1 ) ) ; var_2. method_4 ( this. var_5 ) ; }

************

************
tgt: public < type_1 > type_2 < java.util.list < type_1 > > method_1 ( final java.lang.string var_1 , final java.lang.class var_2 ) { assert var_1 != null ; assert ! ( var_1 . isempty ( ) ) ; assert var_2 != null ; if ( var_3 . method_2 ( var_1 ) ) return new type_2 ( ( ( java.util.list < type_1 > ) ( method_3 ( var_1 , var_2 ) ) ) ) ; else return var_4 ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; for ( int i = 1 ; i < ( var_3. length ) ; i ++ ) { if ( var_1. equals ( var_3 [ i ] ) ) { var_2 = true ; break ; } } return var_2 ; }

************

************
tgt: public static int method_1 ( int var_1 , int size ) { int var_2 = 0 ; while ( type_1 . method_2 ( var_1 , size ) ) { var_2 = var_1 ++ ; if ( ( ( var_1 % int_1 ) ^ ( size + 1 ) ) == 1 ) { var_2 = 1 ; } } return var_2 ; }
[0]: private static boolean method_1 ( type_1 var_1, boolean var_2, type_2 < java.lang.void > var_3 ) { if ( ( var_3. method_2 ( ). method_3 ( ) )!= ( var_4 ) ) { var_1. method_4 ( ) ; } else if (! ( var_3. method_2 ( ). method_5 ( string_1 ) ) ) { var_2 = true ; } return var_2 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_4 ( var_4 ) ) ) ; var_5 = new type_3 ( method_5 ( ) ) ; var_3 . method_6 ( var_5 ) ; }
[0]: public void method_1 ( ) { java.lang.integer var_1 = ( ( var_2 ) * int_1 ) + ( var_3 ) ; java.lang.integer var_4 = 0 ; if ( ( var_5 )!= null ) { var_4 = ( var_6 ) + ( var_5 [ var_1 ]. var_7 ) ; } java.lang.boolean var_8 = var_9 [ var_1 ]. method_2 ( var_4, var_10 ) ; var_11. method_3 ( ) ; if ( var_8 ) { method_4 ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( type_1 . method_3 ( ) ) ; int var_2 = var_1 . method_4 ( ) ; int var_3 = var_2 % int_1 ; type_1 var_4 = var_1 . method_5 ( ( int_2 - var_3 ) ) ; type_3 var_5 = type_3 . method_6 ( var_6 . method_7 ( var_7 ) ) ; assertequals ( var_4 , var_5 . method_8 ( var_1 ) . get ( ) ) ; }
[0]: public void method_1 ( ) { if ( method_2 ( ) ) { if ( method_3 ( ) ) { var_1. method_4 ( this, method_5 ( ) ) ; } else { var_1. method_1 ( this, var_2 ) ; var_3 = true ; var_4. method_1 ( this, var_5 ) ; } } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 ) ; if ( ! ( var_3 . method_3 ( ) ) ) { var_3 . method_1 ( var_1 ) ; } for ( type_2 var_4 : var_5 ) { var_4 . method_1 ( var_1 ) ; } for ( type_3 p : var_6 ) { if ( p . method_4 ( ) ) { p . method_1 ( var_1 ) ; } } }
[0]: public int method_1 ( type_1 var_1 ) { int result = 0 ; if ( var_2. method_2 ( method_3 ( ). method_4 ( var_1 ) ) ) { for ( type_2 var_3 : var_2. get ( method_3 ( ). method_4 ( var_1 ) ) ) { if ( var_3. method_5 ( ). equals ( var_1 ) ) { result ++ ; } } } return result ; }

************

************
tgt: private int method_1 ( double [ ] var_1 ) { double var_2 = var_1 [ 0 ] ; int var_3 = 0 ; for ( int i = 1 ; i < ( var_1 . length ) ; i ++ ) { if ( ( var_1 [ i ] ) > 0 ) { if ( ( java.lang.double . method_2 ( var_1 [ i ] , var_2 ) ) < 0 ) { var_2 = var_1 [ i ] ; var_3 = i ; } } } return var_3 ; }
[0]: public static void method_1 ( java.lang.object var_1, type_1 method, java.lang.object... args ) { try { if ( method == null ) return ; method. method_2 ( var_1, args ) ; } catch ( type_2 | type_3 var_2 ) { var_2. method_3 ( ) ; } }

************

************
tgt: public void get ( java.lang.string key , java.lang.string var_1 , type_1 var_2 ) { type_2 var_3 = method_1 ( var_1 ) ; java.lang.object value = var_3 . method_2 ( ) . get ( key ) ; if ( value != null ) { var_2 . method_3 ( value . tostring ( ) ) ; } else { var_2 . method_3 ( ) ; } }
[0]: public void init ( ) { var_1 = var_2. method_1 ( ) ; var_3 = var_4. method_1 ( ) ; var_5 = var_6. method_1 ( ) ; var_7 = var_3. get ( 0 ). getid ( ) ; var_8 = var_5. get ( 0 ). getid ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( ) ; var_1 . info ( ( string_1 + ( var_3 . method_3 ( ) ) ) ) ; try { type_2 . method_4 ( var_1 , var_3 . method_3 ( ) ) ; } catch ( java.io.ioexception var_4 ) { throw new type_4 ( var_4 ) ; } }
[0]: public boolean method_1 ( java.lang.string item ) { boolean var_1 = false ; java.lang.string name = item ; for ( int num = 0 ; num < int_1 ; num ++ ) { if ( var_2 [ num ] [ 0 ]. equals ( name ) ) { var_1 = true ; } } return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { for ( int position : var_2 . method_2 ( ) ) { var_3 . remove ( position ) ; var_5 . method_3 ( var_2 . get ( position ) ) ; } var_2 . method_5 ( ) ; var_4 . method_5 ( ) ; var_6 . method_4 ( ) ; method_6 ( var_7 ) . method_7 ( var_8 ) ; method_6 ( var_9 ) . method_7 ( var_8 ) ; }
[0]: public int method_1 ( int var_1, int var_2 ) { if ( var_2 > int_1 ) { var_2 = int_1 ; } if ( var_1 <= var_2 ) return 1 ; return ( ( int ) ( type_1. method_2 ( ( ( ( double ) ( var_1 ) ) / ( var_2 - int_2 ) ) ) ) ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > list = new java.util.linkedlist < > ( ) ; java.util.list < type_2 > var_1 = method_2 ( ) ; for ( type_2 var_2 : var_1 ) { list . add ( new type_1 ( var_2 ) ) ; } return list ; }
[0]: public < type_1 > type_1 query ( java.lang.class < type_1 > var_1 ) { java.lang.object var_2 = type_2. method_1 ( var_1, var_3 ) ; if ( var_2 == null ) { if ( var_4. method_2 ( var_1 ) ) return type_2. method_3 ( var_1, var_4. get ( var_1 ) ) ; var_2 = var_5. method_4 ( var_3 ) ; var_4. put ( var_1, var_2 ) ; } return type_2. method_3 ( var_1, var_2 ) ; }

************

************
tgt: public static boolean method_1 ( boolean var_1 ) { if ( ( ( var_2 ) != null ) && ( ( type_1 . method_2 ( ) . var_3 ) != null ) ) { var_2 . set ( var_4 , var_1 ) ; type_1 . method_3 ( ) ; type_2 . method_4 ( type_3 . method_5 ( ) ) . method_6 ( ) . method_7 ( var_5 , var_1 ) . commit ( ) ; return true ; } return false ; }
[0]: public static java.lang.string method_1 ( java.lang.object obj, type_1 var_1 ) { if ( ( ( type_2 ) ( var_1 ) ). method_2 ( ) ) { return type_3. method_3 ( var_2. method_4 ( ( ( type_4 ) ( obj ) ) ) ) ; } else { return type_3. method_3 ( var_3. method_4 ( ( ( type_4 ) ( obj ) ) ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , byte [ ] var_2 , boolean var_3 ) { type_1 . method_2 ( var_4 , ( string_1 + ( new java.lang.string ( var_2 ) ) ) ) ; java.lang.string message = new java.lang.string ( var_2 ) ; var_5 = new type_2 ( ) ; var_5 . method_3 ( java.lang.long.parselong ( message . split ( string_2 ) [ 0 ] ) ) ; var_5 . method_4 ( java.lang.integer.parseint ( message . split ( string_2 ) [ 1 ] ) ) ; new type_3 ( ) . execute ( var_5 ) ; }
[0]: public static boolean contains ( java.lang.string target, java.lang.string [ ] var_1, boolean var_2 ) { for ( java.lang.string var_3 : var_1 ) { if ( var_2? target. equals ( var_3 ) : target. contains ( var_3 ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_1 . method_2 ( ) ; type_3 var_3 = ( ( type_3 ) ( var_2 . method_3 ( type_4 . method_4 ( string_1 ) ) ) ) ; double x = var_1 . method_7 ( ) ; double y = var_1 . method_8 ( ) ; method_5 ( var_3 . method_6 ( ) , x , y ) ; var_1 . method_9 ( ) ; }
[0]: public java.io.inputstream method_1 ( type_1 path ) throws type_2 { java.lang.string filepath = method_2 ( path. tostring ( ) ) ; method_3 ( path ) ; type_3 var_1 = method_4 ( path ) ; type_4 method = new type_4 ( filepath ) ; try { var_1. method_5 ( method ) ; java.io.inputstream var_2 = method. method_6 ( ) ; return var_2 ; } catch ( java.io.ioexception var_3 ) { throw new type_2 ( var_4. getname ( ), ( string_1 + filepath ), var_3 ) ; } }

************

************
tgt: private void method_1 ( final type_1 msg ) { if ( msg instanceof type_2 ) { type_2 var_1 = ( ( type_2 ) ( msg ) ) ; var_1 . method_2 ( method_3 ( ) ) ; if ( ( parameters ) != null ) { parameters = var_1 . method_4 ( parameters ) ; var_2 = var_1 . method_5 ( ) ; } } else { if ( ( ! ( var_3 ) ) && ( msg != null ) ) { msg . method_6 ( ) ; } this . message = msg ; } }
[0]: public type_1 method_1 ( final int offset, final int length ) throws type_2 { final int var_1 = offset - ( this. length ( ) ) ; if ( var_1 >= 0 ) return array. method_1 ( var_1, length ) ; final int var_2 = var_1 + length ; if ( var_2 <= 0 ) return super. method_1 ( offset, length ) ; return super. method_1 ( offset, ( - var_1 ) ). method_2 ( array. method_1 ( 0, var_1 ) ) ; }

************

************
tgt: public final synchronized type_1 method_1 ( final type_2 var_1 , final type_3 var_2 , final int target , final long offset , final long length , final int var_3 , final type_4 var_4 , final long var_5 ) throws type_5 { return this . method_2 ( var_1 , var_2 , target , true , offset , length , var_3 , var_4 , var_5 ) ; }
[0]: public static int [ ] method_1 ( java.lang.string var_1 ) { java.lang.string [ ] var_2 = var_1. trim ( ). split ( string_1 ) ; int [ ] var_3 = new int [ var_2. length ] ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) { var_3 [ i ] = java.lang.integer.parseint ( var_2 [ i ] ) ; } return var_3 ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( this . counter ) ; i ++ ) { var_1 . add ( this . var_2 . get ( i ) ) ; } return var_1 ; }
[0]: private void method_1 ( ) { java.util.list < type_1 > var_1 = var_2. method_2 ( ) ; if ( var_1. isempty ( ) ) { method_3 ( string_1, string_2 ) ; } else if ( var_1. get ( 0 ). method_4 ( ). isempty ( ) ) { method_3 ( string_1, string_3 ) ; } else { final type_1 var_3 = var_1. get ( 0 ) ; var_2. method_5 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ( var_2 . method_2 ( ) ) == ( var_3 ) ) { var_2 . method_3 ( var_4 ) ; var_2 . method_4 ( var_6 ) ; } else { var_2 . method_3 ( var_7 ) ; var_2 . method_4 ( var_8 ) ; } }
[0]: private static synchronized void method_1 ( ) { int select = ( var_1. method_2 ( 1 ) ) % ( var_2. length ) ; int var_3 = ( var_2 [ select ] ) - ( ( int ) ( ( type_1. method_3 ( ) ) - ( var_4 ) ) ) ; if ( var_3 > 0 ) { try { java.lang.thread. method_1 ( var_3 ) ; } catch ( type_2 var_5 ) { } } } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_1 ) ; var_2 = type_2 . method_3 ( this , var_3 ) ; var_2 . method_4 ( var_4 ) ; method_5 ( ) ; method_6 ( ) ; method_8 ( getintent ( ) ) ; method_9 ( ) . method_10 ( var_5 , null , this ) ; }
[0]: private void method_1 ( type_1 var_1 ) { var_1. method_2 ( var_2 ) ; int x = var_3 ; int y = ( method_3 ( ) ) - ( var_4 ) ; for ( int b : var_5 ) { int height = ( ( int ) ( method_4 ( b ) ) ) ; y -= height ; x += var_6 ; var_1. method_5 ( x, y, var_6, height, true ) ; y = ( method_3 ( ) ) - ( var_4 ) ; } }

************

************
tgt: public boolean method_1 ( type_1 item ) { boolean status ; switch ( item . method_2 ( ) ) { case var_1 : method_3 ( new android.content.intent ( this , var_2 class ) ) ; status = true ; break ; case var_3 : status = true ; break ; case var_4 : this . method_4 ( null ) ; status = true ; break ; default : return super . method_1 ( item ) ; } return status ; }
[0]: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; method_3 ( int_1 ) ; method_4 ( ) ; type_1. assertequals ( ( string_1 + ( ( ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) + string_6 ) + string_7 ) ), output. method_5 ( ) ) ; }

************

************
tgt: protected void method_1 ( java.lang.string var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_2 ) != null ) { type_1 msg = var_2 . method_2 ( var_3 , filename ) ; var_2 . method_3 ( msg ) ; } if ( ! ( var_4 ) ) { var_5 . method_4 ( var_1 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( type_2 parameters ) throws type_3 { type_4 var_1 = method_2 ( string_1 ). add ( type_5. method_3 ( var_2, var_3 ) ) ; if ( method_4 ( parameters, var_4 class ) ) { parameters. method_5 ( var_1, var_4 class ) ; } var_1 = parameters. method_6 ( string_1, var_1 ) ; parameters. method_7 ( var_1 ) ; return ( ( java.util.list < type_1 > ) ( var_1. list ( ) ) ) ; }

************

************
tgt: private type_1 method_1 ( int var_1 , type_2 var_2 ) { double var_3 = var_2 . method_2 ( ) ; type_3 var_5 = var_2 . method_4 ( ) ; java.lang.string var_4 = var_2 . getname ( ) ; double var_6 = ( var_5 . method_5 ( ) ) + ( var_5 . method_6 ( ) ) ; double var_7 = ( var_5 . method_7 ( ) ) + ( var_5 . method_8 ( ) ) ; return new type_1 ( var_1 , var_4 , var_3 , var_7 , var_6 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { boolean [ ] var_2 = new boolean [ ] { true, true, true } ; boolean [ ] var_3 = new boolean [ ] { false, false, false } ; method_2 ( var_1, var_2, var_3 ) ; }

************

************
tgt: public static synchronized type_1 method_1 ( android.content.context context ) { if ( ( var_1 ) == null ) { type_2 var_2 = ( ( type_2 ) ( context . method_2 ( var_3 ) ) ) ; type_3 var_4 = context . method_3 ( ) ; var_1 = new type_1 ( context , var_2 , type_1 . method_4 ( context , var_4 ) , type_1 . method_5 ( context , var_4 ) ) ; } return var_1 ; }
[0]: protected static type_1 method_1 ( type_2 b ) { type_1 buffer = type_3. getview ( b ) ; if ( buffer!= null ) { return buffer ; } else { java.lang.string var_1 = string_1 ; throw type_4. method_2 ( java.lang.string.format ( var_1, b. gettype ( ). method_3 ( ) ) ) ; } }

************

************
tgt: protected void method_1 ( type_1 param ) throws java.lang.throwable { type_3 var_2 = ( ( type_3 ) ( param . args [ 0 ] ) ) ; if ( var_2 != null ) method_3 ( var_2 ) ; type_2 var_1 = ( ( type_2 ) ( param . args [ 1 ] ) ) ; if ( var_1 != null ) method_2 ( var_1 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { switch ( var_1. tolowercase ( ) ) { case string_1 : return ( this. var_2. method_2 ( ) ) > 0 ; case string_2 : return ( this. var_2. method_2 ( ) ) < int_1 ; case string_3 : return ( this. var_2. method_3 ( ) ) < int_1 ; case string_4 : return ( this. var_2. method_3 ( ) ) > 0 ; default : return false ; } }

************

************
tgt: public type_1 method_1 ( type_2 var ) { try { type_3 id = var_1 . get ( var ) ; if ( id == null ) return null ; return id . method_2 ( ) ; } catch ( java.lang.exception var_2 ) { type_4 . method_5 ( this , java.lang.string.format ( string_1 , var ) , var_2 ) ; return null ; } }
[0]: public type_1 method_1 ( ) throws java.io.ioexception { if ( ( type ) == ( var_1 ) ) type = var_2 ; assert ( type )!= ( var_3 ) ; for ( type_1 var_4 = var_5. method_1 ( ) ; var_4!= null ; var_4 = var_5. method_1 ( ) ) { if ( ( var_4. method_2 ( ) ) > ( var_6 ) ) continue ; if ( ( type ) == ( var_7 ) ) { } } return null ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string var_2 , type_2 var_3 ) { method_2 ( var_1 , var_2 , var_3 ) ; var_4 . info ( string_1 , new java.lang.object [ ] { var_1 . method_3 ( ) , var_2 , var_5 , var_6 } ) ; throw new type_3 ( var_5 , var_6 ) ; }
[0]: private void method_1 ( int count ) { var_1 = count ; var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { type_1 var_3 = new type_1 ( i ) ; var_2. add ( var_3 ) ; } var_2. add ( var_3 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 data ) { data . method_2 ( var_2 ) ; type_3 var_3 = type_4 . method_3 ( ) . method_4 ( var_1 , data ) ; android.content.intent intent = new android.content.intent ( var_5 ) ; intent . method_7 ( var_6 , var_3 ) ; type_6 . method_3 ( var_7 ) . method_8 ( intent ) ; }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) + ( var_5 ) ) + string_4 ) + ( var_6 ) ) + string_5 ) + ( var_7 ) ) + string_6 ) + ( var_8 ) ) + string_7 ) + ( var_9 ) ) + string_8 ; var_1. method_2 ( var_2 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { int var_2 = var_3 . method_2 ( ) ; int var_4 = var_3 . method_3 ( ) ; java.util.calendar var_5 = java.util.calendar.getinstance ( ) ; var_5 . set ( var_6 , var_2 ) ; var_5 . set ( var_7 , var_4 ) ; var_5 . set ( var_9 , 0 ) ; var_10 . method_4 ( true ) ; var_11 . method_5 ( ) ; var_12 . method_6 ( var_13 , var_5 . method_7 ( ) , var_14 ) ; }
[0]: public boolean method_1 ( long id ) { if (! ( var_1. method_2 ( ) ) ) { type_1. i ( var_2, string_1 ) ; return false ; } android.content.intent intent = new android.content.intent ( context, var_3 class ) ; type_2 var_4 = type_2. method_3 ( context, ( ( ( int ) ( id ) ) * int_1 ), intent, var_5 ) ; type_3. method_4 ( var_1, var_4 ). method_5 ( this ) ; return true ; }

************

************
tgt: public static type_1 method_1 ( type_2 element ) { type_3 var_1 = null ; try { while ( ( var_1 = element . method_2 ( ) ) == null ) element = element . method_3 ( ) ; if ( var_1 instanceof type_1 ) return ( ( type_1 ) ( var_1 ) ) ; } catch ( type_4 var_2 ) { type_5 . method_4 ( string_1 , var_2 ) ; } return null ; }
[0]: public java.util.date method_1 ( ) { if ( ( method_2 ( ) ) || ( method_3 ( ) ) ) { return null ; } return new java.util.date ( ( ( ( ( var_1 ) - ( ( type_1. get ( ) ) * int_1 ) ) - int_2 ) / int_3 ) ) ; }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 ) { type_1 var_2 = type_3 . method_2 ( var_1 ) ; if ( var_2 . method_3 ( ) ) return var_2 ; type_1 var_3 = type_4 . method_2 ( var_2 . end ( ) ) ; if ( var_3 . method_3 ( ) ) return var_3 ; var_2 = type_5 . method_2 ( var_3 . end ( ) ) ; if ( var_2 . method_3 ( ) ) return var_2 ; var_3 . method_4 ( var_2 . end ( ) ) ; return var_3 ; }
[0]: public java.lang.string method_1 ( java.lang.string to, java.lang.string var_1, java.lang.string msg ) { type_1 var_2 = new type_1 ( ) ; var_2. method_2 ( var_1. trim ( ) ) ; var_2. method_3 ( msg ) ; var_3. method_4 ( to, var_2 ) ; return string_1 ; }

************

************
tgt: public void method_1 ( type_1 i ) { if ( ( ! ( method_2 ( ) ) ) && ( ( ( count ) ++ ) < ( var_2 ) ) ) { boolean var_1 = ( count ) == ( var_2 ) ; var_3 . method_1 ( i ) ; if ( var_1 && ( ! ( var_4 ) ) ) { var_4 = true ; try { var_3 . method_3 ( ) ; } finally { method_4 ( ) ; } } } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { var_3. method_2 ( var_1 ) ; if ( var_1. contains ( string_1 ) ) { var_4. method_3 ( var_1 ) ; } var_4. method_2 ( var_2 ) ; if ( var_2. contains ( string_1 ) ) { var_4. method_3 ( var_2 ) ; } }

************

************
tgt: private void method_1 ( java.util.set < java.io.file > var_1 ) { final java.lang.string var_2 = method_2 ( var_1 ) ; for ( java.lang.string var_4 : var_5 ) { final java.lang.string var_6 = ( var_2 + char_1 ) + var_4 ; final boolean var_7 = type_1 . method_4 ( var_6 , var_1 ) ; if ( var_7 ) { final java.lang.string var_8 = method_5 ( var_2 , var_4 ) ; method_6 ( var_8 ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. get ( var_1 ) ; if ( var_2 == null ) { type_3. error ( ( ( string_1 + ( var_1. method_2 ( ) ) ) + string_2 ) ) ; } var_2. method_3 ( var_4 ) ; var_3. put ( var_1, var_2 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , type_3 var_2 , type_4 var_3 ) throws java.io.ioexception { type_1 var_4 = new type_1 ( ) ; var_4 . method_2 ( true ) ; var_4 . method_3 ( var_1 ) ; var_4 . method_4 ( var_2 ) ; var_4 . method_5 ( method_6 ( ) ) ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { int length = var_1. method_2 ( ) ; byte [ ] var_2 = new byte [ length ] ; var_1. method_3 ( var_2 ) ; this. key = var_2 ; this. var_3 = var_1. method_4 ( ) ; boolean var_4 = var_1. method_5 ( ) ; if ( var_4 ) { this. var_5 = var_6. method_6 ( var_1, var_7, var_8, var_9 ) ; } }

************

************
tgt: private void method_1 ( ) { int var_1 = java.lang.integer.parseint ( var_2 . getstring ( getstring ( var_3 ) , java.lang.integer.tostring ( var_8 ) ) ) ; if ( var_1 == ( var_4 ) ) { return ; } else if ( var_1 == ( var_5 ) ) { android.content.intent intent = new android.content.intent ( this , var_6 class ) ; method_2 ( intent , var_7 ) ; } else if ( var_1 == ( var_8 ) ) { var_9 = true ; } }
[0]: public void method_1 ( ) { type_1. i ( var_1, string_1 ) ; if ( var_2. method_2 ( ) ) { var_3. method_3 ( var_4, var_5 ) ; if ( ( var_6 ) == ( var_7 ) ) { type_1. i ( var_1, ( string_2 + string_3 ) ) ; var_3. method_4 ( var_8 ) ; } var_3. method_4 ( var_9 ) ; var_2. method_5 ( var_10 ) ; } else { type_1. i ( var_1, string_4 ) ; } var_2. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( type_1 view , int var_1 ) { if ( ( var_3 ) <= 1 ) { return ; } if ( ( ( var_2 ) == ( var_3 ) ) && ( var_1 == ( var_4 ) ) ) { if ( ! ( var_5 ) ) { var_5 = true ; var_6 . method_2 ( var_7 ) ; var_8 . method_3 ( ) ; } } }
[0]: public java.util.map < java.lang.string, java.lang.string > method_1 ( ) { java.util.map < java.lang.string, java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1. put ( var_2, var_3 ) ; var_1. put ( var_4, var_5 ) ; var_1. put ( var_6, var_7 ) ; var_1. put ( var_8, var_9 ) ; return var_1 ; }

************

************
tgt: type_1 method_1 ( type_2 < type_3 > var_1 , type_4 var_2 , int var_3 ) { for ( int i = 0 ; i <= var_3 ; i ++ ) { type_1 position = method_2 ( var_1 , var_2 , new java.util.hashmap < > ( ) , i ) ; if ( position != null ) { return position ; } } return null ; }
[0]: public int method_1 ( ) { int var_1 = 1 ; for ( java.util.iterator < type_1 > i = method_2 ( ). iterator ( ) ; i. method_3 ( ) ; ) { type_2 b = i. method_4 ( ). method_5 ( ) ; if ( b!= null ) var_1 *= i. method_4 ( ). method_5 ( ). method_6 ( ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string message ) { type_1 var_3 = new type_1 ( this . var_4 . method_2 ( ) , var_1 , var_2 , message ) ; java.lang.system.out.println ( this . var_4 . method_2 ( ) ) ; var_5 . init ( ) ; var_5 . method_3 ( var_3 ) ; var_5 . method_4 ( ) ; }
[0]: public void method_1 ( ) { var_1 = ( var_1 ) * ( var_2 ) ; var_3. method_2 ( ( ( method_3 ( ) ) * ( var_4 ) ) ) ; var_3. method_4 ( ( ( method_5 ( ) ) * ( var_2 ) ) ) ; var_3 = new type_1 ( var_3. method_6 ( ), var_3. method_7 ( ), var_1 ) ; var_5 = ( var_5 ) * ( var_4 ) ; var_6 = ( var_6 ) * ( var_2 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string name ) throws type_2 { type_1 var_1 ; try { var_1 = type_3 . method_2 ( name , var_2 ) ; } catch ( type_4 var_3 ) { return null ; } catch ( java.lang.exception var_3 ) { type_5 . error ( string_2 , var_3 ) ; throw new type_2 ( var_3 ) ; } return var_1 ; }
[0]: private void method_1 ( type_1 state, int var_1, type_2 var_2, java.util.map < java.lang.string, java.lang.string > var_3, int var_4 ) { java.lang.string str = var_3. get ( ( string_1 + var_1 ) ) ; if ( str == null ) { return ; } else { type_3 var_5 = method_2 ( state, str, var_4 ) ; var_2. method_3 ( var_5 ) ; } }

************

************
tgt: private static boolean method_1 ( final type_1 var_1 , final type_1 var_2 ) { return ( var_2 . method_2 ( ) . getid ( ) . equals ( var_1 . method_2 ( ) . getid ( ) ) ) && ( var_3 . method_3 ( var_4 ) ) ; }
[0]: public java.lang.object method_1 ( type_1 var_1, type_2 context, type_3 var_2, type_4 var_3 ) throws type_5, type_6 { var_4. method_2 ( ( ( ( string_1 + ( method_3 ( var_1, context ) ) ) + string_2 ) + var_3 ) ) ; java.util.arraylist < type_7 > var_5 = method_4 ( var_6, var_2 ) ; type_8 var_7 = var_8. method_5 ( ) ; var_7. method_6 ( ). method_7 ( var_5 ) ; return var_7 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.io.ioexception { for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { type_1 . method_1 ( int_1 , string_2 , ( ( var_2 ) + ( var_1 [ i ] ) ) , i , var_3 [ i ] ) ; type_1 . method_1 ( int_1 , string_1 , ( ( var_2 ) + ( var_1 [ i ] ) ) , i , var_3 [ i ] ) ; } }
[0]: public java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1. append ( var_2 ). append ( this. var_3 ). append ( this. var_4 ) ; try { type_1 var_5 = type_1. method_2 ( string_1 ) ; var_5. method_3 ( var_1. tostring ( ). method_4 ( ) ) ; this. var_6 = type_2. method_5 ( var_5. method_3 ( ) ) ; } catch ( type_3 var_7 ) { var_7. method_6 ( ) ; } return var_6 ; }

************

************
tgt: protected void method_1 ( java.lang.integer result ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; var_1 . method_3 ( var_3 ) ; type_2 var_4 = ( ( type_2 ) ( method_2 ( var_5 ) ) ) ; var_4 . method_3 ( var_6 ) ; var_7 . method_4 ( ) ; method_5 ( string_1 ) ; }
[0]: public static type_1 method_1 ( type_2 var_1, type_3 var_2 ) throws java.io.ioexception { type_4 var_3 = new type_4 ( var_1 ) ; var_3. method_2 ( var_2 ) ; type_5 index = type_5. open ( new java.io.file ( var_4 ). method_3 ( ) ) ; type_6 var_5 = new type_6 ( index, var_3 ) ; java.io.file var_6 = new java.io.file ( var_7 ) ; type_7. method_4 ( var_5, var_6 ) ; var_5. method_5 ( ) ; return index ; }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj == null ) return false ; if ( ! ( obj instanceof type_1 ) ) return false ; type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return ( ( type_2 . equals ( var_2 , var_3 ) ) && ( type_2 . equals ( var_4 , var_5 ) ) ) || ( ( type_2 . equals ( var_2 , var_5 ) ) && ( type_2 . equals ( var_4 , var_3 ) ) ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= int_1 ) { method_2 ( ) ; if ( ( ( var_2 ) == false ) && ( ( method_3 ( ) )!= int_2 ) ) { i = ( i ) + 1 ; method_4 ( ( ( string_1 + ( ( i ) % int_1 ) ) + string_2 ) ) ; } ( var_3 ) ++ ; method_5 ( ) ; } } }

************

************
tgt: private boolean method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 == ( var_3 ) ) && ( var_2 == ( var_3 ) ) ) return true ; var_1 = var_1 . method_2 ( ) ; var_2 = var_2 . method_2 ( ) ; if ( var_1 . equals ( var_2 ) ) return true ; return method_3 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( int var_1, int var_2 ) { type_1. method_2 ( var_1, var_2 ) ; for ( int i = 0 ; i < var_2 ; i ++ ) if ( var_1 < ( var_3. size ( ) ) ) var_3. remove ( var_1 ) ; type_1. method_3 ( 0, method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { var_2 = 0 ; switch ( position ) { case 0 : method_2 ( var_3 ) ; break ; case 1 : var_2 += 1 ; method_2 ( var_3 ) ; break ; case int_1 : var_2 += int_1 ; method_2 ( var_3 ) ; break ; } }
[0]: public static void main ( java.lang.string... args ) throws type_1 { var_1 = new type_2 ( int_1 ) ; var_1. method_1 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; while ( true ) { java.lang.thread. method_2 ( int_2 ) ; } java.lang.system.out.println ( string_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { int var_7 = var_1 . method_3 ( ) ; if ( var_7 < 0 ) { this . method_4 ( ) ; return ; } if ( var_7 > 0 ) { this . method_5 ( ) ; return ; } }
[0]: public void method_1 ( ) throws java.io.ioexception { var_1 = type_1. method_2 ( new java.io.file ( string_1 ) ) ; var_1. step ( ) ; assertequals ( string_2, var_1. method_3 ( ), 1 ) ; var_1. step ( ) ; assertequals ( string_3, var_1. method_3 ( ), int_1 ) ; var_1. step ( ) ; assertequals ( string_4, var_1. method_3 ( ), int_2 ) ; var_1. method_4 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_3 ( new type_2 ( var_1 ) ) ; var_3 = var_2 . method_4 ( ) ; this . var_4 = ( ( int ) ( var_3 . get ( string_1 ) ) ) * int_1 ; method_2 ( ) ; }
[0]: private void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( var_2, string_1, var_3, var_4 ) ; var_1. method_2 ( string_2 ) ; type_3 < type_4 > result = var_1. method_3 ( ) ; if ( ( result. method_4 ( ) ) && ( result. get ( ). equals ( var_3 ) ) ) { if ( var_5. method_5 ( ) ) { var_5. method_7 ( ) ; } else { var_5. method_7 ( ) ; } } } }

************

************
tgt: private boolean method_1 ( ) { int var_1 = java.lang.integer . method_2 ( var_2 . gettext ( ) . tostring ( ) ) ; if ( var_1 > ( method_3 ( ) ) ) { var_3 . method_4 ( getstring ( var_4 , var_5 . method_5 ( ) ) ) ; method_6 ( var_2 ) ; return false ; } return true ; }
[0]: public void method_1 ( type_1 var_1 ) { ( var_2 ) ++ ; type_2 var_3 = type_2. method_2 ( ) ; type_3 var_4 = var_3. method_3 ( method_4 ( ) ) ; if ( var_4!= null ) { method_6 ( ) ; method_5 ( ) ; } }

************

************
tgt: protected type_1 method_1 ( type_2 var_1 , type_3 var_2 ) { java.lang.string var_3 = string_1 ; if ( ! ( var_2 . method_2 ( ) . equals ( string_1 ) ) ) { var_3 = ( ( string_2 + ( var_2 . method_2 ( ) ) ) + string_3 ) + ( var_2 . method_3 ( ) ) ; } return method_4 ( var_2 , var_1 . getvalue ( string_4 ) , var_1 . getvalue ( string_5 ) , var_1 . getvalue ( string_6 ) , var_3 ) ; }
[0]: private boolean method_1 ( ) { return ( ( ( this. var_1 ) == null ) && ( ( this. var_2 ) == ( type_1. method_2 ( ) ) ) ) && ( ( this. var_3 ) == ( type_1. method_3 ( ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { super . method_1 ( var_1 , var_2 ) ; final android.content.context context = this . var_1 . getactivity ( ) . method_2 ( ) ; var_3 = var_2 ; type_4 . method_3 ( var_4 , string_1 ) ; var_5 = type_5 . method_4 ( context ) ; type_6 . method_4 ( ) . method_5 ( string_2 ) ; type_6 . method_4 ( ) . method_5 ( string_3 ) ; }
[0]: public void method_1 ( ) { if ( var_1 ) { super. method_1 ( ) ; method_2 ( ) ; } else { type_1. method_3 ( this, getstring ( var_2 ), var_3 ). show ( ) ; var_1 = true ; new type_2 ( ). method_4 ( new type_3 ( ) { public void method_5 ( ) { var_1 = false ; } }, ( int_1 * ( var_4 ) ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.object var_2 ) { try { java.lang.string var_3 = method_2 ( var_1 ) ; int var_4 = var_5 . method_3 ( var_3 ) ; var_5 . setvalue ( var_3 , method_4 ( var_2 , var_4 ) ) ; } catch ( type_1 var_6 ) { throw new type_2 ( var_6 ) ; } }
[0]: public java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { java.util.collection < type_2 > var_2 = var_1. method_2 ( ). method_3 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 var_4 : var_2 ) { if ( var_4. gettype ( ). equals ( var_5 class ) ) { var_3. add ( var_4. getname ( ) ) ; } } return var_3 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; double var_2 = var_1 . method_1 ( ) ; double var_3 = var_1 . method_2 ( ) ; java.lang.system.out.println ( ( string_1 + var_2 ) ) ; java.lang.system.out.println ( ( string_2 + var_3 ) ) ; double error = ( ( double ) ( var_3 ) ) - var_2 ; java.lang.system.out.println ( ( string_3 + error ) ) ; }
[0]: public void method_1 ( final android.content.context context, final type_1 var_1 ) { if ( ( var_2 )!= null ) { type_2. method_2 ( ). method_3 ( new type_3 ( ) { public void method_4 ( ) { var_2. method_5 ( context, var_1. method_6 ( ) ) ; } } ) ; } else { type_4. i ( string_1 ) ; } }

************

************
tgt: public static java.util.list get ( java.lang.string query ) { type_1 var_1 = var_2 . method_1 ( ) ; var_1 . method_2 ( ) ; java.util.list result = var_1 . method_3 ( query ) . list ( ) ; var_1 . method_4 ( ) . commit ( ) ; var_1 . method_5 ( ) ; return result ; }
[0]: public boolean method_1 ( int var_1, int var_2 ) { if ( var_3 = true ) { if ( var_1 == ( ( this. x ) + int_1 ) ) { var_3 = false ; return true ; } } if ( var_1 == ( ( this. x ) + 1 ) ) { var_3 = false ; return true ; } return false ; } }

************

************
tgt: java.lang.object method_1 ( type_1 var_1 , type_2 key , type_3 var_3 , java.lang.object [ ] args , boolean var_4 ) throws type_4 { type_5 var_5 = method_2 ( var_1 , key , false , var_4 ) ; if ( var_5 instanceof type_6 ) { return method_1 ( var_1 , ( ( type_6 ) ( var_5 ) ) , var_3 , args ) ; } return method_3 ( var_1 , ( - 1 ) , var_5 , key . getstring ( ) , args , var_3 , var_4 ) ; }
[0]: private type_1 method_1 ( int index ) { if ( (! ( method_2 ( index ) ) ) || ( isempty ( ) ) ) { return null ; } if ( index == ( ( size ) - 1 ) ) { return var_1 ; } type_1 node = var_2 ; for ( int i = 0 ; i < index ; i ++ ) { node = node. method_3 ( ) ; } return node ; }

************

************
tgt: public void method_1 ( ) { var_1 . setenabled ( var_2 ) ; var_3 . setenabled ( var_2 ) ; var_4 . setenabled ( var_2 ) ; if ( ! ( var_5 ) ) { var_6 . setenabled ( var_2 ) ; } if ( var_7 ) { method_2 ( string_1 , string_2 ) ; } else { method_2 ( string_3 , string_4 ) ; } }
[0]: private boolean method_1 ( ) { if ( ( ( ( src. method_2 ( ( ( var_1 ) + 1 ) ) ) == char_1 ) && ( ( ( var_1 ) + int_1 ) < ( var_2 ) ) ) && ( ( src. method_2 ( ( ( var_1 ) + int_1 ) ) )!= char_2 ) ) { var_1 += int_2 ; return true ; } else return false ; }

************

************
tgt: public void method_1 ( ) { for ( type_1 var_1 : type_2 . values ( ) ) { if ( ( ( var_1 != ( var_2 ) ) && ( var_1 != ( var_3 ) ) ) && ( var_1 != ( var_4 ) ) ) { assertequals ( var_5 . method_2 ( var_1 ) , var_6 ) ; } } }
[0]: public void method_1 ( type_1 result ) { int var_1 = gettime ( result ) ; if ( var_1 <= ( var_2. gettime ( ) ) ) { type_2. method_2 ( var_2 ) ; var_3. method_3 ( var_2 ) ; } else { type_3. method_4 ( this, var_2, ( var_1 - ( var_2. gettime ( ) ) ) ) ; type_4. method_5 ( string_1, ( ( var_1 - ( var_2. gettime ( ) ) ) + string_2 ) ) ; } this. method_6 ( ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 , int var_2 , int offset , java.util.date var_3 , java.util.date var_4 , type_3 [ ] var_5 , type_4 ... var_6 ) { return var_7 . method_1 ( var_1 , var_3 , var_4 , java.util.arrays.aslist ( var_5 ) , java.util.arrays.aslist ( var_6 ) , var_2 , offset ) ; }
[0]: public static type_1 method_1 ( double x, double y, double var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { string_1, string_2, string_3, string_4, string_5 } ; java.lang.string var_3 = var_2 [ new java.util.random ( ). method_2 ( var_2. length ) ] ; return new type_1 ( x, y, var_1, type_2. method_3 ( var_3 ), new java.util.random ( ). method_2 ( int_1 ), type_3. method_4 ( ) ) ; }

************

************
tgt: private double method_1 ( int var_1 ) { double var_2 = method_2 ( ) ; int k = var_1 ; int var_3 = ( data . length ) - 1 ; return ( k * ( type_1 . method_3 ( ( var_2 / var_3 ) ) ) ) + ( ( var_3 - k ) * ( type_1 . method_3 ( ( 1.0 - ( var_2 / var_3 ) ) ) ) ) ; }
[0]: public void method_1 ( ) throws type_1, java.io.ioexception { method_2 ( ) ; for ( type_2 var_1 : this. method_3 ( ) ) { method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( var_1 ) ; method_9 ( var_1 ) ; method_10 ( var_1 ) ; method_11 ( var_1 ) ; } method_12 ( ) ; }

************

************
tgt: public void replaceall ( java.util.list < type_1 > var_1 ) { if ( ( var_2 ) == null ) { var_2 = new java.util.arraylist < > ( ) ; } var_2 . method_1 ( ) ; if ( var_1 != null ) { var_2 . method_2 ( var_1 ) ; } method_3 ( ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { if ( ( var_2 ) == null ) { return method_2 ( type_2. method_3 ( ) ) ; } java.util.list < type_3 > var_3 = type_3. method_4 ( var_1 ) ; var_4 = var_3. get ( 0 ) ; java.util.list < type_4 > var_5 = type_4. method_5 ( var_1 ) ; return method_6 ( var_6. method_7 ( var_4, var_5, var_7. method_8 ( ), type_5. method_9 ( ) ) ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = type_1 . method_2 ( method_3 ( ) , method_4 ( ) ) ; java.util.iterator < ? > var_2 = this . method_5 ( ) . iterator ( ) ; while ( var_2 . method_6 ( ) ) { var_1 += var_2 . method_7 ( ) . method_1 ( ) ; } return var_1 ; }
[0]: public java.lang.string list ( type_1 var_1, type_2 var_2 ) { type_3 < type_4 > var_3 = var_4. method_1 ( var_2 ) ; var_1. method_2 ( string_1, var_3. method_3 ( ) ) ; var_1. method_2 ( string_2, var_3. method_4 ( ) ) ; return string_3 ; }

************

************
tgt: public type_1 method_1 ( int var_1 , java.util.date var_2 , java.util.date var_3 ) throws type_2 { java.util.list < type_1 > var_5 = new java.util.arraylist < > ( ) ; type_1 var_4 = null ; if ( var_6 . method_2 ( ) . isempty ( ) ) { type_3 var_7 = new type_3 ( var_2 , var_3 ) ; var_5 = var_7 . method_2 ( var_2 , var_3 ) ; } return var_4 ; }
[0]: void method_1 ( final long id ) throws java.io.ioexception { final type_1 var_1 = file. get ( type_2. method_2 ( id ) ) ; final short offset = type_2. method_3 ( id ) ; final int size = type_3. method_4 ( var_1, offset ) ; if ( size > ( var_2 ) ) { } type_3. method_5 ( var_1, offset, 0 ) ; file. method_6 ( type_2. method_2 ( id ), true ) ; var_3. put ( id, size ) ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( java.lang.string var_1 , java.util.list < type_2 > var_2 ) { for ( type_2 var_3 : var_2 ) { if ( var_3 == null ) continue ; if ( var_3 . method_2 ( ) . equals ( var_1 ) ) return var_3 . method_3 ( ) ; } return new java.util.arraylist < type_1 > ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( ) ; type_2 var_2 = var_1. method_3 ( ) ; var_2. method_4 ( var_3, var_4, var_5, var_6 ) ; try { method_5 ( var_7. method_6 ( ), var_2 ) ; } catch ( type_3 var_8 ) { } }

************

************
tgt: public void method_1 ( type_1 var_1 , int id ) { var_2 . method_2 ( var_3 ) ; for ( java.lang.string var_4 : var_3 ) { type_2 . method_3 ( ) . method_4 ( var_4 ) ; } var_5 = new java.util.arraylist < > ( ) ; var_6 . method_5 ( new type_3 ( this , var_7 , var_5 ) ) ; method_6 ( ) ; type_4 . method_7 ( this , string_2 , var_8 ) ; }
[0]: public void method_1 ( int i ) { var_1. buffer [ ( ( var_2 ) + int_1 ) ] = ( ( byte ) ( i ) ) ; var_1. buffer [ ( ( var_2 ) + int_2 ) ] = ( ( byte ) ( i ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , type_1 ... var_2 ) throws type_2 , type_3 { if ( ! ( method_2 ( var_2 ) ) ) { throw new type_3 ( ) ; } var_3 = false ; this . var_1 = var_1 ; method_3 ( ) ; method_4 ( ) ; }
[0]: public void method_1 ( ) { for ( int i = int_1 ; i > 0 ; i -- ) { int var_1 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( i + 1 ) ) ) ; type_1 temp = var_2 [ i ] ; var_2 [ i ] = var_2 [ var_3 ] ; var_2 [ var_1 ] = temp ; } var_4 = 0 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 . get ( var_3 ) ) == null ) var_2 . put ( var_3 , var_1 ) ; else { var_2 . get ( var_3 ) . remove ( ) ; var_2 . put ( var_3 , var_1 ) ; } }
[0]: public java.lang.string tostring ( ) { return type_1. tostring ( this. getclass ( ), string_1, var_1, string_2, key, string_3, var_2, string_4, var_3, string_5, var_4, string_6, var_5, string_7, var_6, string_8, var_7, string_9, var_8, string_10, var_9, string_11, var_10, string_12, var_11, string_13, var_12 ) ; }

************

************
tgt: public void method_1 ( ) { synchronized ( this . var_2 ) { for ( type_1 var_1 : this . var_2 ) { if ( ! ( this . var_3 . method_2 ( var_1 . method_3 ( ) . getname ( ) ) ) ) { var_1 . method_4 ( ( string_1 + ( var_4 . info ( var_1 . method_3 ( ) . getname ( ) ) ) ) ) ; type_2 . method_5 ( var_1 , var_1 . method_6 ( ) ) ; } this . var_2 . remove ( var_1 ) ; } } }
[0]: private type_1 method_1 ( java.lang.string text ) { type_1 var_1 = type_2. method_2 ( var_2 class ) ; type_2. method_3 ( var_1. gettext ( ) ). method_4 ( text ) ; type_2. method_3 ( var_1. method_5 ( ) ). method_4 ( new type_3 [ ] { type_2. method_2 ( var_3 class ) } ) ; return var_1 ; }

************

************
tgt: public type_1 < java.lang.string > method_1 ( type_2 var_1 ) { java.lang.system.out.println ( var_1 . getdata ( ) . tostring ( ) ) ; try { var_2 = method_2 ( var_1 , var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_3 ( ) ; } return new type_1 ( string_1 , var_5 ) ; }
[0]: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; java.util.arraylist < type_3 > nodes = method_3 ( var_2 ) ; java.util.arraylist < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; for ( type_3 node : nodes ) { var_3. add ( new type_1 ( this, node ) ) ; } return var_3 ; }

************

************
tgt: private java.util.list < type_1 > method_1 ( int var_1 , int var_2 , int length ) { java.util.list < type_1 > nodes = new java.util.arraylist < > ( ) ; int var_3 = method_2 ( ) ; for ( int position = 0 ; position < length ; position ++ ) { int var_4 = var_1 + position ; if ( var_4 >= var_3 ) { break ; } type_1 node = var_5 [ var_4 ] [ var_2 ] ; nodes . add ( node ) ; } return nodes ; }
[0]: public java.util.arraylist < type_1 > method_1 ( ) { method_2 ( ) ; type_1 a = method_3 ( ) ; java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( ) ; while ( a!= null ) { result. add ( a ) ; a = method_3 ( ) ; } return result ; }

************

************
tgt: public double method_1 ( ) { int var_1 = ( var_2 ) - ( var_3 ) ; var_4 = float_1 / int_1 ; double var_5 = java.lang.math.pow ( ( 1 + ( var_4 ) ) , var_1 ) ; var_6 = ( var_6 ) * var_5 ; var_3 = var_2 ; return var_6 ; }
[0]: private void method_1 ( int var_1, java.lang.string var_2, java.lang.string var_3, java.util.date date ) { method_2 ( var_1 ) ; method_2 ( ( var_1 + int_1 ) ) ; long var_4 = ( date. gettime ( ) ) - ( new java.util.date ( ). gettime ( ) ) ; method_3 ( var_1, var_2, var_3, var_4, date ) ; }

************

************
tgt: private void method_1 ( ) throws type_1 { type_2 var_1 = new type_2 ( ) ; java.util.list var_2 = var_1 . method_2 ( null , null , null , null , null , null ) ; type_3 . method_3 ( string_1 , ( ( ( type_2 ) ( var_2 . get ( 0 ) ) ) + string_3 ) ) ; }
[0]: public static void method_1 ( java.lang.thread var_1, java.lang.string var_2 ) { type_1 var_3 = var_4. get ( var_2 ) ; if ( null == var_3 ) { var_3 = new type_2 ( var_2, var_1 ) ; var_4. put ( var_2, var_3 ) ; } else { throw new type_3 ( ( ( string_1 + var_2 ) + string_2 ) ) ; } }

************

************
tgt: private static type_1 [ ] method_1 ( java.lang.string [ ] var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < > ( var_1 . length ) ; type_1 var_3 ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_3 = new type_1 ( ) ; var_3 . type = var_4 ; var_5 = var_1 [ i ] ; var_2 . add ( var_3 ) ; } return var_2 . method_2 ( new type_1 [ 0 ] ) ; }
[0]: public void method_1 ( int id ) { for ( type_1 var_1 : var_2 ) { if ( var_1. method_2 ( id ) ) { var_3 = var_1. id ; method_3 ( ) ; return ; } } }

************

************
tgt: public double method_1 ( double t ) { if ( t <= float_1 ) { return ( 1 - ( super . method_1 ( ( 1 - ( t * int_1 ) ) ) ) ) * float_1 ; } return ( ( super . method_1 ( ( ( t * int_1 ) - 1 ) ) ) * float_1 ) + float_1 ; }
[0]: public int method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; int var_3 = 0 ; do { try { var_3 = var_1. method_2 ( ) ; } catch ( type_1 var_4 ) { } } while ( ( var_3 < 1 ) || ( var_3 > int_1 ) ) ; var_1. method_3 ( ) ; return var_3 ; } }

************

************
tgt: private void method_1 ( ) { if ( ! ( var_1 . method_2 ( ) ) ) { java.util.map < java.lang.string , java.lang.string > params = new java.util.hashmap < java.lang.string , java.lang.string > ( ) ; final java.lang.string var_2 = string_1 ; final java.lang.string token = string_2 ; java.lang.string var_3 = type_1 . getdata ( method_3 ( ) , var_4 ) ; params . put ( var_2 , var_5 ) ; params . put ( token , var_3 ) ; var_1 . method_4 ( params ) ; var_1 . method_5 ( true ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; if ( var_1 ) type_1. method_2 ( var_2, string_1 ) ; type_2 var_3 = method_3 ( ) ; type_3 var_4 = var_3. method_4 ( ) ; for ( type_4 b : var_5 ) { var_4. add ( var_6, b, b. getclass ( ). method_5 ( ) ) ; } var_4. commit ( ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = new type_1 ( method_2 ( ) ) ; var_1 . method_3 ( type_2 . method_4 ( var_2 ) ) ; var_1 . method_3 ( type_2 . method_4 ( var_3 ) ) ; var_1 . method_3 ( type_2 . method_4 ( var_4 ) ) ; var_5 . method_5 ( var_1 ) ; var_6 . method_6 ( var_5 ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = ( new type_1 ( this ) ) > ( ( ( var_2 ) / ( var_3 ) ) / ( var_4 ) ) ; this. method_2 ( ). method_3 ( ) ; this. add ( var_1 ) ; var_1. method_4 ( ) ; var_1. method_5 ( ) ; this. method_4 ( ) ; this. method_5 ( ) ; var_1. method_6 ( ) ; }

************

************
tgt: public type_1 method_1 ( type_2 [ ] var_1 ) { type_1 var_2 = new type_1 ( ) ; var_4 = new java.util.arraylist < type_3 > ( var_1 . length ) ; for ( type_2 var_5 : var_1 ) { type_3 var_6 = new type_3 ( ) . method_2 ( var_5 ) ; var_4 . add ( var_6 ) ; } return var_2 ; }
[0]: public type_1 [ ] method_1 ( ) { int var_1 = method_2 ( ) ; type_1 [ ] var_2 = new type_1 [ var_1 ] ; for ( type_2 n : nodes ) { var_2 [ ( ( int ) ( var_3 ) ) ]. nodes. add ( n ) ; } return var_2 ; }

************

************
tgt: public void method_1 ( java.util.list < type_1 > var_1 ) { this . var_2 . method_2 ( ) ; if ( ( var_1 != null ) && ( ( var_1 . size ( ) ) > 0 ) ) { this . var_2 . method_3 ( var_1 ) ; java.util.collections.sort ( var_2 ) ; var_3 = var_2 . get ( 0 ) . method_4 ( ) ; } else { var_3 = 0 ; } var_4 = null ; }
[0]: private void method_1 ( java.lang.string url ) { if ( type_1. method_2 ( url ). method_3 ( ) ) { var_1. method_4 ( ). method_5 ( true ) ; var_1. method_6 ( new type_2 ( this ) ) ; var_1. method_1 ( url ) ; } else { type_3. method_7 ( this, string_1, var_2 ). show ( ) ; method_8 ( new android.content.intent ( this, var_3 class ) ) ; method_9 ( ) ; } }

************

************
tgt: private final void method_1 ( type_1 var_1 , float offset , int min ) { for ( int i = 0 ; i < ( ( var_2 ) + 1 ) ; i ++ ) { float var_3 = i * offset ; var_1 . method_2 ( 0 , var_3 , min , var_3 , var_4 ) ; var_1 . method_2 ( var_3 , 0 , var_3 , min , var_4 ) ; } var_1 . method_2 ( ( min - 1 ) , 0 , ( min - 1 ) , min , var_4 ) ; }
[0]: public boolean method_1 ( type_1 target, type_2 var_1, double var_2 ) { type_3 var_3 = new type_3 ( var_1, target, var_4, var_2 ) ; type_4. method_2 ( ). method_3 ( var_3 ) ; if (! ( var_3. method_4 ( ) ) ) { target. method_5 ( var_2 ) ; return true ; } return false ; }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( ) { if ( ! ( type_1 . method_2 ( ) ) ) { java.util.list < java.lang.string > params = new java.util.arraylist < > ( int_1 ) ; for ( type_2 value : getvalue ( ) ) { params . add ( ( ( ( string_1 + ( type_1 . getname ( ) ) ) + string_2 ) + ( type_1 . method_3 ( method_4 ( value ) ) ) ) ) ; } return params ; } else { return super . method_1 ( ) ; } }
[0]: public double method_1 ( type_1 var_1 ) { if ( ( this. compareto ( var_1 ) ) == 0 ) return var_2 ; if ( ( this. x ) == ( var_1. x ) ) return var_3 ; return ( ( double ) ( ( this. y ) - ( var_1. y ) ) ) / ( ( double ) ( ( this. x ) - ( var_1. x ) ) ) ; }

************

************
tgt: private static int method_1 ( int [ ] array , int k ) { if ( k == ( - 1 ) ) return - 1 ; else if ( ( array . length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = type_1 . method_2 ( 0 , k ) ; return array [ i ] ; } } else return - 1 ; }
[0]: public java.lang.string method_1 ( final type_1 var_1 ) throws type_2 { method_2 ( var_1 ) ; final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ( ( method_3 ( ). length ( var_1 ) ) * int_1 ) ) ; for ( final type_3 <? > var_3 : method_3 ( ). method_4 ( var_1 ) ) { var_2. append ( var_3 ). append ( ""\n"" ) ; } var_2. method_5 ( ( ( var_2. length ( ) ) - 1 ) ) ; return var_2. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( ) ; method_3 ( var_1 ) ; var_3 . method_4 ( string_1 , string_2 ) ; var_3 . method_4 ( string_3 , string_4 ) ; var_3 . method_4 ( string_7 , var_4 ) ; var_3 . method_4 ( string_5 , string_6 ) ; var_3 . method_4 ( string_8 , string_9 ) ; method_5 ( var_3 ) ; method_6 ( var_3 ) ; method_7 ( var_1 , var_3 ) ; }
[0]: private void method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; if ( var_1 == null ) { var_2 = type_1. method_2 ( ) ; } else { var_2 = type_1. method_3 ( var_1 ) ; } var_3 = type_2. method_4 ( string_1, var_2 ) ; var_3 = type_2. method_4 ( string_1, var_2 ) ; }

************

************
tgt: private type_1 method_1 ( type_2 date , type_3 var_1 , java.lang.string var_2 ) { java.util.list < type_1 > var_3 = var_4 . method_2 ( var_1 , var_2 ) ; for ( type_1 var_5 : var_3 ) { if ( ( ( var_5 . method_3 ( ) ) == null ) || ( var_5 . method_3 ( ) . method_4 ( ) . method_5 ( date ) ) ) { return var_5 ; } } return null ; }
[0]: public static void method_1 ( type_1 message ) { java.lang.system.out.println ( ) ; java.lang.system.out.println ( message. method_2 ( ) ) ; java.lang.system.out.println ( type_2. tostring ( message. method_3 ( ) ) ) ; java.lang.system.out.println ( message. method_4 ( ) ) ; java.lang.system.out.println ( message. method_5 ( ) ) ; java.lang.system.out.println ( message. method_6 ( ) ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws type_1 { type_2 type_3 = new type_2 ( ) ; java.util.list < java.lang.string > var_1 = type_3 . method_1 ( ) ; for ( java.lang.string str : var_1 ) { try { java.lang.string var_2 = type_3 . method_2 ( ( ( ( var_3 ) + str ) + string_2 ) ) ; type_3 . method_3 ( type_3 . method_4 ( var_2 ) ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_5 ( ) ; } } }
[0]: public java.lang.string method_1 ( ) { if ( (! ( var_1 ) ) && (! ( var_2 ) ) ) { if ( ( var_3 ) == null ) { return method_2 ( ) ; } else { return var_3. method_3 ( ) ; } } else { return var_4. method_4 ( label ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( ( var_2 ) || ( ! ( var_3 . equals ( string_1 ) ) ) ) { type_2 var_4 = new type_2 ( ) ; var_4 . execute ( ) ; } }
[0]: public void method_1 ( type_1 event ) { try { var_1 = new type_2 ( ) ; var_1. start ( ) ; method_2 ( false ) ; method_3 ( false ) ; method_4 ( ) ; method_5 ( var_2 ) ; method_6 ( true ) ; } catch ( java.io.ioexception var_3 ) { type_3. method_7 ( ( ( string_1 + ( var_4 ) ) + string_2 ) ) ; var_5. method_8 ( ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { if ( var_1 != null ) { method_3 ( var_1 ) ; var_2 . method_4 ( type_2 . method_5 ( new type_3 ( var_1 . method_6 ( ) , var_1 . method_7 ( ) ) , var_3 ) ) ; } type_3 var_4 = var_2 . method_8 ( ) . target ; var_5 = var_2 . method_9 ( new type_4 ( ) . position ( new type_3 ( var_6 , var_7 ) ) . method_10 ( true ) ) ; }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) throws type_2 { java.util.regex.matcher var_2 = type_3. method_2 ( var_1 ) ; if (! ( var_2. method_3 ( ) ) ) { throw new type_2 ( java.lang.string.format ( var_3, var_1 ) ) ; } return new type_1 ( java.lang.integer.parseint ( var_2. method_4 ( 1 ) ), java.lang.integer.parseint ( var_2. method_4 ( int_1 ) ), java.lang.integer.parseint ( var_2. method_4 ( int_2 ) ), ( ( var_2. method_4 ( int_3 ) ) == null? false : true ) ) ; }

************

************
tgt: public void method_1 ( int index , type_1 var_1 ) throws type_2 { assert var_1 != null ; type_3 var_2 = var_3 . get ( index ) ; if ( ( ( ! ( var_2 . equals ( var_1 ) ) ) && ( var_3 . contains ( var_1 ) ) ) && ( ! ( var_1 . method_2 ( ) . contains ( var_4 ) ) ) ) { throw new type_2 ( ) ; } var_2 . method_3 ( var_1 ) ; var_3 . set ( index , var_2 ) ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string var_1 = method_2 ( ) ; double var_2 ; switch ( var_3 ) { default : case var_4 : return var_1 ; case var_5 : var_2 = float_1 ; break ; case var_6 : var_2 = float_2 ; break ; case var_7 : var_2 = float_3 ; break ; case var_8 : var_2 = float_4 ; break ; case var_9 : var_2 = var_10 ; } double var_11 = var_12. method_3 ( ) ; if ( var_11 > var_2 ) { var_1 += method_4 ( ) ; } return var_1 ; }

************

************
tgt: private boolean method_1 ( type_1 listener ) { if ( ( var_1 . size ( ) ) > ( var_2 ) ) { java.util.list < type_2 > result = method_2 ( var_1 . get ( var_2 ) ) ; ( var_2 ) ++ ; listener . method_4 ( result ) ; return true ; } return false ; }
[0]: public boolean method_1 ( int var_1 ) { type_1 var_2 = new type_1 ( ) ; var_3 = var_4 ; if ( var_2 == null ) { java.lang.system.out.println ( string_1 ) ; return false ; } else { var_2. method_2 ( var_1 ) ; var_2. method_3 ( var_5. method_4 ( ) ) ; var_5. method_3 ( var_2 ) ; return true ; } }

************

************
tgt: public boolean method_1 ( final type_1 item ) { switch ( item . method_2 ( ) ) { case var_1 : type_2 . method_3 ( new type_3 ( ) ) ; method_4 ( ) ; return true ; case var_2 : type_2 . method_3 ( new type_4 ( ) ) ; method_4 ( ) ; return true ; default : return super . method_1 ( item ) ; } }
[0]: private void method_1 ( type_1 < type_2 > data, type_3 var_1 ) throws java.io.ioexception { for ( type_4 var_2 : var_3 ) { type_2 var_4 = data. method_2 ( type_5. method_3 ( var_2. getid ( ) ) ) ; method_1 ( var_2, var_4, var_1 ) ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_2 var_2 = ( ( type_2 ) ( method_2 ( var_3 ) ) ) ; var_4 . method_3 ( var_2 . method_4 ( var_5 , null ) ) ; android.widget.button var_8 = ( ( android.widget.button ) ( method_5 ( var_9 ) ) ) ; var_8 . method_6 ( this ) ; method_7 ( ) ; }
[0]: private void method_1 ( ) { if ( ( method_2 ( ) ) >= ( method_3 ( ( ( var_1 ) + 1 ) ) ) ) { ( this. var_2 ) ++ ; this. var_3 = int_1 ; ( var_1 ) ++ ; var_4 += float_1 ; var_5 += int_2 ; var_6. method_4 ( string_1, ( ( float ) ( var_7. x ) ), ( ( float ) ( var_7. y ) ), true ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { type_1 c = new type_1 ( var_2 ) ; c . method_2 ( ( ( c . method_3 ( ) ) + string_1 ) ) ; if ( c . method_4 ( var_3 , var_1 ) ) { this . var_3 = var_1 ; return true ; } return false ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.util.list <? extends type_2 > var_2, java.util.list <? extends type_2 > var_3, java.util.list <? extends type_2 > var_4 ) { return method_1 ( var_1, type_3. method_2 ( var_2 ), type_3. method_3 ( var_3 ), type_3. method_3 ( var_4 ) ) ; }

************

************
tgt: public boolean method_1 ( ) { if ( ! ( type_1 . method_2 ( date ) ) ) return false ; if ( ( ( ( ( ( this . var_1 ) == 0 ) && ( ( this . var_2 ) == 0 ) ) && ( ( this . var_3 ) == 0 ) ) && ( ( this . var_4 ) == 0 ) ) && ( ( this . var_5 ) == 0 ) ) return false ; return true ; }
[0]: public void method_1 ( java.lang.string name ) { type_1 type = var_1. get ( name ) ; if ( type!= null ) { var_2. method_2 ( type ) ; var_3. method_3 ( ). remove ( type ) ; var_1. remove ( name ) ; } }

************

************
tgt: private type_1 method_1 ( type_2 var_1 ) throws type_3 { type_1 var_2 = method_2 ( var_1 ) ; java.util.list < type_4 > var_3 = var_1 . method_3 ( ) ; for ( type_4 var_4 : var_3 ) { type_1 var_5 = method_1 ( var_4 ) ; var_2 . method_4 ( var_5 ) ; } return var_2 ; }
[0]: public java.lang.string tostring ( ) { return ( ( ( ( ( ( ( string_1 + string_2 ) + ( var_1. method_1 ( ). tostring ( ) ) ) + string_3 ) + ( var_2 ) ) + string_4 ) + ( var_3 ) ) + string_5 ; }

************

************
tgt: public void method_1 ( type_1 node ) { this . node = node ; var_2 . settext ( this . node . method_2 ( ) ) ; var_3 . settext ( this . node . method_3 ( ) . getvalue ( ) ) ; var_4 . settext ( this . node . method_4 ( ) . getvalue ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { try { type_1 var_2 = var_3. method_2 ( var_1. method_3 ( ), var_1. method_4 ( ) ) ; if ( var_2!= null ) { throw new type_2 ( ( ( ( string_1 + ( var_2. method_4 ( ). getname ( ). tostring ( ) ) ) + string_2 ) + ( var_2. method_3 ( ) ) ) ) ; } } catch ( java.lang.exception var_4 ) { } var_3. method_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 . method_2 ( ) . size ( ) ) != 0 ) { this . var_1 = var_1 . method_2 ( ) ; if ( ( var_2 ) != null ) { method_3 ( var_1 . method_4 ( var_2 . method_5 ( ) ) ) ; } method_6 ( ) ; method_8 ( var_1 ) ; } }
[0]: public java.lang.string method_1 ( ) { if ( ( method_2 ( ) ) && ( method_3 ( var_1. method_4 ( ) ) ) ) { return var_2. method_4 ( ) ; } else if ( method_3 ( var_3. method_5 ( ). method_6 ( ) ) ) { return var_3. method_5 ( ). method_6 ( ) ; } else { return var_4. method_4 ( ) ; } }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof type_1 ) ) { return false ; } type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( x ) != ( var_1 . x ) ) { return false ; } if ( ( y ) != ( var_1 . y ) ) { return false ; } return true ; }
[0]: protected void method_1 ( ) { java.lang.string var_1 = type_1. method_2 ( ). method_3 ( ). method_4 ( type_1. method_5 ( ) ). tostring ( ) ; final java.util.collection < type_2 > var_2 ; if ( type_3. isempty ( var_1 ) ) { var_2 = new java.util.arraylist < type_2 > ( ) ; } else { java.util.list < java.lang.string > var_3 = type_1. method_6 ( var_1 ) ; var_2 = type_1. method_7 ( ). method_8 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = var_2 . getvalue ( ) ; if ( ( method_2 ( ) ) && ( method_3 ( var_1 ) ) ) { try { java.lang.string var_3 = method_4 ( var_1 ) ; if ( method_5 ( var_3 ) ) { var_2 . setvalue ( var_3 ) ; value = var_3 ; var_4 . method_6 ( var_5 ) ; var_4 . setvalue ( var_3 ) ; } } catch ( java.lang.exception var_6 ) { var_4 . method_7 ( ) ; type_1 . method_8 ( string_1 , var_6 ) ; } } }
[0]: public long method_1 ( java.lang.string filename ) { type_1 var_1 = type_1. method_2 ( string_1 ) ; type_1 var_2 = type_1. method_2 ( string_2 ) ; java.util.regex.matcher var_3 = var_1. method_3 ( filename ) ; if ( var_3. method_4 ( ) ) { } else { var_3 = var_1. method_3 ( filename ) ; if ( var_3. method_4 ( ) ) { } } } return - 1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . method_5 ( false ) ; this . var_2 . method_2 ( ) ; this . var_2 . add ( var_1 , var_3 ) ; this . method_3 ( new type_2 ( this , var_4 , string_1 ) ) ; }
[0]: public static void method_1 ( type_1 var_1, type_2 to ) { if (! ( var_2 ) ) { return ; } if (! ( type_3. method_2 ( var_1 ) ) ) { return ; } type_4 state = var_3. get ( var_1. getname ( ) ) ; if ( state!= null ) { type_3. method_3 ( var_1, var_1. method_4 ( ) ) ; var_4 = to ; var_5 = type_5. method_5 ( ) ; } }

************

************
tgt: protected java.lang.object method_1 ( type_1 context , type_2 < ? > var_1 ) { type_3 < type_4 < java.lang.object , java.lang.object > > var_2 = method_2 ( var_1 ) ; type_1 var_3 = method_3 ( context ) ; if ( var_3 . method_4 ( ) ) { return null ; } if ( var_2 != null ) { var_2 . value ( ) . set ( type_5 . method_5 ( var_3 . method_6 ( ) , var_2 ) , var_3 . getvalue ( ) ) ; } return context . getvalue ( ) ; }
[0]: public void update ( type_1 var_1 ) { type_2 < java.lang.string > var_2 = var_3. keys ( ) ; while ( var_2. method_1 ( ) ) { java.lang.string var_4 = var_2. method_2 ( ) ; double var_5 = method_3 ( var_4, var_1 ) ; var_3. put ( var_4, var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 < type_2 , type_3 > var_1 ) { type_4 . method_2 ( var_2 , ( ( ( string_1 + ( var_1 . method_3 ( ) ) ) + string_2 ) + ( var_1 . method_4 ( ) ) ) ) ; if ( ( var_1 . method_3 ( ) ) == ( var_1 . method_4 ( ) ) ) { return ; } method_6 ( var_1 ) ; }
[0]: public type_1 method_1 ( type_1 target ) { long t = var_1 ; long type = 0 ; if ( t > int_1 ) { t -= int_1 ; type ++ ; } type_1 var_2 = new type_1 ( ) ; var_3 = new type_1 [ int_2 ] ; var_2. type = char_1 ; var_3 [ 0 ] = new type_1 ( ). method_2 ( type ) ; var_3 [ 1 ] = new type_1 ( ). method_2 ( t ) ; return var_2 ; }

************

************
tgt: public void method_1 ( ) { method_2 ( var_1 . method_3 ( ) ) . method_4 ( type_2 . method_5 ( ) ) ; java.util.list < type_3 > var_2 = var_3 . method_6 ( ) ; type_4 . assertthat ( var_2 , method_7 ( method_5 ( ) ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( var_2 class ) ; type_3 listener = new type_3 ( new type_4 ( string_1 ), new type_4 ( string_1 ), var_1 ) ; type_5 var_3 = new type_6 ( ) ; var_3. method_3 ( method_4 ( string_1, string_1 ) ) ; listener. method_5 ( var_3 ) ; type_2. method_6 ( var_1 ) ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , type_1 var_2 ) { type_2 format = new type_2 ( ) ; try { method_2 ( var_1 ) ; format . method_3 ( java.lang.long.parselong ( var_1 ) ) ; } catch ( java.lang.exception var_3 ) { method_5 ( var_4 , var_3 . method_6 ( ) ) ; } var_2 . method_4 ( format ) ; }
[0]: private void method_1 ( java.util.arraylist < type_1 > var_1 ) { type_2 var_2 = method_2 ( var_1 ) ; type_2 var_3 = method_3 ( var_1 ) ; type_2 var_4 = method_4 ( var_1 ) ; var_2. method_5 ( data. method_6 ( ) ) ; var_3. method_5 ( data. method_7 ( ) ) ; var_4. method_5 ( data. method_8 ( ) ) ; method_9 ( var_2 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 message , type_3 var_1 ) { type_4 var_2 = var_3 ; if ( ( var_2 != null ) && ( ( var_2 . method_2 ( ) ) instanceof type_5 ) ) { type_6 var_4 = new type_6 ( var_2 , 0 ) ; type_7 state = ( ( type_8 ) ( var_2 . method_2 ( ) ) ) . update ( var_5 , var_4 , int_1 ) ; return new type_10 ( var_4 . method_3 ( ) ) ; } return null ; }
[0]: public boolean method_1 ( int var_1 ) { if ( ( var_2 ) == var_1 ) return false ; var_3 = var_1 ; if ( ( method_2 ( ) )!= null ) { method_3 ( ) ; var_4 = true ; method_2 ( ). method_4 ( this, ( ( type_1. method_5 ( ) ) + ( var_5 ) ) ) ; } else var_2 = var_3 ; method_6 ( ) ; return true ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 . intvalue ( ) ) ) ) ; type_1 var_3 = ( ( type_1 ) ( method_2 ( var_4 . intvalue ( ) ) ) ) ; var_1 . setenabled ( true ) ; method_3 ( var_3 , string_1 ) ; method_3 ( var_1 , string_1 ) ; var_5 = 0 ; }
[0]: private android.content.intent method_1 ( ) { java.lang.string var_1 = java.lang.string. method_2 ( array [ counter ] ) ; android.content.intent var_2 = new android.content.intent ( var_3 ) ; var_2. method_3 ( var_4 ) ; var_2. method_4 ( string_1 ) ; var_2. method_5 ( var_5, ( var_1 + ( var_6 ) ) ) ; return var_2 ; }

************

************
tgt: public void method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; var_2 . delete ( var_3 , ( ( ( var_4 ) + string_1 ) + var_1 ) , null ) ; var_2 . delete ( var_5 , ( ( ( var_4 ) + string_1 ) + var_1 ) , null ) ; var_2 . delete ( var_6 , ( ( ( var_7 ) + string_1 ) + var_1 ) , null ) ; }
[0]: public type_1 method_1 ( double var_1 ) { synchronized ( var_2 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { var_2. get ( i ). method_1 ( ( var_1 / float_1 ) ) ; } } synchronized ( var_3 ) { var_3 = var_1 ; } return method_2 ( ) ; } }

************

************
tgt: private void init ( type_1 var_1 ) { type_2 var_2 = var_1 . method_1 ( ) ; var_3 = ( ( var_2 . method_2 ( ) ) == ( var_4 ) ) ? var_5 : var_6 ; var_7 = ( ( var_2 . method_3 ( ) ) == ( var_4 ) ) ? var_5 : var_6 ; var_8 = new type_3 < java.lang.string , java.lang.string > ( ) ; var_9 = var_1 . method_4 ( ) . path ( string_1 ) ; }
[0]: public void method_1 ( long var_1, type_1 [ ] var_2, type_1 [ ] var_3 ) { type_2. method_2 ( var_1, var_2, var_3 ) ; if ( var_2!= null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { type_3. method_3 ( var_2 ) ; } var_4 = true ; }

************

************
tgt: public void method_1 ( ) { int var_1 = 0 ; int var_2 = 0 ; do { var_2 = 0 ; method_2 ( ) ; var_2 = method_3 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; var_1 = var_3 . method_4 ( ) ; if ( var_1 == int_1 ) { method_1 ( ) ; break ; } else if ( var_1 != 1 ) { java.lang.system.out.println ( string_3 ) ; } } while ( var_1 != 1 ) ; type_1 . method_5 ( var_2 ) ; java.lang.system.out.println ( string_4 ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.io.file file ) { try { type_1. method_2 ( this. var_2. method_3 ( ), string_1, new java.io.file ( ( ( file. method_4 ( ) ) + var_1 ) ) ) ; } catch ( java.io.ioexception var_3 ) { type_2. method_5 ( null, string_2 ) ; } }

************

************
tgt: private void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string title , boolean var_4 , int var_5 , int rows , int var_6 ) { type_1 var_7 = new type_1 ( var_1 , var_2 , var_3 , title , var_4 , var_5 , rows , var_8 . method_2 ( ) . getvalue ( ) , true , var_6 ) ; var_7 . method_3 ( ) ; method_4 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_2!= null ) { if ( var_3 ) { type_3. method_2 ( var_4, string_1, var_2 ) ; } } android.content.intent intent = new android.content.intent ( this, var_5 class ) ; intent. method_3 ( ""id"", var_6. method_4 ( ) ) ; method_5 ( intent ) ; } }

************

************
tgt: public java.lang.string method_1 ( int var_1 ) { if ( ( ( var_2 ) == null ) || ( ! ( var_2 . method_2 ( var_1 ) ) ) ) { type_1 . method_3 ( var_3 , string_1 ) ; return null ; } int var_4 = var_2 . method_4 ( var_5 ) ; java.lang.string var_6 = var_2 . getstring ( var_4 ) ; return var_6 ; }
[0]: private type_1 < type_2 >. var_1 < type_2 > method_1 ( type_1 < type_2 >. var_1 < type_2 > node ) { type_1 < type_2 >. var_1 < type_2 > var_2 = var_3 ; type_1 < type_2 >. var_1 < type_2 > var_4 = var_5 ; type_1 < type_2 >. var_1 < type_2 > var_6 = var_7 ; return node ( var_8. key, node ( node. key, var_2, var_8 ), node ( var_4. key, var_9, var_10 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_1 . method_2 ( ) . equals ( var_2 . method_3 ( ) ) ) { this . var_3 = var_1 . method_4 ( ) ; if ( ( this . var_4 ) != null ) { this . var_4 . settext ( var_3 ) ; var_5 . method_5 ( false ) ; } } }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( 0 ) ; final double var_2 = 1.0 ; var_1. method_2 ( var_2 ) ; var_1. method_3 ( ) ; var_1. method_4 ( ) ; var_1. method_5 ( ) ; var_1. method_3 ( ) ; assertequals ( var_2, var_1. output ( ), var_3 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_1 var_2 = new type_1 ( ) ; type_2 var_3 = new type_2 ( string_2 , string_2 , string_2 , int_1 ) ; var_3 . method_2 ( var_1 ) ; var_3 . method_2 ( var_2 ) ; }
[0]: public boolean method_1 ( ) { for ( type_1 a : var_1 ) { if ( a. method_2 ( ). method_3 ( ) ) { if (! ( a. method_2 ( ). tostring ( ). method_4 ( string_1 ) ) ) { return false ; } } } return true ; }

************

************
tgt: public static boolean method_1 ( char c ) { return ( ( ( c >= char_1 ) && ( c <= char_2 ) ) || ( ( c >= char_3 ) && ( c <= char_4 ) ) ) || ( ( c >= char_5 ) && ( c <= char_6 ) ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string out ; try { out = type_1. method_2 ( var_1, var_2 ). replace ( string_1, string_2 ). replace ( string_3, string_4 ). replace ( string_5, string_6 ) ; } catch ( type_2 var_3 ) { out = var_1 ; } return out ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , java.util.list < java.lang.integer > var_2 ) { type_2 var_3 = var_4 . method_2 ( ) ; type_3 var_5 = new type_4 ( ) ; boolean var_6 = var_3 . method_3 ( ) ; var_4 . method_7 ( var_1 ) ; return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this. method_2 ( ) ; var_2. add ( var_1 ) ; this. set ( new type_2 ( this. getname ( ), this. method_3 ( ), var_2, this. method_4 ( ), this. method_5 ( ), this. method_6 ( ) ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = method_2 ( var_3 class ) ; method_3 ( var_3 class ) . method_4 ( ) . method_5 ( var_2 ) ; var_1 . method_6 ( ) ; method_7 ( var_3 class ) . method_4 ( ) ; }
[0]: public static void main ( final java.lang.string [ ] args ) throws java.io.ioexception { type_1 var_1 = new type_1 ( string_1, int_1, int_2 ) ; var_1. method_1 ( string_2, null, string_3 ) ; var_1. method_2 ( true ) ; type_2 var_2 = new type_2 ( int_1, int_2, string_1 ) ; var_2. method_3 ( int_3 ) ; var_2. method_4 ( string_4, string_5 ) ; var_2. start ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int id ) { java.lang.string var_2 = var_3 . gettext ( ) . tostring ( ) ; type_2 var_4 = new type_2 ( var_2 , 0 ) ; var_5 . set ( i , var_4 ) ; var_6 . method_2 ( var_4 ) ; a . method_3 ( ) ; }
[0]: public type_1 method_1 ( ) { boolean open = false ; if ( type_2. method_2 ( type_3. method_3 ( var_1 ), var_2 ) ) { open = true ; } type_2. method_4 ( type_3. method_3 ( var_1 ), var_3 ) ; type_4. method_5 ( type_3. method_3 ( var_1 ), var_4, (! open ) ) ; return this ; }

************

************
tgt: public int method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( count . get ( var_1 ) . equals ( count . get ( var_2 ) ) ) { return var_3 . get ( var_1 ) . compareto ( var_3 . get ( var_2 ) ) ; } else { return count . get ( var_2 ) . compareto ( count . get ( var_1 ) ) ; } }
[0]: protected void method_1 ( ) throws type_1 { method_2 ( ) ; this. var_1 = false ; this. var_2 = - 1 ; this. var_3 = - 1 ; this. var_4. method_3 ( this ) ; this. var_4. method_4 ( this ) ; this. var_4. method_5 ( this ) ; this. var_4. method_6 ( this ) ; this. var_4. method_7 ( var_5 ) ; this. var_6 = var_7 ; this. var_4. method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) { java.util.arraylist < type_1 > var_1 ; var_1 = new java.util.arraylist < type_1 > ( ) ; type_1 var_2 ; var_2 = new type_2 ( new java.util.arraylist < type_1 > ( ) ) ; var_2 . method_2 ( string_1 ) ; var_1 . add ( var_2 ) ; var_3 . method_3 ( var_1 ) ; assertequals ( var_2 , var_3 . method_4 ( string_1 ) ) ; }
[0]: private void method_1 ( ) { android.content.intent getintent = new android.content.intent ( var_1 ) ; getintent. method_2 ( string_1 ) ; android.content.intent var_2 = new android.content.intent ( var_3, var_4 ) ; var_2. method_2 ( string_1 ) ; android.content.intent var_5 = android.content.intent. method_3 ( getintent, string_2 ) ; var_5. method_4 ( var_6, new android.content.intent [ ] { var_2 } ) ; method_5 ( var_5, var_7 ) ; }

************

************
tgt: private static void method_1 ( java.lang.string var_1 ) { try { var_2 . method_2 ( ) . method_3 ( var_3 , var_4 , var_1 ) ; type_1 . asserttrue ( false ) ; } catch ( type_2 var_6 ) { type_1 . assertequals ( var_6 . method_4 ( ) . method_5 ( ) , int_1 ) ; } }
[0]: private int method_1 ( ) { type_1 var_1 = type_2. method_2 ( ). method_3 ( ) ; if ( var_1 == null ) { return 0 ; } java.lang.string var_2 = var_1. method_4 ( ) ; type_3 var_3 = var_4. method_5 ( ). get ( var_2 ) ; if ( var_3 == null ) { return 0 ; } return var_3. method_6 ( ) ; }

************

************
tgt: private void method_1 ( ) { final android.view.view var_1 = method_2 ( ) . method_3 ( ) ; var_1 . method_4 ( var_2 . method_5 ( ) ) ; var_1 . method_6 ( var_2 . method_7 ( ) ) ; var_4 = var_5 . method_10 ( ) ; var_6 = var_5 . method_11 ( ) ; var_7 = var_5 . method_12 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1, string_2, string_3, string_4, string_5 } ; java.lang.stringbuilder source = new java.lang.stringbuilder ( ) ; source. append ( string_6 ) ; for ( java.lang.string var_2 : var_1 ) { source. append ( java.lang.string.format ( string_7, var_2 ) ) ; } source. append ( string_8 ) ; java.lang.string var_3 = method_2 ( source. tostring ( ), var_4 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 parameters ) { return type_3 . method_2 ( ( ( parameters . getint ( string_1 ) ) + ( parameters . getint ( string_2 ) ) ) , parameters . getint ( string_2 ) , ( ( ( parameters . getint ( string_3 ) ) * ( parameters . getint ( string_1 ) ) ) / int_1 ) , parameters . getint ( string_4 ) , parameters . getint ( string_5 ) , parameters . getint ( string_6 ) , parameters . getboolean ( string_7 ) ) ; }
[0]: protected java.util.date method_1 ( java.lang.string var_1 ) { for ( type_1 var_2 : var_3 ) { try { return var_2. method_2 ( var_1 ) ; } catch ( type_2 var_4 ) { } } type_3 var_5 = new type_3 ( ( string_1 + ( type_4. tostring ( var_6 ) ) ) ) ; var_5. setvalue ( var_1 ) ; return var_5 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string str = var_2 . gettext ( ) ; var_2 . settext ( string_1 ) ; try { var_4 . method_2 ( str ) ; var_4 . method_3 ( ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_4 ( ) ; } }
[0]: public void method_1 ( int var_1, java.lang.string [ ] var_2, int [ ] var_3 ) { switch ( var_1 ) { case var_4 : { var_5 = false ; if ( ( ( var_3. length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_6 ) ) ) { method_2 ( ) ; } else { var_7 = true ; } method_3 ( ) ; } } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 step = new type_1 ( ) ; double [ ] array = new double [ int_1 ] ; int count = 0 ; while ( count != int_1 ) { array [ count ] = int_3 * count ; count ++ ; } double var_1 = step . method_2 ( array ) ; java.lang.system.out.println ( var_1 ) ; asserttrue ( ( ( var_1 == float_1 ) || ( var_1 == int_4 ) ) ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; var_7. method_4 ( var_9 ) ; var_5. method_4 ( var_10 ) ; type_4. method_5 ( this ) ; method_6 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 . method_2 ( string_1 , var_1 . method_3 ( ) . method_4 ( ) ) ; type_2 var_3 = var_1 . method_5 ( ) ; if ( ( var_3 != null ) && ( ! ( ( ( var_3 . method_6 ( ) ) == ( var_4 ) ) || ( ( var_3 . method_6 ( ) ) == ( var_5 ) ) ) ) ) { method_7 ( var_3 ) ; } }
[0]: public type_1 method_1 ( ) { try { if ( this. method_2 ( ) ) { return new type_1 ( ( ( byte ) ( var_1. method_3 ( ) ) ) ) ; } else { throw new type_2 ( string_1 ) ; } } catch ( java.io.ioexception var_2 ) { type_3. method_4 ( var_2 ) ; return null ; } }

************

************
tgt: private void method_1 ( ) { var_1 = method_2 ( ) ; for ( java.lang.string var_2 : var_3 ) { boolean var_4 = false ; for ( java.lang.string var_5 : var_6 ) { if ( var_2 . method_3 ( var_5 ) ) { var_4 = true ; } } if ( ! var_4 ) { var_1 . add ( var_2 ) ; } } }
[0]: public static < type_1, type_2 > type_2 method_1 ( type_1 var_1, java.lang.class < type_1 > var_2, java.lang.class < type_2 > to, type_3 var_3 ) { type_4 < type_1, type_2 > var_4 = type_5. method_2 ( var_2, to, var_3 ) ; var_4. method_3 ( var_3 ) ; return var_4. method_1 ( var_1 ) ; }

************

************
tgt: private double method_1 ( java.util.linkedlist < java.lang.double > list ) { double var_1 = method_2 ( list ) ; double var_2 = 0 ; double length = list . size ( ) ; for ( double i : list ) { double var_3 = java.lang.math.pow ( ( i - var_1 ) , int_1 ) ; var_2 += var_3 ; } double var_4 = var_2 / length ; return type_1 . method_3 ( var_4 ) ; }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { var_4 = var_5. method_2 ( ) ; var_6 = var_5. method_3 ( ) ; var_7 = var_5. method_4 ( ) ; if (! ( var_8 ) ) { if ( ( ( var_4 ) + ( var_7 ) ) >= ( var_6 ) ) { ( var_9 ) ++ ; method_5 ( var_9 ) ; type_2. method_6 ( string_1, string_2 ) ; } } }

************

************
tgt: public void method_1 ( ) { if ( method_2 ( ) ) { if ( method_3 ( method_4 ( ) ) ) { if ( ! ( var_1 ) ) this . var_2 . method_5 ( method_4 ( ) , false ) ; method_6 ( ) ; } else method_7 ( ) ; } if ( ! ( var_1 ) ) method_8 ( ) ; }
[0]: private void method_1 ( java.lang.string filename ) throws java.io.ioexception { java.io.file f = new java.io.file ( ( ( ( var_1 ) + string_1 ) + filename ) ) ; var_2. put ( filename, method_2 ( f ) ) ; if (! ( var_2. method_3 ( filename ) ) ) { var_3. add ( filename ) ; var_4. method_4 ( type_1. method_5 ( var_3 ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string filename , java.lang.string var_1 , boolean var_2 ) { type_1 [ ] var_3 = this . method_2 ( var_1 ) ; for ( type_1 var_4 : var_3 ) { java.lang.string file = var_5 . replaceall ( ( var_1 + string_1 ) , string_2 ) ; if ( var_2 ) file = file . replaceall ( string_3 , string_2 ) ; if ( file . tolowercase ( ) . equals ( filename ) ) return var_4 ; } return null ; }
[0]: static java.util.collection < java.lang.string > method_1 ( java.lang.string var_1 ) { java.util.collection < java.lang.string > var_2 = type_1. method_2 ( ) ; java.util.regex.matcher var_3 = type_2. method_3 ( var_1 ) ; while ( var_3. method_4 ( ) ) { if ( ( var_3. method_5 ( ) ) >= 1 ) { java.lang.string var_4 = var_3. method_6 ( 1 ) ; var_2. add ( var_4. substring ( 1, var_4. length ( ) ) ) ; } } return var_2 ; } }

************

************
tgt: public void method_1 ( ) { final type_1 < java.lang.integer > field = type_2 . method_2 ( var_1 class ) . method_3 ( string_1 ) . method_5 ( ( - 1 ) ) ; assertequals ( ( - 1 ) , ( ( int ) ( field . get ( ) ) ) ) ; field . set ( 0 ) ; assertequals ( ( - 1 ) , ( ( int ) ( field . get ( ) ) ) ) ; }
[0]: public void method_1 ( type_1 item ) { if ( item == null ) throw new java.lang.nullpointerexception ( ) ; final type_2 < type_1 >. type_3 var_1 = var_2 ; var_2 = new type_3 ( item ) ; if ( ( size ) == 0 ) { var_3 = null ; var_4 = null ; first = var_2 ; } else { var_5 = var_2 ; var_4 = var_1 ; var_3 = null ; if ( ( size ) == 1 ) var_6 = var_2 ; } ( size ) ++ ; }

************

************
tgt: public int method_1 ( ) { int var_1 = 0 ; for ( int i = ( this . var_2 . length ) - 1 ; i >= ( ( this . var_2 . length ) / int_1 ) ; i -- ) { if ( this . var_2 [ i ] . method_2 ( ) ) break ; else var_1 ++ ; } return var_1 ; }
[0]: public int method_1 ( final java.lang.string var_1 ) { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } if (! ( var_2. method_2 ( var_1 ) ) ) { throw new type_1 ( string_2 ) ; } type_2 var_3 = var_2. get ( var_1 ). method_3 ( ) ; return var_4. method_1 ( var_3. getname ( ) ) ; }

************

************
tgt: public int method_1 ( android.content.intent intent , int var_1 , int var_2 ) { android.content.context var_3 = method_4 ( ) ; type_1 . method_2 ( var_3 , null ) ; java.lang.string var_4 = intent . method_3 ( string_1 ) ; new type_2 ( var_3 , var_4 ) . start ( ) ; return super . method_1 ( intent , var_1 , var_2 ) ; }
[0]: public static java.lang.string method_1 ( final type_1 var_1, final type_2 var_2 ) { synchronized ( var_3 ) { for ( final type_3 var_4 : var_3 ) { if ( var_4. method_2 ( var_1, var_2 ) ) { return var_4. method_3 ( var_1, var_2 ) ; } } } return null ; } }

************

************
tgt: private void method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = ( ( type_3 ) ( var_1 . method_2 ( var_4 ) ) ) ; java.lang.string var_5 = var_3 . method_3 ( ) ; if ( ( method_4 ( var_6 , var_7 , var_1 , var_2 ) ) != null ) { var_9 . method_5 ( new type_4 ( ( string_2 + string_3 ) , var_5 , true ) ) ; return ; } throw new type_5 ( ) ; }
[0]: private void method_1 ( ) { type_1. i ( string_1, string_2 ) ; type_2 var_1 = method_2 ( var_2, var_3 ) ; type_3 var_4 = var_1. method_3 ( ) ; var_4. method_4 ( string_3, string_4 ) ; var_4. method_4 ( string_5, var_5. method_5 ( ) ) ; var_4. commit ( ) ; }

************

************
tgt: public synchronized type_1 method_1 ( int var_1 , int var_2 ) { type_1 var_3 = method_2 ( var_1 , var_2 ) ; if ( var_3 != null ) { method_3 ( var_3 , var_1 , var_2 ) ; } else { var_3 = method_4 ( var_1 , var_2 ) ; } method_5 ( ) ; return var_3 ; }
[0]: public void method_1 ( type_1 var_1, int var_2, int var_3 ) { type_2. i ( var_4, ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + var_2 ) + string_3 ) + var_3 ) ) ; switch ( var_3 ) { case var_6 : var_1. method_2 ( var_7 ) ; var_1. method_2 ( var_8 ) ; break ; default : type_2. method_3 ( var_4, ( ( ( ( string_4 + var_2 ) + string_3 ) + var_3 ) + string_5 ) ) ; break ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { try ( type_1 var_1 = new type_1 ( ) ) { method_2 ( var_1 . method_3 ( new type_3 ( int_1 , int_1 ) ) ) ; var_1 . method_4 ( new type_3 ( int_1 , int_1 ) ) ; assertnotnull ( var_1 . method_3 ( new type_3 ( int_1 , int_1 ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { switch ( var_1. method_2 ( ) ) { case 1 : var_2. method_3 ( true ) ; var_2. setenabled ( true ) ; var_3 = true ; break ; case int_1 : var_2. method_3 ( false ) ; var_2. setenabled ( false ) ; var_3 = false ; break ; default : break ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , final java.lang.object var_2 ) { final java.lang.string var_3 = ( ( java.lang.string ) ( var_2 ) ) ; try { type_2 . method_2 ( var_3 ) ; return true ; } catch ( type_3 var_5 ) { type_4 . method_3 ( var_5 , string_1 , var_3 ) ; type_5 . method_4 ( method_5 ( ) , var_6 , var_7 ) . show ( ) ; return false ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { var_3 = type_1. method_2 ( var_1, var_2 ) ; var_4 = type_2. method_3 ( var_3, string_1 ) ; var_5 = type_2. method_3 ( var_3, string_2 ) ; var_6 = type_2. method_4 ( var_3, string_3 ) ; var_7 = type_2. method_4 ( var_3, string_4 ) ; var_6 = type_2. method_4 ( var_3, string_3 ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { try { var_1 . method_2 ( var_3 ) ; } catch ( java.io.ioexception var_4 ) { var_4 . method_3 ( ) ; } var_1 . method_4 ( ) ; var_1 = null ; } }
[0]: private type_1 method_1 ( java.util.list < java.lang.integer > var_1, type_2 var_2, type_3 var_3 ) { if (! ( var_2 instanceof type_4 ) ) { var_3. method_2 ( string_1, var_4. method_3 ( ) ) ; return var_4 ; } return method_1 ( var_1, ( ( type_4 ) ( var_2 ) ), var_3 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { android.content.intent intent = new android.content.intent ( var_2 , var_3 class ) ; intent . method_2 ( string_1 , var_4 . get ( var_5 ) ) ; intent . method_3 ( var_6 ) ; if ( ( var_7 ) >= int_1 ) { intent . method_3 ( var_8 ) ; } ( ( type_1 ) ( var_2 ) ) . method_4 ( intent , 0 ) ; }
[0]: private void method_1 ( int var_1, int var_2 ) { type_1 var_3 = method_2 ( var_1, var_2 ) ; if ( var_4. method_3 ( var_1, var_2 ) ) { var_3. method_4 ( var_5 ) ; var_3. method_5 ( var_5 ) ; } else { var_3. method_4 ( var_6 ) ; var_3. method_5 ( var_6 ) ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) throws type_3 { type_1 id = new type_1 ( ) ; try { type_4 . method_3 ( id , var_2 ) ; } catch ( java.lang.exception var_3 ) { throw new type_5 ( var_3 , ( ( string_1 + var_2 ) + string_2 ) ) ; } method_4 ( id , var_1 , false ) ; return id ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3. length ) ; var_2 ++ ) { if ( var_3 [ var_2 ] [ 0 ]. tostring ( ). equals ( var_1 ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( type_1 src , java.lang.string var_1 , java.util.list < type_2 > var_2 ) { if ( var_3 . method_2 ( ) ) var_3 . method_3 ( java.lang.string.format ( string_1 , src . getname ( ) , ( var_2 != null ? var_2 . size ( ) : 0 ) , var_1 ) ) ; method_4 ( var_2 ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( ) ; var_1. method_3 ( ) ; var_1. method_4 ( var_2 ) ; java.lang.string var_3 ; if ( ( var_4 ) == 1 ) var_3 = var_1. method_5 ( ) ; else var_3 = var_1. method_6 ( ) ; ( var_4 ) ++ ; ( var_5 ) ++ ; return var_3 ; }

************

************
tgt: public type_1 method_1 ( long id ) { type_2 var_1 = var_2 . method_2 ( ) ; try { var_1 . method_3 ( ) . method_4 ( ) ; type_1 c = var_1 . method_5 ( var_3 class , id ) ; var_1 . method_3 ( ) . commit ( ) ; return c ; } finally { var_1 . method_6 ( ) ; } }
[0]: public void method_1 ( ) { if ( ( ( ( var_1 ) == null ) || ( ( var_2 ) < 0 ) ) || ( ( var_3. method_2 ( ) ) < 1 ) ) { return ; } type_1 var_4 = var_3. method_3 ( var_3. method_2 ( ) ) ; boolean var_5 = false ; if ( ( var_6 ) > 0 ) var_5 = true ; var_7. method_4 ( var_4. getid ( ), var_4. method_5 ( ), var_1, var_2, string_1, var_5 ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 ) throws java.io.ioexception { if ( ( type_1 . isempty ( ) ) || ( type_2 . isempty ( ) ) ) type_3 . method_2 ( ) ; if ( ( type_2 . contains ( var_1 ) ) || ( ! ( type_1 . contains ( var_1 ) ) ) ) return true ; return false ; }
[0]: public type_1 method_1 ( final type_2 var_1 ) { try { type_2 var_2 = null ; if ( var_1 instanceof type_2 ) { var_2 = ( ( type_2 ) ( var_1 ) ) ; } else { var_2 = method_2 ( var_1, var_3, this ) ; } return method_2 ( method_3 ( ). method_1 ( method_4 ( var_1 ) ), var_4, var_2 ) ; } catch ( type_3 var_5 ) { type_4. method_5 ( var_5, this ) ; return null ; } } }

************

************
tgt: private java.lang.string method_1 ( int var_1 ) { type_1 var_2 = var_3 . get ( var_1 ) ; type_2 var_4 = new type_2 ( ) ; try { var_4 = ( ( type_2 ) ( method_2 ( var_2 , var_6 class ) ) ) ; } catch ( java.lang.classnotfoundexception | type_3 | type_4 var_7 ) { method_3 ( var_7 ) ; } return var_4 . gettext ( ) ; }
[0]: private double method_1 ( type_1 list ) throws type_2 { if ( list. isempty ( ) ) { return 0 ; } int index = method_2 ( ) ; if ( index > 0 ) { type_3 var_1 = ( ( type_3 ) ( list. get ( index ) ) ) ; type_1 var_2 = var_1. method_1 ( index, list ) ; return method_1 ( var_2 ) ; } else { return ( ( type_4 ) ( list. method_3 ( ) ) ). getvalue ( ) ; } }

************

************
tgt: protected byte [ ] method_1 ( long var_1 ) throws java.io.ioexception { int var_2 = method_2 ( var_1 ) ; if ( var_2 < 0 ) return null ; type_1 var_3 = null ; if ( ( var_4 ) != null ) { var_3 = var_5 ; } if ( ( var_2 >= 0 ) && ( var_3 != null ) ) { type_2 var_6 = var_3 . method_3 ( var_2 ) ; if ( var_6 != null ) { return var_6 . method_4 ( var_7 ) ; } } return null ; }
[0]: public static boolean method_1 ( int index ) { if ( ( index == ( - 1 ) ) || ( ( var_1 [ index ] ) == null ) ) { return false ; } var_1 [ index ]. method_2 ( var_2, true ) ; type_1. method_3 ( index ) ; return true ; }

************

************
tgt: private static void method_1 ( double var_1 , boolean var_3 ) { if ( ( var_4 ) == ( var_5 ) ) { type_1 . method_2 ( var_3 ) ; } else if ( ( var_4 ) == ( var_6 ) ) { type_1 . method_3 ( var_1 , var_3 ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 ) == 0 ) var_1 = ( var_2. length ( ) ) - 1 ; else ( var_1 ) -- ; var_3. method_2 ( 0 ) ; var_4. method_3 ( ) ; var_4. method_4 ( ) ; if ( var_3. method_5 ( ) ) var_3. method_6 ( ) ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( type_2 p ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( method_2 ( ) . size ( ) ) ; i ++ ) { if ( method_2 ( ) . get ( i ) . method_3 ( ) . equals ( p ) ) { var_1 . add ( method_2 ( ) . get ( i ) ) ; } } return var_1 ; }
[0]: private void method_1 ( java.lang.string var_1, java.lang.string name, java.lang.string var_2, java.lang.string var_3, java.lang.string var_4, double var_5, double var_6 ) { type_1 var_7 = new type_2 ( var_1, name, var_2, var_3, var_4, var_5, var_6 ) ; this. var_8. add ( var_7 ) ; this. var_8. add ( var_7 ) ; this. var_8. add ( var_7 ) ; }

************

************
tgt: public void method_1 ( java.lang.string filename , java.lang.string var_2 ) throws type_1 { try ( type_2 var_3 = method_2 ( ) ) { try ( type_3 var_4 = type_4 . method_3 ( var_3 , var_1 , filename , var_2 ) ) { var_4 . method_4 ( ) ; } } catch ( type_5 var_5 ) { throw var_6 . method_5 ( string_1 , var_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = var_3. method_2 ( var_1 ) ; final java.util.list < type_3 <? super type_2 > > var_4 = this. var_4 ; for ( int i = 0, n = var_4. size ( ) ; i < n ; i ++ ) { var_4. get ( i ). method_1 ( var_2 ) ; if (! ( var_2. method_3 ( ) ) ) break ; } }

************

************
tgt: public type_1 method_1 ( type_2 var_1 ) { final java.util.calendar c = java.util.calendar.getinstance ( ) ; int var_2 = c . get ( var_3 ) ; int var_4 = c . get ( var_5 ) ; return new type_3 ( getactivity ( ) , this , var_2 , var_4 , type_4 . method_2 ( getactivity ( ) ) ) ; }
[0]: public void method_1 ( ) { if ( var_1. gettext ( ). tostring ( ). equals ( string_1 ) ) { java.lang.system.out.println ( string_2 ) ; } java.lang.system.out.println ( string_3 ) ; android.content.intent intent = new android.content.intent ( this, var_2 class ) ; java.lang.string message = string_4 ; method_2 ( intent ) ; }

************

************
tgt: public int method_1 ( final java.lang.string filepath ) { for ( int var_1 = 0 ; var_1 < ( var_2 ) ; var_1 ++ ) { if ( var_3 [ var_1 ] . method_2 ( ) . method_3 ( ) . contains ( filepath ) ) return var_1 ; } return - 1 ; }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( var_1 ) ; var_2. method_2 ( var_3 ) ; var_2. method_3 ( string_1 ) ; var_2. method_4 ( 0 ) ; var_2. method_5 ( false ) ; var_2. method_6 ( false ) ; var_2. method_7 ( ) ; }

************

************
tgt: public void update ( ) { if ( ( ( state ) != ( var_1 ) ) && ( var_2 . method_1 ( ) ) ) { var_3 . add ( new type_1 ( var_4 , var_4 . method_2 ( ) ) ) ; } super . update ( ) ; }
[0]: public static boolean getboolean ( java.lang.string var_1 ) { java.lang.string var_2 = type_1. getstring ( var_1 ) ; return ( var_2!= null ) && ( ( java.lang.boolean. method_1 ( var_2. trim ( ) ) ) || (! ( var_2. equals ( var_1 ) ) ) ) ; }

************

************
tgt: private void method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( var_1 != null ) { type_3 handle = null ; type_2 var_2 = type_2 . method_3 ( ) ; if ( var_2 . method_4 ( var_1 . method_5 ( ) ) ) { handle = var_2 . method_6 ( var_1 . method_5 ( ) ) ; } if ( handle != null ) { handle . method_7 ( this ) ; var_3 . method_8 ( handle ) ; } else { var_3 . method_8 ( null ) ; } } }
[0]: public void method_1 ( ) { var_1. update ( this, new type_1 ( ) { public void method_2 ( boolean var_2 ) { if ( ( var_3 )!= null ) { if ( type_2. method_3 ( ). method_4 ( ) ) { var_3. method_5 ( var_4, ( ( type_2. method_3 ( ). method_6 ( ) ) * int_1 ) ) ; } } } }, false ) ; }

************

************
tgt: public void method_1 ( java.lang.string context ) { java.util.set < java.lang.string > var_1 = var_2 . get ( context ) ; if ( var_1 != null ) { for ( java.lang.string var_3 : var_1 ) { java.util.set < type_1 > var_4 = var_5 . remove ( var_3 ) ; if ( var_4 != null ) { for ( type_1 var_6 : var_4 ) { method_2 ( var_6 ) ; } } } var_2 . remove ( context ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { if ( var_2. method_2 ( ) ) { var_2. method_3 ( false ) ; method_4 ( var_3, false ) ; } else { var_2. method_3 ( true ) ; method_4 ( var_3, false ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . assertthat ( type_2 . method_2 ( ( ( ( var_1 ) - ( ( ( int_1 * int_2 ) * int_3 ) * int_3 ) ) + 1 ) , var_1 , false , getcontext ( ) ) , type_3 . method_3 ( method_4 ( var_3 , int_4 ) ) ) ; }
[0]: private double [ ] method_1 ( java.lang.double [ ] var_1 ) { double [ ] var_2 = new double [ var_1. length ] ; if ( ( var_1. length ) <= 0 ) java.lang.system.err.println ( string_1 ) ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { var_2 [ i ] = var_1 [ i ] ; } return var_2 ; }

************

************
tgt: public java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > output = new java.util.hashset < > ( ) ; if ( ! ( ( var_1 ) == null ) ) { for ( type_1 f : var_1 ) if ( ! ( f . method_2 ( ) ) ) output . add ( f ) ; } return output ; }
[0]: protected void method_1 ( ) throws java.lang.exception { java.lang.string name = getname ( ) ; name = name. replace ( string_1, string_2 ) ; name = name. replace ( string_3, string_4 ) ; type_1 var_1 = new type_1 ( new java.io.file ( ( string_5 + name ) ) ) ; var_1. method_2 ( ) ; var_2 = var_1 ; }

************

************
tgt: public void method_1 ( type_1 event ) { boolean var_1 = type_2 . method_2 ( ) . method_3 ( ) ; if ( ! var_1 ) { java.lang.string var_2 = type_2 . method_2 ( ) . method_4 ( ) . var_3 ; if ( var_2 . contains ( string_1 ) ) { var_4 = true ; java.lang.system.out.println ( string_2 ) ; } else { var_4 = false ; } } }
[0]: protected synchronized void method_1 ( java.lang.void... values ) { if ( ( var_1 )!= null ) { var_1. method_2 ( var_2. method_3 ( ) ) ; var_1. method_4 ( var_2. method_5 ( ) ) ; } if ( ( var_3 )!= null ) { var_3. settext ( var_4. method_6 ( ) ) ; } }

************

************
tgt: public type_1 method_1 ( ) { type_1 var_1 = method_2 ( ) ; if ( null == var_1 ) { type_2 . method_3 ( ) ; if ( method_4 ( ) . method_5 ( ) ) { type_3 var_2 = new type_3 ( ) ; var_2 . method_6 ( ( string_1 + ( method_4 ( ) . method_7 ( ) ) ) ) ; var_1 = new type_4 ( var_2 ) ; } else { var_1 = new type_4 ( ) ; } method_8 ( var_1 ) ; } return var_1 ; }
[0]: private void method_1 ( final boolean var_1 ) { synchronized ( var_2 ) { var_3. method_2 ( ( string_1 + var_1 ) ) ; method_3 ( ) ; var_4. execute ( string_2 ) ; var_4. execute ( string_3 ) ; var_4. execute ( string_4 ) ; var_5 = null ; var_6 = null ; var_7 = var_8 ; method_4 ( var_9 ) ; if ( var_1 ) { method_5 ( var_9 ) ; } } } }

************

************
tgt: long method_1 ( java.util.hashset < java.lang.string > var_1 , java.util.hashset < java.lang.string > var_2 ) { long var_3 = 0 ; for ( java.lang.string var_4 : var_1 ) var_3 ^= var_5 . get ( var_4 ) ; for ( java.lang.string var_6 : var_2 ) var_3 ^= var_7 . get ( var_6 ) ; return var_3 ; }
[0]: private type_1 < type_2 > method_1 ( ) { var_1 = new type_1 < > ( ) ; for ( java.lang.string var_2 : var_3 ) { for ( int value : var_4 ) { var_1. add ( new type_2 ( value, var_2 ) ) ; } } method_2 ( ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = type_2 . method_2 ( string_1 , var_3 . method_3 ( ) ) ; if ( ( var_2 != null ) && ( ( var_2 . trim ( ) . length ( ) ) > 0 ) ) { var_3 . method_4 ( var_2 ) ; type_3 . method_5 ( ) . method_6 ( var_4 , var_2 , null ) ; type_4 . method_7 ( ) ; } }
[0]: public void method_1 ( ) { if ( this. var_1 ) { java.util.arraylist < type_1 > var_2 = var_3. get ( var_4 ) ; var_5 = ( ( var_5 ) + 1 ) % ( var_2. size ( ) ) ; type_2 var_6 = this. method_2 ( ). method_3 ( this. method_4 ( ), this. method_5 ( ) ) ; this. method_6 ( var_6 ) ; type_3. method_7 ( true ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.system.out.println ( string_1 ) ; android.content.intent i = new android.content.intent ( ) ; i . method_2 ( this . getstring ( var_3 ) , var_4 . method_3 ( ) . method_4 ( ) ) ; this . method_5 ( var_5 , i ) ; this . method_6 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( this. var_2. method_2 ( var_1. getname ( ) ) ) { var_3. method_3 ( string_1, var_1. getname ( ) ) ; return false ; } else { this. var_2. put ( var_1. method_4 ( ), var_1 ) ; var_3. info ( string_2, var_1 ) ; var_1. start ( ) ; return true ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; type_2 var_3 = var_1 ; type_2 var_4 = new type_2 ( ) ; while ( var_3 . method_2 ( var_4 ) ) { var_2 . add ( var_5 . method_3 ( var_3 ) ) ; var_3 = var_3 . method_4 ( ( ( int ) ( ( ( java.lang.math.random ( ) ) * int_1 ) * ( var_6 ) ) ) ) ; } return var_2 ; }
[0]: private void method_1 ( ) { type_1 var_1 = method_2 ( var_2 ) ; var_3 = new type_2 ( this, var_4, new java.util.arraylist < type_3 > ( ) ) ; var_1. method_3 ( var_3 ) ; var_1. method_4 ( new type_4 ( ) { public void method_5 ( type_5 <? > var_5, android.view.view view, int position, long id ) { type_6. method_6 ( var_6 this, var_3. method_7 ( position ) ) ; } } ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string index , java.lang.string type , java.lang.string id , java.lang.object var_1 ) { type_1 result = new type_1 ( ) ; try { java.lang.object var_2 = var_3 . index ( index , type , id , var_1 ) ; result . method_3 ( var_2 ) ; } catch ( java.lang.exception var_4 ) { type_3 . error ( var_4 . method_4 ( ) , var_4 ) ; result . error ( var_4 ) ; } return result ; }
[0]: public type_1 method_1 ( int i, type_2 var_1, type_3 var_2 ) throws type_4 { type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( var_1. getint ( string_1 ) ) ; var_3. method_3 ( var_1. getint ( string_2 ) ) ; return var_3 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.lang.string name , java.lang.string value ) { final type_3 var_3 = new type_3 ( name , value ) ; if ( var_1 . method_2 ( ) . isempty ( ) ) { var_3 . method_3 ( string_1 ) ; } else { var_3 . method_3 ( var_1 . method_2 ( ) ) ; } var_3 . method_4 ( java.lang.integer.parseint ( var_4 . method_5 ( var_5 ) ) ) ; this . method_1 ( var_1 , var_2 , var_3 ) ; }
[0]: private java.util.list < type_1 > method_1 ( type_1 var_1, type_1 var_2, type_1 var_3, type_1 var_4, type_1 var_5 ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; list. add ( var_1 ) ; list. add ( var_2 ) ; list. add ( var_3 ) ; list. add ( var_4 ) ; list. add ( var_5 ) ; return list ; }

************

************
tgt: protected void method_1 ( type_1 keys ) { super . method_1 ( keys ) ; if ( keys == null ) { return ; } type_2 context = type_3 . getcontext ( ) ; android.content.intent var_1 = new android.content.intent ( context , var_2 class ) ; var_1 . method_2 ( string_1 , method_3 ( ) ) ; var_1 . method_2 ( string_2 , keys ) ; var_1 . method_2 ( string_3 , var_3 ) ; context . method_4 ( var_1 ) ; }
[0]: private void method_1 ( final type_1 var_1, final int position ) { method_2 ( var_1 ) ; method_3 ( var_1, position ) ; method_4 ( var_1, position ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( ( ( var_1. method_9 ( ) ) == 0 ) ) ; method_10 ( var_1. method_11 ( ) ) ; method_12 ( ) ; method_13 ( var_1, position ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.lang.object item , android.view.view view , int position ) { var_2 . method_3 ( var_3 . method_4 ( ) . get ( var_4 ) . method_5 ( ) , var_5 . get ( position ) . method_6 ( ) ) ; var_1 . method_7 ( ) ; }
[0]: public void method_1 ( ) { type_1 < type_2 >. var_1 < type_2 > var_2 ; type_1 < type_2 >. var_1 < type_2 > var_3 ; var_3 = var_4 ; while ( var_3!= null ) { var_2 = var_3 ; var_3 = var_5 ; var_2. method_2 ( ) ; } var_4 = var_6 = null ; }

************

************
tgt: void method_1 ( java.lang.string pattern ) { type_1 temp = var_1 ; while ( ( ( temp . getvalue ( ) ) != pattern ) || ( temp != ( var_2 ) ) ) { temp = temp . method_2 ( ) ; } if ( ( temp . getvalue ( ) ) == pattern ) { var_2 = temp ; } else { java.lang.system.out.println ( ( ( string_1 + pattern ) + string_2 ) ) ; } }
[0]: private boolean method_1 ( final type_1 var_1, final type_1 var_2 ) { if (! ( ( var_1. method_2 ( ) ) && ( var_2. method_2 ( ) ) ) ) return false ; return var_3. method_1 ( var_1. method_3 ( ), var_2. method_3 ( ) ) ; }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj == null ) return false ; if ( obj == ( this ) ) return true ; if ( ( obj . getclass ( ) ) == ( this . getclass ( ) ) ) { return ( this . id ) == ( ( ( type_1 ) ( obj ) ) . getid ( ) ) ; } return false ; }
[0]: public type_1 method_1 ( java.lang.string var_1, int var_2 ) { type_2 var_3 = method_2 ( ) ; try { return type_3. method_1 ( var_3, var_1, var_2 ) ; } catch ( java.lang.exception var_4 ) { throw new type_4 ( string_1, var_5, string_2, ( string_3 + var_2 ), var_4 ) ; } finally { type_5. method_3 ( var_3 ) ; } }

************

************
tgt: public void method_1 ( int var_1 ) { type_1 var_2 = var_3 . get ( var_1 ) ; var_3 . remove ( var_1 ) ; var_4 = var_3 . size ( ) ; java.lang.system.out.print ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) ) ; var_6 . get ( var_7 ) . method_2 ( var_2 , ( ( var_5 ) - ( var_7 ) ) ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, long var_2, long var_3, long var_4, boolean var_5, boolean var_6 ) throws java.lang.exception { int var_7 ; try ( type_1 var_8 = var_9. method_2 ( ) ) { java.lang.string var_10 = string_1 ; type_2 result = var_9. method_3 ( var_10, type_3. method_4 ( var_2, var_3, var_4 ) ) ; var_7 = result. method_5 ( ). method_6 ( ). method_7 ( ) ; var_8. method_8 ( ) ; } return var_7 > 0 ; }

************

************
tgt: public static int method_1 ( type_1 var_1 , java.lang.string path ) { if ( ( var_2 ) == null ) { var_2 = type_2 . method_2 ( var_3 class , string_1 , new java.lang.class [ ] { var_4 . string class } ) ; } if ( ( var_2 ) == null ) return 0 ; java.lang.integer var_5 = type_2 . method_3 ( var_2 , var_1 , path ) ; if ( var_5 == null ) return 0 ; return var_5 ; }
[0]: private boolean method_1 ( java.util.list < type_1 > var_1 ) { boolean var_2 = false ; for ( type_1 var_3 : var_1 ) { for ( type_2 var_4 : var_3. method_2 ( ) ) { if ( var_4. method_3 ( ). equals ( string_1 ) ) { var_2 = true ; break ; } } } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; if ( method_3 ( ) . method_4 ( var_2 ) ) { method_5 ( method_3 ( ) . getstring ( var_2 ) ) ; type_2 var_3 = this . getactivity ( ) ; } else { method_5 ( getactivity ( ) . getintent ( ) . method_6 ( var_2 ) ) ; } }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_3 < type_2 > response ) { java.util.list < type_4 > var_2 = response. method_2 ( ). method_3 ( ) ; var_3. method_4 ( new type_5 ( var_2, var_4, method_5 ( ) ) ) ; type_6. method_6 ( var_5, ( string_1 + ( var_2. size ( ) ) ) ) ; }

************

************
tgt: private boolean method_1 ( type_1 array ) { try { type_2 var_1 = array . get ( 0 ) ; if ( ( var_1 . method_2 ( string_1 ) . getboolean ( string_2 ) ) == false ) { return false ; } } catch ( java.lang.exception var_2 ) { return true ; } return true ; }
[0]: public < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1, type_2... var_2 ) { type_3 var_3 = new type_3 ( ) ; var_3. method_2 ( ). put ( var_1, 0 ) ; var_3. method_3 ( var_4 ) ; return method_4 ( var_1, var_3, var_2 ) ; }

************

************
tgt: public int compareto ( type_1 var_1 ) { if ( ( this . var_2 ) > ( var_1 . method_1 ( ) ) ) return - 1 ; if ( ( this . var_2 ) < ( var_1 . method_1 ( ) ) ) return 1 ; return 0 ; }
[0]: public void method_1 ( java.lang.object... args ) { java.lang.string var_1 = ( ( java.lang.string ) ( args [ 0 ] ) ) ; if ( var_1. equals ( string_1 ) ) { } else { var_2. method_2 ( string_2, var_1, var_3 ) ; var_2. method_3 ( var_1, var_4 ) ; var_2. method_2 ( string_3, var_3, int_1 ) ; } type_1. method_4 ( string_4, var_1 ) ; }

************

************
tgt: private java.lang.string method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ) ; type_2 var_3 = var_1 . method_3 ( var_1 . method_4 ( new type_3 ( ) , true ) ) ; return java.lang.string . method_5 ( var_3 . method_1 ( ) ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = var_1. getvalue ( var_3 class ) ; var_4 = var_2. method_2 ( ) ; var_5 = ( var_2. method_3 ( ) ) / ( type_2. method_4 ( var_2. method_5 ( ) ) ) ; var_6 = var_2. method_6 ( ) ; var_7 = var_2. method_7 ( ) ; var_8 = var_2. method_8 ( ) ; var_9 = var_2. method_9 ( ) ; method_10 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = var_1 . method_2 ( ) ; var_3 . method_3 ( true ) ; type_4 . method_4 ( ( ( var_3 . method_5 ( ) ) + 1 ) , int_1 , var_3 , var_2 , var_1 ) ; var_3 . method_6 ( int_2 ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { int [ ] n = new int [ ] { int_1, int_2, int_3, 1, int_4, int_5 } ; java.lang.system.out.println ( type_1. tostring ( n ) ) ; type_2. method_1 ( n ) ; java.lang.system.out.println ( type_1. tostring ( n ) ) ; }

************

************
tgt: protected void method_1 ( int x ) { var_1 = true ; var_2 = x ; if ( ( var_2 ) < ( this . method_2 ( ) ) ) { var_3 = false ; var_4 = true ; var_5 = false ; } else if ( ( var_2 ) > ( this . method_2 ( ) ) ) { var_3 = true ; var_4 = false ; var_5 = true ; } }
[0]: private void method_1 ( int x, int y ) { try { var_1 = true ; type_1 var_2 = type_2. method_2 ( int_1 ) ; type_3 var_3 = ( ( type_3 ) ( var_2. method_3 ( string_1 ) ) ) ; var_4 = new type_4 ( x, y ) ; var_3. method_4 ( var_4 ) ; } catch ( type_5 | type_6 var_5 ) { java.util.logging.logger.getlogger ( var_6 class. getname ( ) ). method_5 ( var_7, null, var_5 ) ; } }

************

************
tgt: public void method_1 ( float var_1 ) { if ( var_2 . method_2 ( ) ) { var_3 . method_3 ( new type_1 ( var_3 ) ) ; method_4 ( ) ; } var_4 . method_5 ( 0 , 0 , 0 , 1 ) ; var_4 . method_6 ( var_5 ) ; var_6 . method_7 ( ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { this. var_3 = var_2 ; var_4 = ( ( type_3 ) ( method_2 ( var_5 ) ) ) ; if ( ( var_4 )!= null ) { var_2. method_4 ( new type_5 ( new type_6 ( var_4, var_6 ) ) ) ; var_4. method_5 ( var_2, var_6 ) ; type_4. method_3 ( string_1, string_3 ) ; } }

************

************
tgt: public static void method_1 ( ) { if ( ( type_1 . method_4 ( ) ) != null ) { if ( type_1 . method_3 ( ) ) { ( ( type_2 ) ( type_1 . method_4 ( ) . method_5 ( ) ) ) . method_6 ( ) ; } else { ( ( type_3 ) ( type_1 . method_4 ( ) . method_5 ( ) ) ) . method_6 ( ) ; } } }
[0]: private void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. get ( var_1. name ) ; if ( var_2!= null ) { var_2. method_2 ( ) ; var_3. remove ( var_1. name ) ; java.lang.object token = method_3 ( var_2 ) ; var_4. remove ( token ) ; var_5. remove ( token ) ; type_3. method_4 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( final type_1 var_1 ) { if ( var_1 == null ) return string_1 ; if ( var_2 . equals ( var_1 . method_2 ( ) ) ) return var_3 ; final java.lang.string name = var_4 . get ( var_1 . method_2 ( ) ) ; if ( name != null ) return name ; final type_2 var_5 = method_3 ( var_1 . method_2 ( ) , true ) ; if ( var_5 != null ) return var_5 . field ( "name" ) ; return string_2 + ( var_1 . method_2 ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { for ( type_1 var_2 : var_3 ) { if ( ( var_2. method_2 ( name ) )!= null ) { var_4. remove ( ) ; } } var_5. method_3 ( var_5. method_4 ( ), name ) ; var_5. method_3 ( name, var_5. method_4 ( ) ) ; var_6. method_5 ( var_7 ) ; if ( ( var_8 )!= null ) { var_8. remove ( ) ; } } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ! ( var_2 ) ) { var_2 = true ; type_1 var_3 = type_2 . get ( show . gettext ( ) . tostring ( ) ) ; if ( var_3 != null ) { show . settext ( var_3 . tostring ( ) ) ; show . method_2 ( var_4 ) ; } } }
[0]: private type_1 method_1 ( java.util.map < java.lang.string, type_2 > data ) { type_3 var_1 = var_2. method_2 ( ) ; java.lang.string name = var_1. getname ( ) ; if ( data. method_3 ( name ) ) { type_2 var_3 = data. get ( name ) ; if ( ( var_4. length ) >= ( var_1. method_4 ( ) ) ) { return var_4 [ var_1. method_4 ( ) ] ; } } return null ; }

************

************
tgt: public final type_1 < type_2 > method_1 ( type_3 var_1 ) { type_4 . method_2 ( var_1 , string_1 ) ; return type_1 . method_3 ( new type_5 < type_2 > ( this , type_6 . method_4 ( ) , type_6 . method_4 ( ) , type_6 . method_4 ( ) , var_1 , var_3 , type_6 . method_4 ( ) , var_4 , var_3 ) ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( string_1 ) ; var_1. method_3 ( string_2 ) ; var_1. method_2 ( string_3 ) ; var_1. method_2 ( string_2 ) ; type_1. method_4 ( var_2 ). method_5 ( string_2 ) ; assert var_1. method_6 ( ) ; type_1. method_4 ( var_3, method_7 ( int_1 ) ). method_8 ( var_4 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int var_2 , int to ) { for ( int i = 0 ; i != ( var_1 . method_2 ( ) ) ; ++ i ) { var_1 . get ( i ) . method_1 ( var_2 , to ) ; } }
[0]: private void init ( type_1 var_1 ) { type_2. method_1 ( var_2, ( string_1 + ( getintent ( ) ) ) ) ; method_2 ( ) ; if ( var_3 ) { if ( var_4 ) { method_3 ( ) ; } } else if (! ( method_4 ( ) ) ) { method_5 ( ) ; } var_1. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { android.content.intent intent = new android.content.intent ( method_2 ( ) , var_1 class ) ; intent . method_3 ( string_1 , var_2 ) ; intent . method_3 ( string_2 , 1 ) ; intent . method_3 ( string_3 , this . method_4 ( ) ) ; this . method_6 ( ) ; method_5 ( intent ) ; }
[0]: public void method_1 ( type_1 var_1, java.util.iterator < type_1 > var_2, type_2 < type_1, type_3 > var_3, type_4 var_4 ) throws java.io.ioexception { type_3 info = new type_3 ( ) ; long var_5 = var_4. method_2 ( var_6 ). getvalue ( ) ; info. method_3 ( ( 1.0 / ( ( double ) ( var_5 ) ) ) ) ; while ( var_2. method_4 ( ) ) info. method_5 ( var_2. method_6 ( ). tostring ( ) ) ; var_3. method_7 ( var_1, info ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) ; type_3 var_2 = new type_3 ( var_1 ) ; var_1 . method_3 ( this . var_3 ) ; var_1 . method_3 ( this . var_4 ) ; var_2 . method_4 ( this . var_5 ) ; }
[0]: protected java.lang.void method_1 ( java.lang.integer... params ) { int time = params [ 0 ] ; while ( time > 0 ) { try { java.lang.thread. method_2 ( int_1 ) ; } catch ( type_1 var_1 ) { } time -- ; type_2. method_3 ( string_1, ( string_2 + time ) ) ; } method_4 ( ) ; return null ; } }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { boolean var_2 = false ; for ( int i = 1 ; i < ( var_3 . length ) ; i ++ ) { if ( var_1 . contains ( var_3 [ i ] ) ) { var_2 = true ; break ; } } return var_2 ; }
[0]: private double method_1 ( java.util.date [ ] var_1, double [ ] var_2, int var_3, type_1 < java.util.date > var_4 ) { double sum = 0 ; int count = 0 ; for ( int var_5 = var_3 ; var_5 < ( var_2. length ) ; var_5 ++ ) { if (! ( var_4. method_2 ( var_1 [ var_5 ] ) ) ) continue ; sum += var_2 [ var_5 ] ; count ++ ; } return sum / count ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 , boolean var_2 , type_2 < java.lang.void > var_3 ) { if ( ( var_3 . method_2 ( ) . method_3 ( ) ) != ( var_4 ) ) { var_1 . method_4 ( ) ; } else if ( ! ( var_3 . method_2 ( ) . method_5 ( string_1 ) ) ) { var_2 = true ; } return var_2 ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; if ( ( ( type_3. method_4 ( this, var_5 ) )!= ( var_6 ) ) && ( ( type_3. method_4 ( this, var_7 ) )!= ( var_6 ) ) ) { return ; } var_3. method_5 ( var_8, 0, 0, this ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.integer var_1 = ( ( var_2 ) * int_1 ) + ( var_3 ) ; java.lang.integer var_4 = 0 ; if ( ( var_5 ) != null ) { var_4 = ( var_6 ) + ( var_5 [ var_1 ] . var_7 ) ; } java.lang.boolean var_8 = var_9 [ var_1 ] . method_2 ( var_4 , var_10 , context ) ; var_11 . method_3 ( ) ; if ( var_8 ) { method_4 ( ) ; } }
[0]: public void method_1 ( java.lang.object... var_1 ) { type_1 var_2 = new type_1 ( ( ( java.lang.string ) ( var_1 [ 0 ] ) ) ) ; var_3 = var_2. method_2 ( ) ; var_4 = var_2. method_3 ( ) ; var_5 = var_2. method_4 ( ) ; var_6 = true ; }

************

************
tgt: public void method_1 ( ) { if ( method_2 ( ) ) { if ( ( method_5 ( ) ) != null ) { var_1 . method_4 ( this , method_5 ( ) ) ; } else { var_1 . method_1 ( this , var_2 ) ; var_3 = true ; var_4 . method_1 ( this , var_5 ) ; } } }
[0]: public void method_1 ( int var_1 ) { type_1 var_2 = var_3. get ( var_1 ) ; if ( var_1 < 1 ) return ; if ( var_2 == null ) { type_1. method_2 ( var_1 ). delete ( ) ; } else { var_2. method_1 ( ) ; } }

************

************
tgt: public int method_1 ( type_1 var_1 ) { int result = 0 ; if ( ( ( method_3 ( ) . method_4 ( var_1 ) ) != null ) && ( var_2 . method_2 ( method_3 ( ) . method_4 ( var_1 ) ) ) ) { for ( type_2 var_3 : var_2 . get ( method_3 ( ) . method_4 ( var_1 ) ) ) { if ( var_3 . method_5 ( ) . equals ( var_1 ) ) { result ++ ; } } } return result ; }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { setvalue ( null ) ; } else { type_1 file = ( ( type_1 ) ( getvalue ( ) ) ) ; file. method_2 ( var_1 ) ; setvalue ( file ) ; } }

************

************
tgt: static void method_1 ( java.lang.object var_1 , type_1 method , java.lang.object ... args ) { try { if ( method == null ) return ; method . method_2 ( var_1 , args ) ; } catch ( type_2 var_2 ) { var_2 . method_3 ( ) ; } catch ( type_3 var_2 ) { var_2 . method_3 ( ) ; } }
[0]: public static void method_1 ( ) { type_1 var_1 = type_2. get ( string_1 ) ; try { java.util.list < java.lang.string > var_2 = type_3. method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { java.lang.system.out.println ( ( ( ( i + 1 ) + string_2 ) + ( var_2. get ( i ) ) ) ) ; } } catch ( java.io.ioexception var_3 ) { var_3. method_3 ( ) ; } }

************

************
tgt: public void init ( ) { var_1 = var_2 . method_1 ( ) ; var_3 = var_4 . method_1 ( ) ; var_5 = var_6 . method_1 ( ) ; if ( ! ( var_3 . isempty ( ) ) ) { var_7 = var_3 . get ( 0 ) . getid ( ) ; } if ( ! ( var_5 . isempty ( ) ) ) { var_8 = var_5 . get ( 0 ) . getid ( ) ; } }
[0]: public static void method_1 ( android.content.context context, java.lang.string message, type_1 var_1 ) { type_2 var_2 = new type_2 ( context ) ; var_2. method_2 ( message ). method_3 ( var_3, ( var_1 == null? new type_1 ( ) { public void method_4 ( type_3 var_4, int var_5 ) { var_4. method_5 ( ) ; } } : var_1 ) ) ; var_2. method_6 ( ). show ( ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string item ) { boolean var_1 = false ; java.lang.string name = item ; for ( int num = 0 ; num < int_1 ; num ++ ) { if ( var_2 [ num ] [ 0 ] . tolowercase ( ) . equals ( name . tolowercase ( ) ) ) { var_1 = true ; } } return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; for ( int i = 0 ; i < ( var_2. method_2 ( ). length ) ; i ++ ) { if ( var_2. method_2 ( ) [ i ]. equals ( var_1. method_3 ( ) ) ) { type_3. info ( string_1 ) ; return true ; } } type_3. info ( string_2 ) ; return false ; }

************

************
tgt: public int method_1 ( int var_1 , int var_2 ) { if ( var_1 <= var_2 ) return 1 ; return ( ( int ) ( type_1 . method_2 ( ( ( ( double ) ( var_1 ) ) / ( var_2 - int_2 ) ) ) ) ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = var_2. method_2 ( ) ; if ( ( ( var_3. size ( ) ) > 0 ) && ( ( var_3. method_2 ( ). var_4 ) == var_1 ) ) { var_3. method_1 ( ) ; } }

************

************
tgt: private java.lang.string [ ] method_1 ( ) { java.lang.string [ ] var_1 = new java.lang.string [ this . var_2 . size ( ) ] ; for ( int i = 0 ; i < ( this . var_2 . size ( ) ) ; i ++ ) { type_1 temp = this . var_2 . get ( i ) ; java.lang.string var_3 = var_4 ; var_1 [ i ] = ( ( temp . name ) + string_1 ) + var_3 ; } return var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) { java.util.hashmap < java.lang.string, java.lang.object > parameters = new java.util.hashmap < > ( ) ; parameters. put ( var_3, var_1 ) ; var_2. method_2 ( new type_2 ( var_4, parameters ) ) ; } else { var_5. method_1 ( var_1 ) ; method_3 ( ) ; } }

************

************
tgt: public < type_1 > type_1 query ( java.lang.class < type_1 > var_1 ) { java.lang.object var_2 = type_2 . method_1 ( var_1 , var_3 ) ; if ( var_2 == null ) { if ( var_4 . method_2 ( var_1 ) ) return type_2 . method_3 ( var_1 , var_4 . get ( var_1 ) ) ; var_2 = var_5 . method_3 ( var_1 , var_3 ) ; var_4 . put ( var_1 , var_2 ) ; } return type_2 . method_3 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = var_3. gettext ( ). tostring ( ) ; if ( ( var_2!= null ) && ( var_2!= string_1 ) ) { var_4. add ( var_2 ) ; var_3. settext ( string_1 ) ; } }

************

************
tgt: public static java.lang.string method_1 ( java.lang.object obj , type_1 var_1 ) { assert var_1 instanceof type_2 ; assert obj instanceof type_4 ; if ( ( ( type_2 ) ( var_1 ) ) . method_2 ( ) ) { return type_3 . method_3 ( var_2 . method_4 ( ( ( type_4 ) ( obj ) ) ) ) ; } else { return type_3 . method_3 ( var_3 . method_4 ( ( ( type_4 ) ( obj ) ) ) ) ; } }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, int length ) { if ( length == 0 ) return string_1 ; else if ( length > 0 ) return var_1. substring ( ( ( var_1. length ( ) ) - length ), var_1. length ( ) ) ; else { return var_1. substring ( ( - length ), var_1. length ( ) ) ; } }

************

************
tgt: public static boolean contains ( java.lang.string target , java.lang.string [ ] var_1 , boolean var_2 ) { for ( java.lang.string var_3 : var_1 ) { var_3 = var_3 . tolowercase ( ) ; if ( var_2 ? target . equals ( var_3 ) : target . contains ( var_3 ) ) { return true ; } } return false ; }
[0]: public void method_1 ( type_1 buf ) { type_2 var_1 = this. var_2 [ 0 ]. method_2 ( ) ; int var_3 = - 1 ; int var_4 = - 1 ; if ( var_1!= null ) { var_3 = var_5 ; var_4 = var_1. method_3 ( ) ; } buf. method_4 ( var_3 ) ; buf. method_4 ( var_4 ) ; buf. method_5 ( var_6 ) ; }

************

************
tgt: public java.io.inputstream method_1 ( type_1 path ) throws type_2 { java.lang.string filepath = method_2 ( path . tostring ( ) ) ; method_3 ( path ) ; type_3 var_1 = method_4 ( path ) ; type_4 method = new type_4 ( filepath ) ; try { var_1 . method_5 ( method ) ; return method . method_6 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_2 ( var_4 . getname ( ) , ( string_1 + filepath ) , var_3 ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1 ) >= ( var_2 ) ) { type_1 var_3 = method_2 ( ) ; type_2. method_3 ( this, var_3, string_3, var_4, var_5, null, new java.lang.object [ ] { }, null ) ; return ; } method_4 ( ) ; } }

************

************
tgt: public type_1 method_1 ( final int offset , final int length ) throws type_2 { final int var_1 = offset - ( this . length ( ) ) ; final int var_2 = var_1 + length ; if ( var_1 >= 0 ) return array . method_1 ( var_1 , length ) ; if ( var_2 <= 0 ) return super . method_1 ( offset , length ) ; return super . method_1 ( offset , ( - var_1 ) ) . method_2 ( array . method_1 ( 0 , var_2 ) ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { var_1 = type_1. method_2 ( new type_2 ( ) ) ; var_2 = new java.util.arraylist < type_3 > ( ) ; method_3 ( var_3 ). method_4 ( var_1 ). method_5 ( ) ; method_3 ( var_4 ). method_4 ( var_3 ). method_6 ( var_5 ) ; }

************

************
tgt: public static int [ ] method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { return new int [ 0 ] ; } java.lang.string [ ] var_2 = var_1 . trim ( ) . split ( string_1 ) ; int [ ] var_3 = new int [ var_2 . length ] ; for ( int i = 0 ; i < ( var_2 . length ) ; i ++ ) { var_3 [ i ] = java.lang.integer.parseint ( var_2 [ i ] ) ; } return var_3 ; }
[0]: public static java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; var_1. add ( new type_1 ( type_2. method_2 ( ), false, var_2 ) ) ; var_1. add ( new type_1 ( type_3. method_2 ( ), false, var_2 ) ) ; return var_1 ; }

************

************
tgt: private void method_1 ( ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( ) ; if ( var_1 . isempty ( ) ) { method_3 ( string_1 , string_2 ) ; } else if ( var_1 . get ( 0 ) . method_4 ( ) . isempty ( ) ) { method_3 ( string_1 , string_3 ) ; } else { var_2 . method_5 ( new type_2 ( ) { public void method_6 ( ) { method_7 ( ) ; } } ) ; } }
[0]: private boolean method_1 ( int position ) { if ( position == 0 ) { return true ; } int var_1 = position - 1 ; return ( ( var_2. method_2 ( position ) )!= ( var_3 ) ) && ( ( var_2. method_2 ( position ) )!= ( var_2. method_2 ( var_1 ) ) ) ; }

************

************
tgt: private static synchronized void method_1 ( ) { int select = ( var_1 . method_2 ( 1 ) ) % ( var_2 . length ) ; int var_3 = ( ( var_4 ) == 0 ) ? 0 : ( var_2 [ select ] ) - ( ( int ) ( ( type_1 . method_3 ( ) ) - ( var_4 ) ) ) ; if ( var_3 > 0 ) { try { java.lang.thread . method_1 ( var_3 ) ; } catch ( type_2 var_5 ) { } } }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) { type_3 type = var_1. method_2 ( ) ; type_4. method_3 ( ( ( ( ( string_1 + ( type. tostring ( ) ) ) + string_2 ) + ( var_2. getid ( ). tostring ( ) ) ) + string_3 ) ) ; return this. method_4 ( type, var_2. getid ( ) ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_1 . method_2 ( var_2 ) ; int x = var_3 ; int y = ( method_3 ( ) ) - ( var_4 ) ; for ( int b : var_5 ) { int height = ( ( int ) ( method_4 ( b ) ) ) ; y -= height ; var_1 . method_5 ( x , y , var_6 , height , true ) ; x += var_6 ; y = ( method_3 ( ) ) - ( var_4 ) ; } }
[0]: public java.util.arraylist < type_1 > list ( int var_1, java.lang.string var_2 ) { if ( ( var_1 == 0 ) && ( var_2. equals ( string_1 ) ) ) { return type_2. method_1 ( ) ; } else if (! ( var_2. equals ( string_1 ) ) ) { var_1 = type_3. method_2 ( var_2 ). method_3 ( ) ; return type_2. method_4 ( var_1 ) ; } else { return null ; } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; method_3 ( int_1 , null ) ; method_4 ( false ) ; type_1 . assertequals ( ( string_1 + ( ( ( ( ( string_2 + string_3 ) + string_4 ) + string_5 ) + string_6 ) + string_7 ) ) , output . method_5 ( ) ) ; }
[0]: protected void method_1 ( final java.lang.boolean var_1 ) { var_2 = null ; method_2 ( false ) ; if ( var_1 ) { type_1. method_3 ( getcontext ( ) ) ; type_2. method_4 ( getcontext ( ) ) ; type_3. method_5 ( getcontext ( ), false ) ; if ( ( getactivity ( ) )!= null ) { getactivity ( ). method_6 ( ) ; } } else { var_3. method_7 ( getstring ( var_4 ) ) ; var_3. method_8 ( ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 parameters ) throws type_3 { type_4 var_1 = method_2 ( string_1 ) ; if ( method_4 ( parameters , var_4 class ) ) { parameters . method_5 ( var_1 , var_4 class ) ; } var_1 = parameters . method_6 ( string_1 , var_1 ) ; parameters . method_7 ( var_1 ) ; return ( ( java.util.list < type_1 > ) ( var_1 . list ( ) ) ) ; }
[0]: public void method_1 ( java.lang.string filename, java.lang.long start, java.lang.long end ) { type_1 file = method_2 ( filename ) ; if ( ( file!= null ) && ( file. method_3 ( ) ) ) { type_2. method_4 ( file, start. intvalue ( ), ( ( end. intvalue ( ) ) - ( start. intvalue ( ) ) ), true ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { double [ ] var_2 = new double [ ] { 1.0 , 1.0 , 1.0 } ; double [ ] var_3 = new double [ ] { 0.0 , 0.0 , 0.0 } ; method_2 ( var_1 , var_2 , var_3 ) ; }
[0]: private boolean method_1 ( type_1 event ) { type_2 target = event. method_2 ( ) ; if ( type_3. method_3 ( target ) ) { return ( var_1. method_4 ( ). method_5 ( type_3. method_6 ( target ) ) ) || ( var_2. method_4 ( ). method_5 ( type_3. method_6 ( target ) ) ) ; } return false ; }

************

************
tgt: protected static type_1 method_1 ( type_2 b , java.lang.string var_1 ) { type_1 buffer = type_3 . getview ( b ) ; if ( buffer != null ) { return buffer ; } else { throw type_4 . method_2 ( java.lang.string.format ( var_1 , b . gettype ( ) . method_3 ( ) ) ) ; } }
[0]: static void method_1 ( type_1 var_1, java.lang.string var_2 ) { type_2 var_3 = var_1. method_2 ( var_4 class ). method_3 ( ) ; type_3 < type_4 > var_5 = var_3. method_4 ( ) ; var_1. method_5 ( ) ; type_4 var_6 = var_1. method_6 ( var_7 class, type_4. method_7 ( ) ) ; var_6. method_8 ( var_2 ) ; var_1. method_9 ( ) ; var_5. add ( var_6 ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { switch ( var_1 . tolowercase ( ) ) { case string_1 : return ( this . var_2 . method_2 ( ) ) > 0 ; case string_2 : return ( this . var_2 . method_3 ( ) ) < int_1 ; case string_3 : return ( this . var_2 . method_2 ( ) ) < int_1 ; case string_4 : return ( this . var_2 . method_3 ( ) ) > 0 ; default : return false ; } }
[0]: public boolean remove ( type_1 var_1, type_2 var_2, int var_3 ) { type_2 var_4 = var_1. method_1 ( var_3 ) ; if ( var_2. equals ( var_4 ) ) { var_1. method_2 ( ). remove ( var_3 ) ; this. method_3 ( var_1, false ) ; return true ; } else { java.lang.system.out.println ( ( ( ( string_1 + var_2 ) + ( var_4. getid ( ) ) ) + var_3 ) ) ; throw new type_3 ( string_2 ) ; } }

************

************
tgt: public type_1 method_1 ( ) throws java.io.ioexception { if ( ( type ) == ( var_1 ) ) type = var_2 ; assert ( type ) != ( var_3 ) ; for ( type_1 var_4 = var_5 . method_1 ( ) ; var_4 != null ; var_4 = var_5 . method_1 ( ) ) { if ( ( var_4 . method_2 ( ) ) > ( var_6 ) ) continue ; if ( ( type ) == ( var_7 ) ) { } return var_4 ; } return null ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 c = null ; try { c = var_2. method_2 ( var_3. method_1 ( var_1 ) ) ; if ( ( var_2. method_3 ( c. getid ( ) ) )!= null ) c. method_4 ( var_2. method_5 ( c. getid ( ) ) ) ; } catch ( type_2 var_4 ) { } return c ; }

************

************
tgt: private void method_1 ( int count ) { var_1 = count ; var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < count ; i ++ ) { type_1 var_3 = new type_1 ( this , i ) ; var_2 . add ( var_3 ) ; } }
[0]: public void method_1 ( type_1 event ) { var_1. method_2 ( var_2. gettext ( ), var_3. gettext ( ), var_4. gettext ( ), var_5, var_6. getid ( ), string_1, var_7. getid ( ), var_8. getid ( ), new type_2 < java.lang.void > ( ) { public void method_3 ( java.lang.void result ) { var_9 this. method_4 ( ) ; type_3. method_5 ( var_7. getid ( ) ) ; } public void method_6 ( java.lang.throwable var_10 ) { } } ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.lang.string var_2 = ( ( ( ( ( ( ( ( ( ( ( string_1 + ( var_3 ) ) + string_2 ) + ( var_4 ) ) + string_3 ) + ( var_5 ) ) + string_7 ) + ( var_6 ) ) + string_5 ) + ( var_7 ) ) + string_6 ) + ( var_8 ) ) + string_8 ; var_1 . method_2 ( var_2 ) ; }
[0]: private void method_1 ( int var_1 ) { try { boolean var_2 = var_3. method_2 ( type_1. method_3 ( this, var_1 ) ) ; if (! var_2 ) { type_2. method_4 ( var_4, string_1 ) ; } } catch ( type_3 var_5 ) { type_2. method_4 ( var_4, string_2, var_5 ) ; } }

************

************
tgt: public boolean method_1 ( long id ) { if ( ! ( var_1 . method_2 ( ) ) ) { type_1 . i ( var_2 , string_1 ) ; return false ; } android.content.intent intent = new android.content.intent ( context , var_3 class ) ; type_2 var_4 = type_2 . method_3 ( context , ( ( ( int ) ( id ) ) * int_1 ) , intent , var_5 ) ; if ( var_4 == null ) return true ; type_3 . method_4 ( var_1 , var_4 ) . method_5 ( this ) ; return true ; }
[0]: private boolean method_1 ( type_1 [ ] var_1 ) { if (! ( ( method_2 ( var_1 ) ) || ( method_3 ( var_1 ) ) ) ) { return false ; } if ( ( var_1. length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { type_1 var_2 = var_1 [ i ] ; if ( var_2. method_4 ( ) ) { return false ; } } return true ; } }

************

************
tgt: public java.util.date method_1 ( ) { if ( ( method_2 ( ) ) || ( method_3 ( ) ) ) { return null ; } return new java.util.date ( ( ( ( ( var_1 ) - ( ( type_1 . get ( var_1 ) ) * int_1 ) ) - int_2 ) / int_3 ) ) ; }
[0]: public void method_1 ( type_1 view, int var_1, int var_2, int var_3 ) { var_2 = var_2 + 1 ; java.lang.string var_4 = ( ( ( var_3 + string_1 ) + var_2 ) + string_1 ) + var_1 ; java.lang.string var_5 = var_6. remove ( var_7 ) ; if (! ( var_5. equals ( var_4 ) ) ) { var_8 = false ; } var_6. add ( var_7, var_4 ) ; type_2. method_2 ( getactivity ( ) ) ; }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_2 = new type_1 ( string_2 ) ; var_2 . method_2 ( string_3 ) ; var_2 . method_3 ( new type_3 ( ) { public void method_4 ( type_4 var_3 ) { var_4 . method_5 ( ) ; } } ) ; return var_2 ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.lang.exception { method_2 ( var_1 ) ; type_1 var_2 = type_2. method_3 ( ). var_3. method_4 ( var_1 ) ; if ( var_2 == null ) { throw new java.lang.exception ( ( ( string_1 + var_1 ) + string_2 ) ) ; } method_1 ( var_2 ) ; }

************

************
tgt: public java.lang.string method_1 ( java.lang.string to , java.lang.string var_1 , java.lang.string msg ) { type_1 var_2 = new type_1 ( ) ; var_2 . method_2 ( var_1 . trim ( ) . tolowercase ( ) ) ; var_2 . method_3 ( msg ) ; var_3 . method_4 ( to . tolowercase ( ) , var_2 ) ; return string_1 ; }
[0]: public int method_1 ( int position ) { int p = method_2 ( position ) ; if ( p == ( start ) ) return - 1 ; long value = ( ( ~ ( var_1 ) ) & ( var_2 ) ) < < ( int_1 - p ) ; return value == 0l? - 1 : ( position - 1 ) + ( java.lang.long. method_3 ( value ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { var_3 . method_2 ( var_1 ) ; if ( var_1 . contains ( string_1 ) ) { var_4 . method_3 ( var_1 ) ; } var_4 . method_2 ( var_2 ) ; if ( var_2 . contains ( string_1 ) ) { var_3 . method_3 ( var_2 ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { var_1 = new type_2 ( var_1. method_2 ( ) ) ; if ( var_2. get ( ) ) { return false ; } if (! ( var_3. method_3 ( var_1, this ) ) ) { var_4. set ( true ) ; method_4 ( ) ; return var_5. method_1 ( var_1 ) ; } return false ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . get ( var_1 ) ; if ( var_2 == null ) { type_3 . error ( ( ( string_1 + ( var_1 . method_2 ( ) ) ) + string_2 ) ) ; } else { var_2 . method_3 ( var_4 ) ; } }
[0]: public long method_1 ( long value ) { if ( value < ( start ) ) { return - 1 ; } long var_1 = value - ( var_2 ) ; long key = var_1 / ( var_3 ) ; if ( value > ( end ) ) { long var_4 = ( value - ( end ) ) / ( var_3 ) ; long var_5 = ( var_4 + 1 ) * ( var_3 ) ; start += var_5 ; end += var_5 ; var_6 = true ; var_7 += var_4 ; } return key ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { int length = var_1 . method_2 ( ) ; byte [ ] var_2 = new byte [ length ] ; var_1 . method_3 ( var_2 ) ; this . key = var_2 ; this . var_3 = var_1 . method_4 ( ) ; boolean var_4 = var_1 . method_5 ( ) ; if ( var_4 ) { this . var_5 = var_6 . method_6 ( var_1 , var_7 , var_8 , var_9 ) ; } else { this . var_5 = null ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; if ( var_2 ) type_2. method_2 ( this, string_1, var_3 ). show ( ) ; type_3 var_4 = ( ( type_3 ) ( var_5. method_3 ( ) ) ) ; int position = var_4. method_4 ( ) ; var_1. method_5 ( var_6, position ) ; var_1. method_6 ( var_7, ( ( java.util.arraylist <? extends type_4 > ) ( var_8 ) ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . i ( var_1 , string_1 ) ; if ( var_2 . method_2 ( ) ) { var_3 . method_3 ( var_4 , var_5 ) ; var_3 . method_4 ( var_9 ) ; var_2 . method_5 ( var_10 ) ; } else { type_1 . i ( var_1 , string_4 ) ; } var_2 . method_6 ( ) ; }
[0]: private void method_1 ( ) { android.view.view var_1 = method_2 ( ( ( method_3 ( ) ) - 1 ) ) ; var_1. method_4 ( null ) ; var_1. method_5 ( 0 ) ; var_1. method_6 ( 0 ) ; var_1. method_7 ( 0 ) ; method_8 ( var_1 ) ; var_2 = var_1 ; if ( ( ( method_3 ( ) ) <= 0 ) && ( ( var_3 )!= null ) ) { var_3. method_9 ( ) ; } }

************

************
tgt: public java.util.map < java.lang.string , java.lang.string > method_1 ( ) { java.util.map < java.lang.string , java.lang.string > var_1 = new java.util.hashmap < > ( ) ; var_1 . put ( var_4 , var_5 ) ; var_1 . put ( var_6 , var_7 ) ; var_1 . put ( var_8 , var_9 ) ; return var_1 ; }
[0]: public void execute ( ) throws java.lang.exception { java.lang.system.out.print ( string_1 ) ; var_1. method_1 ( ) ; java.lang.system.out.print ( var_2 ) ; try ( java.io.bufferedreader var_3 = new java.io.bufferedreader ( new type_1 ( var_4 ) ) ) { while (! ( method_2 ( var_3. method_3 ( ) ) ) ) { java.lang.system.out.print ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { if ( ( var_1 ) == null ) { java.lang.system.out.println ( string_1 ) ; return ; } type_1 var_2 = method_2 ( ) ; if ( ! ( method_3 ( ( string_2 + ( id ) ) ) ) ) { java.lang.system.out.println ( string_3 ) ; } var_1 . method_4 ( ) ; var_2 . method_5 ( ) ; }
[0]: public void method_1 ( ) { type_1 data = ( ( type_1 ) ( args [ 0 ] ) ) ; java.lang.string message ; try { message = data. getstring ( string_1 ) ; } catch ( type_2 var_1 ) { return ; } var_2. method_2 ( new type_3 ( var_3, var_4, message ) ) ; method_3 ( ) ; }

************

************
tgt: public int method_1 ( ) { int var_1 = 1 ; for ( java.util.iterator < type_1 > i = method_2 ( ) . iterator ( ) ; i . method_3 ( ) ; ) { type_2 b = i . method_4 ( ) . method_5 ( ) ; if ( b != null ) var_1 *= b . method_6 ( ) ; } return var_1 ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { ( ( type_1 ) ( var_1. method_2 ( 0 ) ) ). method_3 ( ) ; ( ( type_2 ) ( var_1. method_2 ( 1 ) ) ). method_4 ( ) ; ( ( type_2 ) ( var_1. method_5 ( 1 ) ) ). method_6 ( ) ; type_3. method_7 ( this. method_8 ( ), string_1 ) ; }

************

************
tgt: public void method_1 ( ) { var_1 = ( var_1 ) * ( var_2 ) ; var_3 . method_2 ( ( ( var_3 . method_6 ( ) ) * ( var_4 ) ) ) ; var_3 . method_4 ( ( ( var_3 . method_7 ( ) ) * ( var_2 ) ) ) ; var_3 = new type_1 ( var_3 . method_6 ( ) , var_3 . method_7 ( ) , var_1 ) ; var_5 = ( var_5 ) * ( var_4 ) ; var_6 = ( var_6 ) * ( var_2 ) ; }
[0]: public static void method_1 ( java.lang.string var_1, java.lang.string param, float value ) { if (! ( var_2. method_2 ( var_1 ) ) ) var_2. method_3 ( var_1, new type_1 ( ) ) ; type_1 var_3 = var_2. method_4 ( var_1 ) ; var_3. method_1 ( param, value ) ; var_2. method_3 ( param, value ) ; var_4 = true ; }

************

************
tgt: private void method_1 ( type_1 state , int var_1 , type_2 var_2 , java.util.map < java.lang.string , java.lang.string > var_3 , int var_4 ) { java.lang.string str = var_3 . get ( ( string_1 + var_1 ) ) ; if ( str == null ) { return ; } else { method_2 ( state , str , var_2 , var_4 ) ; } return ; }
[0]: public void method_1 ( int index, type_1 var_1, type_2 var_2 ) { int var_3 = var_1. method_2 ( ) ; float [ ] var_4 = type_3. method_3 ( var_2, var_3, 0 ) ; type_3. method_1 ( this, var_1, index, var_4 ) ; method_4 ( var_5, 1 ) ; }

************

************
tgt: public java.lang.object method_1 ( type_1 var_1 , type_2 context , type_3 var_2 , type_4 var_3 ) throws type_5 , type_6 { var_4 . method_2 ( ( ( ( string_1 + ( method_3 ( var_1 , context ) ) ) + string_2 ) + var_3 ) ) ; java.util.arraylist < type_7 > var_5 = method_4 ( var_6 , var_2 ) ; type_8 var_7 = var_8 . method_5 ( ) ; if ( var_5 != null ) { var_7 . method_6 ( ) . method_7 ( var_5 ) ; return var_7 ; } else { return null ; } }
[0]: private boolean method_1 ( type_1 var_1 ) { type_2. method_2 ( var_1, string_1 ) ; try { type_3. method_3 ( string_2, var_1 ) ; type_4 < type_5 < java.lang.void > > result = var_2. method_4 ( type_6. method_5 ( var_1 ) ) ; result. get ( ). method_6 ( ) ; return true ; } catch ( java.lang.exception var_3 ) { type_3. method_7 ( string_3, var_1 ) ; } return false ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( ) ; var_1 . append ( var_2 ) . append ( this . var_3 ) . append ( this . var_4 ) ; try { type_1 var_5 = type_1 . method_2 ( string_1 ) ; var_5 . update ( var_1 . tostring ( ) . method_4 ( ) ) ; this . var_6 = type_2 . method_5 ( var_5 . method_3 ( ) ) ; } catch ( type_3 var_7 ) { var_7 . method_6 ( ) ; } return var_6 ; }
[0]: public type_1 method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; ++ i ) { if (! ( var_2. get ( i ). method_1 ( ). getvalue ( ) ) ) { return new type_1 ( false ) ; } } return new type_1 ( true ) ; }

************

************
tgt: static type_1 method_1 ( type_2 var_1 , type_3 var_2 ) throws java.io.ioexception { type_4 var_3 = new type_4 ( var_1 ) ; if ( var_2 != null ) { var_3 . method_2 ( var_2 ) ; } type_5 index = type_5 . open ( new java.io.file ( var_4 ) . method_3 ( ) ) ; type_6 var_5 = new type_6 ( index , var_3 ) ; java.io.file var_6 = new java.io.file ( var_7 ) ; type_7 . method_4 ( var_5 , var_6 ) ; var_5 . method_5 ( ) ; return index ; }
[0]: private void method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( ). method_3 ( ) ; int var_3 = line. length ( ) ; java.lang.system.out.print ( string_1 ) ; line = java.lang.string.format ( string_2, var_4, var_5, ( var_1!= null? var_1 : string_3 ), ( ( status ) + ( var_6? string_4 : string_5 ) ) ) ; java.lang.system.out.print ( line ) ; for ( int i = line. length ( ) ; i <= var_3 ; i ++ ) { java.lang.system.out.print ( string_6 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != int_1 ) { method_2 ( ) ; if ( ( ( var_2 ) == false ) && ( ( method_3 ( ) ) != int_2 ) ) { if ( ( var_3 ) == 1 ) { i = ( i ) + 1 ; method_4 ( ( ( string_1 + ( ( i ) % int_1 ) ) + string_2 ) ) ; } } ( var_3 ) ++ ; method_5 ( ) ; } }
[0]: protected boolean method_1 ( int x, int y ) { if ( ( ( ( x >= 0 ) && ( x <= ( this. var_1 ) ) ) && ( y >= 0 ) ) && ( y <= ( this. height ) ) ) { return true ; } return false ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { for ( int i = 0 ; i < var_2 ; i ++ ) if ( var_1 < ( var_3 . size ( ) ) ) var_3 . remove ( var_1 ) ; type_1 . method_2 ( var_1 , var_2 ) ; type_1 . method_3 ( 0 , method_4 ( ) ) ; }
[0]: private boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { try { type_1. method_2 ( var_1, var_2 ) ; return true ; } catch ( type_2 var_3 ) { type_3. method_3 ( string_1, ( ( string_2 + var_1 ) + string_3 ) ) ; return false ; } catch ( java.lang.exception var_3 ) { type_3. method_3 ( string_4, var_3. method_4 ( ) ) ; return false ; } }

************

************
tgt: public static void main ( java.lang.string ... args ) throws type_1 { var_1 = new type_2 ( int_1 ) ; var_1 . start ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; while ( true ) { java.lang.thread . method_2 ( int_2 ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; var_5 = ( method_3 ( var_6 ) )!= null ; if ( ( var_5 ) && ( var_1!= null ) ) { method_5 ( ). method_6 ( ). replace ( var_6, new type_3 ( ) ). commit ( ) ; } }

************

************
tgt: public void method_1 ( ) throws java.io.ioexception { var_1 = type_1 . method_2 ( new java.io.file ( string_1 ) ) ; var_1 . step ( ) ; assertequals ( string_2 , var_1 . method_3 ( ) , 1 ) ; var_1 . step ( ) ; assertequals ( string_3 , var_1 . method_3 ( ) , int_1 ) ; var_1 . step ( ) ; assertequals ( string_4 , var_1 . method_3 ( ) , int_2 ) ; }
[0]: public android.view.view method_1 ( type_1 var_1, type_2 var_2, type_3 var_3 ) { view = var_1. method_2 ( var_4, var_2, false ) ; var_5 = view. method_3 ( var_6 ) ; var_7 = view. method_3 ( var_8 ) ; var_7. method_4 ( new type_4 ( getactivity ( ). method_5 ( ) ) ) ; var_9 = view. method_3 ( var_10 ) ; method_6 ( ) ; method_7 ( ) ; var_11. gettime ( ) ; return view ; }

************

************
tgt: public double method_1 ( ) { double var_1 ; long var_2 = 0 ; for ( int i = 0 ; i < ( var_3 . size ( ) ) ; i ++ ) { var_2 += var_3 . get ( i ) . method_2 ( ) ; } var_1 = var_2 / ( var_3 . size ( ) ) ; return var_1 ; }
[0]: private type_1 < type_2 > method_1 ( ) { return new type_1 < type_2 > ( ) { public void method_2 ( type_3 var_1 ) { } public void method_3 ( type_2 var_2 ) { method_4 ( var_2 ) ; var_3. add ( var_2 ) ; } public void method_5 ( java.lang.throwable var_4 ) { } public void method_6 ( ) { method_7 ( ) ; } } ; } ; }

************

************
tgt: private void method_1 ( type_1 event ) { type_2 var_1 = new type_2 ( var_2 , string_1 , var_3 , var_4 ) ; var_1 . method_2 ( string_2 ) ; type_3 < type_4 > result = var_1 . method_3 ( ) ; if ( ( result . method_4 ( ) ) && ( result . get ( ) . equals ( var_3 ) ) ) { if ( var_5 . method_5 ( ) ) { var_5 . method_7 ( ) ; type_5 . method_6 ( ) ; } else { var_5 . method_7 ( ) ; } } }
[0]: public int method_1 ( ) { java.lang.string var_1 = ( ( type_1 ) ( method_2 ( var_2 ) ) ). method_3 ( ) ; if (! ( type_2. isempty ( var_1 ) ) ) { return java.lang.integer.parseint ( var_1. substring ( 0, int_1 ) ) ; } else { return 0 ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { ( var_2 ) ++ ; if ( ( var_2 ) == 1 ) { type_2 var_3 = type_2 . method_2 ( ) ; type_3 var_4 = var_3 . method_3 ( method_4 ( ) ) ; if ( var_4 != null ) { method_5 ( ) ; method_6 ( ) ; } } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( var_3 ) ; var_4 = var_5 ; var_4. method_3 ( java.lang.string. method_4 ( var_6. method_5 ( ) ) ) ; var_7 = true ; type_1. method_6 ( int_1 ) ; android.content.intent intent = new android.content.intent ( this, var_8 class ) ; method_7 ( intent ) ; new type_2 ( this ). execute ( var_6. method_8 ( ) ) ; }

************

************
tgt: private boolean method_1 ( ) { return ( ( this . var_1 . isempty ( ) ) && ( ( this . var_2 ) == ( type_1 . method_2 ( ) ) ) ) && ( ( this . var_3 ) == ( type_1 . method_3 ( ) ) ) ; }
[0]: private type_1 method_1 ( type_2 path, java.lang.string var_1 ) { return new type_1 ( path. method_2 ( ). tostring ( ), type_3. method_3 ( path. method_4 ( ). tostring ( ), var_1 ), type_3. method_5 ( path. method_2 ( ). tostring ( ) ), var_2 < type_4 > method_6 ( ). method_7 ( type_3. method_8 ( path ) ). build ( ) ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( var_1 ) { method_2 ( ) ; } else { type_1 . method_3 ( this , getstring ( var_2 ) , var_3 ) . show ( ) ; var_1 = true ; new type_2 ( ) . method_4 ( new type_3 ( ) { public void method_5 ( ) { var_1 = false ; } } , ( int_1 * ( var_4 ) ) ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 ; type_2 var_2 ; var_1 = ( ( type_1 ) ( var_3. method_2 ( ). method_3 ( ) ) ) ; try { var_2 = type_3. method_4 ( getclass ( ). method_5 ( string_1 ) ) ; type_4 var_4 = new type_4 ( var_2 ) ; var_1. method_6 ( var_4 ) ; var_1. show ( ) ; } catch ( java.io.ioexception var_5 ) { var_5. method_8 ( ) ; } }

************

************
tgt: public java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { if ( var_1 == null ) return new java.util.arraylist < java.lang.string > ( ) ; java.util.collection < type_2 > var_2 = var_1 . method_2 ( ) . method_3 ( ) ; java.util.list < java.lang.string > var_3 = new java.util.arraylist < java.lang.string > ( ) ; for ( type_2 var_4 : var_2 ) { if ( var_4 . gettype ( ) . equals ( var_5 class ) ) { var_3 . add ( var_4 . getname ( ) ) ; } } return var_3 ; }
[0]: private void method_1 ( ) { java.lang.string var_1 = var_2. method_2 ( ). getvalue ( ) ; if (! ( type_1. method_3 ( var_1 ) ) ) { var_3. update ( null ) ; } else { java.util.date var_4 = this. var_2. method_4 ( ). method_5 ( var_2, var_1, false ) ; if ( var_4 == null ) { var_3. method_6 ( type_2. method_7 ( var_5 ) ) ; } else { var_3. update ( new type_3 ( var_4 ) ) ; } } } }

************

************
tgt: public void method_1 ( final android.content.context context , final type_1 var_1 ) { if ( ( var_2 ) != null ) { type_2 . method_2 ( ) . method_3 ( new type_3 ( ) { public void method_4 ( ) { var_2 . method_5 ( context , var_1 . method_6 ( ) ) ; } } ) ; } }
[0]: public int method_1 ( java.lang.string var_1, java.lang.string var_2 ) { java.lang.long var_3 = var_4. get ( var_1 ) ; java.lang.long var_5 = var_4. get ( var_2 ) ; if ( var_5 == null ) { var_5 = 0l ; } if ( var_3 == null ) { var_3 = 0l ; } return var_3 < var_5? 1 : var_3 == var_5? 0 : - 1 ; }

************

************
tgt: public boolean method_1 ( int var_1 , int var_2 ) { if ( var_3 = true ) { if ( var_1 == ( ( this . y ) + int_1 ) ) { var_3 = false ; return true ; } } if ( var_1 == ( ( this . y ) + 1 ) ) { var_3 = false ; return true ; } return false ; }
[0]: private java.io.file method_1 ( java.io.file var_1, java.lang.string var_2 ) throws type_1 { try { return new java.io.file ( java.lang.string.format ( var_3, var_1. method_2 ( ), var_2, string_1 ) ) ; } catch ( java.io.ioexception var_4 ) { throw new type_1 ( string_2, var_4 ) ; } }

************

************
tgt: private type_1 method_1 ( int index ) { if ( index == ( ( size ) - 1 ) ) { return var_1 ; } type_1 node = var_2 ; for ( int i = 0 ; i < index ; i ++ ) { node = node . method_3 ( ) ; } return node ; }
[0]: public void method_1 ( float x, float y, int var_1 ) { if ( ( index ) == ( - 1 ) ) { return ; } type_1. method_2 ( var_2. method_3 ( index ), var_3, x, y, var_1 ) ; }

************

************
tgt: private boolean method_1 ( ) { if ( ( ( ( ( var_1 ) + int_1 ) < ( var_2 ) ) && ( ( src . method_2 ( ( ( var_1 ) + 1 ) ) ) == char_1 ) ) && ( ( src . method_2 ( ( ( var_1 ) + int_1 ) ) ) != char_2 ) ) { var_1 += int_2 ; return true ; } else return false ; }
[0]: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return type_2. method_2 ( ) ; case 1 : return var_1. method_2 ( string_1, string_2 ) ; case int_1 : return var_2. method_2 ( string_1, string_2 ) ; case int_2 : return var_1. method_2 ( string_1, string_2 ) ; case int_3 : return var_2. method_2 ( string_1, string_2 ) ; default : return null ; } }

************

************
tgt: public void method_1 ( type_1 result ) { int var_1 = gettime ( result ) ; if ( var_1 <= ( var_2 . gettime ( ) ) ) { type_2 . method_2 ( var_2 ) ; var_3 . method_3 ( var_2 ) ; } else { type_3 . method_4 ( this , var_2 , ( var_1 - ( var_2 . gettime ( ) ) ) ) ; } this . method_6 ( ) ; }
[0]: public boolean method_1 ( type_1 t, type_2 n, type_2 var_1 ) { switch ( n. gettype ( ) ) { case var_2 : method_2 ( n ) ; break ; case var_3 : case var_4 : case var_5 : method_3 ( n ) ; break ; case var_6 : if ( method_4 ( n. method_5 ( ) ) ) { var_7. method_6 ( type_3. method_7 ( var_8, var_9, string_1 ) ) ; return false ; } break ; } return true ; }

************

************
tgt: public static type_1 method_1 ( double x , double y , double var_1 ) { java.lang.string [ ] var_2 = new java.lang.string [ ] { string_1 , string_2 , string_3 , string_4 , string_5 } ; java.lang.string var_3 = var_2 [ new java.util.random ( ) . method_2 ( var_2 . length ) ] ; return new type_1 ( x , y , var_1 , type_2 . method_3 ( var_3 ) , new java.util.random ( ) . method_2 ( int_1 ) , type_3 ) ; }
[0]: public boolean method_1 ( final java.lang.string var_1, final java.lang.string var_2, final java.lang.string var_3 ) { final type_1 var_4 = method_2 ( var_1 ) ; if ( ( var_4!= null ) && ( ( var_2 == null ) || ( var_5. equals ( var_2 ) ) ) ) { if ( var_6. equals ( string_1 ) ) return true ; java.lang.string [ ] var_7 = var_6. split ( string_2 ) ; for ( java.lang.string var_8 : var_7 ) if ( var_8. equals ( var_3 ) ) return true ; } return false ; }

************

************
tgt: public void method_1 ( ) throws type_1 , java.io.ioexception { method_2 ( ) ; for ( type_2 var_1 : this . method_3 ( ) ) { method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( var_1 ) ; method_9 ( var_1 ) ; method_10 ( var_1 ) ; method_11 ( var_1 ) ; } }
[0]: public static float [ ] method_1 ( type_1 buffer ) { float [ ] array = null ; if ( buffer!= null ) { if ( buffer. method_2 ( ) ) { array = buffer. array ( ) ; } else { buffer. method_3 ( ) ; array = new float [ buffer. method_4 ( ) ] ; buffer. get ( array ) ; } } return array ; } return array ; }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) { java.util.list < type_3 > var_3 = type_3 . method_4 ( var_1 ) ; var_4 = var_3 . get ( 0 ) ; java.util.list < type_4 > var_5 = type_4 . method_5 ( var_1 ) ; return method_6 ( var_6 . method_7 ( var_4 , var_5 , var_7 . method_8 ( ) , type_5 . method_9 ( ) ) ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; if ( var_1. equals ( string_1 ) ) { var_2 = var_3. query ( var_4, null, null, null, null, null, ( ( var_5 ) + string_2 ) ) ; } else if ( var_1. equals ( string_3 ) ) { var_2 = var_3. query ( var_4, null, null, null, null, null, var_6 ) ; } return var_2 ; }

************

************
tgt: public java.lang.string list ( type_2 var_2 , type_1 var_1 ) { type_3 < type_4 > var_3 = var_4 . method_1 ( var_2 ) ; var_1 . method_2 ( string_1 , var_3 . method_3 ( ) ) ; var_1 . method_2 ( string_2 , var_3 . method_4 ( ) ) ; return string_3 ; }
[0]: private static type_1 < type_2 > method_1 ( java.lang.string filename, type_2 var_1 ) { type_3. method_2 ( filename ) ; type_3. method_2 ( var_1 ) ; type_2 file = type_4. get ( filename ) ; if ( type_5. method_3 ( file ) ) { return type_1. method_4 ( file ) ; } type_2 var_2 = var_1. method_5 ( file ) ; if ( type_5. method_3 ( var_2 ) ) { return type_1. method_4 ( var_2 ) ; } else { return type_1. method_6 ( ) ; } }

************

************
tgt: void method_1 ( final long id ) throws java.io.ioexception { final type_1 var_1 = file . get ( type_2 . method_2 ( id ) ) ; final short offset = type_2 . method_3 ( id ) ; final int size = type_3 . method_4 ( var_1 , offset ) ; if ( size > ( var_2 ) ) { } type_3 . method_5 ( var_1 , offset , 0 ) ; file . method_6 ( var_1 ) ; var_3 . put ( id , size ) ; }
[0]: private void method_1 ( type_1 token ) throws type_2 { if ( ( var_1 )!= token ) { throw new type_2 ( java.lang.string.format ( string_1, var_2. method_2 ( ), var_2. method_3 ( ), var_2. method_4 ( ), token ) ) ; } var_1 = var_2. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( ) ; type_2 var_2 = var_1 . method_3 ( ) ; var_2 . method_4 ( var_4 , var_3 , var_5 , var_6 ) ; try { method_5 ( var_7 . method_6 ( ) , var_2 ) ; } catch ( type_3 var_8 ) { } }
[0]: private static boolean method_1 ( ) { java.io.file var_1 = new java.io.file ( var_2 ) ; if ( var_1. method_2 ( ) ) { return true ; } final java.lang.string var_3 = type_1. method_3 ( string_1 ) ; if ( var_3!= null ) { var_1 = new java.io.file ( var_3 ) ; if ( var_1. method_2 ( ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( int i ) { var_1 . buffer [ ( ( var_2 ) + int_1 ) ] = ( ( byte ) ( i + 1 ) ) ; var_1 . buffer [ ( ( var_2 ) + int_2 ) ] = ( ( byte ) ( i + 1 ) ) ; }
[0]: public static int method_1 ( final int var_1, final int var_2, final type_1 state, final type_2 var_3, final type_3 var_4 ) { return var_1 | ( type_4. method_2 ( ). method_3 ( ). method_4 ( state, var_3, var_4, var_2 ) ) ; }

************

************
tgt: public void method_1 ( ) { for ( int i = int_1 ; i > 0 ; i -- ) { int var_1 = ( ( int ) ( ( java.lang.math.random ( ) ) * ( i + 1 ) ) ) ; type_1 temp = var_2 [ i ] ; var_2 [ i ] = var_2 [ var_1 ] ; var_2 [ var_1 ] = temp ; } var_4 = 0 ; }
[0]: public int method_1 ( ) { int var_1 = int_1 ; var_1 = ( int_2 * var_1 ) + ( type_1. method_1 ( this. var_2 ) ) ; var_1 = ( int_2 * var_1 ) + ( type_1. method_1 ( this. var_3 ) ) ; return var_1 ; }

************

************
tgt: public java.lang.string tostring ( ) { return type_1 . tostring ( this . getclass ( ) , string_2 , key , string_3 , var_2 , string_4 , var_3 , string_5 , var_4 , string_6 , var_5 , string_7 , var_6 , string_8 , var_7 , string_9 , var_8 , string_10 , var_9 , string_11 , var_10 , string_12 , var_11 , string_13 , var_12 ) ; }
[0]: protected type_1 method_1 ( java.lang.charsequence var_1 ) { type_1 var_2 = new type_1 ( ) ; java.util.list < java.lang.string > results = method_2 ( var_1. tostring ( ) ) ; if ( ( var_1. length ( ) )!= 0 ) { var_2. values = results ; var_2. count = results. size ( ) ; } return var_2 ; }

************

************
tgt: private type_1 method_1 ( java.lang.string text ) { type_1 var_1 = method_2 ( var_2 class ) ; method_3 ( var_1 . gettext ( ) ) . method_4 ( text ) ; method_3 ( var_1 . method_5 ( ) ) . method_4 ( new type_3 [ ] { method_2 ( var_3 class ) } ) ; return var_1 ; }
[0]: private void method_1 ( java.util.list < type_1 > parameters, type_2 var_1 ) { while ( var_1. method_2 ( ) ) { type_3 var_2 = method_3 ( var_1 ) ; if ( var_2 == null ) { break ; } if ( type_4. method_4 ( var_2. method_5 ( ) ) ) { method_6 ( parameters, method_7 ( var_2 ) ) ; } var_1 = ( ( type_2 ) ( var_2. method_8 ( ) ) ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( type_2 var_1 ) { java.lang.string var_2 = method_2 ( var_1 ) ; java.util.arraylist < type_3 > nodes = method_3 ( var_2 ) ; java.util.arraylist < type_1 > var_3 = new java.util.arraylist < type_1 > ( ) ; if ( nodes == null ) { return var_3 ; } for ( type_3 node : nodes ) { var_3 . add ( new type_1 ( this , node ) ) ; } return var_3 ; }
[0]: public java.lang.string method_1 ( java.lang.string id, type_1 var_1 ) { if (! ( type_2. equals ( id, string_1 ) ) ) { type_3 var_2 = type_4. method_2 ( ). method_3 ( ) ; type_5 var_3 = ( ( type_5 ) ( var_2. method_4 ( ( string_2 + id ) ). list ( ). get ( 0 ) ) ) ; var_1. method_5 ( string_3, var_3 ) ; } return string_4 ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( ) { type_1 a = method_3 ( ) ; java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( ) ; while ( a != null ) { result . add ( a ) ; a = method_3 ( ) ; } return result ; }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { var_1. method_2 ( int_2 ) ; type_1 answer = var_1. method_3 ( int_2 ) ; method_4 ( var_1. method_5 ( int_2, answer ). method_6 ( var_1. method_7 ( ) ) ) ; } }

************

************
tgt: private void method_1 ( int var_1 , java.lang.string var_2 , java.lang.string var_3 , java.util.date date ) { method_2 ( var_1 ) ; method_2 ( ( var_1 + int_1 ) ) ; long var_4 = ( date . gettime ( ) ) - ( new java.util.date ( ) . gettime ( ) ) ; if ( var_4 > 0 ) { method_3 ( var_1 , var_2 , var_3 , var_4 ) ; } }
[0]: private void method_1 ( ) { var_1 = new type_1 ( ) ; var_1. method_2 ( type_2. method_3 ( java.lang.integer.parseint ( type_3. method_4 ( var_2 ). getstring ( var_2. getstring ( var_3 ), var_2. getstring ( var_4 ) ) ) ) ) ; var_1. method_5 ( ( ( var_1. method_6 ( ) ) / int_1 ) ) ; var_1. method_7 ( var_5 ) ; }

************

************
tgt: public static void method_1 ( java.lang.thread var_1 , java.lang.string var_2 ) { type_1 var_3 = var_4 . get ( var_2 ) ; if ( null == var_3 ) { var_3 = new type_2 ( var_2 , var_1 ) ; var_4 . put ( var_2 , var_3 ) ; } else { } }
[0]: public void setenabled ( boolean var_1 ) { super. setenabled ( var_1 ) ; if ( ( var_2 ) || ( ( var_3. key ) >= ( var_4. key ) ) ) { method_1 ( 1.0f ) ; } else { method_1 ( ( var_1? 1.0f : var_5 ) ) ; } }

************

************
tgt: public void method_1 ( int id ) { for ( type_1 var_1 : var_2 ) { if ( var_1 . method_2 ( id ) ) { java.lang.system.out.println ( ( string_1 + ( var_1 . getname ( ) ) ) ) ; if ( ( var_3 ) < 0 ) { var_3 = var_1 . id ; } method_3 ( ) ; return ; } } }
[0]: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > result = new java.util.arraylist < type_1 > ( ) ; java.util.list < type_1 > var_1 = var_2. query ( var_3, new type_2 ( ) ) ; for ( type_1 var_4 : var_1 ) { java.lang.string var_5 = java.lang.string.format ( var_6, var_4. getid ( ) ) ; var_4. method_2 ( var_2. query ( var_5, new type_3 ( ) ) ) ; } return result ; }

************

************
tgt: public int method_1 ( ) { java.util.scanner var_1 = new java.util.scanner ( var_2 ) ; int var_3 = 0 ; do { try { java.lang.system.out.println ( string_1 ) ; var_3 = var_1 . method_2 ( ) ; } catch ( type_1 var_4 ) { } } while ( ( var_3 < 1 ) || ( var_3 > int_1 ) ) ; return var_3 ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = method_2 ( ) ; if ( var_2 == null ) type_2. method_3 ( var_3, string_1 ) ; else { type_3. method_4 ( ). method_5 ( var_4, method_6 ( ) ) ; var_5. method_7 ( var_2 ) ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; if ( var_1 ) type_1 . method_2 ( var_2 , string_1 ) ; type_2 var_3 = method_3 ( ) ; for ( type_4 b : var_5 ) { type_3 var_4 = var_3 . method_4 ( ) ; var_4 . add ( var_6 , b , b . getclass ( ) . method_5 ( ) ) ; var_4 . commit ( ) ; } }
[0]: public static final type_1 method_1 ( java.lang.string content ) { if ( content == null ) { throw new type_2 ( string_1 ) ; } char [ ] var_1 = type_3. method_2 ( content. method_3 ( ) ) ; return ( ( type_1 ) ( type_3. method_4 ( var_1, 0, var_1. length, null, false, false ). get ( null ) ) ) ; }

************

************
tgt: public void method_1 ( ) { this . method_2 ( ) . method_3 ( ) ; this . add ( var_1 ) ; var_1 . method_4 ( ) ; var_1 . method_5 ( ) ; this . method_4 ( ) ; this . method_5 ( ) ; var_1 . method_6 ( ) ; }
[0]: private type_1 method_1 ( ) { for ( int i = 0 ; i < ( var_1. method_2 ( ) ) ; ++ i ) { if ( (! ( var_1. method_3 ( i ). isempty ( ) ) ) && (! ( type_2. method_4 ( var_1. method_3 ( i ). method_5 ( ) ). equals ( var_2 ) ) ) ) return var_1. method_3 ( i ) ; } return var_3 ; }

************

************
tgt: public type_1 [ ] method_1 ( ) { int var_1 = method_2 ( ) ; type_1 [ ] var_2 = new type_1 [ var_1 ] ; for ( int i = 0 ; i < var_1 ; i ++ ) { var_2 [ i ] = new type_1 ( ) ; } for ( type_2 n : nodes ) { var_2 [ ( ( int ) ( var_3 ) ) ] . nodes . add ( n ) ; } return var_2 ; }
[0]: public void method_1 ( java.lang.string var_1 ) { try { for ( java.lang.string var_2 : var_1. split ( string_1 ) ) if ( method_2 ( var_2 ) ) this. to. add ( new type_1 ( var_2 ) ) ; } catch ( type_2 var_3 ) { throw new type_3 ( var_3 ) ; } }

************

************
tgt: private void method_1 ( java.lang.string url ) { if ( ( url != null ) && ( type_1 . method_2 ( url ) . method_3 ( ) ) ) { var_1 . method_4 ( ) . method_5 ( true ) ; var_1 . method_6 ( new type_2 ( this ) ) ; var_1 . method_1 ( url ) ; } else { type_3 . method_7 ( this , string_1 , var_2 ) . show ( ) ; method_8 ( new android.content.intent ( this , var_3 class ) ) ; method_9 ( ) ; } }
[0]: private void method_1 ( type_1 var_1, java.lang.string title ) { type_2 var_2 = method_2 ( ) ; type_3 var_3 = var_2. method_3 ( ) ; var_3. replace ( var_4, var_1 ) ; var_3. commit ( ) ; method_5 ( ). method_6 ( title ) ; var_3. method_4 ( null ) ; var_3. method_4 ( null ) ; }

************

************
tgt: public boolean method_1 ( type_1 target , type_2 var_1 , double var_2 ) { type_3 var_3 = new type_3 ( var_1 , target , var_4 , var_2 ) ; type_4 . method_2 ( ) . method_3 ( var_3 ) ; if ( var_2 == 0 ) { return ! ( var_3 . method_4 ( ) ) ; } if ( ! ( var_3 . method_4 ( ) ) ) { target . method_5 ( var_2 ) ; return true ; } return false ; }
[0]: public void method_1 ( ) { type_1 var_1 = method_2 ( type_2. method_3 ( ) ) ; type_1 var_2 = method_2 ( type_2. method_4 ( ) ) ; type_1 var_3 = method_2 ( type_2. method_5 ( ) ) ; type_1 var_4 = method_2 ( type_2. method_6 ( ) ) ; var_5 = var_6 = true ; method_7 ( var_1, var_2, var_4 ) ; method_8 ( var_2, var_3 ) ; method_9 ( var_3, var_2 ) ; method_10 ( ) ; method_11 ( var_1, var_3 ) ; method_12 ( var_2 ) ; }

************

************
tgt: public double method_1 ( type_1 var_1 ) { if ( ( this . compareto ( var_1 ) ) == 0 ) return var_2 ; if ( ( this . x ) == ( var_1 . x ) ) return var_3 ; if ( ( this . y ) == ( var_1 . y ) ) return + 0.0 ; return ( ( double ) ( ( var_1 . y ) - ( this . y ) ) ) / ( ( double ) ( ( var_1 . x ) - ( this . x ) ) ) ; }
[0]: protected void method_1 ( boolean var_1, int var_2, int t, int var_3, int b ) { method_2 ( ) ; if ( ( var_4 )!= null ) for ( int i = 0 ; i < ( var_4. size ( ) ) ; i ++ ) { var_4. get ( i ). method_1 ( this ) ; } method_2 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( final type_1 var_1 ) throws type_2 { method_2 ( var_1 ) ; final java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ( ( method_3 ( ) . length ( var_1 ) ) * int_1 ) ) ; for ( final java.lang.object var_3 : method_3 ( ) . method_4 ( var_1 ) ) { var_2 . append ( var_3 ) . append ( "\n" ) ; } var_2 . method_5 ( ( ( var_2 . length ( ) ) - 1 ) ) ; return var_2 . tostring ( ) ; }
[0]: public java.util.collection < type_1 > method_1 ( boolean var_1 ) { java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( ) ; if ( var_1 == true ) { var_2 = false ; var_3 = false ; } if ( ( var_2 ) == false ) { result. add ( this. method_2 ( ) ) ; } if ( ( var_3 ) == false ) { result. add ( this. method_3 ( ) ) ; } return result ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; if ( var_1 == null ) { var_2 = type_1 . method_2 ( ) ; } else { var_2 = new type_1 ( var_1 ) ; } var_3 = type_2 . method_4 ( string_1 , var_2 ) ; }
[0]: void method_1 ( type_1 var_1, type_2 var_2 ) throws java.lang.exception { java.lang.string var_3 = type_3. method_2 ( var_1 ) ; java.util.list < type_4 > var_4 = var_5. method_1 ( var_3 ). get ( ) ; var_2. method_3 ( var_4. size ( ) ) ; for ( type_4 var_6 : var_4 ) { type_5. method_4 ( var_7. method_4 ( ), var_2 ) ; type_5. method_4 ( var_6. method_4 ( ), var_2 ) ; } }

************

************
tgt: public static void method_1 ( type_1 message ) { java.lang.system.out.println ( ) ; java.lang.system.out.println ( message . method_2 ( ) ) ; java.lang.system.out.println ( type_2 . tostring ( message . method_3 ( ) ) ) ; java.lang.system.out.println ( message . method_5 ( ) ) ; java.lang.system.out.println ( message . method_6 ( ) ) ; }
[0]: public type_1 < java.lang.string, type_2 > method_1 ( java.lang.string var_1, java.lang.string var_2, java.util.set < type_3 > var_3, type_4 var_4 ) throws type_5 { type_6 var_5 = method_2 ( var_1 ) ; type_7 var_6 = getclass ( var_2, var_5 ) ; if ( var_6 == null ) { throw new type_5 ( ( string_1 + var_2 ) ) ; } type_2 var_7 = method_1 ( var_5, var_6, var_3, true, var_4 ) ; return type_1. method_3 ( type_8. getid ( var_7. method_4 ( ) ), var_7 ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( ! ( var_1 ) ) && ( ! ( var_2 ) ) ) { if ( ( var_3 ) == null ) { return method_2 ( ) ; } return var_3 . method_3 ( ) ; } return var_4 . method_4 ( label ) ; }
[0]: private boolean method_1 ( type_1 var_1, int var_2, int var_3 ) { for ( int i = ( var_1. method_2 ( ) ) + 1 ; i < var_3 ; i ++ ) { int var_4 = 1 ; if ( method_3 ( ( ( var_1. method_4 ( ) ) + var_4 ), i ) ) return true ; var_4 ++ ; } return false ; }

************

************
tgt: public void method_1 ( type_1 event ) { try { var_1 = new type_2 ( ) ; var_1 . start ( ) ; method_2 ( false ) ; method_3 ( false ) ; method_5 ( var_2 ) ; method_6 ( true ) ; } catch ( java.io.ioexception var_3 ) { type_3 . method_7 ( ( ( string_1 + ( var_4 ) ) + string_2 ) ) ; var_5 . method_8 ( ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 ) > 0 ) { var_2. method_2 ( ). method_3 ( ( ( var_1 ) - 1 ) ) ; new type_1 ( var_2 ) ; } else { var_2. method_2 ( ). method_4 ( ) ; new type_2 ( var_2 ) ; } }

************

************
tgt: public static type_1 method_1 ( java.lang.string var_1 ) throws type_2 { java.util.regex.matcher var_2 = type_3 . method_2 ( var_1 ) ; if ( ! ( var_2 . method_3 ( ) ) ) { throw new type_2 ( java.lang.string.format ( var_3 , var_1 ) ) ; } return new type_1 ( java.lang.integer.parseint ( var_2 . method_4 ( 1 ) ) , java.lang.integer.parseint ( var_2 . method_4 ( int_1 ) ) , java.lang.integer.parseint ( var_2 . method_4 ( int_2 ) ) , ( ( var_2 . method_4 ( int_3 ) ) != null ) ) ; }
[0]: public type_1 < type_2, type_3 >. var_1 method_1 ( type_2 var_2 ) { type_4 < type_1 < type_2, type_3 >. var_1 > iterator = var_3. method_2 ( ) ; while ( iterator. method_3 ( ) ) { type_1 < type_2, type_3 >. var_1 var_4 = iterator. method_4 ( ) ; if ( var_5. equals ( var_2 ) ) { iterator. remove ( ) ; return var_4 ; } } return null ; }

************

************
tgt: private java.lang.string method_1 ( ) { java.lang.string var_1 = method_2 ( ) ; double var_2 ; switch ( var_3 ) { default : case var_4 : return var_1 ; case var_5 : var_2 = float_1 ; break ; case var_6 : var_2 = float_2 ; break ; case var_7 : var_2 = float_3 ; break ; case var_8 : var_2 = float_4 ; break ; case var_9 : var_2 = var_10 ; } double var_11 = var_12 . method_3 ( ) ; if ( var_11 > var_2 ) { var_1 += method_1 ( ) ; } return var_1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { java.util.map var_1 = new type_1 ( ) ; java.util.list a = new java.util.arraylist ( ) ; var_1. put ( string_1, string_2 ) ; var_1. put ( string_3, a ) ; a. add ( string_4 ) ; a. add ( a ) ; a. add ( var_1 ) ; java.lang.string var_2 = new type_2 ( ). tostring ( a ) ; java.lang.system.out.println ( var_2 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { type_1 var_2 = new type_1 ( ) ; if ( var_2 == null ) { java.lang.system.out.println ( string_1 ) ; return false ; } else { var_2 . method_2 ( var_1 ) ; var_2 . method_3 ( var_5 . method_4 ( ) ) ; var_5 . method_3 ( var_2 ) ; return true ; } }
[0]: public boolean equals ( java.lang.object obj ) { if ( obj instanceof type_1 ) { type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( var_2 )!= ( var_3 ) ) return false ; if ( ( var_4 )!= ( var_5 ) ) return false ; if ( ( var_6 )!= ( var_7 ) ) return false ; return true ; } return false ; }

************

************
tgt: private void method_1 ( type_1 < type_2 > data , type_3 var_1 ) throws java.io.ioexception { for ( type_4 var_2 : var_3 ) { type_2 var_4 = data . method_2 ( var_2 . getid ( ) ) ; method_1 ( var_2 , ( ( type_2 ) ( var_4 ) ) , var_1 ) ; } }
[0]: public boolean method_1 ( ) { boolean var_1 = method_2 ( ) ; type_1 var_2 ; if ( var_1 ) { if ( method_3 ( ) ) { var_2 = var_3 ; } else { var_2 = var_4 ; } this. var_5 = type_2. method_4 ( var_6, var_7, var_8, var_9, var_2 ) ; } else { var_2 = var_4 ; this. var_5 = type_2. method_4 ( var_6, var_7, var_8, var_9, var_2 ) ; } method_5 ( ) ; return method_2 ( ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( method_2 ( ) ) >= ( method_3 ( ( ( var_1 ) + 1 ) ) ) ) { ( this . var_2 ) ++ ; ( var_1 ) ++ ; var_4 += float_1 ; var_5 += int_2 ; var_6 . method_4 ( string_1 , ( ( float ) ( var_7 . x ) ) , ( ( float ) ( var_7 . y ) ) , true ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.lang.string var_1 = string_1 ; type_1 < type_2 > var_2 = type_3. method_1 ( var_1 ) ; var_3 = args [ 0 ] ; var_4 = args [ 1 ] ; type_4 [ ] var_5 = new type_4 ( var_3 ). method_2 ( type_4 : : method_3 ) ; for ( type_4 path : var_5 ) { java.lang.system.out.print ( path ) ; java.lang.system.out.println ( ) ; } }

************

************
tgt: public type_1 < java.lang.string > method_1 ( type_1 < java.lang.string > message ) { var_1 = ( ( var_1 ) + 1 ) % ( var_2 ) ; return type_2 . method_2 ( message . method_3 ( ) . method_4 ( ( string_2 + ( var_1 ) ) ) ) . method_5 ( string_3 , var_1 ) . build ( ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_4 = new type_3 ( int_1, var_5, true ) ; type_3 var_6 = new type_3 ( int_2, var_7, true ) ; var_1. method_2 ( 0, var_4 ) ; var_1. method_2 ( 0, var_6 ) ; var_2. split ( ) ; assertequals ( false, var_8 ) ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.util.list < ? extends type_2 > var_2 , java.util.list < ? extends type_2 > var_3 , java.util.list < ? extends type_2 > var_4 ) { return method_1 ( var_1 , type_3 . method_3 ( var_2 ) , type_3 . method_3 ( var_3 ) , type_3 . method_3 ( var_4 ) ) ; }
[0]: protected type_1 [ ] method_1 ( type_2... params ) { if ( params [ 0 ]. method_2 ( ) ) return null ; type_1 [ ] var_1 = null ; try { var_1 = type_1. method_3 ( params [ 0 ] ) ; } catch ( type_3 var_2 ) { var_2. method_4 ( ) ; } finally { var_3. method_5 ( ) ; } return var_1 ; }

************

************
tgt: protected void method_1 ( java.lang.string name ) { type_1 type = var_1 . get ( name ) ; if ( type != null ) { var_2 . method_2 ( type ) ; var_3 . method_3 ( ) . remove ( type ) ; var_1 . remove ( name ) ; } }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_2 = method_2 ( var_3 ) ; } else { var_2 = var_4. method_3 ( ) ; } if ( ( var_2 )!= null ) { type_1 var_5 = new type_1 ( this, var_2 ) ; var_6. method_4 ( var_5 ) ; var_6. method_5 ( new type_2 ( this ) ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 , java.lang.string var_5 , java.lang.string var_6 ) { if ( ( var_7 . method_2 ( var_8 class , var_5 ) ) != null ) { throw new type_2 ( ( string_1 + var_5 ) ) ; } else { type_3 var_9 = new type_3 ( var_1 , var_2 , var_3 , var_4 , var_5 , var_6 ) ; var_7 . method_4 ( var_9 ) ; return var_9 ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( var_1. equals ( string_1 ) ) { if ( var_2. isempty ( ) ) return ; method_2 ( var_2. method_3 ( ) ) ; } else if ( var_1. equals ( string_2 ) ) { if ( var_3. isempty ( ) ) return ; method_4 ( var_3. method_3 ( ) ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { return ( ( ( ( ( ( string_1 + string_2 ) + ( var_1 . method_1 ( ) . tostring ( ) ) ) + string_3 ) + ( var_2 ) ) + string_4 ) + ( var_3 . tostring ( ) ) ) + string_5 ; }
[0]: public void method_1 ( double var_1 ) { type_1 var_2 = var_3. method_2 ( this ) ; if ( ( ( var_2 == null ) && ( ( var_3. method_3 ( position ) ) > 0 ) ) || ( ( var_2!= null ) && ( ( method_4 ( var_2 ) ) >= ( int_1 * ( var_4 ) ) ) ) ) { var_5 += var_1 * ( var_6 ) ; var_5 = ( ( var_5 ) > ( var_7 ) )? var_7 : var_5 ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { type_1 var_2 = var_3 . method_2 ( var_1 . method_3 ( ) , var_1 . method_4 ( ) ) ; if ( var_2 != null ) { throw new type_2 ( ( ( ( string_1 + ( var_2 . method_4 ( ) . getname ( ) . tostring ( ) ) ) + string_2 ) + ( var_2 . method_3 ( ) ) ) ) ; } var_3 . method_1 ( var_1 ) ; }
[0]: private static java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; if ( var_1. method_2 ( ). equals ( string_1 ) ) { for ( type_2 var_3 : var_1. method_3 ( ) ) { java.lang.string var_4 = var_3. method_4 ( ) ; if ( var_4. startswith ( string_3 ) ) { var_2. add ( var_4 ) ; } } } return var_2 ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( ( method_2 ( ) ) && ( method_3 ( var_1 . method_4 ( ) ) ) ) { return var_1 . method_4 ( ) ; } else if ( method_3 ( var_3 . method_5 ( ) . method_6 ( ) ) ) { return var_3 . method_5 ( ) . method_6 ( ) ; } else { return var_4 . method_4 ( ) ; } }
[0]: public void delete ( int key ) { java.util.iterator < type_1 > var_1 = info. iterator ( ) ; while ( var_1. method_1 ( ) ) { type_1 var_2 = var_1. method_2 ( ) ; if ( ( var_3 ) == key ) { info. remove ( var_2 ) ; } } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = type_1 . method_2 ( ) . method_3 ( ) . method_4 ( type_1 . method_5 ( ) ) . tostring ( ) ; final java.util.collection < type_2 > var_2 ; if ( type_3 . isempty ( var_1 ) ) { var_2 = new java.util.arraylist < type_2 > ( ) ; } else { java.util.list < java.lang.string > var_3 = type_1 . method_6 ( var_1 ) ; var_2 = type_1 . method_7 ( ) . method_8 ( var_3 ) ; } type_1 . method_9 ( var_2 ) ; }
[0]: private void method_1 ( ) { java.lang.string name = var_1. gettext ( ). tostring ( ) ; java.lang.string add = var_2. gettext ( ). tostring ( ) ; type_1 var_3 = new type_1 ( name, add ) ; type_2 var_4 = var_5. method_2 ( ) ; var_6. method_3 ( var_4. method_4 ( ) ). setvalue ( var_3 ) ; type_3. method_5 ( this, string_1, var_7 ). show ( ) ; var_8 = var_9 ; }

************

************
tgt: public long method_1 ( java.lang.string filename ) { type_1 var_1 = type_1 . method_2 ( string_1 ) ; type_1 var_2 = type_1 . method_2 ( string_2 ) ; java.util.regex.matcher var_3 = var_1 . method_3 ( filename ) ; if ( var_3 . method_4 ( ) ) { } else { var_3 = var_1 . method_3 ( filename ) ; if ( var_3 . method_4 ( ) ) { } } return 0 ; }
[0]: public void method_1 ( type_1 <? extends java.lang.string > var_1, java.lang.string t, java.lang.string var_2 ) { if ( ( var_2!= null ) && ( ( var_2. trim ( ) )!= string_2 ) ) { var_3. method_2 ( false ) ; } else { var_3. method_2 ( true ) ; } }

************

************
tgt: public static void method_1 ( type_1 var_1 , type_2 to ) { if ( ! ( var_2 ) ) { return ; } if ( type_3 . method_2 ( var_1 ) ) { type_4 state = var_3 . get ( var_1 . getname ( ) ) ; if ( state != null ) { type_3 . method_3 ( var_1 , var_1 . method_4 ( ) ) ; var_4 = to ; var_5 = type_5 . method_5 ( ) ; } } }
[0]: public void execute ( ) { view. method_1 ( new type_1 ( var_1 ) ) ; java.lang.boolean var_2 = var_3. method_2 ( ) ; if ( var_2 ) { method_3 ( ) ; } else { method_4 ( ) ; } view. method_1 ( new type_1 ( var_4 ) ) ; }

************

************
tgt: void update ( type_1 var_1 ) { type_2 < java.lang.string > var_2 = var_3 . keys ( ) ; while ( var_2 . method_1 ( ) ) { java.lang.string var_4 = var_2 . method_2 ( ) ; double var_5 = method_3 ( var_4 ) ; var_3 . put ( var_4 , var_5 ) ; } }
[0]: private void method_1 ( type_1 out, type_2 value ) throws java.io.ioexception { out. method_2 ( ) ; for ( java.lang.string key : value. method_3 ( ) ) { out. method_4 ( key, value. method_5 ( key ) ) ; out. method_6 ( ) ; } out. method_6 ( ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { var_1 = var_1 . tolowercase ( ) ; boolean var_2 = ! ( ( ( var_1 . equals ( string_1 ) ) || ( var_1 . equals ( string_2 ) ) ) || ( var_1 . equals ( string_3 ) ) ) ; return var_2 ; }
[0]: public java.lang.string tostring ( ) { java.lang.string str = string_1 ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { str = ( ( ( str + ( var_1 [ i ] ) ) + string_2 ) + ( var_2. data [ i ] ) ; } return str ; }

************

************
tgt: public type_1 method_1 ( type_1 target ) { long t = var_1 ; long type = 0 ; if ( t >= int_1 ) { t -= int_1 ; type ++ ; } type_1 var_2 = new type_1 ( ) ; var_3 = new type_1 [ int_2 ] ; var_2 . type = char_1 ; var_3 [ 0 ] = new type_1 ( ) . method_2 ( type ) ; var_3 [ 1 ] = new type_1 ( ) . method_2 ( t ) ; return var_2 ; }
[0]: public void start ( type_1 var_1 ) { method_1 ( ) ; var_2. method_2 ( ). method_3 ( ). method_4 ( ( var_3, var_4, var_5 ) - > var_6. listener ( var_2, var_7, var_8 ) ) ; var_1. method_5 ( ). add ( new type_2 ( string_1 ) ) ; var_1. method_6 ( string_2 ) ; var_1. method_7 ( true ) ; var_1. method_8 ( var_9 ) ; var_1. show ( ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( var_2 class ) ; type_3 listener = new type_3 ( new type_4 ( string_1 ) , new type_4 ( string_1 ) , var_1 ) ; type_5 var_3 = new type_6 ( ) ; var_3 . method_3 ( method_4 ( string_1 , string_1 ) ) ; listener . method_5 ( var_3 ) ; method_6 ( var_1 ) ; }
[0]: public boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1 [ 0 ]. length ]. length ) ; i ++ ) { if ( method_2 ( int_1, i ) ) return true ; } return false ; }

************

************
tgt: private void method_1 ( java.util.arraylist < type_1 > var_1 ) { type_2 var_2 = method_2 ( var_1 ) ; type_2 var_3 = method_3 ( var_1 ) ; type_2 var_4 = method_4 ( var_1 ) ; var_2 . method_5 ( data . method_6 ( ) ) ; var_3 . method_5 ( data . method_7 ( ) ) ; var_4 . method_5 ( data . method_8 ( ) ) ; method_9 ( var_2 ) ; method_9 ( var_4 ) ; }
[0]: public java.lang.string tostring ( ) { java.lang.string var_1 = ( ( ( var_2 ) + string_1 ) + ( var_3 ) ) + string_2 ; if ( ( var_4 )!= null ) var_1 += string_3 + ( var_4 ) ; if ( ( var_5 )!= null ) var_1 += string_4 + ( var_4 ) ; return var_1 ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { if ( ( var_2 ) == var_1 ) return false ; var_3 = var_1 ; if ( ( method_2 ( ) ) != null ) { method_3 ( ) ; var_4 = true ; method_2 ( ) . method_4 ( this , ( ( type_1 . method_5 ( ) ) + ( var_5 ) ) ) ; method_6 ( ) ; return true ; } else { var_2 = var_3 ; method_6 ( ) ; return false ; } }
[0]: public void method_1 ( ) { java.lang.string var_1 = null ; java.lang.string var_2 = null ; java.lang.string [ ] var_3 = new java.lang.string [ ] { var_1 } ; var_4 = new type_1 ( ) ; var_5 = new type_2 ( ) ; var_6 = new type_3 ( var_3 ) ; source = new type_4 ( ) ; type_5. assertnotnull ( source ) ; var_6. method_2 ( source ) ; var_5. method_2 ( var_6 ) ; var_4. method_2 ( var_5 ) ; }

************

************
tgt: private android.content.intent method_1 ( ) { java.lang.string var_1 = java.lang.string . method_2 ( array [ counter ] ) ; android.content.intent var_2 = new android.content.intent ( var_3 ) ; var_2 . method_3 ( var_4 ) ; var_2 . method_4 ( string_1 ) ; var_2 . method_5 ( var_5 , ( ( words . gettext ( ) ) + ( var_6 ) ) ) ; return var_2 ; }
[0]: public void method_1 ( type_1 i ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; if ( method_2 ( i, var_1 ) ) { var_1. add ( i ) ; if (! ( var_1. isempty ( ) ) ) { var_2 = true ; } for ( type_1 var_3 : var_1 ) { var_4. put ( var_3, var_5 ) ; type_2. method_3 ( i. method_4 ( ), i. method_5 ( ) ) ; } } }

************

************
tgt: public type_1 method_1 ( double var_1 ) { synchronized ( var_2 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { var_2 . get ( i ) . method_1 ( var_1 ) ; } } synchronized ( var_3 ) { var_3 = var_1 ; } return method_2 ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { switch ( var_1. getid ( ) ) { case var_2 : android.content.intent var_4 = new android.content.intent ( this, var_5 class ) ; method_4 ( var_4 ) ; break ; case var_6 : android.content.intent var_7 = new android.content.intent ( this, var_8 class ) ; method_4 ( var_7 ) ; break ; case var_9 : android.content.intent var_10 = new android.content.intent ( this, var_11 class ) ; method_4 ( var_10 ) ; break ; } }

************

************
tgt: public void method_1 ( long var_1 , type_1 [ ] var_2 , type_1 [ ] var_3 ) { type_2 . method_2 ( var_1 , var_2 , var_3 ) ; var_4 = true ; if ( var_2 != null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { type_3 . method_3 ( var_2 ) ; } }
[0]: public static type_1 method_1 ( ) { if ( ( ( type_2. method_2 ( ) ) >= int_1 ) && ( ( type_2. method_2 ( ) ) < int_2 ) ) return var_1 ; else if ( ( ( ( type_2. method_2 ( ) ) > 0 ) && ( ( type_2. method_2 ( ) ) < int_1 ) ) || ( ( ( type_2. method_2 ( ) ) >= int_2 ) && ( ( type_2. method_2 ( ) ) <= int_3 ) ) ) return var_2 ; else return var_3 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.io.file file ) { try { type_1 . method_2 ( this . var_2 . method_3 ( ) , var_1 , new java.io.file ( file . method_4 ( ) ) ) ; } catch ( java.io.ioexception var_3 ) { type_2 . method_5 ( null , string_2 ) ; } }
[0]: private type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, java.util.map < java.lang.string, java.lang.string > var_3, java.util.map < java.lang.string, java.lang.string > var_4 ) throws type_2, type_3, type_4, type_5, java.io.ioexception, type_6 { method_2 ( var_1 ) ; return execute ( var_5, type_7. method_3 ( var_1 ), var_1, var_2, null, var_3, var_4, null ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 != null ) { if ( var_3 ) { type_3 . method_2 ( var_4 , string_1 , var_2 ) ; } return ; } android.content.intent intent = new android.content.intent ( this , var_5 class ) ; intent . method_3 ( "id" , var_6 . method_4 ( ) ) ; method_5 ( intent ) ; }
[0]: private float [ ] method_1 ( int index ) { float [ ] var_1 = new float [ var_2 ] ; int j = 0 ; for ( int i = index - ( var_3 ) ; i < ( index + ( var_3 ) ) ; i ++ ) { var_1 [ j ] = array [ i ] ; j ++ ; } return var_1 ; }

************

************
tgt: private type_1 < type_2 > . var_1 < type_2 > method_1 ( type_1 < type_2 > . var_1 < type_2 > node ) { type_1 < type_2 > . var_1 < type_2 > var_2 = var_3 ; type_1 < type_2 > . var_1 < type_2 > var_4 = var_5 ; type_1 < type_2 > . var_1 < type_2 > var_6 = var_7 ; return node ( var_6 . key , node ( node . key , var_2 , var_8 ) , node ( var_4 . key , var_9 , var_10 ) ) ; }
[0]: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > words ) { java.util.list < type_1 > var_1 = new java.util.linkedlist < > ( ) ; for ( type_1 var_2 : words ) { type_1 var_3 = var_4. get ( var_2. method_2 ( ) ) ; assert var_3!= null ; var_1. add ( var_3 ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( 0 ) ; final double var_2 = 1.0 ; var_1 . method_2 ( var_2 ) ; var_1 . method_3 ( ) ; var_1 . method_5 ( ) ; var_1 . method_3 ( ) ; assertequals ( var_2 , var_1 . output ( ) , var_3 ) ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2, java.lang.string var_3, java.lang.string [ ] args ) { java.lang.string var_4 = var_2. getname ( ). tolowercase ( ) ; if (! ( var_4. method_2 ( string_1 ) ) ) return true ; return var_5. method_3 ( var_1, var_2, var_3, args, var_6 ) ; }

************

************
tgt: public boolean method_1 ( ) { for ( type_1 a : var_1 ) { if ( a . method_3 ( ) ) { if ( ! ( a . method_2 ( ) . tostring ( ) . method_4 ( string_1 ) ) ) { return false ; } } } return true ; }
[0]: public static void main ( java.lang.string [ ] args ) { if ( ( args.length )!= 1 ) { try { int var_1 = java.lang.integer.parseint ( args [ 0 ] ) ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; } catch ( type_1 var_2 ) { java.lang.system.err.println ( ( ( string_2 + ( args [ 0 ] ) ) + string_3 ) ) ; java.lang.system.exit ( int_1 ) ; } } else { java.lang.system.err.println ( string_4 ) ; java.lang.system.exit ( 1 ) ; } }

************

************
tgt: private java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string out ; try { out = type_1 . method_2 ( var_1 , var_2 ) . replace ( string_1 , string_2 ) . replace ( string_3 , string_4 ) . replace ( string_5 , string_6 ) ; } catch ( type_2 var_3 ) { out = var_1 ; } return out ; }
[0]: private type_1 <? > [ ] method_1 ( final java.lang.string var_1, final java.lang.integer var_2, final java.lang.string var_3, final java.lang.integer var_4 ) { if ( ( var_2!= null ) && ( type_2. equals ( var_2, var_4 ) ) ) { return new type_1 <? > [ ] { var_5. method_2 ( var_1, string_1 ), var_5. method_2 ( var_3, string_1 ) } ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { java.util.list < type_1 > var_2 = this . method_2 ( ) ; var_2 . add ( var_1 ) ; this . update ( new type_2 ( this . getname ( ) , this . method_3 ( ) , var_2 , this . method_4 ( ) , this . method_5 ( ) , this . method_6 ( ) ) ) ; }
[0]: public boolean method_1 ( ) throws java.lang.classnotfoundexception, type_1 { type_2 var_1 = type_3. method_2 ( ) ; if ( var_1 == null ) { var_1 = new type_2 ( string_1, string_1, var_2, string_2, int_1, true, true, true ) ; type_3. method_3 ( var_1 ) ; } var_3 = var_1 ; return true ; }

************

************
tgt: public static void main ( final java.lang.string [ ] args ) throws java.io.ioexception { type_2 var_2 = new type_2 ( int_1 , int_2 , string_1 ) ; var_2 . method_3 ( int_3 ) ; var_2 . method_4 ( string_4 , string_5 ) ; var_2 . start ( ) ; }
[0]: public type_1 file ( java.io.file var_1, java.lang.string var_2 ) { java.io.inputstream file ; try { file = new java.io.fileinputstream ( var_1 ) ; this. var_2 = var_2 ; } catch ( type_2 var_3 ) { file = null ; } this. file = file ; return this ; }

************

************
tgt: public type_1 method_1 ( ) { boolean open = false ; if ( type_2 . method_2 ( type_3 . method_3 ( var_1 ) , var_2 ) ) { open = true ; } type_2 . method_4 ( type_3 . method_3 ( var_1 ) , var_3 ) ; type_4 . method_5 ( type_3 . method_3 ( var_1 ) , var_2 , ( ! open ) ) ; return this ; }
[0]: public char [ ] method_1 ( type_1 var_1, type_1 var_2 ) { char [ ] output = new char [ var_3. length ] ; for ( int i = 0 ; i < ( output. length ) ; i ++ ) { if ( i < ( ( output. length ) / int_1 ) ) { output [ i ] = var_3 [ i ] ; } else { output [ i ] = var_4 [ i ] ; } } return output ; } }

************

************
tgt: protected void method_1 ( ) throws type_1 { method_2 ( ) ; this . var_1 = false ; this . var_2 = - 1 ; this . var_3 = - 1 ; this . var_4 . method_3 ( this ) ; this . var_4 . method_4 ( this ) ; this . var_4 . method_5 ( this ) ; this . var_4 . method_7 ( var_5 ) ; this . var_6 = var_7 ; this . var_4 . method_8 ( ) ; }
[0]: private type_1 method_1 ( java.io.inputstream var_1, java.lang.string name ) { try { try { type_2 var_2 = new type_2 ( var_1 ) ; type_1 var_3 = new type_1 ( this ) ; var_2. method_2 ( var_3, ( ( ( var_4 ) | ( var_5 ) ) | ( var_6 ) ) ) ; return var_3 ; } finally { var_1. method_3 ( ) ; } } catch ( type_3 var_7 ) { throw var_7 ; } catch ( java.lang.exception var_7 ) { error ( name, var_7 ) ; } return null ; } }

************

************
tgt: private void method_1 ( ) { android.content.intent getintent = new android.content.intent ( var_1 ) ; getintent . method_2 ( string_1 ) ; android.content.intent var_2 = new android.content.intent ( var_3 , var_4 ) ; var_2 . method_2 ( string_1 ) ; android.content.intent var_5 = null ; var_5 = android.content.intent . method_3 ( getintent , string_2 ) ; var_5 . method_4 ( var_6 , new android.content.intent [ ] { var_2 } ) ; method_5 ( var_5 , var_7 ) ; }
[0]: public type_1 update ( type_2 var_1, type_2 var_2 ) { type_1 msg = null ; if ( method_1 ( var_2 ) ) { msg = var_3. method_2 ( var_1, var_2 ) ; msg. method_3 ( var_4, var_5. method_4 ( ) ) ; } return msg ; }

************

************
tgt: private int method_1 ( ) { type_1 var_1 = type_2 . method_2 ( ) . method_3 ( ) ; if ( ( var_1 == null ) || ( ( var_4 ) == null ) ) { return 0 ; } java.lang.string var_2 = var_1 . method_4 ( ) ; type_3 var_3 = var_4 . method_5 ( ) . get ( var_2 ) ; if ( var_3 == null ) { return 0 ; } return var_3 . method_6 ( ) ; }
[0]: public final void method_1 ( type_1 var_1 ) { this. var_2 = var_1 ; var_2. method_2 ( this ) ; this. add ( var_2 ) ; var_2. method_3 ( 0, 0 ) ; var_2. method_4 ( ( ( ( int ) ( this. method_5 ( ). method_6 ( ) ) ) - 1 ), ( ( ( int ) ( this. method_5 ( ). method_7 ( ) ) ) - 1 ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.lang.string [ ] var_1 = new java.lang.string [ ] { string_1 , string_2 , string_3 , string_4 , string_5 } ; java.lang.stringbuilder source = new java.lang.stringbuilder ( ) ; source . append ( string_6 ) ; for ( java.lang.string var_2 : var_1 ) { source . append ( java.lang.string.format ( string_7 , var_2 ) ) ; } source . append ( string_8 ) ; method_2 ( source . tostring ( ) , var_4 ) ; }
[0]: public void method_1 ( type_1 event ) { int var_1 = 0 ; if ( ( event. method_2 ( ) )!= null ) { throw new type_2 ( event. method_2 ( ) ) ; } if ( ( event. method_3 ( ). method_4 ( ) ) == int_1 ) { var_2. method_5 ( ) ; } }

************

************
tgt: protected java.util.date method_1 ( java.lang.string var_1 ) { for ( type_1 var_2 : var_3 ) { try { synchronized ( var_2 ) { return var_2 . method_2 ( var_1 ) ; } } catch ( type_2 var_4 ) { } } type_3 var_5 = new type_3 ( ( string_1 + ( type_4 . tostring ( var_6 ) ) ) ) ; var_5 . setvalue ( var_1 ) ; throw var_5 ; }
[0]: private java.util.collection < type_1 > method_1 ( type_1 var_1 ) { final java.lang.string var_2 = var_1. method_2 ( ). method_3 ( var_3 ) ; type_2. method_4 ( var_2 ) ; final int var_4 = var_2. method_5 ( var_5 ) ; if ( var_4 < 0 ) { return type_3. method_6 ( method_7 ( var_2, var_1 ) ) ; } else { final java.lang.string [ ] var_6 = type_4. split ( var_2 ) ; return method_8 ( var_6, var_1 ) ; } }

************

************
tgt: public void method_1 ( int var_1 , java.lang.string [ ] var_2 , int [ ] var_3 ) { switch ( var_1 ) { case var_4 : { var_5 = false ; if ( ( ( var_3 . length ) > 0 ) && ( ( var_3 [ 0 ] ) == ( var_6 ) ) ) { method_2 ( ) ; } else { var_7 = true ; } } } }
[0]: public boolean method_1 ( type_1 target ) { boolean var_1 = true ; try { for ( type_1 var_2 : var_3 ) { var_1 &= var_2. method_2 ( target, ( ( var_4 ) == ( var_5 ) ) ) ; } } catch ( java.lang.exception var_6 ) { var_6. method_3 ( ) ; } var_3. method_4 ( ) ; var_4 = var_7 ; var_8 = null ; return var_1 ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_5 . method_4 ( var_10 ) ; var_7 = ( ( type_3 ) ( method_3 ( var_8 ) ) ) ; var_7 . method_4 ( var_9 ) ; type_4 . method_5 ( this ) ; method_6 ( ) ; }
[0]: public static type_1 method_1 ( int type ) { switch ( type ) { case 0 : return type_2. method_2 ( ) ; case 1 : return type_3. method_2 ( ) ; case int_1 : return type_4. method_2 ( ) ; case int_2 : return type_5. method_2 ( ) ; } throw new type_6 ( ( string_1 + type ) ) ; }

************

************
tgt: public type_1 method_1 ( ) { try { if ( this . method_2 ( ) ) { return ( ( byte ) ( var_1 . method_3 ( ) ) ) ; } else { throw new type_2 ( string_1 ) ; } } catch ( java.io.ioexception var_2 ) { throw type_3 . method_4 ( var_2 ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_1 == null ) { } else if ( var_1. method_2 ( ) ) { method_3 ( ) ; } else { type_3. method_4 ( var_3, ( string_1 + ( var_1. tostring ( ) ) ) ) ; method_5 ( ) ; } }

************

************
tgt: public static < type_1 , type_2 > type_2 method_1 ( type_1 var_1 , java.lang.class < type_1 > var_2 , java.lang.class < type_2 > to , type_3 var_3 ) { type_4 < type_1 , type_2 > var_4 = type_5 . method_2 ( var_2 , to , var_3 ) ; return var_4 . method_1 ( var_1 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string item, int var_2, double var_3 ) { if ( type_1. method_2 ( item ) ) { type_2 var_4 = new type_2 ( null, var_1 ) ; type_1. method_3 ( var_4, type_3. method_4 ( item ), var_2, var_3 ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { var_4 = var_5 . method_2 ( ) ; var_6 = var_5 . method_3 ( ) ; var_7 = var_5 . method_4 ( ) ; if ( ! ( var_8 ) ) { if ( ( ( var_4 ) + ( var_7 ) ) >= ( var_6 ) ) { ( var_9 ) ++ ; if ( ( type ) == 0 ) { method_5 ( var_9 ) ; } } } }
[0]: public void method_1 ( ) { var_1. method_2 ( var_2, var_3, true, var_4, var_5 ) ; var_1. method_3 ( var_6 ) ; type_1. method_4 ( var_7 ). method_2 ( new java.util.linkedlist < type_2 > ( ), var_3 ) ; type_1. method_4 ( var_7 ). show ( ) ; }

************

************
tgt: private void method_1 ( java.lang.string filename ) throws java.io.ioexception { if ( ! ( var_2 . method_3 ( filename ) ) ) { var_3 . add ( filename ) ; var_4 . method_4 ( type_1 . method_5 ( var_3 ) ) ; } java.io.file f = new java.io.file ( ( ( ( var_1 ) + string_1 ) + filename ) ) ; var_2 . put ( filename , method_2 ( f ) ) ; }
[0]: private static void method_1 ( java.util.map < type_1, type_2 > var_1, type_1 key, double value ) { type_2 var_2 = var_1. get ( key ) ; if ( var_2 == null ) { final type_2 var_3 = new type_2 ( value ) ; var_2 = var_1. method_2 ( key, var_3 ) ; if ( var_2 == null ) { var_2 = var_3 ; } } var_2. update ( value ) ; } }

************

************
tgt: static java.util.collection < java.lang.string > method_1 ( java.lang.string var_1 ) { java.util.collection < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; java.util.regex.matcher var_3 = type_2 . method_3 ( var_1 ) ; while ( var_3 . method_4 ( ) ) { if ( ( var_3 . method_5 ( ) ) >= 1 ) { java.lang.string var_4 = var_3 . method_6 ( 1 ) ; var_2 . add ( var_4 . substring ( 1 , var_4 . length ( ) ) ) ; } } return var_2 ; }
[0]: public static boolean method_1 ( char var_1 ) { for ( int i = - 1 ; i <= 1 ; i ++ ) { for ( int j = - 1 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue ; if ( type_1. method_2 ( var_2, var_3, i, j, var_4, var_1 ) ) return true ; } } return false ; } }

************

************
tgt: public void method_1 ( type_1 item ) { if ( item == null ) throw new java.lang.nullpointerexception ( ) ; final type_2 < type_1 > . type_3 var_1 = var_2 ; var_2 = new type_3 ( item ) ; if ( ( size ) == 0 ) { var_3 = null ; var_4 = null ; first = var_2 ; } else { var_5 = var_2 ; var_4 = var_1 ; var_3 = null ; } ( size ) ++ ; }
[0]: public void method_1 ( ) { type_1 f = method_2 ( ). method_3 ( string_1 ) ; type_2 var_1 = ( ( type_2 ) ( f ) ) ; var_1. method_4 ( ). method_5 ( ) ; var_1. method_6 ( ). method_7 ( 0 ) ; var_2. method_8 ( ( ( ( string_2 + ( type_3. method_9 ( ). method_10 ( ) ) ) + string_3 ) + ( var_3 ) ) ) ; }

************

************
tgt: public int method_1 ( final java.lang.string var_1 ) { if ( var_1 == null ) { throw new java.lang.nullpointerexception ( string_1 ) ; } if ( ! ( var_2 . method_2 ( var_1 ) ) ) { return var_4 . method_1 ( var_1 ) ; } type_2 var_3 = var_2 . get ( var_1 ) . method_3 ( ) ; return var_4 . method_1 ( var_3 . getname ( ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { java.lang.system.out.println ( var_1. substring ( ( i * ( var_3 ) ), ( ( i * ( var_3 ) ) + ( var_3 ) ) ) ) ; } java.lang.system.out.println ( ) ; }

************

************
tgt: public static java.lang.string method_1 ( final type_1 var_1 , final type_2 var_2 ) { for ( final type_3 var_4 : var_3 ) { if ( var_4 . method_2 ( var_1 , var_2 ) ) { return var_4 . method_3 ( var_1 , var_2 ) ; } } return null ; }
[0]: private void method_1 ( type_1 value ) { switch ( var_1 ) { case var_2 : type_2. method_2 ( ). set ( method_3 ( ), method_4 ( value ) ) ; break ; case var_3 : type_3. method_5 ( ). method_6 ( method_3 ( ), method_4 ( value ), new type_4 < java.lang.void > ( ) ) ; break ; } }

************

************
tgt: private void method_1 ( ) { type_2 var_1 = method_2 ( var_2 , var_3 ) ; type_3 var_4 = var_1 . method_3 ( ) ; var_4 . method_4 ( string_3 , string_4 ) ; var_4 . method_4 ( string_5 , var_5 . method_5 ( ) ) ; var_4 . commit ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 type ; if ( var_2 ) { type = var_3. get ( var_1 ) ; } else { type = var_4. get ( var_1 ) ; } if ( type == null ) { type = var_5 ; } var_6. method_2 ( var_7 ) ; var_8. method_3 ( method_4 ( ). getcolor ( var_9 ) ) ; var_10. method_3 ( method_4 ( ). getcolor ( var_9 ) ) ; var_11. method_3 ( method_4 ( ). getcolor ( var_9 ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , int var_2 , int var_3 ) { type_2 . i ( var_4 , ( ( ( ( ( string_1 + ( var_5 ) ) + string_2 ) + var_2 ) + string_3 ) + var_3 ) ) ; if ( var_3 >= ( var_6 ) ) { var_1 . method_2 ( var_7 ) ; var_1 . method_2 ( var_8 ) ; } else { type_2 . method_3 ( var_4 , ( ( ( ( string_4 + var_2 ) + string_3 ) + var_3 ) + string_5 ) ) ; } }
[0]: private void method_1 ( ) { if ( ( var_1 )!= null ) var_1. method_2 ( string_1 ) ; if ( ( ( var_2 )!= null ) && ( var_2. method_3 ( ) ) ) { try { var_2. method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { switch ( var_1 . method_2 ( ) ) { case 1 : var_2 . setenabled ( true ) ; var_3 = true ; break ; case int_1 : var_2 . setenabled ( false ) ; var_3 = false ; break ; default : break ; } }
[0]: public boolean method_1 ( ) { if ( ( ( var_1 )!= null ) && ( var_1. method_1 ( ) ) ) return true ; if ( var_2. method_1 ( ) ) { var_1 = var_2. method_2 ( ). method_3 ( ). iterator ( ) ; return method_1 ( ) ; } return false ; }

************

************
tgt: public void method_1 ( ) { var_4 = type_2 . method_3 ( var_3 , string_1 ) ; var_5 = type_2 . method_3 ( var_3 , string_2 ) ; var_6 = type_2 . method_4 ( var_3 , string_3 ) ; var_7 = type_2 . method_4 ( var_3 , string_4 ) ; var_6 = type_2 . method_4 ( var_3 , string_3 ) ; }
[0]: public void method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { if ( position!= 0 ) { var_2. settext ( var_3. get ( position ), true ) ; method_2 ( ) ; var_4. method_3 ( ) ; } else { var_2. settext ( string_1 ) ; } }

************

************
tgt: private type_1 method_1 ( java.util.list < java.lang.integer > var_1 , type_2 var_2 , type_3 var_3 ) { if ( ! ( var_2 instanceof type_4 ) ) { var_3 . method_2 ( string_1 , var_2 , var_4 . method_3 ( ) ) ; return var_4 ; } return method_1 ( var_1 , ( ( type_4 ) ( var_2 ) ) , var_3 ) ; }
[0]: public void method_1 ( java.util.hashmap < java.lang.string, type_1 > add ) { java.util.iterator < java.util.map.entry < java.lang.string, type_1 > > var_1 = add. method_2 ( ). iterator ( ) ; while ( var_1. method_3 ( ) ) { java.util.map.entry < java.lang.string, type_1 > var_2 = var_1. method_4 ( ) ; put ( var_2. method_5 ( ), var_2. getvalue ( ) ) ; } }

************

************
tgt: private void method_1 ( int x , int y ) { type_1 var_3 = method_2 ( x , y ) ; if ( var_4 . method_3 ( x , y ) ) { var_3 . method_4 ( var_5 ) ; var_3 . method_5 ( var_5 ) ; } else { var_3 . method_4 ( var_6 ) ; var_3 . method_5 ( var_6 ) ; } }
[0]: public void method_1 ( int var_1, int var_2 ) { if ( ( this. var_3 ) == ( var_4. null ) ) { var_5. method_1 ( var_1, var_2 ) ; } else if ( ( var_5 ) == ( var_4. null ) ) { var_3. method_1 ( var_1, var_2 ) ; } else { int label = method_2 ( ) ; var_3. method_1 ( var_1, label ) ; method_3 ( label ) ; var_5. method_1 ( label, var_2 ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 ) { for ( int var_2 = 0 ; var_2 < ( var_3 . length ) ; var_2 ++ ) { if ( var_3 [ var_2 ] [ 1 ] . tostring ( ) . equals ( var_1 ) ) { return true ; } } return false ; }
[0]: public static void method_1 ( type_1 var_1, type_2 var_2 ) { var_1. method_2 ( string_1, true ) ; var_1. method_3 ( string_2 ) ; var_1. method_4 ( string_3, var_2. method_5 ( ) ) ; var_1. method_4 ( string_4, var_2. method_6 ( ) ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( ) ; var_1 . method_3 ( ) ; var_1 . method_4 ( ) ; java.lang.string var_3 ; if ( ( var_4 ) == 1 ) var_3 = var_1 . method_5 ( ) ; else var_3 = var_1 . method_6 ( ) ; ( var_4 ) ++ ; ( var_5 ) ++ ; return var_3 ; }
[0]: void method_1 ( int var_1, int var_2 ) { var_1 = java.lang.math.abs ( var_1 ) ; var_2 = java.lang.math.abs ( var_2 ) ; if ( var_2 > var_1 ) { int temp = var_2 ; var_2 = var_1 ; var_1 = temp ; } if ( var_2 == 0 ) { return ; } if ( ( var_1 % var_2 ) == 0 ) { this. var_3 = var_2 ; return ; } int temp = var_1 % var_2 ; method_1 ( var_2, temp ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_4 = var_3 . method_3 ( var_3 . method_2 ( ) ) ; if ( ( ( ( var_1 ) == null ) || ( ( var_2 ) < 0 ) ) || ( var_4 == null ) ) { return ; } boolean var_5 = false ; if ( ( var_6 ) > 0 ) var_5 = true ; var_7 . method_4 ( var_4 . getid ( ) , var_4 . method_5 ( ) , var_1 , var_2 , string_1 , var_5 ) ; }
[0]: public type_1 method_1 ( type_2 var_1, int var_2 ) { if ( var_2 == ( var_3 ) ) { new type_3 ( var_4. method_2 ( var_5, null, false ) ) ; } else if ( var_2 == ( var_6 ) ) { new type_4 ( var_4. method_2 ( var_7, null, false ) ) ; } else { throw new type_5 ( ( string_1 + var_2 ) ) ; } return null ; }

************

************
tgt: public type_1 method_1 ( final type_2 var_1 ) { try { return method_2 ( method_3 ( ) . method_1 ( method_4 ( var_1 ) ) , var_4 , this ) ; } catch ( type_3 var_5 ) { type_4 . method_5 ( var_5 , this ) ; return null ; } }
[0]: protected static type_1 method_1 ( type_2 var_1 ) { for ( int i = 1 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( var_1. get ( i ). method_2 ( ) ) { type_3. method_3 ( ( ( type_2 ) ( var_1. get ( i ) ) ) ) ; } } return var_1 ; }

************

************
tgt: private double method_1 ( type_1 list ) throws type_2 { if ( list . isempty ( ) ) { return 0 ; } int index = method_2 ( list ) ; if ( index > 0 ) { type_3 var_1 = ( ( type_3 ) ( list . get ( index ) ) ) ; list = var_1 . method_1 ( index , list ) ; return method_1 ( list ) ; } else { return ( ( type_4 ) ( list . method_3 ( ) ) ) . getvalue ( ) ; } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { if ( var_2. method_2 ( ) ) { this. var_2 = var_2 ; this. var_2. method_3 ( this ) ; this. var_3 = true ; var_1. method_4 ( var_4, method_5 ( ) ) ; if ( method_6 ( ) ) { type_3. method_7 ( var_1, var_4 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 , type_4 var_4 ) { type_5 var_5 = var_2 . method_2 ( ) ; var_5 . method_4 ( method_5 ( var_2 . method_3 ( ) ) ) ; var_6 . update ( var_2 . method_2 ( ) ) ; return string_2 ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_1. gettext ( ). tostring ( ). length ( ) ) <= 0 ) { var_1. method_2 ( string_1 ) ; var_2 = null ; } else if (! ( var_1. gettext ( ). tostring ( ). method_3 ( string_2 ) ) ) { var_1. method_2 ( string_1 ) ; var_2 = null ; } else { var_2 = var_1. gettext ( ). tostring ( ) ; } }

************

************
tgt: public static boolean method_1 ( int index ) { if ( ( index == ( - 1 ) ) || ( ( var_1 [ index ] ) == null ) ) { return false ; } var_1 [ index ] . method_2 ( var_2 , true ) ; return true ; }
[0]: private void method_1 ( ) { byte [ ] array = var_1. method_2 ( ) ; type_1 var_2 = method_3 ( array ) ; if ( var_2 == null ) { var_3. method_4 ( var_4 ) ; } else { var_3. method_5 ( var_2 ) ; var_2. method_6 ( ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) == 0 ) var_1 = ( var_2 . length ( ) ) - 1 ; else ( var_1 ) -- ; var_3 . method_2 ( 0 ) ; var_4 . method_3 ( ) ; var_4 . method_4 ( ) ; }
[0]: public boolean method_1 ( java.io.file var_1 ) { if ( var_1. getname ( ). contains ( type_1. tostring ( ) ) ) if ( var_1. getname ( ). contains ( ( ( var_2. method_2 ( ) ) + ( var_3 ) ) ) ) return true ; return false ; }

************

************
tgt: public void method_1 ( android.view.view view ) { var_1 . method_2 ( var_2 ) ; if ( ! ( var_3 ) ) { android.content.intent intent = new android.content.intent ( ) ; type_1 var_4 = new type_1 ( ) ; var_4 . method_3 ( string_2 , var_2 ) ; intent . method_4 ( var_4 ) ; method_5 ( int_1 , intent ) ; method_6 ( ) ; } }
[0]: private static java.lang.string method_1 ( type_1 var_1, type_1 file ) { java.lang.string path = type_2. method_2 ( type_3. method_3 ( var_1, file ) ) ; path = type_2. method_4 ( path, char_1 ) ; path = type_2. method_4 ( path, char_2 ) ; path = type_2. method_5 ( path, var_2 ) ; return path ; }

************

************
tgt: private void method_1 ( java.lang.string var_1 , java.lang.string name , java.lang.string var_2 , java.lang.string var_3 , java.lang.string var_4 , double var_5 , double var_6 ) { type_2 var_7 = new type_2 ( var_1 , name , var_2 , var_3 , var_4 , var_5 , var_6 ) ; this . var_8 . add ( var_7 ) ; }
[0]: public boolean method_1 ( type_1 event ) { if ( ( var_1 )!= null ) { try { java.lang.object var_2 = var_1. method_2 ( event ) ; if ( ( ( var_2!= null ) && ( ( var_2. getclass ( ) ) == ( var_3 class ) ) ) && ( ( boolean ) ( var_2 ) ) ) return true ; } catch ( type_2 var_4 ) { method_3 ( ( string_1 + ( var_4. method_4 ( ) ) ) ) ; } } return super. method_1 ( event ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { final type_2 var_2 = var_3 . method_2 ( var_1 ) ; final java.util.list < type_3 < ? super type_2 > > var_4 = this . var_4 ; for ( type_3 < ? super type_2 > listener : var_4 ) { listener . method_1 ( var_2 ) ; if ( ! ( var_2 . method_3 ( ) ) ) break ; } }
[0]: public void method_1 ( type_1 event ) { var_1 = new type_2 ( ) ; type_3. method_2 ( var_1 ) ; type_3. method_2 ( new type_4 ( var_1 ), var_1. method_3 ( ) ) ; if ( ( event. method_4 ( ) ) == ( var_2 ) ) { var_1. method_5 ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( var_1 . gettext ( ) . tostring ( ) . equals ( string_1 ) ) { java.lang.system.out.println ( string_2 ) ; } java.lang.system.out.println ( string_3 ) ; android.content.intent intent = new android.content.intent ( this , var_2 class ) ; java.lang.string message = string_4 ; method_2 ( intent ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = this. method_2 ( ) ; this. var_3 = new type_3 ( var_2, var_1. method_3 ( ). gettext ( ) ) ; this. method_4 ( ) ; var_2. method_5 ( this. var_3 ) ; this. method_4 ( ) ; }

************

************
tgt: protected void method_1 ( ) { type_2 var_2 = new type_2 ( getactivity ( ) ) ; var_2 . method_2 ( var_3 ) ; var_2 . method_3 ( string_1 ) ; var_2 . method_4 ( 0 ) ; var_2 . method_5 ( false ) ; var_2 . method_6 ( false ) ; var_2 . method_7 ( ) ; }
[0]: protected boolean method_1 ( type_1 var_1 ) { type_1 [ ] var_2 = type_2. method_2 ( var_1. method_3 ( ), var_3 ) ; type_1 var_4 = type_3. method_4 ( var_1, var_5 class ) ; return ( ( var_2. length ) == 0 ) && ( var_4 == null ) ; }

************

************
tgt: public static boolean getboolean ( java.lang.string var_1 ) { java.lang.string var_2 = type_1 . getstring ( var_1 ) ; return ( ( var_2 != null ) && ( ( var_2 . trim ( ) . length ( ) ) != 0 ) ) && ( ( java.lang.boolean . method_1 ( var_2 . trim ( ) ) ) || ( ! ( "0" . equals ( var_2 . trim ( ) ) ) ) ) ; }
[0]: public static java.util.list < type_1 > method_1 ( ) { type_2 < type_3 > var_1 = var_2. method_2 ( string_1 ) ; java.util.list < type_3 > var_3 = var_1. method_3 ( ). method_4 ( new java.util.arraylist < type_3 > ( ) ) ; java.util.list < type_1 > var_4 = new java.util.arraylist < type_1 > ( ) ; for ( type_3 var_5 : var_3 ) { var_4. add ( new type_1 ( var_5 ) ) ; } return var_4 ; }

************

************
tgt: public void method_1 ( ) { var_1 . update ( this , new type_1 ( ) { public void method_2 ( boolean var_2 ) { if ( ( var_3 ) != null ) { var_3 . method_5 ( var_4 , ( ( type_2 . method_3 ( ) . method_6 ( ) ) * int_1 ) ) ; } } } , false ) ; }
[0]: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; try { while ( var_2. method_2 ( ) ) { if ( ( var_2. method_3 ( ) ) == ( var_3 ) ) { if ( var_2. method_4 ( ). equals ( type_2. tostring ( ) ) ) { var_1. add ( method_5 ( ) ) ; } } else { if ( method_6 ( var_4 ) ) { break ; } } } } catch ( java.lang.exception var_5 ) { var_5. method_7 ( ) ; } return var_1 ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_2 . method_2 ( ) ) { var_2 . method_3 ( false ) ; method_4 ( var_3 , false ) ; } else { var_2 . method_3 ( true ) ; method_4 ( var_3 , true ) ; } }
[0]: protected void method_1 ( ) throws type_1 { java.lang.boolean var_1 = type_2. method_2 ( var_2 class ) ; if (! var_1 ) { var_3. info ( string_1 ) ; } type_3. method_3 ( string_2 ) ; method_4 ( var_4 ) ; method_5 ( new type_4 ( ) ) ; if ( var_1 ) { type_5. get ( var_5 class ). method_6 ( ) ; type_5. get ( var_6 class ). method_7 ( string_3 ) ; } }

************

************
tgt: private double [ ] method_1 ( java.lang.double [ ] var_1 ) { double [ ] var_2 = new double [ var_1 . length ] ; for ( int i = 0 ; i < ( var_1 . length ) ; i ++ ) { var_2 [ i ] = var_1 [ i ] ; } return var_2 ; }
[0]: public boolean method_1 ( ) { if ( ( var_1. gettext ( ) ) == ( var_2. gettext ( ) ) ) { type_1 var_3 = new type_1 ( var_4. gettext ( ), var_1. gettext ( ), var_5. getvalue ( ) ) ; return true ; } else { return false ; } }

************

************
tgt: protected void method_1 ( ) throws java.lang.exception { java.lang.string name = getname ( ) ; name = name . replace ( string_1 , string_2 ) ; name = name . replace ( string_3 , string_4 ) ; type_1 var_1 = new type_1 ( new java.io.file ( ( string_5 + name ) ) ) ; var_2 = var_1 ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2. method_2 ( var_1. method_3 ( var_3 ) ) ; var_2. method_4 ( var_1. method_5 ( var_4 ) ) ; type_2 var_5 = ( ( type_2 ) ( method_6 ( ). method_7 ( var_6 ) ) ) ; var_5. method_8 ( var_1 ) ; }

************

************
tgt: protected synchronized void method_1 ( java.lang.void ... values ) { if ( ( var_2 . get ( ) ) != null ) { if ( ( var_1 ) != null ) { var_1 . method_2 ( var_2 . get ( ) . method_3 ( ) ) ; var_1 . method_4 ( var_2 . get ( ) . method_5 ( ) ) ; } if ( ( var_3 ) != null ) { var_3 . settext ( var_4 . get ( ) . method_6 ( ) ) ; } } }
[0]: public java.util.list < type_1 > method_1 ( ) throws type_2 { int var_1 = type_3. method_2 ( ). method_3 ( ) ; java.util.map < java.lang.string, type_1 > var_2 = var_3. get ( var_1 ) ; if ( var_2 == null ) { return new java.util.arraylist < type_1 > ( ) ; } return ( ( java.util.list < type_1 > ) ( var_2. values ( ) ) ) ; }

************

************
tgt: protected void method_1 ( final boolean var_1 ) { synchronized ( var_2 ) { var_3 . method_2 ( ( string_1 + var_1 ) ) ; method_3 ( ) ; var_4 . execute ( string_2 ) ; var_4 . execute ( string_3 ) ; var_4 . execute ( string_4 ) ; var_5 = null ; var_6 = null ; var_7 = var_8 ; method_4 ( var_9 ) ; if ( var_1 ) { method_5 ( var_9 ) ; } } }
[0]: public static void method_1 ( ) { type_1. method_2 ( ( ) - > { if ( ( type_2. method_3 ( ) )!= null ) { type_2. method_4 ( ) ; } final type_2 var_1 = new type_2 ( ) ; var_1. method_5 ( ) ; var_1. method_6 ( ) ; var_1. method_7 ( true ) ; } ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 < > ( ) ; for ( java.lang.string var_2 : var_3 ) { for ( int value : var_4 ) { var_1 . add ( new type_2 ( value , var_2 ) ) ; } } method_2 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2. method_2 ( int_1 ) ; type_3. assertequals ( ( string_1 + var_1 ), 0l, ( ( long ) ( var_1. method_3 ( ) ) ) ) ; type_3. assertequals ( ( string_1 + var_1 ), 1, var_1. method_4 ( ). size ( ) ) ; type_3. assertequals ( ( string_1 + var_1 ), ( string_2 + string_3 ), var_1. method_4 ( ). get ( 0 ) ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; if ( this . var_1 ) { java.util.arraylist < type_1 > var_2 = var_3 . get ( var_4 ) ; var_5 = ( ( var_5 ) + 1 ) % ( var_2 . size ( ) ) ; type_2 var_6 = this . method_2 ( ) . method_3 ( this . method_4 ( ) , this . method_5 ( ) ) ; this . method_6 ( var_6 ) ; type_3 . method_7 ( true ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_3 ( ). method_2 ( ). build ( ) ; type_4. method_3 ( var_2 ) ; super. method_1 ( var_1 ) ; method_4 ( var_3 ) ; var_4 = new type_5 ( this ) ; var_4. method_5 ( var_5 ) ; var_4. method_6 ( string_1 ) ; var_4. method_7 ( ) ; var_4. method_8 ( true ) ; var_4. method_9 ( false ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( this . var_2 . method_2 ( var_1 . getname ( ) ) ) { var_3 . method_3 ( string_1 , var_1 . getname ( ) ) ; return false ; } else { this . var_2 . put ( var_1 . getname ( ) , var_1 ) ; var_3 . info ( string_2 , var_1 ) ; var_1 . start ( ) ; return true ; } }
[0]: public static type_1 method_1 ( int var_1, java.lang.long var_2, java.lang.long var_3, java.lang.long var_4 ) { if ( ( type_1. method_2 ( var_2, var_4, var_3 ) ) == null ) { type_1 var_5 = new type_1 ( ) ; var_6 = var_1 ; var_7 = var_2 ; var_8 = var_3 ; var_9 = var_4 ; var_5. method_3 ( ) ; return var_5 ; } return null ; }

************

************
tgt: private void method_1 ( ) { var_1 = method_2 ( var_2 ) ; var_3 = new type_2 ( this , var_4 , new java.util.arraylist < type_3 > ( ) ) ; var_1 . method_3 ( var_3 ) ; var_1 . method_4 ( new type_4 ( ) { public void method_5 ( type_5 < ? > var_5 , android.view.view view , int position , long id ) { type_6 . method_6 ( var_6 this , var_3 . method_7 ( position ) ) ; } } ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2. method_3 ( this ) ; method_4 ( var_3 ) ; var_4 = type_3. method_5 ( this ). method_6 ( this ). method_7 ( this ). method_8 ( getstring ( var_5 ) ). build ( ) ; }

************

************
tgt: public type_1 method_1 ( int i , type_2 var_1 , type_3 var_2 ) throws type_4 { type_1 var_3 = new type_1 ( ) ; var_3 . method_3 ( var_1 . getint ( string_1 ) ) ; var_3 . method_2 ( var_1 . getint ( string_2 ) ) ; return var_3 ; }
[0]: public void method_1 ( java.awt.color var_1 ) { if ( var_1 == ( var_2 ) ) { var_3 = ( var_3 ) + int_1 ; method_2 ( ) ; method_3 ( ) ; var_4. count = ( var_4. count ) + 1 ; } else { method_2 ( ) ; method_3 ( ) ; var_4. count = ( var_4. count ) + 1 ; } if ( ( var_4. count ) == int_2 ) { method_4 ( ) ; } } }

************

************
tgt: private java.util.list < type_1 > method_1 ( type_1 ... t ) { java.util.list < type_1 > list = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( t . length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; }
[0]: public type_1 < type_2 > method_1 ( final type_3 var_1 ) { if ( method_2 ( var_1 ) ) { return type_1. method_3 ( var_2 ) ; } else { if ( method_4 ( var_1 ) ) { return type_1. method_3 ( var_3, var_4, var_2 ) ; } else { return type_1. method_3 ( var_3, var_4, var_2, var_5 ) ; } } }

************

************
tgt: private void method_1 ( final type_1 var_1 , final int position ) { method_2 ( var_1 ) ; method_3 ( var_1 , position ) ; method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( ( ( var_1 . method_9 ( ) ) == 0 ) ) ; method_10 ( var_1 . method_11 ( ) ) ; method_12 ( ) ; method_13 ( var_1 , position ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( type_2. method_2 ( var_2 ) ) { type_2. method_3 ( ( string_1 + var_1 ) ) ; } var_3. method_4 ( null ) ; var_4. method_5 ( ) ; var_5. remove ( this ) ; }

************

************
tgt: public void method_1 ( ) { type_1 < type_2 > . var_1 < type_2 > var_2 ; type_1 < type_2 > . var_1 < type_2 > var_3 ; var_3 = var_4 ; while ( var_3 != null ) { var_2 = var_3 ; var_3 = var_5 ; var_2 . method_2 ( ) ; } var_4 = var_6 = null ; size = 0 ; }
[0]: public static boolean method_1 ( java.lang.string str ) { type_1 pattern = type_1. method_2 ( string_1 ) ; if ( ( pattern!= null ) && ( ( pattern. method_3 ( str ) )!= null ) ) return pattern. method_3 ( str ). method_4 ( ) ; else return false ; }

************

************
tgt: private boolean method_1 ( final type_1 var_1 , final type_1 var_2 ) { if ( ( var_1 . method_2 ( ) ) && ( var_2 . method_2 ( ) ) ) return var_3 . method_1 ( var_1 . method_3 ( ) , var_2 . method_3 ( ) ) ; return false ; }
[0]: private static type_1 method_1 ( type_2 n, type_1 var_1, type_1 var_2, type_2 var_3 ) { type_1 var_4 ; double var_5 = type_3. method_2 ( var_3, n ) ; var_1 = var_6 ; var_4 = var_1. method_3 ( var_2 ). method_4 ( var_5 ) ; return var_4 ; }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 , int var_2 ) { type_2 var_3 = method_2 ( ) ; try { return type_3 . method_1 ( var_3 , var_2 ) ; } catch ( java.lang.exception var_4 ) { throw new type_4 ( string_1 , var_5 , string_2 , ( string_3 + var_2 ) , var_4 ) ; } finally { type_5 . method_3 ( var_3 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2 ) return ; type_2. info ( string_1 ) ; for ( type_3 var_3 : this. var_4 ) { var_3. method_2 ( this ) ; var_3. method_3 ( ) ; } this. var_4. method_4 ( ) ; this. var_5 = new type_4 [ int_1 ] ; type_5 var_6 = this. method_5 ( ) ; if ( var_6!= null ) var_6. method_6 ( ) ; }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , long var_2 , long var_3 , long var_4 , boolean var_5 , boolean var_6 ) throws java.lang.exception { int var_7 ; try ( type_1 var_8 = var_9 . method_2 ( ) ) { java.lang.string var_10 = string_1 ; type_2 result = var_8 . method_3 ( var_10 , type_3 . method_4 ( var_2 , var_3 , var_4 ) ) ; var_7 = result . method_5 ( ) . method_6 ( ) . method_7 ( ) ; var_8 . method_8 ( ) ; } return var_7 > 0 ; }
[0]: public void method_1 ( type_1 message ) { type_2 var_1 = message. get ( 0 ) ; float var_2 = message. get ( 1 ) ; float var_3 = 0 ; synchronized ( var_4 ) { for ( type_3 c : var_4 ) { if ( ( c. method_2 ( ) ) == var_1 ) { c. method_3 ( var_5 ) ; c. method_4 ( ( var_2 - var_3 ) ) ; } } } method_5 ( ( ( var_1. getname ( ) ) + string_1 ) ) ; method_6 ( ) ; } }

************

************
tgt: private boolean method_1 ( java.util.list < type_1 > var_1 ) { boolean var_2 = false ; for ( type_1 var_3 : var_1 ) { for ( type_2 var_4 : var_3 . method_2 ( ) ) { if ( string_1 . equals ( var_4 . method_3 ( ) ) ) { var_2 = true ; break ; } } } return var_2 ; }
[0]: public boolean method_1 ( java.util.arraylist < java.lang.integer > var_1, java.util.arraylist < java.lang.integer > var_2 ) { for ( int var_3 = 0 ; ( var_3 < ( var_1. size ( ) ) ) && ( var_3 < ( var_2. size ( ) ) ) ; ++ var_3 ) { if (! ( var_1. get ( var_3 ). equals ( var_2. get ( var_3 ) ) ) ) return true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 < type_2 > var_1 , type_3 < type_2 > response ) { java.util.list < type_4 > var_2 = response . method_2 ( ) . method_3 ( ) ; if ( var_3 != null ) { var_3 . method_4 ( new type_5 ( var_2 , var_4 , method_5 ( ) ) ) ; } type_6 . method_6 ( var_5 , ( string_1 + ( var_2 . size ( ) ) ) ) ; }
[0]: private boolean method_1 ( char var_1 ) { if ( ( ( var_1 == char_1 ) || ( var_1 == char_2 ) ) || ( var_1 == char_3 ) ) { return true ; } else if ( var_1 == char_4 ) { return ( ( method_2 ( ) ) == char_5 ) || ( ( method_2 ( ) ) == char_6 ) ; } else if ( var_1 == char_7 ) { return ( method_2 ( ) ) == char_2 ; } else { return false ; } }

************

************
tgt: public < type_1 > type_1 method_1 ( java.lang.class < type_1 > var_1 , type_2 ... var_2 ) { type_3 var_3 = new type_3 ( ) ; var_3 . method_2 ( ) . put ( var_1 , 1 ) ; var_3 . method_3 ( var_4 ) ; return method_4 ( var_1 , var_3 , var_2 ) ; }
[0]: public void method_1 ( ) { int var_1 = ( ( int ) ( ( var_2 ) * int_1 ) ) ; int var_3 = var_1 * int_2 ; for ( int i = var_3 ; i > 0 ; i -- ) { try { java.lang.thread. method_2 ( int_3 ) ; } catch ( type_1 var_4 ) { } } java.lang.system.out.println ( ( ( ( string_1 + ( name ) ) + string_2 ) + ( gettime ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( java.lang.object ... args ) { java.lang.string var_1 = ( ( java.lang.string ) ( args [ 0 ] ) ) ; if ( var_1 . equals ( string_1 ) ) { } else { var_2 . method_3 ( var_1 , var_4 ) ; var_2 . method_2 ( string_3 , var_3 , int_1 ) ; } type_1 . method_4 ( string_4 , var_1 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; for ( type_1 var_3 : var_4 ) { if ( ( var_3. method_2 ( type_2. method_3 ( string_1 ) ). gettext ( ). contains ( var_1 ) ) || ( var_3. method_2 ( type_2. method_3 ( string_2 ) ). gettext ( ). contains ( var_1 ) ) ) { var_2 = var_3 ; } } var_2. method_4 ( ) ; return ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 = var_1 . getvalue ( var_3 class ) ; if ( ( var_2 ) == null ) return ; var_4 = var_2 . method_2 ( ) ; var_5 = ( var_2 . method_3 ( ) ) / ( type_2 . method_4 ( var_2 . method_5 ( ) ) ) ; var_6 = var_2 . method_6 ( ) ; var_7 = var_2 . method_7 ( ) ; var_8 = var_2 . method_8 ( ) ; var_9 = var_2 . method_9 ( ) ; method_10 ( ) ; }
[0]: protected java.io.file method_1 ( ) { android.content.intent intent = new android.content.intent ( var_1 ) ; type_1 var_2 = type_2. method_2 ( var_3 ) ; var_4. add ( var_2 ) ; intent. method_3 ( var_5, var_2 ) ; method_4 ( intent, var_6 ) ; return new java.io.file ( var_7. get ( ( ( var_7. size ( ) ) - 1 ) ). method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( ) { type_1 . assertequals ( int_1 , method_2 ( int_1 , 0 , int_2 ) ) ; type_1 . assertequals ( int_3 , method_2 ( int_1 , 1 , int_2 ) ) ; type_1 . assertequals ( int_4 , method_2 ( int_1 , 0 , int_5 ) ) ; type_1 . assertequals ( int_6 , method_2 ( int_1 , int_7 , int_8 ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { if ( var_1. equals ( string_2 ) ) { var_2. method_2 ( new type_1 ( var_2, var_3, new type_2 ( ) { public void method_1 ( java.lang.string var_1 ) { var_2. method_2 ( new type_3 ( var_2 ) ) ; } } ) ) ; } else if ( var_1. equals ( string_3 ) ) { var_2. method_2 ( var_2. method_3 ( ) ) ; } } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { int [ ] n = new int [ ] { int_1 } ; java.lang.system.out.println ( type_1 . tostring ( n ) ) ; type_2 . method_1 ( n ) ; java.lang.system.out.println ( type_1 . tostring ( n ) ) ; }
[0]: public void method_1 ( ) { if ( ( ( type_1. method_2 ( ). size ( ) )!= 0 ) && ( var_1 ) ) { synchronized ( this ) { if ( var_2 ) { try { var_3. method_3 ( ). method_4 ( var_4 ) ; } catch ( java.io.ioexception var_5 ) { } } var_3. method_5 ( ) ; var_4 = new type_2 ( var_3. method_6 ( ) ) ; var_2 = false ; } } } }

************

************
tgt: private void method_1 ( int x , int y ) { try { var_1 = true ; type_1 var_2 = type_2 . method_2 ( int_1 ) ; type_3 var_3 = ( ( type_3 ) ( var_2 . method_3 ( string_1 ) ) ) ; var_4 = new type_4 ( y , x ) ; var_3 . method_4 ( var_4 ) ; } catch ( type_5 | type_6 var_5 ) { java.util.logging.logger.getlogger ( var_6 class . getname ( ) ) . method_5 ( var_7 , null , var_5 ) ; } }
[0]: public java.util.map < java.lang.string, java.lang.object > method_1 ( long id ) { java.util.map < java.lang.string, java.lang.object > var_1 = var_2. method_1 ( id ) ; var_1. put ( string_1, var_2. method_2 ( java.lang.integer.parseint ( var_1. get ( ""id"" ). tostring ( ) ) ) ) ; return var_1 ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { var_4 = ( ( type_3 ) ( method_2 ( var_5 ) ) ) ; type_4 . method_3 ( string_1 , ( string_2 + ( var_4 ) ) ) ; if ( ( var_4 ) != null ) { var_2 . method_4 ( new type_5 ( new type_6 ( var_4 , var_6 ) ) ) ; var_4 . method_5 ( var_2 , var_6 ) ; type_4 . method_3 ( string_1 , string_3 ) ; } }
[0]: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( string_1, true, true ) ; var_1. add ( var_2 ) ; var_1. method_1 ( true ) ; var_1. method_2 ( var_3 ) ; var_1. method_3 ( true ) ; var_1. method_4 ( var_4 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . get ( var_1 . name ) ; if ( var_2 != null ) { var_2 . method_2 ( ) ; var_3 . remove ( var_1 . name ) ; java.lang.object token = method_3 ( var_2 ) ; var_4 . remove ( token ) ; var_5 . remove ( token ) ; } type_3 . method_4 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 ; var_3. method_2 ( ) ; type_2 query = var_3. method_3 ( ( string_1 + var_1 ) ) ; var_2 = ( ( type_1 ) ( query. method_4 ( ) ) ) ; var_3. method_5 ( ). commit ( ) ; return var_2 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { for ( type_1 var_2 : var_3 ) { if ( ( var_2 . method_2 ( name ) ) != null ) { var_4 . remove ( ) ; break ; } } var_5 . method_3 ( var_5 . method_4 ( ) , name ) ; var_5 . method_3 ( name , var_5 . method_4 ( ) ) ; var_6 . method_5 ( var_7 ) ; if ( ( var_8 ) != null ) { var_8 . remove ( ) ; } }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.integer.tostring ( type_1. method_2 ( ). method_3 ( int_1, int_2 ) ) ; java.io.file f = new java.io.file ( ( var_1 + string_1 ) ) ; if ( f. method_4 ( ) ) { method_1 ( ) ; } return var_1 ; }

************

************
tgt: private type_1 method_1 ( java.util.map < java.lang.string , type_2 > data ) { type_3 var_1 = var_2 . method_2 ( ) ; java.lang.string name = var_1 . getname ( ) ; if ( data . method_3 ( name ) ) { type_2 var_3 = data . get ( name ) ; if ( ( var_1 . method_4 ( ) ) < ( var_4 . length ) ) { return var_4 [ var_1 . method_4 ( ) ] ; } } return null ; }
[0]: public java.util.arraylist < type_1 > method_1 ( java.lang.string var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; type_1 var_3 ; if ( var_1 == null ) { java.lang.system.out.println ( string_1 ) ; return null ; } java.util.collections.sort ( token ) ; while ( ( var_1. length ( ) ) > 0 ) { var_3 = method_2 ( var_1 ) ; var_1 = var_1. substring ( var_3. method_3 ( ) ) ; token. add ( var_3 ) ; } return var_2 ; }

************

************
tgt: private type_1 method_1 ( final type_1 var_1 ) { java.lang.string name = var_1 . getname ( ) ; if ( name . startswith ( string_1 ) ) { name = name . replace ( string_1 , string_2 ) ; } else if ( name . startswith ( string_2 ) ) { name = name . replace ( string_2 , string_1 ) ; } return var_2 . method_2 ( name ) ; }
[0]: public static java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( string_1 ) ; var_1. append ( string_2 ) ; var_1. append ( string_3 ) ; for ( java.lang.string var_2 : var_3 ) { if ( type_1. method_2 ( var_2 ) ) { var_1. append ( ( ( string_4 + var_2 ) + string_5 ) ) ; } } return var_1. tostring ( ) ; }

************

************
tgt: public void method_1 ( ) { var_3 . method_8 ( var_4 ) ; var_1 . method_2 ( string_1 ) ; var_1 . method_3 ( string_2 ) ; var_1 . method_2 ( string_3 ) ; type_1 . method_4 ( var_2 ) . method_5 ( string_2 ) ; assert var_1 . method_6 ( ) ; type_1 . method_4 ( var_3 ) . method_8 ( var_4 ) ; }
[0]: private void method_1 ( boolean var_1 ) { final type_1 < type_2 > var_2 = var_3. get ( ) ; var_2. method_2 ( ) ; final type_2 var_4 = var_2. method_3 ( ) ; if ( var_4!= null ) { var_5. set ( var_4 ) ; var_4. method_4 ( ) ; } else { var_5. set ( null ) ; if ( var_1 ) type_3. set ( null ) ; } }

************

************
tgt: private void init ( type_1 var_1 ) { type_2 . method_1 ( var_2 , ( string_1 + ( getintent ( ) ) ) ) ; method_2 ( ) ; if ( var_3 ) { if ( ( var_4 ) != null ) { method_3 ( ) ; } } else if ( ! ( method_4 ( ) ) ) { method_5 ( ) ; } var_1 . method_6 ( ) ; }
[0]: public void method_1 ( java.lang.string key ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( var_1. get ( i ). method_2 ( ). equals ( key ) ) { var_2 = i ; return ; } } throw new type_1 ( string_1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , java.util.iterator < type_1 > var_2 , type_2 < type_1 , type_3 > var_3 , type_4 var_4 ) throws java.io.ioexception { type_3 info = new type_3 ( ) ; info . method_3 ( ( 1 / ( ( double ) ( var_5 ) ) ) ) ; while ( var_2 . method_4 ( ) ) info . method_5 ( var_2 . method_6 ( ) . tostring ( ) ) ; var_3 . method_7 ( var_1 , info ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 < java.lang.string > msg = null ; try { msg = ( ( type_1 ) ( var_1. method_2 ( ) ) ) ; } catch ( java.io.ioexception | java.lang.classnotfoundexception var_2 ) { java.lang.system.err.println ( ( string_1 + ( var_2. method_3 ( ) ) ) ) ; } return msg. method_4 ( ) ; }

************

************
tgt: protected java.lang.void method_1 ( java.lang.integer ... params ) { int time = ( params [ 0 ] ) + 1 ; while ( time > 0 ) { try { java.lang.thread . method_2 ( int_1 ) ; } catch ( type_1 var_1 ) { } time -- ; } method_4 ( ) ; return null ; }
[0]: public void method_1 ( ) throws java.lang.exception { execute ( string_1 ) ; method_2 ( ) ; try { execute ( string_2 ) ; } catch ( type_1 var_1 ) { assertequals ( var_1. method_3 ( ), string_3 ) ; } execute ( string_4 ) ; assertequals ( response. method_4 ( ), 1l ) ; execute ( string_5 ) ; }

************

************
tgt: private double method_1 ( double [ ] var_2 , type_1 < java.lang.integer > var_4 ) { double sum = 0 ; int count = 0 ; for ( int var_5 = 0 ; var_5 < ( var_2 . length ) ; var_5 ++ ) { if ( ! ( var_4 . method_2 ( var_5 ) ) ) continue ; sum += var_2 [ var_5 ] ; count ++ ; } return sum / count ; }
[0]: private static type_1 method_1 ( type_2 item ) { type_1 var_1 ; if ( item. getclass ( ). getname ( ). equals ( string_1 ) ) { var_1 = ( ( type_1 ) ( item. method_2 ( ) ) ) ; } else { var_1 = ( ( type_1 ) ( item. method_2 ( ) ) ) ; } return var_1 ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; if ( ( ( type_3 . method_4 ( this , var_5 ) ) != ( var_6 ) ) && ( ( type_3 . method_4 ( this , var_7 ) ) != ( var_6 ) ) ) { return ; } var_3 . method_5 ( var_8 , 0 , 0 , this ) ; android.content.intent intent = getintent ( ) ; }
[0]: public void method_1 ( ) { var_1 = new type_1 ( ) ; if ( ( var_2 ) == null ) { var_3 = var_2 = var_1 ; } else if ( ( var_3 ) instanceof type_2 ) { type_2 var_4 = ( ( type_2 ) ( var_3 ) ) ; var_5. method_2 ( var_3 ) ; if ( var_4. method_3 ( ) ) var_3. method_4 ( var_6 ) ; else var_4. method_5 ( var_3 ) ; } else var_3. method_4 ( var_1 ) ; var_3 = var_1 ; }

************

************
tgt: public void method_1 ( java.lang.object ... var_1 ) { java.lang.system.out.println ( var_1 [ 0 ] ) ; type_1 var_2 = new type_1 ( ( ( java.lang.string ) ( var_1 [ 0 ] ) ) ) ; var_3 = var_2 . method_2 ( ) ; var_4 = var_2 . method_3 ( ) ; var_5 = var_2 . method_4 ( ) ; }
[0]: private long method_1 ( type_1 var_1 ) { if ( var_1 instanceof type_2 ) { type_3 var_2 = ( ( type_2 ) ( var_1 ) ). var_2 ; if ( var_2 instanceof type_4 ) { return ( ( type_4 ) ( var_2 ) ). method_1 ( ) ; } } else if ( var_1 instanceof type_5 ) { return ( ( type_5 ) ( var_1 ) ). method_2 ( ). method_1 ( ) ; } return ( type_6. method_3 ( var_1 ) ) + 1 ; } }

************

************
tgt: public void method_1 ( int var_1 ) { if ( var_1 < 1 ) return ; synchronized ( var_3 ) { type_1 var_2 = var_3 . get ( var_1 ) ; var_3 . remove ( var_1 ) ; if ( var_2 == null ) { type_1 . method_2 ( var_1 ) . delete ( ) ; } else { var_2 . method_1 ( ) ; } } }
[0]: public void method_1 ( type_1 event, boolean var_1 ) { super. method_1 ( event, var_1 ) ; if ( event!= null ) { data = new type_2 ( ) ; data. method_2 ( event ) ; method_3 ( data. method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { if ( var_1 == null ) { setvalue ( null ) ; } else { type_1 file = ( ( type_1 ) ( getvalue ( ) ) ) ; if ( file == null ) { file = new type_1 ( ) ; setvalue ( file ) ; } file . method_2 ( var_1 ) ; setvalue ( file ) ; } }
[0]: public void method_1 ( ) { var_1 = new java.util.arraylist < > ( ) ; method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; for ( java.util.list < type_1 > handle : var_1 ) { java.util.collections.sort ( handle, new type_2 ( ) ) ; } }

************

************
tgt: public static void method_1 ( ) { try { type_1 var_1 = type_2 . get ( string_1 ) ; java.util.list < java.lang.string > var_2 = type_3 . method_2 ( var_1 ) ; for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { java.lang.system.out.println ( ( ( ( i + 1 ) + string_2 ) + ( var_2 . get ( i ) ) ) ) ; } } catch ( java.io.ioexception var_3 ) { var_3 . method_3 ( ) ; } }
[0]: private void method_1 ( type_1 var_1, int var_2 ) { for ( int i = 0 ; i < var_2 ; i ++ ) { if ( ( method_2 ( var_3 ). type ) == ( var_4 ) ) { type_2. method_3 ( var_1, var_5, i ) ; } else if ( ( method_2 ( var_3 ). type ) == ( var_6 ) ) { } else { throw new type_3 ( ) ; } } }

************

************
tgt: public static void method_1 ( android.content.context context , java.lang.string title , java.lang.string message , type_1 var_1 ) { type_2 var_2 = new type_2 ( context ) ; var_2 . method_2 ( message ) . method_3 ( var_3 , ( var_1 == null ? new type_1 ( ) { public void method_4 ( type_3 var_4 , int var_5 ) { var_4 . method_5 ( ) ; } } : var_1 ) ) ; var_2 . method_6 ( ) . show ( ) ; }
[0]: public static type_1 method_1 ( java.lang.string query ) { type_2 var_1 = type_3. method_2 ( type_3. url, var_2, var_3 ) ; type_1 var_4 = null ; try { type_4 var_5 = var_1. method_3 ( ) ; var_4 = var_5. method_4 ( query ) ; var_1. method_5 ( ) ; } catch ( type_5 var_6 ) { java.lang.system.out.println ( var_6. method_6 ( ) ) ; type_6. method_7 ( string_1, var_6. method_6 ( ) ) ; } return var_4 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { type_2 var_2 = new type_2 ( ) ; for ( int i = 0 ; i < ( var_2 . method_2 ( ) . size ( ) ) ; i ++ ) { if ( var_2 . method_2 ( ) . get ( i ) . equals ( var_1 . method_3 ( ) ) ) { type_3 . info ( string_1 ) ; return true ; } } type_3 . info ( string_2 ) ; return false ; }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1, java.lang.string id ) { type_2 var_2 = null ; try { var_2 = var_3. method_2 ( java.lang.long.parselong ( id ) ) ; if ( var_2. method_3 ( ). equals ( var_1 ) ) return var_2. method_4 ( ). method_5 ( ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( var_4. method_6 ( ), var_4 ) ; } return null ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = var_2 . method_2 ( ) ; while ( ( ( var_3 . size ( ) ) > 0 ) && ( ( var_3 . method_2 ( ) . var_4 ) == var_1 ) ) { var_3 . method_1 ( ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1. method_2 ( this, string_1, var_2 ). show ( ) ; if ( var_3 ) { var_4. delete ( var_5 ) ; } else { var_6 = new type_2 ( ) ; } var_7. method_3 ( 0 ) ; var_5 = new type_2 ( ) ; var_8. method_4 ( ) ; method_5 ( var_9, 1 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) != null ) { java.util.hashmap < java.lang.string , java.lang.object > parameters = new java.util.hashmap < > ( ) ; parameters . put ( var_3 , var_1 ) ; var_2 . method_2 ( new type_2 ( var_4 , parameters ) ) ; } else { var_5 . method_1 ( var_1 ) ; } }
[0]: private void init ( ) { for ( int i = 1 ; i <= ( var_1 ) ; i ++ ) { var_2. add ( new type_1 ( i ) ) ; } var_3 = java.lang.integer.parseint ( var_4. method_1 ( 0 ) ) ; var_5 = java.lang.integer.parseint ( var_4. method_1 ( 1 ) ) ; var_6 = new type_2 ( 0, 0, this, type_1. method_2 ( 0 ) ) ; var_7 = new type_3 ( string_1 ) ; c = new type_4 ( this ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { java.lang.string var_2 = var_3 . gettext ( ) . tostring ( ) ; if ( ( var_2 != null ) && ( ! ( var_2 . equals ( string_1 ) ) ) ) { var_4 . add ( var_2 ) ; } var_3 . settext ( string_1 ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2. method_2 ( ) ) == ( var_1. method_3 ( ). method_2 ( ) ) ) { if ( ( var_3. method_4 ( var_1. method_5 ( ) ) ) && ( var_4. method_6 ( var_1. method_5 ( ) ) ) ) return false ; if ( var_3. method_4 ( var_1. method_7 ( ) ) ) return false ; } return true ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 , int length ) { if ( length == 0 ) return string_1 ; if ( ( var_1 . length ( ) ) < length ) return var_1 ; else if ( length > 0 ) return var_1 . substring ( ( ( var_1 . length ( ) ) - length ) , var_1 . length ( ) ) ; else { return var_1 . substring ( ( - length ) , var_1 . length ( ) ) ; } }
[0]: public void method_1 ( ) { switch ( var_1 ) { case var_2 : case var_3 : if ( ( var_4 ) == null ) { new type_1 ( var_5, var_6 ) ; } else { var_4. method_2 ( var_5 ) ; var_4. method_3 ( var_6 ) ; } setstate ( var_7 ) ; break ; case var_8 : case var_9 : java.lang.system.err.println ( string_1 ) ; } } }

************

************
tgt: public void method_1 ( type_1 buf ) { type_2 var_1 = ( ( this . var_2 [ 0 ] ) != null ) ? this . var_2 [ 0 ] . method_2 ( ) : null ; int var_3 = - 1 ; int var_4 = - 1 ; if ( var_1 != null ) { var_3 = var_5 ; var_4 = var_1 . method_3 ( ) ; } buf . method_4 ( var_3 ) ; buf . method_4 ( var_4 ) ; buf . method_5 ( var_6 ) ; }
[0]: private void method_1 ( ) { java.util.map < type_1, java.lang.boolean > var_1 = var_2. method_2 ( ) ; try { for ( type_1 path : var_1. method_3 ( ) ) { if ( var_1. get ( path ) ) { method_4 ( path ) ; var_2. remove ( path ) ; } } } catch ( type_2 var_3 ) { type_3. method_5 ( getcontext ( ), getstring ( var_4 ), var_5 ). show ( ) ; var_3. method_6 ( ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) >= ( var_2 ) ) { type_1 var_3 = method_2 ( ) ; type_2 . method_3 ( this , var_3 , string_3 , var_4 , var_5 , null , new java.lang.object [ ] { } , null ) ; return ; } method_4 ( ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( ) { public void method_3 ( ) { method_4 ( ) ; method_5 ( new android.content.intent ( var_4 this, var_5 class ) ) ; } } ; type_3 var_6 = new type_3 ( ) ; var_6. method_6 ( var_3, int_1 ) ; method_7 ( var_7 ) ; var_8 = new type_4 ( this ) ; method_8 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { var_1 = method_2 ( new type_2 ( ) ) ; var_2 = new java.util.arraylist < type_3 > ( ) ; method_3 ( var_3 ) . method_4 ( var_1 ) . method_5 ( ) ; method_3 ( var_4 ) . method_4 ( var_3 ) . method_6 ( var_5 ) ; }
[0]: public void method_1 ( int x, int y ) { for ( int var_1 = 0 ; var_1 < ( var_2. size ( ) ) ; var_1 ++ ) { if ( ( ( var_3. get ( var_1 ). var_4 ) == x ) && ( ( var_3. get ( var_1 ). var_5 ) == y ) ) { var_3. remove ( var_1 ) ; } } }

************

************
tgt: public static java.util.set < type_1 > method_1 ( ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; var_1 . add ( new type_1 ( type_2 . method_2 ( ) , false , null ) ) ; var_1 . add ( new type_1 ( type_3 . method_2 ( ) , false , null ) ) ; return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { method_2 ( ). method_3 ( var_2, var_1 ) ; type_2 var_3 = ( ( type_2 ) ( type_3. method_4 ( var_1. method_5 ( var_4 ) ) ) ) ; var_3. method_6 ( method_7 ( ). getstring ( var_5 ) ) ; type_4 var_6 = ( ( type_4 ) ( method_8 ( var_7 ) ) ) ; var_3. method_9 ( var_6. method_10 ( method_11 ( ) ) ) ; var_3. method_12 ( this ) ; return true ; }

************

************
tgt: private boolean method_1 ( int position ) { if ( ( position == 0 ) && ( ( var_2 . method_2 ( position ) ) != ( var_3 ) ) ) { return true ; } int var_1 = position - 1 ; return ( ( var_2 . method_2 ( position ) ) != ( var_3 ) ) && ( ( var_2 . method_2 ( position ) ) != ( var_2 . method_2 ( var_1 ) ) ) ; }
[0]: private type_1 method_1 ( java.lang.string text, int var_1, int height, boolean var_2 ) { type_1 var_3 = new type_1 ( text ) ; type_2. method_2 ( var_3, new type_3 ( var_1, height ) ) ; var_3. method_3 ( var_2 ) ; if (! var_2 ) { var_3. method_4 ( null ) ; } return var_3 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 type = var_1 . method_2 ( ) ; type_4 . method_3 ( ( ( ( ( string_1 + ( type . tostring ( ) ) ) + string_2 ) + ( var_2 . getid ( ) . tostring ( ) ) ) + string_3 ) ) ; return this . method_4 ( type , var_2 . getid ( ) , false ) ; }
[0]: private void method_1 ( int x ) { x = x - ( this. method_2 ( ) ) ; int var_1 = var_2. method_3 ( ) ; if ( x < 0 ) { x = 0 ; } if ( x > var_1 ) { x = var_1 ; } int var_3 = ( x * ( var_4 ) ) / var_1 ; setvalue ( var_3, true, false ) ; var_2. method_4 ( x ) ; }

************

************
tgt: public java.util.arraylist < type_1 > list ( int var_1 , java.lang.string var_2 ) { if ( ( var_1 == 0 ) && ( var_2 . equals ( string_1 ) ) ) { return type_2 . method_1 ( ) ; } else { if ( ! ( var_2 . equals ( string_1 ) ) ) { var_1 = type_3 . method_2 ( var_2 ) . method_3 ( ) ; } return type_2 . method_4 ( var_1 ) ; } }
[0]: public void method_1 ( int var_1 ) { var_2 = type_1. method_2 ( ) ; try { var_3 = var_2. method_3 ( ) ; var_3. method_4 ( ( ( string_1 + var_1 ) + string_2 ) ) ; var_3. method_5 ( ) ; method_6 ( ) ; type_1. method_7 ( ) ; } catch ( type_2 var_4 ) { var_4. method_8 ( ) ; } }

************

************
tgt: protected void method_1 ( final java.lang.boolean var_1 ) { var_2 = null ; method_2 ( false ) ; if ( var_1 ) { type_1 . method_3 ( getactivity ( ) ) ; type_2 . method_4 ( getactivity ( ) ) ; type_3 . method_5 ( getactivity ( ) , false ) ; if ( ( getactivity ( ) ) != null ) { getactivity ( ) . method_6 ( ) ; } } else { var_3 . method_7 ( getstring ( var_4 ) ) ; var_3 . method_8 ( ) ; } }
[0]: public void method_1 ( type_1 status ) { var_1. method_2 ( ) ; if ( status. method_3 ( ) ) { type_2. method_4 ( ). method_5 ( ) ; var_2. method_6 ( var_3 ) ; var_2. method_7 ( null ) ; var_2. method_8 ( null ) ; var_4. method_9 ( ) ; } else { var_4. method_10 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string filename , java.lang.long start , java.lang.long end ) { type_1 file = method_2 ( filename ) ; if ( ( file != null ) && ( file . method_3 ( ) ) ) { type_2 . method_4 ( file , ( start != null ? start . intvalue ( ) : - 1 ) , ( ( start != null ) && ( end != null ) ? ( end . intvalue ( ) ) - ( start . intvalue ( ) ) : - 1 ) , true ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { if ( ( var_2 ) && ( ( gettext ( ) ) instanceof type_2 ) ) { type_2 text = gettext ( ) ; type_3 [ ] var_3 = text. method_2 ( 0, text. length ( ), var_4 class ) ; for ( type_3 var_5 : var_3 ) { if ( ( var_5. method_3 ( ) ) == var_1 ) { method_4 ( ) ; } } } super. method_1 ( var_1 ) ; }

************

************
tgt: private boolean method_1 ( type_1 event ) { type_2 target = event . method_2 ( ) ; if ( type_3 . method_3 ( target ) ) { return ( var_1 . method_4 ( ) . method_5 ( type_3 . method_6 ( target ) ) ) || ( var_1 . method_4 ( ) . method_5 ( type_3 . method_6 ( target ) ) ) ; } return false ; }
[0]: private void method_1 ( ) { for ( java.util.map.entry < java.lang.string, java.lang.integer > var_1 : var_2. method_2 ( ) ) { java.lang.system.out.println ( ( ( ( string_1 + ( var_1. method_3 ( ) ) ) + string_2 ) + ( var_1. getvalue ( ) ) ) ) ; } java.lang.system.out.println ( ) ; }

************

************
tgt: static void method_1 ( type_1 var_1 , java.lang.string var_2 ) { type_2 var_3 = var_1 . method_2 ( var_4 class ) . method_3 ( ) ; type_3 < type_4 > var_5 = var_3 . method_4 ( ) ; var_1 . method_5 ( ) ; type_4 var_6 = var_1 . method_6 ( var_7 class , type_4 . method_7 ( ) ) ; var_6 . method_8 ( var_2 ) ; var_5 . add ( var_6 ) ; var_1 . method_9 ( ) ; }
[0]: public void method_1 ( int var_1 ) { if ( ( var_2 )!= null ) { java.lang.string var_3 = var_2 ; type_1 var_4 = ( ( type_1 ) ( method_2 ( ). method_3 ( var_3 ) ) ) ; var_4. method_4 ( var_1 ) ; } }

************

************
tgt: public boolean remove ( type_1 var_1 , type_2 var_2 , int var_3 ) { type_2 var_4 = var_1 . method_1 ( var_3 ) ; if ( var_2 . equals ( var_4 ) ) { var_1 . method_2 ( ) . remove ( var_3 ) ; return true ; } else { java.lang.system.out.println ( ( ( ( string_1 + var_2 ) + "\n" ) + var_4 ) ) ; throw new type_3 ( string_2 ) ; } }
[0]: public static boolean isempty ( java.lang.object var_1 ) { if ( type_1. isempty ( var_1 ) ) { return true ; } else if ( var_1 instanceof type_2 ) { return! ( ( ( type_2 ) ( var_1 ) ). method_1 ( ) ) ; } else { throw new type_3 ( var_2 ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_1 c = null ; try { c = var_2 . method_2 ( var_3 . method_1 ( var_1 ) ) ; if ( ( var_2 . method_3 ( c . getid ( ) ) . size ( ) ) > 0 ) c . method_4 ( var_2 . method_5 ( c . getid ( ) ) ) ; } catch ( type_2 var_4 ) { } return c ; }
[0]: public int method_1 ( ) { return ( ( int ) ( ( ( float ) ( ( var_1 ) / ( ( float ) ( ( height ) - ( var_2 ) ) ) ) ) * ( ( height ) - ( var_3 ) ) ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { var_1 . method_2 ( var_2 . gettext ( ) , var_3 . gettext ( ) , var_4 . gettext ( ) , var_5 , var_6 . getid ( ) , string_1 , var_7 . getid ( ) , var_8 , new type_2 < java.lang.void > ( ) { public void method_3 ( java.lang.void result ) { var_9 this . method_4 ( ) ; type_3 . method_5 ( var_7 . getid ( ) ) ; } public void method_6 ( java.lang.throwable var_10 ) { } } ) ; }
[0]: protected boolean method_1 ( int var_1, int height ) { var_2. method_2 ( var_1, height ) ; method_3 ( ) ; var_3. x = var_1 ; var_3. y = height ; return! ( ( var_1 == 0 ) || ( height == 0 ) ) ; }

************

************
tgt: private void method_2 ( int var_1 ) { try { boolean var_2 = var_3 . method_2 ( type_1 . method_3 ( this , var_1 ) ) ; if ( ! var_2 ) { type_2 . method_4 ( var_4 , string_1 ) ; } } catch ( type_3 var_5 ) { type_2 . method_4 ( var_4 , string_2 , var_5 ) ; } }
[0]: public double method_1 ( ) { if (! ( java.lang.double. method_2 ( var_1 ) ) ) return var_1 ; for ( int i = 0 ; i < ( method_3 ( ) [ 0 ]. length ) ; i ++ ) { final double var_2 = method_3 ( 0, i, int_1 ) ; if ( var_2 <= ( var_1 ) ) var_1 = var_2 ; } return var_1 ; }

************

************
tgt: private boolean method_1 ( java.util.list < type_1 > var_1 ) { if ( ! ( ( method_2 ( var_1 ) ) || ( method_3 ( var_1 ) ) ) ) { return false ; } if ( var_1 . isempty ( ) ) { return false ; } for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_1 var_2 = var_1 . get ( i ) ; if ( var_2 . method_4 ( ) ) { return false ; } } return true ; }
[0]: public static double method_1 ( float [ ] x, int var_1 ) { double var_2 = 0 ; for ( int i = 0 ; i < var_1 ; ++ i ) { var_2 += ( x [ i ] ) * ( x [ i ] ) ; } return type_1. method_2 ( var_2 ) ; }

************

************
tgt: public void method_1 ( type_1 view , int var_1 , int var_2 , int var_3 ) { var_2 = var_2 + 1 ; java.lang.string var_4 = ( ( ( var_3 + string_1 ) + var_2 ) + string_1 ) + var_1 ; java.lang.string var_5 = var_6 . remove ( var_7 ) ; if ( ( var_5 == null ) || ( ! ( var_5 . equals ( var_4 ) ) ) ) { var_8 = false ; } var_6 . add ( var_7 , var_4 ) ; type_2 . method_2 ( getactivity ( ) ) ; }
[0]: public type_1 method_1 ( java.lang.string id ) { type_1 var_1 = method_2 ( get ( id ) ) ; if ( ( var_1. method_3 ( ) ) == null ) { var_1. method_4 ( new java.util.date ( ). tostring ( ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( java.lang.string name , java.lang.string var_1 ) throws java.lang.exception { method_2 ( var_1 ) ; type_1 var_2 = type_2 . method_3 ( ) . var_3 . method_4 ( name , var_1 ) ; if ( var_2 == null ) { throw new java.lang.exception ( ( ( string_1 + var_1 ) + string_2 ) ) ; } method_1 ( var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { type_2. method_2 ( string_1 ) ; } long start = type_3. method_3 ( ) ; type_4. method_4 ( var_3, var_1 ) ; long end = type_3. method_3 ( ) ; if ( var_2 ) { type_2. method_2 ( ( ( string_2 + ( ( end - start ) / int_1 ) ) + string_3 ) ) ; } }

************

************
tgt: public int method_1 ( int position ) { int p = method_2 ( position ) ; if ( p == ( start ) ) return - 1 ; long value = ( ( ~ ( var_1 ) ) & ( var_2 ) ) < < ( int_1 - p ) ; return value == 0l ? - 1 : ( position - 1 ) - ( java.lang.long . method_3 ( value ) ) ; }
[0]: private void method_1 ( ) { for ( int i = var_1 ; i == 0 ; i -- ) { if ( ( position ) >= ( var_2 [ var_1 ] ) ) { break ; } else { var_2 [ ( ( var_1 ) -- ) ] = - 1 ; } } } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( var_2 . get ( ) ) { return false ; } if ( ! ( var_3 . method_3 ( var_1 , this ) ) ) { method_4 ( ) ; } return var_5 . method_1 ( var_1 ) ; }
[0]: public void method_1 ( ) { try { java.lang.object result = var_1. method_1 ( params. method_2 ( ) ) ; if ( result!= null ) { method_3 ( var_2, null, result ) ; } } catch ( java.lang.exception var_3 ) { method_3 ( var_2, var_3. method_4 ( ), null ) ; } }

************

************
tgt: public long method_1 ( long value ) { if ( value < ( start ) ) { return - 1 ; } long var_1 = value - ( var_2 ) ; long key = var_1 / ( var_3 ) ; if ( value >= ( end ) ) { long var_4 = ( value - ( end ) ) / ( var_3 ) ; long var_5 = ( var_4 + 1 ) * ( var_3 ) ; start += var_5 ; end += var_5 ; var_6 = true ; var_7 += var_4 ; } return key ; }
[0]: private java.lang.string method_1 ( type_1 var_1, int size, int var_2, java.lang.string var_3 ) { java.util.list < java.lang.integer > var_4 = method_2 ( size, ( ( int ) ( var_5 ) ) ) ; java.lang.string target = string_1 ; if ( var_3. equals ( string_2 ) ) target = method_3 ( var_1, var_4, var_2 ) ; return target ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; type_3 var_4 = ( ( type_3 ) ( var_5 . method_3 ( ) ) ) ; int position = var_4 . method_4 ( ) ; var_1 . method_5 ( var_6 , position ) ; var_1 . method_6 ( var_7 , ( ( java.util.arraylist < ? extends type_4 > ) ( var_8 ) ) ) ; }
[0]: private void method_1 ( type_1 var, type_2 var_1 ) { if ( ( var. method_2 ( ) ) || ( ( var. method_3 ( ) ) instanceof type_3 ) ) { type_4 var_2 = method_4 ( var ) ; var_2. method_5 ( var_1 ) ; } else { type_5 var_3 = var. method_3 ( ) ; java.lang.system.out.println ( ( string_1 + var_3 ) ) ; } }

************

************
tgt: private void method_1 ( ) { android.view.view var_1 = method_2 ( ( ( method_3 ( ) ) - 1 ) ) ; if ( var_1 != null ) { var_1 . method_4 ( null ) ; var_1 . method_5 ( 0 ) ; var_1 . method_6 ( 0 ) ; var_1 . method_7 ( 0 ) ; method_8 ( var_1 ) ; var_2 = var_1 ; } if ( ( ( method_3 ( ) ) <= 0 ) && ( ( var_3 ) != null ) ) { var_3 . method_9 ( ) ; } }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string title, java.lang.string var_2 ) { type_1 var_3 = var_4. method_2 ( var_1 ) ; var_3. method_3 ( var_1 ) ; var_3. method_4 ( title ) ; var_3. method_5 ( var_2 ) ; var_4. method_6 ( var_3 ) ; }

************

************
tgt: public void execute ( ) throws java.lang.exception { java.lang.system.out.print ( string_1 ) ; var_1 . method_1 ( ) ; java.lang.system.out.print ( var_2 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( new type_1 ( var_4 ) ) ; while ( ! ( method_2 ( var_3 . method_3 ( ) ) ) ) { java.lang.system.out.print ( var_2 ) ; } }
[0]: public void method_1 ( ) { var_1 = ( ( var_1 ) + 1 ) % ( method_2 ( ) ) ; if (! ( method_3 ( ). method_4 ( ) ) ) { var_2. method_5 ( var_1 ) ; var_2. method_6 ( method_3 ( ). method_7 ( ) ) ; var_2. method_8 ( var_1, true ) ; } else { var_2. method_9 ( false ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 data = ( ( type_1 ) ( args [ 0 ] ) ) ; java.lang.string message ; try { message = data . getstring ( string_1 ) ; } catch ( type_2 var_1 ) { return ; } var_2 . method_2 ( new type_3 ( var_3 , var_4 , message ) ) ; method_3 ( false ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( var_2. gettext ( ). equals ( getstring ( var_3 ) ) ) { if ( var_4. method_2 ( method_3 ( position ) ) ) { var_2. settext ( getstring ( var_5 ) ) ; } else { type_1. method_4 ( getactivity ( ). method_5 ( ), string_1, var_6 ). show ( ) ; } } else { var_4. method_6 ( method_3 ( position ) ) ; var_2. settext ( getstring ( var_3 ) ) ; } } }

************

************
tgt: public void method_1 ( android.content.context context , android.content.intent intent ) { ( ( type_1 ) ( var_1 . method_2 ( 0 ) ) ) . method_3 ( ) ; ( ( type_2 ) ( var_1 . method_2 ( 1 ) ) ) . method_4 ( ) ; ( ( type_2 ) ( var_1 . method_2 ( 1 ) ) ) . method_6 ( ) ; type_3 . method_7 ( this . method_8 ( ) , string_1 ) ; }
[0]: public boolean method_1 ( int var_1 ) { if ( ( var_1 < 0 ) || ( var_1 > int_1 ) ) return false ; if ( ( var_2 )!= ( - 1 ) ) { method_2 ( var_2, ( ( - 1 ) * ( var_3 ) ) ) ; } var_2 = var_1 ; method_2 ( var_2, var_3 ) ; return true ; }

************

************
tgt: public static void method_1 ( java.lang.string var_1 , java.lang.string param , float value ) { if ( ! ( var_2 . method_2 ( var_1 ) ) ) var_2 . method_3 ( var_1 , new type_1 ( ) ) ; type_1 var_3 = var_2 . method_4 ( var_1 ) ; var_3 . method_1 ( param , value ) ; var_2 . method_3 ( var_1 , var_3 ) ; var_4 = true ; }
[0]: protected java.lang.string method_1 ( java.lang.void... params ) { type_1 var_1 = new type_1 ( ) ; java.lang.string url = ( var_2 ) + string_1 ; type_2 var_3 = method_2 ( ) ; var_1. method_3 ( var_4 ) ; while (! ( var_5 ) ) { } try { if ( var_6 ) { var_3. put ( string_2, var_7 ) ; } } catch ( type_3 var_8 ) { var_8. method_4 ( ) ; } return var_1. method_5 ( url, var_9, var_3 ) ; } }

************

************
tgt: public void method_1 ( int index , type_1 var_1 , type_2 var_2 ) { int var_3 = var_1 . method_2 ( ) ; float [ ] var_4 = type_3 . method_3 ( var_2 , var_3 , 0 ) ; type_3 . method_1 ( this , var_1 , index , var_4 ) ; method_4 ( var_5 , 1 , index ) ; }
[0]: protected void method_1 ( java.lang.string answer, boolean var_1 ) { if ( answer == ( var_2 [ var_3 ] ) ) { var_4 += 1 ; method_2 ( ) ; } else { java.lang.string var_5 ; if (! var_1 ) { var_5 = string_1 + ( var_2 [ var_3 ] ) ; } else { var_5 = string_2 + ( var_2 [ var_3 ] ) ; } type_1 var_6 = type_1. method_3 ( method_4 ( ), var_5, var_7 ) ; var_6. show ( ) ; } } }

************

************
tgt: private boolean method_1 ( type_1 var_1 ) { type_2 . method_2 ( var_1 , string_1 ) ; try { type_3 . method_3 ( string_2 , var_1 ) ; type_4 < type_5 < java.lang.void > > result = var_2 . method_4 ( type_6 . method_5 ( var_1 , 0 ) ) ; result . get ( ) . method_6 ( ) ; return true ; } catch ( java.lang.exception var_3 ) { type_3 . method_7 ( string_3 , var_1 , var_3 ) ; } return false ; }
[0]: public void method_1 ( android.view.view view ) { if ( var_1. method_2 ( ) ) { type_1. method_3 ( method_4 ( ), var_2 ) ; type_2 var_3 = type_2. method_5 ( method_4 ( ), string_1, var_4 ) ; var_3. show ( ) ; method_6 ( 0 ) ; method_7 ( ) ; } }

************

************
tgt: public type_1 method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; ++ i ) { if ( var_2 . get ( i ) . method_1 ( ) . getvalue ( ) ) { return new type_1 ( true ) ; } } return new type_1 ( false ) ; }
[0]: public boolean method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string var_3 ) { type_2 var_4 = var_5. method_2 ( var_1, var_2, var_3 ) ; if ( var_4!= null ) { var_6. method_3 ( string_1, var_4 ) ; var_7. method_3 ( string_2, var_4 ) ; return true ; } else { return false ; } }

************

************
tgt: private void method_1 ( ) { int var_3 = line . length ( ) ; java.lang.system.out.print ( string_1 ) ; line = java.lang.string.format ( string_2 , var_4 , var_5 , ( ( var_1 ) != null ? var_1 : string_3 ) , ( ( status ) + ( var_6 ? string_4 : string_5 ) ) ) ; java.lang.system.out.print ( line ) ; for ( int i = line . length ( ) ; i <= var_3 ; i ++ ) { java.lang.system.out.print ( string_6 ) ; } }
[0]: public void method_1 ( boolean var_1 ) { if ( method_2 ( ) ) { return ; } var_2. gettext ( ). method_3 ( ) ; var_2. method_4 ( ) ; var_3. method_5 ( var_4 ) ; method_5 ( var_4 ) ; if ( var_1 ) { method_6 ( ) ; } else { method_5 ( var_5 ) ; if ( ( var_6 )!= null ) { var_6. method_7 ( ) ; } } var_7 = true ; } }

************

************
tgt: protected boolean method_1 ( int x , int y ) { if ( ( ( ( x >= 0 ) && ( x < ( this . var_1 ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) ) ) { return true ; } return false ; }
[0]: public void method_1 ( android.content.context context, java.lang.string filename ) { method_2 ( ) ; this. var_1. method_3 ( var_2, method_4 ( ). tostring ( ) ). method_5 ( ) ; java.lang.string var_3 = this. var_1. getstring ( var_2, string_1 ) ; type_1. method_6 ( context, var_3, ( filename + string_2 ), string_3 ) ; type_2. method_7 ( context, string_4, ( string_5 + filename ) ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { try { new type_1 ( var_1 , var_2 ) ; return true ; } catch ( type_2 var_3 ) { type_3 . method_3 ( string_1 , ( ( string_2 + var_1 ) + string_3 ) ) ; return false ; } catch ( java.lang.exception var_3 ) { type_3 . method_3 ( string_4 , var_3 . method_4 ( ) ) ; return false ; } }
[0]: public static void method_1 ( type_1 var_1, java.lang.string text, java.lang.object... args ) { if ( ( ( var_1!= null ) && (! ( type_2. method_2 ( var_1 ) ) ) ) && ( type_3. method_3 ( ). method_4 ( var_1 ). method_5 ( ) ) ) type_4. method_6 ( var_1, text, args ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; var_3 = ( ( type_2 ) ( method_3 ( var_4 ) ) ) ; method_4 ( var_3 ) ; var_5 = ( method_3 ( var_6 ) ) != null ; if ( ( var_5 ) && ( var_1 == null ) ) { method_5 ( ) . method_6 ( ) . replace ( var_6 , new type_3 ( ) ) . commit ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { this. var_2 = new type_2 ( this. getcontext ( ), this. var_3, this. var_4, ( ( method_2 ( ) ) / ( this. var_3 ) ), ( ( method_3 ( ) ) / ( this. var_4 ) ) ) ; this. var_2. method_4 ( var_5, int_1, 1 ) ; this. var_6. method_5 ( true ) ; this. var_6. start ( ) ; }

************

************
tgt: public android.view.view method_1 ( type_1 var_1 , type_2 var_2 , type_3 var_3 ) { view = var_1 . method_2 ( var_4 , var_2 , false ) ; var_5 = view . method_3 ( var_6 ) ; var_7 = view . method_3 ( var_8 ) ; var_7 . method_4 ( new type_4 ( getactivity ( ) . method_5 ( ) ) ) ; var_9 = view . method_3 ( var_10 ) ; method_6 ( ) ; method_7 ( ) ; return view ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1. startswith ( var_2 ) ) { return var_3 ; } else if ( type_1. method_2 ( var_1 ) ) { return var_4 ; } else if ( var_1. startswith ( var_5 ) ) { return var_6 ; } throw new type_2 ( new java.lang.stringbuilder ( string_1 ). append ( var_1 ). tostring ( ) ) ; }

************

************
tgt: private type_1 < type_2 > method_1 ( ) { return new type_1 < type_2 > ( ) { public void method_2 ( type_3 var_1 ) { } public void method_3 ( type_2 var_2 ) { if ( var_2 != null ) { method_4 ( var_2 ) ; var_3 . add ( var_2 ) ; } } public void method_5 ( java.lang.throwable var_4 ) { } public void method_6 ( ) { method_7 ( ) ; } } ; }
[0]: protected void method_1 ( final int var_1 ) { this. var_2 = var_1 ; java.lang.string var_2 = get ( var_3 ) ; if ( var_2!= null ) { try { this. var_2 = java.lang.integer. method_2 ( var_2 ) ; } catch ( type_1 var_4 ) { type_2. method_3 ( var_5, string_1, new java.lang.object [ ] { var_6, var_2, var_1 } ) ; } } }

************

************
tgt: int method_1 ( ) { java.lang.string var_1 = ( ( type_1 ) ( c . method_2 ( var_2 ) ) ) . method_3 ( ) ; return ! ( type_2 . isempty ( var_1 ) ) ? java.lang.integer.parseint ( var_1 . substring ( 0 , int_1 ) ) : 0 ; }
[0]: public void method_1 ( ) { java.util.list < type_1 > var_1 = var_2. method_2 ( ) ; type_2. assertnotnull ( var_1 ) ; assertequals ( string_1, int_1, var_1. size ( ) ) ; method_3 ( string_2, var_1. get ( 0 ). method_4 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { var_2 . method_2 ( var_3 ) ; var_4 = var_5 ; var_4 . method_3 ( java.lang.string . method_4 ( var_6 . method_5 ( ) ) ) ; var_7 = true ; android.content.intent intent = new android.content.intent ( this , var_8 class ) ; method_7 ( intent ) ; new type_2 ( this ) . execute ( var_6 . method_8 ( ) ) ; }
[0]: private void method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; var_1. add ( string_1 ) ; var_1. add ( string_2 ) ; var_1. add ( string_3 ) ; var_1. add ( string_4 ) ; var_1. add ( string_5 ) ; var_2 = new type_1 ( this, var_1 ) ; var_3. method_3 ( var_2 ) ; var_3. method_4 ( this ) ; }

************

************
tgt: private type_1 method_1 ( java.lang.string filename , java.lang.string filepath , java.lang.string var_1 ) { return new type_1 ( filename , type_3 . method_3 ( filepath , var_1 ) , type_3 . method_5 ( filename ) , var_2 < type_4 > method_6 ( ) . method_7 ( type_3 . method_8 ( filepath ) ) . build ( ) ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if ( var_2. add ( var_3, var_4. getvalue ( ), var_5. getvalue ( ), var_6. getvalue ( ), var_7. getvalue ( ) ) ) { method_2 ( ) ; } else { type_1 temp = type_1. method_3 ( c. method_4 ( ), string_1, var_8 ) ; temp. show ( ) ; } }

************

************
tgt: public boolean method_1 ( ) { return ( ( var_4 ) != ( - 1 ) ) && ( ( ( ( ( var_4 ) >= ( var_5 ) ) || ( var_3 . method_2 ( ) ) ) || ( ( var_2 ) > 0 ) ) || ( var_6 . method_3 ( ) ) ) ; }
[0]: public synchronized void method_1 ( ) { var_1 = new java.io.file ( var_2 ) ; while ( var_3 ) { var_4 = true ; var_4 = false ; try { java.lang.thread. method_2 ( ( ( var_5 ) * int_1 ) ) ; } catch ( type_1 var_6 ) { java.lang.thread. method_3 ( ). method_4 ( ) ; } } }

************

************
tgt: private void method_1 ( ) { type_1 var_1 ; type_2 var_2 ; var_1 = ( ( type_1 ) ( var_3 . method_2 ( ) . method_3 ( ) ) ) ; try { type_5 . method_7 ( ) ; var_2 = type_3 . method_4 ( getclass ( ) . method_5 ( string_1 ) ) ; type_4 var_4 = new type_4 ( var_2 ) ; var_1 . method_6 ( var_4 ) ; var_1 . show ( ) ; } catch ( java.io.ioexception var_5 ) { var_5 . method_8 ( ) ; } }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; var_1 = new type_1 ( var_2 ) ; var_1. method_2 ( new type_2 ( var_3, var_3 ) ) ; for ( int i = 0 ; i < ( method_3 ( ) ) ; ++ i ) { android.view.view var_4 = method_4 ( i ) ; method_5 ( var_4 ) ; var_1. method_6 ( var_4 ) ; } }

************

************
tgt: private void method_1 ( ) { java.lang.string var_1 = var_2 . method_2 ( ) . getvalue ( ) ; if ( type_1 . method_3 ( var_1 ) ) { var_3 . update ( null ) ; } else { java.util.date var_4 = this . var_2 . method_4 ( ) . method_5 ( var_2 , var_1 , false ) ; if ( var_4 == null ) { var_3 . method_6 ( type_2 . method_7 ( var_5 ) ) ; } else { var_3 . update ( new type_3 ( var_4 ) ) ; } } }
[0]: public void method_1 ( java.lang.string path ) { if ( ( var_1 ) == null ) var_1 = method_2 ( var_2 ) ; try { var_1. method_3 ( var_2, type_1. method_4 ( path ) ) ; method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { type_2. method_6 ( var_4, var_3 ) ; var_3. method_7 ( ) ; } }

************

************
tgt: public int method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { java.lang.long var_3 = var_4 . get ( var_1 ) ; java.lang.long var_5 = var_4 . get ( var_2 ) ; if ( var_5 == null ) { var_5 = 0l ; } if ( var_3 == null ) { var_3 = 0l ; } return var_5 . compareto ( var_3 ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { if (! ( var_2 ) ) return ; type_1 b = new type_1 ( ) ; java.lang.string filepath = ( ( ( var_3 ) + ( var_4 ) ) + ( var_5 ) ) + string_1 ; b. method_2 ( string_2, filepath ) ; type_2 msg = type_2. method_3 ( null, 1 ) ; msg. method_4 ( b ) ; try { var_6. method_5 ( msg ) ; } catch ( type_3 var_7 ) { var_7. method_6 ( ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.long var_1 , java.lang.string var_2 , java.lang.string var_3 , java.lang.long var_4 , type_2 var_5 ) { java.lang.string var_6 = ( ( java.lang.string ) ( var_5 . method_2 ( string_3 ) ) ) ; type_1 var_7 = var_8 . method_1 ( var_1 , var_2 , var_6 , var_3 , var_4 ) ; return var_7 ; }
[0]: public void set ( java.lang.string path, java.lang.object value, java.lang.string var_1 ) { if (! ( this. var_2. contains ( path ) ) ) { this. var_2. set ( ( ( ( var_3. method_1 ( ) ) + string_1 ) + ( var_4 ) ), ( string_2 + var_1 ) ) ; ( var_4 ) ++ ; } this. var_2. set ( path, value ) ; }

************

************
tgt: protected java.io.file method_1 ( java.io.file var_1 , java.lang.string var_2 ) throws type_1 { try { return new java.io.file ( java.lang.string.format ( var_3 , var_1 . method_2 ( ) , var_2 , string_1 ) ) ; } catch ( java.io.ioexception var_4 ) { throw new type_1 ( string_2 , var_4 ) ; } }
[0]: public type_1 method_1 ( int id, java.lang.string var_1, java.lang.string var_2, java.lang.string var_3 ) { try { type_1 c = new type_1 ( ( ++ id ), var_1, var_2, var_3 ) ; var_4. method_2 ( c ) ; return c ; } catch ( java.lang.exception var_5 ) { return null ; } }

************

************
tgt: public void method_1 ( float x , float y , float var_1 ) { if ( ( index ) == ( - 1 ) ) { return ; } type_1 . method_2 ( var_2 . method_3 ( index ) , var_3 , x , y , var_1 ) ; }
[0]: public type_1 method_1 ( ) { type_1 tmp = new type_1 ( method_2 ( ), method_3 ( ) ) ; tmp. method_4 ( method_5 ( ) ) ; tmp. method_6 ( method_7 ( ) ) ; tmp. method_8 ( method_9 ( ) ) ; tmp. method_10 ( method_11 ( ) ) ; tmp. method_12 ( method_13 ( ) ) ; tmp. method_14 ( method_15 ( ) ) ; tmp. method_16 ( method_17 ( ) ) ; tmp. method_18 ( method_19 ( ) ) ; return tmp ; }

************

************
tgt: public type_1 method_1 ( int position ) { switch ( position ) { case 0 : return var_2 . method_2 ( string_1 , string_2 ) ; case 1 : return var_1 . method_2 ( string_1 , string_2 ) ; case int_1 : return var_2 . method_2 ( string_1 , string_2 ) ; case int_2 : return var_1 . method_2 ( string_1 , string_2 ) ; case int_3 : return var_2 . method_2 ( string_1 , string_2 ) ; default : return null ; } }
[0]: private boolean method_1 ( int var_1 ) { int i = var_1 ; while ( i >= 0 ) { if ( ( i % ( var_2 ) ) == 0 ) break ; i -- ; } int start = i ; for ( ; i < ( ( start + ( var_2 ) ) - 1 ) ; i ++ ) { if ( ( var_3 [ i ] )!= null ) { return false ; } } return true ; } }

************

************
tgt: public boolean method_1 ( type_1 t , type_2 n , type_2 var_1 ) { switch ( n . gettype ( ) ) { case var_2 : method_2 ( n ) ; break ; case var_3 : case var_4 : case var_5 : method_3 ( n ) ; break ; case var_6 : if ( method_4 ( n . method_5 ( ) ) ) { var_7 . method_6 ( type_3 . method_7 ( n , var_9 , string_1 ) ) ; return false ; } break ; } return true ; }
[0]: public void method_1 ( ) { super. method_1 ( ) ; var_1 = var_2. method_2 ( ). method_3 ( ) ; var_3 = var_1. method_4 ( ) ; var_4 = var_1. getvalue ( ) ; if ( ( var_5 ) == null ) { method_5 ( ) ; } var_1. setvalue ( type_1. get ( string_1 ) ) ; var_1. method_6 ( var_5 ) ; var_5. method_7 ( ) ; }

************

************
tgt: public boolean method_1 ( final java.lang.string var_1 , final java.lang.string var_2 , final java.lang.string var_3 ) { final type_1 var_4 = method_2 ( var_1 ) ; if ( ( var_4 != null ) && ( var_5 . equals ( var_2 ) ) ) { if ( var_6 . equals ( string_1 ) ) return true ; java.lang.string [ ] var_7 = var_6 . split ( string_2 ) ; for ( java.lang.string var_8 : var_7 ) if ( var_8 . equals ( var_3 ) ) return true ; } return false ; }
[0]: public boolean method_1 ( type_1 var_1, type_2 var_2 ) throws type_3 { var_3 = var_2. getstring ( string_1 ) ; var_4 = var_2. getstring ( string_2 ) ; var_5 = var_2. getstring ( string_3 ) ; var_6 = java.lang.integer. method_2 ( var_2. getstring ( string_4 ) ) ; var_1. method_3 ( this, var_2 ) ; method_4 ( ) ; return super. method_1 ( var_1, var_2 ) ; }

************

************
tgt: public static float [ ] method_1 ( type_1 buffer ) { float [ ] array = new float [ 0 ] ; if ( buffer != null ) { if ( buffer . method_2 ( ) ) { array = buffer . array ( ) ; } else { buffer . method_3 ( ) ; array = new float [ buffer . method_4 ( ) ] ; buffer . get ( array ) ; } } return array ; }
[0]: protected void method_1 ( java.lang.object result ) { var_1 = false ; if ( ( listener )!= null ) { listener. method_2 ( method. getname ( ) ) ; } if ( ( ( var_2 )!= null ) && ( var_3 ) ) { var_3 = false ; var_2. method_3 ( var_4, var_5 ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; if ( var_1 == string_1 ) { var_2 = var_3 . query ( var_4 , null , null , null , null , null , ( ( var_5 ) + string_2 ) ) ; } else if ( var_1 == string_3 ) { var_2 = var_3 . query ( var_4 , null , null , null , null , null , ( ( var_6 ) + string_2 ) ) ; } return var_2 ; }
[0]: public void method_1 ( android.content.context context ) { super. method_1 ( context ) ; try { var_1 = ( ( type_1 ) ( method_2 ( ) ) ) ; } catch ( java.lang.exception var_2 ) { type_2. method_3 ( getcontext ( ), string_1, var_2 ) ; } }

************

************
tgt: private static type_1 < type_2 > method_1 ( java.lang.string filename , type_2 var_1 ) { type_3 . method_2 ( filename ) ; type_3 . method_2 ( var_1 ) ; type_2 file = type_4 . get ( filename ) ; if ( filename . isempty ( ) ) { return type_1 . method_4 ( var_1 ) ; } type_2 var_2 = var_1 . method_5 ( file ) ; if ( type_5 . method_3 ( var_2 ) ) { return type_1 . method_4 ( var_2 ) ; } else { return type_1 . method_6 ( ) ; } }
[0]: public void method_1 ( type_1 param ) { if ( this. errors. contains ( param ) ) { this. errors. remove ( param ) ; } if ( this. var_1. contains ( param ) ) { this. var_1. remove ( param ) ; } this. var_2. method_2 ( new type_2 ( this, var_3, null ) ) ; }

************

************
tgt: private void method_1 ( type_1 token ) throws type_2 { if ( ( var_1 ) != token ) { throw new type_2 ( java.lang.string.format ( string_1 , var_2 . method_2 ( ) , var_2 . method_3 ( ) , var_1 , token ) ) ; } var_1 = var_2 . method_5 ( ) ; }
[0]: public void method_1 ( int var_1, type_1 response, java.lang.string message ) { if ( var_1 == ( var_2 ) ) { if ( ( response!= null ) && ( ( response. method_2 ( ) ) == int_1 ) ) { var_3. info ( ) ; var_4. method_3 ( getstring ( var_5 ) ) ; } else { var_4. method_3 ( message ) ; } } else if ( var_1 == ( var_6 ) ) { } } }

************

************
tgt: private static boolean method_1 ( ) { if ( ( var_2 ) != null ) { java.io.file var_1 = new java.io.file ( var_2 ) ; if ( ( var_1 != null ) && ( var_1 . method_2 ( ) ) ) { return true ; } } final java.lang.string var_3 = type_1 . method_3 ( string_1 ) ; if ( var_3 != null ) { java.io.file var_1 = new java.io.file ( var_3 ) ; if ( ( var_1 != null ) && ( var_1 . method_2 ( ) ) ) { return true ; } } return false ; }
[0]: public void handle ( type_1 event ) { try { type_2 var_1 = method_1 ( ) ; if ( var_1 == null ) return ; for ( int i = 1 ; i <= ( var_1. method_2 ( ) ) ; i ++ ) { method_3 ( i ) ; method_4 ( ) ; } } catch ( type_3 var_2 ) { type_4. error ( string_1, var_2 ) ; } }

************

************
tgt: private static int method_1 ( final int var_1 , final int var_2 , final type_1 state , final type_2 var_3 , final type_3 var_4 ) { return var_1 | ( type_4 . method_2 ( ) . method_3 ( ) . method_4 ( state , var_3 , var_4 , var_2 ) ) ; }
[0]: public type_1 method_1 ( java.util.collection < java.lang.string > var_1 ) { if ( var_1 == null ) { this. var_2 = type_2. method_2 ( ) ; } else { this. var_2 = method_3 ( ( ( java.lang.string [ ] ) ( var_1. method_4 ( new java.util.arraylist < java.lang.string > ( ) ) ) ) ; } return this ; }

************

************
tgt: public int method_1 ( ) { int var_1 = int_1 ; var_1 = ( int_2 * var_1 ) + ( this . var_2 . method_1 ( ) ) ; var_1 = ( int_2 * var_1 ) + ( this . var_3 . method_1 ( ) ) ; return var_1 ; }
[0]: public java.util.set < type_1 > method_1 ( ) throws type_2 { try { return type_3. method_2 ( var_1. get ( var_2, this : : method_3 ) ) ; } catch ( type_4 | type_5 var_3 ) { throw new type_2 ( var_3. method_4 ( ) ) ; } }

************

************
tgt: protected type_1 method_1 ( java.lang.charsequence var_1 ) { type_1 var_2 = new type_1 ( ) ; if ( var_1 != null ) { java.util.list < java.lang.string > results = method_2 ( var_1 . tostring ( ) ) ; var_2 . values = results ; var_2 . count = results . size ( ) ; } return var_2 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1, type_2, type_3, type_4 { var_1 = var_1. replaceall ( string_1, string_2 ) ; var_1 = var_1. replaceall ( string_3, string_4 ) ; var_1 = var_1. replaceall ( string_5, string_6 ) ; var_1 = var_1. replaceall ( string_7, string_8 ) ; var_1 = var_1. replaceall ( string_9, string_10 ) ; var_1 = var_1. replaceall ( string_11, string_2 ) ; return new java.lang.string ( type_5. method_2 ( var_2, var_3, var_1 ) ) ; }

************

************
tgt: public static void method_1 ( ) { java.io.bufferedreader var_1 = null ; java.lang.string var_2 = string_1 ; try { var_1 = new java.io.bufferedreader ( new java.io.filereader ( string_2 ) ) ; while ( ( var_2 = var_1 . method_2 ( ) ) != null ) { type_1 . method_3 ( var_2 ) ; java.lang.thread . method_4 ( int_1 ) ; } } catch ( java.lang.exception var_3 ) { } }
[0]: public boolean method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; if ( ( ( var_2!= null ) && ( var_1 >= 0 ) ) && ( var_1 <= ( var_2. method_3 ( ). size ( ) ) ) ) { var_3 = var_1 ; return true ; } return false ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > parameters , type_2 var_1 ) { while ( var_1 . method_2 ( ) ) { type_3 var_2 = method_3 ( var_1 ) ; if ( var_2 == null ) { break ; } if ( var_2 . method_4 ( ) ) { method_6 ( parameters , method_7 ( var_2 ) ) ; } var_1 = ( ( type_2 ) ( var_2 . method_8 ( ) ) ) ; } }
[0]: public void method_1 ( java.lang.string var_1 ) { while ( ( var_2. size ( ) ) > 0 ) { type_1 var_3 = var_2. method_2 ( ) ; if ( var_3. getid ( ). equals ( var_1 ) ) { var_2. remove ( var_3 ) ; } else if ( var_3. method_3 ( ) ) { var_2. remove ( var_3 ) ; var_4. method_4 ( var_3 ) ; } } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string id , type_1 var_1 ) { type_5 var_3 = new type_5 ( ) ; if ( ! ( id . equals ( string_1 ) ) ) { type_3 var_2 = type_4 . method_2 ( ) . method_3 ( ) ; var_3 = ( ( type_5 ) ( var_2 . method_4 ( ( string_2 + id ) ) . list ( ) . get ( 0 ) ) ) ; } var_1 . method_5 ( string_3 , var_3 ) ; return string_4 ; }
[0]: protected void method_1 ( ) { if ( var_1 ) { method_2 ( ). method_3 ( var_2, ( ( ( ( ( var_3 ) | ( var_4 ) ) | ( var_5 ) ) | ( var_6 ) ) | ( var_7 ) ) ) ; } else { method_2 ( ). method_3 ( var_2, ( ( ( ( var_3 ) | ( var_4 ) ) | ( var_5 ) ) | ( var_6 ) ) ) ; } }

************

************
tgt: public void method_1 ( ) { for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . method_2 ( int_2 ) ; type_1 answer = var_1 . method_3 ( int_2 ) ; method_4 ( var_1 . method_5 ( int_2 ) . method_6 ( var_1 . method_7 ( ) ) ) ; } }
[0]: public java.util.linkedlist < type_1 > method_1 ( type_2 var_1, type_3 var_2, type_4 var_3, boolean var_4 ) throws java.io.ioexception, java.lang.classnotfoundexception, type_5, type_6, type_7, type_8, type_9 { this. var_5 = var_2. method_2 ( ). method_3 ( ) ; if ( ( var_6 ) == null ) { method_4 ( var_1, var_4, true ) ; } return var_6 ; }

************

************
tgt: private void method_1 ( ) { var_1 = new type_1 ( ) ; var_1 . method_2 ( type_2 . method_3 ( java.lang.integer.parseint ( type_3 . method_4 ( var_2 ) . getstring ( var_2 . getstring ( var_3 ) , var_2 . getstring ( var_4 ) ) ) ) ) ; var_1 . method_5 ( var_1 . method_6 ( ) ) ; var_1 . method_7 ( var_5 ) ; }
[0]: public type_1 method_1 ( ) { type_1 var_1 = new type_1 ( 0, 0 ) ; int i = var_2. size ( ) ; for ( type_1 var_3 : var_2 ) { var_1 = var_1. add ( var_3. method_2 ( i ) ) ; -- i ; } return var_1. method_3 ( var_2. size ( ) ) ; }

************

************
tgt: public void setenabled ( boolean var_1 ) { super . setenabled ( var_1 ) ; if ( ( var_2 ) || ( ( var_3 ) >= ( var_4 ) ) ) { method_1 ( 1.0f ) ; } else { method_1 ( ( var_1 ? 1.0f : var_5 ) ) ; } }
[0]: private void method_1 ( ) { method_2 ( ) ; for ( type_1 var_1 : var_2 ) var_3. method_3 ( new type_2 ( var_4, var_5, var_6, var_1 ). step ( var_1 ) ) ; var_3. method_4 ( this ) ; var_3 = null ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) { java.util.list < type_1 > result = new java.util.arraylist < type_1 > ( ) ; java.util.list < type_1 > var_1 = var_2 . query ( var_3 , new type_2 ( ) ) ; for ( type_1 var_4 : var_1 ) { java.lang.string var_5 = java.lang.string.format ( var_6 , var_4 . getid ( ) ) ; var_4 . method_2 ( var_2 . query ( var_5 , new type_3 ( ) ) ) ; result . add ( var_4 ) ; } return result ; }
[0]: public java.lang.string method_1 ( ) { return ( ( ( ( ( ( getname ( ) ) + string_1 ) + ( method_2 ( ) ) ) + string_2 ) + ( method_3 ( ) ) ) + string_1 ) + ( method_4 ( ) ) ) + char_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = method_2 ( ) ; if ( var_2 == null ) type_2 . method_3 ( var_3 , string_1 ) ; else { type_3 . method_5 ( var_4 , method_6 ( ) ) ; var_5 . method_7 ( var_2 ) ; new type_4 ( ) . execute ( ) ; } }
[0]: public void open ( ) { open = true ; for ( type_1 var_1 : var_2 ) { var_1. method_1 ( true ) ; } for ( type_1 var_3 : var_4 ) { var_3. method_1 ( false ) ; } for ( type_1 text : var_5 ) { text. method_1 ( true ) ; } type_2. method_2 ( ) ; type_3. method_3 ( true ) ; }

************

************
tgt: public static final type_1 method_1 ( java.lang.string content ) { if ( content == null ) { throw new type_2 ( string_1 ) ; } char [ ] var_1 = type_3 . format ( content . method_3 ( ) ) ; return type_3 . method_4 ( var_1 , 0 , var_1 . length ) ; }
[0]: public java.lang.object remove ( int index ) { method_1 ( index ) ; java.lang.object temp = var_1 [ index ] ; type_1. method_2 ( var_1, ( index + 1 ), var_1, index, ( ( size ) - index ) ) ; ( size ) -- ; return temp ; }

************

************
tgt: private type_1 method_1 ( ) { for ( int i = 0 ; i < ( var_1 . method_2 ( ) ) ; ++ i ) { if ( ! ( var_1 . method_3 ( i ) . isempty ( ) ) ) return var_1 . method_3 ( i ) ; } return var_3 ; }
[0]: public void method_1 ( long var_1 ) { this. var_1 = var_1 ; if ( ( this. var_1 ) > 0 ) { method_2 ( this. var_2. method_3 ( ). method_4 ( ) ) ; } else { method_2 ( this. var_2. method_3 ( ). method_4 ( ) ) ; } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { try { for ( java.lang.string var_2 : var_1 . split ( string_1 ) ) this . to . add ( new type_1 ( var_2 ) ) ; } catch ( type_2 var_3 ) { throw new type_3 ( var_3 ) ; } }
[0]: private void method_1 ( android.content.context context, java.lang.string title, java.lang.string message, java.lang.string var_1, android.content.intent intent, java.lang.string var_2 ) { var_3 = new type_1 ( context ) ; intent. method_2 ( ( ( var_4 ) | ( var_5 ) ) ) ; var_3. method_3 ( title, message, var_1, intent, var_2 ) ; type_1 var_3 = new type_1 ( method_4 ( ) ) ; var_3. method_5 ( ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , java.lang.string title ) { type_2 var_2 = method_2 ( ) ; type_3 var_3 = var_2 . method_3 ( ) ; var_3 . replace ( var_4 , var_1 ) ; var_3 . method_4 ( title ) ; var_3 . commit ( ) ; }
[0]: public java.util.arraylist < java.lang.boolean > method_1 ( ) { java.util.arraylist < java.lang.boolean > var_1 = new java.util.arraylist < java.lang.boolean > ( length ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { var_1. set ( i, get ( i ) ) ; } return var_1 ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = method_2 ( type_2 . method_3 ( ) ) ; type_1 var_2 = method_2 ( type_2 . method_4 ( ) ) ; type_1 var_3 = method_2 ( type_2 . method_5 ( ) ) ; type_1 var_4 = method_2 ( type_2 . method_6 ( ) ) ; var_5 = var_6 = true ; method_7 ( var_1 , var_2 , var_4 ) ; method_8 ( var_2 , var_3 ) ; method_9 ( var_3 , var_4 ) ; method_10 ( ) ; method_11 ( var_1 , var_3 ) ; method_12 ( var_2 ) ; }
[0]: protected void method_1 ( android.content.intent intent ) { if ( type_1. method_2 ( intent ) ) { type_1 result = type_1. method_3 ( intent ) ; type_2 type_3 = result. method_4 ( ) ; if ( ( type_3. method_5 ( ) ) >= int_1 ) { var_1 = type_3. tostring ( ) ; var_2 = type_3. method_5 ( ) ; } else var_3 = string_1 ; } else { var_1 = type_3. tostring ( ) ; var_2 = type_3. method_5 ( ) ; } } }

************

************
tgt: protected void method_1 ( boolean var_1 , int var_2 , int t , int var_3 , int b ) { if ( ! var_1 ) return ; method_2 ( ) ; if ( ( var_4 ) != null ) for ( int i = 0 ; i < ( var_4 . size ( ) ) ; i ++ ) { var_4 . get ( i ) . method_1 ( this ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { try { super. method_1 ( var_1 ) ; } catch ( java.lang.nullpointerexception var_2 ) { boolean var_3 = method_2 ( ) ; method_3 ( false ) ; super. method_1 ( var_1 ) ; method_3 ( var_3 ) ; } }

************

************
tgt: public java.util.collection < type_1 > method_1 ( boolean var_1 ) { java.util.arraylist < type_1 > result = new java.util.arraylist < type_1 > ( ) ; if ( var_1 == true ) { var_2 = false ; var_3 = false ; } if ( ( var_2 ) == false ) { result . add ( method_2 ( ) ) ; } if ( ( var_3 ) == false ) { result . add ( method_3 ( ) ) ; } return result ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 data ) { type_2 p = new type_2 ( var_1 ) ; var_3 = p. method_2 ( char_1 ) ; java.lang.string source = p. get ( ) ; if ( ( source. length ( ) ) == 0 ) return false ; if (! ( super. method_1 ( var_2, data ) ) ) return false ; var_4 = var_5 ; var_5 = source ; return true ; }

************

************
tgt: void method_1 ( type_1 var_1 , type_2 var_2 ) throws java.lang.exception { java.lang.string var_3 = type_3 . method_2 ( var_1 ) ; java.util.list < type_4 > var_4 = var_5 . method_1 ( var_3 ) . get ( ) ; var_2 . method_3 ( var_4 . size ( ) ) ; for ( type_4 var_6 : var_4 ) { type_5 . method_4 ( var_6 . method_4 ( ) , var_2 ) ; } }
[0]: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { try { java.lang.string str = string_1 ; type_2 query = var_2. method_2 ( str ) ; query. method_3 ( string_2, var_1 ) ; return query. method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_3. method_5 ( ) ; var_2. method_6 ( ) ; return null ; } }

************

************
tgt: private java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_1 . add ( new type_1 ( ( i / float_1 ) , 0.0 ) ) ; } return var_1 ; }
[0]: private void method_1 ( ) { type_1 var_1 = this. method_2 ( ). method_3 ( ). method_4 ( string_1 ) ; if ( ( var_2 ) == null ) { if ( var_1!= null ) { var_2 = ( ( type_2 ) ( var_1 ) ) ; } } }

************

************
tgt: public type_1 < java.lang.string , type_2 > method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.util.set < type_3 > var_3 , type_4 var_4 ) throws type_5 { type_6 var_5 = method_2 ( var_1 ) ; type_7 var_6 = getclass ( var_2 , var_5 ) ; if ( var_6 == null ) { throw new type_5 ( ( string_1 + var_2 ) ) ; } type_2 var_7 = method_1 ( var_5 , var_6 , var_3 , true , var_4 ) ; return type_1 . method_3 ( type_8 . getid ( var_7 ) , var_7 ) ; }
[0]: public java.lang.string method_1 ( ) { type_1 var_1 = var_2. method_2 ( ) ; var_1. method_3 ( var_3 [ var_1. method_4 ( ) ] ) ; if ( ( var_4 ) == true ) { java.lang.string var_5 = ( ( string_1 + var_1 ) + string_2 ) + ( var_1. method_5 ( ) ) ; } return var_5 ; }

************

************
tgt: private boolean method_1 ( type_1 var_1 , int var_2 , int var_3 ) { int var_4 = 1 ; for ( int i = ( var_1 . method_2 ( ) ) + 1 ; i < var_3 ; i ++ ) { if ( method_3 ( ( ( var_1 . method_4 ( ) ) + var_4 ) , i ) ) return true ; var_4 ++ ; } return false ; }
[0]: private type_1 < type_2 > method_1 ( type_2 value, type_1 < type_2 > node ) { if ( node == null ) { return null ; } int var_1 = value. compareto ( node. value ) ; if ( var_1 == 0 ) { return node ; } else if ( var_1 > 0 ) { return method_1 ( value, var_2 ) ; } else { return method_1 ( value, var_3 ) ; } }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) > 0 ) { var_2 . method_2 ( ) . method_3 ( ( ( var_1 ) - 1 ) ) ; new type_1 ( var_2 ) ; } else { var_2 . method_2 ( ) . method_3 ( 0 ) ; var_2 . method_2 ( ) . method_4 ( ) ; new type_2 ( var_2 ) ; } }
[0]: public boolean method_1 ( type_1 event ) { var_1 = ( ( int ) ( event. method_2 ( ) ) ) ; var_2 = ( ( int ) ( event. method_3 ( ) ) ) ; method_4 ( ) ; method_5 ( true ) ; return super. method_1 ( event ) ; }

************

************
tgt: public type_1 < type_2 , type_3 > . var_1 method_1 ( type_2 var_2 ) { type_4 < type_1 < type_2 , type_3 > . var_1 > iterator = var_3 . method_2 ( ) ; while ( iterator . method_3 ( ) ) { type_1 < type_2 , type_3 > . var_1 var_4 = iterator . method_4 ( ) ; if ( ( var_5 . compareto ( var_2 ) ) == 0 ) { iterator . remove ( ) ; return var_4 ; } } return null ; }
[0]: private void method_1 ( type_1 var_1 ) { final java.util.collection < type_2 > var_2 = var_1. method_2 ( ) ; if ( var_2!= null ) { for ( type_2 var_3 : var_2 ) { final int var_4 = method_3 ( ) ; var_3. method_4 ( var_4 ) ; } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { java.util.map var_1 = new type_1 ( ) ; java.util.list a = new java.util.arraylist ( ) ; var_1 . put ( string_1 , string_2 ) ; var_1 . put ( string_3 , a ) ; a . add ( string_4 ) ; a . add ( a ) ; a . add ( var_1 ) ; a . add ( new type_1 ( ) ) ; java.lang.string var_2 = new type_2 ( ) . tostring ( a ) ; java.lang.system.out.println ( var_2 ) ; }
[0]: public static type_1 method_1 ( boolean var_1, java.lang.object message, java.lang.string var_2, java.lang.string var_3, long var_4 ) { type_2 response = new type_2 ( true, message ) ; type_3 var_5 = type_4. method_2 ( response ). method_3 ( ) ; var_5. method_4 ( string_1, var_3 ) ; var_5. method_4 ( string_2, var_4 ) ; type_1 var_6 = new type_1 ( string_3 ) ; var_6. method_5 ( string_4, var_2 ) ; var_6. method_5 ( string_5, type_4. method_6 ( response ) ) ; return var_6 ; }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( obj instanceof type_1 ) { type_1 var_1 = ( ( type_1 ) ( obj ) ) ; if ( ( var_2 ) != ( var_3 ) ) return false ; if ( ( var_4 ) != ( var_5 ) ) return false ; if ( ! ( var_6 . equals ( var_7 ) ) ) return false ; return true ; } return false ; }
[0]: public void method_1 ( java.lang.object element ) { int var_1 = size ( ) ; if ( var_1 == ( ( n ) - 1 ) ) { method_2 ( ) ; } var_2 [ ( ( var_3 ) ++ ) ] = ( ( type_1 ) ( element ) ) ; if ( ( var_3 ) == ( n ) ) { var_3 = 0 ; } }

************

************
tgt: public boolean method_1 ( ) { boolean var_1 = method_2 ( ) ; type_1 var_2 ; if ( var_1 ) { if ( method_3 ( ) ) { var_2 = var_3 ; } else { var_2 = var_4 ; } this . var_5 = type_2 . method_4 ( var_6 , var_7 , var_8 , var_9 , var_2 ) ; } else { var_2 = var_4 ; this . var_5 = type_2 . method_4 ( var_6 , var_7 , var_8 , var_9 , var_2 ) ; } return method_2 ( ) ; }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1. method_2 ( var_2 ) ) || ( type_1. method_3 ( var_3 ) ) ) { return string_1 ; } if ( var_1. method_4 ( ) ) { if ( var_4. method_5 ( ) ) { return string_2 ; } return string_3 ; } return string_4 ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) throws java.lang.exception { java.lang.string var_1 = string_1 ; type_1 < type_2 > var_2 = type_3 . method_1 ( var_1 ) ; java.lang.string var_3 = args [ 0 ] ; java.lang.string var_4 = args [ 1 ] ; type_4 [ ] var_5 = new type_4 ( var_3 ) . method_2 ( type_4 : : method_3 ) ; for ( type_4 path : var_5 ) { java.lang.system.out.print ( method_4 ( ) ) ; java.lang.system.out.println ( ) ; } }
[0]: private void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; this. var_2. method_2 ( var_1, null ) ; type_2 var_3 = method_3 ( ) ; type_3 var_4 = new type_3 ( var_3 ) ; this. var_2. method_2 ( var_4, null ) ; type_4 var_5 = new type_4 ( this ) ; this. var_2. method_2 ( var_5, null ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( ) ; type_3 var_4 = new type_3 ( int_1 , var_5 , true ) ; type_3 var_6 = new type_3 ( int_2 , var_7 , true ) ; var_2 . method_2 ( 0 , var_4 ) ; var_2 . method_2 ( 0 , var_6 ) ; var_2 . split ( ) ; assertequals ( false , var_8 ) ; }
[0]: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { try { java.lang.system.out.print ( string_1 ) ; var_1 = type_1. method_2 ( new java.io.file ( string_2 ) ) ; java.lang.system.out.println ( string_3 ) ; } catch ( type_2 var_2 ) { var_2. method_3 ( ) ; } } return var_1 ; }

************

************
tgt: protected type_1 [ ] method_1 ( type_2 ... params ) { if ( params [ 0 ] . method_2 ( ) ) return null ; type_1 [ ] var_1 = null ; try { var_1 = type_1 . method_3 ( params [ 0 ] ) ; } catch ( type_3 var_2 ) { var_2 . method_4 ( ) ; } return var_1 ; }
[0]: void method_1 ( int var_1, int var_2 ) { var_3. setenabled ( ( var_1!= ( - 1 ) ) ) ; var_4. setenabled ( ( ( var_1!= ( - 1 ) ) && ( var_5. method_2 ( var_1 ). method_3 ( ) ) ) ) ; var_6. setenabled ( ( ( var_1!= ( - 1 ) ) && ( var_5. method_2 ( var_1 ). method_3 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( var_1 ) != null ) { var_2 = method_2 ( var_3 ) ; } else { var_2 = var_4 . method_3 ( ) ; } if ( ( var_2 ) != null ) { type_1 var_5 = new type_1 ( this , var_2 ) ; var_6 . method_4 ( var_5 ) ; } }
[0]: public void method_1 ( final java.util.list < java.lang.string > var_1 ) { if ( var_1. isempty ( ) ) { type_1 item = type_1. method_2 ( string_1 ) ; method_3 ( item, var_2 ) ; } for ( java.lang.string var_3 : var_1 ) { java.io.file file = new java.io.file ( var_3 ) ; if ( file. method_4 ( ) ) { var_4 = file. method_5 ( ) ; method_6 ( file ) ; } else { method_7 ( file ) ; } } }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { if ( var_1 . equals ( string_1 ) ) { if ( var_2 . isempty ( ) ) return ; else method_2 ( var_2 . method_3 ( ) ) ; } else if ( var_1 . equals ( string_2 ) ) { if ( var_3 . isempty ( ) ) return ; else method_4 ( var_3 . method_3 ( ) ) ; } }
[0]: private java.lang.boolean method_1 ( java.lang.boolean error, java.lang.double var_1, java.lang.integer var_2, java.lang.integer var_3, type_1 var_4 ) { if ( ( var_2 == int_1 ) && ( var_1 > var_3 ) ) { error = var_5 ; } if ( ( var_2 == 1 ) && ( var_1 > 0 ) ) { error = var_5 ; } return error ; }

************

************
tgt: public void method_1 ( double var_1 ) { type_1 var_2 = var_3 . method_2 ( this ) ; if ( ( var_2 == null ) || ( ( var_2 != null ) && ( ( method_4 ( var_2 ) ) >= ( int_1 * ( var_4 ) ) ) ) ) { var_5 += var_1 * ( var_6 ) ; var_5 = ( ( var_5 ) > ( var_7 ) ) ? var_7 : var_5 ; } }
[0]: protected java.util.list < java.lang.string > method_1 ( java.util.list < type_1 > var_1 ) { return type_2. method_2 ( type_3. method_3 ( type_3. method_4 ( var_1, type_1. method_5 ( ) ), new type_4 < type_1, java.lang.string > ( ) { public java.lang.string method_6 ( type_1 var_2 ) { if ( ( var_2. method_7 ( ) ) && (! ( method_8 ( ) ) ) ) { return string_1 ; } return method_9 ( var_2 ) ; } } ) ; }

************

************
tgt: private static java.util.list < java.lang.string > method_1 ( type_1 var_1 ) { java.util.list < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; if ( var_1 . method_2 ( ) . equals ( string_1 ) ) { java.lang.system.out.println ( ) ; for ( type_2 var_3 : var_1 . method_3 ( ) ) { java.lang.string var_4 = var_3 . method_4 ( ) ; if ( var_4 . startswith ( string_3 ) ) { var_2 . add ( var_4 ) ; } } } return var_2 ; }
[0]: private boolean contains ( java.lang.object field, java.lang.object value ) { if ( field == null ) { return ( value. equals ( string_1 ) ) || ( value == null ) ; } return field. tostring ( ). contains ( value. tostring ( ) ) ; } return field. tostring ( ). contains ( value. tostring ( ) ) ; }

************

************
tgt: public void delete ( int key ) { java.util.iterator < type_1 > var_1 = info . iterator ( ) ; while ( var_1 . method_1 ( ) ) { type_1 var_2 = var_1 . method_2 ( ) ; if ( ( var_3 ) == key ) { info . remove ( var_2 ) ; break ; } } }
[0]: public void method_1 ( final type_1 var_1 ) { final type_2 var_2 = var_1. method_2 ( var_3, var_4 ) ; for ( int i = 0 ; i < ( var_2. method_3 ( ) ) ; ++ i ) { var_5. add ( type_3. method_4 ( var_2. method_5 ( i ). method_6 ( var_6 ) ) ) ; } var_7 = var_1. getboolean ( var_8 ) ; }

************

************
tgt: private void method_1 ( ) { java.lang.string name = var_1 . gettext ( ) . tostring ( ) ; java.lang.string add = var_2 . gettext ( ) . tostring ( ) ; type_1 var_3 = new type_1 ( name , add ) ; type_2 var_4 = var_5 . method_2 ( ) ; var_6 . method_3 ( var_4 . method_4 ( ) ) . setvalue ( var_3 ) ; type_3 . method_5 ( this , string_1 , var_7 ) . show ( ) ; }
[0]: private static void set ( type_1 var_1, java.util.random var_2, type_2 var_3 ) { if (! ( var_1. method_1 ( var_3 ) ) ) return ; type_3 var_4 = type_4. get ( var_5 ) ; for ( type_5 var_6 : var_7 ) { type_2 c = new type_2 ( var_3 ) ; c. add ( var_6 ) ; if ( var_1. method_2 ( var_4, c, var_6 ) ) { type_6. method_3 ( var_4, var_6 ). set ( var_1, c ) ; return ; } } }

************

************
tgt: public void method_1 ( type_1 < ? extends java.lang.string > var_1 , java.lang.string t , java.lang.string var_2 ) { java.lang.system.out.println ( string_1 ) ; if ( ( var_2 != null ) && ( ! ( string_2 . equals ( var_2 . trim ( ) ) ) ) ) { var_3 . method_2 ( false ) ; } else { var_3 . method_2 ( true ) ; } }
[0]: public static java.util.list < type_1 > method_1 ( type_2 var_1, int var_2, int var_3 ) { java.util.list < type_3 > var_4 = type_4. method_2 ( var_1. method_3 ( ) ) ; type_4. method_4 ( var_4 ) ; java.util.list < type_1 > var_5 = type_4. method_5 ( var_1, var_4 ) ; type_4. method_6 ( var_5, var_2, var_3 ) ; var_6. info ( var_5 ) ; return var_5 ; }

************

************
tgt: public void execute ( ) { view . method_1 ( new type_1 ( var_1 ) ) ; if ( var_3 . method_2 ( ) ) { method_3 ( ) ; } else { method_4 ( ) ; } view . method_1 ( new type_1 ( var_4 ) ) ; }
[0]: public static int method_1 ( type_1 var_1, byte... var_2 ) { if ( ( var_2. length )!= int_1 ) { throw new type_2 ( string_1 ) ; } type_3 buffer = type_3. method_2 ( var_2, 0, int_1 ) ; buffer. method_3 ( var_1 ) ; return buffer. method_4 ( ) ; }

************

************
tgt: private void method_1 ( type_1 out , type_2 value ) throws java.io.ioexception { out . method_2 ( ) ; try { for ( java.lang.string key : value . method_3 ( ) ) { out . method_4 ( key , value . method_5 ( key ) ) ; } } finally { out . method_6 ( ) ; } }
[0]: private java.util.collection < type_1 > method_1 ( final type_1 var_1 ) { final type_2 < type_3 <?,? > > var_2 = type_4. method_2 ( var_1, var_3, var_4, var_5 ) ; if ( var_2. method_3 ( ) ) { final type_5 var_6 = ( ( type_5 ) ( var_2. get ( ) ) ) ; if ( ( var_6. method_4 ( ) ) < int_1 ) { return var_6. getvalue ( ) ; } } return null ; }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string str = string_1 ; for ( int i = 0 ; i < ( data . length ) ; i ++ ) { str = ( ( ( str + "\n" ) + i ) + string_2 ) + ( data [ i ] ) ; } return str ; }
[0]: private void method_1 ( type_1 target ) { type_2 var_1 = ( ( type_2 ) ( target. method_2 ( ) ) ) ; if ( var_1 == null ) { return ; } java.lang.integer var_2 = ( ( java.lang.integer ) ( var_1. get ( string_1 ) ) ) ; this. var_3 = new type_3 ( var_2, target ) ; }

************

************
tgt: public void start ( type_1 var_1 ) { method_1 ( ) ; var_2 . method_2 ( ) . method_3 ( ) . method_4 ( ( var_3 , var_4 , var_5 ) - > { var_6 . listener ( var_2 , var_7 , var_8 ) ; } ) ; var_1 . method_5 ( ) . add ( new type_2 ( string_1 ) ) ; var_1 . method_6 ( string_2 ) ; var_1 . method_7 ( true ) ; var_1 . method_8 ( var_9 ) ; var_1 . show ( ) ; }
[0]: public static void method_1 ( ) { var_1 = new type_1 [ int_1 ] ; var_1 [ 0 ] = new type_2 ( ) ; var_1 [ 1 ] = new type_3 ( ) ; var_1 [ int_2 ] = new type_4 ( new type_5 < java.lang.string > ( ) ) ; var_1 [ int_3 ] = new type_4 ( new java.util.linkedlist < java.lang.string > ( ) ) ; var_1 [ int_4 ] = new type_4 ( new java.util.hashset < java.lang.string > ( ) ) ; }

************

************
tgt: public boolean method_1 ( ) { for ( int i = 0 ; i < ( var_1 [ ( ( var_1 [ 0 ] . length ) - 1 ) ] . length ) ; i ++ ) { if ( method_2 ( ( ( var_1 [ 0 ] . length ) - 1 ) , i ) ) return true ; } return false ; }
[0]: private void method_1 ( java.lang.class type ) { java.lang.class <? > var_1 = type. method_2 ( ) ; while ( ( type!= null ) && ( type!= ( var_2 class ) ) ) { if ( var_3. method_3 ( var_1 ) ) { throw new type_1 ( ( string_1 + var_1 ) ) ; } var_3. put ( var_1, type ) ; type = ( ( type. method_2 ( ) ) == type )? null : type. method_2 ( ) ; } }

************

************
tgt: public java.lang.string tostring ( ) { java.lang.string var_1 = ( ( ( var_2 ) + string_1 ) + ( var_3 ) ) + string_2 ; if ( ( var_4 ) != null ) var_1 += string_3 + ( var_4 ) ; if ( ( var_5 ) != null ) var_1 += string_4 + ( var_5 ) ; return var_1 ; }
[0]: private java.lang.string method_1 ( ) throws java.io.ioexception { java.lang.string [ ] keys = new java.lang.string [ ] { string_1, string_2 } ; java.lang.string [ ] values = new java.lang.string [ ] { method_2 ( ). tostring ( ), method_3 ( ) } ; if ( ( values [ 0 ]. equals ( string_3 ) ) || ( values [ 1 ]. equals ( string_3 ) ) ) { return new type_1 ( this ). method_1 ( var_1, keys, values ) ; } else { return new type_1 ( this ). method_1 ( var_2, keys, values ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.string var_1 = "id" ; java.lang.string var_2 = "name" ; java.lang.string [ ] var_3 = new java.lang.string [ ] { var_1 } ; var_4 = new type_1 ( var_3 ) ; var_5 = new type_2 ( ) ; var_6 = new type_3 ( var_3 ) ; source = new type_4 ( ) ; type_5 . assertnotnull ( source ) ; var_6 . method_2 ( source ) ; var_5 . method_2 ( var_6 ) ; var_4 . method_2 ( var_5 ) ; }
[0]: public type_1 method_1 ( type_2 state ) { java.util.set < type_3 > var_1 = new java.util.hashset < type_3 > ( ) ; int [ ] var_2 = var_3. method_2 ( ) ; for ( int i = state. method_3 ( 0 ) ; i!= 1 ; i = state. method_3 ( i ) ) { var_1. add ( var_4. get ( ( ( var_5 ) + i ) ) ) ; } return new type_1 ( var_1 ) ; }

************

************
tgt: public void method_1 ( type_1 i ) { java.util.set < type_1 > var_1 = new java.util.hashset < > ( ) ; if ( method_2 ( i , var_1 ) ) { var_1 . add ( i ) ; if ( ! ( var_1 . isempty ( ) ) ) { var_2 = true ; } for ( type_1 var_3 : var_1 ) { var_4 . put ( var_3 , var_5 ) ; type_2 . method_3 ( var_3 . method_5 ( ) , var_3 . method_4 ( ) ) ; } } }
[0]: public boolean equals ( java.lang.object obj ) { if (! ( obj instanceof type_1 ) ) { return false ; } type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return super. method_1 ( ). equals ( var_1. method_1 ( ) ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { switch ( var_1 . getid ( ) ) { case var_6 : android.content.intent var_7 = new android.content.intent ( this , var_8 class ) ; method_4 ( var_7 ) ; break ; case var_9 : android.content.intent var_10 = new android.content.intent ( this , var_11 class ) ; method_4 ( var_10 ) ; break ; case var_2 : var_3 . method_2 ( ) ; var_3 . method_3 ( false ) ; android.content.intent var_4 = new android.content.intent ( this , var_5 class ) ; method_4 ( var_4 ) ; break ; } }
[0]: protected boolean method_1 ( ) { switch ( var_1 ) { case var_2 : if ( ( var_3 ) && ( var_4. isempty ( ) ) ) { return true ; } return false ; case var_5 : return true ; case var_6 : if ( var_4. method_2 ( ) ) { return true ; } return false ; case var_7 : return false ; } return false ; } }

************

************
tgt: public static type_1 method_1 ( ) { if ( ( ( type_2 . method_2 ( ) ) >= int_1 ) && ( ( type_2 . method_2 ( ) ) < int_2 ) ) return var_1 ; else if ( ( ( ( type_2 . method_2 ( ) ) >= 0 ) && ( ( type_2 . method_2 ( ) ) < int_1 ) ) || ( ( ( type_2 . method_2 ( ) ) >= int_2 ) && ( ( type_2 . method_2 ( ) ) <= int_3 ) ) ) return var_2 ; else return var_3 ; }
[0]: public void method_1 ( java.lang.string var_1, double var_2, double var_3, int var_4 ) { type_1 [ ] var_5 = new type_1 [ ( var_6. length ) + 1 ] ; for ( int i = 0 ; i < ( ( var_5. length ) - 1 ) ; i ++ ) { var_5 [ i ] = var_6 [ i ] ; } var_5 [ var_6. length ] = new type_1 ( var_1, var_2, var_3, var_4 ) ; var_6 = var_5 ; method_2 ( var_6 ) ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 , java.lang.string var_2 , java.util.map < java.lang.string , java.lang.string > var_3 , java.util.map < java.lang.string , java.lang.string > var_4 ) throws type_2 , type_3 , type_4 , type_5 , java.io.ioexception , type_6 { method_2 ( var_1 ) ; return execute ( var_5 , type_7 . method_3 ( var_1 ) , var_1 , var_2 , var_3 , var_4 , null , 0 ) ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { if ( ( var_1. method_2 ( ) ) > ( var_2. method_2 ( ) ) ) { return 1 ; } if ( ( var_1. method_2 ( ) ) < ( var_2. method_2 ( ) ) ) { return - 1 ; } return var_1. getname ( ). method_3 ( var_2. getname ( ) ) ; }

************

************
tgt: private float [ ] method_1 ( int index ) { float [ ] var_1 = new float [ var_2 ] ; int j = 0 ; for ( int i = index - ( var_3 ) ; i <= ( index + ( var_3 ) ) ; i ++ ) { var_1 [ j ] = array [ i ] ; j ++ ; } return var_1 ; }
[0]: private void method_1 ( int id, int x, int y ) { boolean var_1 = true ; for ( type_1 var_2 : var_3 ) { if ( ( var_2. method_2 ( ) ) == id ) { var_1 = false ; var_2. set ( x, y ) ; } } if ( var_1 ) { var_3. add ( new type_1 ( id ) ) ; } }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.util.list < type_1 > words ) { getdata ( ) ; java.util.list < type_1 > var_1 = new java.util.linkedlist < > ( ) ; for ( type_1 var_2 : words ) { type_1 var_3 = var_4 . get ( var_2 . method_2 ( ) ) ; assert var_3 != null ; var_1 . add ( var_3 ) ; } return var_1 ; }
[0]: public static final void method_1 ( final type_1 obj, final type_1 value ) { type_2 var_1 = obj. method_2 ( ). method_3 ( obj. method_2 ( ). method_4 ( ) ) ; type_2 var_2 = var_1. method_5 ( obj. method_2 ( ). method_6 ( var_3 ), type_3. method_7 ( var_3, var_1. method_8 ( ). method_9 ( value ), 0 ) ) ; obj. method_10 ( var_1, var_2 ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 , java.lang.string var_3 , java.lang.string [ ] args ) { java.lang.string var_4 = var_2 . getname ( ) . tolowercase ( ) ; if ( ! ( var_4 . method_2 ( string_1 ) ) ) return true ; if ( ( args.length ) == 0 ) return false ; return var_5 . method_3 ( var_1 , var_2 , var_3 , args , var_6 ) ; }
[0]: public static int method_1 ( java.lang.string var_1 ) { if ( type_1. isempty ( var_1 ) ) { return 0 ; } java.lang.string [ ] var_2 = type_1. split ( var_1, char_1 ) ; if ( ( var_2. length ) < int_1 ) { return 0 ; } java.lang.string var_3 = var_2 [ 1 ] ; return type_2. method_2 ( var_3 ) ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) == 1 ) { try { int var_1 = java.lang.integer.parseint ( args [ 0 ] ) ; java.lang.system.out.println ( ( string_1 + var_1 ) ) ; } catch ( type_1 var_2 ) { java.lang.system.err.println ( ( ( string_2 + ( args [ 0 ] ) ) + string_3 ) ) ; java.lang.system.exit ( int_1 ) ; } } else { java.lang.system.err.println ( string_4 ) ; java.lang.system.exit ( 1 ) ; } }
[0]: public void method_1 ( ) { type_1. method_2 ( string_1, string_2 ) ; type_1. method_2 ( string_1, ( string_3 + ( this. var_1. method_3 ( ) ) ) ) ; this. var_2. method_4 ( int_1 ) ; this. var_3. method_5 ( ) ; this. var_1. method_6 ( ) ; }

************

************
tgt: private type_1 < ? > [ ] method_1 ( final java.lang.string var_1 , final java.lang.integer var_2 , final java.lang.string var_3 , final java.lang.integer var_4 ) { if ( ( var_2 != null ) && ( var_2 . equals ( var_4 ) ) ) { return new type_1 < ? > [ ] { var_5 . method_2 ( var_1 , string_1 ) , var_5 . method_2 ( var_3 , string_1 ) } ; } return new type_1 < ? > [ ] { } ; }
[0]: public static boolean method_1 ( final java.util.list < type_1 > var_1 ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { final type_1 var_2 = var_1. get ( i ) ; if ( ( ( ( var_2. method_2 ( ) ) || ( var_2. method_3 ( ) ) ) || ( var_2. method_4 ( ) ) ) || ( var_2. method_5 ( ) ) ) continue ; return true ; } return false ; }

************

************
tgt: public boolean method_1 ( ) throws java.lang.classnotfoundexception , type_1 { type_2 var_1 = type_3 . method_2 ( ) ; if ( var_1 == null ) { var_1 = new type_2 ( string_1 , string_1 , var_2 , string_2 , int_1 , true , true , true ) ; } var_3 = var_1 ; return true ; }
[0]: private void method_1 ( java.util.calendar var_1 ) { method_2 ( var_1. get ( var_2 ), ( ( var_1. get ( var_3 ) ) + 1 ), var_1. get ( var_4 ) ) ; method_1 ( var_1. get ( var_5 ), var_1. get ( var_6 ) ) ; var_7 = java.util.calendar.getinstance ( ) ; }

************

************
tgt: public type_1 file ( java.io.file var_1 , java.lang.string var_2 ) { java.io.inputstream file ; try { file = new java.io.fileinputstream ( var_1 ) ; this . var_2 = var_2 ; this . filename = var_1 . getname ( ) ; } catch ( type_2 var_3 ) { file = null ; } this . file = file ; return this ; }
[0]: public void method_1 ( ) { byte [ ] buffer = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( buffer, buffer. length ) ; var_2 = true ; while ( var_2 ) { try { var_3. method_2 ( var_1 ) ; java.lang.string msg = new java.lang.string ( buffer, 0, var_1. method_3 ( ) ) ; } catch ( java.io.ioexception var_4 ) { break ; } } }

************

************
tgt: public static char [ ] method_1 ( type_1 var_1 , type_1 var_2 ) { char [ ] output = new char [ var_3 . length ] ; for ( int i = 0 ; i < ( output . length ) ; i ++ ) { if ( i < ( ( output . length ) / int_1 ) ) { output [ i ] = var_3 [ i ] ; } else { output [ i ] = var_4 [ i ] ; } } return output ; }
[0]: private static type_1 method_1 ( long var_1, long var_2 ) { type_2 var_3 = type_3. method_2 ( var_1, var_2 ) ; type_4 var_4 = var_3. method_3 ( ) ; if ( ( var_4. getid ( ) )!= 0 ) { type_5 var_5 = type_6. method_4 ( ) ; type_7 var_6 = type_3. method_5 ( var_4. method_6 ( ), var_5 ) ; if ( var_6!= null ) { return type_3. method_7 ( var_6. method_8 ( ) ) ; } } return var_3 ; }

************

************
tgt: private type_1 method_1 ( java.io.inputstream var_1 , java.lang.string name ) { try { try { type_2 var_2 = new type_2 ( var_1 ) ; type_1 var_3 = new type_1 ( this ) ; var_2 . method_2 ( var_3 , ( ( var_5 ) | ( var_6 ) ) ) ; return var_3 ; } finally { var_1 . method_3 ( ) ; } } catch ( type_3 var_7 ) { throw var_7 ; } catch ( java.lang.exception var_7 ) { error ( name , var_7 ) ; } return null ; }
[0]: private static void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_2. length ) ; j ++ ) { if ( ( var_3 [ i ] [ j ]. equals ( string_1 ) ) || ( var_3 [ i ] [ j ]. equals ( string_2 ) ) ) var_3 [ i ] [ j ] = java.lang.string. method_2 ( ( - 1 ) ) ; } } }

************

************
tgt: public type_1 update ( type_2 var_1 , type_2 var_2 ) { type_1 msg = null ; if ( method_1 ( var_2 ) ) { msg = var_3 . method_2 ( var_1 , var_2 ) ; if ( msg != null ) msg . method_3 ( var_4 , var_5 . method_4 ( ) ) ; } return msg ; }
[0]: public double method_1 ( ) { type_1 var_1 = method_2 ( var_2. method_3 ( ) ) ; type_2 var_3 = var_1. method_4 ( var_2. method_5 ( ) ) ; type_3 method = var_3. method_6 ( var_2. method_7 ( ) ) ; type_4 var_4 = method. method_8 ( var_2. method_9 ( ) ) ; return var_4. method_10 ( ) ; }

************

************
tgt: public final void method_1 ( type_1 var_1 ) { this . var_2 = var_1 ; var_2 . method_2 ( this ) ; this . add ( var_2 ) ; var_2 . method_4 ( ( ( ( int ) ( this . method_5 ( ) . method_6 ( ) ) ) - 1 ) , ( ( ( int ) ( this . method_5 ( ) . method_7 ( ) ) ) - 1 ) ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) { int [ ] var_2 = type_1. method_2 ( java.lang.double. method_3 ( var_1 ) ) ; var_3. settext ( java.lang.string. method_3 ( var_2 [ 0 ] ) ) ; var_4. settext ( java.lang.string. method_3 ( var_2 [ 1 ] ) ) ; var_5. settext ( java.lang.string. method_3 ( var_2 [ int_1 ] ) ) ; var_6. method_4 ( ( ( java.lang.double. method_3 ( var_1 ) ) < 0 ) ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { if ( ( event . method_2 ( ) ) != null ) { throw new type_2 ( event . method_2 ( ) ) ; } if ( ( event . method_3 ( ) . method_4 ( ) ) == int_1 ) { var_2 . method_5 ( ) ; } }
[0]: protected void method_1 ( type_1 var_1 ) throws java.io.ioexception { super. method_1 ( var_1 ) ; if ( ( var_1. id ) == 0 ) { var_2. method_2 ( var_3 ) ; } else { if ( var_4. equals ( string_1 ) ) { var_4 = string_2 ; } else { var_4 = string_1 ; } } }

************

************
tgt: private java.util.collection < type_1 > method_1 ( type_1 var_1 ) { final java.lang.string var_2 = var_1 . method_2 ( ) . method_3 ( var_3 ) ; type_2 . method_4 ( var_2 ) ; final int var_4 = var_2 . method_5 ( var_5 ) ; if ( var_4 < 0 ) { return type_3 . method_6 ( method_7 ( var_2 , var_1 , true ) ) ; } else { final java.lang.string [ ] var_6 = type_4 . split ( var_2 ) ; return method_8 ( var_6 , var_1 ) ; } }
[0]: public void method_1 ( android.view.view view ) { type_1 var_1 = new type_1 ( ) ; var_1. put ( var_2, var_3. method_2 ( ) ) ; var_1. put ( var_4, var_3. method_3 ( ) ) ; type_2 var_5 = getactivity ( ). method_4 ( ). method_5 ( var_6, var_1 ) ; type_3. method_6 ( string_1, var_5. tostring ( ) ) ; method_7 ( var_7, var_8 ) ; }

************

************
tgt: public boolean method_1 ( type_1 target ) { boolean var_1 = true ; try { for ( type_1 var_2 : var_3 ) { var_1 &= var_2 . method_2 ( target , ( ( var_4 ) == ( var_5 ) ) ) ; } } catch ( java.lang.exception var_6 ) { } var_3 . method_4 ( ) ; var_4 = var_7 ; var_8 = null ; return var_1 ; }
[0]: public static void delete ( java.io.file f ) throws java.io.ioexception { if ( f. method_1 ( ) ) { for ( java.io.file c : f. method_2 ( ) ) { type_1. delete ( c ) ; } } if (! ( f. delete ( ) ) ) { throw new java.io.ioexception ( ( string_1 + f ) ) ; } }

************

************
tgt: public static type_1 method_1 ( int type ) { switch ( type ) { case 0 : return type_2 . method_2 ( ) ; case int_1 : return type_4 . method_2 ( ) ; case int_2 : return type_5 . method_2 ( ) ; } throw new type_6 ( ( string_1 + type ) ) ; }
[0]: protected void method_1 ( ) { super. method_1 ( ) ; android.content.context context = getcontext ( ) ; type_1 var_1 = new type_1 ( context ) ; type_2 var_2 = new type_2 ( var_3, 0 ) ; var_4 = var_5 ; var_1. method_2 ( var_2 ) ; var_6 = var_1 ; this. method_3 ( var_6 ) ; var_7 = method_4 ( 0 ) ; var_8 = type_3. method_5 ( getcontext ( ), var_9 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_1 == null ) { } else if ( var_1 . method_2 ( ) ) { method_3 ( ) ; } else { type_3 . method_4 ( var_3 , ( string_1 + ( var_1 . tostring ( ) ) ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1. method_2 ( ) ) { var_3 = ( ( java.lang.string ) ( var_2. method_3 ( string_1 ). getvalue ( ) ) ) ; if ( var_4. equals ( var_5. method_4 ( ). method_5 ( ) ) ) { var_6 = true ; } var_7. add ( var_3 ) ; var_8. add ( var_3 ) ; } } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string item , int var_2 , double var_3 ) { if ( type_1 . method_2 ( item ) ) { type_2 var_4 = new type_2 ( null , var_1 ) ; type_1 . method_3 ( var_4 , type_3 . method_4 ( item ) , var_2 , var_3 , null ) ; return true ; } return false ; }
[0]: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = var_3. method_2 ( var_1 ) ; type_3. method_3 ( var_2, string_1 ) ; type_4 var_4 = var_2. getconfig ( ) ; return ( var_4. method_4 ( ) )!= null? var_4. method_4 ( ) : method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) { var_1 . method_2 ( var_2 , var_3 , true , var_4 , var_5 ) ; var_1 . method_3 ( var_6 ) ; type_1 . method_4 ( var_7 ) . method_2 ( var_3 ) ; type_1 . method_4 ( var_7 ) . show ( ) ; }
[0]: public byte [ ] method_1 ( byte [ ] var_1 ) { type_1 var_2 = null ; var_2 = ( ( type_1 ) ( type_2. method_2 ( var_1, var_3 ). method_3 ( ) ) ) ; return method_1 ( var_2 ). method_4 ( ) ; }

************

************
tgt: private static void method_1 ( java.util.map < type_1 , type_2 > var_1 , type_1 key , double value ) { type_2 var_2 = var_1 . get ( key ) ; if ( var_2 == null ) { final type_2 var_3 = new type_2 ( ) ; var_2 = var_1 . method_2 ( key , var_3 ) ; if ( var_2 == null ) { var_2 = var_3 ; } } var_2 . update ( value ) ; }
[0]: public void method_1 ( ) { var_1. method_2 ( new type_1 ( ) { public void method_3 ( type_2 result ) { if (! ( result. method_4 ( ) ) ) { method_5 ( ( string_1 + result ) ) ; return ; } if ( ( var_1 ) == null ) return ; var_1. method_6 ( var_2 ) ; } } ) ; } }

************

************
tgt: public static boolean method_1 ( char var_1 ) { for ( int i = 0 ; i <= 1 ; i ++ ) { for ( int j = 0 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue ; if ( type_1 . method_2 ( var_2 , var_3 , i , j , var_4 , var_1 ) ) return true ; } } return false ; }
[0]: private void method_1 ( type_1 var_1 ) { var_2. method_1 ( var_1. method_2 ( ) ) ; var_3. remove ( var_1 ) ; try { var_4. method_3 ( var_1 ) ; var_4. method_4 ( var_3 ) ; } catch ( type_2 var_5 ) { var_5. method_5 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.exit ( 0 ) ; } if ( var_6. method_6 ( var_1 ) ) { var_6 = var_3. get ( 1 ) ; } method_7 ( ) ; var_7. method_8 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { type_1 f = method_2 ( ) . method_3 ( string_1 ) ; type_2 var_1 = ( ( type_2 ) ( f ) ) ; var_1 . method_4 ( ) . method_5 ( ) ; var_1 . method_6 ( ) . method_7 ( 0 ) ; }
[0]: public void method_1 ( boolean var_1 ) { var_2 = var_1 ; if ( var_3 ) { var_4 = var_1 ; } if ( ( var_5 )!= null ) { var_5. method_2 ( var_1 ) ; } if (! var_1 ) { if ( var_6 ) { } } }

************

************
tgt: public void method_1 ( char [ ] [ ] var_1 ) { for ( int i = 0 ; i < ( var_2 ) ; i ++ ) { for ( int j = 0 ; j < ( var_3 ) ; j ++ ) { java.lang.system.out.print ( var_1 [ i ] [ j ] ) ; } java.lang.system.out.println ( ) ; } java.lang.system.out.println ( ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws java.lang.exception { type_1. method_2 ( var_2 ) ; type_2 type_3 = new type_4 ( ) ; var_1 = var_1. method_3 ( var_3, string_1 ). trim ( ) ; type_5 = type_3. method_4 ( var_1 ) ; type_5. method_5 ( var_4 ) ; type_1. method_6 ( type_5 ) ; method_7 ( ) ; type_3. method_8 ( ) ; }

************

************
tgt: private void method_1 ( type_1 value ) { switch ( var_1 ) { case var_2 : type_2 . method_2 ( ) . set ( method_3 ( ) , method_4 ( value ) ) ; setvalue ( value ) ; break ; case var_3 : type_3 . method_5 ( ) . method_6 ( method_3 ( ) , method_4 ( value ) , new type_4 < java.lang.void > ( ) ) ; break ; } }
[0]: public type_1 method_1 ( java.lang.string target ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( var_2. values ( ) ) ; for ( type_1 var_3 : var_1 ) { if ( var_3. getname ( ). equals ( target ) ) { return var_3 ; } } return null ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 type ; type = ( var_2 ) ? var_3 . get ( var_1 ) : var_4 . get ( var_1 ) ; type = ( type == null ) ? var_5 : type ; var_6 . method_2 ( var_7 ) ; var_8 . method_3 ( method_4 ( ) . getcolor ( var_9 ) ) ; var_10 . method_3 ( method_4 ( ) . getcolor ( var_9 ) ) ; var_11 . method_3 ( method_4 ( ) . getcolor ( var_9 ) ) ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { type_3 var_3 = var_2. method_2 ( i ) ; type_4. method_3 ( var_1, var_3. getstring ( string_1 ), var_3. getint ( string_2 ), var_3. getint ( string_3 ), var_3. method_4 ( string_4 ) ) ; } }

************

************
tgt: private void method_1 ( ) { if ( ( var_1 ) != null ) var_1 . method_2 ( "0" ) ; if ( ( ( var_2 ) != null ) && ( var_2 . method_3 ( ) ) ) { try { var_2 . method_4 ( ) ; } catch ( java.io.ioexception var_3 ) { } } }
[0]: public void method_1 ( type_1 event ) throws java.io.ioexception { type_2 var_1 = type_3. method_2 ( getclass ( ). method_3 ( string_1 ) ) ; type_4 var_2 = ( ( type_4 ) ( var_3. method_4 ( ). method_5 ( ) ) ) ; var_4. method_1 ( string_2 ) ; var_2. method_4 ( ). method_6 ( var_1 ) ; }

************

************
tgt: public boolean method_1 ( ) { while ( ( ( var_1 ) == null ) || ( ! ( var_1 . method_1 ( ) ) ) ) { if ( var_2 . method_1 ( ) ) { var_1 = var_2 . method_2 ( ) . method_3 ( ) . iterator ( ) ; } else { break ; } } return ( ( var_1 ) != null ) && ( var_1 . method_1 ( ) ) ; }
[0]: public void method_1 ( boolean var_1, boolean var_2 ) { var_3 = false ; var_4 = var_1 ; var_5 = false ; var_6 = var_2 ; if ( ( var_7 )!= null ) { var_7. method_2 ( this, var_1, var_2 ) ; } if ( var_2 ) { var_8. method_3 ( var_9 ) ; } else { var_8. method_3 ( var_10 ) ; } }

************

************
tgt: public void method_1 ( ) { java.lang.system.out.println ( string_1 ) ; java.lang.string var_1 = string_2 ; type_1 var_2 = new type_1 ( new type_2 ( ) ) ; java.util.list result = null ; try { result = var_2 . method_2 ( var_1 ) ; } catch ( type_3 var_3 ) { fail ( string_3 ) ; var_3 . method_3 ( ) ; } method_4 ( type_5 . isempty ( result ) ) ; asserttrue ( ( ( result . size ( ) ) == int_1 ) ) ; }
[0]: void method_1 ( java.lang.string result ) { if ( var_1 ) { var_2 = ( ( type_1 ) ( method_2 ( ). method_3 ( var_3 ) ) ) ; if ( ( var_2 ) == null ) { var_2 = new type_1 ( ) ; method_2 ( ). method_4 ( ). replace ( var_3, var_2 ). commit ( ) ; } var_2. method_5 ( result ) ; } else { method_6 ( new android.content.intent ( this, var_4 class ). method_7 ( string_1, result ) ) ; } }

************

************
tgt: public void method_1 ( type_1 < ? > var_1 , android.view.view view , int position , long id ) { if ( position != 0 ) { var_2 . settext ( var_3 . get ( position ) , true ) ; method_2 ( true ) ; var_4 . method_3 ( ) ; } else { var_2 . settext ( string_1 ) ; } }
[0]: public static type_1 method_1 ( final type_1 var_1, final int var_2 ) { final int var_3 = var_1. method_2 ( ). method_3 ( ) ; int var_4 = var_1. method_4 ( ) ; if ( ( var_4 < var_2 ) && ( var_2 <= var_3 ) ) { var_4 = var_2 ; } return new type_1 ( var_1. method_5 ( ), var_1. method_6 ( ), var_4, var_1. method_7 ( ) ) ; }

************

************
tgt: public void method_1 ( java.util.map < ? extends java.lang.string , ? extends type_1 > add ) { for ( java.util.map.entry < ? extends java.lang.string , ? extends type_1 > var_2 : add . method_2 ( ) ) { put ( var_2 . method_5 ( ) , var_2 . getvalue ( ) ) ; } }
[0]: public boolean method_1 ( final type_1 response ) throws java.io.ioexception { if (! ( super. method_1 ( response ) ) ) { return false ; } final type_2 var_1 = method_2 ( response, var_2 class ) ; if ( var_1. method_3 ( ) ) { return true ; } throw new type_3 ( ( ( var_3 + string_1 ) + ( var_1. method_4 ( ) ) ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , int var_2 ) { if ( ( var_3 ) == ( var_4 . null ) ) { var_5 . method_1 ( var_1 , var_2 ) ; } else if ( ( var_5 ) == ( var_4 . null ) ) { var_3 . method_1 ( var_1 , var_2 ) ; } else { int label = method_2 ( ) ; var_3 . method_1 ( var_1 , label ) ; method_3 ( label ) ; var_5 . method_1 ( label , var_2 ) ; } }
[0]: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 < type_2 > var_2 = var_3 ; int index = 0 ; while ( ( var_2. getdata ( ) )!= null ) { var_1 = ( ( ( ( var_1 + string_2 ) + index ) + string_3 ) + ( var_2. getdata ( ) ) ) + string_3 ) + ( var_2. getdata ( ) ) ; index ++ ; var_2 = var_2. method_2 ( ) ; } return var_1 ; }

************

************
tgt: private static void method_1 ( type_1 var_1 , type_2 var_2 ) { var_1 . method_2 ( string_1 , true ) ; var_1 . method_3 ( string_2 ) ; var_1 . method_4 ( string_3 , var_2 . method_5 ( ) ) ; var_1 . method_4 ( string_4 , var_2 . method_6 ( ) ) ; }
[0]: public java.lang.boolean method_1 ( type_1 var_1, type_1 var_2, type_2 var_3 ) { type_3 var_4 = var_5. method_2 ( ) ; for ( type_4 var_6 : var_1. method_3 ( ) ) { for ( type_4 var_7 : var_1. method_3 ( ) ) { if ( type_5. method_4 ( var_4, var_6. method_5 ( ), var_7. method_5 ( ) ) ) { if (! ( method_6 ( var_6, var_2 ) ) ) { return false ; } } } } return true ; } }

************

************
tgt: void method_1 ( int var_1 , int var_2 ) { this . var_3 = 1 ; var_1 = java.lang.math.abs ( var_1 ) ; var_2 = java.lang.math.abs ( var_2 ) ; if ( var_2 > var_1 ) { int temp = var_2 ; var_2 = var_1 ; var_1 = temp ; } if ( var_2 == 0 ) { return ; } if ( ( var_1 % var_2 ) == 0 ) { this . var_3 = var_2 ; return ; } int temp = var_1 % var_2 ; method_1 ( var_2 , temp ) ; }
[0]: private void method_1 ( java.util.map < java.lang.string, java.lang.object > var_1, final java.util.map < java.lang.string, type_1 > var_2, final java.util.set < java.lang.string > var_3 ) { if ( ( ( ( var_1 == null ) || ( var_2 == null ) ) || ( var_1. isempty ( ) ) ) || ( var_3!= null ) ) { return ; } type_2. method_1 ( null, var_1, var_2, var_3 ) ; }

************

************
tgt: public type_1 method_1 ( type_2 var_1 , int var_2 ) { if ( var_2 == ( var_3 ) ) { return new type_3 ( var_4 . method_2 ( var_5 , null , false ) ) ; } else if ( var_2 == ( var_6 ) ) { return new type_4 ( var_4 . method_2 ( var_7 , null , false ) ) ; } else { throw new type_5 ( ( string_1 + var_2 ) ) ; } }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { for ( int i = 1 ; i < ( var_1. size ( ) ) ; i ++ ) { type_1 key = var_1. get ( i ) ; java.lang.system.out.println ( ( ( ( ( ( ( ( string_1 + i ) + string_2 ) + ( key. method_2 ( ) ) ) + string_3 ) + ( key. method_3 ( ) ) ) + string_3 ) + ( key. method_4 ( ) ) ) ) ; } }

************

************
tgt: protected static type_2 method_1 ( type_2 var_1 ) { for ( int i = 1 ; i < ( var_1 . size ( ) ) ; i ++ ) { if ( var_1 . get ( i ) . method_2 ( ) ) { type_3 . method_3 ( ( ( type_2 ) ( var_1 . get ( i ) ) ) ) ; } } return var_1 ; }
[0]: public long method_1 ( type_1 var_1 ) { assert ( var_2 ) == null ; var_3 = false ; long var_4 = method_2 ( var_1, this. var_4 ) ; if ( var_3 ) { var_4 += type_2. method_3 ( this. var_5, this. var_6 ) ; } else { var_4 += this. var_5 ; } type_3 var_7 = ( ( type_3 ) ( var_8. method_4 ( var_9 ) ) ) ; return var_7. method_5 ( var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { if ( var_2 . method_2 ( ) ) { this . var_2 = var_2 ; this . var_3 = true ; this . var_2 . method_3 ( this ) ; var_1 . method_4 ( var_4 , method_5 ( ) ) ; if ( method_6 ( ) ) { type_3 . method_7 ( var_1 , var_4 ) ; } } }
[0]: public synchronized void start ( ) { if ( ( ( ( id ) == null ) || ( ( var_1 ) == null ) ) || ( ( ( type_1. method_1 ( ) ) - ( var_1 ) ) > ( var_2 ) ) ) { id = type_2. method_2 ( ). tostring ( ) ; } var_1 = null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws type_2 { if ( ( var_1 . gettext ( ) . tostring ( ) . length ( ) ) <= 0 ) { var_2 = null ; } else if ( ! ( var_1 . gettext ( ) . tostring ( ) . method_3 ( string_2 ) ) ) { var_2 = null ; } else { var_2 = var_1 . gettext ( ) . tostring ( ) ; } }
[0]: public void method_1 ( java.lang.throwable var_1 ) { method_2 ( ( string_1 + var_1 ) ) ; type_1 params = type_2. method_3 ( ) ; params. method_4 ( string_2, string_3 ) ; params. method_4 ( string_4, string_5 ) ; method_5 ( var_2, string_6, params ) ; }

************

************
tgt: private void method_1 ( ) { byte [ ] array = var_1 . method_2 ( ) ; if ( array == null ) { var_3 . method_4 ( var_4 ) ; } else { type_1 var_2 = method_3 ( array ) ; if ( var_2 == null ) { var_3 . method_4 ( var_4 ) ; } else { var_3 . method_5 ( var_2 ) ; var_2 . method_6 ( ) ; } } }
[0]: protected void method_1 ( int var_1, int var_2, android.content.intent data ) { super. method_1 ( var_1, var_2, data ) ; if ( ( var_1!= ( var_3 ) ) || ( var_2!= ( var_4 ) ) ) return ; type_1 var_5 = var_6. method_2 ( ) ; if ( var_5!= null ) var_5. method_3 ( ) ; else var_5. method_3 ( ) ; }

************

************
tgt: public boolean method_1 ( java.io.file var_1 ) { if ( var_1 . getname ( ) . contains ( type_1 . tostring ( ) ) ) { if ( var_1 . getname ( ) . contains ( ( ( var_2 . method_2 ( ) ) + ( var_3 ) ) ) ) { return true ; } } return false ; }
[0]: public java.lang.object method_1 ( java.lang.object var_1, type_1 method, java.lang.object... args ) throws java.lang.throwable { type_2 var_2 = ( ( type_2 ) ( args [ 0 ] ) ) ; if ( var_2!= null ) { type_3 var_3 = var_4. remove ( var_2. method_2 ( ) ) ; return type_4. get ( ). method_3 ( ( var_3!= null? var_3 : var_2 ) ) ; } return false ; }

************

************
tgt: private static java.lang.string method_1 ( type_1 var_1 , type_1 file ) { java.lang.string path = type_2 . method_2 ( type_3 . method_3 ( var_1 , file ) ) ; path = type_3 . method_4 ( path , char_1 ) ; path = type_3 . method_4 ( path , char_2 ) ; path = type_2 . method_5 ( path , var_2 ) ; return ( var_3 ) + path ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.string message ; if ( ( java.lang.integer.parseint ( var_1 ) ) > int_1 ) { message = string_1 ; } else if ( ( java.lang.integer.parseint ( var_1 ) ) > 1 ) { message = string_2 ; } else { message = string_3 ; } return message ; }

************

************
tgt: public boolean method_1 ( type_1 event ) { if ( ( var_1 ) != null ) { try { java.lang.object var_2 = var_1 . method_2 ( event ) ; if ( ( var_2 != null ) && ( ( var_2 . getclass ( ) ) == ( boolean . class ) ) ) return true ; } catch ( type_2 var_4 ) { method_3 ( ( string_1 + ( var_4 . method_4 ( ) ) ) ) ; } } return super . method_1 ( event ) ; }
[0]: public void method_1 ( final int var_1, final double var_2 ) { var_3 [ method_2 ( ) ] = ( ( float ) ( type_1. method_3 ( var_2, 0, ( ( method_4 ( ) ) == 1? int_1 : int_2 ) ) ) ) ; method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 event ) { type_3 . method_2 ( ( var_1 = new type_2 ( ) ) ) ; type_3 . method_2 ( new type_4 ( var_1 ) , var_1 . method_3 ( ) ) ; if ( ( event . method_4 ( ) ) == ( var_2 ) ) { var_1 . method_5 ( ) ; } }
[0]: public void method_1 ( boolean var_1, type_1 var_2 ) { if ( var_2. equals ( type_2. method_2 ( var_3 ) ) ) { method_3 ( ) ; } else if ( var_2. equals ( type_2. method_2 ( var_4 ) ) ) { method_4 ( ) ; } update ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = this . method_2 ( ) ; this . var_3 = new type_3 ( var_2 , var_1 . method_3 ( ) . gettext ( ) ) ; var_2 . method_5 ( this . var_3 ) ; this . method_4 ( ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_2 ( string_1 ) ; type_3 result = ( ( type_3 ) ( var_2. method_2 ( var_1 ) ) ) ; type_4. assertequals ( result. get ( string_2 ), type_5. method_3 ( string_3 ) ) ; }

************

************
tgt: protected boolean method_1 ( type_1 var_1 ) { type_1 [ ] var_2 = type_2 . method_2 ( var_1 , var_3 ) ; type_1 var_4 = type_3 . method_4 ( var_1 , var_5 class ) ; return ( ( var_2 . length ) == 0 ) && ( var_4 == null ) ; }
[0]: public static void main ( java.lang.string [ ] args ) { if ( ( args.length )!= 1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 0 ) ; } type_1 var_1 = new type_1 ( args [ 1 ] ) ; type_2 var_2 = new type_2 ( ) ; java.lang.system.out.println ( var_3 ) ; type_3. method_1 ( var_1, var_2 ) ; }

************

************
tgt: public static java.util.list < type_1 > method_1 ( ) { type_2 < type_3 > var_1 = var_2 . method_2 ( string_1 ) ; java.util.list < type_3 > var_3 = var_1 . method_3 ( ) . method_4 ( new java.util.arraylist < type_3 > ( ) ) ; java.util.list < type_1 > var_4 = new java.util.arraylist < type_1 > ( ) ; for ( type_3 var_5 : var_3 ) { var_4 . add ( new type_1 ( var_5 ) ) ; java.lang.system.out.println ( var_5 . tostring ( ) ) ; } return var_4 ; }
[0]: public type_1 < type_2 > method_1 ( java.util.list < type_2 > var_1 ) { type_2 file = type_3. get ( var_2 ) ; if ( ( file. method_2 ( ) ) || ( var_1. isempty ( ) ) ) { return type_1. method_3 ( file ) ; } else { return type_4. method_4 ( var_2, var_1 ) ; } }

************

************
tgt: private type_1 method_1 ( ) { type_1 var_1 = new type_1 ( ) ; try { while ( var_2 . method_2 ( ) ) { if ( ( var_2 . method_3 ( ) ) == ( var_3 ) ) { if ( type_2 . equals ( var_2 . method_4 ( ) ) ) { var_1 . add ( method_5 ( ) ) ; } } else { if ( method_6 ( var_4 ) ) { break ; } } } } catch ( java.lang.exception var_5 ) { var_5 . method_7 ( ) ; } return var_1 ; }
[0]: public boolean method_1 ( final type_1 var_1, final java.lang.string field, final type_2 var_2 ) throws type_3 { type_4 var_3 = method_2 ( var_1, field ) ; boolean var_4 = false ; if ( var_3!= null ) { method_3 ( var_1, var_3 ) ; var_1. method_4 ( ). method_5 ( var_1 ) ; var_4 = true ; } return var_4 ; }

************

************
tgt: protected void method_1 ( ) throws type_1 { java.lang.boolean var_1 = type_2 . method_2 ( var_2 class ) ; var_1 = false ; if ( ! var_1 ) { var_3 . info ( string_1 ) ; } type_3 . method_3 ( string_2 ) ; method_4 ( var_4 ) ; method_5 ( new type_4 ( ) ) ; if ( var_1 ) { type_5 . get ( var_5 class ) . method_6 ( ) ; type_5 . get ( var_6 class ) . method_7 ( string_3 ) ; } }
[0]: public java.util.set < type_1 > method_1 ( ) { java.lang.string [ ] var_1 = method_2 ( string_1, string_2 ) ; java.util.set < type_1 > result = type_2. method_3 ( ) ; if ( type_3. isempty ( var_1 ) ) { return result ; } for ( java.lang.string var_2 : var_1 ) { result. add ( type_1. method_4 ( var_2 ) ) ; } return result ; }

************

************
tgt: public boolean method_1 ( ) { if ( var_1 . gettext ( ) . equals ( var_2 . gettext ( ) ) ) { type_1 var_3 = new type_1 ( var_4 . gettext ( ) , var_1 . gettext ( ) , var_5 . getvalue ( ) ) ; return true ; } else { java.lang.system.out.println ( string_1 ) ; return false ; } }
[0]: java.util.arraylist < type_1 > method_1 ( java.util.arraylist < type_1 > var_1 ) { float var_2 = int_1 ; for ( type_1 var_3 : var_1 ) { if ( ( ( var_3. method_2 ( ) ) - ( var_3. method_3 ( ) ) ) < var_2 ) { var_2 = ( var_3. method_2 ( ) ) - ( var_3. method_3 ( ) ) ; } } for ( type_1 var_3 : var_1 ) { var_3. method_1 ( var_2 ) ; } return var_1 ; } return null ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { var_2 . method_2 ( var_1 . method_3 ( var_3 ) ) ; var_2 . method_4 ( var_1 . method_5 ( var_4 ) ) ; type_2 var_5 = ( ( type_2 ) ( method_6 ( ) . method_7 ( var_6 ) ) ) ; if ( var_5 != null ) var_5 . method_8 ( var_1 ) ; }
[0]: public type_1 < java.lang.string > method_1 ( type_2 msg, java.lang.string var_1 ) { java.lang.string [ ] var_2 = type_3. split ( msg. gettext ( ) ) ; for ( java.lang.string var_3 : var_2 ) { var_4. method_1 ( var_1, java.lang.string.format ( string_1, msg. method_2 ( ). getid ( ), msg. method_3 ( ), msg. method_4 ( ), var_3 ) ) ; } return type_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { method_2 ( ) ; int var_1 = int_1 ; int var_2 = 0 ; java.util.list < type_1 > response = var_3 . method_3 ( var_4 ) ; method_4 ( response . isempty ( ) ) ; var_2 = response . size ( ) ; asserttrue ( ( ( ( string_1 + var_1 ) + string_2 ) + var_2 ) , ( var_2 == var_1 ) ) ; }
[0]: public int method_1 ( java.lang.string var_1, java.lang.string var_2, int var_3, int var_4, java.util.list < java.util.list < java.lang.string > > data ) { int var_5 = 0 ; for ( int x = var_3 ; x <= var_4 ; x ++ ) { if ( ( data. get ( x ). get ( int_1 ). method_2 ( var_1 ) ) && ( data. get ( x ). get ( int_2 ). method_2 ( var_2 ) ) ) { return var_5 = x ; } } return var_5 ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( ) throws type_2 { int var_1 = type_3 . method_2 ( ) . method_3 ( ) ; java.util.map < java.lang.string , type_1 > var_2 = var_3 . get ( var_1 ) ; if ( var_2 == null ) { return new java.util.arraylist < type_1 > ( ) ; } return new java.util.arraylist < type_1 > ( var_2 . values ( ) ) ; }
[0]: protected static boolean method_1 ( ) { if ( ( ( var_1 ) && ( var_2 ) ) && ( ( type_1. method_2 ( ) ) >= ( var_3 ) ) ) { var_1 = false ; var_4. start ( ) ; return true ; } else if ( ( type_1. method_2 ( ) ) < ( var_3 ) ) { var_2 = true ; } return false ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( ( var_2 ) < int_1 ) && ( var_3 ) ) { ( var_4 ) -- ; ( var_2 ) ++ ; } else if ( ( ( var_2 ) > 0 ) && ( ! ( var_3 ) ) ) { ( var_4 ) ++ ; ( var_2 ) -- ; } }
[0]: public double method_1 ( ) { double var_1 = 1.0 / ( type_1. method_2 ( ( ( ( var_2 [ 1 ] ) * ( var_3 [ int_1 ] ) ) * ( var_3 [ int_2 ] ) ) ) ) ; double var_4 = var_1 * int_1 ; return ( ( java.lang.math.random ( ) ) * var_4 ) - var_1 ; }

************

************
tgt: public static void method_1 ( ) { type_1 . method_2 ( ( ) - > { type_2 . method_4 ( ) ; final type_2 var_1 = new type_2 ( ) ; var_1 . method_5 ( ) ; var_1 . method_6 ( ) ; var_1 . method_7 ( true ) ; } ) ; }
[0]: public void method_1 ( int id ) { var_1 = new type_1 ( var_2 ) ; var_3 = var_1. method_2 ( ) ; var_3. method_3 ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + ( var_5 ) ) + string_3 ) + id ), null ) ; var_3. method_4 ( ) ; var_1. method_4 ( ) ; var_3 = null ; var_1 = null ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = type_2 . method_2 ( int_1 , null ) ; type_3 . assertequals ( ( string_1 + var_1 ) , 0l , ( ( long ) ( var_1 . method_3 ( ) ) ) ) ; type_3 . assertequals ( ( string_1 + var_1 ) , 1 , var_1 . method_4 ( ) . size ( ) ) ; type_3 . assertequals ( ( string_1 + var_1 ) , ( string_2 + string_3 ) , var_1 . method_4 ( ) . get ( 0 ) ) ; }
[0]: public boolean method_1 ( ) { type_1 var_1 = type_1. method_2 ( ) ; if ( ( var_2 ) >= ( var_3 ) ) { var_3 = var_2 ; } if ( ( var_3 ) >= ( var_4 ) ) { var_5 = int_1 ; } else if ( ( var_3 ) >= ( var_6 ) ) { var_5 = int_2 ; } else if ( ( var_3 ) >= ( var_7 ) ) { var_5 = 1 ; } return ( var_2 ) >= ( var_7 ) ; } return false ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { type_2 var_2 = new type_3 ( ) . method_2 ( ) . build ( ) ; type_4 . method_3 ( var_2 ) ; super . method_1 ( var_1 ) ; method_4 ( var_3 ) ; var_4 = new type_5 ( this ) ; var_4 . method_5 ( var_5 ) ; var_4 . method_6 ( string_1 ) ; var_4 . method_8 ( true ) ; var_4 . method_7 ( ) ; }
[0]: public static void method_1 ( java.lang.string name ) { type_1. method_2 ( ( ( string_1 + name ) + string_2 ) ) ; type_1. method_3 ( string_3 ) ; type_1. method_3 ( string_4 ) ; type_1. method_4 ( ) ; type_1. method_2 ( string_5, true ) ; type_1. method_5 ( string_6 ) ; type_1. method_3 ( name ) ; type_1. method_4 ( ) ; }

************

************
tgt: public static type_1 method_1 ( int var_1 , java.lang.long var_2 , java.lang.long var_3 , java.lang.long var_4 ) { if ( ( type_1 . method_2 ( var_2 , var_4 , var_3 ) ) == null ) { type_1 var_5 = new type_1 ( ) ; var_6 = var_1 ; var_7 = var_2 ; var_8 = var_3 ; var_9 = var_4 ; var_5 . method_3 ( ) ; return var_5 ; } type_1 var_5 = type_1 . method_2 ( var_2 , var_4 , var_3 ) ; var_6 = var_1 ; var_5 . update ( ) ; return var_5 ; }
[0]: static java.io.file method_1 ( java.lang.string var_1, java.lang.string filename ) { java.io.file file ; java.io.file var_2 = null ; if ( filename!= null ) { var_2 = new java.io.file ( filename ) ; } if ( ( type_1. isempty ( var_1 ) ) || ( ( var_2!= null ) && ( var_2. method_2 ( ) ) ) ) { file = new java.io.file ( filename ) ; } else { file = new java.io.file ( type_2. method_3 ( var_1, filename ) ) ; } return file ; } }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 . method_3 ( this ) ; method_4 ( var_3 ) ; var_4 = type_3 . method_5 ( this ) . method_6 ( this ) . method_7 ( this ) . build ( ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( var_1, string_1 ) ; var_2 = true ; var_3. method_3 ( this ) ; method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; if ( var_4 ) { var_5. method_7 ( ) ; } var_6. method_8 ( var_7 ) ; }

************

************
tgt: public void method_1 ( java.awt.color var_1 ) { if ( var_1 == ( var_2 ) ) { var_3 = ( var_3 ) + int_1 ; method_2 ( ) ; method_3 ( ) ; count = ( count ) + 1 ; } else { method_2 ( ) ; method_3 ( ) ; count = ( count ) + 1 ; } if ( ( count ) == int_2 ) { method_4 ( ) ; } }
[0]: protected void method_1 ( type_1 result ) throws type_2 { type_3 var_1 ; for ( type_4 var_2 : result. method_2 ( ) ) { if ( var_2. method_3 ( ) ) { continue ; } var_1 = method_4 ( var_2 ) ; this. method_5 ( string_1, var_2. getname ( ) ) ; this. method_5 ( string_2, ( ( var_1. gettype ( ) ) + ( var_1. method_6 ( ) ) ) ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( final type_3 var_1 ) { if ( method_2 ( var_1 ) ) { if ( method_4 ( var_1 ) ) { return type_1 . method_3 ( var_2 ) ; } else { return type_1 . method_3 ( var_2 , var_5 ) ; } } else { if ( method_4 ( var_1 ) ) { return type_1 . method_3 ( var_3 , var_4 , var_2 ) ; } else { return type_1 . method_3 ( var_3 , var_4 , var_2 , var_5 ) ; } } }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, java.lang.integer var_3 ) throws java.io.ioexception { java.lang.string message = var_2. method_2 ( var_3 ) ; if ( type_3. method_3 ( message ) ) var_1. method_4 ( string_1, null ) ; else { type_4 var_4 = new type_4 ( ) ; var_4. method_5 ( new type_5 ( string_2 ) ) ; type_6 var_5 = var_4. method_6 ( message, var_6 class ) ; var_1. method_4 ( string_1, var_5 ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( ( var_1 != null ) && ( type_2 . method_2 ( var_2 ) ) ) { type_2 . method_3 ( ( string_1 + var_1 ) ) ; } var_3 . method_4 ( null ) ; var_4 . method_5 ( ) ; var_5 . remove ( this ) ; }
[0]: private boolean method_1 ( java.lang.string var_1 ) { int i = 0 ; for ( char c : var_1. method_2 ( ) ) { if ( c == char_1 ) i ++ ; if ( c == char_2 ) i -- ; } return ( i >= 0 ) && ( i == 0 ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string str ) { type_1 pattern = type_1 . method_2 ( string_1 ) ; if ( ( str != null ) && ( ( pattern . method_3 ( str ) ) != null ) ) return pattern . method_3 ( str ) . method_4 ( ) ; else return false ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2 ) { type_3 var_3 = new type_3 ( var_1, var_2 ) ; type_4 <? > var_4 = var_5. method_2 ( var_3 ) ; var_6. put ( var_2. getid ( ), type_5. method_3 ( var_3, var_4 ) ) ; }

************

************
tgt: private static type_1 method_1 ( type_2 n , type_1 var_1 , type_1 var_2 , type_2 var_3 ) { type_1 var_4 ; double var_5 = type_3 . method_2 ( var_3 , n ) ; var_4 = var_1 . method_3 ( var_2 ) . method_4 ( var_5 ) ; return var_4 ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( new type_2 ( float_1, ( - float_2 ) ) ). method_3 ( false ). method_4 ( false ). method_5 ( false ). method_6 ( false ). method_7 ( false ). method_8 ( false ). method_9 ( int_1 ) ; var_2 = var_3. method_10 ( var_1 ) ; var_4 = new type_3 ( ) ; var_2. method_11 ( var_4 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) return ; type_2 . info ( string_1 ) ; for ( type_3 var_3 : this . var_4 ) { var_3 . method_2 ( var_1 , this ) ; } this . var_4 . method_4 ( ) ; this . var_5 = new type_4 [ int_1 ] ; type_5 var_6 = this . method_5 ( ) ; if ( var_6 != null ) var_6 . method_6 ( ) ; }
[0]: private static boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { if ( ( var_1. length ( ) )!= ( var_2. length ( ) ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( var_1. length ( ) ) ; i ++ ) { if ( ( var_1. method_2 ( i ) )!= ( var_2. method_2 ( i ) ) ) { count ++ ; } } return count == 1 ; }

************

************
tgt: public void method_1 ( type_1 message ) { type_2 var_1 = message . get ( 0 ) ; float var_2 = message . get ( 1 ) ; float var_3 = 0 ; for ( type_3 c : var_4 ) { if ( ( c . method_2 ( ) ) == var_1 ) { c . method_3 ( var_5 ) ; c . method_4 ( ( var_2 - var_3 ) ) ; } } method_5 ( ( ( var_1 . getname ( ) ) + string_1 ) ) ; method_6 ( ) ; }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = new type_1 ( var_3 ) ; var_2. method_2 ( var_4 ) ; type_2. method_3 ( ). method_4 ( var_4 ) ; android.content.intent intent = new android.content.intent ( getactivity ( ), var_5 class ) ; intent. method_5 ( string_1, string_2 ) ; method_6 ( intent ) ; }

************

************
tgt: public boolean method_1 ( java.lang.integer [ ] var_1 , java.lang.integer [ ] var_2 ) { for ( int var_3 = 0 ; ( var_3 < ( var_1 . length ) ) && ( var_3 < ( var_2 . length ) ) ; ++ var_3 ) { if ( ! ( var_1 [ var_3 ] . equals ( var_2 [ var_3 ] ) ) ) return true ; } return false ; }
[0]: public type_1 method_1 ( type_1 var_1, type_1 var_2 ) { type_1 output = new type_1 ( ) ; for ( int i = 0 ; i < ( output. method_2 ( ). length ) ; i ++ ) { if ( ( java.lang.math.random ( ) ) <= ( var_3 ) ) { output. method_3 ( i, var_1. method_2 ( ) [ i ] ) ; } else { output. method_3 ( i, var_1. method_2 ( ) [ i ] ) ; } } return output ; }

************

************
tgt: private boolean method_1 ( char var_1 ) { if ( ( ( var_1 == char_1 ) || ( var_1 == char_2 ) ) || ( var_1 == char_3 ) ) { return true ; } else if ( var_1 == char_4 ) { return ( ( method_2 ( ) ) == char_5 ) || ( ( method_2 ( ) ) == char_6 ) ; } else { return ( var_1 == char_7 ) && ( ( method_2 ( ) ) == char_2 ) ; } }
[0]: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( this. x ) < ( ( var_1. x ) + ( var_2 ) ) ) && ( ( ( this. x ) + ( var_3 ) ) > ( var_1. x ) ) ) && ( ( this. y ) < ( ( var_1. y ) + ( var_4 ) ) ) ) && ( ( ( this. y ) + ( this. var_5 ) ) > ( var_1. y ) ) ; }

************

************
tgt: public void method_1 ( ) { int var_1 = ( ( int ) ( ( var_2 ) * int_1 ) ) ; int var_3 = var_1 * int_2 ; for ( int i = var_3 ; i > 0 ; i -- ) { try { java.lang.thread . method_2 ( int_3 ) ; } catch ( type_1 var_4 ) { } } java.lang.system.out.println ( ( ( ( string_1 + ( name ) ) + string_2 ) + ( gettime ( ) ) ) ) ; remove ( name ) ; }
[0]: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1. method_2 ( var_2 ) ; var_3. method_3 ( var_1 ) ; java.util.arraylist < android.view.view > var_4 = new java.util.arraylist < > ( ) ; var_3. method_4 ( var_5 ). method_5 ( var_4, string_1, var_6 ) ; type_2. method_6 ( var_4. isempty ( ) ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { type_1 var_2 = null ; for ( type_1 var_3 : var_4 ) { if ( ( var_3 . method_2 ( type_2 . method_3 ( string_1 ) ) . gettext ( ) . contains ( var_1 ) ) || ( var_3 . method_2 ( type_2 . method_3 ( string_2 ) ) . gettext ( ) . contains ( var_1 ) ) ) { var_2 = var_3 ; } } if ( var_2 != null ) var_2 . method_4 ( ) ; return ; }
[0]: private static java.util.list < java.lang.integer > method_1 ( int n ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < > ( ) ; if ( n == 1 ) { return var_1 ; } for ( int i = int_1 ; i <= ( n / int_1 ) ; i ++ ) { if ( ( n % i ) == 0 ) { var_1. add ( i ) ; } } if ( var_1. isempty ( ) ) { var_1. add ( n ) ; } return var_1 ; }

************

************
tgt: protected java.io.file method_1 ( ) { android.content.intent intent = new android.content.intent ( var_1 ) ; type_1 var_2 = type_2 . method_2 ( var_3 ) ; var_4 . add ( var_2 ) ; intent . method_3 ( var_5 , var_2 ) ; method_4 ( intent , var_6 ) ; return new java.io.file ( var_4 . get ( ( ( var_4 . size ( ) ) - 1 ) ) . method_5 ( ) ) ; }
[0]: public void method_1 ( int var_1, int status, int position ) { type_1 tmp = var_2. get ( var_1 ) ; tmp. status = status ; tmp. position = position ; var_2. set ( var_1, tmp ) ; type_2. method_2 ( var_3, ( ( ( string_1 + var_1 ) + string_2 ) + position ) ) ; this. method_3 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , double result ) { java.lang.system.out.println ( ( string_1 + var_1 ) ) ; if ( var_1 . equals ( string_2 ) ) { var_2 . method_2 ( new type_1 ( var_2 , var_3 , new type_2 ( ) { public void method_1 ( java.lang.string var_1 ) { var_2 . method_2 ( new type_3 ( var_2 ) ) ; } } ) ) ; } else if ( var_1 . equals ( string_3 ) ) { var_2 . method_2 ( var_2 . method_3 ( ) ) ; } }
[0]: private double method_1 ( type_1 n ) { double var_1 = ( this. var_2. method_2 ( ) ) - ( var_3. method_2 ( ) ) ; double var_4 = ( this. var_2. method_3 ( ) ) - ( var_3. method_3 ( ) ) ; return type_2. method_4 ( ( ( java.lang.math.pow ( var_1, int_1 ) ) + ( java.lang.math.pow ( var_4, int_1 ) ) ) ) ; }

************

************
tgt: public void method_1 ( ) { if ( ( ( type_1 . method_2 ( ) . size ( ) ) != 0 ) && ( var_1 ) ) { synchronized ( var_4 ) { if ( var_2 ) { try { synchronized ( var_4 ) { var_3 . method_3 ( ) . method_4 ( var_4 ) ; } } catch ( java.io.ioexception var_5 ) { } } var_3 . method_5 ( ) ; var_4 = new type_2 ( var_3 . method_6 ( ) ) ; var_2 = false ; } } }
[0]: private static int [ ] method_1 ( int [ ] data, int start, int end ) { if ( start < end ) { int index = type_1. method_2 ( data, start, end ) ; type_1. method_1 ( data, start, ( index - 1 ) ) ; type_1. method_1 ( data, ( index + 1 ), end ) ; } return data ; }

************

************
tgt: public java.util.list < java.util.map < java.lang.string , java.lang.object > > method_1 ( long id ) { java.util.list < java.util.map < java.lang.string , java.lang.object > > var_1 = var_2 . method_1 ( id ) ; if ( ! ( var_1 . isempty ( ) ) ) var_1 . get ( 0 ) . put ( string_1 , var_2 . method_2 ( java.lang.integer.parseint ( var_1 . get ( 0 ) . get ( "id" ) . tostring ( ) ) ) ) ; return var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { var_2 = false ; var_3 = var_1. method_2 ( x ) ; var_4 = var_1. method_3 ( x ) ; var_5 = var_1. method_2 ( y ) ; var_6 = var_1. method_3 ( y ) ; if ( ( var_4 )!= ( var_6 ) ) { var_1. method_4 ( x ). method_5 ( var_6 ) ; } if ( ( var_3 )!= ( var_5 ) ) { var_1. method_4 ( x ). method_6 ( var_5 ) ; } return var_2 ; }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { type_1 var_1 = new type_1 ( ) ; type_2 var_2 = new type_2 ( string_1 , true ) ; var_1 . add ( var_2 ) ; var_1 . method_1 ( true ) ; var_1 . method_2 ( var_3 ) ; var_1 . method_3 ( true ) ; var_1 . method_4 ( var_4 ) ; }
[0]: public boolean method_1 ( java.lang.string var_1, java.lang.string var_2 ) { type_1 var_3 = this. var_4. method_2 ( var_1 ) ; java.lang.string var_5 = type_2. method_3 ( var_2 ) ; if ( var_5. equals ( var_3. method_4 ( ) ) ) { this. var_6. method_5 ( var_3 ) ; return true ; } return false ; }

************

************
tgt: private type_1 method_1 ( java.lang.string var_1 ) { type_1 var_2 ; var_3 . method_2 ( ) ; type_2 query = var_3 . method_3 ( ( string_1 + var_1 ) ) ; var_2 = ( ( type_1 ) ( query . method_4 ( ) ) ) ; var_3 . method_5 ( ) . commit ( ) ; return var_2 ; }
[0]: public void method_1 ( type_1 var_1, type_2 p ) { type_3 message = new type_3 ( ) ; message. method_2 ( var_2 ) ; message. method_3 ( p. getname ( ) ) ; message. method_4 ( p. method_5 ( ). method_5 ( ). method_6 ( ) ) ; var_3. put ( message. getname ( ), message. method_7 ( ) ) ; p. method_8 ( var_1, var_4, message. method_9 ( ) ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = java.lang.integer.tostring ( type_1 . method_2 ( ) . method_3 ( int_1 , int_2 ) ) ; java.io.file f = new java.io.file ( ( var_1 + string_1 ) ) ; if ( f . method_4 ( ) ) { var_1 = method_1 ( ) ; } return var_1 ; }
[0]: public static void method_1 ( java.util.list < java.lang.string > var_1 ) { var_1 = type_1. method_2 ( var_2, false ) ; final java.util.list < java.lang.string > var_3 = type_1. method_2 ( var_2, true ) ; var_3. method_3 ( var_1 ) ; if (! ( var_3. isempty ( ) ) ) var_1 = var_3 ; type_1. method_4 ( var_2, var_1 ) ; }

************

************
tgt: public java.util.arraylist < type_1 > method_1 ( java.lang.string var_1 ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < type_1 > ( ) ; type_1 var_3 ; if ( var_1 == null ) { java.lang.system.out.println ( string_1 ) ; return null ; } java.util.collections.sort ( token ) ; while ( ( var_1 . length ( ) ) > 0 ) { var_3 = method_2 ( var_1 ) ; var_1 = var_1 . substring ( var_3 . method_3 ( ) ) ; var_2 . add ( var_3 ) ; } return var_2 ; }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; getcontext ( ). method_3 ( type_1. method_4 ( var_2 class ) ). method_5 ( new type_2 ( var_3 ), method_6 ( ) ) ; getcontext ( ). method_3 ( type_1. method_4 ( var_4 class ) ). method_5 ( new type_2 ( var_3 ), method_6 ( ) ) ; method_6 ( ). method_5 ( new type_3 ( ), method_6 ( ) ) ; super. method_1 ( ) ; }

************

************
tgt: private static java.lang.string method_1 ( ) { java.lang.stringbuilder var_1 = new java.lang.stringbuilder ( string_1 ) ; var_1 . append ( string_2 ) ; var_1 . append ( string_3 ) ; for ( java.lang.string var_2 : var_3 ) { if ( type_1 . method_2 ( var_2 ) ) { var_1 . append ( ( ( string_4 + var_2 ) + string_5 ) ) ; } } return var_1 . tostring ( ) ; }
[0]: public type_1 method_1 ( type_1 var_1, type_1 var_2, java.lang.string var_3 ) { method_2 ( ) ; if ( var_3 == null ) var_3 = string_1 ; type_1 [ ] var_4 = new type_1 [ ] { var_1, var_2 } ; int var_5 = type_2. method_3 ( this, var_4, var_6. method_4 ( var_7, var_8, var_3 ) ) ; if ( var_5 == 0 ) return null ; return new type_1 ( this, var_5, var_4 ) ; }

************

************
tgt: private void method_1 ( boolean var_1 ) { final type_1 < type_2 > var_2 = var_3 . get ( ) ; var_2 . remove ( this ) ; final type_2 var_4 = var_2 . method_3 ( ) ; if ( var_4 != null ) { var_5 . set ( var_4 ) ; var_4 . method_4 ( ) ; } else { var_5 . set ( null ) ; if ( var_1 ) type_3 . set ( null ) ; } }
[0]: protected void method_1 ( ) { if ( ( ( ( var_1 )!= null ) || ( ( var_2 )!= null ) ) && ( type_1. method_2 ( ) ) ) { try { method_3 ( ) ; } catch ( java.lang.exception var_3 ) { method_4 ( this, var_3 ) ; } } else { method_3 ( ) ; } }

************

************
tgt: public void method_1 ( java.lang.string key ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { if ( var_1 . get ( i ) . method_2 ( ) . equals ( key ) ) { var_2 = i ; init ( ) ; return ; } } throw new type_1 ( string_1 ) ; }
[0]: public void method_1 ( double var_1 ) throws type_1, type_2, type_3 { if ( java.lang.double. method_2 ( var_1 ) ) throw new type_1 ( string_1 ) ; method_3 ( method_4 ( ), var_1 ) ; method_4 ( ). method_1 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( ) ; for ( type_4 var_2 : this. var_3 ) { method_3 ( var_2, var_1 ) ; var_2. method_1 ( var_1 ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string msg = null ; try { msg = ( ( java.lang.string ) ( var_1 . method_2 ( ) ) ) ; } catch ( java.io.ioexception | java.lang.classnotfoundexception var_2 ) { java.lang.system.err.println ( ( string_1 + ( var_2 . method_3 ( ) ) ) ) ; } return msg ; }
[0]: protected final int method_1 ( java.lang.string line ) { int index = 0 ; while ( type_1. method_2 ( line. method_3 ( index ) ) ) { index ++ ; } return type_2. method_4 ( line, index, var_1. method_5 ( ) ) ; }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { execute ( string_1 ) ; method_2 ( ) ; try { execute ( string_2 ) ; } catch ( type_1 var_1 ) { assertequals ( var_1 . method_3 ( ) , string_3 ) ; } finally { execute ( string_4 ) ; assertequals ( response . method_4 ( ) , 1l ) ; execute ( string_5 ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = this. method_2 ( ) ; type_3 values = new type_3 ( ) ; values. put ( var_3, var_1. method_3 ( ) ) ; values. put ( var_4, var_1. method_4 ( ) ) ; var_2. method_5 ( var_5, null, values ) ; var_2. method_6 ( ) ; }

************

************
tgt: private static type_1 method_1 ( type_2 item ) { type_1 var_1 ; if ( string_1 . equals ( item . getclass ( ) . getname ( ) ) ) { var_1 = ( ( type_1 ) ( item ) ) ; } else { var_1 = ( ( type_1 ) ( item . method_2 ( ) ) ) ; } return var_1 ; }
[0]: public void method_1 ( ) { while ( true ) { if ( ( ( var_1. size ( ) ) > 0 ) && ( ( var_2 = type_1. method_2 ( 1 ) )!= null ) ) { type_2 var_3 = var_1. get ( 0 ) ; var_3. method_3 ( var_2. get ( 0 ) ) ; var_1. remove ( var_3 ) ; var_3. method_4 ( ) ; } } }

************

************
tgt: public void method_1 ( ) { var_1 = new type_1 ( ) ; if ( ( var_2 ) == null ) { var_3 = var_2 = var_1 ; } else if ( ( var_3 ) instanceof type_2 ) { type_2 var_4 = ( ( type_2 ) ( var_3 ) ) ; var_5 . method_2 ( var_3 ) ; if ( var_4 . method_3 ( ) ) var_3 . method_4 ( var_6 ) ; else var_4 . method_5 ( var_1 ) ; } else var_3 . method_4 ( var_1 ) ; var_3 = var_1 ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( ( var_2 )!= null ) return false ; if ( var_1 == null ) { var_3 = null ; } else if ( var_1 instanceof type_2 ) { var_3 = ( ( type_2 ) ( var_1 ) ) ; } return true ; }

************

************
tgt: public void method_1 ( double var_1 ) { if ( var_1 > float_1 ) { this . status = int_1 ; var_2 . settext ( string_1 ) ; } else if ( var_1 < float_2 ) { this . status = 0 ; var_2 . settext ( string_2 ) ; } else { this . status = 1 ; var_2 . settext ( string_3 ) ; } }
[0]: public java.util.list < java.lang.integer > method_1 ( int var_1, int var_2 ) { java.util.calendar var_3 = new type_1 ( ) ; int var_4 = var_3. method_2 ( var_5 ) ; java.util.list < java.lang.integer > var_6 = new java.util.arraylist < java.lang.integer > ( ) ; for ( int i = 0 ; i < var_4 ; i ++ ) { var_6. add ( ( i + 1 ) ) ; } return var_6 ; }

************

************
tgt: private long method_1 ( java.lang.object var_1 ) { if ( var_1 instanceof type_2 ) { type_3 var_2 = ( ( type_2 ) ( var_1 ) ) . var_2 ; if ( var_2 instanceof type_4 ) { return ( ( type_4 ) ( var_2 ) ) . method_1 ( ) ; } } else if ( var_1 instanceof type_5 ) { return ( ( type_5 ) ( var_1 ) ) . method_2 ( ) . method_1 ( ) ; } return ( type_6 . method_3 ( var_1 ) ) + 1 ; }
[0]: protected java.util.map < java.lang.string, java.lang.string > method_1 ( ) throws type_1 { java.util.map < java.lang.string, java.lang.string > params = new java.util.hashmap < > ( ) ; params. put ( string_1, var_1 ) ; params. put ( string_2, var_2 ) ; params. put ( string_3, var_3 ) ; params. put ( string_4, var_4 ) ; return params ; }

************

************
tgt: public void method_1 ( type_1 event , boolean var_1 ) { super . method_1 ( event , var_1 ) ; if ( event != null ) { data = new type_2 ( ) ; data . method_2 ( event ) ; method_3 ( data . method_4 ( ) ) ; } else { method_3 ( null ) ; } }
[0]: public void method_1 ( ) throws java.io.ioexception { type_1 var_1 = var_2. get ( var_3 ) ; method_2 ( var_1 ) ; type_2. assertequals ( ( ( java.lang.integer ) ( var_3 ) ), var_1. method_3 ( ) ) ; type_2. assertequals ( 0, var_1. method_4 ( ). size ( ) ) ; }

************

************
tgt: private void method_1 ( ) { var_1 = new java.util.arraylist < > ( ) ; method_2 ( ) ; method_3 ( ) ; method_4 ( ) ; for ( java.util.list < type_1 > handle : var_1 ) { java.util.collections.sort ( handle , new type_2 ( ) ) ; } }
[0]: public void method_1 ( java.util.list <? > var_1, boolean [ ] var_2 ) { int size = ( var_1 == null )? 0 : var_1. size ( ) ; method_1 ( var_1. method_2 ( new java.lang.string [ size ] ), var_2 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 , int var_2 , int index ) { for ( int i = 0 ; i < var_2 ; i ++ ) { if ( ( method_2 ( var_3 ) . type ) == ( var_4 ) ) { type_2 . method_3 ( var_1 , var_5 , ( index + i ) ) ; } else if ( ( method_2 ( var_3 ) . type ) == ( var_6 ) ) { } else { throw new type_3 ( ) ; } } }
[0]: private void method_1 ( android.content.intent intent ) { if ( intent. method_2 ( ). equals ( var_1 ) ) { java.lang.string query = intent. method_3 ( var_2 ) ; type_1. method_4 ( var_3, query, var_4 ). show ( ) ; type_2 var_5 = new type_2 ( this, var_6, var_7 ) ; var_5. method_5 ( query, null, false ) ; } }

************

************
tgt: public type_1 method_1 ( java.lang.string query ) { type_2 var_1 = type_3 . method_2 ( type_3 . url , var_2 , var_3 ) ; type_1 var_4 = null ; try { type_4 var_5 = var_1 . method_3 ( ) ; var_4 = var_5 . method_4 ( query ) ; var_1 . method_5 ( ) ; } catch ( type_5 var_6 ) { java.lang.system.out.println ( var_6 . method_6 ( ) ) ; type_6 . method_7 ( string_1 , var_6 . method_6 ( ) ) ; } return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { method_2 ( var_1 ) ; method_3 ( var_1 ) ; method_4 ( var_1 ) ; method_5 ( var_1 ) ; method_6 ( var_1 ) ; method_7 ( var_1 ) ; method_8 ( ) ; method_9 ( var_1 ) ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 , java.lang.string id ) throws java.lang.exception { type_2 var_2 = null ; var_2 = var_3 . method_2 ( java.lang.long.parselong ( id ) ) ; if ( var_2 . method_3 ( ) . equals ( var_1 ) ) return var_2 . method_4 ( ) . method_5 ( ) ; return null ; }
[0]: private void method_1 ( ) { if ( ( ( var_1 )!= 0.0 ) || ( ( var_2 )!= 0.0 ) ) { type_1 var_3 = new type_1 ( var_1, var_2 ) ; type_2 var_4 = new type_2 ( ) ; var_4. method_2 ( var_3 ) ; var_5. method_3 ( string_1, var_4 ) ; var_5. method_4 ( var_2, var_1, true ) ; var_5. method_5 ( int_1 ) ; } else { type_3. method_6 ( this, string_2, var_6 ). show ( ) ; } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 . method_2 ( this , string_1 , var_2 ) . show ( ) ; if ( var_3 ) { var_4 . delete ( var_5 ) ; method_5 ( var_9 , 1 ) ; } else { var_6 = new type_2 ( ) ; } var_7 . method_3 ( 0 ) ; var_5 = new type_2 ( ) ; var_8 . method_4 ( ) ; }
[0]: public void method_1 ( ) { switch ( type ) { case string_1 : java.lang.system.out.print ( value ) ; break ; case string_2 : java.lang.system.out.println ( string_3 ) ; var_1. method_2 ( ) ; java.lang.system.out.print ( string_4 ) ; } }

************

************
tgt: private void init ( ) { for ( int i = 1 ; i <= ( var_1 ) ; i ++ ) { var_2 . add ( new type_1 ( i ) ) ; } var_3 = java.lang.integer.parseint ( var_4 . method_1 ( 0 ) ) ; var_5 = java.lang.integer.parseint ( var_4 . method_1 ( 1 ) ) ; var_6 = new type_2 ( 0 , 0 , this , var_4 . method_2 ( 0 ) ) ; var_7 = new type_3 ( string_1 ) ; c = new type_4 ( this ) ; }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { var_2 [ i ] = new type_1 ( ( ( var_3 ) + i ) ) ; if (! ( type_2. method_2 ( ). var_4. method_3 ( ( ( var_3 ) + i ) ) ) ) { var_2 [ i ]. method_4 ( ) ; } else { var_2 [ i ]. method_5 ( ) ; } } } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { if ( this . equals ( var_1 ) ) return true ; if ( ( this . var_3 . method_6 ( var_1 . method_7 ( ) ) ) && ( this . var_4 . method_6 ( var_1 . method_5 ( ) ) ) ) return true ; return false ; }
[0]: public void method_1 ( android.view.view var_1 ) { method_2 ( ) ; type_1 var_2 = var_3. method_3 ( ) ; var_2. method_4 ( var_4, var_5 ) ; var_2. replace ( var_6, new type_2 ( var_7 ), null ). method_5 ( null ). commit ( ) ; }

************

************
tgt: public void method_1 ( ) { switch ( var_1 ) { case var_2 : case var_3 : setstate ( var_7 ) ; if ( ( var_4 ) == null ) { new type_1 ( var_5 , var_6 ) ; } else { var_4 . method_2 ( var_5 ) ; var_4 . method_3 ( var_6 ) ; } break ; case var_8 : case var_9 : java.lang.system.err.println ( string_1 ) ; } }
[0]: private static type_1 method_1 ( java.util.list < type_2 > var_1, java.util.random var_2, type_1 var_3 ) { if ( var_1. contains ( var_4 ) ) { var_3. method_2 ( type_3. method_3 ( int_1, int_2 ) ) ; } else if ( var_1. contains ( var_5 ) ) { var_3. method_2 ( type_3. method_3 ( int_3, int_4 ) ) ; } else { type_3. method_3 ( int_5, int_5 ) ; } return var_3 ; }

************

************
tgt: private void method_1 ( ) { java.util.map < type_1 , java.lang.boolean > var_1 = var_2 . method_2 ( ) ; for ( type_1 path : var_1 . method_3 ( ) ) { if ( var_1 . get ( path ) ) { method_4 ( path ) ; var_2 . remove ( path ) ; } } }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; type_1 var_2 = type_2. method_2 ( var_3, var_4, new java.util.hashmap < > ( ) ) ; type_1 var_5 = type_2. method_2 ( var_6, var_4, new java.util.hashmap < > ( ) ) ; type_3. method_3 ( var_2 ) ; type_3. method_3 ( var_5 ) ; org.testng.assert.assertequals ( var_3. method_4 ( ), var_1 ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) { super . method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = new type_2 ( ) { public void method_3 ( ) { method_4 ( ) ; method_5 ( new android.content.intent ( var_4 this , var_5 class ) ) ; } } ; type_3 var_6 = new type_3 ( ) ; var_6 . method_6 ( var_3 , int_1 ) ; }
[0]: public java.lang.string add ( type_1 var_1, type_2 var_2, java.lang.string var_3 ) { if ( var_3. equals ( var_2. method_1 ( ) ) ) { var_1. method_2 ( string_1, string_2 ) ; var_1. method_2 ( string_3, var_2. method_3 ( ) ) ; type_3. add ( var_2 ) ; return string_4 ; } else { var_1. method_2 ( string_1, string_2 ) ; var_1. method_2 ( string_5, string_6 ) ; var_1. method_2 ( var_2 ) ; return string_7 ; } }

************

************
tgt: public void method_1 ( int x , int y ) { for ( int var_1 = 0 ; var_1 < ( var_3 . size ( ) ) ; var_1 ++ ) { if ( ( ( var_3 . get ( var_1 ) . var_4 ) == x ) && ( ( var_3 . get ( var_1 ) . var_5 ) == y ) ) { var_3 . remove ( var_1 ) ; } } }
[0]: public void method_1 ( android.view.view view ) { int var_1 = method_3 ( ) ; android.content.intent intent = new android.content.intent ( var_2, var_3 class ) ; intent. method_4 ( string_3, ( var_1 + string_4 ) ) ; intent. method_4 ( string_5, type_2. method_5 ( var_4 ) ) ; var_2. method_6 ( intent ) ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { method_2 ( ) . method_3 ( var_2 , var_1 ) ; type_2 var_3 = ( ( type_2 ) ( type_3 . method_4 ( var_1 . method_5 ( var_4 ) ) ) ) ; type_4 var_6 = ( ( type_4 ) ( method_8 ( var_7 ) ) ) ; var_3 . method_9 ( var_6 . method_10 ( method_11 ( ) ) ) ; var_3 . method_12 ( this ) ; return true ; }
[0]: public void method_1 ( ) throws java.lang.exception { final java.util.list < type_1 > var_1 = method_2 ( ) ; method_3 ( ( ( long ) ( var_1. size ( ) ) ) ). method_4 ( var_2 ). method_5 ( var_3, var_4 ) ; final long var_5 = var_6. method_5 ( var_3 ) ; type_2. assertthat ( var_5 ). method_6 ( string_1 ). method_7 ( var_1. size ( ) ) ; }

************

************
tgt: private type_1 method_1 ( java.lang.string text , int var_1 , int height , boolean var_2 ) { type_1 var_3 = new type_1 ( text ) ; var_3 . method_3 ( var_2 ) ; if ( ! var_2 ) { var_3 . method_4 ( null ) ; } type_2 . method_2 ( var_3 , new type_3 ( var_1 , height ) ) ; return var_3 ; }
[0]: public type_1 method_1 ( final java.lang.string var_1, final java.lang.string var_2, final int var_3 ) { method_2 ( ) ; java.lang.object result = this. method_3 ( var_1, null, 0 ) ; if ( result instanceof type_1 ) { return ( ( type_1 ) ( result ) ) ; } throw new type_2 ( ) ; }

************

************
tgt: private void method_1 ( int x ) { x = x - ( this . method_2 ( ) ) ; int var_1 = var_2 . method_3 ( ) ; if ( x < 0 ) { x = 0 ; } if ( x > ( var_1 - 1 ) ) { x = var_1 - 1 ; } int var_3 = ( x * ( var_4 ) ) / var_1 ; setvalue ( var_3 , true , false ) ; var_2 . method_4 ( x ) ; }
[0]: public java.lang.boolean method_1 ( int x ) { if ( ( ( this. method_2 ( ) ) >= ( x - int_1 ) ) && ( ( this. method_2 ( ) ) <= ( x + int_2 ) ) ) { method_3 ( ) ; return true ; } return false ; }

************

************
tgt: public void method_1 ( int var_1 ) { var_2 = type_1 . method_2 ( ) ; try { var_3 = var_2 . method_3 ( ) ; var_3 . method_4 ( ( string_1 + var_1 ) ) ; var_3 . method_5 ( ) ; method_6 ( ) ; type_1 . method_7 ( ) ; } catch ( type_2 var_4 ) { var_4 . method_8 ( ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { java.util.calendar date = java.util.calendar.getinstance ( ) ; date. method_2 ( var_2 ) ; type_1 var_3 = new type_1 ( this, var_4, date. get ( var_5 ), date. get ( var_6 ), date. get ( var_7 ) ) ; var_3. method_3 ( ). method_4 ( new java.util.date ( ). gettime ( ) ) ; var_3. show ( ) ; }

************

************
tgt: public void method_1 ( type_1 status ) { if ( status . method_3 ( ) ) { type_2 . method_4 ( ) . method_5 ( ) ; var_2 . method_6 ( var_3 ) ; var_2 . method_7 ( null ) ; var_2 . method_8 ( null ) ; var_4 . method_9 ( ) ; } else { var_4 . method_10 ( ) ; } }
[0]: public void method_1 ( ) { int [ ] var_1 = new int [ ] { int_1, int_2, int_3, int_4, 1, int_5, int_6 } ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) var_2. method_2 ( var_1 [ i ] ). method_3 ( ) ; int var_3 = type_1. method_4 ( var_1 ) ; type_2. assertequals ( var_3, int_7 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { type_2 text = gettext ( ) ; type_3 [ ] var_3 = text . method_2 ( 0 , text . length ( ) , var_4 class ) ; for ( type_3 var_5 : var_3 ) { if ( ( var_5 . method_3 ( ) ) == var_1 ) { method_4 ( ) ; } } } super . method_1 ( var_1 ) ; }
[0]: public void method_1 ( java.lang.string var_1 ) throws type_1 { try ( final type_2 var_2 = type_3. method_2 ( var_3 class ) ) { type_4. method_3 ( ). method_1 ( var_1, var_2 ) ; var_2. commit ( ) ; } catch ( java.lang.exception var_4 ) { type_5. error ( ( ( ( string_1 + var_1 ) + string_2 ) + ( var_4. method_4 ( ) ) ) ) ; throw new type_1 ( string_3, ( string_1 + var_1 ), string_4, var_1, var_5 ) ; } }

************

************
tgt: public void method_1 ( ) { for ( java.util.map.entry < java.lang.string , java.lang.integer > var_1 : var_2 . method_2 ( ) ) { java.lang.system.out.println ( ( ( ( string_1 + ( var_1 . method_3 ( ) ) ) + string_2 ) + ( var_1 . getvalue ( ) ) ) ) ; } }
[0]: private type_1 method_1 ( type_2 var_1 ) throws java.io.ioexception { if ( ( var_1. method_2 ( ) )!= ( var_2 ) ) return null ; java.util.collection < type_3 > var_3 = new java.util.arraylist < > ( ) ; while ( ( var_1. method_3 ( ) )!= ( var_4 ) ) { var_1. method_3 ( ) ; java.lang.string var_5 = var_1. gettext ( ). touppercase ( var_6 ) ; var_3. add ( type_3. method_4 ( var_5 ) ) ; } return new type_1 ( var_3 ) ; }

************

************
tgt: public static void method_1 ( android.content.context context , int var_1 ) { if ( ( var_2 ) != null ) { java.lang.string var_3 = var_2 ; type_1 var_4 = ( ( type_1 ) ( context . method_2 ( ) . method_3 ( var_3 ) ) ) ; var_4 . method_4 ( var_1 ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( ) ; for ( int var_2 = 0 ; var_2 < ( var_3 ) ; var_2 ++ ) { var_4 [ var_2 ] = new type_1 [ var_5 ] ; for ( int c = 0 ; c < ( var_5 ) ; c ++ ) var_4 [ var_2 ] [ c ] = null ; } method_3 ( ) ; }

************

************
tgt: public static boolean isempty ( java.lang.object var_1 ) { if ( var_1 instanceof java.lang.string ) { return type_1 . isempty ( var_1 ) ; } else if ( var_1 instanceof type_2 ) { return ! ( ( ( type_2 ) ( var_1 ) ) . method_1 ( ) ) ; } else { throw new type_3 ( var_2 ) ; } }
[0]: private java.lang.string [ ] method_1 ( java.lang.string [ ] var_1 ) { int var_2 = 0 ; for ( java.lang.string var_3 : var_1 ) { if ( ( var_3. length ( ) ) == 0 ) var_2 ++ ; } java.lang.string [ ] var_4 = new java.lang.string [ ( var_1. length ) - var_2 ] ; int var_5 = 0 ; for ( java.lang.string var_3 : var_1 ) { if ( ( var_3. length ( ) )!= 0 ) { var_4 [ var_5 ] = var_3 ; var_5 ++ ; } } return var_4 ; } return null ; }

************

************
tgt: public int method_1 ( ) { return ( ( int ) ( ( ( float ) ( ( var_1 ) / ( ( float ) ( ( var_3 ) - ( var_2 ) ) ) ) ) * ( ( height ) - ( var_3 ) ) ) ) ; }
[0]: private type_1 method_1 ( int start ) { short var_1 = type_2. method_2 ( buffer, start ) ; byte var_2 = buffer [ ( start + int_1 ) ] ; var_2 ++ ; byte size = buffer [ ( start + int_2 ) ] ; byte [ ] var_3 = new byte [ size ] ; type_3. method_3 ( buffer, ( start + int_3 ), var_3, 0, size ) ; type_1 value = new type_1 ( var_1, var_2, var_3 ) ; return value ; }

************

************
tgt: protected boolean method_1 ( int var_1 , int height ) { var_2 . method_2 ( var_1 , height ) ; method_3 ( ) ; var_3 . x = var_1 ; var_3 . y = height ; return ( var_1 != 0 ) && ( height != 0 ) ; }
[0]: public int method_1 ( java.lang.string var_1 ) { java.util.arraylist < type_1 > p = this. method_2 ( var_1 ) ; int var_2 = 0 ; for ( type_1 var_3 : p ) { java.lang.string var_4 = var_3. method_3 ( ). split ( string_1 ) ; int var_5 = java.lang.integer.parseint ( var_4 [ 1 ] ) ; if ( var_2 = var_5 ) { var_2 = var_5 ; } } return var_2 + 1 ; }

************

************
tgt: public double method_1 ( ) { if ( ! ( java.lang.double . method_2 ( var_1 ) ) ) return var_1 ; for ( int i = 0 ; i < ( method_3 ( ) [ 0 ] . length ) ; i ++ ) { final double var_2 = method_3 ( 0 , i , int_1 ) ; if ( ( var_2 <= ( var_1 ) ) || ( java.lang.double . method_2 ( var_1 ) ) ) var_1 = var_2 ; } return var_1 ; }
[0]: public void method_1 ( ) throws java.lang.exception { this. var_1. method_2 ( target ) ; type_1. method_3 ( file. method_4 ( ), string_1. method_5 ( ), var_2 ) ; type_1. delete ( file. method_4 ( ) ) ; var_3. method_6 ( ) ; type_1. method_3 ( file. method_4 ( ), string_2. method_5 ( ), var_4 ) ; type_2. assertequals ( string_3, var_3. method_7 ( ). method_8 ( ) ) ; }

************

************
tgt: public static double method_1 ( float [ ] x , int var_1 ) { double var_2 = 0 ; for ( int i = 0 ; i < var_1 ; ++ i ) { var_2 += ( x [ i ] ) * ( x [ i ] ) ; } return var_2 ; }
[0]: public void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; long var_2 = var_1. method_2 ( var_3 ) ; var_4. method_3 ( var_2 ) ; var_5 = var_1. getboolean ( var_6 ) ; if ( var_5 ) { var_4. method_4 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) throws type_2 { var_2 = var_3 . method_2 ( string_1 ) ; var_2 . method_3 ( 1 , var_1 . method_4 ( ) ) ; var_2 . method_3 ( int_1 , var_1 . method_5 ( ) ) ; var_2 . method_3 ( int_2 , var_1 . method_6 ( ) ) ; var_2 . method_7 ( ) ; var_2 . method_8 ( ) ; return true ; }
[0]: public void method_1 ( ) { if ( ( ( var_1 ) > 0 ) && ( ( var_2 ) >= int_1 ) ) { method_2 ( ) ; } if ( ( ( var_1 ) < 0 ) && ( ( var_2 ) <= int_2 ) ) { method_2 ( ) ; } var_2 += var_1 ; }

************

************
tgt: public type_1 method_1 ( java.lang.string id ) { type_1 var_1 = method_2 ( get ( id ) ) ; if ( ( var_1 . method_3 ( ) ) == null ) { var_1 . method_4 ( new java.util.date ( ) . tostring ( ) ) ; update ( var_1 ) ; } return var_1 ; }
[0]: public void method_1 ( type_1 status ) throws java.lang.exception { var_1. info ( string_1, status ) ; type_2 var_2 = var_3. method_2 ( var_4 ) ; var_2. method_3 ( ) ; var_3. method_4 ( status. gettype ( ). name ( ), status ) ; var_2. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { type_2 . method_2 ( string_1 ) ; } long start = type_3 . method_3 ( ) ; type_4 . method_4 ( var_1 ) ; long end = type_3 . method_3 ( ) ; if ( var_2 ) { type_2 . method_2 ( ( ( string_2 + ( ( end - start ) / int_1 ) ) + string_3 ) ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( this. var_3. method_2 ( var_4 ) ) ) ; type_3 var_5 = ( var_2. method_3 ( ) ) == ( var_6 ) ; var_1. method_4 ( var_5 ) ; }

************

************
tgt: private void method_1 ( ) { for ( int i = var_1 ; i > ( - 1 ) ; i -- ) { if ( ( position ) >= ( var_2 [ var_1 ] ) ) { break ; } else { var_2 [ ( ( var_1 ) -- ) ] = - 1 ; } } }
[0]: public void method_1 ( final type_1 var_1, int position ) { type_2 var_2 = var_3. get ( position ) ; var_4. settext ( var_2. method_2 ( ) ) ; if ( ( ( var_5 )!= null ) && ( ( var_2. method_3 ( ) )!= null ) ) { var_5. method_4 ( type_3. method_5 ( var_2. method_3 ( ), context ) ) ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) throws java.io.ioexception { type_2 var_2 = type_2 . method_2 ( ) ; var_1 . add ( var_2 . method_3 ( ( ! ( var_3 . method_4 ( ) ) ) , var_4 , var_5 , var_6 , src ) ) . add ( var_2 . method_5 ( ) ) . add ( var_2 . method_6 ( var_7 , var_8 , var_9 , var_10 ) ) ; }
[0]: private type_1 method_1 ( java.lang.string var_1, int var_2, int var_3, double var_4, int var_5, int var_6, long starttime, java.lang.integer var_7, java.lang.integer var_8 ) throws java.lang.exception { type_2. info ( java.lang.string.format ( string_1, var_1, var_2, var_3 ) ) ; return method_1 ( var_1, var_2, var_3, var_4, var_5, var_6, starttime, method_2 ( var_1 ), var_7, var_8 ) ; }

************

************
tgt: public void method_1 ( ) { java.lang.object result = null ; java.lang.exception error = null ; try { result = var_1 . method_1 ( params . method_2 ( ) ) ; } catch ( java.lang.exception var_3 ) { error = var_3 ; } if ( error != null ) method_3 ( var_2 , error . method_4 ( ) , null ) ; else method_3 ( var_2 , null , result ) ; }
[0]: public void method_1 ( ) throws type_1 { var_1 = java.lang.math.abs ( java.lang.integer.parseint ( var_2. gettext ( ) ) ) ; if ( ( var_1 ) > int_1 ) { var_1 = int_1 ; var_2. setvalue ( new java.lang.integer ( string_1 ) ) ; } else if ( ( var_1 ) == 0 ) { var_1 = 1 ; var_2. setvalue ( new java.lang.integer ( string_2 ) ) ; } var_3. method_2 ( var_4. method_3 ( ) ). method_4 ( var_5. method_3 ( ) ). method_5 ( var_1 ) ; }

************

************
tgt: private java.lang.string method_1 ( type_1 var_1 , int size , int var_2 , java.lang.string var_3 ) { java.util.list < java.lang.integer > var_4 = method_2 ( size , var_5 ) ; java.lang.string target = string_1 ; if ( var_3 . equals ( string_2 ) ) target = method_3 ( var_1 , var_4 , var_2 ) ; return target ; }
[0]: public boolean method_1 ( int x, int y ) { if ( ( x < int_1 ) || ( x > int_2 ) ) { return false ; } else { if ( ( x > int_3 ) && ( y < int_2 ) ) { return false ; } else if ( ( y > int_4 ) || ( y < int_5 ) ) { return false ; } } size = x ; return true ; } }

************

************
tgt: private void method_1 ( type_1 var , type_2 var_1 ) { if ( ( var . method_2 ( ) ) || ( ( var . method_3 ( ) ) instanceof type_3 ) ) { type_4 var_2 = method_4 ( var ) ; if ( null != var_2 ) { var_2 . method_5 ( var_1 ) ; } } else { type_5 var_3 = var . method_3 ( ) ; java.lang.system.out.println ( ( string_1 + var_3 ) ) ; } }
[0]: public java.lang.string method_1 ( long var_1 ) { type_1 var_2 = ( ( type_1 ) ( type_2. getcontext ( ). method_2 ( ). method_3 ( ) ) ) ; type_3 var_3 = var_4. method_4 ( var_2. getid ( ), var_1 ) ; var_4. delete ( var_3 ) ; type_4 var_5 = var_6. method_5 ( var_1 ) ; var_6. delete ( var_5 ) ; return string_1 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 , java.lang.string title , java.lang.string var_2 ) { type_1 var_3 = var_4 . method_2 ( var_1 ) ; if ( var_3 == null ) var_3 = new type_1 ( ) ; var_3 . method_3 ( var_1 ) ; var_3 . method_4 ( title ) ; var_3 . method_5 ( var_2 ) ; var_4 . method_6 ( var_3 ) ; }
[0]: public type_1 method_1 ( type_2 list, java.lang.object value, int index, boolean var_1, boolean var_2 ) { if ( value == null ) { settext ( string_1 ) ; } else { type_3 var_3 = ( ( type_3 ) ( value ) ) ; java.lang.string var_4 = var_3. method_2 ( ). tostring ( ) ; settext ( var_4 ) ; } return this ; }

************

************
tgt: public void method_1 ( ) { var_1 = ( ( var_1 ) + 1 ) % ( method_2 ( ) ) ; if ( method_3 ( ) . method_4 ( ) ) { var_2 . method_9 ( true ) ; } else { var_2 . method_9 ( false ) ; var_2 . method_6 ( method_3 ( ) . method_7 ( ) ) ; var_2 . method_8 ( var_1 , true ) ; } var_2 . method_5 ( var_1 ) ; }
[0]: private java.util.properties method_1 ( java.io.file f ) throws java.io.ioexception { if ( f. method_2 ( ) ) return new java.util.properties ( ) ; java.util.properties var_1 = new java.util.properties ( ) ; java.io.fileinputstream var_2 = new java.io.fileinputstream ( f ) ; var_1. method_3 ( var_2 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_2 . gettext ( ) . equals ( getstring ( var_3 ) ) ) { if ( var_4 . method_2 ( var_4 . getname ( ) ) ) { var_2 . settext ( getstring ( var_5 ) ) ; } else { type_1 . method_4 ( getactivity ( ) . method_5 ( ) , string_1 , var_6 ) . show ( ) ; } } else { var_4 . method_6 ( method_3 ( position ) ) ; var_2 . settext ( getstring ( var_3 ) ) ; } }
[0]: public void method_1 ( type_1 message ) throws java.io.ioexception, type_2 { byte [ ] var_1 = message. method_2 ( ) ; byte [ ] var_2 = message. method_3 ( ) ; out.write ( var_2 ) ; out.write ( var_1 ) ; out.write ( var_2 ) ; out.write ( var_1 ) ; }

************

************
tgt: private boolean method_1 ( int var_1 ) { if ( ( var_1 < 0 ) || ( var_1 > int_1 ) ) return false ; if ( ( var_2 ) != ( - 1 ) ) { method_2 ( var_2 , ( ( - 1 ) * ( var_3 ) ) ) ; } var_2 = var_1 ; method_2 ( var_2 , var_3 ) ; return true ; }
[0]: private java.lang.string method_1 ( ) { java.lang.string str ; if ( ( var_1 ) > 0 ) { type_1. method_2 ( ( ( var_1 ) + string_1 ) ) ; str = type_2. format ( string_2, var_1 ) ; } else { type_1. method_2 ( string_3 ) ; str = type_2. format ( string_4 ) ; } method_3 ( ) ; return str ; }

************

************
tgt: protected java.lang.string method_1 ( java.lang.void ... params ) { type_1 var_1 = new type_1 ( ) ; java.lang.string url = ( var_2 ) + string_1 ; type_2 var_3 = method_2 ( ) ; type_1 . method_3 ( var_4 ) ; while ( ! ( var_5 ) ) { } try { if ( var_6 ) { var_3 . put ( string_2 , var_7 ) ; } } catch ( type_3 var_8 ) { var_8 . method_4 ( ) ; } return var_1 . method_5 ( url , var_9 , var_3 ) ; }
[0]: public int method_1 ( type_1 key ) { for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if ( ( var_1. get ( i ). method_2 ( ) ) == key ) return i ; } return - 1 ; }

************

************
tgt: protected void method_1 ( java.lang.string answer , boolean var_1 ) { if ( answer . equals ( var_2 [ var_3 ] ) ) { var_4 += 1 ; method_2 ( ) ; } else { java.lang.string var_5 ; if ( ! var_1 ) { var_5 = string_1 + ( var_2 [ var_3 ] ) ; } else { var_5 = string_2 + ( var_2 [ var_3 ] ) ; } type_1 var_6 = type_1 . method_3 ( method_4 ( ) , var_5 , var_7 ) ; var_6 . show ( ) ; } }
[0]: public static void method_1 ( ) { java.util.random var_1 = new java.util.random ( ) ; int var_2 = ( var_1. method_2 ( int_1 ) ) + 1 ; if ( var_2 == 1 ) { java.lang.system.out.println ( string_1 ) ; type_1. method_3 ( ) ; } else if ( var_2 == int_2 ) { java.lang.system.out.println ( string_2 ) ; type_1. method_4 ( ) ; } else if ( var_2 == int_1 ) { java.lang.system.out.println ( string_3 ) ; type_1. method_5 ( ) ; } type_1. method_6 ( ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { type_1 . method_3 ( method_4 ( ) , var_2 ) ; type_2 var_3 = type_2 . method_5 ( method_4 ( ) , string_1 , var_4 ) ; var_3 . show ( ) ; method_6 ( 0 ) ; method_7 ( ) ; }
[0]: private void method_1 ( type_1 var_1 ) { int var_2 = ( var_1. method_2 ( ) ) ^ int_1 ; var_1. method_3 ( var_2 ) ; var_1. method_4 ( ( ( var_1. method_5 ( ) ) == int_2? int_3 : int_2 ) ) ; type_2. method_6 ( this, ( string_1 + ( var_1. method_7 ( ). tostring ( ) ) ), var_3 ). show ( ) ; }

************

************
tgt: public static type_1 method_1 ( ) { try { java.lang.string filename = type_2 . method_2 ( string_1 , var_1 ) ; java.io.file var_2 = new java.io.file ( filename ) ; return var_4 . method_4 ( new java.io.filereader ( var_2 ) , var_5 class ) ; } catch ( type_3 var_6 ) { return new type_1 ( ) ; } }
[0]: private static int method_1 ( java.lang.string var_1 ) { int var_2 = 0 ; for ( int i = 0 ; i < int_1 ; i ++ ) { var_2 += java.lang.integer.parseint ( ( string_1 + ( var_1. method_2 ( i ) ) ) ) ; } var_2 = var_2 % int_2 ; return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 , java.lang.string var_2 , java.lang.string var_3 ) { type_2 var_4 = var_5 . method_2 ( var_1 , var_2 , var_3 ) ; if ( var_4 != null ) { var_6 . method_3 ( string_1 , var_4 . getid ( ) ) ; var_7 . method_3 ( string_2 , var_4 . getid ( ) ) ; return true ; } else { return false ; } }
[0]: public static java.util.arraylist < type_1 > method_1 ( type_2 var_1, java.util.arraylist < type_1 > list ) { java.util.arraylist < type_1 > var_2 = new java.util.arraylist < > ( ) ; java.lang.string var_3 = new type_3 ( string_1, var_4 ). format ( var_1. gettime ( ) ) ; for ( type_1 a : list ) { if ( a. method_2 ( ). equals ( var_3 ) ) { var_2. add ( a ) ; } } return var_2 ; }

************

************
tgt: public void method_1 ( boolean var_1 ) { if ( method_2 ( ) ) { return ; } var_2 . method_4 ( ) ; var_3 . method_5 ( var_4 ) ; method_5 ( var_4 ) ; if ( var_1 ) { method_6 ( ) ; } else { method_5 ( var_5 ) ; } var_7 = true ; }
[0]: public void method_1 ( ) { if ( var_1. method_2 ( true, false ) ) { type_1 var_2 = this. var_3. method_3 ( method_4 ( ) ) ; var_2. method_5 ( ) ; type_2. info ( string_1 ) ; method_6 ( ). method_7 ( ) ; method_8 ( ). method_7 ( ) ; } }

************

************
tgt: public void method_1 ( android.content.context context , java.lang.string filename ) { method_2 ( ) ; this . var_1 . method_3 ( var_2 , method_4 ( ) . tostring ( ) ) . method_5 ( ) ; java.lang.string var_3 = this . var_1 . getstring ( var_2 , string_1 ) ; if ( type_1 . method_6 ( context , var_3 , ( filename + string_2 ) , string_3 ) ) type_2 . method_7 ( context , string_4 , ( string_5 + filename ) ) ; }
[0]: private type_1 method_1 ( java.util.list <? extends type_2 > var_1 ) { double [ ] var_2 = new double [ var_3 ] ; for ( type_2 data : var_1 ) { for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_2 [ i ] += data. method_2 ( i ) ; } } for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_2 [ i ] /= var_1. size ( ) ; } return new type_1 ( var_2 ) ; } return null ; }

************

************
tgt: public static void method_1 ( type_1 var_1 , java.lang.string text , java.lang.object ... args ) { if ( ( ( ( var_1 != null ) && ( ! ( type_2 . method_2 ( var_1 ) ) ) ) && ( type_3 . method_3 ( ) . method_4 ( var_1 ) . method_5 ( ) ) ) && ( ! ( type_4 . isempty ( text ) ) ) ) type_4 . method_6 ( var_1 , text , args ) ; }
[0]: private void method_1 ( java.util.list < type_1 > var_1 ) { for ( int i = ( var_1. size ( ) ) - 1 ; i >= 0 ; i -- ) { final type_1 var_2 = var_3. get ( i ) ; if (! ( var_1. contains ( var_2 ) ) ) { method_2 ( i ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { this . var_2 = new type_2 ( this . getcontext ( ) , this . var_3 , this . var_4 , ( ( method_2 ( ) ) / ( this . var_4 ) ) , ( ( method_3 ( ) ) / ( this . var_3 ) ) ) ; this . var_2 . method_4 ( var_5 , int_1 , 1 ) ; this . var_6 . method_5 ( true ) ; this . var_6 . start ( ) ; }
[0]: private static float method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_2. method_2 ( ). method_3 ( ). method_4 ( var_1 ) ; float var_3 = ( var_4 ) / float_1 ; float var_5 = ( var_6 ) / float_2 ; if ( var_3 >= var_5 ) return var_3 ; else return var_5 ; }

************

************
tgt: public static java.lang.string method_1 ( java.lang.string var_1 ) { if ( var_1 . startswith ( var_2 ) ) { return var_3 ; } else if ( type_1 . method_2 ( var_1 ) ) { return var_4 ; } else if ( var_1 . startswith ( var_5 ) ) { return var_6 ; } throw new type_2 ( ( string_1 + var_1 ) ) ; }
[0]: private void method_1 ( type_1 var_1, int id, int var_2 ) { type_2 var_3 = new type_2 ( ( ( height ) / int_1 ), ( ( height ) / int_1 ) ) ; var_1. method_2 ( var_3 ) ; var_1. method_3 ( var_4 ) ; var_1. method_4 ( id ) ; var_1. method_5 ( ( ( height ) / int_2 ) ) ; var_1. method_6 ( ( ( height ) / int_2 ) ) ; var_1. method_7 ( var_2 ) ; }

************

************
tgt: protected void method_1 ( final int var_1 ) { this . var_2 = var_1 ; java.lang.string var_2 = get ( var_3 ) ; if ( var_2 != null ) { try { this . var_2 = java.lang.integer.parseint ( var_2 ) ; } catch ( type_1 var_4 ) { type_2 . method_3 ( var_5 , string_1 , new java.lang.object [ ] { var_6 , var_2 , var_1 } ) ; } } }
[0]: public void method_1 ( java.lang.string var_1 ) { if (! ( var_2 ) ) { throw new type_1 ( ( string_1 + string_2 ) ) ; } java.lang.string var_3 = this. var_1 ; this. var_1 = var_1 ; var_4. method_2 ( string_3, var_3, var_1 ) ; }

************

************
tgt: public void method_1 ( ) { java.util.list < type_1 > var_1 = var_2 . method_2 ( ) ; type_2 . assertnotnull ( var_1 ) ; type_2 . assertequals ( string_1 , int_1 , var_1 . size ( ) ) ; type_2 . method_3 ( string_2 , var_1 . get ( 0 ) . method_4 ( ) ) ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { type_3 var_2 = new type_3 ( var_1 ) ; type_1 var_3 = var_2. start ( ) ; type_4 var_4 = new type_4 ( ) ; var_4. method_2 ( var_5. method_3 ( var_1 ) ) ; var_4. method_4 ( var_5. method_3 ( var_3 ) ) ; var_6. method_5 ( var_4 ) ; return var_3 ; }

************

************
tgt: private void method_1 ( ) { java.util.arraylist < java.lang.string > var_1 = new java.util.arraylist < > ( ) ; var_1 . add ( string_1 ) ; var_1 . add ( string_2 ) ; var_1 . add ( string_3 ) ; var_1 . add ( string_4 ) ; var_2 = new type_1 ( method_2 ( ) , var_1 ) ; var_3 . method_3 ( var_2 ) ; var_3 . method_4 ( this ) ; }
[0]: protected void method_1 ( type_1 var_1 ) { super. method_1 ( var_1 ) ; method_2 ( var_2 ) ; type_2 var_3 = method_3 ( var_4, var_5 ) ; var_6 = new type_3 ( var_3 ) ; method_4 ( new type_4 ( ) ) ; var_7 = type_5. get ( this, this, false, false, true, false, true ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( var_2 . add ( ( ( var_3 ) + 1 ) , var_4 . getvalue ( ) , var_5 . getvalue ( ) , var_6 . getvalue ( ) , var_7 . getvalue ( ) ) ) { method_2 ( ) ; } else { type_1 temp = type_1 . method_3 ( c . method_4 ( ) , string_1 , var_8 ) ; temp . show ( ) ; } }
[0]: private java.lang.string method_1 ( type_1 var_1 ) { return ( ( ( ( ( ( string_1 + ( var_1. get ( var_2. method_2 ( ) ) ) ) + string_2 ) + ( var_1. get ( var_2. method_3 ( ) ) ) ) + ( var_1. get ( var_2. method_4 ( ) ) ) ) + string_3 ) + ( var_1. get ( var_2. method_5 ( ) ) ) ) + ""\n"" ; }

************

************
tgt: public synchronized void method_1 ( ) { var_1 = new java.io.file ( var_2 ) ; while ( var_3 ) { var_4 = true ; try { java.lang.thread . method_2 ( ( ( var_5 ) * int_1 ) ) ; } catch ( type_1 var_6 ) { java.lang.thread . method_3 ( ) . method_4 ( ) ; var_4 = false ; } } }
[0]: public static type_1 method_1 ( ) throws java.io.ioexception { if ( ( var_1 ) == null ) { synchronized ( var_2 class ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( type_2. method_2 ( var_3, int_1 ) ) ; } } } return var_1 ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; var_1 = new type_1 ( getcontext ( ) ) ; var_1 . method_2 ( new type_2 ( var_3 , var_3 ) ) ; for ( int i = 0 ; i < ( method_3 ( ) ) ; ++ i ) { android.view.view var_4 = method_4 ( i ) ; method_5 ( var_4 ) ; var_1 . method_6 ( var_4 ) ; } method_6 ( var_1 ) ; }
[0]: void method_1 ( int var_1, int var_2 ) { var_3 = java.util.calendar.getinstance ( ) ; var_3. set ( var_1, ( var_2 - 1 ), 1 ) ; var_3. set ( var_4, var_3. method_2 ( var_4 ) ) ; java.util.date date = var_3. gettime ( ) ; type_1 type_2 = new type_3 ( string_1, var_5 ) ; var_6 = type_2. format ( date ) ; }

************

************
tgt: public void method_1 ( java.lang.string output ) { if ( output . equals ( string_1 ) ) { var_1 . method_2 ( var_2 ) ; var_1 . settext ( string_2 ) ; method_3 ( ) ; } else if ( output . equals ( string_3 ) ) { var_1 . method_2 ( var_3 ) ; var_1 . settext ( string_4 ) ; } }
[0]: static type_1 method_1 ( type_2 var_1, final type_3 var_2, int var_3, boolean var_4, java.util.list < type_4 > var_5, java.util.list < type_5 > var_6, java.util.map < type_6, java.lang.integer > var_7 ) { return new type_1 ( var_1, var_2, var_3, var_4, var_5, var_6, var_7 ) ; }

************

************
tgt: void method_1 ( java.lang.string path ) { if ( ( var_1 ) == null ) var_1 = method_2 ( var_2 . get ( ) ) ; try { var_1 . method_3 ( var_2 . get ( ) , type_1 . method_4 ( path ) ) ; method_5 ( ) ; } catch ( java.io.ioexception var_3 ) { type_2 . method_6 ( var_4 , var_3 ) ; var_3 . method_7 ( ) ; } }
[0]: private void method_1 ( ) { for ( int var_1 = 1 ; var_1 <= ( length ) ; ++ var_1 ) { for ( int var_2 = 1 ; var_2 <= ( length ) ; ++ var_2 ) { type_1 < java.lang.integer, java.lang.integer > var_3 = type_1. method_2 ( var_1, var_2 ) ; type_2 var_4 = new type_2 ( this, var_3 ) ; add ( var_4 ) ; var_5. add ( var_4 ) ; } } }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { if ( ! ( var_2 ) ) return ; type_1 b = new type_1 ( ) ; java.lang.string filepath = ( ( var_3 ) + ( var_4 ) ) + ( var_5 ) ; b . method_2 ( string_2 , filepath ) ; type_2 msg = type_2 . method_3 ( null , 1 ) ; msg . method_4 ( b ) ; try { var_6 . method_5 ( msg ) ; } catch ( type_3 var_7 ) { var_7 . method_6 ( ) ; } }
[0]: public void method_1 ( final java.lang.string var_1 ) { new type_1 ( var_2. method_2 ( ) ). method_3 ( ( ( ( var_1 + string_1 ) + ( int_1 * ( var_3 ) ) ) + string_2 ) ) ; new type_2 ( var_2. method_2 ( ). method_4 ( ) ). method_5 ( ( ( ( var_1 + string_3 ) + ( int_1 * ( var_3 ) ) ) + string_2 ) ) ; type_3. info ( string_4 ) ; }

************

************
tgt: public void set ( java.lang.string path , java.lang.object value , java.lang.string var_1 ) { if ( ! ( this . var_2 . contains ( path ) ) ) { this . var_2 . set ( ( ( ( var_3 . method_1 ( ) ) + string_1 ) + ( var_4 ) ) , var_1 ) ; ( var_4 ) ++ ; } this . var_2 . set ( path , value ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_1 ( var_2, ( ( ( var_3 ) - ( ( var_4 ) / float_1 ) ) - int_1 ), ( ( ( var_5 ) - ( ( height ) / float_1 ) ) + int_2 ), ( ( var_4 ) / float_1 ), ( ( height ) / float_1 ), var_4, height, ( int_3 / int_4 ), 1, var_6, true ) ; }

************

************
tgt: public type_1 method_1 ( int id , java.lang.string var_1 , java.lang.string var_2 , java.lang.string var_3 ) { try { type_1 c = new type_1 ( id , var_1 , var_2 , var_3 ) ; var_4 . method_2 ( c ) ; return c ; } catch ( java.lang.exception var_5 ) { return null ; } }
[0]: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = var_3. method_2 ( ) ; java.util.arraylist < java.lang.integer > var_4 = new java.util.arraylist < java.lang.integer > ( ) ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { var_4. add ( i ) ; } this. method_3 ( var_4 ) ; }

************

************
tgt: public type_1 method_1 ( ) { type_1 tmp = new type_1 ( method_2 ( ) , getname ( ) ) ; tmp . method_4 ( method_5 ( ) ) ; tmp . method_6 ( method_7 ( ) ) ; tmp . method_8 ( method_9 ( ) ) ; tmp . method_10 ( method_11 ( ) ) ; tmp . method_12 ( method_13 ( ) ) ; tmp . method_14 ( method_15 ( ) ) ; tmp . method_16 ( method_17 ( ) ) ; tmp . method_18 ( method_19 ( ) ) ; return tmp ; }
[0]: public void method_1 ( ) throws java.lang.exception { list. add ( int_1 ) ; list. add ( int_2 ) ; list. add ( int_3 ) ; list. add ( int_4, 1 ) ; assertequals ( new java.lang.integer ( int_3 ), list. get ( int_5 ) ) ; }

************

************
tgt: private boolean method_1 ( int var_1 ) { int i = var_1 ; while ( i >= 0 ) { if ( ( i % ( var_2 ) ) == 0 ) break ; i -- ; } int start = i ; for ( ; i < ( start + ( var_2 ) ) ; i ++ ) { if ( ( var_3 [ i ] ) != null ) { return false ; } } return true ; }
[0]: public type_1 append ( java.io.inputstream var_1 ) throws type_2 { try { byte [ ] buffer = new byte [ int_1 * int_2 ] ; int var_2 ; while ( ( var_2 = var_1. method_1 ( buffer ) )!= ( var_3 ) ) { out.write ( buffer, 0, var_2 ) ; } } catch ( java.io.ioexception var_4 ) { throw new type_2 ( var_4 ) ; } return this ; } }

************

************
tgt: public void method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . get ( ( ( var_3 . size ( ) ) - 1 ) ) ; type_3 var_4 = gettype ( var_1 . target ( ) ) ; method_2 ( var_1 . expr ( ) , var_4 ) ; var_2 . method_3 ( var_1 . gettext ( ) ) ; }
[0]: protected java.lang.string method_1 ( type_1 node ) { type_1 var_1 = node. path ( method_2 ( var_2 ) ) ; if ( method_3 ( var_1 ) ) { return var_1. method_4 ( ) ; } else { type_1 var_3 = node. path ( method_2 ( var_4 ) ) ; if ( method_3 ( var_3 ) ) { return var_3. method_4 ( ) ; } } return null ; } }

************

************
tgt: public void method_1 ( type_1 var_1 , boolean var_2 ) { java.lang.string var_3 = method_2 ( method_3 ( ) ) ; super . method_1 ( var_1 ) ; java.lang.string var_5 = method_2 ( var_1 ) ; java.lang.string var_6 = method_4 ( method_5 ( ) , var_1 ) ; if ( var_2 ) var_7 . execute ( new type_2 ( method_6 ( ) , method_3 ( ) , var_1 , var_6 , var_3 , var_5 ) ) ; }
[0]: public void method_1 ( android.view.view view ) { var_1 += method_2 ( ) ; var_1 += method_3 ( ) ; var_1 += method_4 ( ) ; var_1 += method_5 ( ) ; var_1 += method_6 ( ) ; var_1 += method_7 ( ) ; var_1 += method_8 ( ) ; var_1 += method_9 ( ) ; var_1 += method_10 ( ) ; var_1 += method_11 ( ) ; android.content.intent var_2 = new android.content.intent ( this, var_3 class ) ; var_2. method_12 ( string_1, var_1 ) ; method_13 ( var_2 ) ; }

************

************
tgt: public void method_1 ( ) { super . method_1 ( ) ; var_1 = var_2 . method_2 ( ) . method_3 ( ) ; var_3 = var_1 . method_4 ( ) ; var_4 = var_1 . getvalue ( ) ; method_5 ( ) ; var_1 . setvalue ( type_1 . get ( string_1 ) ) ; var_1 . method_6 ( var_5 ) ; var_5 . method_7 ( ) ; }
[0]: void method_1 ( type_1 result, type_2 var_1, boolean var_2 ) { if ( result!= null ) { type_3 var_3 = var_4. remove ( result ) ; if ( var_1. method_2 ( ) ) { if ( ( ( var_3!= null ) && ( result. method_3 ( ) ) ) && (! var_2 ) ) { var_5. method_4 ( var_3 ) ; method_5 ( ). method_6 ( ). method_7 ( method_5 ( ), method_8 ( ) ) ; } } var_6. method_9 ( ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 , type_2 var_2 ) throws type_3 { var_3 = var_2 . getstring ( string_1 ) ; var_4 = var_2 . getstring ( string_2 ) ; var_5 = var_2 . getstring ( string_3 ) ; var_6 = java.lang.integer.parseint ( var_2 . getstring ( string_4 ) ) ; var_1 . method_3 ( this , var_2 ) ; method_4 ( ) ; return super . method_1 ( var_1 , var_2 ) ; }
[0]: private static java.lang.string method_1 ( java.lang.string var_1 ) { java.lang.stringbuilder var_2 = new java.lang.stringbuilder ( ) ; for ( char c : var_1. method_2 ( ) ) { if ( ( string_1. method_3 ( c ) ) >= 0 ) { var_2. append ( c ) ; } } return var_2. tostring ( ) ; }

************

************
tgt: protected void method_1 ( java.lang.object result ) { var_1 = false ; if ( ( listener ) != null ) { listener . method_2 ( name ) ; } if ( ( ( var_2 ) != null ) && ( var_3 ) ) { var_3 = false ; var_2 . method_3 ( var_4 , var_5 ) ; } }
[0]: public void method_1 ( int var_1 ) { if (! ( var_2 ) ) { return ; } if ( ( var_1 >= 1 ) && ( var_1 <= int_1 ) ) { if ( ( var_3 [ ( var_1 - 1 ) ] ) <= ( var_4 ) ) { return ; } ( var_3 [ ( var_1 - 1 ) ] ) ++ ; } }

************

************
tgt: public void method_1 ( android.content.context context ) { super . method_1 ( context ) ; try { var_1 = ( ( type_1 ) ( getactivity ( ) ) ) ; } catch ( java.lang.exception var_2 ) { type_2 . method_3 ( getcontext ( ) , string_1 ) ; } }
[0]: public boolean method_1 ( boolean var_1 ) { if ( (! ( method_2 ( ) ) ) || ( var_1 && ( method_3 ( ) ) ) ) { return false ; } var_2. method_4 ( string_1, var_3. method_5 ( ) ) ; type_1 var_4 = method_6 ( var_5. method_7 ( ), var_5. method_8 ( ) ) ; java.util.list < java.lang.string > var_6 = type_2. method_9 ( var_4 ). method_10 ( ) ; return ( var_6. size ( ) ) == int_1 ; }

************

************
tgt: public void method_1 ( type_1 param ) { if ( this . errors . contains ( param ) ) { this . errors . remove ( param ) ; this . var_2 . method_2 ( new type_2 ( this , var_3 , null ) ) ; } if ( this . var_1 . contains ( param ) ) { this . var_1 . remove ( param ) ; this . var_2 . method_2 ( new type_2 ( this , var_3 , null ) ) ; } }
[0]: private static void method_1 ( int var_1 ) throws java.lang.exception { byte [ ] var_2 = new byte [ int_1 ] ; java.util.scanner var_3 = new java.util.scanner ( var_4 ) ; while ( var_3. method_2 ( ) ) { var_2 = var_3. method_3 ( ). method_4 ( ) ; } var_5. method_5 ( new type_1 ( var_2, var_2. length, var_6, var_1 ) ) ; }

************

************
tgt: public void method_1 ( int var_1 , type_1 response , java.lang.string message ) { if ( var_1 == ( var_2 ) ) { if ( ( response != null ) && ( ( response . method_2 ( ) ) == int_1 ) ) { var_3 . info ( ) ; var_4 . method_3 ( getstring ( var_5 ) ) ; } else { var_4 . method_3 ( message ) ; } } else if ( var_1 == ( var_6 ) ) { var_4 . method_3 ( message ) ; } }
[0]: public boolean equals ( java.lang.object var_1 ) { return ( var_2. equals ( ( ( type_1 ) ( var_1. method_1 ( ) ) ) ) ) && ( value. equals ( ( ( type_1 ) ( var_1. getvalue ( ) ) ) ) ) ; }

************

************
tgt: public void handle ( type_1 event ) { try { type_2 var_1 = method_1 ( ) ; if ( var_1 == null ) return ; for ( int i = 1 ; i <= ( var_1 . method_2 ( ) ) ; i ++ ) { method_3 ( i ) ; } method_4 ( ) ; } catch ( type_3 var_2 ) { type_4 . error ( string_1 , var_2 ) ; } }
[0]: public void method_1 ( java.lang.object obj, type_1 var_1 ) { boolean var_2 = true ; type_2 var_3 = ( ( type_2 ) ( obj ) ) ; java.util.list < type_3 > var_4 = var_3. method_2 ( ) ; if ( var_4!= null ) { for ( type_3 var_5 : var_4 ) { java.lang.string var_6 = var_5. getid ( ) ; if ( var_6!= null ) { var_2 = false ; } } var_1. method_3 ( string_1 ) ; } } }

************

************
tgt: public type_1 method_1 ( java.util.collection < java.lang.string > var_1 ) { if ( ( var_1 == null ) || ( ( var_1 . size ( ) ) == 0 ) ) { this . var_2 = type_2 . method_2 ( ) ; } else { this . var_2 = method_3 ( ( ( java.lang.string [ ] ) ( var_1 . method_4 ( ) ) ) ) ; } return this ; }
[0]: protected void method_1 ( ) { method_2 ( ) ; var_1 = ( ( type_1 ) ( method_3 ( var_2 ) ) ) ; var_3 = method_4 ( ). method_5 ( var_4 ) ; var_5 = ( ( type_2 ) ( method_3 ( var_6 ) ) ) ; var_1. method_6 ( var_7, var_8 ) ; var_9 = new type_3 ( method_7 ( ), var_3 ) ; var_5. method_8 ( var_9 ) ; var_1. method_6 ( var_7, var_8 ) ; }

************

************
tgt: public java.util.set < type_1 > method_1 ( ) throws type_2 { try { return type_3 . method_2 ( var_1 . get ( var_2 , this : : method_3 ) ) ; } catch ( type_4 | type_5 var_3 ) { throw new type_2 ( this . getclass ( ) , var_3 . method_4 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1 = new type_1 ( var_2 ) ; var_1. method_2 ( var_3 ) ; var_1. method_3 ( true ) ; var_1. method_4 ( 0 ) ; var_2. method_5 ( var_1 ) ; var_2. method_6 ( var_1 ) ; var_2. method_7 ( true ) ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . id = var_2 ; var_1 . name = string_1 ; type_1 var_3 = method_2 ( var_1 ) ; assertequals ( var_1 . id , var_3 . id ) ; assertequals ( var_1 . name , var_3 . name ) ; }
[0]: public void method_1 ( android.view.view view ) { if (! ( var_1. method_2 ( ) ) ) { method_3 ( var_2 ) ; var_1. start ( ) ; var_3. method_4 ( var_4 ) ; } else { var_1. method_5 ( ) ; var_3. method_4 ( var_5 ) ; } }

************

************
tgt: public java.lang.string method_1 ( java.lang.string var_1 ) throws type_1 , type_2 , type_3 , type_4 { var_1 = var_1 . replaceall ( string_11 , string_2 ) ; var_1 = var_1 . replaceall ( string_1 , string_2 ) ; var_1 = var_1 . replaceall ( string_3 , string_4 ) ; var_1 = var_1 . replaceall ( string_5 , string_6 ) ; var_1 = var_1 . replaceall ( string_7 , string_8 ) ; var_1 = var_1 . replaceall ( string_9 , string_10 ) ; return new java.lang.string ( type_5 . method_2 ( var_2 , var_3 , var_1 ) ) ; }
[0]: private boolean method_1 ( ) { long var_1 = ( type_1. method_2 ( ) ) - ( ( var_2 ) * ( var_3. getint ( string_1 ) ) ) ; return ( ( var_3. contains ( string_2 ) ) && ( var_1 > ( var_4 ) ) ) && ( ( var_5. method_3 ( ) ) > 0 ) ; }

************

************
tgt: public boolean method_1 ( int var_1 ) { type_1 var_2 = method_2 ( ) ; if ( ( ( var_2 != null ) && ( var_1 >= 0 ) ) && ( var_1 <= ( var_2 . method_3 ( ) . size ( ) ) ) ) { var_3 = var_1 ; return true ; } else { var_3 = - 1 ; return false ; } }
[0]: public void method_1 ( java.util.list < java.lang.string > var_1 ) { if ( type_1. isempty ( var_1 ) ) return ; java.lang.stringbuffer text = new java.lang.stringbuffer ( ) ; java.util.iterator < java.lang.string > i = var_1. iterator ( ) ; while ( i. method_2 ( ) ) { text. append ( i. method_3 ( ) ) ; text. append ( var_2 ) ; } var_3. settext ( text. tostring ( ) ) ; }

************

************
tgt: public void method_1 ( type_1 msg ) { switch ( var_1 ) { case var_2 : new type_2 ( ) . method_2 ( ( ( java.lang.string ) ( msg . obj ) ) ) ; break ; case var_3 : new type_2 ( ) . method_2 ( string_2 ) ; break ; case var_4 : new type_2 ( ) . method_2 ( ( ( java.lang.string ) ( msg . obj ) ) ) ; break ; default : break ; } }
[0]: private static double method_1 ( int var_1, type_1 var_2 ) { type_2 var_3 = var_2. method_2 ( ) ; int [ ] var_4 = var_3. method_3 ( ) ; double [ ] var_5 = var_3. method_4 ( ) ; for ( int i = 0 ; i < ( var_4. length ) ; i ++ ) { if ( ( var_4 [ i ] ) == var_1 ) { return var_5 [ i ] ; } } return 0 ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { int n = var_2 . size ( ) ; while ( n > 0 ) { type_1 var_3 = var_2 . method_2 ( ) ; if ( var_3 . getid ( ) . equals ( var_1 ) ) { var_2 . remove ( var_3 ) ; } else if ( var_3 . method_3 ( ) ) { var_2 . remove ( var_3 ) ; var_4 . method_4 ( var_3 ) ; } n -- ; } }
[0]: public java.lang.string [ ] method_1 ( ) { return new java.lang.string [ ] { string_1, string_2, string_3, string_4, string_5, string_6, string_7, string_8, string_9, string_10, string_11, string_12, string_13, string_14, string_15, string_16, string_17 } ; }

************

************
tgt: protected void method_1 ( ) { if ( var_1 ) { method_3 ( ( ( ( ( ( var_3 ) | ( var_4 ) ) | ( var_5 ) ) | ( var_6 ) ) | ( var_7 ) ) ) ; } else { method_3 ( ( ( ( ( var_3 ) | ( var_4 ) ) | ( var_5 ) ) | ( var_6 ) ) ) ; } }
[0]: public void method_1 ( android.view.view view, type_1 var_1 ) { super. method_1 ( view, var_1 ) ; var_2 = new type_2 ( getactivity ( ), var_3. method_2 ( ), this ) ; var_4. method_3 ( true ) ; var_4. method_4 ( var_2 ) ; var_4. method_5 ( new type_3 ( getactivity ( ) ) ) ; type_4 var_5 = new type_5 ( var_2 ) ; var_6 = new type_6 ( var_5 ) ; var_6. method_6 ( var_4 ) ; }

************

************
tgt: public java.util.linkedlist < type_1 > method_1 ( type_2 var_1 , type_3 var_2 , type_4 var_3 , boolean var_4 ) throws java.io.ioexception , java.lang.classnotfoundexception , type_5 , type_6 , type_7 , type_8 , type_9 { if ( ( var_6 ) == null ) { method_4 ( var_1 , var_4 , true ) ; } return var_6 ; }
[0]: public java.util.arraylist < type_1 > method_1 ( java.io.inputstream var_1 ) throws java.io.ioexception { type_2 var_2 = new type_2 ( var_1 ) ; java.io.bufferedreader var_3 = new java.io.bufferedreader ( new type_3 ( var_2 ) ) ; try { java.lang.string line ; while ( ( line = var_3. method_2 ( ) )!= null ) { var_4. add ( type_1. method_3 ( line ) ) ; } } catch ( java.lang.exception var_5 ) { java.lang.system.out.println ( var_5. method_4 ( ) ) ; } return var_4 ; } }

************

************
tgt: public java.util.vector method_1 ( ) { java.util.vector var_1 = new java.util.vector ( 0 , 0 ) ; int i = var_2 . size ( ) ; for ( java.util.vector var_3 : var_2 ) { var_1 = var_1 . add ( var_3 . method_2 ( i ) ) ; -- i ; } return var_1 . method_3 ( var_2 . size ( ) ) ; }
[0]: public void method_1 ( type_1 event ) { var_1 = false ; type_2. i ( var_2, string_1 ) ; if ( ( var_3 )!= null ) { var_4 = var_3 ; method_2 ( ) ; var_5 = event. time ; var_6 = event. index ; var_7 = var_8 ; var_9 = var_4. get ( var_6 ). method_3 ( ) ; method_4 ( false ) ; var_10 = false ; } else { var_10 = true ; method_4 ( true ) ; } }

************

************
tgt: private void method_1 ( ) { method_2 ( ) ; for ( type_1 var_1 : var_2 ) var_3 . method_3 ( new type_2 ( var_4 , var_5 , var_6 , var_1 ) . step ( var_1 ) , true ) ; var_3 . method_4 ( this ) ; var_3 = null ; }
[0]: public static void main ( java.lang.string [ ] args ) { java.lang.string var_1 = string_1 ; type_1 var_3 = new type_1 ( type_2. method_1 ( new type_3 ( 1 ), var_1. length ( ), int_1 ), int_2, float_1, float_2, float_1, float_3, var_1 ) ; var_3. method_2 ( true ) ; var_3. method_3 ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { return ( ( ( ( ( ( ( getname ( ) ) + string_1 ) + ( method_2 ( ) ) ) + string_2 ) + ( method_3 ( ) ) ) + string_1 ) + ( java.lang.math.round ( method_4 ( ) ) ) ) + char_1 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, boolean var_2 ) { type_1 data = new type_1 ( ) ; var_3 = var_4 ; var_5 = method_2 ( ) ; data. method_3 ( var_6, var_7 ) ; data. method_4 ( var_8 ) ; var_9 = var_6. method_5 ( ) ; var_10 = var_11 ; var_12 = var_13 ; var_14 = var_15 ; if ( var_2 ) return data. tostring ( var_1 ) ; else return data. method_6 ( var_1 ) ; }

************

************
tgt: public void open ( ) { open = true ; for ( type_1 var_1 : var_2 ) { var_1 . method_1 ( true ) ; } for ( type_1 var_3 : var_4 ) { var_3 . method_1 ( false ) ; } for ( type_1 text : var_5 ) { text . method_1 ( true ) ; } type_2 . method_2 ( ) ; }
[0]: public java.util.map < java.lang.integer, java.lang.long > method_1 ( java.util.list < type_1 > var_1 ) { java.util.map < java.lang.integer, java.lang.long > var_2 = var_1. method_2 ( ). method_3 ( type_2. method_4 ( type_3 : : method_5, type_2. method_6 ( ) ) ) ; var_1. method_2 ( ). method_3 ( type_2. method_4 ( type_3 : : method_5 ) ) ; return var_2 ; }

************

************
tgt: public java.lang.object remove ( int index ) { method_1 ( index ) ; java.lang.object temp = var_1 [ index ] ; type_1 . method_2 ( var_1 , ( index + 1 ) , var_1 , index , ( ( ( size ) - index ) - 1 ) ) ; var_1 [ ( ( size ) - 1 ) ] = null ; ( size ) -- ; return temp ; }
[0]: public void method_1 ( java.lang.string title ) { var_1 = new type_1 ( this ) ; java.util.arraylist < type_2 > var_2 = var_1. method_2 ( title ) ; java.lang.string size = java.lang.string. method_3 ( var_2. size ( ) ) ; type_3. method_4 ( this, var_2. get ( 0 ). getname ( ), var_3 ). show ( ) ; }

************

************
tgt: private void method_1 ( long var_1 ) { this . var_1 = var_1 ; if ( ( this . var_1 ) > 0 ) { method_2 ( this . var_2 . method_3 ( ) . method_4 ( ) ) ; } else { method_2 ( this . var_2 . method_3 ( ) . method_4 ( ) ) ; } }
[0]: public void method_1 ( ) { var_1. method_2 ( 0 ). method_3 ( var_2 ) ; var_1. method_2 ( 1 ). method_3 ( var_3 ) ; var_1. method_2 ( int_1 ). method_3 ( var_4 ) ; var_1. method_2 ( int_2 ). method_3 ( var_5 ) ; var_1. method_2 ( int_2 ). method_3 ( var_3 ) ; }

************

************
tgt: private void method_1 ( android.content.context context , java.lang.string title , java.lang.string message , java.lang.string var_1 , android.content.intent intent , java.lang.string var_2 ) { var_3 = new type_1 ( context ) ; intent . method_2 ( ( ( var_4 ) | ( var_5 ) ) ) ; var_3 . method_3 ( title , message , var_1 , intent , var_2 ) ; }
[0]: public void method_1 ( java.net.url var_1, type_1 var_2 ) { var_3. method_2 ( var_4 ) ; var_5. method_2 ( var_6 ) ; var_7. method_2 ( var_8 ) ; var_9. setvalue ( var_10 ) ; var_11. setvalue ( var_12 ) ; if ( var_13 ) { var_3. method_2 ( true ) ; var_3. method_3 ( true ) ; } method_4 ( ) ; java.lang.system.out.println ( string_1 ) ; }

************

************
tgt: public java.util.arraylist < java.lang.boolean > method_1 ( ) { java.util.arraylist < java.lang.boolean > var_1 = new java.util.arraylist < java.lang.boolean > ( length ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { var_1 . add ( i , get ( i ) ) ; } return var_1 ; }
[0]: protected java.util.arraylist < type_1 > method_1 ( ) { java.util.arraylist < type_1 > var_1 = new java.util.arraylist < type_1 > ( ) ; type_1 var_2 = method_2 ( ) ; while ( var_2!= null ) { var_1. add ( var_2 ) ; var_2 = method_2 ( ) ; } method_3 ( var_3 ) ; return var_1 ; }

************

************
tgt: protected void method_1 ( android.content.intent intent ) { if ( type_1 . method_2 ( intent ) ) { type_1 result = type_1 . method_3 ( intent ) ; type_2 type_3 = result . method_4 ( ) ; if ( ( type_3 . method_5 ( ) ) >= int_1 ) { var_1 = type_3 . tostring ( ) ; var_2 = type_3 . method_5 ( ) ; } else var_1 = string_1 ; } }
[0]: private void method_1 ( android.view.view var_1, final android.view.view var_2, final boolean var_3 ) { type_1 var_4 = ( var_3 )? type_2. method_2 ( var_5. context ). method_3 ( var_1, false ) : type_2. method_2 ( var_5. context ). method_4 ( var_1, false ) ; var_4. start ( ) ; var_2. method_5 ( ( var_3? var_6 : var_7 ) ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { try { super . method_1 ( var_1 ) ; } catch ( java.lang.nullpointerexception var_2 ) { boolean var_3 = method_2 ( ) ; try { method_3 ( false ) ; super . method_1 ( var_1 ) ; } finally { method_3 ( var_3 ) ; } } }
[0]: private void method_1 ( char [ ] var_1 ) { if ( ( var_2 ) > 0 ) { final java.lang.string token = java.lang.string. method_2 ( var_1, 0, var_3. length ( ) ) ; var_4. put ( token, new java.lang.integer [ ] { var_5, var_6, token. length ( ), 1 } ) ; } else { var_4. put ( token, new java.lang.integer [ ] { var_5, var_6, token. length ( ), 1 } ) ; } }

************

************
tgt: public boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 , type_1 data ) { type_2 p = new type_2 ( var_1 ) ; var_3 = p . method_2 ( char_1 ) ; java.lang.string source = p . get ( ) ; if ( ! ( super . method_1 ( var_2 , data ) ) ) return false ; var_4 = var_5 ; var_5 = source ; return true ; }
[0]: public type_1 method_1 ( ) { type_1 result = super. method_1 ( ) ; if ( (! ( var_1 ) ) || (! ( type_2. method_2 ( getcontext ( ) ) ) ) ) { return result ; } type_3 var_2 = new type_3 ( var_3 ) ; var_2. method_3 ( new java.lang.object [ ] { var_4, var_5, string_1, 0 } ) ; return new type_4 ( new type_1 [ ] { var_2, result } ) ; } return null ; }

************

************
tgt: public java.util.list < type_1 > method_1 ( java.lang.string var_1 ) { try { java.lang.string str = string_1 ; type_2 query = var_2 . method_2 ( str ) ; query . method_3 ( string_2 , var_1 ) ; return query . method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_3 . method_5 ( ) ; var_2 . method_6 ( ) ; return null ; } finally { var_2 . method_6 ( ) ; } }
[0]: public void method_1 ( type_1 var_1 ) { java.lang.object src = var_1. method_2 ( ) ; if ( src == ( var_2 ) ) var_3 = new type_2 ( string_1 ) ; else if ( src == ( var_4 ) ) c. method_3 ( string_2 ) ; }

************

************
tgt: private boolean method_1 ( ) { type_1 var_1 = this . method_2 ( ) . method_3 ( ) . method_4 ( string_1 ) ; if ( ( var_2 ) == null ) { if ( var_1 != null ) { var_2 = ( ( type_2 ) ( var_1 ) ) ; java.lang.system.out.println ( string_2 ) ; return true ; } } return false ; }
[0]: public type_1 method_1 ( java.lang.string type, java.lang.integer id ) throws type_2 { type_3 info = null ; if ( id!= null ) { if ( string_1. equals ( type ) ) { type_4 var_1 = var_2. method_2 ( id ) ; info = new type_3 ( var_1 ) ; } else if ( string_2. equals ( type ) ) { info = method_3 ( id ) ; } } return var_3. method_4 ( var_4 ). method_5 ( info ). build ( ) ; }

************

************
tgt: public java.lang.string method_1 ( ) { type_1 var_1 = ( ( type_1 ) ( var_2 . method_2 ( ) ) ) ; var_1 . method_3 ( var_3 [ var_1 . method_4 ( ) ] ) ; java.lang.string var_5 = ( ( string_1 + var_1 ) + string_2 ) + ( var_1 . method_5 ( ) ) ; return var_5 ; }
[0]: public void method_1 ( type_1 var_1 ) { int var_2 = var_3. method_2 ( int_1, int_2 ) ; if ( ( this. method_3 ( ) ) == true ) { this. method_4 ( ) ; if ( ( this. method_4 ( ) ) == true ) { this. method_5 ( ( var_2 * int_3 ) ) ; } else var_2 = var_2 / int_3 ; } super. method_1 ( var_1 ) ; var_1. method_5 ( var_2 ) ; } }

************

************
tgt: private type_1 < type_2 > method_1 ( type_2 key , type_1 < type_2 > node ) { if ( node == null ) { return null ; } int var_1 = key . compareto ( node . key ) ; if ( var_1 == 0 ) { return node ; } else if ( var_1 > 0 ) { return method_1 ( key , var_2 ) ; } else { return method_1 ( key , var_3 ) ; } }
[0]: private static type_1 method_1 ( final type_2 id, final boolean var_1 ) { final type_1 var_2 = id. method_2 ( ) ; if ( ( var_2!= null ) && var_1 ) { try { var_2. method_3 ( ) ; } catch ( type_3 var_3 ) { } } return var_2 ; }

************

************
tgt: public boolean method_1 ( type_1 event ) { var_1 = ( ( int ) ( event . method_2 ( ) ) ) ; var_2 = ( ( int ) ( event . method_3 ( ) ) ) ; method_4 ( ) ; return super . method_1 ( event ) ; }
[0]: public void method_1 ( ) throws type_1, java.io.ioexception, type_2, type_3, type_4 { type_5 var_1 = new type_5 ( ) ; type_6 response = new type_6 ( ) ; response. method_2 ( string_1, string_2 ) ; response. method_3 ( int_1 ) ; var_1. method_4 ( response ) ; var_1. start ( ) ; type_7 var_2 = new type_7 ( var_1. method_5 ( string_3 ) ) ; var_2. method_6 ( string_4 ) ; var_2. method_7 ( string_4, null ) ; throw new type_8 ( string_5 ) ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { final java.util.collection < type_2 > var_2 = var_1 . method_2 ( ) ; if ( var_2 == null ) { return ; } for ( type_2 var_3 : var_2 ) { final int var_4 = method_3 ( ) ; var_3 . method_4 ( var_4 ) ; } }
[0]: private type_1 < type_2 > method_1 ( type_1 < type_3 > var_1 ) { type_1 < java.lang.integer > var_2 = new type_4 < java.lang.integer > ( ) ; for ( type_3 var_3 : var_1 ) { if (! ( var_4. contains ( var_3. y ) ) ) { var_4. add ( var_3. y ) ; } } return var_2 ; }

************

************
tgt: public static type_1 method_1 ( boolean var_1 , java.lang.object message , java.lang.string var_2 , java.lang.string var_3 , long var_4 ) { type_2 response = new type_2 ( true , message ) ; type_3 var_5 = type_4 . method_2 ( response ) . method_3 ( ) ; var_5 . method_4 ( string_1 , var_3 ) ; var_5 . method_4 ( string_2 , var_4 ) ; type_1 var_6 = new type_1 ( string_3 ) ; var_6 . method_5 ( string_4 , var_2 ) ; var_6 . method_5 ( string_5 , type_4 . method_6 ( var_5 ) ) ; return var_6 ; }
[0]: public boolean method_1 ( int position, long id ) { if ( type_1. method_2 ( this, var_1 class ) ) { var_2 = new type_2 ( this ). method_3 ( string_1 ). method_4 ( string_2 ). method_5 ( string_3, null ). show ( ) ; method_6 ( ). method_7 ( var_3 ) ; } else { type_1. method_8 ( var_4 [ position ] ) ; var_3 = position ; } return true ; }

************

************
tgt: public void method_1 ( java.lang.object element ) { int var_1 = size ( ) ; if ( var_1 == ( ( n ) - 1 ) ) method_2 ( ) ; var_2 [ ( ( var_3 ) ++ ) ] = ( ( type_1 ) ( element ) ) ; if ( ( var_3 ) == ( n ) ) var_3 = 0 ; }
[0]: public java.lang.void method_1 ( ) throws java.lang.exception { var_1. method_2 ( java.lang.string.format ( string_1, var_2, format ) ) ; java.util.list < java.lang.long > var_3 = this. method_3 ( var_2 ) ; var_1. method_2 ( java.lang.string.format ( string_1, var_4, format ) ) ; java.util.list < java.lang.long > var_5 = this. method_3 ( var_4 ) ; method_4 ( var_6. method_5 ( ). method_6 ( ), var_7, var_3, var_5. get ( 0 ) ) ; return null ; }

************

************
tgt: public java.lang.string method_1 ( ) { if ( var_1 . method_2 ( var_2 ) ) { return string_1 ; } if ( var_1 . method_4 ( ) ) { if ( var_4 . method_5 ( ) ) { return string_2 ; } return string_3 ; } return string_4 ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, type_1 var_3 ) throws java.io.ioexception, type_2, type_3 { method_2 ( var_1, var_3 ) ; boolean var_4 = false ; var_5. method_3 ( var_1, var_2, var_4, var_3 ) ; return string_2 ; }

************

************
tgt: private void method_1 ( type_2 var_3 ) { type_1 var_1 = new type_1 ( ) ; this . var_2 . method_2 ( var_1 , null ) ; type_3 var_4 = new type_3 ( var_3 ) ; this . var_2 . method_2 ( var_4 , null ) ; type_4 var_5 = new type_4 ( this ) ; this . var_2 . method_2 ( var_5 , null ) ; }
[0]: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_1 ( string_1 ) ; type_2. asserttrue ( ( ( var_1. method_2 ( ) ) == 1 ) ) ; var_1 = new type_1 ( string_1 ) ; type_2. asserttrue ( ( ( var_1. method_2 ( ) ) == int_1 ) ) ; var_1 = new type_1 ( string_1 ) ; type_2. asserttrue ( ( ( var_1. method_2 ( ) ) == int_2 ) ) ; }

************

************
tgt: public static type_1 method_1 ( ) { if ( ( var_1 ) == null ) { try { var_1 = type_1 . method_2 ( new java.io.file ( string_2 ) ) ; } catch ( type_2 var_2 ) { var_2 . method_3 ( ) ; } } return var_1 ; }
[0]: public void method_1 ( java.util.set < type_1 > var_1 ) throws type_2 { synchronized ( this ) { for ( type_1 var_2 : var_1 ) { var_3. method_2 ( ( string_1 + ( var_2. tostring ( ) ) ) ) ; var_2. method_3 ( this ) ; type_3 < java.lang.void > var_4 = var_5. method_4 ( var_2 ) ; var_6 = var_4 ; var_7. method_5 ( var_2. getclass ( ). tostring ( ) ) ; var_7. method_6 ( ) ; } } } }

************

************
tgt: void method_1 ( int var_1 , int var_2 ) { var_3 . setenabled ( ( var_1 != ( - 1 ) ) ) ; var_4 . setenabled ( ( ( var_1 != ( - 1 ) ) && ( var_5 . method_2 ( var_1 ) . method_3 ( ) ) ) ) ; var_6 . setenabled ( ( var_1 != ( - 1 ) ) ) ; }
[0]: public byte [ ] get ( java.lang.string key, boolean var_1 ) { type_1 var_2 = method_1 ( ). get ( key ) ; if ( var_2 == null ) return null ; if ( ( ( var_2. method_2 ( ) ) + ( var_2. method_3 ( ) ) ) < ( type_2. method_4 ( ) ) ) { remove ( key, var_2 ) ; return null ; } if ( var_1 ) var_2. method_5 ( ) ; return var_2. getvalue ( ) ; }

************

************
tgt: void method_1 ( final java.util.list < java.lang.string > var_1 ) { for ( java.lang.string var_3 : var_1 ) { java.io.file file = new java.io.file ( var_3 ) ; if ( file . method_4 ( ) ) { var_4 = file . method_5 ( ) ; method_6 ( file ) ; } else { method_7 ( file ) ; } } }
[0]: public void method_1 ( type_1 i ) { type_1 item = i. method_2 ( ) ; if ( var_1 ) { int var_2 = method_3 ( i ) ; if ( var_2 >= 0 ) { var_3. get ( var_2 ). count += i. count ; } else { var_3. add ( item ) ; } } else { var_3. add ( item ) ; } }

************

************
tgt: private java.lang.boolean method_1 ( java.lang.boolean error , java.lang.double var_1 , java.lang.integer var_2 , java.lang.integer var_3 , type_1 var_4 ) { if ( ( var_2 == int_1 ) && ( var_1 > var_3 ) ) { error = var_5 ; } if ( ( var_2 == 1 ) && ( ( var_1 != null ) && ( var_1 > 0 ) ) ) { error = var_5 ; } return error ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2!= null ) { if ( ( var_3 )!= null ) { var_4 = ( ( java.util.hashmap < java.lang.string, java.lang.string > ) ( var_1. method_2 ( string_1 ). method_2 ( var_3. method_3 ( ) ). method_2 ( string_2 ). getvalue ( ) ) ) ; method_4 ( ) ; method_5 ( ) ; } } } }

************

************
tgt: protected java.util.list < java.lang.string > method_1 ( java.util.list < type_1 > var_1 ) { return type_2 . method_2 ( type_3 . method_3 ( var_1 , new type_4 < type_1 , java.lang.string > ( ) { public java.lang.string method_6 ( type_1 var_2 ) { if ( ( var_2 . method_7 ( ) ) && ( ! ( method_8 ( ) ) ) ) { return string_1 ; } return method_9 ( var_2 ) ; } } ) ) ; }
[0]: public void method_1 ( final java.lang.charsequence var_1, int start, int var_2, int count ) { if ( var_3. gettext ( ). tostring ( ). equals ( var_4 ) ) { var_5. method_2 ( ) ; var_6. method_3 ( ) ; var_7. method_4 ( var_8 ) ; var_9 = false ; method_5 ( var_10 ) ; method_6 ( ) ; method_7 ( ) ; } else { var_5. method_8 ( ) ; var_6. method_3 ( ) ; var_7. method_4 ( var_8 ) ; } }

************

************
tgt: private boolean contains ( java.lang.object field , java.lang.object value ) { if ( field == null ) { return ( value == null ) || ( value . equals ( string_1 ) ) ; } return field . tostring ( ) . contains ( value . tostring ( ) ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { java.util.map < type_2, java.util.arraylist < java.lang.object > > var_2 = method_2 ( ) ; type_2 var_3 = method_3 ( ) ; for ( java.lang.object i : var_2. get ( var_3 ) ) { if ( ( i instanceof type_1 ) && ( ( ( ( type_1 ) ( i ) ). getname ( ) ) == ( var_1. getname ( ) ) ) ) { return true ; } } return false ; }

************

************
tgt: public void method_1 ( final type_1 var_1 ) { super . method_1 ( var_1 ) ; final type_2 var_2 = var_1 . method_2 ( var_3 , var_4 ) ; for ( int i = 0 ; i < ( var_2 . method_3 ( ) ) ; ++ i ) { var_5 . add ( type_3 . method_4 ( var_2 . method_5 ( i ) . method_6 ( var_6 ) ) ) ; } var_7 = var_1 . getboolean ( var_8 ) ; }
[0]: public type_1 method_1 ( java.lang.long var_1 ) { final type_1 var_2 = var_3. method_2 ( var_1 ) ; if (! ( type_2. isempty ( var_2. method_3 ( ) ) ) ) { var_2. method_3 ( ). size ( ) ; } return var_2 ; }

************

************
tgt: private static void set ( type_1 var_1 , java.util.random var_2 , type_2 var_3 ) { if ( ! ( var_1 . method_1 ( var_3 ) ) ) return ; type_3 var_4 = type_4 . get ( var_5 ) ; for ( type_5 var_6 : var_7 ) { if ( var_1 . method_2 ( var_4 , var_3 , var_6 ) ) { type_6 . method_3 ( var_4 , var_6 ) ; var_4 . set ( var_1 , var_3 ) ; return ; } } }
[0]: public void method_1 ( ) { type_1 var_1 = type_2. method_2 ( ) ; if ( var_1 == null ) { type_3 var_2 = type_4. method_3 ( ) ; var_3. method_4 ( var_2 ) ; } else { type_3 var_2 = type_5. method_3 ( ) ; var_3. method_4 ( var_2 ) ; var_3. method_5 ( ) ; } }

************

************
tgt: public static java.util.list < type_1 > method_1 ( type_2 var_1 , int var_2 , int var_3 ) { java.util.list < type_3 > var_4 = type_4 . method_2 ( var_1 . method_3 ( ) ) ; type_4 . method_4 ( var_4 ) ; java.util.list < type_1 > var_5 = type_4 . method_5 ( var_1 , var_4 ) ; type_4 . method_6 ( var_5 , var_2 , var_3 ) ; var_6 . info ( var_1 . method_3 ( ) ) ; var_6 . info ( var_5 ) ; return var_5 ; }
[0]: public int method_1 ( type_1 var_1, type_1 var_2 ) { return ( var_1. a ) < ( var_2. a )? - 1 : ( var_1. a ) == ( var_2. a )? ( var_1. y ) < ( var_2. y )? - 1 : 1 ; }

************

************
tgt: public java.lang.boolean method_1 ( ) { final type_1 var_1 = var_2 ; switch ( var_1 ) { case var_3 : var_2 = var_4 ; break ; case var_5 : var_2 = var_6 ; break ; case var_7 : var_2 = var_8 ; break ; case var_9 : var_2 = var_10 ; break ; } return true ; }
[0]: public java.util.arraylist < java.lang.string > method_1 ( java.util.arraylist < type_1 > var_1 ) { java.util.arraylist < java.lang.string > var_2 = new java.util.arraylist < > ( ) ; for ( int i = 0 ; i < ( var_1. size ( ) ) ; i ++ ) { if (! ( var_2. contains ( var_1. get ( i ). method_2 ( ) ) ) ) var_2. add ( var_1. get ( i ). method_2 ( ) ) ; } return var_2 ; }

************

************
tgt: public static int method_1 ( type_1 var_1 , byte ... var_2 ) { if ( ( var_2 . length ) != int_1 ) { throw new type_2 ( string_1 ) ; } type_3 buffer = type_3 . method_2 ( var_2 , 0 , int_1 ) ; buffer . method_3 ( var_1 ) ; return buffer . getint ( ) ; }
[0]: public void method_1 ( long var_1 ) { if ( ( this. var_2 ) > 0 ) { this. starttime = ( this. var_2 ) - var_1 ; } else { this. starttime = ( type_1. method_2 ( ) ) - var_1 ; } }

************

************
tgt: private java.util.collection < type_1 > method_1 ( final type_1 var_1 ) { final type_2 < type_3 < ? , ? > > var_2 = type_4 . method_2 ( var_1 , this . var_3 , this . var_4 , this . var_5 ) ; if ( var_2 . method_3 ( ) ) { final type_5 var_6 = ( ( type_5 ) ( var_2 . get ( ) ) ) ; if ( ( var_6 . method_4 ( ) ) < int_1 ) { return var_6 . getvalue ( ) ; } } return null ; }
[0]: public boolean method_1 ( java.lang.string key ) { if ( method_2 ( key ) ) { synchronized ( this ) { for ( type_1 var_1 : var_2 ) { if ( var_1. method_3 ( ). equals ( key ) ) { var_2. remove ( var_1 ) ; break ; } } try { method_4 ( ) ; } catch ( java.lang.exception var_3 ) { var_4. method_5 ( java.lang.string.format ( string_1, var_3 ) ) ; } } return true ; } return false ; } }

************

************
tgt: private void method_1 ( type_1 target ) { type_2 var_1 = ( ( type_2 ) ( target . method_2 ( ) ) ) ; if ( var_1 == null ) { return ; } java.lang.integer var_2 = ( ( java.lang.double ) ( var_1 . get ( string_1 ) ) ) . intvalue ( ) ; this . var_3 = new type_3 ( var_2 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { type_2 info = new type_2 ( var_2, var_3 ) ; type_2 var_4 = new type_2 ( var_5, var_6 ) ; type_3 var_7 = new type_3 ( var_8 ) ; type_4. method_2 ( var_9, new type_5 [ ] { info, var_4, var_7 }, string_1, var_10, var_11 ) ; var_12. method_3 ( ) ; }

************

************
tgt: public static void method_1 ( ) { var_1 = new type_1 [ int_4 ] ; var_1 [ 0 ] = new type_2 ( ) ; var_1 [ 1 ] = new type_3 ( ) ; var_1 [ int_2 ] = new type_4 ( new type_5 < java.lang.string > ( ) ) ; var_1 [ int_3 ] = new type_4 ( new java.util.hashset < java.lang.string > ( ) ) ; }
[0]: public void method_1 ( java.lang.string var_1, java.lang.string var_2 ) { try { type_1 var_3 = new type_1 ( ) ; var_3. method_2 ( var_4, var_1 ) ; type_2 message = new type_2 ( string_1. method_3 ( string_2 ), var_3 ) ; var_5. method_4 ( string_3, message ) ; } catch ( type_3 | type_4 var_6 ) { type_5. error ( string_4, var_6 ) ; } }

************

************
tgt: private void method_1 ( java.lang.class type ) { java.lang.class < ? > var_1 = type . method_2 ( ) ; while ( ( type != null ) && ( var_1 != ( var_2 class ) ) ) { if ( var_3 . method_3 ( var_1 ) ) { throw new type_1 ( ( string_1 + var_1 ) ) ; } var_3 . put ( var_1 , type ) ; type = ( ( type . method_2 ( ) ) == type ) ? null : type . method_2 ( ) ; } }
[0]: public void method_1 ( type_1 [ ] var_1, java.util.date var_2 ) { if ( ( var_3 ) == null ) { var_3 = new type_2 ( this, var_1, var_2 ) ; var_4. method_2 ( var_3 ) ; } else { var_3. method_3 ( var_1 ) ; var_3. method_4 ( var_2 ) ; var_3. method_5 ( ) ; } var_5. method_6 ( false ) ; }

************

************
tgt: private java.lang.string method_1 ( ) throws java.io.ioexception { java.lang.string [ ] keys = new java.lang.string [ ] { string_1 , string_2 } ; java.lang.string [ ] values = new java.lang.string [ ] { method_2 ( ) . tostring ( ) , method_3 ( ) } ; if ( values [ 0 ] . equals ( string_3 ) ) { return new type_1 ( this ) . method_1 ( var_1 , keys , values ) ; } else { return new type_1 ( this ) . method_1 ( var_2 , keys , values ) ; } }
[0]: public void method_1 ( ) { this. var_1 = null ; this. var_2. method_2 ( ) ; this. var_3. method_2 ( ) ; this. var_4 = null ; this. var_5 = null ; this. var_6 = null ; this. var_7 = null ; this. var_8 = null ; this. var_9 = 0 ; this. var_10 = 0 ; }

************

************
tgt: public type_1 method_1 ( type_2 state ) { java.util.set < type_3 > var_1 = new java.util.hashset < type_3 > ( ) ; int [ ] var_2 = var_3 . method_2 ( ) ; for ( int i = state . method_3 ( 0 ) ; i != ( - 1 ) ; i = state . method_3 ( ( i + 1 ) ) ) { var_1 . add ( var_4 . get ( ( ( var_5 ) + i ) ) ) ; } return new type_1 ( var_1 ) ; }
[0]: public static java.lang.string method_1 ( java.lang.string var_1, java.lang.string var_2, int var_3, int var_4, java.lang.string var_5 ) { type_1 var_6 = new type_1 ( ) ; try { var_6. put ( string_1, var_1 ) ; var_6. put ( string_2, var_2 ) ; var_6. put ( string_3, var_3 ) ; var_6. put ( string_4, var_4 ) ; var_6. put ( string_5, var_5 ) ; } catch ( type_2 var_7 ) { var_7. method_2 ( ) ; } return var_6. tostring ( ) ; }

************

************
tgt: public boolean equals ( java.lang.object obj ) { if ( ! ( obj instanceof type_1 ) ) { return false ; } type_1 var_1 = ( ( type_1 ) ( obj ) ) ; return var_1 . method_1 ( ) . equals ( super . method_1 ( ) ) ; }
[0]: public void method_1 ( final type_1 var_1, final int status ) { type_2. method_2 ( string_1, string_2 ) ; if ( var_1. method_3 ( ). getname ( ). contains ( string_3 ) ) { method_4 ( var_1 ) ; } else if ( var_1. method_3 ( ). getname ( ). contains ( string_4 ) ) { method_5 ( var_1 ) ; } else { } }

************

************
tgt: protected boolean method_1 ( ) { switch ( var_1 ) { case var_2 : if ( ( var_3 ) && ( var_4 . isempty ( ) ) ) return true ; else return false ; case var_5 : return true ; case var_6 : if ( var_4 . method_2 ( ) ) return true ; else return false ; case var_7 : return false ; } return false ; }
[0]: public void method_1 ( char [ ] var_1, int start, int length ) throws type_1 { if ( var_2 ) { var_3. append ( var_1, start, length ) ; if ( var_4 ) { var_5. append ( new java.lang.string ( var_1, start, length ). replaceall ( string_1 ). trim ( ) ) ; } } } }

************

************
tgt: public void method_1 ( java.lang.string var_1 , double var_2 , double var_3 , int var_4 ) { type_1 [ ] var_5 = new type_1 [ ( var_6 . length ) + 1 ] ; for ( int i = 0 ; i < ( ( var_5 . length ) - 1 ) ; i ++ ) { var_5 [ i ] = var_6 [ i ] ; } var_5 [ var_6 . length ] = new type_1 ( var_1 , var_2 , var_3 , var_4 ) ; var_6 = var_5 ; method_2 ( ) ; }
[0]: public int method_1 ( ) { ( var_1 ) -- ; if ( var_2 ) { if ( ( var_1 ) == ( - 1 ) ) { var_1 = int_1 ; } else if ( ( var_1 ) == int_1 ) { var_1 = int_2 ; } } else { if ( ( var_1 ) < 0 ) { var_1 = int_2 ; } } return var_1 ; } }

************

************
tgt: public int method_1 ( type_1 var_1 , type_1 var_2 ) { if ( ( var_1 . method_2 ( ) ) < ( var_2 . method_2 ( ) ) ) { return 1 ; } if ( ( var_1 . method_2 ( ) ) > ( var_2 . method_2 ( ) ) ) { return - 1 ; } return var_1 . getname ( ) . method_3 ( var_2 . getname ( ) ) ; }
[0]: public void method_1 ( ) { type_1. method_2 ( this ) ; var_1. method_3 ( ) ; type_2. method_4 ( this ) ; var_2 = var_3. gettext ( ). tostring ( ). trim ( ) ; method_5 ( var_2 ) ; method_6 ( var_2, ( string_1 + ( var_4 ) ) ) ; }

************

************
tgt: private void method_1 ( int id , int x , int y ) { boolean var_1 = true ; for ( type_1 var_2 : var_3 ) { if ( ( var_2 . method_2 ( ) ) == id ) { var_1 = false ; var_2 . set ( x , y ) ; break ; } } if ( var_1 ) { var_3 . add ( new type_1 ( id ) ) ; } }
[0]: public static void method_1 ( type_1 context, java.lang.string event, java.util.list < type_2 < java.lang.string, java.lang.string > > var_1 ) { type_3 var_2 = context. method_2 ( ). getconfig ( ). method_3 ( event ) ; for ( type_3 var_3 : var_2 ) { if ( var_3. startswith ( string_1 ) ) { var_3 = var_3. substring ( 1 ) ; } for ( type_3 function : var_1 ) { var_3 = function. method_4 ( var_3 ) ; } type_4. method_5 ( context, var_3 ) ; } }

************

************
tgt: public static final void method_1 ( final type_1 obj , final type_1 value ) { type_2 var_1 = obj . method_2 ( ) ; type_2 var_2 = var_1 . method_3 ( obj . method_2 ( ) . method_4 ( ) ) . method_5 ( var_1 . method_6 ( var_3 ) , type_3 . method_7 ( var_3 , var_1 . method_8 ( ) . method_9 ( value ) , 0 ) ) ; obj . method_10 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( android.content.context context, android.content.intent intent ) { if ( intent == null ) { return ; } type_1 var_1 = intent. method_2 ( string_1 ) ; type_2 var_2 = intent. method_2 ( string_2 ) ; type_3. method_3 ( var_1, var_2 ) ; }

************

************
tgt: public static int method_1 ( java.lang.string var_1 ) { if ( type_1 . isempty ( var_1 ) ) { return 0 ; } java.lang.string [ ] var_2 = type_1 . split ( var_1 , char_1 ) ; if ( ( var_2 . length ) < int_1 ) { return 0 ; } java.lang.string var_3 = var_2 [ 1 ] ; return ( type_2 . method_2 ( var_3 ) ) + 1 ; }
[0]: public type_1 method_1 ( type_2 var_1 ) { synchronized ( var_2 ) { for ( java.util.map.entry < type_1, type_2 > var_3 : var_4. method_2 ( ) ) { if ( var_1. equals ( var_3. getvalue ( ) ) ) return var_3. method_3 ( ) ; } } return null ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( string_1 , string_2 ) ; type_1 . method_2 ( string_1 , ( string_3 + ( this . var_1 . method_3 ( ) ) ) ) ; this . var_3 . method_5 ( ) ; this . var_1 . method_6 ( ) ; }
[0]: private type_1 method_1 ( type_2 var_1 ) { if ( ( var_2 )!= null ) { if ( var_1. method_2 ( ) ) { return var_3 ; } else if ( var_1. method_3 ( ) ) { return var_4 ; } else { return var_5 ; } } else { return var_6 ; } } return var_6 ; }

************

************
tgt: public static boolean method_1 ( final java.util.list < type_1 > var_1 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { final type_1 var_2 = var_1 . get ( i ) ; if ( ( ( var_2 . method_2 ( ) ) || ( var_2 . method_4 ( ) ) ) || ( var_2 . method_5 ( ) ) ) continue ; return true ; } return false ; }
[0]: public void start ( ) { if ( ( var_1 ) == null ) { var_1 = new type_1 ( ( string_1 + ( this. name ) ) ) ; var_1. method_1 ( new type_2 ( this ), 0l, ( ( ( long ) ( this. var_2 ) ) * int_1 ) ) ; } }

************

************
tgt: public void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; if ( ( data != null ) && ( ! ( data . method_2 ( var_3 ) . equals ( string_1 ) ) ) ) { var_4 . settext ( data . method_2 ( var_3 ) ) ; } }
[0]: public void method_1 ( type_1 var_1, int var_2 ) { if ( var_2 == ( var_3 ) ) { method_2 ( ). delete ( var_4, var_5, null ) ; type_2. method_3 ( this, var_6, var_7 ). show ( ) ; android.content.intent intent = new android.content.intent ( this, var_8 class ) ; method_4 ( intent ) ; } }

************

************
tgt: private void method_1 ( java.util.calendar var_1 ) { method_2 ( var_1 . get ( var_2 ) , ( ( var_1 . get ( var_3 ) ) + 1 ) , var_1 . get ( var_4 ) ) ; method_1 ( var_1 . get ( var_5 ) , var_1 . get ( var_6 ) ) ; var_7 = var_1 ; }
[0]: public int method_1 ( int var_1 ) { this. var_2. method_2 ( ) ; try { ( this. var_3 ) -- ; while ( var_1 == ( var_4 ) ) { try { var_5. method_3 ( ) ; } catch ( type_1 var_6 ) { java.lang.thread. method_4 ( ). method_5 ( ) ; } } var_5. method_6 ( ) ; } finally { var_2. method_7 ( ) ; } return var_4 ; } }

************

************
tgt: public void method_1 ( ) { byte [ ] buffer = new byte [ int_1 ] ; type_1 var_1 = new type_1 ( buffer , buffer . length ) ; var_2 = true ; while ( var_2 ) { try { var_3 . method_2 ( var_1 ) ; java.lang.string msg = new java.lang.string ( buffer , 0 , var_1 . method_3 ( ) ) ; java.lang.system.out.println ( msg ) ; } catch ( java.io.ioexception var_4 ) { break ; } } }
[0]: public void method_1 ( type_1 < type_2 > var_1, type_2 var_2 ) { if ( var_1 == null ) { return ; } if ( var_1. isempty ( ) ) { var_3 = null ; } java.lang.string type = string_2 + ( var_1. method_2 ( string_1 ) ) ; if ( string_3. method_3 ( type ) ) { var_4. method_4 ( ) ; } else if ( string_4. method_3 ( type ) ) { var_5. method_4 ( ) ; } var_6. remove ( var_1 ) ; method_5 ( ( string_5 + type ) ) ; } }

************

************
tgt: private static type_1 method_1 ( long var_1 , long var_2 ) { type_5 var_5 = type_6 . method_4 ( ) ; type_2 var_3 = type_3 . method_2 ( var_5 , var_2 , var_1 ) ; type_4 var_4 = var_3 . method_3 ( ) ; if ( ( var_4 . getid ( ) ) != 0 ) { type_7 var_6 = type_3 . method_5 ( var_5 , var_4 . method_6 ( ) ) ; if ( var_6 != null ) { return type_3 . method_7 ( var_6 . method_8 ( ) ) ; } } return var_3 ; }
[0]: public void update ( type_1 var_1 ) { type_2 var_2 = ( ( type_2 ) ( var_1 ) ) ; int var_3 = var_2. method_1 ( ) ; java.lang.string var_4 = var_2. method_2 ( ) ; this. var_5. settext ( var_4 ) ; this. var_6. setvalue ( var_3 ) ; this. var_6. method_3 ( ( ( var_6. getvalue ( ) ) + string_1 ) ) ; }

************

************
tgt: private static void method_1 ( ) { for ( int i = 0 ; i < ( var_1 ) ; i ++ ) { for ( int j = 0 ; j < ( var_2 . length ) ; j ++ ) { if ( ( var_3 [ i ] [ j ] . equals ( null ) ) || ( var_3 [ i ] [ j ] . equals ( string_1 ) ) ) var_3 [ i ] [ j ] = java.lang.string . method_2 ( ( - 1 ) ) ; } } }
[0]: public void method_1 ( type_1 var_1, int type ) { int var_2 = 0 ; switch ( type ) { case var_3 : var_2 = var_4 ; break ; case var_5 : var_2 = var_6 ; break ; case var_7 : var_2 = var_8 ; break ; } var_9. method_2 ( var_2 ) ; }

************

************
tgt: public double method_1 ( ) { type_1 var_1 = method_2 ( var_2 . method_3 ( ) ) ; type_2 var_3 = var_1 . method_4 ( var_2 . method_5 ( ) ) ; type_3 method = var_3 . method_6 ( var_2 . method_7 ( ) ) ; type_4 var_4 = method . method_8 ( var_2 . method_9 ( ) ) ; if ( var_4 == null ) { return 0.0 ; } return var_4 . method_10 ( ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { try { type_2 var_2 = this. method_2 ( var_1. getid ( ) ). method_3 ( ) ; if ( var_2. method_4 ( var_1. method_3 ( ) ) ) { return true ; } return false ; } catch ( type_3 var_3 ) { method_5 ( ) ; method_1 ( var_1 ) ; } return false ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) { int [ ] var_2 = type_1 . method_2 ( java.lang.double . method_3 ( var_1 ) ) ; var_3 . settext ( java.lang.string . method_3 ( var_2 [ 0 ] ) ) ; var_4 . settext ( java.lang.string . method_3 ( var_2 [ 1 ] ) ) ; var_5 . settext ( java.lang.string . method_3 ( var_2 [ int_1 ] ) ) ; var_6 . method_4 ( ( ( java.lang.double . method_3 ( var_1 ) ) >= 0 ) ) ; }
[0]: public void method_1 ( type_1 event, int var_1, java.lang.double var_2 ) { java.lang.double var_3 = var_4. method_2 ( ) ; type_2 var_5 = event. method_3 ( ). method_4 ( ) ; if ( var_3 >= var_2 ) { return ; } if ( ( var_6. getboolean ( string_1, true ) ) && ( ( var_5 == null ) || (! ( var_5. method_5 ( string_2 ) ) ) ) ) { return ; } event. method_6 ( ). add ( type_3. method_7 ( var_1 ) ) ; }

************

************
tgt: private java.util.map < type_1 , type_2 > method_1 ( final type_3 var_1 , final java.util.list < type_1 > var_2 , final type_4 var_3 , final java.lang.string operation ) throws type_5 , type_6 , type_7 { return method_1 ( var_1 , var_2 , var_3 , operation , false , false ) ; }
[0]: private void method_1 ( type_1 var_1, type_2 var_2 ) { type_3. method_2 ( var_3, string_1 ) ; if ( var_4 ) { return ; } var_5. init ( var_1, var_2, var_6 ) ; var_7. method_3 ( ) ; final java.util.list < type_4 > var_8 = method_4 ( ) ; var_7. method_5 ( var_8 ) ; var_9. method_6 ( new type_5 ( var_1, var_2 ) ) ; var_9. method_6 ( new type_5 ( var_1, var_2 ) ) ; }

************

************
tgt: protected void method_1 ( type_1 var_1 ) throws java.io.ioexception { if ( ( var_1 . id ) == 0 ) { var_2 . method_2 ( var_3 ) ; } else { if ( var_4 . equals ( string_1 ) ) { var_4 = string_2 ; } else { var_4 = string_1 ; } } }
[0]: public java.util.map < java.lang.string, java.lang.string > method_1 ( type_1 var_1 ) { java.util.map < java.lang.string, java.lang.string > var_2 = type_2. method_2 ( this. var_3, var_1. method_3 ( ) ) ; if (! ( var_2. isempty ( ) ) ) { return var_2 ; } return type_2. method_2 ( this. var_3, var_4 ) ; }

************

************
tgt: public void method_1 ( android.view.view view ) { if ( ( var_3 ) != null ) { type_1 var_1 = new type_1 ( ) ; var_1 . put ( var_2 , var_3 . method_2 ( ) ) ; var_1 . put ( var_4 , var_3 . method_3 ( ) ) ; type_2 var_5 = getactivity ( ) . method_4 ( ) . method_5 ( var_6 , var_1 ) ; type_3 . method_6 ( string_1 , var_5 . tostring ( ) ) ; method_7 ( var_7 , var_8 ) ; } }
[0]: public void method_1 ( type_1 var_1, java.lang.string var_2 ) { type_2 var_3 = method_2 ( ) ; type_2. method_3 ( true ) ; var_3. method_4 ( ). method_5 ( var_4, var_5, var_6, var_7 ). method_6 ( method_2 ( ). method_7 ( var_8 class. method_8 ( ) ) ). method_9 ( null ). replace ( var_9, var_1, var_2 ). commit ( ) ; }

************

************
tgt: public static void delete ( java.io.file f ) throws java.io.ioexception { if ( f == null ) return ; if ( f . method_1 ( ) ) { for ( java.io.file c : f . method_2 ( ) ) { type_1 . delete ( c ) ; } } f . delete ( ) ; }
[0]: public void method_1 ( ) { if ( ( var_1 )!= null ) { var_2 = var_1. method_2 ( ) ; method_3 ( var_3, ( ( string_1 + ( var_2 ) ) + string_2 ), var_4 ) ; var_5. method_4 ( var_6 ) ; } else { type_1. method_5 ( getactivity ( ), string_3, var_7 ). show ( ) ; } }

************

************
tgt: protected void method_1 ( ) { super . method_1 ( ) ; android.content.context context = getcontext ( ) ; type_1 var_1 = new type_1 ( context ) ; type_2 var_2 = new type_2 ( var_3 , 0 ) ; var_4 = var_5 ; var_1 . method_2 ( var_2 ) ; var_6 = var_1 ; this . method_3 ( var_6 ) ; var_7 = method_4 ( 0 ) ; }
[0]: public void method_1 ( type_1 var_1 ) { var_2 = ( ( java.lang.string ) ( type_2. method_2 ( ) ) ) ; var_3 = ( type_2. method_3 ( ) ) - 1 ; if (! ( type_2. method_2 ( ). equals ( string_1 ) ) ) { filepath. settext ( ( ( java.lang.string ) ( type_2. method_2 ( ) ) ) ) ; method_4 ( type_2. method_3 ( ) ) ; } else filepath. settext ( string_2 ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 ) { for ( type_1 var_2 : var_1 . method_2 ( ) ) { var_3 = ( ( java.lang.string ) ( var_2 . method_3 ( string_1 ) . getvalue ( ) ) ) ; java.lang.system.out.println ( ( string_2 + ( var_3 ) ) ) ; if ( var_4 . equals ( var_5 . method_4 ( ) . method_5 ( ) ) ) { var_8 . add ( var_3 ) ; var_6 = true ; } var_7 . add ( var_3 ) ; } }
[0]: public static type_1 method_1 ( java.lang.string var_1 ) { byte [ ] var_2 = null ; try { var_2 = type_2. method_2 ( var_1 ) ; } catch ( java.io.ioexception var_3 ) { throw new type_3 ( string_1 ) ; } return var_1 == null? null : new type_1 ( var_2 ) ; }

************

************
tgt: public java.lang.string method_1 ( type_1 var_1 ) { type_2 var_2 = var_3 . method_2 ( var_1 ) ; if ( var_2 != null ) { type_4 var_4 = var_2 . getconfig ( ) ; return ( var_4 . method_4 ( ) ) != null ? var_4 . method_4 ( ) : method_5 ( ) ; } else { return method_5 ( ) ; } }
[0]: public static void method_1 ( int var_1, int var_2 ) { type_1. method_2 ( ) ; for ( int i = 1 ; i <= var_1 ; i ++ ) { var_3. add ( new type_2 ( 0.0, i, 0.0, 0, var_4. get ( ( i - 1 ) ), 0 ) ) ; } var_5 = var_2 ; var_6 = var_3. get ( 0 ) ; }

************

************
tgt: public byte [ ] method_1 ( byte [ ] var_1 ) { type_1 var_2 = null ; var_2 = ( ( type_1 ) ( type_2 . method_2 ( var_1 , var_3 ) . method_3 ( ) ) ) ; return method_1 ( var_2 ) . method_4 ( false ) ; }
[0]: public void handle ( type_1 event ) { type_2 var_1 = new type_2 ( ) ; java.io.file var_2 = var_1. method_1 ( var_3 ) ; if ( var_2 == null ) { path. settext ( string_1 ) ; } else { path. settext ( var_2. method_2 ( ) ) ; } }

************

************
tgt: private void method_1 ( ) { var_1 . method_2 ( new type_1 ( ) { public void method_3 ( type_2 result ) { if ( ! ( result . method_4 ( ) ) ) { method_5 ( ( string_1 + result ) ) ; return ; } if ( ( var_1 ) == null ) return ; var_1 . method_6 ( var_2 ) ; } } ) ; }
[0]: public type_1 method_1 ( java.io.file file ) { type_2 var_1 = type_3. method_2 ( file ) ; var_1 = type_4. method_3 ( var_1 ) ; type_5 var_2 = method_4 ( var_1 ) ; if ( ( var_1!= null ) && ( var_2!= null ) ) { type_1 var_3 = var_2. method_5 ( ) ; return var_3 ; } return null ; }

************

************
tgt: private void method_1 ( type_1 var_1 ) { var_2 . method_1 ( var_1 . method_2 ( ) ) ; var_3 . remove ( var_1 ) ; try { var_4 . method_3 ( var_1 ) ; } catch ( type_2 var_5 ) { var_5 . method_5 ( ) ; java.lang.system.out.println ( string_1 ) ; java.lang.system.exit ( 0 ) ; } if ( var_6 . method_6 ( var_1 ) ) { var_6 = var_3 . get ( 1 ) ; } method_7 ( ) ; var_7 . method_8 ( var_2 ) ; }
[0]: public java.lang.string method_1 ( android.content.context context ) { if ( type_1. isempty ( var_1. method_2 ( ) ) ) { if ( ( var_1. method_3 ( ) )!= ( - 1 ) ) { return context. getstring ( var_2, ( ( var_1. method_3 ( ) ) + 1 ) ) ; } else { return context. getstring ( var_2, string_1 ) ; } } else { return var_1. method_2 ( ) ; } }

************

************
tgt: public void method_1 ( boolean var_1 ) { var_2 = var_1 ; if ( var_3 ) { var_4 = var_1 ; } if ( ( var_5 ) != null ) { var_5 . method_2 ( var_1 ) ; } else { if ( ! var_1 ) { } } }
[0]: public void method_1 ( type_1 var_1 ) throws type_2, type_3 { java.lang.string var_2 = type_4. method_2 ( var_1 ) ; int var_3 = 0 ; type_5 var_4 = var_5. method_3 ( ) ; var_4. method_4 ( string_1, ( ( ( string_2 + ( var_1. method_5 ( ) ) ) + string_3 ) + ( var_1. method_6 ( ) ) ), var_2 ) ; type_6. info ( ( ( string_4 + ( var_1. method_6 ( ) ) ) + string_5 ) ) ; var_4. method_7 ( ) ; }

************

************
tgt: public void method_1 ( java.lang.string var_1 ) throws java.lang.exception { type_1 . method_2 ( var_2 ) ; type_2 type_3 = new type_4 ( ) ; var_1 = var_1 . method_3 ( var_3 , string_1 ) . trim ( ) ; type_5 = type_3 . method_4 ( var_1 ) ; type_5 . method_5 ( var_4 ) ; method_7 ( ) ; type_1 . method_6 ( type_5 ) ; type_3 . method_8 ( ) ; }
[0]: public void method_1 ( java.lang.object var_1 ) { if ( null!= var_1 ) { var_2 = ( ( type_1 ) ( var_1 ) ) ; for ( type_2 i : var_2. method_2 ( ). method_3 ( ) ) { var_3. put ( java.lang.integer.parseint ( i. getid ( ) ), i. method_4 ( ) ) ; method_5 ( ) ; } } }

************

************
tgt: public type_1 method_1 ( java.lang.string target ) { java.util.list < type_1 > var_1 = new java.util.arraylist < type_1 > ( var_2 . values ( ) ) ; for ( type_1 var_3 : var_1 ) { if ( var_3 . getname ( ) . equals ( target ) ) { return var_3 ; } } for ( type_1 var_3 : var_1 ) { if ( var_3 . getname ( ) . startswith ( target ) ) { return var_3 ; } } return null ; }
[0]: public void method_1 ( ) { var_1. method_2 ( new type_1 ( string_1, var_2 ) ) ; try { var_3. method_3 ( string_2 ) ; var_4. method_4 ( ) ; } catch ( type_2 var_5 ) { } var_3. method_3 ( string_3 ) ; var_1. method_5 ( ) ; }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 ) { for ( int i = 0 ; i < ( var_2 . size ( ) ) ; i ++ ) { type_3 var_3 = var_2 . method_2 ( i ) ; type_4 . method_3 ( var_1 , var_3 . getstring ( string_1 ) , var_3 . getint ( string_2 ) , var_3 . method_4 ( string_4 ) ) ; } }
[0]: private boolean method_1 ( java.lang.string... var_1 ) { boolean var_2 = true ; java.lang.string var_3 = var_1 [ 0 ] ; for ( java.lang.string var_4 : var_1 ) { if (! ( var_4. equals ( var_3 ) ) ) { break ; } var_2 = false ; } return var_2 ; }

************

************
tgt: public void method_1 ( type_1 event ) throws java.io.ioexception { var_4 . method_1 ( string_2 ) ; type_2 var_1 = type_3 . method_2 ( getclass ( ) . method_3 ( string_1 ) ) ; type_4 var_2 = ( ( type_4 ) ( var_3 . method_4 ( ) . method_5 ( ) ) ) ; var_2 . method_4 ( ) . method_6 ( var_1 ) ; }
[0]: public type_1 update ( type_1 var_1 ) { if (! ( var_1. method_1 ( ). equals ( var_2 ) ) ) { var_1. method_2 ( var_2 ) ; var_1. method_3 ( false ) ; } var_1. method_4 ( var_3 ) ; var_1. method_5 ( var_4 ) ; var_1. method_6 ( var_5 ) ; var_1. method_7 ( var_6 ) ; var_1. method_8 ( var_7 ) ; var_1. method_9 ( var_8 ) ; return var_1 ; }

************

************
tgt: public void method_1 ( boolean var_1 , boolean var_2 ) { var_3 = false ; var_4 = var_1 ; var_5 = false ; var_6 = var_2 ; if ( ( var_7 ) != null ) { var_7 . method_2 ( this , var_1 , var_2 ) ; } if ( ( var_8 ) != null ) { if ( var_2 ) { var_8 . method_3 ( var_9 ) ; } else { var_8 . method_3 ( var_10 ) ; } } }
[0]: public void method_1 ( type_1 var_1 ) { var_1. method_2 ( ). add ( ( ( type_2 ) ( this. var_2 ) ) ) ; this. var_3 = var_4 ; if ( this. var_5 ) { var_1. method_2 ( ). add ( ( ( type_2 ) ( this. var_6 ) ) ) ; var_1. method_3 ( ). add ( ( ( type_3 ) ( this. var_6 ) ) ) ; } }

************

************
tgt: void method_1 ( java.lang.string result ) { if ( var_1 ) { var_2 = ( ( type_1 ) ( method_2 ( ) . method_3 ( var_3 ) ) ) ; if ( ( var_2 ) == null ) { var_2 = new type_1 ( ) ; } var_2 . method_5 ( result ) ; method_2 ( ) . method_4 ( ) . replace ( var_3 , var_2 ) . commit ( ) ; } else { method_6 ( new android.content.intent ( this , var_4 class ) . method_7 ( string_1 , result ) ) ; } }
[0]: public void method_1 ( ) { var_1. status = false ; var_2 = string_1 ; var_3 = string_1 ; var_4 = string_1 ; var_5 = string_1 ; var_6 = null ; var_7 = null ; this. method_2 ( ) ; var_8. method_2 ( ) ; java.lang.system.exit ( 0 ) ; }

************

************
tgt: public static type_1 method_1 ( final type_1 var_1 , final int var_2 ) { final int var_3 = var_1 . method_2 ( ) . method_3 ( ) ; int var_4 = var_1 . method_4 ( ) ; if ( var_4 < var_2 ) { if ( var_2 <= var_3 ) { var_4 = var_2 ; } else { var_4 = var_3 ; } } return new type_1 ( var_1 . method_5 ( ) , var_1 . method_6 ( ) , var_4 , var_1 . method_7 ( ) ) ; }
[0]: public void method_1 ( ) { java.lang.string var_1 = string_1 ; for ( int i = 0 ; i < ( var_2. size ( ) ) ; i ++ ) { var_1 = ( var_1 + ( var_2. get ( i ). tostring ( ) ) ) + ( content. settext ( ( string_2 + var_1 ) ) ; } }

************

************
tgt: public boolean method_1 ( final type_1 response ) throws java.io.ioexception { final type_2 var_1 = method_2 ( response , var_2 class ) ; if ( var_1 . method_3 ( ) ) { return true ; } else if ( ! ( var_1 . method_1 ( ) ) ) { return false ; } throw new type_3 ( ( ( var_3 + string_1 ) + ( var_1 . method_4 ( ) ) ) ) ; }
[0]: private void method_1 ( ) { try ( java.io.filereader var_1 = new java.io.filereader ( new java.io.file ( string_1 ) ) ) { java.io.bufferedreader var_2 = new java.io.bufferedreader ( var_1 ) ; for ( int i = 0 ; i < ( var_3 ) ; i ++ ) { var_4. add ( var_2. method_2 ( ) ) ; } type_1. method_3 ( var_4 ) ; } catch ( java.lang.exception var_5 ) { var_5. method_4 ( ) ; } }

************

************
tgt: public java.lang.string method_1 ( ) { java.lang.string var_1 = string_1 ; int index = 0 ; while ( index < ( size ( ) ) ) { type_2 data = get ( index ) ; if ( data != null ) { var_1 = ( ( ( ( var_1 + string_2 ) + index ) + string_3 ) + data ) + "\n" ; } index ++ ; } return var_1 ; }
[0]: public void execute ( ) { type_1. method_1 ( ). method_2 ( type_2. method_1 ( ). method_3 ( ). method_4 ( ), type_2. method_1 ( ). method_3 ( ). method_5 ( ), type_2. method_1 ( ). method_6 ( ). method_5 ( ), 0.0 ) ; }

************

************
tgt: public java.lang.boolean method_1 ( type_1 var_1 , type_1 var_2 , type_2 var_3 ) { type_3 var_4 = var_5 . method_2 ( ) ; for ( type_4 var_6 : var_1 . method_3 ( ) ) { for ( type_4 var_7 : var_1 . method_3 ( ) ) { if ( type_5 . method_4 ( var_4 , var_6 . method_5 ( ) , var_7 . method_5 ( ) ) ) { if ( ! ( method_6 ( var_6 , var_7 ) ) ) { return false ; } } } } return true ; }
[0]: private void method_1 ( ) { switch ( var_1 ) { case var_2 : if ( open ( ) ) { var_1 = var_3 ; var_4 = type_1. method_2 ( ) ; } break ; case var_5 : if ( ( ( type_1. method_2 ( ) ) - ( var_4 ) ) > ( var_6 ) ) { method_3 ( ) ; method_4 ( ) ; } break ; case var_7 : break ; } } }

************

************
tgt: private void method_1 ( java.util.map < java.lang.string , java.lang.object > var_1 , final java.util.map < java.lang.string , type_1 > var_2 , final java.util.set < java.lang.string > var_3 ) { if ( ( ( ( ( var_1 == null ) || ( var_2 == null ) ) || ( var_1 . isempty ( ) ) ) || ( var_3 == null ) ) || ( var_3 . isempty ( ) ) ) { return ; } type_2 . method_1 ( null , var_1 , var_2 , var_3 ) ; }
[0]: public java.lang.string method_1 ( java.lang.string var_1, int var_2 ) throws type_1 { type_2 var_3 = var_4. method_2 ( string_1 ) ; var_3. method_3 ( 1, var_1 ) ; type_3 result = var_3. method_4 ( ) ; if ( result. method_5 ( ) ) method_1 ( result. getint ( 1 ), var_2 ) ; if ( result. method_5 ( ) ) return method_1 ( result. getint ( 1 ), var_2 ) ; return ( string_2 + var_1 ) + string_3 ; }

************

************
tgt: private void method_1 ( java.util.list < type_1 > var_1 ) { for ( int i = 0 ; i < ( var_1 . size ( ) ) ; i ++ ) { type_1 key = var_1 . get ( i ) ; java.lang.system.out.println ( ( ( ( ( ( ( ( string_1 + i ) + string_2 ) + ( key . method_2 ( ) ) ) + string_3 ) + ( key . method_3 ( ) ) ) + string_3 ) + ( key . method_4 ( ) ) ) ) ; } }
[0]: public void method_1 ( android.view.view var_1 ) { var_2. method_2 ( false ) ; var_3 = new type_1 ( context ) ; var_3. method_3 ( var_4 ) ; var_5. method_4 ( ). method_5 ( new type_2 ( var_6 ) ) ; var_3. method_6 ( true ) ; var_3. show ( ) ; }

************

************
tgt: public long method_1 ( type_1 var_1 ) { assert ( var_2 ) == null ; var_3 = false ; long var_4 = method_2 ( var_1 , this . var_4 ) ; if ( var_3 ) { var_4 += type_2 . method_3 ( this . var_5 , this . var_6 ) ; } else { var_4 += this . var_5 ; } return method_1 ( var_1 , var_4 ) ; }
[0]: public void method_1 ( type_1 var_1 ) throws type_2 { if ( var_2. method_2 ( var_1. method_3 ( ) ) ) { if ( var_3. method_4 ( ) ) { var_3. method_5 ( ( string_1 + ( var_1. method_3 ( ) ) ) ) ; } var_4. put ( var_1. method_3 ( ), var_1 ) ; } }

************

************
tgt: public synchronized void start ( ) { if ( ( ( id ) == null ) || ( ( ( var_1 ) == null ) || ( ( ( type_1 . method_1 ( ) ) - ( var_1 ) ) > ( var_2 ) ) ) ) { id = type_2 . method_2 ( ) . tostring ( ) ; } var_1 = null ; }
[0]: public boolean method_1 ( java.lang.string query ) { if (! ( ( query. isempty ( ) ) || ( query. equals ( var_1 ) ) ) ) { var_1 = query ; var_2. method_2 ( ) ; new type_1 ( var_2, var_3 ). execute ( query ) ; } return true ; }

************

************
tgt: public void method_1 ( java.lang.throwable var_1 ) { method_2 ( new java.lang.stringbuilder ( string_1 ) . append ( var_1 ) . tostring ( ) ) ; type_1 params = type_2 . method_3 ( ) ; params . method_4 ( string_2 , string_3 ) ; params . method_4 ( string_4 , string_5 ) ; method_5 ( var_2 , string_6 , params ) ; }
[0]: private < type_1 > type_1 method_1 ( java.lang.string url, java.lang.class < type_1 > type ) { this. var_1 = var_2. target ( ( ( var_3 ) + url ) ) ; type_2 var_4 = this. var_1. method_2 ( var_5 ) ; type_3 response = var_4. get ( ) ; if ( ( response. method_3 ( ) ) == int_1 ) { return response. method_4 ( type ) ; } return null ; }

************

************
tgt: protected void method_1 ( int var_1 , int var_2 , android.content.intent data ) { super . method_1 ( var_1 , var_2 , data ) ; if ( var_1 != ( var_3 ) ) return ; type_1 var_5 = var_6 . method_2 ( ) ; if ( var_5 != null ) var_5 . method_3 ( var_2 ) ; }
[0]: public boolean method_1 ( type_1 <? > var_1, android.view.view view, int position, long id ) { try { new type_2 ( this. method_2 ( ) ). method_3 ( ) ; } catch ( java.lang.exception var_2 ) { type_3. method_4 ( string_1, var_2. method_5 ( ) ) ; var_2. method_6 ( ) ; } return false ; }

************

************
tgt: public java.lang.object method_1 ( java.lang.object var_1 , type_1 method , java.lang.object ... args ) throws java.lang.throwable { type_2 var_2 = ( ( type_2 ) ( args [ 0 ] ) ) ; if ( var_2 != null ) { type_3 var_3 = null ; return type_4 . get ( ) . method_3 ( ( var_3 != null ? var_3 : var_2 ) ) ; } return false ; }
[0]: private void method_1 ( java.util.set < java.lang.string > var_1, java.lang.string var_2, java.util.arraylist < java.lang.string > var_3, java.lang.string [ ] var_4 ) { method_2 ( var_1, var_2, var_3 ) ; type_1 var_5 = var_6. method_3 ( var_3, var_1, var_4 ) ; var_6. method_4 ( var_7, var_5, string_1, string_2, var_4 ) ; }

************

************
tgt: private static java.lang.string method_1 ( java.lang.string var_1 ) { if ( ( var_1 == null ) || ( var_1 . isempty ( ) ) ) { return string_3 ; } java.lang.string message ; if ( ( java.lang.integer.parseint ( var_1 ) ) > int_1 ) { message = string_1 ; } else if ( ( java.lang.integer.parseint ( var_1 ) ) > 1 ) { message = string_2 ; } else { message = string_3 ; } return message ; }
[0]: public void method_1 ( int var_1, int var_2, int var_3, int var_4 ) { type_1 temp = type_2 [ var_1 ] [ var_2 ] ; type_2 [ var_1 ] [ var_2 ] = type_2 [ var_3 ] [ var_4 ] ; type_2 [ var_3 ] [ var_4 ] = temp ; }

************

************
tgt: public void method_1 ( final int var_1 , final double var_2 ) { var_3 [ var_1 ] = ( ( float ) ( type_1 . method_3 ( var_2 , 0 , ( ( method_4 ( ) ) == 1 ? int_1 : int_2 ) ) ) ) ; method_5 ( ) ; }
[0]: public java.lang.string method_1 ( java.lang.string line ) { line = line. replace ( string_1 ) ; type_1 pattern = type_1. method_2 ( string_2 ) ; java.util.regex.matcher var_1 = pattern. method_3 ( line ) ; if ( var_1. method_4 ( ) ) line = var_1. method_5 ( 1 ) ; return line ; }

************

************
tgt: public void method_1 ( boolean var_1 , type_1 var_2 ) { if ( var_2 . equals ( type_2 . method_2 ( var_3 ) ) ) { method_3 ( ) ; } else if ( var_2 . equals ( type_2 . method_2 ( var_4 ) ) ) { method_4 ( ) ; } }
[0]: public boolean method_1 ( ) { if ( ( state ) == ( var_1 ) ) { state = var_2 ; return false ; } else { if (! ( var_3. isempty ( ) ) ) { var_3. method_2 ( ) ; } state = var_1 ; return true ; } } }

************

************
tgt: public void method_1 ( ) throws java.lang.exception { type_1 var_1 = new type_2 ( string_1 ) ; type_3 result = ( ( type_3 ) ( var_2 . method_2 ( var_1 ) ) ) ; type_4 . assertequals ( type_5 . method_3 ( string_3 ) , result . get ( string_2 ) ) ; }
[0]: public void method_1 ( ) { var_1 = java.lang.integer.parseint ( var_2. gettext ( ) ) ; if ( ( ( var_1 ) >= 1 ) && ( ( var_1 ) <= int_1 ) ) { var_3 -= var_1 ; var_4 = true ; } else if ( ( ( int_1 < ( var_1 ) ) || ( ( var_1 ) > int_2 ) ) || ( ( var_1 ) < 0 ) ) { error ( ) ; } }

************

************
tgt: public static void main ( java.lang.string [ ] args ) { if ( ( args.length ) != 1 ) { java.lang.system.out.println ( string_1 ) ; java.lang.system.out.println ( string_2 ) ; java.lang.system.exit ( 0 ) ; } type_1 var_1 = new type_1 ( args [ 0 ] ) ; type_2 var_2 = new type_2 ( ) ; java.lang.system.out.println ( var_3 ) ; type_3 . method_1 ( var_1 , var_2 ) ; }
[0]: public void method_1 ( ) { java.util.collections.sort ( var_1, new type_1 < type_2 > ( ) { public int method_2 ( type_2 var_2, type_2 var_3 ) { return var_2. method_3 ( ). compareto ( var_3. method_3 ( ) ) ; } } ) ; var_4. method_4 ( ) ; for ( int x = 0 ; x < ( var_1. size ( ) ) ; x ++ ) { var_4. method_5 ( var_1. get ( x ). method_6 ( ) ) ; } }

************

************
tgt: public type_1 < type_2 > method_1 ( java.util.list < type_2 > var_1 ) { type_2 file = type_3 . get ( var_2 . get ( ) ) ; if ( ( file . method_2 ( ) ) || ( var_1 . isempty ( ) ) ) { return type_1 . method_3 ( file ) ; } else { return type_4 . method_4 ( var_2 . get ( ) , var_1 ) ; } }
[0]: public java.lang.string method_1 ( ) { if ( ( var_1 ) instanceof type_1 ) { type_1 c = ( ( type_1 ) ( var_1 ) ) ; type_2 var_2 = c. method_2 ( var_3 ) ; if ( var_2!= null ) { type_2 str = type_3. method_3 ( ). method_4 ( var_2, c ) ; return str. tostring ( str ) ; } } return var_1. method_1 ( ) ; }

************

************
tgt: public void method_1 ( final java.lang.string url , final java.lang.double var_1 , final java.lang.double var_2 , final java.lang.double var_3 , final java.lang.double var_4 ) { var_5 . method_3 ( type_2 . method_4 ( new type_3 ( url ) . method_5 ( ) ) , var_1 , var_2 , var_3 , var_4 ) ; }
[0]: public void method_1 ( ) { for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( ( var_1 [ i ] ) > 0 ) var_2. method_2 ( ) [ i ]. method_3 ( var_3 ) ; } }

************

************
tgt: public boolean method_1 ( final type_1 var_1 , final java.lang.string field , final type_2 var_2 ) throws type_3 { type_4 var_3 = method_2 ( var_1 , field ) ; boolean var_4 = false ; if ( ( var_3 != null ) && ( var_1 != null ) ) { method_3 ( var_1 , var_3 ) ; var_1 . method_4 ( ) . method_5 ( var_1 ) ; var_4 = true ; } return var_4 ; }
[0]: public static void method_1 ( java.lang.string url, type_1 var_1, type_2 response ) { type_3 var_2 = var_1. method_2 ( url ) ; try { var_2. method_1 ( var_1, response ) ; } catch ( type_4 var_3 ) { type_5. error ( var_3 ) ; } catch ( java.io.ioexception var_3 ) { type_5. error ( var_3 ) ; } }

************

************
tgt: public java.util.set < type_1 > method_1 ( ) { java.lang.string [ ] var_1 = method_2 ( string_1 , null ) ; java.util.set < type_1 > result = type_2 . method_3 ( ) ; if ( ( var_1 == null ) || ( ( var_1 . length ) == 0 ) ) { return result ; } for ( java.lang.string var_2 : var_1 ) { result . add ( type_1 . method_4 ( var_2 ) ) ; } return result ; }
[0]: public void method_1 ( type_1 name, type_2 var_1 ) { var_2 = ( ( type_3 ) ( var_1 ) ) ; var_3 = true ; var_2. method_2 ( ). var_4. method_3 ( this ) ; var_5. method_4 ( var_2. method_2 ( ). var_4 ) ; if (! ( var_2. method_2 ( ). method_5 ( ) ) ) { var_6. method_6 ( false ) ; var_6. method_7 ( var_7 ) ; } method_8 ( var_2. method_2 ( ). method_9 ( ) ) ; }

************

************
tgt: java.util.arraylist < type_1 > method_1 ( java.util.arraylist < type_1 > var_1 ) { double var_2 = int_1 ; for ( type_1 var_3 : var_1 ) { if ( ( ( var_3 . method_2 ( ) ) - ( var_3 . method_3 ( ) ) ) < var_2 ) { var_2 = ( var_3 . method_2 ( ) ) - ( var_3 . method_3 ( ) ) ; } } for ( type_1 var_3 : var_1 ) { var_3 . method_1 ( var_2 ) ; } return var_1 ; }
[0]: private void method_1 ( type_1 var_1, java.lang.string var_2, java.lang.string var_3 ) { if ( var_2!= null ) { var_1. put ( var_4, var_2. replace ( string_1, string_2 ) ) ; } else { var_1. put ( var_4, string_2 ) ; } var_1. put ( var_5, var_3 ) ; }

************

************
tgt: public type_1 < java.lang.string > method_1 ( type_2 msg , java.lang.string var_1 ) { java.lang.string [ ] var_2 = type_3 . split ( msg . gettext ( ) ) ; for ( java.lang.string var_3 : var_2 ) { this . var_4 . method_1 ( var_1 , java.lang.string.format ( string_1 , msg . method_2 ( ) . getid ( ) , msg . method_3 ( ) , msg . method_4 ( ) , var_3 ) ) ; } return type_1 . method_5 ( ) ; }
[0]: public void method_1 ( ) { var_1 = false ; try { var_2. method_2 ( ) ; } catch ( java.io.ioexception var_3 ) { throw new type_1 ( string_1, var_3 ) ; } finally { try { var_4. method_3 ( ) ; } catch ( java.lang.throwable var_5 ) { throw new type_1 ( string_2, var_5 ) ; } } }

************

************
tgt: public int method_1 ( java.lang.string var_1 , java.lang.string var_2 , int var_3 , int var_4 , java.util.list < java.util.list < java.lang.string > > data ) { int var_5 = 0 ; for ( int x = var_3 ; x <= var_4 ; x ++ ) { if ( ( data . get ( x ) . get ( int_1 ) . method_2 ( var_1 ) ) && ( data . get ( x ) . get ( int_2 ) . method_2 ( var_2 ) ) ) { var_5 = x ; break ; } } return var_5 ; }
[0]: public long [ ] method_1 ( ) { java.lang.string [ ] list = this. var_1. split ( string_1 ) ; long [ ] var_2 = new long [ list. length ] ; for ( int i = 0 ; i < ( var_2. length ) ; i ++ ) var_2 [ i ] = java.lang.long.parselong ( list [ i ] ) ; return var_2 ; }

************

************
tgt: protected static boolean method_1 ( ) { if ( ( ( var_1 ) && ( var_2 ) ) && ( ( type_1 . method_2 ( ) ) >= ( var_3 ) ) ) { var_1 = false ; var_2 = false ; var_4 . start ( ) ; return true ; } else if ( ( type_1 . method_2 ( ) ) < ( var_3 ) ) { var_2 = true ; } return false ; }
[0]: public boolean method_1 ( java.lang.string var_1 ) { type_1 var_2 = this. var_3. get ( var_1 ) ; if ( var_2 == null ) return false ; type_2 event = new type_2 ( this. var_4, var_2 ) ; type_3. method_2 ( ). method_3 ( ). method_4 ( event ) ; this. var_4 = var_2 ; return true ; }

************

************
tgt: public double method_1 ( ) { double var_1 = 1.0 / ( type_1 . method_2 ( ( ( var_2 [ 1 ] ) * ( var_2 [ int_1 ] ) ) ) ) ; double var_4 = var_1 * int_1 ; return ( ( java.lang.math.random ( ) ) * var_4 ) - var_1 ; }
[0]: public void method_1 ( ) { int var_1 = method_2 ( ) ; type_1. method_3 ( this, ( ( ( string_1 + ( var_2 ) ) + string_2 ) + var_1 ) ) ; type_2 var_3 = var_4 [ var_1 ] ; final java.lang.string number = var_3. method_4 ( ) ; final android.content.context context = method_5 ( ). getcontext ( ) ; var_5 = new type_3 ( context ) ; var_5. method_6 ( number ) ; }

************

************
tgt: public void method_1 ( int id ) { var_1 = new type_1 ( var_2 ) ; var_3 = var_1 . method_2 ( ) ; var_3 . method_3 ( ( ( ( ( ( string_1 + ( var_4 ) ) + string_2 ) + ( var_5 ) ) + string_3 ) + id ) ) ; var_3 . method_4 ( ) ; var_1 . method_4 ( ) ; var_3 = null ; var_1 = null ; }
[0]: public void method_1 ( type_1 var_1, type_2 var_2, boolean var_3 ) { if ( ( ( this. target ) instanceof type_1 ) && ( this. target. method_2 ( ) ) ) { super. method_1 ( this. target, var_4, false ) ; } else { super. method_1 ( null, var_4, false ) ; } }

************

************
tgt: public boolean method_1 ( ) { type_1 var_1 = type_1 . method_2 ( ) ; if ( ( var_2 ) >= ( var_3 ) ) { var_3 = var_2 ; } if ( ( var_3 ) >= ( var_4 ) ) { var_5 = int_1 ; } else if ( ( var_3 ) >= ( var_6 ) ) { var_5 = int_2 ; } else if ( ( var_3 ) >= ( var_7 ) ) { var_5 = 1 ; } return ( var_2 ) >= ( var_7 ) ; }
[0]: public void method_1 ( type_1 var_1, android.view.view view ) { type_2 var_2 = view. method_2 ( ) ; if ( var_2 instanceof type_3 ) { method_3 ( var_1, ( ( type_3 ) ( var_2 ) ) ) ; } else { var_1. set ( 0, 0, 0, 0 ) ; } }

************

************
tgt: public static void method_1 ( java.lang.string name ) { type_1 . method_2 ( ( ( string_1 + name ) + string_2 ) ) ; type_1 . method_3 ( string_3 ) ; type_1 . method_3 ( string_4 ) ; type_1 . method_4 ( ) ; type_1 . method_2 ( string_5 , true ) ; type_1 . method_3 ( name ) ; type_1 . method_4 ( ) ; }
[0]: public type_1 method_1 ( java.lang.string var_1, java.lang.string var_2, java.util.map < java.lang.string, java.lang.string > var_3, boolean var_4 ) { type_2 var_5 = var_6. method_2 ( ) ; for ( java.lang.string var_7 : var_3. method_3 ( ) ) var_5. method_4 ( var_4 ). add ( var_6. method_5 ( var_1, var_2 ). method_6 ( var_3. get ( var_7 ) ) ) ; type_1 var_8 = var_5. get ( ) ; if ( var_8. method_7 ( ) ) { java.lang.system.out.println ( string_1 ) ; } return var_8 ; }

************

************
tgt: static java.io.file method_1 ( java.lang.string var_1 , java.lang.string filename ) { java.io.file file ; java.io.file var_2 = new java.io.file ( filename ) ; if ( ( type_1 . isempty ( var_1 ) ) || ( var_2 . method_2 ( ) ) ) { file = var_2 ; } else { file = new java.io.file ( type_2 . method_3 ( var_1 , filename ) ) ; } return file ; }
[0]: public type_1 method_1 ( java.lang.string args, java.lang.string var_1 ) { try { return new type_2 ( var_2, var_3. method_2 ( ). method_1 ( ( ( var_1 + string_1 ) + args ) ) ). build ( ) ; } catch ( java.lang.exception var_4 ) { var_5. error ( string_2, var_4 ) ; return new type_2 ( var_6, var_4. method_3 ( ), type_3. method_4 ( var_4 ) ). build ( ) ; } }

************

************
tgt: public void method_1 ( ) { type_1 . method_2 ( var_1 , string_1 ) ; var_2 = true ; var_3 . method_3 ( this ) ; if ( var_4 ) { var_5 . method_7 ( ) ; } method_4 ( ) ; method_5 ( ) ; method_6 ( ) ; var_6 . method_8 ( var_7 ) ; }
[0]: private static java.lang.class <? > method_1 ( final java.lang.string var_1, final java.lang.string name ) { try { final java.lang.class <? > var_2 = type_1. method_2 ( name ) ; if ( var_2!= null ) { return var_2 ; } } catch ( type_2 | java.lang.exception var_3 ) { } final java.lang.class <? > var_4 = type_3. method_3 ( var_1, name ) ; if ( var_4!= null ) { return var_4 ; } return null ; }

************

************
tgt: protected void method_1 ( type_1 result ) throws type_2 { type_3 var_1 ; for ( type_4 var_2 : result . method_2 ( ) ) { if ( ! ( var_2 . method_3 ( ) ) ) { continue ; } var_1 = method_4 ( var_2 ) ; this . method_5 ( string_1 , var_2 . getname ( ) ) ; this . method_5 ( string_2 , ( ( var_1 . gettype ( ) ) + ( var_1 . method_6 ( ) ) ) ) ; } }
[0]: protected void method_1 ( java.util.list < java.lang.object > var_1, java.lang.string var_2, type_1 var_3 ) { int index = 1 ; for ( java.lang.object var_4 : var_1 ) { try { var_3. method_2 ( ( index ++ ), var_4 ) ; } catch ( java.lang.exception var_5 ) { throw new type_2 ( ( ( ( ( ( ( ( var_5. method_3 ( ) ) + string_1 ) + index ) + string_2 ) + var_4 ) + string_3 ) + var_2 ), var_5 ) ; } } }

************

************
tgt: public void method_1 ( type_1 var_1 , type_2 var_2 , java.lang.integer var_3 ) throws java.io.ioexception { java.lang.string message = var_2 . method_2 ( var_3 ) ; type_4 var_4 = new type_4 ( ) ; var_4 . method_5 ( new type_5 ( string_2 ) ) ; type_6 var_5 = var_4 . method_6 ( message , var_6 class ) ; var_1 . method_4 ( string_1 , var_5 ) ; }
[0]: protected static type_1 method_1 ( type_2... var_1 ) { java.lang.string var_2 = string_1 ; for ( int i = 0 ; i < ( var_1. length ) ; i ++ ) { if ( i == 0 ) { var_2 = string_2 + ( var_1 [ i ]. getname ( ) ) ; } else { var_2 += string_3 + ( var_1 [ i ]. getname ( ) ) ; } } return type_1. method_2 ( var_2 ) ; }

************

************
tgt: private boolean method_1 ( java.lang.string var_1 ) { int i = 0 ; for ( char c : var_1 . method_2 ( ) ) { if ( c == char_1 ) i ++ ; if ( c == char_2 ) i -- ; if ( i < 0 ) return false ; } return i == 0 ; }
[0]: public int method_1 ( int var_1 ) { int var_2 = ( ( int ) ( ( ( ( ( java.lang.math.pow ( var_1, int_1 ) ) / float_1 ) - ( java.lang.math.pow ( var_1, int_2 ) ) ) + ( ( int_3 * var_1 ) / float_1 ) ) - int_2 ) ) ; return var_2 * ( var_3 ) ; }

************

************
tgt: public type_4 < ? > method_1 ( type_1 var_1 , type_2 var_2 ) { type_3 var_3 = new type_3 ( var_1 , var_2 ) ; type_4 < ? > var_4 = var_5 . method_2 ( var_3 ) ; var_6 . put ( var_2 . getid ( ) , type_5 . method_3 ( var_3 , var_4 ) ) ; return var_4 ; }
[0]: public void method_1 ( type_1 var_1 ) { if ( var_2 ) { return ; } type_2 var_3 = method_2 ( var_4 ) ; type_2 var_5 = method_2 ( var_6 ) ; type_2 var_7 = method_2 ( var_8 ) ; type_2 var_9 = method_2 ( var_10 ) ; java.util.list < type_2 > var_11 = java.util.arrays.aslist ( var_3, var_7, var_9, var_5 ) ; method_3 ( var_12, var_11 ) ; method_3 ( var_13, var_11 ) ; method_4 ( ) ; method_5 ( var_14 ) ; var_2 = true ; }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( new type_2 ( float_1 , ( - float_2 ) ) ) . method_3 ( false ) . method_4 ( false ) . method_5 ( false ) . method_6 ( false ) . method_7 ( false ) . method_8 ( true ) . method_9 ( int_1 ) ; var_2 = var_3 . method_10 ( var_1 ) ; var_4 = new type_3 ( ) ; var_2 . method_11 ( var_4 ) ; }
[0]: public void method_1 ( ) { type_1. settext ( ( string_1 + ( ( start ) - 1 ) ) ) ; var_1. method_2 ( ) ; ( start ) ++ ; method_3 ( int_1 ) ; var_2 = 0 ; var_3 = 0 ; type_2. settext ( null ) ; }

************

************
tgt: public static boolean method_1 ( java.lang.string var_1 , java.lang.string var_2 ) { if ( ( var_1 . length ( ) ) != ( var_2 . length ( ) ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( var_1 . length ( ) ) ; i ++ ) { if ( ( var_1 . method_2 ( i ) ) != ( var_2 . method_2 ( i ) ) ) { count ++ ; } } return count == 1 ; }
[0]: private boolean method_1 ( float x, float y, float var_1, float var_2 ) { return ( type_1. method_2 ( ( ( java.lang.math.pow ( java.lang.math.abs ( ( x - var_1 ) ), int_1 ) ) + ( java.lang.math.pow ( java.lang.math.abs ( ( y - var_2 ) ), int_1 ) ) ) ) ) > ( var_3 ) ; }

************

************
tgt: public void method_1 ( android.view.view var_1 ) { type_1 var_2 = new type_1 ( getactivity ( ) ) ; var_2 . method_2 ( var_4 ) ; type_2 . method_3 ( ) . method_4 ( var_4 ) ; android.content.intent intent = new android.content.intent ( getactivity ( ) , var_5 class ) ; intent . method_5 ( string_1 , string_2 ) ; method_6 ( intent ) ; }
[0]: public boolean method_1 ( type_1 var_1 ) { if ( var_2 ) return false ; double var_3 = type_2. method_2 ( ( ( java.lang.math.pow ( ( ( var_1. x ) - ( x ) ), int_1 ) ) + ( java.lang.math.pow ( ( ( var_1. y ) - ( y ) ), int_1 ) ) ) ) ; return var_3 <= ( ( size ) / ( var_4? int_1 : 1 ) ) ; }

************

************
tgt: public type_1 method_1 ( type_1 var_1 , type_1 var_2 ) { type_1 output = new type_1 ( true ) ; for ( int i = 0 ; i < ( output . method_2 ( ) . length ) ; i ++ ) { if ( ( java.lang.math.random ( ) ) <= ( var_3 ) ) { output . method_3 ( i , var_1 . method_2 ( ) [ i ] ) ; } else { output . method_3 ( i , var_1 . method_2 ( ) [ i ] ) ; } } return output ; }
[0]: public void method_1 ( java.lang.string var_1 ) { if (! ( type_1. isempty ( var_1 ) ) ) { if ( var_2 == ( var_3 ) ) { method_2 ( title, var_4, var_5, var_1, var_6, listener ) ; } else { method_3 ( title, var_4, var_5, var_1, var_6, listener ) ; } } else { method_4 ( var_6, listener, new java.lang.exception ( string_1 ) ) ; } }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { return ( ( ( ( this . x ) <= ( ( var_1 . x ) + ( var_2 ) ) ) && ( ( ( this . x ) + ( this . var_3 ) ) >= ( var_1 . x ) ) ) && ( ( this . y ) <= ( ( var_1 . y ) + ( var_4 ) ) ) ) && ( ( ( this . y ) + ( this . var_5 ) ) >= ( var_1 . y ) ) ; }
[0]: public java.util.arraylist < java.lang.string > method_1 ( ) { java.util.arraylist < java.lang.string > output = new java.util.arraylist < java.lang.string > ( ) ; if ( ( var_1. size ( ) ) == 0 ) { return this. method_2 ( ) ; } else { for ( type_1 var_2 : var_1 ) { output. method_3 ( var_2. method_2 ( ) ) ; } } return output ; } }

************

************
tgt: public void method_1 ( ) { type_1 var_1 = new type_1 ( ) ; var_1 . method_2 ( var_2 ) ; var_3 . method_3 ( var_1 ) ; java.util.arraylist < android.view.view > var_4 = new java.util.arraylist < > ( ) ; var_3 . method_4 ( var_5 ) . method_5 ( var_4 , string_1 , var_6 ) ; method_6 ( var_4 . isempty ( ) ) ; }
[0]: private static int method_1 ( type_1 var_1 ) { if ( var_1 == ( var_2 ) ) return 0 ; if ( var_1 == ( var_3 ) ) return 1 ; if ( var_1 == ( var_4 ) ) return int_1 ; if ( var_1 == null ) return int_2 ; throw new type_2 ( ) ; }

************

************
tgt: private static java.util.list < java.lang.integer > method_1 ( int n ) { java.util.list < java.lang.integer > var_1 = new java.util.arraylist < > ( ) ; if ( n == 1 ) { return var_1 ; } for ( int i = int_1 ; i <= n ; i ++ ) { if ( ( n % i ) == 0 ) { var_1 . add ( i ) ; n /= i ; } } if ( var_1 . isempty ( ) ) { var_1 . add ( n ) ; } return var_1 ; }
[0]: public void method_1 ( android.view.view view ) { switch ( view. getid ( ) ) { case var_1 : method_2 ( 0 ) ; break ; case var_2 : method_2 ( 1 ) ; break ; case var_3 : method_2 ( int_1 ) ; break ; case var_4 : method_2 ( int_2 ) ; break ; } }

************

************
tgt: public void method_1 ( int var_1 , int status , int position ) { if ( ! ( var_2 . isempty ( ) ) ) { type_1 tmp = var_2 . get ( var_1 ) ; tmp . status = status ; tmp . position = position ; var_2 . set ( var_1 , tmp ) ; type_2 . method_2 ( var_3 , ( ( ( string_1 + var_1 ) + string_2 ) + position ) ) ; this . method_3 ( ) ; } }
[0]: private void method_1 ( int x, int var_1 ) { final int var_2 = method_2 ( x, var_1 ) ; final int var_3 = var_2 / ( var_4 ) ; byte var_5 = var_6 ; for ( int y = var_3 ; y >= 0 ; -- y ) { final type_1 var_7 = var_8 [ var_3 ] ; if ( var_7!= null ) { var_5 = var_7. method_1 ( x, var_1, var_5 ) ; } } }

************

************
tgt: public double method_1 ( type_1 n ) { double var_1 = ( this . var_2 . method_2 ( ) ) - ( var_3 . method_2 ( ) ) ; double var_4 = ( this . var_2 . method_3 ( ) ) - ( var_3 . method_3 ( ) ) ; return type_2 . method_4 ( ( ( java.lang.math.pow ( var_1 , int_1 ) ) + ( java.lang.math.pow ( var_4 , int_1 ) ) ) ) ; }
[0]: public int method_1 ( ) { type_1 var_1 = var_2. query ( var_3, null, null, null, null, null, null ) ; var_1. method_2 ( ) ; int var_4 = var_1. getint ( var_1. method_3 ( var_5 ) ) ; if ( var_6 ) type_2. method_4 ( string_1, ( string_2 + ( java.lang.string. method_5 ( var_4 ) ) ) ) ; var_1. method_6 ( ) ; return var_4 ; }

************

************
tgt: private static int [ ] method_1 ( int [ ] data , int start , int end ) { if ( start < end ) { int index = type_1 . method_2 ( data , start , end ) ; type_1 . method_1 ( data , start , index ) ; type_1 . method_1 ( data , ( index + 1 ) , end ) ; } return data ; }
[0]: public boolean method_1 ( type_1 var_1 ) { method_2 ( ). method_3 ( var_2, var_1 ) ; type_2 item = var_1. method_4 ( var_3 ) ; boolean var_4 = type_3. method_5 ( var_5. getid ( ) ) ; if ( var_4 ) { item. method_6 ( method_7 ( ). method_8 ( var_6, null ) ) ; } else { item. method_6 ( method_7 ( ). method_8 ( var_7, null ) ) ; } return true ; }

************

************
tgt: public boolean method_1 ( type_1 var_1 ) { var_2 = false ; var_3 = var_1 . method_2 ( x ) ; var_4 = var_1 . method_3 ( x ) ; var_5 = var_1 . method_2 ( y ) ; var_6 = var_1 . method_3 ( y ) ; if ( ( var_4 ) != ( var_6 ) ) { var_2 |= var_1 . method_5 ( x , var_6 ) ; } if ( ( var_3 ) != ( var_5 ) ) { var_2 |= var_1 . method_6 ( x , var_5 ) ; } return var_2 ; }
[0]: public void method_1 ( ) { type_1. method_2 ( ). method_3 ( type_2. method_4 ( ) ) ; type_1. method_2 ( ). method_5 ( var_1 ) ; type_3. method_2 ( this ). add ( new type_4 ( type_1. method_2 ( ) ) ) ; type_1. method_2 ( ). method_6 ( ) ; }

************
